[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/845569762",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-845569762",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 845569762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NTU2OTc2Mg==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-21T00:32:10Z",
    "updated_at": "2021-05-21T00:32:10Z",
    "author_association": "MEMBER",
    "body": "Note that there will be a followup PR to this which introduces a struct that encapsulates the selection. This struct will also do the waste calculation which will remove the ugly tuples stuff that is currently done to allow for the waste calculation.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/845569762/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/845633808",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-845633808",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 845633808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NTYzMzgwOA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-21T03:52:39Z",
    "updated_at": "2021-08-28T16:02:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22100](https://github.com/bitcoin/bitcoin/pull/22100) (refactor: Clean up new wallet spend, receive files added #21207 by ryanofsky)\n* [#22019](https://github.com/bitcoin/bitcoin/pull/22019) (wallet: Introduce SelectionResult for encapsulating a coin selection solution by achow101)\n* [#21206](https://github.com/bitcoin/bitcoin/pull/21206) (refactor: Make CWalletTx sync state type-safe by ryanofsky)\n* [#17526](https://github.com/bitcoin/bitcoin/pull/17526) (Use Single Random Draw In addition to knapsack as coin selection fallback by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/845633808/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/847987209",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-847987209",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 847987209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0Nzk4NzIwOQ==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-25T15:49:44Z",
    "updated_at": "2021-05-25T15:49:44Z",
    "author_association": "MEMBER",
    "body": "With #17331 now merged, this is ready for review.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/847987209/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/853384998",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-853384998",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 853384998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MzM4NDk5OA==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-02T21:10:54Z",
    "updated_at": "2021-06-02T21:10:54Z",
    "author_association": "MEMBER",
    "body": "> Does this introduce any behavior changes besides the long-term feerate change?\r\n>\r\n> I would think not, as the BNB search always has waste 0, so if it works, it will still always be chosen?\r\n\r\nThere is a behavior change as BnB can non-zero waste. Part of the waste is the excess thrown away to fees. Because BnB uses a matching window, it is possible for it to have an excess which is included as part of the waste calculation. Additionally, the difference between the fee and the long term fee is usually non-zero, so the waste is also usually non-zero.\r\n\r\nThe main result of this behavior change is that when target feerate is less than the long term feerate, we will choose the result that consolidates more. This is because the difference between the fee and the long term fee will be negative which generally makes the waste negative. When you have more inputs, the waste will be more negative, and so the most negative solution is used. When the target feerate is greater than the long term feerate, then we will choose the result that pays the least fees. This is because the difference between the fee and the long term fee is positive, so the waste is generally positive. With less inputs, both the waste and fees will be lower, so we end up choosing the solution with lower fees.\r\n\r\nThis strategy does not necessarily mean that one algorithm will tend to be chosen over another, but rather as a standard way to measure how \"good\" they are.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/853384998/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/853386169",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-853386169",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 853386169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MzM4NjE2OQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-02T21:13:11Z",
    "updated_at": "2021-06-02T21:13:11Z",
    "author_association": "MEMBER",
    "body": "@achow101 Oh, of course. Thanks for reminding me on the point of the waste metric.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/853386169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/859741685",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-859741685",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 859741685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1OTc0MTY4NQ==",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?u=d924616c3b45bdda9c3b78d1697f1fe6a92b49c5&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-11T17:46:36Z",
    "updated_at": "2021-06-11T17:46:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "> and choose the one which has the least change. In the event that both find a solution with the same change, we choose the one that spends more inputs.\r\n\r\nIs it possible that you meant \"least waste\" and \"same waste\" instead of change?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/859741685/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/859746007",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-859746007",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 859746007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1OTc0NjAwNw==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-11T17:54:54Z",
    "updated_at": "2021-06-11T17:54:54Z",
    "author_association": "MEMBER",
    "body": "> > and choose the one which has the least change. In the event that both find a solution with the same change, we choose the one that spends more inputs.\r\n> \r\n> Is it possible that you meant \"least waste\" and \"same waste\" instead of change?\r\n\r\nYes",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/859746007/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/879822963",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-879822963",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 879822963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3OTgyMjk2Mw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-14T11:45:44Z",
    "updated_at": "2021-07-14T11:45:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I'm woking on a functional test to verify the overall flow\r\n\r\nThis reminds me to beg for review of #22155. Functional tests for coin selection are great but for some parts unit tests are more convenient, so I really want to add this wallet spend test module and get some tests in there.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/879822963/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/898100163",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-898100163",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 898100163,
    "node_id": "IC_kwDOABII5841h-vD",
    "user": {
      "login": "GeneFerneau",
      "id": 80422284,
      "node_id": "MDQ6VXNlcjgwNDIyMjg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/80422284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GeneFerneau",
      "html_url": "https://github.com/GeneFerneau",
      "followers_url": "https://api.github.com/users/GeneFerneau/followers",
      "following_url": "https://api.github.com/users/GeneFerneau/following{/other_user}",
      "gists_url": "https://api.github.com/users/GeneFerneau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GeneFerneau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GeneFerneau/subscriptions",
      "organizations_url": "https://api.github.com/users/GeneFerneau/orgs",
      "repos_url": "https://api.github.com/users/GeneFerneau/repos",
      "events_url": "https://api.github.com/users/GeneFerneau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GeneFerneau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-13T01:56:06Z",
    "updated_at": "2021-08-13T01:56:06Z",
    "author_association": "NONE",
    "body": "Approach ACK [1ce0c97](https://github.com/bitcoin/bitcoin/pull/22009/commits/1ce0c97c7a531070328d4d742a32b31e1e0bdce5)\r\n\r\nDid a manual review, everything looks good. Tangentially, doing a deeper review of `KnapsackSolver`, but use looks consistent with other uses across the codebase.\r\n\r\nStill running tests locally, and trying to think of more edge cases. The existing tests look pretty throrough.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/898100163/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/900575727",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-900575727",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 900575727,
    "node_id": "IC_kwDOABII5841rbHv",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-17T19:34:39Z",
    "updated_at": "2021-08-17T19:34:39Z",
    "author_association": "MEMBER",
    "body": "Also rebased to pick up #22686",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/900575727/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/901326404",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-901326404",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 901326404,
    "node_id": "IC_kwDOABII5841uSZE",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?u=d924616c3b45bdda9c3b78d1697f1fe6a92b49c5&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-18T18:14:13Z",
    "updated_at": "2021-08-18T18:14:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK 15fbe72ede62b9a3686fc000381c1d0fa1807815",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/901326404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/901766747",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-901766747",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 901766747,
    "node_id": "IC_kwDOABII5841v95b",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-19T09:39:54Z",
    "updated_at": "2021-08-19T09:39:54Z",
    "author_association": "MEMBER",
    "body": ">and choose the one which has the least change. In the event that both find a solution with the same change, we choose the one that spends more inputs.\r\n\r\n> Is it possible that you meant \"least waste\" and \"same waste\" instead of change?\r\n\r\n>Yes\r\n\r\nCould you please update the OP with accurate language? I was struggling to understand until I read everything here.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/901766747/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/901771420",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-901771420",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 901771420,
    "node_id": "IC_kwDOABII5841v_Cc",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-19T09:46:45Z",
    "updated_at": "2021-08-19T09:46:45Z",
    "author_association": "MEMBER",
    "body": "concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/901771420/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/902038925",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-902038925",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 902038925,
    "node_id": "IC_kwDOABII5841xAWN",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-19T16:06:16Z",
    "updated_at": "2021-08-19T16:06:16Z",
    "author_association": "MEMBER",
    "body": "Updated OP",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/902038925/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/902812512",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-902812512",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 902812512,
    "node_id": "IC_kwDOABII5841z9Ng",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?u=d924616c3b45bdda9c3b78d1697f1fe6a92b49c5&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-20T16:28:47Z",
    "updated_at": "2021-08-20T16:28:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@meshcollider: I think there are currently three (Knapsack, BnB, and SRD), and it might be interesting to add a couple more. E.g. smallest-first could be an interesting strategy to create transactions at `minRelayTxFee`, or at very high feerates, largest-first could perhaps be preferred if it's smaller.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/902812512/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/902910839",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-902910839",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 902910839,
    "node_id": "IC_kwDOABII58410VN3",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?u=d924616c3b45bdda9c3b78d1697f1fe6a92b49c5&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-20T19:31:27Z",
    "updated_at": "2021-08-20T19:31:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "As a follow-up to my comment about the constructor of `CInputCoin` initializing `effective_value` with `nValue` and the subsequent update of the `effective_value` to the correct magnitude: I ran the functional tests after commenting out the line that initializes `effective_value` in the `CInputCoin` with Valgrind and all tests passed, so I think that it might be possible to make `CInputCoin` const and thus force setting the correct value from the get-go. What do you think about that?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/902910839/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/902938857",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-902938857",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 902938857,
    "node_id": "IC_kwDOABII58410cDp",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-20T20:26:26Z",
    "updated_at": "2021-08-20T20:26:26Z",
    "author_association": "MEMBER",
    "body": "@Xekyo I'm not quite sure what you mean. The members of `CInputCoin` can't be const because the constructor has some logic before they can be set.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/902938857/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903092328",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-903092328",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 903092328,
    "node_id": "IC_kwDOABII58411Bho",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-21T09:54:59Z",
    "updated_at": "2021-08-21T09:55:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK 1858364 per `git range-diff fdd80b0a5 1ce0c97 1858364`. The only changes are related to comments in the PR",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903092328/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903831868",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-903831868",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 903831868,
    "node_id": "IC_kwDOABII584132E8",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?u=d924616c3b45bdda9c3b78d1697f1fe6a92b49c5&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-23T14:35:46Z",
    "updated_at": "2021-08-23T14:35:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "As discussed, let's leave it for a follow-up PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903831868/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/904922818",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-904922818",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 904922818,
    "node_id": "IC_kwDOABII58418AbC",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-24T19:41:29Z",
    "updated_at": "2021-08-24T19:41:29Z",
    "author_association": "MEMBER",
    "body": "Had to rebase due to a hidden merge conflict.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/904922818/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/904942533",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-904942533",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 904942533,
    "node_id": "IC_kwDOABII58418FPF",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?u=03240c7cca7b55e5b9239eeab7a5914663a42b91&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-24T20:13:22Z",
    "updated_at": "2021-08-24T20:13:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Also this PR sets the long term feerate to 10 sat/vb rather than using the 1008 block estimate.\r\n\r\nInitially this didn't look like the right approach but then found this option is configurable.\r\n\r\nAccording to this comment it was chosen arbitrarily: https://github.com/bitcoin/bitcoin/pull/22009#discussion_r692371546\r\n\r\nAccording to this comment Murch suggested it based on some analysis : https://github.com/bitcoin/bitcoin/pull/22009#discussion_r647594412  \r\n\r\n1. Can you share the analysis used for this value?\r\n2. How does this affect Coin Selection?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/904942533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/905753431",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-905753431",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 905753431,
    "node_id": "IC_kwDOABII5841_LNX",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?u=d924616c3b45bdda9c3b78d1697f1fe6a92b49c5&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-25T17:59:39Z",
    "updated_at": "2021-08-25T17:59:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I picked it arbitrarily based on staring at a lot of transactions, and then kept it because it produced satisfactory results. I didn't experiment further with other values, so there may be better ones, and I'd expect that the optimal value would be highly dependent on a wallet's usage pattern.\r\n\r\nI wrote a bit about the results here: https://blog.bitgo.com/utxo-management-for-enterprise-wallets-5357dad08dd1\r\n\r\n> Even after the funds are consolidated, the wallet achieves an average of 58.5% changeless transactions across three months and 35k transactions for transaction fee savings of about 20%. **The feerate sensitive unspent selection results in the average input set at low feerates to be about 1.4 times the size of input sets at higher feerates.** Given about 32% of the transactions happening at low feerates, almost 45% of the wallet\u2019s input data occurs at low feerates. This shift to spending more UTXOs at lower feerates reduces the overall fee expenditures of the wallet by at least 13%.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/905753431/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/906467195",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-906467195",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 906467195,
    "node_id": "IC_kwDOABII5842B5d7",
    "user": {
      "login": "Talkless",
      "id": 292191,
      "node_id": "MDQ6VXNlcjI5MjE5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/292191?u=d9debc4e87d0036b59d7d56a02f7f0728a8a76e2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Talkless",
      "html_url": "https://github.com/Talkless",
      "followers_url": "https://api.github.com/users/Talkless/followers",
      "following_url": "https://api.github.com/users/Talkless/following{/other_user}",
      "gists_url": "https://api.github.com/users/Talkless/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Talkless/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Talkless/subscriptions",
      "organizations_url": "https://api.github.com/users/Talkless/orgs",
      "repos_url": "https://api.github.com/users/Talkless/repos",
      "events_url": "https://api.github.com/users/Talkless/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Talkless/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-26T14:33:04Z",
    "updated_at": "2021-08-26T14:33:04Z",
    "author_association": "NONE",
    "body": "Code review ACK 21566d03d1131f919df65efae7212c18f657f0fd. Did build on Debian Sid, ran unit and (non-extended) functional tests, but did NOT manually tested this code.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/906467195/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/909683835",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-909683835",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 909683835,
    "node_id": "IC_kwDOABII5842OKx7",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?u=d924616c3b45bdda9c3b78d1697f1fe6a92b49c5&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-31T22:13:44Z",
    "updated_at": "2021-08-31T22:13:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "reACK 86beee0 via git range-diff fe47558...86beee0\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/909683835/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/909873469",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-909873469",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
    "id": 909873469,
    "node_id": "IC_kwDOABII5842O5E9",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-01T04:28:56Z",
    "updated_at": "2021-09-01T04:28:56Z",
    "author_association": "MEMBER",
    "body": "re-utACK 86beee05795216738f51fa744539336503c26fd9",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/909873469/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643151092",
    "pull_request_review_id": 673138660,
    "id": 643151092,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MzE1MTA5Mg==",
    "diff_hunk": "@@ -341,3 +341,28 @@ CAmount OutputGroup::GetSelectionAmount() const\n {\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n+\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target)\n+{\n+    // If the result is empty, then selection failed. Don't use this one, so set waste to very high\n+    if (inputs.empty()) {\n+        return MAX_MONEY;\n+    }\n+\n+    // Always consider the cost of spending an input now vs in the future.\n+    CAmount waste = 0;\n+    CAmount selected_value = 0;\n+    for (const CInputCoin& coin : inputs) {\n+        waste += coin.m_fee - coin.m_long_term_fee;\n+        selected_value += coin.txout.nValue;\n+    }\n+\n+    // Consider the cost of making change and spending it in the future\n+    // If we aren't making change, the caller should've set change_cost to 0\n+    waste += change_cost;\n+\n+    // When we are not making change (change_cost  == 0), consider the excess we are throwing away to fees\n+    waste += selected_value - target;",
    "path": "src/wallet/coinselection.cpp",
    "position": null,
    "original_position": 25,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "a92c5611ad6661a8467371422da6a4b5a17366d7",
    "user": {
      "login": "OttoAllmendinger",
      "id": 283533,
      "node_id": "MDQ6VXNlcjI4MzUzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/283533?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OttoAllmendinger",
      "html_url": "https://github.com/OttoAllmendinger",
      "followers_url": "https://api.github.com/users/OttoAllmendinger/followers",
      "following_url": "https://api.github.com/users/OttoAllmendinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/OttoAllmendinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OttoAllmendinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OttoAllmendinger/subscriptions",
      "organizations_url": "https://api.github.com/users/OttoAllmendinger/orgs",
      "repos_url": "https://api.github.com/users/OttoAllmendinger/repos",
      "events_url": "https://api.github.com/users/OttoAllmendinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OttoAllmendinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\nif (change_cost == 0) {\r\n  ..\r\n}\r\n```",
    "created_at": "2021-06-01T14:23:08Z",
    "updated_at": "2021-06-01T14:23:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r643151092",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643151092"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r643151092"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643151092/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 364,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 365,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643151389",
    "pull_request_review_id": 673138660,
    "id": 643151389,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MzE1MTM4OQ==",
    "diff_hunk": "@@ -341,3 +341,28 @@ CAmount OutputGroup::GetSelectionAmount() const\n {\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n+\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target)\n+{\n+    // If the result is empty, then selection failed. Don't use this one, so set waste to very high\n+    if (inputs.empty()) {\n+        return MAX_MONEY;\n+    }\n+\n+    // Always consider the cost of spending an input now vs in the future.\n+    CAmount waste = 0;\n+    CAmount selected_value = 0;\n+    for (const CInputCoin& coin : inputs) {\n+        waste += coin.m_fee - coin.m_long_term_fee;\n+        selected_value += coin.txout.nValue;\n+    }\n+\n+    // Consider the cost of making change and spending it in the future\n+    // If we aren't making change, the caller should've set change_cost to 0\n+    waste += change_cost;\n+\n+    // When we are not making change (change_cost  == 0), consider the excess we are throwing away to fees\n+    waste += selected_value - target;\n+\n+    return target;",
    "path": "src/wallet/coinselection.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "a92c5611ad6661a8467371422da6a4b5a17366d7",
    "user": {
      "login": "OttoAllmendinger",
      "id": 283533,
      "node_id": "MDQ6VXNlcjI4MzUzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/283533?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OttoAllmendinger",
      "html_url": "https://github.com/OttoAllmendinger",
      "followers_url": "https://api.github.com/users/OttoAllmendinger/followers",
      "following_url": "https://api.github.com/users/OttoAllmendinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/OttoAllmendinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OttoAllmendinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OttoAllmendinger/subscriptions",
      "organizations_url": "https://api.github.com/users/OttoAllmendinger/orgs",
      "repos_url": "https://api.github.com/users/OttoAllmendinger/repos",
      "events_url": "https://api.github.com/users/OttoAllmendinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OttoAllmendinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`return waste;`",
    "created_at": "2021-06-01T14:23:25Z",
    "updated_at": "2021-06-01T14:23:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r643151389",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643151389"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r643151389"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643151389/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 367,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643325871",
    "pull_request_review_id": 673388146,
    "id": 643325871,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MzMyNTg3MQ==",
    "diff_hunk": "@@ -341,3 +341,28 @@ CAmount OutputGroup::GetSelectionAmount() const\n {\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n+\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target)\n+{\n+    // If the result is empty, then selection failed. Don't use this one, so set waste to very high\n+    if (inputs.empty()) {\n+        return MAX_MONEY;\n+    }\n+\n+    // Always consider the cost of spending an input now vs in the future.\n+    CAmount waste = 0;\n+    CAmount selected_value = 0;\n+    for (const CInputCoin& coin : inputs) {\n+        waste += coin.m_fee - coin.m_long_term_fee;\n+        selected_value += coin.txout.nValue;\n+    }\n+\n+    // Consider the cost of making change and spending it in the future\n+    // If we aren't making change, the caller should've set change_cost to 0\n+    waste += change_cost;\n+\n+    // When we are not making change (change_cost  == 0), consider the excess we are throwing away to fees\n+    waste += selected_value - target;",
    "path": "src/wallet/coinselection.cpp",
    "position": null,
    "original_position": 25,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "a92c5611ad6661a8467371422da6a4b5a17366d7",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed.",
    "created_at": "2021-06-01T17:15:10Z",
    "updated_at": "2021-06-01T17:15:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r643325871",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643325871"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r643325871"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643325871/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 364,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 365,
    "side": "RIGHT",
    "in_reply_to_id": 643151092
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643325955",
    "pull_request_review_id": 673388199,
    "id": 643325955,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MzMyNTk1NQ==",
    "diff_hunk": "@@ -341,3 +341,28 @@ CAmount OutputGroup::GetSelectionAmount() const\n {\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n+\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target)\n+{\n+    // If the result is empty, then selection failed. Don't use this one, so set waste to very high\n+    if (inputs.empty()) {\n+        return MAX_MONEY;\n+    }\n+\n+    // Always consider the cost of spending an input now vs in the future.\n+    CAmount waste = 0;\n+    CAmount selected_value = 0;\n+    for (const CInputCoin& coin : inputs) {\n+        waste += coin.m_fee - coin.m_long_term_fee;\n+        selected_value += coin.txout.nValue;\n+    }\n+\n+    // Consider the cost of making change and spending it in the future\n+    // If we aren't making change, the caller should've set change_cost to 0\n+    waste += change_cost;\n+\n+    // When we are not making change (change_cost  == 0), consider the excess we are throwing away to fees\n+    waste += selected_value - target;\n+\n+    return target;",
    "path": "src/wallet/coinselection.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "a92c5611ad6661a8467371422da6a4b5a17366d7",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed.",
    "created_at": "2021-06-01T17:15:14Z",
    "updated_at": "2021-06-01T17:15:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r643325955",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643325955"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r643325955"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643325955/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 367,
    "side": "RIGHT",
    "in_reply_to_id": 643151389
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644254194",
    "pull_request_review_id": 674595615,
    "id": 644254194,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDI1NDE5NA==",
    "diff_hunk": "@@ -357,17 +357,49 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: selected inputs, selected value, cost of change, target\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<std::set<CInputCoin>, CAmount, CAmount, CAmount>> results;\n \n     // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n     std::vector<OutputGroup> positive_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n-    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, setCoinsRet, nValueRet)) {\n-        return true;\n+    std::set<CInputCoin> bnb_coins;\n+    CAmount bnb_value;\n+    bool bnb_ret = SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, bnb_coins, bnb_value);\n+    if (bnb_ret) {\n+        results.push_back(std::make_tuple(bnb_coins, bnb_value, /* cost of change */ CAmount(0), nTargetValue));",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "e09aab121dc9251dd9236f75f83eb4353c9b72ee",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You can std::move `bnb_coins` here to avoid a copy.",
    "created_at": "2021-06-02T19:16:52Z",
    "updated_at": "2021-06-02T19:22:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r644254194",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644254194"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r644254194"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644254194/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 371,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644254456",
    "pull_request_review_id": 674595615,
    "id": 644254456,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDI1NDQ1Ng==",
    "diff_hunk": "@@ -357,17 +357,49 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: selected inputs, selected value, cost of change, target\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<std::set<CInputCoin>, CAmount, CAmount, CAmount>> results;\n \n     // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n     std::vector<OutputGroup> positive_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n-    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, setCoinsRet, nValueRet)) {\n-        return true;\n+    std::set<CInputCoin> bnb_coins;\n+    CAmount bnb_value;\n+    bool bnb_ret = SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, bnb_coins, bnb_value);\n+    if (bnb_ret) {\n+        results.push_back(std::make_tuple(bnb_coins, bnb_value, /* cost of change */ CAmount(0), nTargetValue));\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, false /* positive_only */);\n     // While nTargetValue includes the transaction fees for non-input things, it does not include the fee for creating a change output.\n     // So we need to include that for KnapsackSolver as well, as we are expecting to create a change output.\n-    return KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, setCoinsRet, nValueRet);\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, knapsack_coins, knapsack_value);\n+    if (knapsack_ret) {\n+        results.push_back(std::make_tuple(knapsack_coins, knapsack_value, coin_selection_params.m_cost_of_change, nTargetValue + coin_selection_params.m_change_fee));",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "e09aab121dc9251dd9236f75f83eb4353c9b72ee",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You can std::move `knapsack_coins` here to avoid a copy.",
    "created_at": "2021-06-02T19:17:18Z",
    "updated_at": "2021-06-02T19:22:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r644254456",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644254456"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r644254456"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644254456/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 382,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644255181",
    "pull_request_review_id": 674595615,
    "id": 644255181,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDI1NTE4MQ==",
    "diff_hunk": "@@ -357,17 +357,49 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: selected inputs, selected value, cost of change, target\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<std::set<CInputCoin>, CAmount, CAmount, CAmount>> results;\n \n     // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n     std::vector<OutputGroup> positive_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n-    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, setCoinsRet, nValueRet)) {\n-        return true;\n+    std::set<CInputCoin> bnb_coins;\n+    CAmount bnb_value;\n+    bool bnb_ret = SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, bnb_coins, bnb_value);\n+    if (bnb_ret) {\n+        results.push_back(std::make_tuple(bnb_coins, bnb_value, /* cost of change */ CAmount(0), nTargetValue));\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, false /* positive_only */);\n     // While nTargetValue includes the transaction fees for non-input things, it does not include the fee for creating a change output.\n     // So we need to include that for KnapsackSolver as well, as we are expecting to create a change output.\n-    return KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, setCoinsRet, nValueRet);\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, knapsack_coins, knapsack_value);\n+    if (knapsack_ret) {\n+        results.push_back(std::make_tuple(knapsack_coins, knapsack_value, coin_selection_params.m_cost_of_change, nTargetValue + coin_selection_params.m_change_fee));\n+    }\n+\n+    if (results.size() == 0) {\n+        // No solution found\n+        return false;\n+    }\n+\n+    // Choose the result with the best waste\n+    CAmount best_waste = MAX_MONEY;\n+    for (const auto& result : results) {\n+        const auto& selected_inputs = std::get<0>(result);\n+        CAmount this_waste = GetSelectionWaste(selected_inputs, std::get<2>(result), std::get<3>(result));\n+        // Update the best waste either when this waste is better, or when the waste is the same and this result has more inputs\n+        if (this_waste < best_waste || (this_waste == best_waste && selected_inputs.size() > setCoinsRet.size())) {\n+            setCoinsRet = selected_inputs;",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 44,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "e09aab121dc9251dd9236f75f83eb4353c9b72ee",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's slightly inefficient to copy the selected inputs into setCoinsRet inside the loop itself, as it may result in multiple useless copies.\r\n\r\nAs an alternative, you could create a vector of e.g. `(CAmount waste, std::ref<std::set<CInputCoins>> inputs)` pairs by `std::transform`ing the `results` vector, and then returning `*std::min_element(that vector).second`.",
    "created_at": "2021-06-02T19:18:33Z",
    "updated_at": "2021-06-02T20:06:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r644255181",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644255181"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r644255181"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644255181/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 397,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644355566",
    "pull_request_review_id": 674726323,
    "id": 644355566,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDM1NTU2Ng==",
    "diff_hunk": "@@ -357,17 +357,49 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: selected inputs, selected value, cost of change, target\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<std::set<CInputCoin>, CAmount, CAmount, CAmount>> results;\n \n     // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n     std::vector<OutputGroup> positive_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n-    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, setCoinsRet, nValueRet)) {\n-        return true;\n+    std::set<CInputCoin> bnb_coins;\n+    CAmount bnb_value;\n+    bool bnb_ret = SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, bnb_coins, bnb_value);\n+    if (bnb_ret) {\n+        results.push_back(std::make_tuple(bnb_coins, bnb_value, /* cost of change */ CAmount(0), nTargetValue));",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "e09aab121dc9251dd9236f75f83eb4353c9b72ee",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-06-02T22:16:13Z",
    "updated_at": "2021-06-02T22:16:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r644355566",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644355566"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r644355566"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644355566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 371,
    "side": "RIGHT",
    "in_reply_to_id": 644254194
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644355601",
    "pull_request_review_id": 674726369,
    "id": 644355601,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDM1NTYwMQ==",
    "diff_hunk": "@@ -357,17 +357,49 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: selected inputs, selected value, cost of change, target\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<std::set<CInputCoin>, CAmount, CAmount, CAmount>> results;\n \n     // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n     std::vector<OutputGroup> positive_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n-    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, setCoinsRet, nValueRet)) {\n-        return true;\n+    std::set<CInputCoin> bnb_coins;\n+    CAmount bnb_value;\n+    bool bnb_ret = SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, bnb_coins, bnb_value);\n+    if (bnb_ret) {\n+        results.push_back(std::make_tuple(bnb_coins, bnb_value, /* cost of change */ CAmount(0), nTargetValue));\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, false /* positive_only */);\n     // While nTargetValue includes the transaction fees for non-input things, it does not include the fee for creating a change output.\n     // So we need to include that for KnapsackSolver as well, as we are expecting to create a change output.\n-    return KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, setCoinsRet, nValueRet);\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, knapsack_coins, knapsack_value);\n+    if (knapsack_ret) {\n+        results.push_back(std::make_tuple(knapsack_coins, knapsack_value, coin_selection_params.m_cost_of_change, nTargetValue + coin_selection_params.m_change_fee));",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "e09aab121dc9251dd9236f75f83eb4353c9b72ee",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-06-02T22:16:18Z",
    "updated_at": "2021-06-02T22:16:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r644355601",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644355601"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r644355601"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644355601/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 382,
    "side": "RIGHT",
    "in_reply_to_id": 644254456
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644356278",
    "pull_request_review_id": 674727177,
    "id": 644356278,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDM1NjI3OA==",
    "diff_hunk": "@@ -357,17 +357,49 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: selected inputs, selected value, cost of change, target\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<std::set<CInputCoin>, CAmount, CAmount, CAmount>> results;\n \n     // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n     std::vector<OutputGroup> positive_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n-    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, setCoinsRet, nValueRet)) {\n-        return true;\n+    std::set<CInputCoin> bnb_coins;\n+    CAmount bnb_value;\n+    bool bnb_ret = SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, bnb_coins, bnb_value);\n+    if (bnb_ret) {\n+        results.push_back(std::make_tuple(bnb_coins, bnb_value, /* cost of change */ CAmount(0), nTargetValue));\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, false /* positive_only */);\n     // While nTargetValue includes the transaction fees for non-input things, it does not include the fee for creating a change output.\n     // So we need to include that for KnapsackSolver as well, as we are expecting to create a change output.\n-    return KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, setCoinsRet, nValueRet);\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, knapsack_coins, knapsack_value);\n+    if (knapsack_ret) {\n+        results.push_back(std::make_tuple(knapsack_coins, knapsack_value, coin_selection_params.m_cost_of_change, nTargetValue + coin_selection_params.m_change_fee));\n+    }\n+\n+    if (results.size() == 0) {\n+        // No solution found\n+        return false;\n+    }\n+\n+    // Choose the result with the best waste\n+    CAmount best_waste = MAX_MONEY;\n+    for (const auto& result : results) {\n+        const auto& selected_inputs = std::get<0>(result);\n+        CAmount this_waste = GetSelectionWaste(selected_inputs, std::get<2>(result), std::get<3>(result));\n+        // Update the best waste either when this waste is better, or when the waste is the same and this result has more inputs\n+        if (this_waste < best_waste || (this_waste == best_waste && selected_inputs.size() > setCoinsRet.size())) {\n+            setCoinsRet = selected_inputs;",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 44,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "e09aab121dc9251dd9236f75f83eb4353c9b72ee",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Based on this suggestion, I've changed this to do the waste calculation at the time of insertion into `results`. This eliminates the need for a `std::transform`. Then `std::min_element` is used to get the least waste element.",
    "created_at": "2021-06-02T22:17:40Z",
    "updated_at": "2021-06-02T22:17:40Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r644356278",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644356278"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r644356278"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644356278/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 397,
    "side": "RIGHT",
    "in_reply_to_id": 644255181
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/647439015",
    "pull_request_review_id": 678515511,
    "id": 647439015,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NzQzOTAxNQ==",
    "diff_hunk": "@@ -672,10 +698,9 @@ bool CWallet::CreateTransactionInternal(\n                 return false;\n             }\n \n-            // Get long term estimate\n-            CCoinControl cc_temp;\n-            cc_temp.m_confirm_target = chain().estimateMaxBlocks();\n-            coin_selection_params.m_long_term_feerate = GetMinimumFeeRate(*this, cc_temp, nullptr);\n+            // Get the long term fee estimate. This estimate is really the fee rate at which we are still willing to consolidate inputs.\n+            // By default, we use 10 sat/vbyte.\n+            coin_selection_params.m_long_term_feerate = CFeeRate(10, COIN); // Use 10 sat per vbyte",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 57,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "f872c232ffe90a300718b785b5c29b956a427ee4",
    "user": {
      "login": "jarolrod",
      "id": 23396902,
      "node_id": "MDQ6VXNlcjIzMzk2OTAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/23396902?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jarolrod",
      "html_url": "https://github.com/jarolrod",
      "followers_url": "https://api.github.com/users/jarolrod/followers",
      "following_url": "https://api.github.com/users/jarolrod/following{/other_user}",
      "gists_url": "https://api.github.com/users/jarolrod/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jarolrod/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jarolrod/subscriptions",
      "organizations_url": "https://api.github.com/users/jarolrod/orgs",
      "repos_url": "https://api.github.com/users/jarolrod/repos",
      "events_url": "https://api.github.com/users/jarolrod/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jarolrod/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What's the rationale behind `10 sat per vbyte`? Why that number?\r\n\r\nSeems a bit scary to hard-code a value here.",
    "created_at": "2021-06-08T13:26:35Z",
    "updated_at": "2021-06-08T13:29:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r647439015",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/647439015"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r647439015"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/647439015/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 703,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/647439398",
    "pull_request_review_id": 678515511,
    "id": 647439398,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NzQzOTM5OA==",
    "diff_hunk": "@@ -357,17 +357,43 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: calculated waste, selected inputs, selected value\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<CAmount, std::set<CInputCoin>, CAmount>> results;\n \n     // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n     std::vector<OutputGroup> positive_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n-    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, setCoinsRet, nValueRet)) {\n-        return true;\n+    std::set<CInputCoin> bnb_coins;\n+    CAmount bnb_value;\n+    bool bnb_ret = SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, bnb_coins, bnb_value);\n+    if (bnb_ret) {\n+        results.push_back(std::make_tuple(GetSelectionWaste(bnb_coins, /* cost of change */ CAmount(0), nTargetValue), std::move(bnb_coins), bnb_value));\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, false /* positive_only */);\n     // While nTargetValue includes the transaction fees for non-input things, it does not include the fee for creating a change output.\n     // So we need to include that for KnapsackSolver as well, as we are expecting to create a change output.\n-    return KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, setCoinsRet, nValueRet);\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, knapsack_coins, knapsack_value);\n+    if (knapsack_ret) {\n+        results.push_back(std::make_tuple(GetSelectionWaste(knapsack_coins, coin_selection_params.m_cost_of_change, nTargetValue + coin_selection_params.m_change_fee), std::move(knapsack_coins), knapsack_value));\n+    }\n+\n+    if (results.size() == 0) {\n+        // No solution found\n+        return false;\n+    }\n+\n+    // Choose the result with the least waste\n+    const auto& best_result = std::min_element(results.begin(), results.end(), [](const auto& a, const auto& b){",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 38,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "f872c232ffe90a300718b785b5c29b956a427ee4",
    "user": {
      "login": "jarolrod",
      "id": 23396902,
      "node_id": "MDQ6VXNlcjIzMzk2OTAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/23396902?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jarolrod",
      "html_url": "https://github.com/jarolrod",
      "followers_url": "https://api.github.com/users/jarolrod/followers",
      "following_url": "https://api.github.com/users/jarolrod/following{/other_user}",
      "gists_url": "https://api.github.com/users/jarolrod/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jarolrod/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jarolrod/subscriptions",
      "organizations_url": "https://api.github.com/users/jarolrod/orgs",
      "repos_url": "https://api.github.com/users/jarolrod/repos",
      "events_url": "https://api.github.com/users/jarolrod/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jarolrod/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit\r\n```suggestion\r\n    const auto& best_result = std::min_element(results.begin(), results.end(), [](const auto& a, const auto& b) {\r\n```",
    "created_at": "2021-06-08T13:26:57Z",
    "updated_at": "2021-06-08T13:29:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r647439398",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/647439398"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r647439398"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/647439398/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 390,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/647594412",
    "pull_request_review_id": 678726820,
    "id": 647594412,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NzU5NDQxMg==",
    "diff_hunk": "@@ -672,10 +698,9 @@ bool CWallet::CreateTransactionInternal(\n                 return false;\n             }\n \n-            // Get long term estimate\n-            CCoinControl cc_temp;\n-            cc_temp.m_confirm_target = chain().estimateMaxBlocks();\n-            coin_selection_params.m_long_term_feerate = GetMinimumFeeRate(*this, cc_temp, nullptr);\n+            // Get the long term fee estimate. This estimate is really the fee rate at which we are still willing to consolidate inputs.\n+            // By default, we use 10 sat/vbyte.\n+            coin_selection_params.m_long_term_feerate = CFeeRate(10, COIN); // Use 10 sat per vbyte",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 57,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "f872c232ffe90a300718b785b5c29b956a427ee4",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@Xekyo suggested it based on his analysis and experience.\r\n\r\nThis should really be a configurable option, I just didn't implement that yet.",
    "created_at": "2021-06-08T16:13:28Z",
    "updated_at": "2021-06-08T16:13:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r647594412",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/647594412"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r647594412"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/647594412/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 703,
    "side": "RIGHT",
    "in_reply_to_id": 647439015
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650177806",
    "pull_request_review_id": 682101009,
    "id": 650177806,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MDE3NzgwNg==",
    "diff_hunk": "@@ -136,6 +136,14 @@ inline std::vector<OutputGroup>& GroupCoins(const std::vector<COutput>& coins)\n     return static_groups;\n }\n \n+inline std::vector<OutputGroup>& KnapsackGroupOutputs(const CoinEligibilityFilter& filter)",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": 23,
    "original_position": 4,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "21bc2f94076340fa7fcb5e2e67904bacd2938dc8",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: the introduction `KnapsackGroupOutputs` should be mentioned in the commit message. Should be potentially a separate commit.",
    "created_at": "2021-06-11T18:07:07Z",
    "updated_at": "2021-06-11T18:49:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r650177806",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650177806"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r650177806"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650177806/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 144,
    "original_line": 144,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650178647",
    "pull_request_review_id": 682101009,
    "id": 650178647,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MDE3ODY0Nw==",
    "diff_hunk": "@@ -136,6 +136,14 @@ inline std::vector<OutputGroup>& GroupCoins(const std::vector<COutput>& coins)\n     return static_groups;\n }\n \n+inline std::vector<OutputGroup>& KnapsackGroupOutputs(const CoinEligibilityFilter& filter)\n+{\n+    static std::vector<OutputGroup> static_groups;\n+    static_groups.clear();\n+    static_groups = testWallet.GroupOutputs(vCoins, coin_selection_params, filter, false);",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": null,
    "original_position": 8,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "21bc2f94076340fa7fcb5e2e67904bacd2938dc8",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "How come this uses \"GroupOutputs\" when BnB uses \"GroupCoins\"? What's the difference?",
    "created_at": "2021-06-11T18:08:38Z",
    "updated_at": "2021-06-11T18:49:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r650178647",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650178647"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r650178647"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650178647/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 147,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650188296",
    "pull_request_review_id": 682101009,
    "id": 650188296,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MDE4ODI5Ng==",
    "diff_hunk": "@@ -341,3 +341,30 @@ CAmount OutputGroup::GetSelectionAmount() const\n {\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n+\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target)\n+{\n+    // If the result is empty, then selection failed. Don't use this one, so set waste to very high\n+    if (inputs.empty()) {\n+        return MAX_MONEY;\n+    }\n+\n+    // Always consider the cost of spending an input now vs in the future.\n+    CAmount waste = 0;\n+    CAmount selected_value = 0;\n+    for (const CInputCoin& coin : inputs) {\n+        waste += coin.m_fee - coin.m_long_term_fee;\n+        selected_value += coin.txout.nValue;\n+    }\n+\n+    // Consider the cost of making change and spending it in the future\n+    // If we aren't making change, the caller should've set change_cost to 0\n+    waste += change_cost;\n+\n+    if (change_cost == 0) {\n+        // When we are not making change (change_cost == 0), consider the excess we are throwing away to fees\n+        waste += selected_value - target;\n+    }",
    "path": "src/wallet/coinselection.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "6ae3ed7b186db890eaaf1a548076c31b13856759",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is not just the excess, but `selected_value - target` will also include all input fees paid for the input set. However, we counted the input fees already above in the comparison with the `long_term_fee`.\r\n\r\nI think this should be `selected_value - txweight*feerate - sum(recipient outputs)`, or alternatively additionally deduct `sum(coin.m_fee)` for each input for the code as currently written.\r\n\r\nA few good tests for the waste metric would be:\r\n- Transaction with change has excess of 0\r\n- Transaction with feerate of 10 sat/vB has waste that is exactly `cost_of_change`+excess (one of which would be zero in the case of having change and the other in the case of not having change)\r\n- Transaction with same count of inputs has higher waster at higher feerate than at lower feerate. ",
    "created_at": "2021-06-11T18:26:13Z",
    "updated_at": "2021-06-11T18:49:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r650188296",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650188296"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r650188296"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650188296/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 364,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 367,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650189352",
    "pull_request_review_id": 682101009,
    "id": 650189352,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MDE4OTM1Mg==",
    "diff_hunk": "@@ -166,6 +166,18 @@ struct OutputGroup\n     CAmount GetSelectionAmount() const;\n };\n \n+/** Compute the waste for this result given the cost of change\n+ * waste = change_cost + excess + inputs * (effective_feerate - long_term_feerate)\n+ * excess = selected_target - actual_target",
    "path": "src/wallet/coinselection.h",
    "position": null,
    "original_position": 6,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "6ae3ed7b186db890eaaf1a548076c31b13856759",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "As pointed out above, this formula would count the input fees again, and here also the change cost.",
    "created_at": "2021-06-11T18:28:10Z",
    "updated_at": "2021-06-11T18:49:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r650189352",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650189352"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r650189352"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650189352/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 171,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650265145",
    "pull_request_review_id": 682216469,
    "id": 650265145,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MDI2NTE0NQ==",
    "diff_hunk": "@@ -136,6 +136,14 @@ inline std::vector<OutputGroup>& GroupCoins(const std::vector<COutput>& coins)\n     return static_groups;\n }\n \n+inline std::vector<OutputGroup>& KnapsackGroupOutputs(const CoinEligibilityFilter& filter)",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": 23,
    "original_position": 4,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "21bc2f94076340fa7fcb5e2e67904bacd2938dc8",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I've mentioned it in the commit message",
    "created_at": "2021-06-11T21:07:24Z",
    "updated_at": "2021-06-11T21:07:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r650265145",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650265145"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r650265145"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650265145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 144,
    "original_line": 144,
    "side": "RIGHT",
    "in_reply_to_id": 650177806
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650265627",
    "pull_request_review_id": 682217089,
    "id": 650265627,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MDI2NTYyNw==",
    "diff_hunk": "@@ -136,6 +136,14 @@ inline std::vector<OutputGroup>& GroupCoins(const std::vector<COutput>& coins)\n     return static_groups;\n }\n \n+inline std::vector<OutputGroup>& KnapsackGroupOutputs(const CoinEligibilityFilter& filter)\n+{\n+    static std::vector<OutputGroup> static_groups;\n+    static_groups.clear();\n+    static_groups = testWallet.GroupOutputs(vCoins, coin_selection_params, filter, false);",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": null,
    "original_position": 8,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "21bc2f94076340fa7fcb5e2e67904bacd2938dc8",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I've added an explanation in the commit message. The reason is because the `KnapsackSolver` tests involve different eligibility filters which `GroupCoins` does not.",
    "created_at": "2021-06-11T21:08:35Z",
    "updated_at": "2021-06-11T21:08:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r650265627",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650265627"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r650265627"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650265627/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 147,
    "side": "RIGHT",
    "in_reply_to_id": 650178647
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650266000",
    "pull_request_review_id": 682217477,
    "id": 650266000,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MDI2NjAwMA==",
    "diff_hunk": "@@ -341,3 +341,30 @@ CAmount OutputGroup::GetSelectionAmount() const\n {\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n+\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target)\n+{\n+    // If the result is empty, then selection failed. Don't use this one, so set waste to very high\n+    if (inputs.empty()) {\n+        return MAX_MONEY;\n+    }\n+\n+    // Always consider the cost of spending an input now vs in the future.\n+    CAmount waste = 0;\n+    CAmount selected_value = 0;\n+    for (const CInputCoin& coin : inputs) {\n+        waste += coin.m_fee - coin.m_long_term_fee;\n+        selected_value += coin.txout.nValue;\n+    }\n+\n+    // Consider the cost of making change and spending it in the future\n+    // If we aren't making change, the caller should've set change_cost to 0\n+    waste += change_cost;\n+\n+    if (change_cost == 0) {\n+        // When we are not making change (change_cost == 0), consider the excess we are throwing away to fees\n+        waste += selected_value - target;\n+    }",
    "path": "src/wallet/coinselection.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "6ae3ed7b186db890eaaf1a548076c31b13856759",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Changed to calculated `selected_value` with `coin.effective_value`. This will ensure the fee is subtracted. Also renamed it to `selected_effective_value`.\r\n\r\nAlso added a commit with test cases.",
    "created_at": "2021-06-11T21:09:18Z",
    "updated_at": "2021-06-11T21:09:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r650266000",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650266000"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r650266000"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650266000/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 364,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 367,
    "side": "RIGHT",
    "in_reply_to_id": 650188296
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650266063",
    "pull_request_review_id": 682217556,
    "id": 650266063,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MDI2NjA2Mw==",
    "diff_hunk": "@@ -166,6 +166,18 @@ struct OutputGroup\n     CAmount GetSelectionAmount() const;\n };\n \n+/** Compute the waste for this result given the cost of change\n+ * waste = change_cost + excess + inputs * (effective_feerate - long_term_feerate)\n+ * excess = selected_target - actual_target",
    "path": "src/wallet/coinselection.h",
    "position": null,
    "original_position": 6,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "6ae3ed7b186db890eaaf1a548076c31b13856759",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Changed to `selected_effective_value`.",
    "created_at": "2021-06-11T21:09:29Z",
    "updated_at": "2021-06-11T21:09:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r650266063",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650266063"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r650266063"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650266063/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 171,
    "side": "RIGHT",
    "in_reply_to_id": 650189352
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650275698",
    "pull_request_review_id": 682228915,
    "id": 650275698,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MDI3NTY5OA==",
    "diff_hunk": "@@ -341,3 +341,30 @@ CAmount OutputGroup::GetSelectionAmount() const\n {\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n+\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target)\n+{\n+    // If the result is empty, then selection failed. Don't use this one, so set waste to very high\n+    if (inputs.empty()) {\n+        return MAX_MONEY;\n+    }\n+\n+    // Always consider the cost of spending an input now vs in the future.\n+    CAmount waste = 0;\n+    CAmount selected_value = 0;\n+    for (const CInputCoin& coin : inputs) {\n+        waste += coin.m_fee - coin.m_long_term_fee;\n+        selected_value += coin.txout.nValue;\n+    }\n+\n+    // Consider the cost of making change and spending it in the future\n+    // If we aren't making change, the caller should've set change_cost to 0\n+    waste += change_cost;\n+\n+    if (change_cost == 0) {\n+        // When we are not making change (change_cost == 0), consider the excess we are throwing away to fees\n+        waste += selected_value - target;\n+    }",
    "path": "src/wallet/coinselection.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "6ae3ed7b186db890eaaf1a548076c31b13856759",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah, very elegant!",
    "created_at": "2021-06-11T21:32:13Z",
    "updated_at": "2021-06-11T21:32:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r650275698",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650275698"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r650275698"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650275698/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 364,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 367,
    "side": "RIGHT",
    "in_reply_to_id": 650188296
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661810728",
    "pull_request_review_id": 696617309,
    "id": 661810728,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTgxMDcyOA==",
    "diff_hunk": "@@ -280,14 +288,14 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n     empty_wallet();\n     add_coin(1);\n     vCoins.at(0).nInputBytes = 40; // Make sure that it has a negative effective value. The next check should assert if this somehow got through. Otherwise it will fail\n-    BOOST_CHECK(!testWallet.AttemptSelection( 1 * CENT, filter_standard, vCoins, setCoinsRet, nValueRet, coin_selection_params_bnb));\n+    BOOST_CHECK(!SelectCoinsBnB(GroupCoins(vCoins), 1 * CENT, coin_selection_params_bnb.m_cost_of_change, setCoinsRet, nValueRet));",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": 38,
    "original_position": 20,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "cc3e51de3360c747f125a09bab79d1147b09cd3b",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Feels like this part could be a scripted diff.",
    "created_at": "2021-06-30T21:05:28Z",
    "updated_at": "2021-06-30T22:17:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r661810728",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661810728"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r661810728"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661810728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 295,
    "original_line": 295,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661813675",
    "pull_request_review_id": 696617309,
    "id": 661813675,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTgxMzY3NQ==",
    "diff_hunk": "@@ -341,3 +341,30 @@ CAmount OutputGroup::GetSelectionAmount() const\n {\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n+\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target)\n+{\n+    // If the result is empty, then selection failed. Don't use this one, so set waste to very high\n+    if (inputs.empty()) {\n+        return MAX_MONEY;\n+    }\n+\n+    // Always consider the cost of spending an input now vs in the future.\n+    CAmount waste = 0;\n+    CAmount selected_effective_value = 0;\n+    for (const CInputCoin& coin : inputs) {\n+        waste += coin.m_fee - coin.m_long_term_fee;\n+        selected_effective_value += coin.effective_value;\n+    }\n+\n+    // Consider the cost of making change and spending it in the future\n+    // If we aren't making change, the caller should've set change_cost to 0\n+    waste += change_cost;\n+\n+    if (change_cost == 0) {\n+        // When we are not making change (change_cost == 0), consider the excess we are throwing away to fees\n+        waste += selected_effective_value - target;",
    "path": "src/wallet/coinselection.cpp",
    "position": 26,
    "original_position": 26,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "a8d87d8fc391a1446d03545123a8d2c5bd1fde78",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could perhaps assert that `selected_effective_value` is greater than `target` as it would be a dead giveaway that the inputs to this function are bonkers.",
    "created_at": "2021-06-30T21:10:44Z",
    "updated_at": "2021-06-30T22:17:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r661813675",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661813675"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r661813675"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661813675/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 366,
    "original_line": 366,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661814476",
    "pull_request_review_id": 696617309,
    "id": 661814476,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTgxNDQ3Ng==",
    "diff_hunk": "@@ -166,6 +166,18 @@ struct OutputGroup\n     CAmount GetSelectionAmount() const;\n };\n \n+/** Compute the waste for this result given the cost of change\n+ * waste = change_cost + excess + inputs * (effective_feerate - long_term_feerate)\n+ * excess = selected_effective_value - actual_target",
    "path": "src/wallet/coinselection.h",
    "position": null,
    "original_position": 6,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "a8d87d8fc391a1446d03545123a8d2c5bd1fde78",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think we may have removed `actual_target` previously. Is this comment perhaps a holdout?",
    "created_at": "2021-06-30T21:12:17Z",
    "updated_at": "2021-06-30T22:17:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r661814476",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661814476"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r661814476"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661814476/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 171,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661815255",
    "pull_request_review_id": 696617309,
    "id": 661815255,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTgxNTI1NQ==",
    "diff_hunk": "@@ -166,6 +166,18 @@ struct OutputGroup\n     CAmount GetSelectionAmount() const;\n };\n \n+/** Compute the waste for this result given the cost of change\n+ * waste = change_cost + excess + inputs * (effective_feerate - long_term_feerate)\n+ * excess = selected_effective_value - actual_target\n+ * change_cost = change_fee + change_long_term_fee\n+ *\n+ * @param[in] inputs The selected inputs\n+ * @param[in] change_cost The cost of creating change and spending it in the future.\n+ * @param[in] target The amount targeted by the coin selection algorithm.\n+ * @return The waste",
    "path": "src/wallet/coinselection.h",
    "position": 15,
    "original_position": 12,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "a8d87d8fc391a1446d03545123a8d2c5bd1fde78",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The function's documentation should perhaps explain that it will only ever use either change_cost or excess.",
    "created_at": "2021-06-30T21:13:41Z",
    "updated_at": "2021-06-30T22:17:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r661815255",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661815255"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r661815255"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661815255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 180,
    "original_line": 180,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661840942",
    "pull_request_review_id": 696617309,
    "id": 661840942,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTg0MDk0Mg==",
    "diff_hunk": "@@ -658,4 +663,47 @@ BOOST_AUTO_TEST_CASE(SelectCoins_test)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(waste_test)\n+{\n+    CoinSet selection;\n+    const CAmount fee = CAmount(100);\n+    const CAmount change_cost = CAmount(100);",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": null,
    "original_position": 30,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "b15d84f868d936e2734631a09a9dfc1503572000",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You may want to use different values (preferably not direct multiples) for `fee` and `change_cost` as otherwise some weird interaction might hide a defect, maybe something like 100 and 125.",
    "created_at": "2021-06-30T22:04:02Z",
    "updated_at": "2021-06-30T22:17:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r661840942",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661840942"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r661840942"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661840942/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 670,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661842226",
    "pull_request_review_id": 696617309,
    "id": 661842226,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTg0MjIyNg==",
    "diff_hunk": "@@ -658,4 +663,47 @@ BOOST_AUTO_TEST_CASE(SelectCoins_test)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(waste_test)\n+{\n+    CoinSet selection;\n+    const CAmount fee = CAmount(100);\n+    const CAmount change_cost = CAmount(100);\n+    const CAmount fee_diff = CAmount(50);\n+    const CAmount in_amt = 3 * COIN;\n+    const CAmount target = 2 * COIN;\n+    const CAmount excess = in_amt - fee * 2 - target;\n+\n+    // Waste with change is the change cost and difference between fee and long term fee\n+    add_coin(1 * COIN, 1, selection, fee, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee - fee_diff);\n+    const CAmount waste1 = GetSelectionWaste(selection, change_cost, target);\n+    BOOST_CHECK_EQUAL(fee_diff * 2 + change_cost, waste1);\n+    selection.clear();\n+\n+    // Waste without change is the excesss and difference between fee and long term fee\n+    add_coin(1 * COIN, 1, selection, fee, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee - fee_diff);\n+    BOOST_CHECK_EQUAL(fee_diff * 2 + excess, GetSelectionWaste(selection, 0, target));\n+    selection.clear();\n+\n+    // Waste with change and fee == long term fee is just cost of change\n+    add_coin(1 * COIN, 1, selection, fee, fee);\n+    add_coin(2 * COIN, 2, selection, fee, fee);\n+    BOOST_CHECK_EQUAL(change_cost, GetSelectionWaste(selection, change_cost, target));\n+    selection.clear();\n+\n+    // Waste without change and fee == long term fee is just the excess\n+    add_coin(1 * COIN, 1, selection, fee, fee);\n+    add_coin(2 * COIN, 2, selection, fee, fee);\n+    BOOST_CHECK_EQUAL(excess, GetSelectionWaste(selection, 0, target));\n+    selection.clear();\n+\n+    // Waste will be greater when fee is greater, but long term fee is the same",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": 299,
    "original_position": 61,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "b15d84f868d936e2734631a09a9dfc1503572000",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Perhaps also add a test where the long_term_fee is greater than the fee.",
    "created_at": "2021-06-30T22:07:04Z",
    "updated_at": "2021-06-30T22:17:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r661842226",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661842226"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r661842226"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661842226/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 701,
    "original_line": 701,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661843975",
    "pull_request_review_id": 696617309,
    "id": 661843975,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTg0Mzk3NQ==",
    "diff_hunk": "@@ -357,17 +357,43 @@ bool CWallet::AttemptSelection(const CAmount& nTargetValue, const CoinEligibilit\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: calculated waste, selected inputs, selected value\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<CAmount, std::set<CInputCoin>, CAmount>> results;",
    "path": "src/wallet/spend.cpp",
    "position": 7,
    "original_position": 7,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "6f607eeefb37036d5b0ada89cb3772cbc0de5fb2",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You may want to be a bit more explicit here whether the third value is the selected value, the selected effective value, or the target value. (I assume it's the first, but we've been juggling all of these, being more precise wouldn't hurt.)",
    "created_at": "2021-06-30T22:10:39Z",
    "updated_at": "2021-06-30T22:17:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r661843975",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661843975"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r661843975"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661843975/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 363,
    "original_line": 363,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661845760",
    "pull_request_review_id": 696617309,
    "id": 661845760,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTg0NTc2MA==",
    "diff_hunk": "@@ -357,17 +357,43 @@ bool CWallet::AttemptSelection(const CAmount& nTargetValue, const CoinEligibilit\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: calculated waste, selected inputs, selected value\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<CAmount, std::set<CInputCoin>, CAmount>> results;\n \n     // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n     std::vector<OutputGroup> positive_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n-    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, setCoinsRet, nValueRet)) {\n-        return true;\n+    std::set<CInputCoin> bnb_coins;\n+    CAmount bnb_value;\n+    bool bnb_ret = SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, bnb_coins, bnb_value);\n+    if (bnb_ret) {\n+        results.push_back(std::make_tuple(GetSelectionWaste(bnb_coins, /* cost of change */ CAmount(0), nTargetValue), std::move(bnb_coins), bnb_value));\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, false /* positive_only */);\n     // While nTargetValue includes the transaction fees for non-input things, it does not include the fee for creating a change output.\n     // So we need to include that for KnapsackSolver as well, as we are expecting to create a change output.\n-    return KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, setCoinsRet, nValueRet);\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, knapsack_coins, knapsack_value);\n+    if (knapsack_ret) {\n+        results.push_back(std::make_tuple(GetSelectionWaste(knapsack_coins, coin_selection_params.m_cost_of_change, nTargetValue + coin_selection_params.m_change_fee), std::move(knapsack_coins), knapsack_value));\n+    }\n+\n+    if (results.size() == 0) {\n+        // No solution found\n+        return false;\n+    }\n+\n+    // Choose the result with the least waste",
    "path": "src/wallet/spend.cpp",
    "position": 37,
    "original_position": 37,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "6f607eeefb37036d5b0ada89cb3772cbc0de5fb2",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Clearly, this function does not only select by waste, but has a fallback tiebreaker. ;)",
    "created_at": "2021-06-30T22:14:49Z",
    "updated_at": "2021-06-30T22:17:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r661845760",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661845760"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r661845760"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661845760/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 390,
    "original_line": 390,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271215",
    "pull_request_review_id": 698526925,
    "id": 663271215,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzI3MTIxNQ==",
    "diff_hunk": "@@ -280,14 +288,14 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n     empty_wallet();\n     add_coin(1);\n     vCoins.at(0).nInputBytes = 40; // Make sure that it has a negative effective value. The next check should assert if this somehow got through. Otherwise it will fail\n-    BOOST_CHECK(!testWallet.AttemptSelection( 1 * CENT, filter_standard, vCoins, setCoinsRet, nValueRet, coin_selection_params_bnb));\n+    BOOST_CHECK(!SelectCoinsBnB(GroupCoins(vCoins), 1 * CENT, coin_selection_params_bnb.m_cost_of_change, setCoinsRet, nValueRet));",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": 38,
    "original_position": 20,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "cc3e51de3360c747f125a09bab79d1147b09cd3b",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-07-02T22:31:16Z",
    "updated_at": "2021-07-02T22:31:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r663271215",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271215"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r663271215"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271215/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 295,
    "original_line": 295,
    "side": "RIGHT",
    "in_reply_to_id": 661810728
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271232",
    "pull_request_review_id": 698526948,
    "id": 663271232,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzI3MTIzMg==",
    "diff_hunk": "@@ -341,3 +341,30 @@ CAmount OutputGroup::GetSelectionAmount() const\n {\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n+\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target)\n+{\n+    // If the result is empty, then selection failed. Don't use this one, so set waste to very high\n+    if (inputs.empty()) {\n+        return MAX_MONEY;\n+    }\n+\n+    // Always consider the cost of spending an input now vs in the future.\n+    CAmount waste = 0;\n+    CAmount selected_effective_value = 0;\n+    for (const CInputCoin& coin : inputs) {\n+        waste += coin.m_fee - coin.m_long_term_fee;\n+        selected_effective_value += coin.effective_value;\n+    }\n+\n+    // Consider the cost of making change and spending it in the future\n+    // If we aren't making change, the caller should've set change_cost to 0\n+    waste += change_cost;\n+\n+    if (change_cost == 0) {\n+        // When we are not making change (change_cost == 0), consider the excess we are throwing away to fees\n+        waste += selected_effective_value - target;",
    "path": "src/wallet/coinselection.cpp",
    "position": 26,
    "original_position": 26,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "a8d87d8fc391a1446d03545123a8d2c5bd1fde78",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-07-02T22:31:21Z",
    "updated_at": "2021-07-02T22:31:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r663271232",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271232"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r663271232"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271232/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 366,
    "original_line": 366,
    "side": "RIGHT",
    "in_reply_to_id": 661813675
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271259",
    "pull_request_review_id": 698526990,
    "id": 663271259,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzI3MTI1OQ==",
    "diff_hunk": "@@ -166,6 +166,18 @@ struct OutputGroup\n     CAmount GetSelectionAmount() const;\n };\n \n+/** Compute the waste for this result given the cost of change\n+ * waste = change_cost + excess + inputs * (effective_feerate - long_term_feerate)\n+ * excess = selected_effective_value - actual_target",
    "path": "src/wallet/coinselection.h",
    "position": null,
    "original_position": 6,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "a8d87d8fc391a1446d03545123a8d2c5bd1fde78",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Changed to just `target`.",
    "created_at": "2021-07-02T22:31:31Z",
    "updated_at": "2021-07-02T22:31:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r663271259",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271259"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r663271259"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271259/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 171,
    "side": "RIGHT",
    "in_reply_to_id": 661814476
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271272",
    "pull_request_review_id": 698527008,
    "id": 663271272,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzI3MTI3Mg==",
    "diff_hunk": "@@ -166,6 +166,18 @@ struct OutputGroup\n     CAmount GetSelectionAmount() const;\n };\n \n+/** Compute the waste for this result given the cost of change\n+ * waste = change_cost + excess + inputs * (effective_feerate - long_term_feerate)\n+ * excess = selected_effective_value - actual_target\n+ * change_cost = change_fee + change_long_term_fee\n+ *\n+ * @param[in] inputs The selected inputs\n+ * @param[in] change_cost The cost of creating change and spending it in the future.\n+ * @param[in] target The amount targeted by the coin selection algorithm.\n+ * @return The waste",
    "path": "src/wallet/coinselection.h",
    "position": 15,
    "original_position": 12,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "a8d87d8fc391a1446d03545123a8d2c5bd1fde78",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-07-02T22:31:37Z",
    "updated_at": "2021-07-02T22:31:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r663271272",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271272"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r663271272"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 180,
    "original_line": 180,
    "side": "RIGHT",
    "in_reply_to_id": 661815255
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271293",
    "pull_request_review_id": 698527036,
    "id": 663271293,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzI3MTI5Mw==",
    "diff_hunk": "@@ -658,4 +663,47 @@ BOOST_AUTO_TEST_CASE(SelectCoins_test)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(waste_test)\n+{\n+    CoinSet selection;\n+    const CAmount fee = CAmount(100);\n+    const CAmount change_cost = CAmount(100);",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": null,
    "original_position": 30,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "b15d84f868d936e2734631a09a9dfc1503572000",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-07-02T22:31:43Z",
    "updated_at": "2021-07-02T22:31:43Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r663271293",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271293"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r663271293"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271293/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 670,
    "side": "RIGHT",
    "in_reply_to_id": 661840942
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271316",
    "pull_request_review_id": 698527055,
    "id": 663271316,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzI3MTMxNg==",
    "diff_hunk": "@@ -658,4 +663,47 @@ BOOST_AUTO_TEST_CASE(SelectCoins_test)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(waste_test)\n+{\n+    CoinSet selection;\n+    const CAmount fee = CAmount(100);\n+    const CAmount change_cost = CAmount(100);\n+    const CAmount fee_diff = CAmount(50);\n+    const CAmount in_amt = 3 * COIN;\n+    const CAmount target = 2 * COIN;\n+    const CAmount excess = in_amt - fee * 2 - target;\n+\n+    // Waste with change is the change cost and difference between fee and long term fee\n+    add_coin(1 * COIN, 1, selection, fee, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee - fee_diff);\n+    const CAmount waste1 = GetSelectionWaste(selection, change_cost, target);\n+    BOOST_CHECK_EQUAL(fee_diff * 2 + change_cost, waste1);\n+    selection.clear();\n+\n+    // Waste without change is the excesss and difference between fee and long term fee\n+    add_coin(1 * COIN, 1, selection, fee, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee - fee_diff);\n+    BOOST_CHECK_EQUAL(fee_diff * 2 + excess, GetSelectionWaste(selection, 0, target));\n+    selection.clear();\n+\n+    // Waste with change and fee == long term fee is just cost of change\n+    add_coin(1 * COIN, 1, selection, fee, fee);\n+    add_coin(2 * COIN, 2, selection, fee, fee);\n+    BOOST_CHECK_EQUAL(change_cost, GetSelectionWaste(selection, change_cost, target));\n+    selection.clear();\n+\n+    // Waste without change and fee == long term fee is just the excess\n+    add_coin(1 * COIN, 1, selection, fee, fee);\n+    add_coin(2 * COIN, 2, selection, fee, fee);\n+    BOOST_CHECK_EQUAL(excess, GetSelectionWaste(selection, 0, target));\n+    selection.clear();\n+\n+    // Waste will be greater when fee is greater, but long term fee is the same",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": 299,
    "original_position": 61,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "b15d84f868d936e2734631a09a9dfc1503572000",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-07-02T22:31:47Z",
    "updated_at": "2021-07-02T22:31:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r663271316",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271316"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r663271316"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271316/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 701,
    "original_line": 701,
    "side": "RIGHT",
    "in_reply_to_id": 661842226
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271352",
    "pull_request_review_id": 698527081,
    "id": 663271352,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzI3MTM1Mg==",
    "diff_hunk": "@@ -357,17 +357,43 @@ bool CWallet::AttemptSelection(const CAmount& nTargetValue, const CoinEligibilit\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: calculated waste, selected inputs, selected value\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<CAmount, std::set<CInputCoin>, CAmount>> results;",
    "path": "src/wallet/spend.cpp",
    "position": 7,
    "original_position": 7,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "6f607eeefb37036d5b0ada89cb3772cbc0de5fb2",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-07-02T22:31:52Z",
    "updated_at": "2021-07-02T22:31:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r663271352",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271352"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r663271352"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271352/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 363,
    "original_line": 363,
    "side": "RIGHT",
    "in_reply_to_id": 661843975
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271356",
    "pull_request_review_id": 698527087,
    "id": 663271356,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzI3MTM1Ng==",
    "diff_hunk": "@@ -357,17 +357,43 @@ bool CWallet::AttemptSelection(const CAmount& nTargetValue, const CoinEligibilit\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: calculated waste, selected inputs, selected value\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<CAmount, std::set<CInputCoin>, CAmount>> results;\n \n     // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n     std::vector<OutputGroup> positive_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n-    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, setCoinsRet, nValueRet)) {\n-        return true;\n+    std::set<CInputCoin> bnb_coins;\n+    CAmount bnb_value;\n+    bool bnb_ret = SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, bnb_coins, bnb_value);\n+    if (bnb_ret) {\n+        results.push_back(std::make_tuple(GetSelectionWaste(bnb_coins, /* cost of change */ CAmount(0), nTargetValue), std::move(bnb_coins), bnb_value));\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, false /* positive_only */);\n     // While nTargetValue includes the transaction fees for non-input things, it does not include the fee for creating a change output.\n     // So we need to include that for KnapsackSolver as well, as we are expecting to create a change output.\n-    return KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, setCoinsRet, nValueRet);\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, knapsack_coins, knapsack_value);\n+    if (knapsack_ret) {\n+        results.push_back(std::make_tuple(GetSelectionWaste(knapsack_coins, coin_selection_params.m_cost_of_change, nTargetValue + coin_selection_params.m_change_fee), std::move(knapsack_coins), knapsack_value));\n+    }\n+\n+    if (results.size() == 0) {\n+        // No solution found\n+        return false;\n+    }\n+\n+    // Choose the result with the least waste",
    "path": "src/wallet/spend.cpp",
    "position": 37,
    "original_position": 37,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "6f607eeefb37036d5b0ada89cb3772cbc0de5fb2",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-07-02T22:31:55Z",
    "updated_at": "2021-07-02T22:31:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r663271356",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271356"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r663271356"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663271356/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 390,
    "original_line": 390,
    "side": "RIGHT",
    "in_reply_to_id": 661845760
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666495109",
    "pull_request_review_id": 702469790,
    "id": 666495109,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NjQ5NTEwOQ==",
    "diff_hunk": "@@ -166,6 +166,19 @@ struct OutputGroup\n     CAmount GetSelectionAmount() const;\n };\n \n+/** Compute the waste for this result given the cost of change\n+ * waste = change_cost + excess + inputs * (effective_feerate - long_term_feerate)\n+ * excess = selected_effective_value - target\n+ * change_cost = change_fee + change_long_term_fee\n+ *\n+ * @param[in] inputs The selected inputs\n+ * @param[in] change_cost The cost of creating change and spending it in the future. Only used if there is change. Must be 0 if there is no change.\n+ * @param[in] target The amount targeted by the coin selection algorithm.\n+ * @param[in] real_value Whether to use the input's real value (when true) or the effective value (when false)\n+ * @return The waste\n+ */\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target, bool real_value = false);",
    "path": "src/wallet/coinselection.h",
    "position": null,
    "original_position": 15,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "8a0a1b3f35b8155eaa31ceb59c28269ef5eac176",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'd have a slight preference for a more specific \"use_effective_value\" than \"real_value\" with an inverted bool value.\r\n```suggestion\r\nCAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target, bool use_effective_value = true);\r\n```",
    "created_at": "2021-07-08T20:25:09Z",
    "updated_at": "2021-07-08T20:53:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r666495109",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666495109"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r666495109"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666495109/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 180,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669347809",
    "pull_request_review_id": 705924759,
    "id": 669347809,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTM0NzgwOQ==",
    "diff_hunk": "@@ -357,17 +357,44 @@ bool CWallet::AttemptSelection(const CAmount& nTargetValue, const CoinEligibilit\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: calculated waste, selected inputs, selected input value (sum of input values)\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<CAmount, std::set<CInputCoin>, CAmount>> results;\n \n     // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n     std::vector<OutputGroup> positive_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n-    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, setCoinsRet, nValueRet)) {\n-        return true;\n+    std::set<CInputCoin> bnb_coins;\n+    CAmount bnb_value;\n+    bool bnb_ret = SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, bnb_coins, bnb_value);\n+    if (bnb_ret) {\n+        results.push_back(std::make_tuple(GetSelectionWaste(bnb_coins, /* cost of change */ CAmount(0), nTargetValue, coin_selection_params.m_subtract_fee_outputs), std::move(bnb_coins), bnb_value));\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, false /* positive_only */);\n     // While nTargetValue includes the transaction fees for non-input things, it does not include the fee for creating a change output.\n     // So we need to include that for KnapsackSolver as well, as we are expecting to create a change output.\n-    return KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, setCoinsRet, nValueRet);\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, knapsack_coins, knapsack_value);\n+    if (knapsack_ret) {\n+        results.push_back(std::make_tuple(GetSelectionWaste(knapsack_coins, coin_selection_params.m_cost_of_change, nTargetValue + coin_selection_params.m_change_fee, coin_selection_params.m_subtract_fee_outputs), std::move(knapsack_coins), knapsack_value));\n+    }\n+\n+    if (results.size() == 0) {\n+        // No solution found\n+        return false;\n+    }\n+\n+    // Choose the result with the least waste\n+    // If the waste is the same, choose the one which spends more inputs.\n+    const auto& best_result = std::min_element(results.begin(), results.end(), [](const auto& a, const auto& b){\n+        return std::get<0>(a) < std::get<0>(b) || (std::get<0>(a) == std::get<0>(b) && std::get<1>(a).size() > std::get<1>(b).size());",
    "path": "src/wallet/spend.cpp",
    "position": 40,
    "original_position": 40,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "8a0a1b3f35b8155eaa31ceb59c28269ef5eac176",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Note to reviewers: this looks much better with #22019",
    "created_at": "2021-07-14T07:07:05Z",
    "updated_at": "2021-07-14T07:35:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r669347809",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669347809"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r669347809"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669347809/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 393,
    "original_line": 393,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669348197",
    "pull_request_review_id": 705924759,
    "id": 669348197,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTM0ODE5Nw==",
    "diff_hunk": "@@ -658,10 +685,9 @@ bool CWallet::CreateTransactionInternal(\n         return false;\n     }\n \n-    // Get long term estimate\n-    CCoinControl cc_temp;\n-    cc_temp.m_confirm_target = chain().estimateMaxBlocks();\n-    coin_selection_params.m_long_term_feerate = GetMinimumFeeRate(*this, cc_temp, nullptr);\n+    // Get the long term fee estimate. This estimate is really the fee rate at which we are still willing to consolidate inputs.\n+    // By default, we use 10 sat/vbyte.\n+    coin_selection_params.m_long_term_feerate = CFeeRate(10, COIN); // Use 10 sat per vbyte",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 58,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "8a0a1b3f35b8155eaa31ceb59c28269ef5eac176",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Warrants updating comment in `coinselection.h`\r\n\r\nnit: duplicate comment with the one just one line above",
    "created_at": "2021-07-14T07:07:40Z",
    "updated_at": "2021-07-14T07:35:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r669348197",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669348197"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r669348197"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669348197/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 690,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669358253",
    "pull_request_review_id": 705924759,
    "id": 669358253,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTM1ODI1Mw==",
    "diff_hunk": "@@ -650,4 +663,67 @@ BOOST_AUTO_TEST_CASE(SelectCoins_test)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(waste_test)\n+{\n+    CoinSet selection;\n+    const CAmount fee = CAmount(100);\n+    const CAmount change_cost = CAmount(125);\n+    const CAmount fee_diff = CAmount(40);\n+    const CAmount in_amt = 3 * COIN;\n+    const CAmount target = 2 * COIN;\n+    const CAmount excess = in_amt - fee * 2 - target;\n+\n+    // Waste with change is the change cost and difference between fee and long term fee\n+    add_coin(1 * COIN, 1, selection, fee, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee - fee_diff);\n+    const CAmount waste1 = GetSelectionWaste(selection, change_cost, target);\n+    BOOST_CHECK_EQUAL(fee_diff * 2 + change_cost, waste1);\n+    selection.clear();\n+\n+    // Waste without change is the excesss and difference between fee and long term fee\n+    add_coin(1 * COIN, 1, selection, fee, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee - fee_diff);\n+    const CAmount waste_nochange1 = GetSelectionWaste(selection, 0, target);\n+    BOOST_CHECK_EQUAL(fee_diff * 2 + excess, waste_nochange1);\n+    selection.clear();\n+\n+    // Waste with change and fee == long term fee is just cost of change\n+    add_coin(1 * COIN, 1, selection, fee, fee);\n+    add_coin(2 * COIN, 2, selection, fee, fee);\n+    BOOST_CHECK_EQUAL(change_cost, GetSelectionWaste(selection, change_cost, target));\n+    selection.clear();\n+\n+    // Waste without change and fee == long term fee is just the excess\n+    add_coin(1 * COIN, 1, selection, fee, fee);\n+    add_coin(2 * COIN, 2, selection, fee, fee);\n+    BOOST_CHECK_EQUAL(excess, GetSelectionWaste(selection, 0, target));\n+    selection.clear();\n+\n+    // Waste will be greater when fee is greater, but long term fee is the same\n+    add_coin(1 * COIN, 1, selection, fee * 2, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee * 2, fee - fee_diff);\n+    const CAmount waste2 = GetSelectionWaste(selection, change_cost, target);\n+    BOOST_CHECK_GT(waste2, waste1);\n+    selection.clear();\n+\n+    // Waste with change is the change cost and difference between fee and long term fee\n+    // With long term fee greater than fee, waste should be less than when long term fee is less than fee\n+    add_coin(1 * COIN, 1, selection, fee, fee + fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee + fee_diff);\n+    const CAmount waste3 = GetSelectionWaste(selection, change_cost, target);\n+    BOOST_CHECK_EQUAL(fee_diff * -2 + change_cost, waste3);\n+    BOOST_CHECK_LT(waste3, waste1);\n+    selection.clear();\n+\n+    // Waste without change is the excesss and difference between fee and long term fee\n+    // With long term fee greater than fee, waste should be less than when long term fee is less than fee\n+    add_coin(1 * COIN, 1, selection, fee, fee + fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee + fee_diff);\n+    const CAmount waste_nochange2 = GetSelectionWaste(selection, 0, target);\n+    BOOST_CHECK_EQUAL(fee_diff * -2 + excess, waste_nochange2);\n+    BOOST_CHECK_LT(waste_nochange2, waste_nochange1);\n+    selection.clear();\n+",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": 323,
    "original_position": 327,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "8a0a1b3f35b8155eaa31ceb59c28269ef5eac176",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: Maybe add a test for zero waste case?",
    "created_at": "2021-07-14T07:24:11Z",
    "updated_at": "2021-07-14T07:35:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r669358253",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669358253"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r669358253"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669358253/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 725,
    "original_line": 725,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674558779",
    "pull_request_review_id": 712433414,
    "id": 674558779,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NDU1ODc3OQ==",
    "diff_hunk": "@@ -28,6 +28,7 @@ void DummyWalletInit::AddWalletOptions(ArgsManager& argsman) const\n         \"-addresstype\",\n         \"-avoidpartialspends\",\n         \"-changetype\",\n+        \"-discardfee=<amt>\",",
    "path": "src/dummywallet.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "0be3fa4a9ad63ba3b75804d079c4a0da69fb2bf8",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "AssertionError: Please add {'-consolidatefeerate'} to the hidden args in DummyWalletInit::AddWalletOptions",
    "created_at": "2021-07-22T07:25:19Z",
    "updated_at": "2021-07-22T07:25:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r674558779",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674558779"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r674558779"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674558779/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 31,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/675059132",
    "pull_request_review_id": 713102059,
    "id": 675059132,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NTA1OTEzMg==",
    "diff_hunk": "@@ -28,6 +28,7 @@ void DummyWalletInit::AddWalletOptions(ArgsManager& argsman) const\n         \"-addresstype\",\n         \"-avoidpartialspends\",\n         \"-changetype\",\n+        \"-discardfee=<amt>\",",
    "path": "src/dummywallet.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "0be3fa4a9ad63ba3b75804d079c4a0da69fb2bf8",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oops, fixed.",
    "created_at": "2021-07-22T18:17:31Z",
    "updated_at": "2021-07-22T18:17:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r675059132",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/675059132"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r675059132"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/675059132/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 31,
    "side": "RIGHT",
    "in_reply_to_id": 674558779
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676333477",
    "pull_request_review_id": 714494541,
    "id": 676333477,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NjMzMzQ3Nw==",
    "diff_hunk": "@@ -45,6 +45,7 @@ void WalletInit::AddWalletOptions(ArgsManager& argsman) const\n     argsman.AddArg(\"-addresstype\", strprintf(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\", default: \\\"%s\\\")\", FormatOutputType(DEFAULT_ADDRESS_TYPE)), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     argsman.AddArg(\"-avoidpartialspends\", strprintf(\"Group outputs by address, selecting many (possibly all) or none, instead of selecting on a per-output basis. Privacy is improved as addresses are mostly swept with fewer transactions and outputs are aggregated in clean change addresses. It may result in higher fees due to less optimal coin selection caused by this added limitation and possibly a larger-than-necessary number of inputs being used. Always enabled for wallets with \\\"avoid_reuse\\\" enabled, otherwise default: %u.\", DEFAULT_AVOIDPARTIALSPENDS), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     argsman.AddArg(\"-changetype\", \"What type of change to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\"). Default is same as -addresstype, except when -addresstype=p2sh-segwit a native segwit output is used when sending to a native segwit address)\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n+    argsman.AddArg(\"-consolidatefeerate=<amt>\", strprintf(\"The fee rate (in %s/kvB) that indicates the highest feerate you are comfortable making consolidation transactions at (default: %s). \", CURRENCY_UNIT, FormatMoney(DEFAULT_CONSOLIDATE_FEERATE)), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);",
    "path": "src/wallet/init.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1ce0c97c7a531070328d4d742a32b31e1e0bdce5",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: unnecessary space after the dot in the description",
    "created_at": "2021-07-26T06:48:53Z",
    "updated_at": "2021-07-26T06:49:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r676333477",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676333477"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r676333477"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676333477/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 48,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680544785",
    "pull_request_review_id": 719684971,
    "id": 680544785,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDU0NDc4NQ==",
    "diff_hunk": "@@ -48,14 +48,19 @@ static void add_coin(const CAmount& nValue, int nInput, std::vector<CInputCoin>&\n     set.emplace_back(MakeTransactionRef(tx), nInput);\n }\n \n-static void add_coin(const CAmount& nValue, int nInput, CoinSet& set)\n+static void add_coin(const CAmount& nValue, int nInput, CoinSet& set, CAmount fee = 0, CAmount long_term_fee = 0)\n {\n     CMutableTransaction tx;\n     tx.vout.resize(nInput + 1);\n     tx.vout[nInput].nValue = nValue;\n-    set.emplace(MakeTransactionRef(tx), nInput);\n+    CInputCoin coin(MakeTransactionRef(tx), nInput);\n+    coin.effective_value -= fee;\n+    coin.m_fee = fee;\n+    coin.m_long_term_fee = long_term_fee;\n+    set.insert(coin);\n }\n \n+",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "6cbe2c4bd9989db820dc01b124e57aa239cf4fb3",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: Empty line not necessary?",
    "created_at": "2021-08-01T17:56:58Z",
    "updated_at": "2021-08-01T19:10:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r680544785",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680544785"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r680544785"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680544785/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 63,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680550694",
    "pull_request_review_id": 719684971,
    "id": 680550694,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDU1MDY5NA==",
    "diff_hunk": "@@ -658,4 +663,67 @@ BOOST_AUTO_TEST_CASE(SelectCoins_test)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(waste_test)\n+{\n+    CoinSet selection;\n+    const CAmount fee = CAmount(100);\n+    const CAmount change_cost = CAmount(125);\n+    const CAmount fee_diff = CAmount(40);\n+    const CAmount in_amt = 3 * COIN;\n+    const CAmount target = 2 * COIN;\n+    const CAmount excess = in_amt - fee * 2 - target;\n+\n+    // Waste with change is the change cost and difference between fee and long term fee\n+    add_coin(1 * COIN, 1, selection, fee, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee - fee_diff);\n+    const CAmount waste1 = GetSelectionWaste(selection, change_cost, target);\n+    BOOST_CHECK_EQUAL(fee_diff * 2 + change_cost, waste1);\n+    selection.clear();\n+\n+    // Waste without change is the excesss and difference between fee and long term fee\n+    add_coin(1 * COIN, 1, selection, fee, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee - fee_diff);\n+    const CAmount waste_nochange1 = GetSelectionWaste(selection, 0, target);\n+    BOOST_CHECK_EQUAL(fee_diff * 2 + excess, waste_nochange1);\n+    selection.clear();\n+\n+    // Waste with change and fee == long term fee is just cost of change\n+    add_coin(1 * COIN, 1, selection, fee, fee);\n+    add_coin(2 * COIN, 2, selection, fee, fee);\n+    BOOST_CHECK_EQUAL(change_cost, GetSelectionWaste(selection, change_cost, target));\n+    selection.clear();\n+\n+    // Waste without change and fee == long term fee is just the excess\n+    add_coin(1 * COIN, 1, selection, fee, fee);\n+    add_coin(2 * COIN, 2, selection, fee, fee);\n+    BOOST_CHECK_EQUAL(excess, GetSelectionWaste(selection, 0, target));\n+    selection.clear();\n+\n+    // Waste will be greater when fee is greater, but long term fee is the same\n+    add_coin(1 * COIN, 1, selection, fee * 2, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee * 2, fee - fee_diff);\n+    const CAmount waste2 = GetSelectionWaste(selection, change_cost, target);\n+    BOOST_CHECK_GT(waste2, waste1);\n+    selection.clear();\n+\n+    // Waste with change is the change cost and difference between fee and long term fee\n+    // With long term fee greater than fee, waste should be less than when long term fee is less than fee\n+    add_coin(1 * COIN, 1, selection, fee, fee + fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee + fee_diff);\n+    const CAmount waste3 = GetSelectionWaste(selection, change_cost, target);\n+    BOOST_CHECK_EQUAL(fee_diff * -2 + change_cost, waste3);\n+    BOOST_CHECK_LT(waste3, waste1);\n+    selection.clear();\n+\n+    // Waste without change is the excesss and difference between fee and long term fee",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": null,
    "original_position": 78,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "6cbe2c4bd9989db820dc01b124e57aa239cf4fb3",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "excesss",
    "created_at": "2021-08-01T18:50:51Z",
    "updated_at": "2021-08-01T19:10:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r680550694",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680550694"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r680550694"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680550694/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 718,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680550730",
    "pull_request_review_id": 719684971,
    "id": 680550730,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDU1MDczMA==",
    "diff_hunk": "@@ -658,4 +663,67 @@ BOOST_AUTO_TEST_CASE(SelectCoins_test)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(waste_test)\n+{\n+    CoinSet selection;\n+    const CAmount fee = CAmount(100);\n+    const CAmount change_cost = CAmount(125);\n+    const CAmount fee_diff = CAmount(40);\n+    const CAmount in_amt = 3 * COIN;\n+    const CAmount target = 2 * COIN;\n+    const CAmount excess = in_amt - fee * 2 - target;\n+\n+    // Waste with change is the change cost and difference between fee and long term fee\n+    add_coin(1 * COIN, 1, selection, fee, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee - fee_diff);\n+    const CAmount waste1 = GetSelectionWaste(selection, change_cost, target);\n+    BOOST_CHECK_EQUAL(fee_diff * 2 + change_cost, waste1);\n+    selection.clear();\n+\n+    // Waste without change is the excesss and difference between fee and long term fee",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "6cbe2c4bd9989db820dc01b124e57aa239cf4fb3",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "excesss",
    "created_at": "2021-08-01T18:51:22Z",
    "updated_at": "2021-08-01T19:10:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r680550730",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680550730"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r680550730"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680550730/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 683,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690354107",
    "pull_request_review_id": 731743420,
    "id": 690354107,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDM1NDEwNw==",
    "diff_hunk": "@@ -166,6 +166,19 @@ struct OutputGroup\n     CAmount GetSelectionAmount() const;\n };\n \n+/** Compute the waste for this result given the cost of change\n+ * waste = change_cost + excess + inputs * (effective_feerate - long_term_feerate)\n+ * excess = selected_effective_value - target\n+ * change_cost = change_fee + change_long_term_fee\n+ *\n+ * @param[in] inputs The selected inputs\n+ * @param[in] change_cost The cost of creating change and spending it in the future. Only used if there is change. Must be 0 if there is no change.\n+ * @param[in] target The amount targeted by the coin selection algorithm.\n+ * @param[in] real_value Whether to use the input's real value (when true) or the effective value (when false)\n+ * @return The waste\n+ */\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target, bool real_value = false);",
    "path": "src/wallet/coinselection.h",
    "position": null,
    "original_position": 15,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "8a0a1b3f35b8155eaa31ceb59c28269ef5eac176",
    "user": {
      "login": "Talkless",
      "id": 292191,
      "node_id": "MDQ6VXNlcjI5MjE5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/292191?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Talkless",
      "html_url": "https://github.com/Talkless",
      "followers_url": "https://api.github.com/users/Talkless/followers",
      "following_url": "https://api.github.com/users/Talkless/following{/other_user}",
      "gists_url": "https://api.github.com/users/Talkless/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Talkless/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Talkless/subscriptions",
      "organizations_url": "https://api.github.com/users/Talkless/orgs",
      "repos_url": "https://api.github.com/users/Talkless/repos",
      "events_url": "https://api.github.com/users/Talkless/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Talkless/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe worth adding `[[nodiscard]]` for a new `GetSelectionWaste`?",
    "created_at": "2021-08-17T13:09:54Z",
    "updated_at": "2021-08-17T13:35:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690354107",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690354107"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690354107"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690354107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 180,
    "side": "RIGHT",
    "in_reply_to_id": 666495109
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690357887",
    "pull_request_review_id": 731743420,
    "id": 690357887,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDM1Nzg4Nw==",
    "diff_hunk": "@@ -357,17 +357,44 @@ bool CWallet::AttemptSelection(const CAmount& nTargetValue, const CoinEligibilit\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: calculated waste, selected inputs, selected input value (sum of input values)\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<CAmount, std::set<CInputCoin>, CAmount>> results;\n \n     // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n     std::vector<OutputGroup> positive_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n-    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, setCoinsRet, nValueRet)) {\n-        return true;\n+    std::set<CInputCoin> bnb_coins;\n+    CAmount bnb_value;\n+    bool bnb_ret = SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, bnb_coins, bnb_value);",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1ce0c97c7a531070328d4d742a32b31e1e0bdce5",
    "user": {
      "login": "Talkless",
      "id": 292191,
      "node_id": "MDQ6VXNlcjI5MjE5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/292191?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Talkless",
      "html_url": "https://github.com/Talkless",
      "followers_url": "https://api.github.com/users/Talkless/followers",
      "following_url": "https://api.github.com/users/Talkless/following{/other_user}",
      "gists_url": "https://api.github.com/users/Talkless/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Talkless/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Talkless/subscriptions",
      "organizations_url": "https://api.github.com/users/Talkless/orgs",
      "repos_url": "https://api.github.com/users/Talkless/repos",
      "events_url": "https://api.github.com/users/Talkless/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Talkless/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is it necessary to bring variable in to scope that is used only for `if`? Probably personal preference, but adding variable automatically \"makes you\" (a reviewer) to look for it's uses elsewhere, including possible re-assignemnt as it it's nor marked as `const`.\r\n\r\nPlease consider adding `const` or just remove that variable and \"`if`\" the `SelectCoinsBnB` result directly.",
    "created_at": "2021-08-17T13:14:27Z",
    "updated_at": "2021-08-17T13:35:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690357887",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690357887"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690357887"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690357887/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 369,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690358491",
    "pull_request_review_id": 731743420,
    "id": 690358491,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDM1ODQ5MQ==",
    "diff_hunk": "@@ -357,17 +357,44 @@ bool CWallet::AttemptSelection(const CAmount& nTargetValue, const CoinEligibilit\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: calculated waste, selected inputs, selected input value (sum of input values)\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<CAmount, std::set<CInputCoin>, CAmount>> results;\n \n     // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n     std::vector<OutputGroup> positive_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n-    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, setCoinsRet, nValueRet)) {\n-        return true;\n+    std::set<CInputCoin> bnb_coins;\n+    CAmount bnb_value;\n+    bool bnb_ret = SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, bnb_coins, bnb_value);\n+    if (bnb_ret) {\n+        results.push_back(std::make_tuple(GetSelectionWaste(bnb_coins, /* cost of change */ CAmount(0), nTargetValue, coin_selection_params.m_subtract_fee_outputs), std::move(bnb_coins), bnb_value));\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, false /* positive_only */);\n     // While nTargetValue includes the transaction fees for non-input things, it does not include the fee for creating a change output.\n     // So we need to include that for KnapsackSolver as well, as we are expecting to create a change output.\n-    return KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, setCoinsRet, nValueRet);\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, knapsack_coins, knapsack_value);",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1ce0c97c7a531070328d4d742a32b31e1e0bdce5",
    "user": {
      "login": "Talkless",
      "id": 292191,
      "node_id": "MDQ6VXNlcjI5MjE5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/292191?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Talkless",
      "html_url": "https://github.com/Talkless",
      "followers_url": "https://api.github.com/users/Talkless/followers",
      "following_url": "https://api.github.com/users/Talkless/following{/other_user}",
      "gists_url": "https://api.github.com/users/Talkless/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Talkless/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Talkless/subscriptions",
      "organizations_url": "https://api.github.com/users/Talkless/orgs",
      "repos_url": "https://api.github.com/users/Talkless/repos",
      "events_url": "https://api.github.com/users/Talkless/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Talkless/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Same as per `bool bnb_ret` comment.",
    "created_at": "2021-08-17T13:15:10Z",
    "updated_at": "2021-08-17T13:35:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690358491",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690358491"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690358491"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690358491/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 380,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690376105",
    "pull_request_review_id": 731743420,
    "id": 690376105,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDM3NjEwNQ==",
    "diff_hunk": "@@ -136,6 +141,14 @@ inline std::vector<OutputGroup>& GroupCoins(const std::vector<COutput>& coins)\n     return static_groups;\n }\n \n+inline std::vector<OutputGroup>& KnapsackGroupOutputs(const CoinEligibilityFilter& filter)\n+{\n+    static std::vector<OutputGroup> static_groups;\n+    static_groups.clear();",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1ce0c97c7a531070328d4d742a32b31e1e0bdce5",
    "user": {
      "login": "Talkless",
      "id": 292191,
      "node_id": "MDQ6VXNlcjI5MjE5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/292191?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Talkless",
      "html_url": "https://github.com/Talkless",
      "followers_url": "https://api.github.com/users/Talkless/followers",
      "following_url": "https://api.github.com/users/Talkless/following{/other_user}",
      "gists_url": "https://api.github.com/users/Talkless/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Talkless/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Talkless/subscriptions",
      "organizations_url": "https://api.github.com/users/Talkless/orgs",
      "repos_url": "https://api.github.com/users/Talkless/repos",
      "events_url": "https://api.github.com/users/Talkless/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Talkless/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why `.clear()`? It does not change the capacity (actual internal buffer size, if that was in mind). \r\n\r\nJust next line completely re-assigns `static_groups` and it seems that should be enough?",
    "created_at": "2021-08-17T13:34:25Z",
    "updated_at": "2021-08-17T13:35:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690376105",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690376105"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690376105"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690376105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 147,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690641938",
    "pull_request_review_id": 732121427,
    "id": 690641938,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDY0MTkzOA==",
    "diff_hunk": "@@ -672,10 +698,9 @@ bool CWallet::CreateTransactionInternal(\n                 return false;\n             }\n \n-            // Get long term estimate\n-            CCoinControl cc_temp;\n-            cc_temp.m_confirm_target = chain().estimateMaxBlocks();\n-            coin_selection_params.m_long_term_feerate = GetMinimumFeeRate(*this, cc_temp, nullptr);\n+            // Get the long term fee estimate. This estimate is really the fee rate at which we are still willing to consolidate inputs.\n+            // By default, we use 10 sat/vbyte.\n+            coin_selection_params.m_long_term_feerate = CFeeRate(10, COIN); // Use 10 sat per vbyte",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 57,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "f872c232ffe90a300718b785b5c29b956a427ee4",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Forgot to mention that this was made a configurable option.",
    "created_at": "2021-08-17T18:59:44Z",
    "updated_at": "2021-08-17T18:59:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690641938",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690641938"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690641938"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690641938/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 703,
    "side": "RIGHT",
    "in_reply_to_id": 647439015
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690655586",
    "pull_request_review_id": 732138555,
    "id": 690655586,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDY1NTU4Ng==",
    "diff_hunk": "@@ -357,17 +357,43 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: calculated waste, selected inputs, selected value\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<CAmount, std::set<CInputCoin>, CAmount>> results;\n \n     // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n     std::vector<OutputGroup> positive_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n-    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, setCoinsRet, nValueRet)) {\n-        return true;\n+    std::set<CInputCoin> bnb_coins;\n+    CAmount bnb_value;\n+    bool bnb_ret = SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, bnb_coins, bnb_value);\n+    if (bnb_ret) {\n+        results.push_back(std::make_tuple(GetSelectionWaste(bnb_coins, /* cost of change */ CAmount(0), nTargetValue), std::move(bnb_coins), bnb_value));\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, false /* positive_only */);\n     // While nTargetValue includes the transaction fees for non-input things, it does not include the fee for creating a change output.\n     // So we need to include that for KnapsackSolver as well, as we are expecting to create a change output.\n-    return KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, setCoinsRet, nValueRet);\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, knapsack_coins, knapsack_value);\n+    if (knapsack_ret) {\n+        results.push_back(std::make_tuple(GetSelectionWaste(knapsack_coins, coin_selection_params.m_cost_of_change, nTargetValue + coin_selection_params.m_change_fee), std::move(knapsack_coins), knapsack_value));\n+    }\n+\n+    if (results.size() == 0) {\n+        // No solution found\n+        return false;\n+    }\n+\n+    // Choose the result with the least waste\n+    const auto& best_result = std::min_element(results.begin(), results.end(), [](const auto& a, const auto& b){",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 38,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "f872c232ffe90a300718b785b5c29b956a427ee4",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-08-17T19:20:16Z",
    "updated_at": "2021-08-17T19:20:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690655586",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690655586"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690655586"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690655586/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 390,
    "side": "RIGHT",
    "in_reply_to_id": 647439398
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690655725",
    "pull_request_review_id": 732138704,
    "id": 690655725,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDY1NTcyNQ==",
    "diff_hunk": "@@ -166,6 +166,19 @@ struct OutputGroup\n     CAmount GetSelectionAmount() const;\n };\n \n+/** Compute the waste for this result given the cost of change\n+ * waste = change_cost + excess + inputs * (effective_feerate - long_term_feerate)\n+ * excess = selected_effective_value - target\n+ * change_cost = change_fee + change_long_term_fee\n+ *\n+ * @param[in] inputs The selected inputs\n+ * @param[in] change_cost The cost of creating change and spending it in the future. Only used if there is change. Must be 0 if there is no change.\n+ * @param[in] target The amount targeted by the coin selection algorithm.\n+ * @param[in] real_value Whether to use the input's real value (when true) or the effective value (when false)\n+ * @return The waste\n+ */\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target, bool real_value = false);",
    "path": "src/wallet/coinselection.h",
    "position": null,
    "original_position": 15,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "8a0a1b3f35b8155eaa31ceb59c28269ef5eac176",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done both suggestions.",
    "created_at": "2021-08-17T19:20:28Z",
    "updated_at": "2021-08-17T19:20:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690655725",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690655725"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690655725"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690655725/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 180,
    "side": "RIGHT",
    "in_reply_to_id": 666495109
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656151",
    "pull_request_review_id": 732139184,
    "id": 690656151,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDY1NjE1MQ==",
    "diff_hunk": "@@ -658,10 +685,9 @@ bool CWallet::CreateTransactionInternal(\n         return false;\n     }\n \n-    // Get long term estimate\n-    CCoinControl cc_temp;\n-    cc_temp.m_confirm_target = chain().estimateMaxBlocks();\n-    coin_selection_params.m_long_term_feerate = GetMinimumFeeRate(*this, cc_temp, nullptr);\n+    // Get the long term fee estimate. This estimate is really the fee rate at which we are still willing to consolidate inputs.\n+    // By default, we use 10 sat/vbyte.\n+    coin_selection_params.m_long_term_feerate = CFeeRate(10, COIN); // Use 10 sat per vbyte",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 58,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "8a0a1b3f35b8155eaa31ceb59c28269ef5eac176",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No longer relevant with `-consolidatefeerate` option.",
    "created_at": "2021-08-17T19:21:04Z",
    "updated_at": "2021-08-17T19:21:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690656151",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656151"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690656151"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656151/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 690,
    "side": "RIGHT",
    "in_reply_to_id": 669348197
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656194",
    "pull_request_review_id": 732139255,
    "id": 690656194,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDY1NjE5NA==",
    "diff_hunk": "@@ -650,4 +663,67 @@ BOOST_AUTO_TEST_CASE(SelectCoins_test)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(waste_test)\n+{\n+    CoinSet selection;\n+    const CAmount fee = CAmount(100);\n+    const CAmount change_cost = CAmount(125);\n+    const CAmount fee_diff = CAmount(40);\n+    const CAmount in_amt = 3 * COIN;\n+    const CAmount target = 2 * COIN;\n+    const CAmount excess = in_amt - fee * 2 - target;\n+\n+    // Waste with change is the change cost and difference between fee and long term fee\n+    add_coin(1 * COIN, 1, selection, fee, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee - fee_diff);\n+    const CAmount waste1 = GetSelectionWaste(selection, change_cost, target);\n+    BOOST_CHECK_EQUAL(fee_diff * 2 + change_cost, waste1);\n+    selection.clear();\n+\n+    // Waste without change is the excesss and difference between fee and long term fee\n+    add_coin(1 * COIN, 1, selection, fee, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee - fee_diff);\n+    const CAmount waste_nochange1 = GetSelectionWaste(selection, 0, target);\n+    BOOST_CHECK_EQUAL(fee_diff * 2 + excess, waste_nochange1);\n+    selection.clear();\n+\n+    // Waste with change and fee == long term fee is just cost of change\n+    add_coin(1 * COIN, 1, selection, fee, fee);\n+    add_coin(2 * COIN, 2, selection, fee, fee);\n+    BOOST_CHECK_EQUAL(change_cost, GetSelectionWaste(selection, change_cost, target));\n+    selection.clear();\n+\n+    // Waste without change and fee == long term fee is just the excess\n+    add_coin(1 * COIN, 1, selection, fee, fee);\n+    add_coin(2 * COIN, 2, selection, fee, fee);\n+    BOOST_CHECK_EQUAL(excess, GetSelectionWaste(selection, 0, target));\n+    selection.clear();\n+\n+    // Waste will be greater when fee is greater, but long term fee is the same\n+    add_coin(1 * COIN, 1, selection, fee * 2, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee * 2, fee - fee_diff);\n+    const CAmount waste2 = GetSelectionWaste(selection, change_cost, target);\n+    BOOST_CHECK_GT(waste2, waste1);\n+    selection.clear();\n+\n+    // Waste with change is the change cost and difference between fee and long term fee\n+    // With long term fee greater than fee, waste should be less than when long term fee is less than fee\n+    add_coin(1 * COIN, 1, selection, fee, fee + fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee + fee_diff);\n+    const CAmount waste3 = GetSelectionWaste(selection, change_cost, target);\n+    BOOST_CHECK_EQUAL(fee_diff * -2 + change_cost, waste3);\n+    BOOST_CHECK_LT(waste3, waste1);\n+    selection.clear();\n+\n+    // Waste without change is the excesss and difference between fee and long term fee\n+    // With long term fee greater than fee, waste should be less than when long term fee is less than fee\n+    add_coin(1 * COIN, 1, selection, fee, fee + fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee + fee_diff);\n+    const CAmount waste_nochange2 = GetSelectionWaste(selection, 0, target);\n+    BOOST_CHECK_EQUAL(fee_diff * -2 + excess, waste_nochange2);\n+    BOOST_CHECK_LT(waste_nochange2, waste_nochange1);\n+    selection.clear();\n+",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": 323,
    "original_position": 327,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "8a0a1b3f35b8155eaa31ceb59c28269ef5eac176",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-08-17T19:21:08Z",
    "updated_at": "2021-08-17T19:21:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690656194",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656194"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690656194"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656194/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 725,
    "original_line": 725,
    "side": "RIGHT",
    "in_reply_to_id": 669358253
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656266",
    "pull_request_review_id": 732139359,
    "id": 690656266,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDY1NjI2Ng==",
    "diff_hunk": "@@ -45,6 +45,7 @@ void WalletInit::AddWalletOptions(ArgsManager& argsman) const\n     argsman.AddArg(\"-addresstype\", strprintf(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\", default: \\\"%s\\\")\", FormatOutputType(DEFAULT_ADDRESS_TYPE)), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     argsman.AddArg(\"-avoidpartialspends\", strprintf(\"Group outputs by address, selecting many (possibly all) or none, instead of selecting on a per-output basis. Privacy is improved as addresses are mostly swept with fewer transactions and outputs are aggregated in clean change addresses. It may result in higher fees due to less optimal coin selection caused by this added limitation and possibly a larger-than-necessary number of inputs being used. Always enabled for wallets with \\\"avoid_reuse\\\" enabled, otherwise default: %u.\", DEFAULT_AVOIDPARTIALSPENDS), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     argsman.AddArg(\"-changetype\", \"What type of change to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\"). Default is same as -addresstype, except when -addresstype=p2sh-segwit a native segwit output is used when sending to a native segwit address)\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n+    argsman.AddArg(\"-consolidatefeerate=<amt>\", strprintf(\"The fee rate (in %s/kvB) that indicates the highest feerate you are comfortable making consolidation transactions at (default: %s). \", CURRENCY_UNIT, FormatMoney(DEFAULT_CONSOLIDATE_FEERATE)), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);",
    "path": "src/wallet/init.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1ce0c97c7a531070328d4d742a32b31e1e0bdce5",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed.",
    "created_at": "2021-08-17T19:21:16Z",
    "updated_at": "2021-08-17T19:21:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690656266",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656266"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690656266"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656266/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 48,
    "side": "RIGHT",
    "in_reply_to_id": 676333477
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656320",
    "pull_request_review_id": 732139444,
    "id": 690656320,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDY1NjMyMA==",
    "diff_hunk": "@@ -48,14 +48,19 @@ static void add_coin(const CAmount& nValue, int nInput, std::vector<CInputCoin>&\n     set.emplace_back(MakeTransactionRef(tx), nInput);\n }\n \n-static void add_coin(const CAmount& nValue, int nInput, CoinSet& set)\n+static void add_coin(const CAmount& nValue, int nInput, CoinSet& set, CAmount fee = 0, CAmount long_term_fee = 0)\n {\n     CMutableTransaction tx;\n     tx.vout.resize(nInput + 1);\n     tx.vout[nInput].nValue = nValue;\n-    set.emplace(MakeTransactionRef(tx), nInput);\n+    CInputCoin coin(MakeTransactionRef(tx), nInput);\n+    coin.effective_value -= fee;\n+    coin.m_fee = fee;\n+    coin.m_long_term_fee = long_term_fee;\n+    set.insert(coin);\n }\n \n+",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "6cbe2c4bd9989db820dc01b124e57aa239cf4fb3",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Removed",
    "created_at": "2021-08-17T19:21:23Z",
    "updated_at": "2021-08-17T19:21:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690656320",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656320"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690656320"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656320/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 63,
    "side": "RIGHT",
    "in_reply_to_id": 680544785
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656354",
    "pull_request_review_id": 732139490,
    "id": 690656354,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDY1NjM1NA==",
    "diff_hunk": "@@ -658,4 +663,67 @@ BOOST_AUTO_TEST_CASE(SelectCoins_test)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(waste_test)\n+{\n+    CoinSet selection;\n+    const CAmount fee = CAmount(100);\n+    const CAmount change_cost = CAmount(125);\n+    const CAmount fee_diff = CAmount(40);\n+    const CAmount in_amt = 3 * COIN;\n+    const CAmount target = 2 * COIN;\n+    const CAmount excess = in_amt - fee * 2 - target;\n+\n+    // Waste with change is the change cost and difference between fee and long term fee\n+    add_coin(1 * COIN, 1, selection, fee, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee - fee_diff);\n+    const CAmount waste1 = GetSelectionWaste(selection, change_cost, target);\n+    BOOST_CHECK_EQUAL(fee_diff * 2 + change_cost, waste1);\n+    selection.clear();\n+\n+    // Waste without change is the excesss and difference between fee and long term fee\n+    add_coin(1 * COIN, 1, selection, fee, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee - fee_diff);\n+    const CAmount waste_nochange1 = GetSelectionWaste(selection, 0, target);\n+    BOOST_CHECK_EQUAL(fee_diff * 2 + excess, waste_nochange1);\n+    selection.clear();\n+\n+    // Waste with change and fee == long term fee is just cost of change\n+    add_coin(1 * COIN, 1, selection, fee, fee);\n+    add_coin(2 * COIN, 2, selection, fee, fee);\n+    BOOST_CHECK_EQUAL(change_cost, GetSelectionWaste(selection, change_cost, target));\n+    selection.clear();\n+\n+    // Waste without change and fee == long term fee is just the excess\n+    add_coin(1 * COIN, 1, selection, fee, fee);\n+    add_coin(2 * COIN, 2, selection, fee, fee);\n+    BOOST_CHECK_EQUAL(excess, GetSelectionWaste(selection, 0, target));\n+    selection.clear();\n+\n+    // Waste will be greater when fee is greater, but long term fee is the same\n+    add_coin(1 * COIN, 1, selection, fee * 2, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee * 2, fee - fee_diff);\n+    const CAmount waste2 = GetSelectionWaste(selection, change_cost, target);\n+    BOOST_CHECK_GT(waste2, waste1);\n+    selection.clear();\n+\n+    // Waste with change is the change cost and difference between fee and long term fee\n+    // With long term fee greater than fee, waste should be less than when long term fee is less than fee\n+    add_coin(1 * COIN, 1, selection, fee, fee + fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee + fee_diff);\n+    const CAmount waste3 = GetSelectionWaste(selection, change_cost, target);\n+    BOOST_CHECK_EQUAL(fee_diff * -2 + change_cost, waste3);\n+    BOOST_CHECK_LT(waste3, waste1);\n+    selection.clear();\n+\n+    // Waste without change is the excesss and difference between fee and long term fee",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": null,
    "original_position": 78,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "6cbe2c4bd9989db820dc01b124e57aa239cf4fb3",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed.",
    "created_at": "2021-08-17T19:21:27Z",
    "updated_at": "2021-08-17T19:21:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690656354",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656354"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690656354"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656354/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 718,
    "side": "RIGHT",
    "in_reply_to_id": 680550694
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656397",
    "pull_request_review_id": 732139539,
    "id": 690656397,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDY1NjM5Nw==",
    "diff_hunk": "@@ -658,4 +663,67 @@ BOOST_AUTO_TEST_CASE(SelectCoins_test)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(waste_test)\n+{\n+    CoinSet selection;\n+    const CAmount fee = CAmount(100);\n+    const CAmount change_cost = CAmount(125);\n+    const CAmount fee_diff = CAmount(40);\n+    const CAmount in_amt = 3 * COIN;\n+    const CAmount target = 2 * COIN;\n+    const CAmount excess = in_amt - fee * 2 - target;\n+\n+    // Waste with change is the change cost and difference between fee and long term fee\n+    add_coin(1 * COIN, 1, selection, fee, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee - fee_diff);\n+    const CAmount waste1 = GetSelectionWaste(selection, change_cost, target);\n+    BOOST_CHECK_EQUAL(fee_diff * 2 + change_cost, waste1);\n+    selection.clear();\n+\n+    // Waste without change is the excesss and difference between fee and long term fee",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "6cbe2c4bd9989db820dc01b124e57aa239cf4fb3",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed.",
    "created_at": "2021-08-17T19:21:31Z",
    "updated_at": "2021-08-17T19:21:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690656397",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656397"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690656397"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 683,
    "side": "RIGHT",
    "in_reply_to_id": 680550730
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656695",
    "pull_request_review_id": 732139881,
    "id": 690656695,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDY1NjY5NQ==",
    "diff_hunk": "@@ -357,17 +357,44 @@ bool CWallet::AttemptSelection(const CAmount& nTargetValue, const CoinEligibilit\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: calculated waste, selected inputs, selected input value (sum of input values)\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<CAmount, std::set<CInputCoin>, CAmount>> results;\n \n     // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n     std::vector<OutputGroup> positive_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n-    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, setCoinsRet, nValueRet)) {\n-        return true;\n+    std::set<CInputCoin> bnb_coins;\n+    CAmount bnb_value;\n+    bool bnb_ret = SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, bnb_coins, bnb_value);",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1ce0c97c7a531070328d4d742a32b31e1e0bdce5",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This variable was used in a previous revision. Changed to use the in the `if` directly.",
    "created_at": "2021-08-17T19:21:55Z",
    "updated_at": "2021-08-17T19:21:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690656695",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656695"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690656695"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656695/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 369,
    "side": "RIGHT",
    "in_reply_to_id": 690357887
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656759",
    "pull_request_review_id": 732139942,
    "id": 690656759,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDY1Njc1OQ==",
    "diff_hunk": "@@ -357,17 +357,44 @@ bool CWallet::AttemptSelection(const CAmount& nTargetValue, const CoinEligibilit\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: calculated waste, selected inputs, selected input value (sum of input values)\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<CAmount, std::set<CInputCoin>, CAmount>> results;\n \n     // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n     std::vector<OutputGroup> positive_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n-    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, setCoinsRet, nValueRet)) {\n-        return true;\n+    std::set<CInputCoin> bnb_coins;\n+    CAmount bnb_value;\n+    bool bnb_ret = SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, bnb_coins, bnb_value);\n+    if (bnb_ret) {\n+        results.push_back(std::make_tuple(GetSelectionWaste(bnb_coins, /* cost of change */ CAmount(0), nTargetValue, coin_selection_params.m_subtract_fee_outputs), std::move(bnb_coins), bnb_value));\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, false /* positive_only */);\n     // While nTargetValue includes the transaction fees for non-input things, it does not include the fee for creating a change output.\n     // So we need to include that for KnapsackSolver as well, as we are expecting to create a change output.\n-    return KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, setCoinsRet, nValueRet);\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, knapsack_coins, knapsack_value);",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1ce0c97c7a531070328d4d742a32b31e1e0bdce5",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-08-17T19:22:00Z",
    "updated_at": "2021-08-17T19:22:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690656759",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656759"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690656759"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690656759/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 380,
    "side": "RIGHT",
    "in_reply_to_id": 690358491
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690657001",
    "pull_request_review_id": 732140260,
    "id": 690657001,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDY1NzAwMQ==",
    "diff_hunk": "@@ -136,6 +141,14 @@ inline std::vector<OutputGroup>& GroupCoins(const std::vector<COutput>& coins)\n     return static_groups;\n }\n \n+inline std::vector<OutputGroup>& KnapsackGroupOutputs(const CoinEligibilityFilter& filter)\n+{\n+    static std::vector<OutputGroup> static_groups;\n+    static_groups.clear();",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1ce0c97c7a531070328d4d742a32b31e1e0bdce5",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This was copied from one of the other functions, but indeed is unnecessary, so I have removed it.",
    "created_at": "2021-08-17T19:22:23Z",
    "updated_at": "2021-08-17T19:22:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690657001",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690657001"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690657001"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690657001/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 147,
    "side": "RIGHT",
    "in_reply_to_id": 690376105
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690685645",
    "pull_request_review_id": 732177712,
    "id": 690685645,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDY4NTY0NQ==",
    "diff_hunk": "@@ -45,6 +45,7 @@ void WalletInit::AddWalletOptions(ArgsManager& argsman) const\n     argsman.AddArg(\"-addresstype\", strprintf(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\", default: \\\"%s\\\")\", FormatOutputType(DEFAULT_ADDRESS_TYPE)), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     argsman.AddArg(\"-avoidpartialspends\", strprintf(\"Group outputs by address, selecting many (possibly all) or none, instead of selecting on a per-output basis. Privacy is improved as addresses are mostly swept with fewer transactions and outputs are aggregated in clean change addresses. It may result in higher fees due to less optimal coin selection caused by this added limitation and possibly a larger-than-necessary number of inputs being used. Always enabled for wallets with \\\"avoid_reuse\\\" enabled, otherwise default: %u.\", DEFAULT_AVOIDPARTIALSPENDS), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     argsman.AddArg(\"-changetype\", \"What type of change to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\"). Default is same as -addresstype, except when -addresstype=p2sh-segwit a native segwit output is used when sending to a native segwit address)\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n+    argsman.AddArg(\"-consolidatefeerate=<amt>\", strprintf(\"The fee rate (in %s/kvB) that indicates the highest feerate you are comfortable making consolidation transactions at (default: %s).\", CURRENCY_UNIT, FormatMoney(DEFAULT_CONSOLIDATE_FEERATE)), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);",
    "path": "src/wallet/init.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "47214f7aa4294bb991e3c6fb13a289a0726205f1",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Mh, I'm thinking about the use of \"consolidation transaction\" here. I would usually use that term for a transaction that has the exclusive purpose of converting multiple UTXOs to a single UTXO without performing a payment.\r\n\r\nPerhaps: \"the maximum feerate at which transaction building may use more inputs than strictly necessary to reduce the wallet's UTXO pool\".",
    "created_at": "2021-08-17T20:07:55Z",
    "updated_at": "2021-08-17T22:03:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690685645",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690685645"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690685645"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690685645/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 48,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690687789",
    "pull_request_review_id": 732180464,
    "id": 690687789,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDY4Nzc4OQ==",
    "diff_hunk": "@@ -543,7 +543,7 @@ def test_locked_wallet(self):\n         self.nodes[1].getnewaddress()\n         self.nodes[1].getrawchangeaddress()\n         inputs = []\n-        outputs = {self.nodes[0].getnewaddress():1.09999500}\n+        outputs = {self.nodes[0].getnewaddress():1.19999500}",
    "path": "test/functional/rpc_fundrawtransaction.py",
    "position": 5,
    "original_position": 5,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "821a8b908d49ea13c535e30cdd4f9a20a86767ad",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Note: I believe this change is related to #22686. What I think was happening in previous revisions of this PR is that due to that bug, `KnapsackSolver` would find a solution without change that doesn't actually work, and because of that, it would also have worse waste than the BnB solution. We don't see this in master because there is a BnB solution and in master, we default to the BnB solution. This PR, combined with #22686 allows `KnapsackSolver` to find a solution with change that happens to have less waste, so it was being chosen, causing the test to fail at the `fundrawtransaction` below. So this value is being changed to just under 1.2 which is the value of that optimal input set `KnapsackSolver` finds.",
    "created_at": "2021-08-17T20:11:23Z",
    "updated_at": "2021-08-17T20:12:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690687789",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690687789"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690687789"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690687789/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 546,
    "original_line": 546,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690692038",
    "pull_request_review_id": 732177712,
    "id": 690692038,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDY5MjAzOA==",
    "diff_hunk": "@@ -45,6 +45,7 @@ void WalletInit::AddWalletOptions(ArgsManager& argsman) const\n     argsman.AddArg(\"-addresstype\", strprintf(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\", default: \\\"%s\\\")\", FormatOutputType(DEFAULT_ADDRESS_TYPE)), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     argsman.AddArg(\"-avoidpartialspends\", strprintf(\"Group outputs by address, selecting many (possibly all) or none, instead of selecting on a per-output basis. Privacy is improved as addresses are mostly swept with fewer transactions and outputs are aggregated in clean change addresses. It may result in higher fees due to less optimal coin selection caused by this added limitation and possibly a larger-than-necessary number of inputs being used. Always enabled for wallets with \\\"avoid_reuse\\\" enabled, otherwise default: %u.\", DEFAULT_AVOIDPARTIALSPENDS), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     argsman.AddArg(\"-changetype\", \"What type of change to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\"). Default is same as -addresstype, except when -addresstype=p2sh-segwit a native segwit output is used when sending to a native segwit address)\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n+    argsman.AddArg(\"-consolidatefeerate=<amt>\", strprintf(\"The fee rate (in %s/kvB) that indicates the highest feerate you are comfortable making consolidation transactions at (default: %s).\", CURRENCY_UNIT, FormatMoney(DEFAULT_CONSOLIDATE_FEERATE)), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);",
    "path": "src/wallet/init.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "47214f7aa4294bb991e3c6fb13a289a0726205f1",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Also, this sentence uses \"fee rate\" and \"feerate\" once each. Personally, I prefer \"feerate\".",
    "created_at": "2021-08-17T20:18:02Z",
    "updated_at": "2021-08-17T22:03:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690692038",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690692038"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690692038"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690692038/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 48,
    "side": "RIGHT",
    "in_reply_to_id": 690685645
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690693503",
    "pull_request_review_id": 732177712,
    "id": 690693503,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDY5MzUwMw==",
    "diff_hunk": "@@ -659,10 +659,8 @@ bool CWallet::CreateTransactionInternal(\n         return false;\n     }\n \n-    // Get long term estimate\n-    CCoinControl cc_temp;\n-    cc_temp.m_confirm_target = chain().estimateMaxBlocks();\n-    coin_selection_params.m_long_term_feerate = GetMinimumFeeRate(*this, cc_temp, nullptr);\n+    // Set the long term fee estimate to the wallet's consolidate feerate",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 8,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "47214f7aa4294bb991e3c6fb13a289a0726205f1",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n    // Set the long term feerate estimate to the wallet's consolidate feerate\r\n```",
    "created_at": "2021-08-17T20:20:30Z",
    "updated_at": "2021-08-17T22:03:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690693503",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690693503"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690693503"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690693503/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 662,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690702295",
    "pull_request_review_id": 732177712,
    "id": 690702295,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDcwMjI5NQ==",
    "diff_hunk": "@@ -341,3 +341,31 @@ CAmount OutputGroup::GetSelectionAmount() const\n {\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n+\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target, bool use_effective_value)\n+{\n+    // If the result is empty, then selection failed. Don't use this one, so set waste to very high",
    "path": "src/wallet/coinselection.cpp",
    "position": null,
    "original_position": 7,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "f71918ca7e8c96967ac08ad4b661ab7c82f3d4ef",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It seems odd to me that we'd even allow calling `GetSelectionWaste` with an empty input set. Shouldn't rather the caller that is evaluating the input set candidates notice that this candidate is ineligible rather than us setting the waste high here so that it doesn't get used? What if e.g. both selection methods end up having an empty set, do we then pick the smaller of two `MAX_MONEY` waste values?\r\n\r\nI'd probably assert that the input set cannot be empty.",
    "created_at": "2021-08-17T20:33:52Z",
    "updated_at": "2021-08-17T22:03:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690702295",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690702295"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690702295"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690702295/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 347,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690708978",
    "pull_request_review_id": 732177712,
    "id": 690708978,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDcwODk3OA==",
    "diff_hunk": "@@ -659,10 +659,8 @@ bool CWallet::CreateTransactionInternal(\n         return false;\n     }\n \n-    // Get long term estimate\n-    CCoinControl cc_temp;\n-    cc_temp.m_confirm_target = chain().estimateMaxBlocks();\n-    coin_selection_params.m_long_term_feerate = GetMinimumFeeRate(*this, cc_temp, nullptr);\n+    // Set the long term fee estimate to the wallet's consolidate feerate\n+    coin_selection_params.m_long_term_feerate = m_consolidate_feerate;",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "47214f7aa4294bb991e3c6fb13a289a0726205f1",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I feel like \"the feerate at which I would perform consolidation transactions\" and \"the feerate that I expect to be a minimum feerate in the long term\" may be subtly different things, but I don't have an improvement suggestion at the moment.",
    "created_at": "2021-08-17T20:44:20Z",
    "updated_at": "2021-08-17T22:03:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690708978",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690708978"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690708978"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690708978/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 688,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690744470",
    "pull_request_review_id": 732177712,
    "id": 690744470,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDc0NDQ3MA==",
    "diff_hunk": "@@ -49,12 +49,16 @@ static void add_coin(const CAmount& nValue, int nInput, std::vector<CInputCoin>&\n     set.emplace_back(MakeTransactionRef(tx), nInput);\n }\n \n-static void add_coin(const CAmount& nValue, int nInput, CoinSet& set)\n+static void add_coin(const CAmount& nValue, int nInput, CoinSet& set, CAmount fee = 0, CAmount long_term_fee = 0)\n {\n     CMutableTransaction tx;\n     tx.vout.resize(nInput + 1);\n     tx.vout[nInput].nValue = nValue;\n-    set.emplace(MakeTransactionRef(tx), nInput);\n+    CInputCoin coin(MakeTransactionRef(tx), nInput);\n+    coin.effective_value -= fee;",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "53d9add0b6ded57a1561f545245f5f6530d70560",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Shouldn't this be `coin.effective_value = nValue - fee;`?\r\n\r\nIt seems easier to review and more obviously correct to calculate the correct value for `effective_value` here when all the ingredients for this calculation are already input parameters for the function instead of defining it relative to some initial value for `effective_value` that is set by the `CInputCoin` constructor. It does not seem obvious to me that `CInputCoin` would be initialized with `effective_value = nValue`. I would have expected the initial value for `effective_value` to either be undefined until it is set or that the constructor of `CInputCoin` takes `fee` or `feerate` as an optional parameter and immediately sets `effective_value` to the correct value when the constructor is called.\r\n\r\nOtherwise, it seems like an easy way for a bug to happen if someone just calls `CInputCoin` and uses the initial value of `effective_value` not realizing that it was not set to the correct amount.",
    "created_at": "2021-08-17T21:43:50Z",
    "updated_at": "2021-08-17T22:09:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690744470",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690744470"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690744470"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690744470/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 58,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690764874",
    "pull_request_review_id": 732277252,
    "id": 690764874,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDc2NDg3NA==",
    "diff_hunk": "@@ -45,6 +45,7 @@ void WalletInit::AddWalletOptions(ArgsManager& argsman) const\n     argsman.AddArg(\"-addresstype\", strprintf(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\", default: \\\"%s\\\")\", FormatOutputType(DEFAULT_ADDRESS_TYPE)), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     argsman.AddArg(\"-avoidpartialspends\", strprintf(\"Group outputs by address, selecting many (possibly all) or none, instead of selecting on a per-output basis. Privacy is improved as addresses are mostly swept with fewer transactions and outputs are aggregated in clean change addresses. It may result in higher fees due to less optimal coin selection caused by this added limitation and possibly a larger-than-necessary number of inputs being used. Always enabled for wallets with \\\"avoid_reuse\\\" enabled, otherwise default: %u.\", DEFAULT_AVOIDPARTIALSPENDS), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     argsman.AddArg(\"-changetype\", \"What type of change to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\"). Default is same as -addresstype, except when -addresstype=p2sh-segwit a native segwit output is used when sending to a native segwit address)\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n+    argsman.AddArg(\"-consolidatefeerate=<amt>\", strprintf(\"The fee rate (in %s/kvB) that indicates the highest feerate you are comfortable making consolidation transactions at (default: %s).\", CURRENCY_UNIT, FormatMoney(DEFAULT_CONSOLIDATE_FEERATE)), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);",
    "path": "src/wallet/init.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "47214f7aa4294bb991e3c6fb13a289a0726205f1",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Changed.",
    "created_at": "2021-08-17T22:26:26Z",
    "updated_at": "2021-08-17T22:26:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690764874",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690764874"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690764874"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690764874/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 48,
    "side": "RIGHT",
    "in_reply_to_id": 690685645
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690764911",
    "pull_request_review_id": 732277294,
    "id": 690764911,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDc2NDkxMQ==",
    "diff_hunk": "@@ -659,10 +659,8 @@ bool CWallet::CreateTransactionInternal(\n         return false;\n     }\n \n-    // Get long term estimate\n-    CCoinControl cc_temp;\n-    cc_temp.m_confirm_target = chain().estimateMaxBlocks();\n-    coin_selection_params.m_long_term_feerate = GetMinimumFeeRate(*this, cc_temp, nullptr);\n+    // Set the long term fee estimate to the wallet's consolidate feerate",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 8,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "47214f7aa4294bb991e3c6fb13a289a0726205f1",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Changed.",
    "created_at": "2021-08-17T22:26:30Z",
    "updated_at": "2021-08-17T22:26:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690764911",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690764911"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690764911"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690764911/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 662,
    "side": "RIGHT",
    "in_reply_to_id": 690693503
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690765181",
    "pull_request_review_id": 732277629,
    "id": 690765181,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDc2NTE4MQ==",
    "diff_hunk": "@@ -341,3 +341,31 @@ CAmount OutputGroup::GetSelectionAmount() const\n {\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n+\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target, bool use_effective_value)\n+{\n+    // If the result is empty, then selection failed. Don't use this one, so set waste to very high",
    "path": "src/wallet/coinselection.cpp",
    "position": null,
    "original_position": 7,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "f71918ca7e8c96967ac08ad4b661ab7c82f3d4ef",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Originally the intent was to always run this function regardless of success or failure. But we won't be doing that, so it's fine to assert here. Done.",
    "created_at": "2021-08-17T22:27:12Z",
    "updated_at": "2021-08-17T22:27:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690765181",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690765181"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690765181"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690765181/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 347,
    "side": "RIGHT",
    "in_reply_to_id": 690702295
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690765302",
    "pull_request_review_id": 732277759,
    "id": 690765302,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDc2NTMwMg==",
    "diff_hunk": "@@ -49,12 +49,16 @@ static void add_coin(const CAmount& nValue, int nInput, std::vector<CInputCoin>&\n     set.emplace_back(MakeTransactionRef(tx), nInput);\n }\n \n-static void add_coin(const CAmount& nValue, int nInput, CoinSet& set)\n+static void add_coin(const CAmount& nValue, int nInput, CoinSet& set, CAmount fee = 0, CAmount long_term_fee = 0)\n {\n     CMutableTransaction tx;\n     tx.vout.resize(nInput + 1);\n     tx.vout[nInput].nValue = nValue;\n-    set.emplace(MakeTransactionRef(tx), nInput);\n+    CInputCoin coin(MakeTransactionRef(tx), nInput);\n+    coin.effective_value -= fee;",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "53d9add0b6ded57a1561f545245f5f6530d70560",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Changed.",
    "created_at": "2021-08-17T22:27:28Z",
    "updated_at": "2021-08-17T22:27:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690765302",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690765302"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r690765302"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/690765302/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 58,
    "side": "RIGHT",
    "in_reply_to_id": 690744470
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/691956992",
    "pull_request_review_id": 733783628,
    "id": 691956992,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTk1Njk5Mg==",
    "diff_hunk": "@@ -71,6 +71,8 @@ static const CAmount DEFAULT_FALLBACK_FEE = 0;\n static const CAmount DEFAULT_DISCARD_FEE = 10000;\n //! -mintxfee default\n static const CAmount DEFAULT_TRANSACTION_MINFEE = 1000;\n+//! -consolidatefee default\n+static const CAmount DEFAULT_CONSOLIDATE_FEERATE = 10000; // 10 sat/vbyte",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 5,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "b94c84848990ca6a0654cfa76826889b726891f5",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "definitely not going to nitpick this but why 10? :) ",
    "created_at": "2021-08-19T09:45:19Z",
    "updated_at": "2021-08-19T09:45:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r691956992",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/691956992"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r691956992"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/691956992/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692271206",
    "pull_request_review_id": 734202135,
    "id": 692271206,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjI3MTIwNg==",
    "diff_hunk": "@@ -71,6 +71,8 @@ static const CAmount DEFAULT_FALLBACK_FEE = 0;\n static const CAmount DEFAULT_DISCARD_FEE = 10000;\n //! -mintxfee default\n static const CAmount DEFAULT_TRANSACTION_MINFEE = 1000;\n+//! -consolidatefee default\n+static const CAmount DEFAULT_CONSOLIDATE_FEERATE = 10000; // 10 sat/vbyte",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 5,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "b94c84848990ca6a0654cfa76826889b726891f5",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It seemed like a reasonable number",
    "created_at": "2021-08-19T16:06:30Z",
    "updated_at": "2021-08-19T16:06:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r692271206",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692271206"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r692271206"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692271206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT",
    "in_reply_to_id": 691956992
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692359344",
    "pull_request_review_id": 734302555,
    "id": 692359344,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjM1OTM0NA==",
    "diff_hunk": "@@ -71,6 +71,8 @@ static const CAmount DEFAULT_FALLBACK_FEE = 0;\n static const CAmount DEFAULT_DISCARD_FEE = 10000;\n //! -mintxfee default\n static const CAmount DEFAULT_TRANSACTION_MINFEE = 1000;\n+//! -consolidatefee default\n+static const CAmount DEFAULT_CONSOLIDATE_FEERATE = 10000; // 10 sat/vbyte",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 5,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "b94c84848990ca6a0654cfa76826889b726891f5",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Given that we have gotten that question twice again in the last 24h, it would probably be best to add context for that number in the commit messages or code somewhere.",
    "created_at": "2021-08-19T17:53:58Z",
    "updated_at": "2021-08-19T17:53:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r692359344",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692359344"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r692359344"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692359344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT",
    "in_reply_to_id": 691956992
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692371546",
    "pull_request_review_id": 734318586,
    "id": 692371546,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjM3MTU0Ng==",
    "diff_hunk": "@@ -71,6 +71,8 @@ static const CAmount DEFAULT_FALLBACK_FEE = 0;\n static const CAmount DEFAULT_DISCARD_FEE = 10000;\n //! -mintxfee default\n static const CAmount DEFAULT_TRANSACTION_MINFEE = 1000;\n+//! -consolidatefee default\n+static const CAmount DEFAULT_CONSOLIDATE_FEERATE = 10000; // 10 sat/vbyte",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 5,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "b94c84848990ca6a0654cfa76826889b726891f5",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I added to the commit message that it was chosen arbitrarily.",
    "created_at": "2021-08-19T18:11:41Z",
    "updated_at": "2021-08-19T18:11:41Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r692371546",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692371546"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r692371546"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692371546/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT",
    "in_reply_to_id": 691956992
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692588236",
    "pull_request_review_id": 734586165,
    "id": 692588236,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjU4ODIzNg==",
    "diff_hunk": "@@ -71,6 +71,8 @@ static const CAmount DEFAULT_FALLBACK_FEE = 0;\n static const CAmount DEFAULT_DISCARD_FEE = 10000;\n //! -mintxfee default\n static const CAmount DEFAULT_TRANSACTION_MINFEE = 1000;\n+//! -consolidatefee default",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 4,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "5f81b7e9317f703de6f949c532dac49300a14218",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: `-consolidatefeerate`",
    "created_at": "2021-08-20T01:10:16Z",
    "updated_at": "2021-08-20T01:38:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r692588236",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692588236"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r692588236"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692588236/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 76,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692592450",
    "pull_request_review_id": 734586165,
    "id": 692592450,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjU5MjQ1MA==",
    "diff_hunk": "@@ -357,17 +357,43 @@ bool CWallet::AttemptSelection(const CAmount& nTargetValue, const CoinEligibilit\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: calculated waste, selected inputs, selected value\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<CAmount, std::set<CInputCoin>, CAmount>> results;",
    "path": "src/wallet/spend.cpp",
    "position": 7,
    "original_position": 7,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "6f607eeefb37036d5b0ada89cb3772cbc0de5fb2",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Do you anticipate having more coin selection algorithms in future? Why bother with the vector etc. rather than just direct comparison between the two results?",
    "created_at": "2021-08-20T01:24:41Z",
    "updated_at": "2021-08-20T01:38:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r692592450",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692592450"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r692592450"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692592450/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 363,
    "original_line": 363,
    "side": "RIGHT",
    "in_reply_to_id": 661843975
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692600218",
    "pull_request_review_id": 734599214,
    "id": 692600218,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjYwMDIxOA==",
    "diff_hunk": "@@ -357,17 +357,43 @@ bool CWallet::AttemptSelection(const CAmount& nTargetValue, const CoinEligibilit\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: calculated waste, selected inputs, selected value\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<CAmount, std::set<CInputCoin>, CAmount>> results;",
    "path": "src/wallet/spend.cpp",
    "position": 7,
    "original_position": 7,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "6f607eeefb37036d5b0ada89cb3772cbc0de5fb2",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, #17526 will be updated to add another result to this vector.",
    "created_at": "2021-08-20T01:48:12Z",
    "updated_at": "2021-08-20T01:48:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r692600218",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692600218"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r692600218"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692600218/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 363,
    "original_line": 363,
    "side": "RIGHT",
    "in_reply_to_id": 661843975
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692825927",
    "pull_request_review_id": 734866522,
    "id": 692825927,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjgyNTkyNw==",
    "diff_hunk": "@@ -137,6 +141,13 @@ inline std::vector<OutputGroup>& GroupCoins(const std::vector<COutput>& coins)\n     return static_groups;\n }\n \n+inline std::vector<OutputGroup>& KnapsackGroupOutputs(const CoinEligibilityFilter& filter)\n+{\n+    static std::vector<OutputGroup> static_groups;\n+    static_groups = testWallet.GroupOutputs(vCoins, coin_selection_params, filter, false);",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": null,
    "original_position": 26,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1858364a949ea8345df5e845e7d1433b7cd5ffd0",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit in caab9da230\r\n```suggestion\r\n    static_groups = testWallet.GroupOutputs(vCoins, coin_selection_params, filter, /* positive_only */ false);\r\n```",
    "created_at": "2021-08-20T10:00:18Z",
    "updated_at": "2021-08-24T10:49:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r692825927",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692825927"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r692825927"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692825927/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 147,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692834187",
    "pull_request_review_id": 734866522,
    "id": 692834187,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjgzNDE4Nw==",
    "diff_hunk": "@@ -166,6 +166,19 @@ struct OutputGroup\n     CAmount GetSelectionAmount() const;\n };\n \n+/** Compute the waste for this result given the cost of change\n+ * waste = change_cost + excess + inputs * (effective_feerate - long_term_feerate)\n+ * excess = selected_effective_value - target\n+ * change_cost = change_fee + change_long_term_fee\n+ *\n+ * @param[in] inputs The selected inputs\n+ * @param[in] change_cost The cost of creating change and spending it in the future. Only used if there is change. Must be 0 if there is no change.\n+ * @param[in] target The amount targeted by the coin selection algorithm.\n+ * @param[in] use_effective_value Whether to use the input's effective value (when true) or the real value (when false).\n+ * @return The waste",
    "path": "src/wallet/coinselection.h",
    "position": null,
    "original_position": 13,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1858364a949ea8345df5e845e7d1433b7cd5ffd0",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in 5a22462 _Add waste metric calculation function_:\r\nI see that https://github.com/bitcoin/bitcoin/pull/22009/files#r661815255 was addressed, but I still think it could be made clearer that excess is only used if there is no change? For example\r\n```suggestion\r\n/** Compute the waste for this result given whether a change output was made and the\r\n* opportunity cost of spending these inputs now vs in the future.\r\n* If change exists, waste = change_cost + inputs * (effective_feerate - long_term_feerate)\r\n* If no change, waste = excess + inputs * (effective_feerate - long_term_feerate)\r\n * where excess = selected_effective_value - target\r\n * change_cost = effective_feerate * change_output_size + long_term_feerate * change_spend_size\r\n *\r\n * @param[in] inputs The selected inputs\r\n * @param[in] change_cost The cost of creating change and spending it in the future. Must be 0 if there is no change.\r\n * @param[in] target The amount targeted by the coin selection algorithm.\r\n * @param[in] use_effective_value Whether to use the input's effective value (when true) or the real value (when false).\r\n * @return The waste\r\n```",
    "created_at": "2021-08-20T10:14:17Z",
    "updated_at": "2021-08-24T10:49:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r692834187",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692834187"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r692834187"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692834187/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 169,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 180,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693333514",
    "pull_request_review_id": 735483974,
    "id": 693333514,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzMzMzUxNA==",
    "diff_hunk": "@@ -543,7 +543,7 @@ def test_locked_wallet(self):\n         self.nodes[1].getnewaddress()\n         self.nodes[1].getrawchangeaddress()\n         inputs = []\n-        outputs = {self.nodes[0].getnewaddress():1.09999500}\n+        outputs = {self.nodes[0].getnewaddress():1.19999500}",
    "path": "test/functional/rpc_fundrawtransaction.py",
    "position": 5,
    "original_position": 5,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "821a8b908d49ea13c535e30cdd4f9a20a86767ad",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I recompiled the old version of this PR and confirmed that",
    "created_at": "2021-08-21T09:54:24Z",
    "updated_at": "2021-08-21T09:54:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r693333514",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693333514"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r693333514"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693333514/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 546,
    "original_line": 546,
    "side": "RIGHT",
    "in_reply_to_id": 690687789
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694662736",
    "pull_request_review_id": 734866522,
    "id": 694662736,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDY2MjczNg==",
    "diff_hunk": "@@ -71,6 +71,8 @@ static const CAmount DEFAULT_FALLBACK_FEE = 0;\n static const CAmount DEFAULT_DISCARD_FEE = 10000;\n //! -mintxfee default\n static const CAmount DEFAULT_TRANSACTION_MINFEE = 1000;\n+//! -consolidatefee default\n+static const CAmount DEFAULT_CONSOLIDATE_FEERATE = 10000; // 10 sat/vbyte",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 5,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1858364a949ea8345df5e845e7d1433b7cd5ffd0",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in 5f81b7e9317f703de6f949c532dac49300a14218 _Allow the long term feerate to be configured, default of 10 sat/vb_:\r\nprefer braced initialization to disallow narrowing conversions\r\n\r\nAnd for those of us who don't have much intuition on what feerates make sense, perhaps some sanity check static asserts would make sense? e.g. higher than default minfee, lower than default maxfee, some relationship with default discard fee :shrug:\r\n\r\n```suggestion\r\nstatic const CAmount DEFAULT_CONSOLIDATE_FEERATE{10000}; // 10 sat/vbyte\r\nstatic_assert(DEFAULT_CONSOLIDATE_FEERATE >= DEFAULT_TRANSACTION_MINFEE);\r\nstatic_assert(DEFAULT_CONSOLIDATE_FEERATE <= DEFAULT_TRANSACTION_MAXFEE);\r\n```\r\n(static asserts might need to be further down after other stuff is declared)",
    "created_at": "2021-08-24T09:05:06Z",
    "updated_at": "2021-08-24T10:49:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r694662736",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694662736"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r694662736"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694662736/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694670605",
    "pull_request_review_id": 734866522,
    "id": 694670605,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDY3MDYwNQ==",
    "diff_hunk": "@@ -659,10 +684,8 @@ bool CWallet::CreateTransactionInternal(\n         return false;\n     }\n \n-    // Get long term estimate\n-    CCoinControl cc_temp;\n-    cc_temp.m_confirm_target = chain().estimateMaxBlocks();\n-    coin_selection_params.m_long_term_feerate = GetMinimumFeeRate(*this, cc_temp, nullptr);\n+    // Set the long term feerate estimate to the wallet's consolidate feerate\n+    coin_selection_params.m_long_term_feerate = m_consolidate_feerate;",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 55,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1858364a949ea8345df5e845e7d1433b7cd5ffd0",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit In 5f81b7e9317f703de6f949c532dac49300a14218 _Allow the long term feerate to be configured, default of 10 sat/vb_:\r\nSince this pulls from a wallet member, it can be initialized ~60 lines earlier, right after `coin_selection_params` is declared, or even within the constructor.",
    "created_at": "2021-08-24T09:15:21Z",
    "updated_at": "2021-08-24T10:49:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r694670605",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694670605"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r694670605"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694670605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 687,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 688,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694685480",
    "pull_request_review_id": 734866522,
    "id": 694685480,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDY4NTQ4MA==",
    "diff_hunk": "@@ -341,3 +341,29 @@ CAmount OutputGroup::GetSelectionAmount() const\n {\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n+\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target, bool use_effective_value)",
    "path": "src/wallet/coinselection.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1858364a949ea8345df5e845e7d1433b7cd5ffd0",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit in 5a224629549f1b0ce8ccc99b79aceab8ab809d57 _Add waste metric calculation function_:\r\n\r\nThese don't need to be const, as they're pass-by-value variables that go out of scope at the end of the function\r\n```suggestion\r\nCAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, CAmount change_cost, CAmount target, bool use_effective_value)\r\n```",
    "created_at": "2021-08-24T09:35:19Z",
    "updated_at": "2021-08-24T10:49:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r694685480",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694685480"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r694685480"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694685480/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 345,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694687749",
    "pull_request_review_id": 734866522,
    "id": 694687749,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDY4Nzc0OQ==",
    "diff_hunk": "@@ -341,3 +341,29 @@ CAmount OutputGroup::GetSelectionAmount() const\n {\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n+\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target, bool use_effective_value)\n+{\n+    // This function should not be called with empty inputs as that would mean the selection failed\n+    assert(!inputs.empty());\n+\n+    // Always consider the cost of spending an input now vs in the future.\n+    CAmount waste = 0;\n+    CAmount selected_effective_value = 0;\n+    for (const CInputCoin& coin : inputs) {\n+        waste += coin.m_fee - coin.m_long_term_fee;\n+        selected_effective_value += use_effective_value ? coin.effective_value : coin.txout.nValue;\n+    }\n+\n+    // Consider the cost of making change and spending it in the future\n+    // If we aren't making change, the caller should've set change_cost to 0\n+    waste += change_cost;\n+\n+    if (change_cost == 0) {\n+        // When we are not making change (change_cost == 0), consider the excess we are throwing away to fees\n+        assert(selected_effective_value >= target);\n+        waste += selected_effective_value - target;\n+    }",
    "path": "src/wallet/coinselection.cpp",
    "position": null,
    "original_position": 26,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1858364a949ea8345df5e845e7d1433b7cd5ffd0",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit in 5a22462 _Add waste metric calculation function_:\r\nI believe this would be clearer, but feel free to ignore\r\n```suggestion\r\n    if (change_cost) {\r\n        // Consider the cost of making change and spending it in the future\r\n        // If we aren't making change, the caller should've set change_cost to 0\r\n        assert(change_cost > 0);\r\n        waste += change_cost;\r\n    } else {\r\n        // When we are not making change (change_cost == 0), consider the excess we are throwing away to fees\r\n        assert(selected_effective_value >= target);\r\n        waste += selected_effective_value - target;\r\n    }\r\n```",
    "created_at": "2021-08-24T09:38:13Z",
    "updated_at": "2021-08-24T10:49:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r694687749",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694687749"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r694687749"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694687749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 358,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 367,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694696661",
    "pull_request_review_id": 734866522,
    "id": 694696661,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDY5NjY2MQ==",
    "diff_hunk": "@@ -651,4 +662,73 @@ BOOST_AUTO_TEST_CASE(SelectCoins_test)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(waste_test)\n+{\n+    CoinSet selection;\n+    const CAmount fee = CAmount(100);\n+    const CAmount change_cost = CAmount(125);\n+    const CAmount fee_diff = CAmount(40);\n+    const CAmount in_amt = 3 * COIN;\n+    const CAmount target = 2 * COIN;\n+    const CAmount excess = in_amt - fee * 2 - target;",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": null,
    "original_position": 271,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1858364a949ea8345df5e845e7d1433b7cd5ffd0",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In c4acfb73b96041abb5bfacea98f9bf958806ffdf _test GetSelectionWaste_\r\n```suggestion\r\n    const CAmount fee{100};\r\n    const CAmount change_cost{125};\r\n    const CAmount fee_diff{40};\r\n    const CAmount in_amt{3 * COIN};\r\n    const CAmount target{2 * COIN};\r\n    const CAmount excess{in_amt - fee * 2 - target};\r\n```",
    "created_at": "2021-08-24T09:50:07Z",
    "updated_at": "2021-08-24T10:49:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r694696661",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694696661"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r694696661"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694696661/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 668,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 673,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694708835",
    "pull_request_review_id": 734866522,
    "id": 694708835,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDcwODgzNQ==",
    "diff_hunk": "@@ -357,17 +357,42 @@ bool CWallet::AttemptSelection(const CAmount& nTargetValue, const CoinEligibilit\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: calculated waste, selected inputs, selected input value (sum of input values)\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<CAmount, std::set<CInputCoin>, CAmount>> results;\n \n     // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n     std::vector<OutputGroup> positive_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n-    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, setCoinsRet, nValueRet)) {\n-        return true;\n+    std::set<CInputCoin> bnb_coins;\n+    CAmount bnb_value;\n+    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, bnb_coins, bnb_value)) {\n+        results.push_back(std::make_tuple(GetSelectionWaste(bnb_coins, /* cost of change */ CAmount(0), nTargetValue, !coin_selection_params.m_subtract_fee_outputs), std::move(bnb_coins), bnb_value));\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, false /* positive_only */);\n     // While nTargetValue includes the transaction fees for non-input things, it does not include the fee for creating a change output.\n     // So we need to include that for KnapsackSolver as well, as we are expecting to create a change output.\n-    return KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, setCoinsRet, nValueRet);\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    if (KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, knapsack_coins, knapsack_value)) {\n+        results.push_back(std::make_tuple(GetSelectionWaste(knapsack_coins, coin_selection_params.m_cost_of_change, nTargetValue + coin_selection_params.m_change_fee, !coin_selection_params.m_subtract_fee_outputs), std::move(knapsack_coins), knapsack_value));",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1858364a949ea8345df5e845e7d1433b7cd5ffd0",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in 1858364a949ea8345df5e845e7d1433b7cd5ffd0 _Use waste metric for deciding which selection to use_:\r\n`emplace_back` to construct in place\r\nbreak up the line for readability\r\n(same with the BnB solving portion above)\r\n```suggestion\r\n        const auto waste = GetSelectionWaste(knapsack_coins, coin_selection_params.m_cost_of_change, nTargetValue + coin_selection_params.m_change_fee, !coin_selection_params.m_subtract_fee_outputs);\r\n        results.emplace_back(std::make_tuple(waste, std::move(knapsack_coins), knapsack_value));\r\n```",
    "created_at": "2021-08-24T10:06:42Z",
    "updated_at": "2021-08-24T10:49:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r694708835",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694708835"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r694708835"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694708835/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 380,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695084429",
    "pull_request_review_id": 737536277,
    "id": 695084429,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NTA4NDQyOQ==",
    "diff_hunk": "@@ -137,6 +141,13 @@ inline std::vector<OutputGroup>& GroupCoins(const std::vector<COutput>& coins)\n     return static_groups;\n }\n \n+inline std::vector<OutputGroup>& KnapsackGroupOutputs(const CoinEligibilityFilter& filter)\n+{\n+    static std::vector<OutputGroup> static_groups;\n+    static_groups = testWallet.GroupOutputs(vCoins, coin_selection_params, filter, false);",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": null,
    "original_position": 26,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1858364a949ea8345df5e845e7d1433b7cd5ffd0",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-08-24T18:06:50Z",
    "updated_at": "2021-08-24T18:06:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r695084429",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695084429"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r695084429"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695084429/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 147,
    "side": "RIGHT",
    "in_reply_to_id": 692825927
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695084473",
    "pull_request_review_id": 737536342,
    "id": 695084473,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NTA4NDQ3Mw==",
    "diff_hunk": "@@ -166,6 +166,19 @@ struct OutputGroup\n     CAmount GetSelectionAmount() const;\n };\n \n+/** Compute the waste for this result given the cost of change\n+ * waste = change_cost + excess + inputs * (effective_feerate - long_term_feerate)\n+ * excess = selected_effective_value - target\n+ * change_cost = change_fee + change_long_term_fee\n+ *\n+ * @param[in] inputs The selected inputs\n+ * @param[in] change_cost The cost of creating change and spending it in the future. Only used if there is change. Must be 0 if there is no change.\n+ * @param[in] target The amount targeted by the coin selection algorithm.\n+ * @param[in] use_effective_value Whether to use the input's effective value (when true) or the real value (when false).\n+ * @return The waste",
    "path": "src/wallet/coinselection.h",
    "position": null,
    "original_position": 13,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1858364a949ea8345df5e845e7d1433b7cd5ffd0",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-08-24T18:06:55Z",
    "updated_at": "2021-08-24T18:06:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r695084473",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695084473"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r695084473"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695084473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 169,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 180,
    "side": "RIGHT",
    "in_reply_to_id": 692834187
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695084903",
    "pull_request_review_id": 737536905,
    "id": 695084903,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NTA4NDkwMw==",
    "diff_hunk": "@@ -71,6 +71,8 @@ static const CAmount DEFAULT_FALLBACK_FEE = 0;\n static const CAmount DEFAULT_DISCARD_FEE = 10000;\n //! -mintxfee default\n static const CAmount DEFAULT_TRANSACTION_MINFEE = 1000;\n+//! -consolidatefee default\n+static const CAmount DEFAULT_CONSOLIDATE_FEERATE = 10000; // 10 sat/vbyte",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 5,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1858364a949ea8345df5e845e7d1433b7cd5ffd0",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Changed the initialization I don't think static asserts are necessary.",
    "created_at": "2021-08-24T18:07:34Z",
    "updated_at": "2021-08-24T18:07:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r695084903",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695084903"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r695084903"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695084903/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT",
    "in_reply_to_id": 694662736
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695084974",
    "pull_request_review_id": 737537012,
    "id": 695084974,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NTA4NDk3NA==",
    "diff_hunk": "@@ -659,10 +684,8 @@ bool CWallet::CreateTransactionInternal(\n         return false;\n     }\n \n-    // Get long term estimate\n-    CCoinControl cc_temp;\n-    cc_temp.m_confirm_target = chain().estimateMaxBlocks();\n-    coin_selection_params.m_long_term_feerate = GetMinimumFeeRate(*this, cc_temp, nullptr);\n+    // Set the long term feerate estimate to the wallet's consolidate feerate\n+    coin_selection_params.m_long_term_feerate = m_consolidate_feerate;",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 55,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1858364a949ea8345df5e845e7d1433b7cd5ffd0",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-08-24T18:07:41Z",
    "updated_at": "2021-08-24T18:07:41Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r695084974",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695084974"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r695084974"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695084974/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 687,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 688,
    "side": "RIGHT",
    "in_reply_to_id": 694670605
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695085004",
    "pull_request_review_id": 737537068,
    "id": 695085004,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NTA4NTAwNA==",
    "diff_hunk": "@@ -341,3 +341,29 @@ CAmount OutputGroup::GetSelectionAmount() const\n {\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n+\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target, bool use_effective_value)",
    "path": "src/wallet/coinselection.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1858364a949ea8345df5e845e7d1433b7cd5ffd0",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-08-24T18:07:45Z",
    "updated_at": "2021-08-24T18:07:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r695085004",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695085004"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r695085004"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695085004/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 345,
    "side": "RIGHT",
    "in_reply_to_id": 694685480
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695085078",
    "pull_request_review_id": 737537130,
    "id": 695085078,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NTA4NTA3OA==",
    "diff_hunk": "@@ -341,3 +341,29 @@ CAmount OutputGroup::GetSelectionAmount() const\n {\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n+\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target, bool use_effective_value)\n+{\n+    // This function should not be called with empty inputs as that would mean the selection failed\n+    assert(!inputs.empty());\n+\n+    // Always consider the cost of spending an input now vs in the future.\n+    CAmount waste = 0;\n+    CAmount selected_effective_value = 0;\n+    for (const CInputCoin& coin : inputs) {\n+        waste += coin.m_fee - coin.m_long_term_fee;\n+        selected_effective_value += use_effective_value ? coin.effective_value : coin.txout.nValue;\n+    }\n+\n+    // Consider the cost of making change and spending it in the future\n+    // If we aren't making change, the caller should've set change_cost to 0\n+    waste += change_cost;\n+\n+    if (change_cost == 0) {\n+        // When we are not making change (change_cost == 0), consider the excess we are throwing away to fees\n+        assert(selected_effective_value >= target);\n+        waste += selected_effective_value - target;\n+    }",
    "path": "src/wallet/coinselection.cpp",
    "position": null,
    "original_position": 26,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1858364a949ea8345df5e845e7d1433b7cd5ffd0",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-08-24T18:07:49Z",
    "updated_at": "2021-08-24T18:07:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r695085078",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695085078"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r695085078"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695085078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 358,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 367,
    "side": "RIGHT",
    "in_reply_to_id": 694687749
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695085113",
    "pull_request_review_id": 737537175,
    "id": 695085113,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NTA4NTExMw==",
    "diff_hunk": "@@ -651,4 +662,73 @@ BOOST_AUTO_TEST_CASE(SelectCoins_test)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(waste_test)\n+{\n+    CoinSet selection;\n+    const CAmount fee = CAmount(100);\n+    const CAmount change_cost = CAmount(125);\n+    const CAmount fee_diff = CAmount(40);\n+    const CAmount in_amt = 3 * COIN;\n+    const CAmount target = 2 * COIN;\n+    const CAmount excess = in_amt - fee * 2 - target;",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": null,
    "original_position": 271,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1858364a949ea8345df5e845e7d1433b7cd5ffd0",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-08-24T18:07:53Z",
    "updated_at": "2021-08-24T18:07:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r695085113",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695085113"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r695085113"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695085113/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 668,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 673,
    "side": "RIGHT",
    "in_reply_to_id": 694696661
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695085169",
    "pull_request_review_id": 737537239,
    "id": 695085169,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NTA4NTE2OQ==",
    "diff_hunk": "@@ -357,17 +357,42 @@ bool CWallet::AttemptSelection(const CAmount& nTargetValue, const CoinEligibilit\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: calculated waste, selected inputs, selected input value (sum of input values)\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<CAmount, std::set<CInputCoin>, CAmount>> results;\n \n     // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n     std::vector<OutputGroup> positive_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n-    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, setCoinsRet, nValueRet)) {\n-        return true;\n+    std::set<CInputCoin> bnb_coins;\n+    CAmount bnb_value;\n+    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, bnb_coins, bnb_value)) {\n+        results.push_back(std::make_tuple(GetSelectionWaste(bnb_coins, /* cost of change */ CAmount(0), nTargetValue, !coin_selection_params.m_subtract_fee_outputs), std::move(bnb_coins), bnb_value));\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, false /* positive_only */);\n     // While nTargetValue includes the transaction fees for non-input things, it does not include the fee for creating a change output.\n     // So we need to include that for KnapsackSolver as well, as we are expecting to create a change output.\n-    return KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, setCoinsRet, nValueRet);\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    if (KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, knapsack_coins, knapsack_value)) {\n+        results.push_back(std::make_tuple(GetSelectionWaste(knapsack_coins, coin_selection_params.m_cost_of_change, nTargetValue + coin_selection_params.m_change_fee, !coin_selection_params.m_subtract_fee_outputs), std::move(knapsack_coins), knapsack_value));",
    "path": "src/wallet/spend.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "1858364a949ea8345df5e845e7d1433b7cd5ffd0",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-08-24T18:07:57Z",
    "updated_at": "2021-08-24T18:07:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r695085169",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695085169"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r695085169"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695085169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 380,
    "side": "RIGHT",
    "in_reply_to_id": 694708835
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697426583",
    "pull_request_review_id": 740500108,
    "id": 697426583,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NzQyNjU4Mw==",
    "diff_hunk": "@@ -2701,6 +2701,15 @@ std::shared_ptr<CWallet> CWallet::Create(WalletContext& context, const std::stri\n         walletInstance->m_default_max_tx_fee = max_fee.value();\n     }\n \n+    if (gArgs.IsArgSet(\"-consolidatefeerate\")) {\n+        std::optional<CAmount> consolidate_feerate = ParseMoney(gArgs.GetArg(\"-consolidatefeerate\", \"\"));\n+        if (!consolidate_feerate) {\n+            error = AmountErrMsg(\"consolidatefeerate\", gArgs.GetArg(\"-consolidatefeerate\", \"\"));\n+            return nullptr;\n+        }",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "fe47558acd365264778af5eefd61f0955e168c6f",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Assuming the rebase was for #22220, this seems more in keeping with the conventions in https://github.com/bitcoin/bitcoin/commit/5ef2738089efd396186775ad23aaec71ea44ebb1:\r\n```suggestion\r\n         if (std::optional<CAmount> consolidate_feerate = ParseMoney(gArgs.GetArg(\"-consolidatefeerate\", \"\"))) {\r\n             walletInstance->m_consolidate_feerate = CFeeRate{consolidate_feerate.value()};\r\n         } else {\r\n             error = AmountErrMsg(\"consolidatefeerate\", gArgs.GetArg(\"-consolidatefeerate\", \"\"));\r\n             return nullptr;\r\n         }\r\n\r\n```",
    "created_at": "2021-08-27T13:08:33Z",
    "updated_at": "2021-08-27T13:13:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r697426583",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697426583"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r697426583"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697426583/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2706,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2710,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697427059",
    "pull_request_review_id": 740500108,
    "id": 697427059,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NzQyNzA1OQ==",
    "diff_hunk": "@@ -71,6 +71,8 @@ static const CAmount DEFAULT_FALLBACK_FEE = 0;\n static const CAmount DEFAULT_DISCARD_FEE = 10000;\n //! -mintxfee default\n static const CAmount DEFAULT_TRANSACTION_MINFEE = 1000;\n+//! -consolidatefee default",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 4,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "5f81b7e9317f703de6f949c532dac49300a14218",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "+1",
    "created_at": "2021-08-27T13:09:13Z",
    "updated_at": "2021-08-27T13:13:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r697427059",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697427059"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r697427059"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697427059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 76,
    "side": "RIGHT",
    "in_reply_to_id": 692588236
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697503379",
    "pull_request_review_id": 740607145,
    "id": 697503379,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NzUwMzM3OQ==",
    "diff_hunk": "@@ -651,4 +662,73 @@ BOOST_AUTO_TEST_CASE(SelectCoins_test)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(waste_test)\n+{\n+    CoinSet selection;\n+    const CAmount fee{100};\n+    const CAmount change_cost{125};\n+    const CAmount fee_diff {40};",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": null,
    "original_position": 268,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "fe47558acd365264778af5eefd61f0955e168c6f",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit:\r\n```suggestion\r\n    const CAmount fee_diff{40};\r\n```",
    "created_at": "2021-08-27T14:49:43Z",
    "updated_at": "2021-08-27T14:49:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r697503379",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697503379"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r697503379"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697503379/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 670,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697582475",
    "pull_request_review_id": 740712719,
    "id": 697582475,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NzU4MjQ3NQ==",
    "diff_hunk": "@@ -71,6 +71,8 @@ static const CAmount DEFAULT_FALLBACK_FEE = 0;\n static const CAmount DEFAULT_DISCARD_FEE = 10000;\n //! -mintxfee default\n static const CAmount DEFAULT_TRANSACTION_MINFEE = 1000;\n+//! -consolidatefee default",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 4,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "5f81b7e9317f703de6f949c532dac49300a14218",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-08-27T16:46:28Z",
    "updated_at": "2021-08-27T16:46:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r697582475",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697582475"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r697582475"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697582475/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 76,
    "side": "RIGHT",
    "in_reply_to_id": 692588236
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697582556",
    "pull_request_review_id": 740712837,
    "id": 697582556,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NzU4MjU1Ng==",
    "diff_hunk": "@@ -2701,6 +2701,15 @@ std::shared_ptr<CWallet> CWallet::Create(WalletContext& context, const std::stri\n         walletInstance->m_default_max_tx_fee = max_fee.value();\n     }\n \n+    if (gArgs.IsArgSet(\"-consolidatefeerate\")) {\n+        std::optional<CAmount> consolidate_feerate = ParseMoney(gArgs.GetArg(\"-consolidatefeerate\", \"\"));\n+        if (!consolidate_feerate) {\n+            error = AmountErrMsg(\"consolidatefeerate\", gArgs.GetArg(\"-consolidatefeerate\", \"\"));\n+            return nullptr;\n+        }",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "fe47558acd365264778af5eefd61f0955e168c6f",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-08-27T16:46:36Z",
    "updated_at": "2021-08-27T16:46:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r697582556",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697582556"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r697582556"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697582556/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2706,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2710,
    "side": "RIGHT",
    "in_reply_to_id": 697426583
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697582610",
    "pull_request_review_id": 740712905,
    "id": 697582610,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NzU4MjYxMA==",
    "diff_hunk": "@@ -651,4 +662,73 @@ BOOST_AUTO_TEST_CASE(SelectCoins_test)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(waste_test)\n+{\n+    CoinSet selection;\n+    const CAmount fee{100};\n+    const CAmount change_cost{125};\n+    const CAmount fee_diff {40};",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": null,
    "original_position": 268,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "fe47558acd365264778af5eefd61f0955e168c6f",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-08-27T16:46:41Z",
    "updated_at": "2021-08-27T16:46:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r697582610",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697582610"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r697582610"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697582610/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 670,
    "side": "RIGHT",
    "in_reply_to_id": 697503379
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706075532",
    "pull_request_review_id": 751273325,
    "id": 706075532,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjA3NTUzMg==",
    "diff_hunk": "@@ -651,4 +662,73 @@ BOOST_AUTO_TEST_CASE(SelectCoins_test)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(waste_test)\n+{\n+    CoinSet selection;\n+    const CAmount fee{100};\n+    const CAmount change_cost{125};\n+    const CAmount fee_diff{40};\n+    const CAmount in_amt{3 * COIN};\n+    const CAmount target{2 * COIN};\n+    const CAmount excess{in_amt - fee * 2 - target};\n+\n+    // Waste with change is the change cost and difference between fee and long term fee\n+    add_coin(1 * COIN, 1, selection, fee, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee - fee_diff);\n+    const CAmount waste1 = GetSelectionWaste(selection, change_cost, target);\n+    BOOST_CHECK_EQUAL(fee_diff * 2 + change_cost, waste1);\n+    selection.clear();\n+\n+    // Waste without change is the excess and difference between fee and long term fee\n+    add_coin(1 * COIN, 1, selection, fee, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee - fee_diff);\n+    const CAmount waste_nochange1 = GetSelectionWaste(selection, 0, target);\n+    BOOST_CHECK_EQUAL(fee_diff * 2 + excess, waste_nochange1);\n+    selection.clear();\n+\n+    // Waste with change and fee == long term fee is just cost of change\n+    add_coin(1 * COIN, 1, selection, fee, fee);\n+    add_coin(2 * COIN, 2, selection, fee, fee);\n+    BOOST_CHECK_EQUAL(change_cost, GetSelectionWaste(selection, change_cost, target));\n+    selection.clear();\n+\n+    // Waste without change and fee == long term fee is just the excess\n+    add_coin(1 * COIN, 1, selection, fee, fee);\n+    add_coin(2 * COIN, 2, selection, fee, fee);\n+    BOOST_CHECK_EQUAL(excess, GetSelectionWaste(selection, 0, target));\n+    selection.clear();\n+\n+    // Waste will be greater when fee is greater, but long term fee is the same\n+    add_coin(1 * COIN, 1, selection, fee * 2, fee - fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee * 2, fee - fee_diff);\n+    const CAmount waste2 = GetSelectionWaste(selection, change_cost, target);\n+    BOOST_CHECK_GT(waste2, waste1);\n+    selection.clear();\n+\n+    // Waste with change is the change cost and difference between fee and long term fee\n+    // With long term fee greater than fee, waste should be less than when long term fee is less than fee\n+    add_coin(1 * COIN, 1, selection, fee, fee + fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee + fee_diff);\n+    const CAmount waste3 = GetSelectionWaste(selection, change_cost, target);\n+    BOOST_CHECK_EQUAL(fee_diff * -2 + change_cost, waste3);\n+    BOOST_CHECK_LT(waste3, waste1);\n+    selection.clear();\n+\n+    // Waste without change is the excess and difference between fee and long term fee\n+    // With long term fee greater than fee, waste should be less than when long term fee is less than fee\n+    add_coin(1 * COIN, 1, selection, fee, fee + fee_diff);\n+    add_coin(2 * COIN, 2, selection, fee, fee + fee_diff);\n+    const CAmount waste_nochange2 = GetSelectionWaste(selection, 0, target);\n+    BOOST_CHECK_EQUAL(fee_diff * -2 + excess, waste_nochange2);\n+    BOOST_CHECK_LT(waste_nochange2, waste_nochange1);\n+    selection.clear();\n+\n+    // 0 Waste only when fee == long term fee, no change, and no excess\n+    add_coin(1 * COIN, 1, selection, fee, fee);\n+    add_coin(2 * COIN, 2, selection, fee, fee);\n+    const CAmount exact_target = in_amt - 2 * fee;\n+    BOOST_CHECK_EQUAL(0, GetSelectionWaste(selection, 0, exact_target));",
    "path": "src/wallet/test/coinselector_tests.cpp",
    "position": 328,
    "original_position": 328,
    "commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "original_commit_id": "86beee05795216738f51fa744539336503c26fd9",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "As it was discussed in the [review club](https://github.com/bitcoin/bitcoin/pull/22938), there are more scenarios when the waste can be zero. Thus the \"only\" doesn't seem appropriate here. \r\n\r\nI went ahead and opened another PR fixing this with addition of those extra cases. https://github.com/bitcoin/bitcoin/pull/22938. ",
    "created_at": "2021-09-10T10:30:50Z",
    "updated_at": "2021-09-10T10:32:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r706075532",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706075532"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r706075532"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706075532/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 726,
    "original_start_line": 726,
    "start_side": "RIGHT",
    "line": 730,
    "original_line": 730,
    "side": "RIGHT"
  }
]