MarcoFalke,2017-04-17T10:16:19Z,"<strike>Concept ACK:</strike>\n\n```\n*** BEFORE ***\nALL                            | ✓ Passed  | 2648 s (accumulated) \nRuntime: 713 s\n\n*** AFTER ***\nALL                            | ✓ Passed  | 1290 s (accumulated) \nRuntime: 337 s\n```\n\nAs we ignore the return code of `fsync` in our code, this should not add additional debug hassle in case the fsync fails to write everything t",https://github.com/bitcoin/bitcoin/pull/10220#issuecomment-294445445,294445445,
laanwj,2017-04-17T10:44:42Z,"> As we ignore the return code of fsync in our code, this should not add additional debug hassle in case the fsync fails to write everything to disk (maybe due to hardware issues)?\n\nI don't think so. \n\nIt does remind me that we could use the same technique (library interposing) to inject failures for testing to test how bitcoind handles i/o failures.\n",https://github.com/bitcoin/bitcoin/pull/10220#issuecomment-294448701,294448701,
laanwj,2017-04-17T10:46:26Z,"Argh, it fails on 32-bit linux:\n```\nERROR: ld.so: object '/usr/lib/libeatmydata/libeatmydata.so' from LD_PRELOAD cannot be preloaded (wrong ELF class: ELFCLASS64): ignored.\n```\n",https://github.com/bitcoin/bitcoin/pull/10220#issuecomment-294448900,294448900,
laanwj,2017-04-17T13:49:17Z,"I can't get it to work on 32-bit: not with 32-bit and not with 64-bit `eatmydata`.\n\nThe problem, I think, is that python runs as 64-bit, and bitcoind as 32-bit. So with the 64-bit `eatmydata` it fails on `bitcoind`, with the 32-bit one it fails on `python`.\n\nNot sure what would be a good way to fix this. I suppose a hack that sets the environment variable BITCOIND so that *only* bitcoind i",https://github.com/bitcoin/bitcoin/pull/10220#issuecomment-294488871,294488871,
laanwj,2017-04-17T14:37:11Z,"Hm another idea, instead of using the wrapper/interposer, which seems to be tricky on mixed architctures, couldn't we just link bitcoind against `libeatmydata.so` directly?\nOn Ubuntu 16.04 `libeatmydata1` is a separate package that can be installed, this isn't the case on trusty/14.04.\n\n16.04 (just for illustration):\n```\n$ dpkg -L libeatmydata1\n...\n/usr/lib/x86_64-linux-gnu/libeatmyd",https://github.com/bitcoin/bitcoin/pull/10220#issuecomment-294497891,294497891,
laanwj,2017-04-17T19:16:14Z,"With the wrapper most works, but it still fails in `p2p-versionbits-warning.py`, as this makes bitcoind invoke another process which apparently is 64 bit:\n```\np2p-versionbits-warning.py failed, Duration: 8 s\nstdout:\n2017-04-17 17:09:13.351000 TestFramework (INFO): Initializing test directory /tmp/testmahvm5qh/275\n2017-04-17 17:09:13.609000 TestFramework.mininode (INFO): Connecting to Bit",https://github.com/bitcoin/bitcoin/pull/10220#issuecomment-294564146,294564146,
jnewbery,2017-04-17T22:04:28Z,"> this makes bitcoind invoke another process\n\nThe only process I can think of that `p2p-versionbits-warning.py` specifically would invoke is echo:\n\n```\n        self.extra_args = [[""-alertnotify=echo %s >> \"""" + self.alert_filename + ""\""""]]\n```\n\nThis causes bitcoind to launch a thread to run echo when it detects blocks signalling unknown versionbits.",https://github.com/bitcoin/bitcoin/pull/10220#issuecomment-294607655,294607655,
laanwj,2017-04-18T06:24:18Z,"> Hm another idea, instead of using the wrapper/interposer, which seems to be tricky on mixed architctures, couldn't we just link bitcoind against libeatmydata.so directly?\n\nI've tried this locally with some success, but not entirely sure how to port it to travis. Trying...",https://github.com/bitcoin/bitcoin/pull/10220#issuecomment-294699569,294699569,
laanwj,2017-04-18T12:33:44Z,"Oh wow that worked.\n\nBut seems @MarcoFalke 's comparison was mistaken and this doesn't actually make a difference so closing...",https://github.com/bitcoin/bitcoin/pull/10220#issuecomment-294821571,294821571,
MarcoFalke,2017-04-18T14:04:42Z,@laanwj Sorry for my confirmation bias. On a first glance those numbers seemed perfectly plausible.,https://github.com/bitcoin/bitcoin/pull/10220#issuecomment-294854896,294854896,
laanwj,2017-04-18T14:13:47Z,Yes it would have been plausible; apparently Travis isn't using qemu/kvm or has already configured their VMs to not pass through fsync.,https://github.com/bitcoin/bitcoin/pull/10220#issuecomment-294857715,294857715,
MarcoFalke,2017-04-17T09:34:43Z,"<strike> functional tests are disabled for windows and no_wallet, so I don't think we need this here.</strike>\n\nYou probably did this for consistency/simpler code.",https://github.com/bitcoin/bitcoin/pull/10220#discussion_r111724366,111724366,.travis.yml
laanwj,2017-04-17T10:40:16Z,My intent was to add it for all the lines that have `RUN_TESTS=true`,https://github.com/bitcoin/bitcoin/pull/10220#discussion_r111729170,111729170,.travis.yml
