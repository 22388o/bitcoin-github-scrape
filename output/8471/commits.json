[
  {
    "sha": "d2a682e84ce9cc60c53d5e503a655854c03e1b21",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMmE2ODJlODRjZTljYzYwYzUzZDVlNTAzYTY1NTg1NGMwM2UxYjIx",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-24T07:53:05Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-11-16T13:23:19Z"
      },
      "message": "wallet: Add key origin flags\n\nAn encrypted wallet can still hold keys which where created when the wallet was unencrypted.\n\nThis PR will add a 8bit-flags-int to the CKeyMetadata class.\n\n`listreceivedbyaddress` will report whether the key was generated within a enctypted wallet or if it was imported throught `importprivkey`",
      "tree": {
        "sha": "591a738e3e9d584a65b63e5102b6e4ac23cff0c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/591a738e3e9d584a65b63e5102b6e4ac23cff0c8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2a682e84ce9cc60c53d5e503a655854c03e1b21",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2a682e84ce9cc60c53d5e503a655854c03e1b21",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d2a682e84ce9cc60c53d5e503a655854c03e1b21",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2a682e84ce9cc60c53d5e503a655854c03e1b21/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cb2ed300a89ebf9f0654da869ced665ed8b2abe7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb2ed300a89ebf9f0654da869ced665ed8b2abe7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb2ed300a89ebf9f0654da869ced665ed8b2abe7"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 41,
      "deletions": 1
    },
    "files": [
      {
        "sha": "548dd3bc899b20f10edc425e6d957891698caa2d",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2a682e84ce9cc60c53d5e503a655854c03e1b21/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2a682e84ce9cc60c53d5e503a655854c03e1b21/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=d2a682e84ce9cc60c53d5e503a655854c03e1b21",
        "patch": "@@ -138,6 +138,7 @@ UniValue importprivkey(const JSONRPCRequest& request)\n             return NullUniValue;\n \n         pwalletMain->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+        pwalletMain->mapKeyMetadata[vchAddress].keyFlags |= CKeyMetadata::KEY_ORIGIN_IMPORTED;\n \n         if (!pwalletMain->AddKeyPubKey(key, pubkey))\n             throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");"
      },
      {
        "sha": "29bcce69203c920b0f05f828ba555ba8d6ab34d0",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2a682e84ce9cc60c53d5e503a655854c03e1b21/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2a682e84ce9cc60c53d5e503a655854c03e1b21/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=d2a682e84ce9cc60c53d5e503a655854c03e1b21",
        "patch": "@@ -1196,6 +1196,22 @@ UniValue ListReceived(const UniValue& params, bool fByAccounts)\n             fIsWatchonly = (*it).second.fIsWatchonly;\n         }\n \n+        // convert keyflags into a string\n+        CKeyID keyID;\n+        uint8_t keyFlags = 0;\n+        if (address.GetKeyID(keyID))\n+            keyFlags = pwalletMain->mapKeyMetadata[keyID].keyFlags;\n+\n+        std::string keyOrigin;\n+        if (keyFlags & CKeyMetadata::KEY_ORIGIN_UNKNOWN)\n+            keyOrigin = \"unknown\";\n+        if (keyFlags & CKeyMetadata::KEY_ORIGIN_ENC_WALLET)\n+            keyOrigin = \"encrypted\";\n+        else if (keyFlags & CKeyMetadata::KEY_ORIGIN_UNENC_WALLET)\n+            keyOrigin = \"unencrypted\";\n+        if (keyFlags & CKeyMetadata::KEY_ORIGIN_IMPORTED)\n+            keyOrigin = \"imported\";\n+\n         if (fByAccounts)\n         {\n             tallyitem& _item = mapAccountTally[strAccount];\n@@ -1211,6 +1227,7 @@ UniValue ListReceived(const UniValue& params, bool fByAccounts)\n             obj.push_back(Pair(\"address\",       address.ToString()));\n             obj.push_back(Pair(\"account\",       strAccount));\n             obj.push_back(Pair(\"amount\",        ValueFromAmount(nAmount)));\n+            obj.push_back(Pair(\"key_origin\", keyOrigin));\n             obj.push_back(Pair(\"confirmations\", (nConf == std::numeric_limits<int>::max() ? 0 : nConf)));\n             if (!fByAccounts)\n                 obj.push_back(Pair(\"label\", strAccount));"
      },
      {
        "sha": "2092f383823c242a8b7cfaf925113e79c958e99c",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2a682e84ce9cc60c53d5e503a655854c03e1b21/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2a682e84ce9cc60c53d5e503a655854c03e1b21/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=d2a682e84ce9cc60c53d5e503a655854c03e1b21",
        "patch": "@@ -98,6 +98,13 @@ CPubKey CWallet::GenerateNewKey()\n     int64_t nCreationTime = GetTime();\n     CKeyMetadata metadata(nCreationTime);\n \n+    //check if the wallet supports keyflags\n+    if (CanSupportFeature(FEATURE_KEYFLAGS))\n+    {\n+        metadata.nVersion = CKeyMetadata::VERSION_SUPPORT_FLAGS;\n+        metadata.keyFlags |= IsCrypted() ? CKeyMetadata::KEY_ORIGIN_ENC_WALLET : CKeyMetadata::KEY_ORIGIN_UNENC_WALLET;\n+    }\n+\n     // use HD key derivation if HD was enabled during wallet creation\n     if (IsHDEnabled()) {\n         DeriveNewChildKey(metadata, secret);"
      },
      {
        "sha": "420664619f7b7a407a04f360f521bbc8ed1da690",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2a682e84ce9cc60c53d5e503a655854c03e1b21/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2a682e84ce9cc60c53d5e503a655854c03e1b21/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=d2a682e84ce9cc60c53d5e503a655854c03e1b21",
        "patch": "@@ -81,9 +81,10 @@ enum WalletFeature\n \n     FEATURE_WALLETCRYPT = 40000, // wallet encryption\n     FEATURE_COMPRPUBKEY = 60000, // compressed public keys\n+    FEATURE_KEYFLAGS    = 70000, // key metadata flags for storing informations like key origin\n \n     FEATURE_HD = 130000, // Hierarchical key derivation after BIP32 (HD Wallet)\n-    FEATURE_LATEST = FEATURE_COMPRPUBKEY // HD is optional, use FEATURE_COMPRPUBKEY as latest version\n+    FEATURE_LATEST = FEATURE_KEYFLAGS // HD is optional, use FEATURE_KEYFLAGS as latest version\n };\n \n "
      },
      {
        "sha": "7b222473ecd42addce5395f43f15f92202d6873b",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2a682e84ce9cc60c53d5e503a655854c03e1b21/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2a682e84ce9cc60c53d5e503a655854c03e1b21/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=d2a682e84ce9cc60c53d5e503a655854c03e1b21",
        "patch": "@@ -73,12 +73,21 @@ class CKeyMetadata\n {\n public:\n     static const int VERSION_BASIC=1;\n+    static const int VERSION_SUPPORT_FLAGS=2;\n     static const int VERSION_WITH_HDDATA=10;\n     static const int CURRENT_VERSION=VERSION_WITH_HDDATA;\n+\n+    static const uint8_t KEY_ORIGIN_UNSET         = 0x0000;\n+    static const uint8_t KEY_ORIGIN_UNKNOWN       = 0x0001;\n+    static const uint8_t KEY_ORIGIN_IMPORTED      = 0x0002;\n+    static const uint8_t KEY_ORIGIN_UNENC_WALLET  = 0x0004;\n+    static const uint8_t KEY_ORIGIN_ENC_WALLET    = 0x0008;\n+\n     int nVersion;\n     int64_t nCreateTime; // 0 means unknown\n     std::string hdKeypath; //optional HD/bip32 keypath\n     CKeyID hdMasterKeyID; //id of the HD masterkey used to derive this key\n+    uint8_t keyFlags;\n \n     CKeyMetadata()\n     {\n@@ -88,6 +97,7 @@ class CKeyMetadata\n     {\n         SetNull();\n         nCreateTime = nCreateTime_;\n+        keyFlags = KEY_ORIGIN_UNSET;\n     }\n \n     ADD_SERIALIZE_METHODS;\n@@ -101,6 +111,9 @@ class CKeyMetadata\n             READWRITE(hdKeypath);\n             READWRITE(hdMasterKeyID);\n         }\n+        else\n+        if (nVersion >= VERSION_SUPPORT_FLAGS)\n+            READWRITE(keyFlags);\n     }\n \n     void SetNull()\n@@ -109,6 +122,7 @@ class CKeyMetadata\n         nCreateTime = 0;\n         hdKeypath.clear();\n         hdMasterKeyID.SetNull();\n+        keyFlags = KEY_ORIGIN_UNSET;\n     }\n };\n "
      }
    ]
  },
  {
    "sha": "d275b9416c6225dd20b20453280a3380d6e183fa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMjc1Yjk0MTZjNjIyNWRkMjBiMjA0NTMyODBhMzM4MGQ2ZTE4M2Zh",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-08-06T04:29:30Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-11-16T13:23:19Z"
      },
      "message": "wallet: Key origin refactoring",
      "tree": {
        "sha": "7e65eb835c0c1f84ea9720cd92af25c7deca2069",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e65eb835c0c1f84ea9720cd92af25c7deca2069"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d275b9416c6225dd20b20453280a3380d6e183fa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d275b9416c6225dd20b20453280a3380d6e183fa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d275b9416c6225dd20b20453280a3380d6e183fa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d275b9416c6225dd20b20453280a3380d6e183fa/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d2a682e84ce9cc60c53d5e503a655854c03e1b21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2a682e84ce9cc60c53d5e503a655854c03e1b21",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d2a682e84ce9cc60c53d5e503a655854c03e1b21"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 19,
      "deletions": 9
    },
    "files": [
      {
        "sha": "ef7bcb42d45d2b5155d531fb9d7636048078bf83",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d275b9416c6225dd20b20453280a3380d6e183fa/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d275b9416c6225dd20b20453280a3380d6e183fa/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=d275b9416c6225dd20b20453280a3380d6e183fa",
        "patch": "@@ -137,8 +137,9 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         if (pwalletMain->HaveKey(vchAddress))\n             return NullUniValue;\n \n-        pwalletMain->mapKeyMetadata[vchAddress].nCreateTime = 1;\n-        pwalletMain->mapKeyMetadata[vchAddress].keyFlags |= CKeyMetadata::KEY_ORIGIN_IMPORTED;\n+        CKeyMetadata& metadata = pwalletMain->mapKeyMetadata[vchAddress];\n+        metadata.nCreateTime = 1;\n+        metadata.SetKeyOrigin(metadata.GetKeyOrigin() | CKeyMetadata::KEY_ORIGIN_IMPORTED);\n \n         if (!pwalletMain->AddKeyPubKey(key, pubkey))\n             throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");"
      },
      {
        "sha": "7f4060a89fd573ab7656ec1cb757008a73b2a160",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d275b9416c6225dd20b20453280a3380d6e183fa/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d275b9416c6225dd20b20453280a3380d6e183fa/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=d275b9416c6225dd20b20453280a3380d6e183fa",
        "patch": "@@ -1200,7 +1200,7 @@ UniValue ListReceived(const UniValue& params, bool fByAccounts)\n         CKeyID keyID;\n         uint8_t keyFlags = 0;\n         if (address.GetKeyID(keyID))\n-            keyFlags = pwalletMain->mapKeyMetadata[keyID].keyFlags;\n+            keyFlags = pwalletMain->mapKeyMetadata[keyID].GetKeyOrigin();\n \n         std::string keyOrigin;\n         if (keyFlags & CKeyMetadata::KEY_ORIGIN_UNKNOWN)"
      },
      {
        "sha": "416e60a87ab9462616835580e11c0db2aceee06b",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d275b9416c6225dd20b20453280a3380d6e183fa/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d275b9416c6225dd20b20453280a3380d6e183fa/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=d275b9416c6225dd20b20453280a3380d6e183fa",
        "patch": "@@ -99,11 +99,10 @@ CPubKey CWallet::GenerateNewKey()\n     CKeyMetadata metadata(nCreationTime);\n \n     //check if the wallet supports keyflags\n-    if (CanSupportFeature(FEATURE_KEYFLAGS))\n-    {\n-        metadata.nVersion = CKeyMetadata::VERSION_SUPPORT_FLAGS;\n-        metadata.keyFlags |= IsCrypted() ? CKeyMetadata::KEY_ORIGIN_ENC_WALLET : CKeyMetadata::KEY_ORIGIN_UNENC_WALLET;\n+    if (CanSupportFeature(FEATURE_KEYFLAGS)) {\n+        metadata.nVersion = CKeyMetadata::VERSION_WITH_FLAGS;\n     }\n+    metadata.SetKeyOrigin(IsCrypted() ? CKeyMetadata::KEY_ORIGIN_ENC_WALLET : CKeyMetadata::KEY_ORIGIN_UNENC_WALLET);\n \n     // use HD key derivation if HD was enabled during wallet creation\n     if (IsHDEnabled()) {"
      },
      {
        "sha": "1de998f95a0b805e8a0f8ce93182583734856956",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 12,
        "deletions": 2,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d275b9416c6225dd20b20453280a3380d6e183fa/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d275b9416c6225dd20b20453280a3380d6e183fa/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=d275b9416c6225dd20b20453280a3380d6e183fa",
        "patch": "@@ -73,7 +73,7 @@ class CKeyMetadata\n {\n public:\n     static const int VERSION_BASIC=1;\n-    static const int VERSION_SUPPORT_FLAGS=2;\n+    static const int VERSION_WITH_FLAGS=2;\n     static const int VERSION_WITH_HDDATA=10;\n     static const int CURRENT_VERSION=VERSION_WITH_HDDATA;\n \n@@ -87,7 +87,9 @@ class CKeyMetadata\n     int64_t nCreateTime; // 0 means unknown\n     std::string hdKeypath; //optional HD/bip32 keypath\n     CKeyID hdMasterKeyID; //id of the HD masterkey used to derive this key\n+private:\n     uint8_t keyFlags;\n+public:\n \n     CKeyMetadata()\n     {\n@@ -112,7 +114,7 @@ class CKeyMetadata\n             READWRITE(hdMasterKeyID);\n         }\n         else\n-        if (nVersion >= VERSION_SUPPORT_FLAGS)\n+        if (nVersion >= VERSION_WITH_FLAGS)\n             READWRITE(keyFlags);\n     }\n \n@@ -124,6 +126,14 @@ class CKeyMetadata\n         hdMasterKeyID.SetNull();\n         keyFlags = KEY_ORIGIN_UNSET;\n     }\n+\n+    void SetKeyOrigin(const uint8_t n) {\n+        keyFlags = n;\n+    }\n+\n+    uint8_t GetKeyOrigin() const {\n+        return keyFlags;\n+    }\n };\n \n /** Access to the wallet database */"
      }
    ]
  },
  {
    "sha": "ff448537529a43e1a1cb4d4b0bf45e9b5aee1fcd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZjQ0ODUzNzUyOWE0M2UxYTFjYjRkNGIwYmY0NWU5YjVhZWUxZmNk",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-08-06T04:31:08Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-11-16T13:23:54Z"
      },
      "message": "wallet: Reimplement key origin as a field in a new CKeyMetadata map",
      "tree": {
        "sha": "51fa28da5810161b55e722e4f0bdb40ca03ff7e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/51fa28da5810161b55e722e4f0bdb40ca03ff7e9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff448537529a43e1a1cb4d4b0bf45e9b5aee1fcd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff448537529a43e1a1cb4d4b0bf45e9b5aee1fcd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ff448537529a43e1a1cb4d4b0bf45e9b5aee1fcd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff448537529a43e1a1cb4d4b0bf45e9b5aee1fcd/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d275b9416c6225dd20b20453280a3380d6e183fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d275b9416c6225dd20b20453280a3380d6e183fa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d275b9416c6225dd20b20453280a3380d6e183fa"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 49,
      "deletions": 11
    },
    "files": [
      {
        "sha": "5aaffd47d2e4f71aac0a984a65392074ede9d53a",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff448537529a43e1a1cb4d4b0bf45e9b5aee1fcd/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff448537529a43e1a1cb4d4b0bf45e9b5aee1fcd/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ff448537529a43e1a1cb4d4b0bf45e9b5aee1fcd",
        "patch": "@@ -99,8 +99,16 @@ CPubKey CWallet::GenerateNewKey()\n     CKeyMetadata metadata(nCreationTime);\n \n     //check if the wallet supports keyflags\n-    if (CanSupportFeature(FEATURE_KEYFLAGS)) {\n-        metadata.nVersion = CKeyMetadata::VERSION_WITH_FLAGS;\n+    if (GetVersion() >= FEATURE_HD) {\n+        if (CanSupportFeature(FEATURE_HD_KEYMETA) && SetMinVersion(FEATURE_HD_KEYMETA)) {\n+            metadata.nVersion = CKeyMetadata::VERSION_WITH_META;\n+        }\n+    } else {\n+        if (CanSupportFeature(FEATURE_KEYMETA) && SetMinVersion(FEATURE_KEYMETA)) {\n+            metadata.nVersion = CKeyMetadata::VERSION_WITH_META;\n+        } else if (CanSupportFeature(FEATURE_KEYFLAGS) && SetMinVersion(FEATURE_KEYFLAGS)) {\n+            metadata.nVersion = CKeyMetadata::VERSION_WITH_FLAGS;\n+        }\n     }\n     metadata.SetKeyOrigin(IsCrypted() ? CKeyMetadata::KEY_ORIGIN_ENC_WALLET : CKeyMetadata::KEY_ORIGIN_UNENC_WALLET);\n "
      },
      {
        "sha": "00704ca06c1630ee0b817fa7c81412151c22ef11",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff448537529a43e1a1cb4d4b0bf45e9b5aee1fcd/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff448537529a43e1a1cb4d4b0bf45e9b5aee1fcd/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ff448537529a43e1a1cb4d4b0bf45e9b5aee1fcd",
        "patch": "@@ -82,9 +82,11 @@ enum WalletFeature\n     FEATURE_WALLETCRYPT = 40000, // wallet encryption\n     FEATURE_COMPRPUBKEY = 60000, // compressed public keys\n     FEATURE_KEYFLAGS    = 70000, // key metadata flags for storing informations like key origin\n+    FEATURE_KEYMETA     = 70001, // key metadata map\n \n     FEATURE_HD = 130000, // Hierarchical key derivation after BIP32 (HD Wallet)\n-    FEATURE_LATEST = FEATURE_KEYFLAGS // HD is optional, use FEATURE_KEYFLAGS as latest version\n+    FEATURE_HD_KEYMETA = 130001, // HD + key metadata map\n+    FEATURE_LATEST = FEATURE_KEYMETA // HD is optional, use FEATURE_KEYMETA as latest version\n };\n \n "
      },
      {
        "sha": "44b47f9cda2901033c771c9f6cb21eceaefe5ea2",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 36,
        "deletions": 8,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff448537529a43e1a1cb4d4b0bf45e9b5aee1fcd/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff448537529a43e1a1cb4d4b0bf45e9b5aee1fcd/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=ff448537529a43e1a1cb4d4b0bf45e9b5aee1fcd",
        "patch": "@@ -75,7 +75,8 @@ class CKeyMetadata\n     static const int VERSION_BASIC=1;\n     static const int VERSION_WITH_FLAGS=2;\n     static const int VERSION_WITH_HDDATA=10;\n-    static const int CURRENT_VERSION=VERSION_WITH_HDDATA;\n+    static const int VERSION_WITH_META=11;\n+    static const int CURRENT_VERSION=VERSION_WITH_META;\n \n     static const uint8_t KEY_ORIGIN_UNSET         = 0x0000;\n     static const uint8_t KEY_ORIGIN_UNKNOWN       = 0x0001;\n@@ -87,9 +88,7 @@ class CKeyMetadata\n     int64_t nCreateTime; // 0 means unknown\n     std::string hdKeypath; //optional HD/bip32 keypath\n     CKeyID hdMasterKeyID; //id of the HD masterkey used to derive this key\n-private:\n-    uint8_t keyFlags;\n-public:\n+    std::map<std::string, std::string> mapMeta;\n \n     CKeyMetadata()\n     {\n@@ -99,23 +98,37 @@ class CKeyMetadata\n     {\n         SetNull();\n         nCreateTime = nCreateTime_;\n-        keyFlags = KEY_ORIGIN_UNSET;\n     }\n \n     ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n+        if (ser_action.ForRead()) {\n+            SetNull();\n+        }\n         READWRITE(this->nVersion);\n         READWRITE(nCreateTime);\n         if (this->nVersion >= VERSION_WITH_HDDATA)\n         {\n             READWRITE(hdKeypath);\n             READWRITE(hdMasterKeyID);\n+            if (nVersion >= VERSION_WITH_META) {\n+                READWRITE(mapMeta);\n+            }\n         }\n         else\n         if (nVersion >= VERSION_WITH_FLAGS)\n+        {\n+            uint8_t keyFlags;\n+            if (!ser_action.ForRead()) {\n+                keyFlags = GetKeyOrigin();\n+            }\n             READWRITE(keyFlags);\n+            if (ser_action.ForRead()) {\n+                SetKeyOrigin(keyFlags);\n+            }\n+        }\n     }\n \n     void SetNull()\n@@ -124,15 +137,30 @@ class CKeyMetadata\n         nCreateTime = 0;\n         hdKeypath.clear();\n         hdMasterKeyID.SetNull();\n-        keyFlags = KEY_ORIGIN_UNSET;\n+        mapMeta.clear();\n     }\n \n     void SetKeyOrigin(const uint8_t n) {\n-        keyFlags = n;\n+        const char * const p = (const char *)&n;\n+        const auto it = mapMeta.find(\"origin\");\n+        if (it == mapMeta.end()) {\n+            std::string s(p, 1);\n+            mapMeta[\"origin\"] = s;\n+        } else {\n+            // Avoid losing additional bytes, which might be future extension\n+            if (it->second.size() < 1) {\n+                it->second.resize(1);\n+            }\n+            it->second[0] = *p;\n+        }\n     }\n \n     uint8_t GetKeyOrigin() const {\n-        return keyFlags;\n+        const auto it = mapMeta.find(\"origin\");\n+        if (it == mapMeta.end() || it->second.size() < 1) {\n+            return KEY_ORIGIN_UNSET;\n+        }\n+        return it->second[0];\n     }\n };\n "
      }
    ]
  }
]