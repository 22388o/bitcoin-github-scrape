TheBlueMatt,2017-12-06T17:11:19Z,"Hmm, seems like its working around the issue instead of fixing, I think CWalletTx::AcceptToMemoryPool shouldn't unset fInMempool if its already set.",https://github.com/bitcoin/bitcoin/pull/11839#issuecomment-349708567,349708567,
MarcoFalke,2017-12-06T17:14:01Z,"You could add the test to `mempool_persist.py` instead, as wallet is already a ""test everything that has something to do with sending bitcoin""",https://github.com/bitcoin/bitcoin/pull/11839#issuecomment-349709363,349709363,
instagibbs,2017-12-06T17:15:35Z,"@TheBlueMatt right, feels quite brittle, but wanted to throw up a working solution/test.\n\nKnowing whether a boolean is already set sounds like boost::optional(?)\n\n@MarcoFalke noted, will move",https://github.com/bitcoin/bitcoin/pull/11839#issuecomment-349709811,349709811,
instagibbs,2017-12-06T17:17:40Z,"Well, I suppose you mean if it's set true, don't every change the value from that call.",https://github.com/bitcoin/bitcoin/pull/11839#issuecomment-349710424,349710424,
TheBlueMatt,2017-12-06T17:17:56Z,"@instagibbs huh? No, just change the third-to-last line in wallet.cpp to fInMempool |= ret from fInMempool = ret.",https://github.com/bitcoin/bitcoin/pull/11839#issuecomment-349710501,349710501,
instagibbs,2017-12-06T17:24:08Z,"@TheBlueMatt I honestly still don't understand the current comment in the logic. As long as this is only being called once on startup, your suggestion seems like a correct fix at least.",https://github.com/bitcoin/bitcoin/pull/11839#issuecomment-349712347,349712347,
Sjors,2017-12-06T17:26:30Z,"> Knowing whether a boolean is already set sounds like boost::optional(?)\n\nOr [std::optional](http://en.cppreference.com/w/cpp/utility/optional) as of C++17 :-)",https://github.com/bitcoin/bitcoin/pull/11839#issuecomment-349713237,349713237,
TheBlueMatt,2017-12-06T17:29:21Z,"@instagibbs the entered-mempool callback referred to there is async, so you can create a transaction, put it in the mempool, and then the IsInMempool() call will return false for some time. Thus, change outputs will ""not be spendable"" until the callbacks catch up if we didnt set fInMempool to true in AcceptToMemoryPool.",https://github.com/bitcoin/bitcoin/pull/11839#issuecomment-349714345,349714345,
MarcoFalke,2017-12-06T17:30:03Z,"                  \n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nTested ACK f72f5e2576650c3fc314e16f33dbcf24e85520ec\n-----BEGIN PGP SIGNATURE-----\n\niQIcBAEBCgAGBQJaKCkKAAoJENLqSFDnUoslHSkP/2QJqJa6aKFbp4ripP81rep5\njB074r5uPkh6Oa4MgbCI4dte9BQNkfIZ8wTl9sfNax50j8TMeglSHubn6P/F50A/\nzo0HJG767dvQMxGd+KSxYAS9nk9Oh4iY6SZs44lVYvOxUjnzlRTl9ElbzmDW+BOY\ndeqwbH3xv25Ii9+xrvjzHBt/3jiW",https://github.com/bitcoin/bitcoin/pull/11839#issuecomment-349714604,349714604,
Sjors,2017-12-06T17:30:53Z,"@TheBlueMatt although unrelated to this bug, isn't it a good idea in general to check `!mempool.exists(...)` before trying to add a transaction to the mempool? Or perhaps `AcceptToMemoryPool` should check if already contains the transaction before proceeding?\n\nOr does that not work due to the concurrency issue you described?",https://github.com/bitcoin/bitcoin/pull/11839#issuecomment-349714908,349714908,
MarcoFalke,2017-12-06T17:33:49Z,"If you move the fix to `CWalletTx::AcceptToMemoryPool`, it should check for `mempool.exists()` instead of the `|=` logic. Imo this better documents by code what is being done.",https://github.com/bitcoin/bitcoin/pull/11839#issuecomment-349715892,349715892,
MarcoFalke,2017-12-06T18:03:41Z,@Sjors Probably posted that to the wrong thread,https://github.com/bitcoin/bitcoin/pull/11839#issuecomment-349724613,349724613,
TheBlueMatt,2017-12-06T18:08:56Z,"I think |= is more correct than it is now anyway - if a transaction isn't in mempool and fails to be added, we shoul unset fInMempool in the callback, not in CWalletTx::AcceptToMemoryPool.",https://github.com/bitcoin/bitcoin/pull/11839#issuecomment-349726013,349726013,
instagibbs,2017-12-07T15:55:23Z,mark as 0.16 milestone? This is a potentially scary bug for users.,https://github.com/bitcoin/bitcoin/pull/11839#issuecomment-350009862,350009862,
Sjors,2017-12-11T11:31:04Z,Merging this would make testing SegWit wallet changes in #11403 easier.,https://github.com/bitcoin/bitcoin/pull/11839#issuecomment-350698524,350698524,
instagibbs,2017-12-11T14:16:04Z,"moved mempool check logic closer to source, moved test to mempool_persist.py",https://github.com/bitcoin/bitcoin/pull/11839#issuecomment-350736016,350736016,
laanwj,2017-12-11T15:16:59Z,utACK 6697a7089441deded836332e7ce3b4a1a9a3cbcd,https://github.com/bitcoin/bitcoin/pull/11839#issuecomment-350753820,350753820,
promag,2017-12-11T15:36:32Z,post-utACK.,https://github.com/bitcoin/bitcoin/pull/11839#issuecomment-350760114,350760114,
Sjors,2017-12-11T15:03:08Z,And to avoid wasting time?,https://github.com/bitcoin/bitcoin/pull/11839#discussion_r156097039,156097039,src/wallet/wallet.cpp
