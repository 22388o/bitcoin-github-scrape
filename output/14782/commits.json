[
  {
    "sha": "73103ea7a09037e90edc6fb9404369605b6b19e5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MzEwM2VhN2EwOTAzN2U5MGVkYzZmYjk0MDQzNjk2MDViNmIxOWU1",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-10-29T15:51:17Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-10-29T20:19:14Z"
      },
      "message": "Wallet: Add trusted_only flag to GetBalance",
      "tree": {
        "sha": "3470364df93c28286069a909955eef2b17fedd9a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3470364df93c28286069a909955eef2b17fedd9a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/73103ea7a09037e90edc6fb9404369605b6b19e5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73103ea7a09037e90edc6fb9404369605b6b19e5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/73103ea7a09037e90edc6fb9404369605b6b19e5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73103ea7a09037e90edc6fb9404369605b6b19e5/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8a9ffec0a257da659ba54c5073bfc820986ae9c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a9ffec0a257da659ba54c5073bfc820986ae9c1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8a9ffec0a257da659ba54c5073bfc820986ae9c1"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 11,
      "deletions": 4
    },
    "files": [
      {
        "sha": "0af913a6c20534feb256ca2a38878be433b0e33a",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73103ea7a09037e90edc6fb9404369605b6b19e5/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73103ea7a09037e90edc6fb9404369605b6b19e5/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=73103ea7a09037e90edc6fb9404369605b6b19e5",
        "patch": "@@ -2110,17 +2110,24 @@ void CWallet::ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman\n  */\n \n \n-CAmount CWallet::GetBalance(const isminefilter& filter, const int min_depth) const\n+CAmount CWallet::GetBalance(const isminefilter& filter, const int min_depth, const bool trusted_only) const\n {\n     CAmount nTotal = 0;\n     {\n         LOCK2(cs_main, cs_wallet);\n         for (const auto& entry : mapWallet)\n         {\n             const CWalletTx* pcoin = &entry.second;\n-            if (pcoin->IsTrusted() && pcoin->GetDepthInMainChain() >= min_depth) {\n-                nTotal += pcoin->GetAvailableCredit(true, filter);\n+\n+            if (trusted_only) {\n+                if (!pcoin->IsTrusted()) continue;\n+            } else {\n+                if (!CheckFinalTx(*pcoin->tx)) continue;\n             }\n+\n+            if (pcoin->GetDepthInMainChain() < min_depth) continue;\n+\n+            nTotal += pcoin->GetAvailableCredit(true, filter);\n         }\n     }\n "
      },
      {
        "sha": "2916ba8ccd37db387170f4c4f1ac78da7f2a299c",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73103ea7a09037e90edc6fb9404369605b6b19e5/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73103ea7a09037e90edc6fb9404369605b6b19e5/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=73103ea7a09037e90edc6fb9404369605b6b19e5",
        "patch": "@@ -950,7 +950,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     void ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman) override;\n     // ResendWalletTransactionsBefore may only be called if fBroadcastTransactions!\n     std::vector<uint256> ResendWalletTransactionsBefore(int64_t nTime, CConnman* connman);\n-    CAmount GetBalance(const isminefilter& filter=ISMINE_SPENDABLE, const int min_depth=0) const;\n+    CAmount GetBalance(const isminefilter& filter=ISMINE_SPENDABLE, const int min_depth=0, bool trusted_only=true) const;\n     CAmount GetUnconfirmedBalance() const;\n     CAmount GetImmatureBalance() const;\n     CAmount GetUnconfirmedWatchOnlyBalance() const;"
      }
    ]
  },
  {
    "sha": "2141e62b6fc6671b3428a130232a91df38c4b974",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMTQxZTYyYjZmYzY2NzFiMzQyOGExMzAyMzJhOTFkZjM4YzRiOTc0",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-10-29T15:53:15Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-11-22T05:33:33Z"
      },
      "message": "Bugfix: RPC/Wallet: Restore getbalance(\"*\") behaviour (include untrusted coins), while updating the API to accept a boolean as well",
      "tree": {
        "sha": "4f7ee0486dc14f8a6f8e9cc01c81a60e1e56bac0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f7ee0486dc14f8a6f8e9cc01c81a60e1e56bac0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2141e62b6fc6671b3428a130232a91df38c4b974",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2141e62b6fc6671b3428a130232a91df38c4b974",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2141e62b6fc6671b3428a130232a91df38c4b974",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2141e62b6fc6671b3428a130232a91df38c4b974/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "73103ea7a09037e90edc6fb9404369605b6b19e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73103ea7a09037e90edc6fb9404369605b6b19e5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/73103ea7a09037e90edc6fb9404369605b6b19e5"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 21,
      "deletions": 8
    },
    "files": [
      {
        "sha": "bf69ac46edfc301c1f6872bf85dd6aaa8c00ef30",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2141e62b6fc6671b3428a130232a91df38c4b974/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2141e62b6fc6671b3428a130232a91df38c4b974/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=2141e62b6fc6671b3428a130232a91df38c4b974",
        "patch": "@@ -52,6 +52,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"listreceivedbylabel\", 0, \"minconf\" },\n     { \"listreceivedbylabel\", 1, \"include_empty\" },\n     { \"listreceivedbylabel\", 2, \"include_watchonly\" },\n+    { \"getbalance\", 0, \"trusted_only\" },\n     { \"getbalance\", 1, \"minconf\" },\n     { \"getbalance\", 2, \"include_watchonly\" },\n     { \"getblockhash\", 0, \"height\" },"
      },
      {
        "sha": "0a2ee47f98912ab376e4edc1e72b167dce376c15",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 6,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2141e62b6fc6671b3428a130232a91df38c4b974/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2141e62b6fc6671b3428a130232a91df38c4b974/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=2141e62b6fc6671b3428a130232a91df38c4b974",
        "patch": "@@ -888,12 +888,12 @@ static UniValue getbalance(const JSONRPCRequest& request)\n             \"2. minconf           (numeric, optional) Only include transactions confirmed at least this many times. \\n\"\n             \"                     The default is 1 if an account is provided or 0 if no account is provided\\n\")\n             : std::string(\n-            \"getbalance ( \\\"(dummy)\\\" minconf include_watchonly )\\n\"\n+            \"getbalance ( trusted_only minconf include_watchonly )\\n\"\n             \"\\nReturns the total available balance.\\n\"\n             \"The available balance is what the wallet considers currently spendable, and is\\n\"\n             \"thus affected by options which limit spendability such as -spendzeroconfchange.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. (dummy)           (string, optional) Remains for backward compatibility. Must be excluded or set to \\\"*\\\".\\n\"\n+            \"1. trusted_only      (boolean, optional, default=true) Only include transactions considered trusted by the wallet.\\n\"\n             \"2. minconf           (numeric, optional, default=0) Only include transactions confirmed at least this many times.\\n\")) +\n             \"3. include_watchonly (bool, optional, default=false) Also include balance in watch-only addresses (see 'importaddress')\\n\"\n             \"\\nResult:\\n\"\n@@ -914,9 +914,21 @@ static UniValue getbalance(const JSONRPCRequest& request)\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     const UniValue& account_value = request.params[0];\n+    bool trusted_only = true;\n+    if (account_value.isBool()) {\n+        trusted_only = account_value.get_bool();\n+    } else if (account_value.isStr()) {\n+        // backward compatibility\n+        if (account_value.get_str() != \"*\" && !IsDeprecatedRPCEnabled(\"accounts\")) {\n+            throw JSONRPCError(RPC_METHOD_DEPRECATED, \"accounts no longer supported; set 1st field to trusted_only\");\n+        }\n+        trusted_only = false;\n+    } else if (!account_value.isNull()) {\n+        throw JSONRPCError(RPC_TYPE_ERROR, strprintf(\"Expected type %s, got %s\", uvTypeName(UniValue::VSTR), uvTypeName(account_value.type())));\n+    }\n \n     int min_depth = 0;\n-    if (IsDeprecatedRPCEnabled(\"accounts\") && !account_value.isNull()) {\n+    if (IsDeprecatedRPCEnabled(\"accounts\") && account_value.isStr()) {\n         // Default min_depth to 1 when an account is provided.\n         min_depth = 1;\n     }\n@@ -929,7 +941,7 @@ static UniValue getbalance(const JSONRPCRequest& request)\n         filter = filter | ISMINE_WATCH_ONLY;\n     }\n \n-    if (!account_value.isNull()) {\n+    if (account_value.isStr()) {\n \n         const std::string& account_param = account_value.get_str();\n         const std::string* account = account_param != \"*\" ? &account_param : nullptr;\n@@ -941,7 +953,7 @@ static UniValue getbalance(const JSONRPCRequest& request)\n         }\n     }\n \n-    return ValueFromAmount(pwallet->GetBalance(filter, min_depth));\n+    return ValueFromAmount(pwallet->GetBalance(filter, min_depth, trusted_only));\n }\n \n static UniValue getunconfirmedbalance(const JSONRPCRequest &request)\n@@ -4781,7 +4793,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"dumpwallet\",                       &dumpwallet,                    {\"filename\"} },\n     { \"wallet\",             \"encryptwallet\",                    &encryptwallet,                 {\"passphrase\"} },\n     { \"wallet\",             \"getaddressinfo\",                   &getaddressinfo,                {\"address\"} },\n-    { \"wallet\",             \"getbalance\",                       &getbalance,                    {\"account|dummy\",\"minconf\",\"include_watchonly\"} },\n+    { \"wallet\",             \"getbalance\",                       &getbalance,                    {\"trusted_only\",\"minconf\",\"include_watchonly\"} },\n     { \"wallet\",             \"getnewaddress\",                    &getnewaddress,                 {\"label|account\",\"address_type\"} },\n     { \"wallet\",             \"getrawchangeaddress\",              &getrawchangeaddress,           {\"address_type\"} },\n     { \"wallet\",             \"getreceivedbyaddress\",             &getreceivedbyaddress,          {\"address\",\"minconf\"} },"
      },
      {
        "sha": "3c45d6525ed6fd079fd75e0d72d9cb675b224ec9",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2141e62b6fc6671b3428a130232a91df38c4b974/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2141e62b6fc6671b3428a130232a91df38c4b974/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=2141e62b6fc6671b3428a130232a91df38c4b974",
        "patch": "@@ -70,8 +70,8 @@ def run_test(self):\n         assert_equal(self.nodes[0].getbalance(\"*\", 1, True), 50)\n         assert_equal(self.nodes[0].getbalance(minconf=1), 50)\n \n-        # first argument of getbalance must be excluded or set to \"*\"\n-        assert_raises_rpc_error(-32, \"dummy first argument must be excluded or set to \\\"*\\\"\", self.nodes[0].getbalance, \"\")\n+        # first argument of getbalance must be trusted_only or set to \"*\"\n+        assert_raises_rpc_error(-32, \"accounts no longer supported; set 1st field to trusted_only\", self.nodes[0].getbalance, \"\")\n \n         # Check that only first and second nodes have UTXOs\n         utxos = self.nodes[0].listunspent()"
      }
    ]
  },
  {
    "sha": "c18bd54c759467807194465b9a2ab9170719e4a9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMThiZDU0Yzc1OTQ2NzgwNzE5NDQ2NWI5YTJhYjkxNzA3MTllNGE5",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-10-29T15:55:24Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-11-22T05:33:33Z"
      },
      "message": "Bugfix: Wallet: When getting balance w/ min_conf, include UTXOs that were spent more recently",
      "tree": {
        "sha": "d2176243620c943b16a96094c7f3278f2937d1b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d2176243620c943b16a96094c7f3278f2937d1b3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c18bd54c759467807194465b9a2ab9170719e4a9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c18bd54c759467807194465b9a2ab9170719e4a9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c18bd54c759467807194465b9a2ab9170719e4a9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c18bd54c759467807194465b9a2ab9170719e4a9/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2141e62b6fc6671b3428a130232a91df38c4b974",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2141e62b6fc6671b3428a130232a91df38c4b974",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2141e62b6fc6671b3428a130232a91df38c4b974"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 7,
      "deletions": 6
    },
    "files": [
      {
        "sha": "0a0bd05c5e694170357638d6e42a2d1b2679aa65",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c18bd54c759467807194465b9a2ab9170719e4a9/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c18bd54c759467807194465b9a2ab9170719e4a9/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=c18bd54c759467807194465b9a2ab9170719e4a9",
        "patch": "@@ -595,7 +595,7 @@ void CWallet::SyncMetaData(std::pair<TxSpends::iterator, TxSpends::iterator> ran\n  * Outpoint is spent if any non-conflicted transaction\n  * spends it:\n  */\n-bool CWallet::IsSpent(const uint256& hash, unsigned int n) const\n+bool CWallet::IsSpent(const uint256& hash, unsigned int n, const int min_depth) const\n {\n     const COutPoint outpoint(hash, n);\n     std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n@@ -607,6 +607,7 @@ bool CWallet::IsSpent(const uint256& hash, unsigned int n) const\n         std::map<uint256, CWalletTx>::const_iterator mit = mapWallet.find(wtxid);\n         if (mit != mapWallet.end()) {\n             int depth = mit->second.GetDepthInMainChain();\n+            if (depth < min_depth) continue;\n             if (depth > 0  || (depth == 0 && !mit->second.isAbandoned()))\n                 return true; // Spent\n         }\n@@ -1938,7 +1939,7 @@ CAmount CWalletTx::GetImmatureCredit(bool fUseCache) const\n     return 0;\n }\n \n-CAmount CWalletTx::GetAvailableCredit(bool fUseCache, const isminefilter& filter) const\n+CAmount CWalletTx::GetAvailableCredit(bool fUseCache, const isminefilter& filter, const int min_depth) const\n {\n     if (pwallet == nullptr)\n         return 0;\n@@ -1966,7 +1967,7 @@ CAmount CWalletTx::GetAvailableCredit(bool fUseCache, const isminefilter& filter\n     uint256 hashTx = GetHash();\n     for (unsigned int i = 0; i < tx->vout.size(); i++)\n     {\n-        if (!pwallet->IsSpent(hashTx, i))\n+        if (!pwallet->IsSpent(hashTx, i, min_depth))\n         {\n             const CTxOut &txout = tx->vout[i];\n             nCredit += pwallet->GetCredit(txout, filter);\n@@ -2127,7 +2128,7 @@ CAmount CWallet::GetBalance(const isminefilter& filter, const int min_depth, con\n \n             if (pcoin->GetDepthInMainChain() < min_depth) continue;\n \n-            nTotal += pcoin->GetAvailableCredit(true, filter);\n+            nTotal += pcoin->GetAvailableCredit(true, filter, min_depth);\n         }\n     }\n "
      },
      {
        "sha": "bb01b14e92b7c5ce412f9bf749d63df112d2bc73",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c18bd54c759467807194465b9a2ab9170719e4a9/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c18bd54c759467807194465b9a2ab9170719e4a9/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=c18bd54c759467807194465b9a2ab9170719e4a9",
        "patch": "@@ -456,7 +456,7 @@ class CWalletTx : public CMerkleTx\n     CAmount GetDebit(const isminefilter& filter) const;\n     CAmount GetCredit(const isminefilter& filter) const;\n     CAmount GetImmatureCredit(bool fUseCache=true) const;\n-    CAmount GetAvailableCredit(bool fUseCache=true, const isminefilter& filter=ISMINE_SPENDABLE) const;\n+    CAmount GetAvailableCredit(bool fUseCache=true, const isminefilter& filter=ISMINE_SPENDABLE, int min_depth = 0) const;\n     CAmount GetImmatureWatchOnlyCredit(const bool fUseCache=true) const;\n     CAmount GetChange() const;\n \n@@ -861,7 +861,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     bool SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<OutputGroup> groups,\n         std::set<CInputCoin>& setCoinsRet, CAmount& nValueRet, const CoinSelectionParams& coin_selection_params, bool& bnb_used) const;\n \n-    bool IsSpent(const uint256& hash, unsigned int n) const;\n+    bool IsSpent(const uint256& hash, unsigned int n, int min_depth = 0) const;\n     std::vector<OutputGroup> GroupOutputs(const std::vector<COutput>& outputs, bool single_coin) const;\n \n     bool IsLockedCoin(uint256 hash, unsigned int n) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);"
      }
    ]
  },
  {
    "sha": "eb013b350cd75e36e0a1da2a745eb5320ab1ba8c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYjAxM2IzNTBjZDc1ZTM2ZTBhMWRhMmE3NDVlYjUzMjBhYjFiYThj",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-11-22T02:28:03Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-11-22T05:33:45Z"
      },
      "message": "lint: Remove incorrect check that all arguments are string or not",
      "tree": {
        "sha": "763216c4657d893459697ebadcce91b9abd75de2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/763216c4657d893459697ebadcce91b9abd75de2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eb013b350cd75e36e0a1da2a745eb5320ab1ba8c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb013b350cd75e36e0a1da2a745eb5320ab1ba8c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eb013b350cd75e36e0a1da2a745eb5320ab1ba8c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb013b350cd75e36e0a1da2a745eb5320ab1ba8c/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c18bd54c759467807194465b9a2ab9170719e4a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c18bd54c759467807194465b9a2ab9170719e4a9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c18bd54c759467807194465b9a2ab9170719e4a9"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 2,
      "deletions": 12
    },
    "files": [
      {
        "sha": "caac45aac431029b384d41e18ef1e1d0ccee8317",
        "filename": "test/lint/check-rpc-mappings.py",
        "status": "modified",
        "additions": 2,
        "deletions": 12,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb013b350cd75e36e0a1da2a745eb5320ab1ba8c/test/lint/check-rpc-mappings.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb013b350cd75e36e0a1da2a745eb5320ab1ba8c/test/lint/check-rpc-mappings.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/check-rpc-mappings.py?ref=eb013b350cd75e36e0a1da2a745eb5320ab1ba8c",
        "patch": "@@ -35,6 +35,8 @@ def __init__(self, names, idx):\n         self.idx = idx\n         self.convert = False\n \n+        self.names, self.idx, self.convert  # make vulture happy; we don't care if they're actually used\n+\n def parse_string(s):\n     assert s[0] == '\"'\n     assert s[-1] == '\"'\n@@ -120,18 +122,6 @@ def main():\n             print('ERROR: %s argument %i is named %s in vRPCConvertParams but %s in dispatch table' % (cmdname, argidx, argname, rargnames), file=sys.stderr)\n             errors += 1\n \n-    # Check for conflicts in vRPCConvertParams conversion\n-    # All aliases for an argument must either be present in the\n-    # conversion table, or not. Anything in between means an oversight\n-    # and some aliases won't work.\n-    for cmd in cmds:\n-        for arg in cmd.args:\n-            convert = [((cmd.name, arg.idx, argname) in mapping) for argname in arg.names]\n-            if any(convert) != all(convert):\n-                print('ERROR: %s argument %s has conflicts in vRPCConvertParams conversion specifier %s' % (cmd.name, arg.names, convert))\n-                errors += 1\n-            arg.convert = all(convert)\n-\n     # Check for conversion difference by argument name.\n     # It is preferable for API consistency that arguments with the same name\n     # have the same conversion, so bin by argument name."
      }
    ]
  },
  {
    "sha": "32de31c1dd3255702f655b0746cb4fac3cc1938f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMmRlMzFjMWRkMzI1NTcwMmY2NTViMDc0NmNiNGZhYzNjYzE5Mzhm",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-11-22T05:25:02Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-11-22T05:34:10Z"
      },
      "message": "RPC/Wallet: Include \"account\" named arg alias for getbalance compatibility",
      "tree": {
        "sha": "b527030c20395e5a388f183514d8da0fb3e42f7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b527030c20395e5a388f183514d8da0fb3e42f7f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/32de31c1dd3255702f655b0746cb4fac3cc1938f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/32de31c1dd3255702f655b0746cb4fac3cc1938f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/32de31c1dd3255702f655b0746cb4fac3cc1938f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/32de31c1dd3255702f655b0746cb4fac3cc1938f/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eb013b350cd75e36e0a1da2a745eb5320ab1ba8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb013b350cd75e36e0a1da2a745eb5320ab1ba8c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eb013b350cd75e36e0a1da2a745eb5320ab1ba8c"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "bb104dfa1b96a365886aedf9d09102903af01258",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/32de31c1dd3255702f655b0746cb4fac3cc1938f/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/32de31c1dd3255702f655b0746cb4fac3cc1938f/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=32de31c1dd3255702f655b0746cb4fac3cc1938f",
        "patch": "@@ -4793,7 +4793,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"dumpwallet\",                       &dumpwallet,                    {\"filename\"} },\n     { \"wallet\",             \"encryptwallet\",                    &encryptwallet,                 {\"passphrase\"} },\n     { \"wallet\",             \"getaddressinfo\",                   &getaddressinfo,                {\"address\"} },\n-    { \"wallet\",             \"getbalance\",                       &getbalance,                    {\"trusted_only\",\"minconf\",\"include_watchonly\"} },\n+    { \"wallet\",             \"getbalance\",                       &getbalance,                    {\"trusted_only|account\",\"minconf\",\"include_watchonly\"} },\n     { \"wallet\",             \"getnewaddress\",                    &getnewaddress,                 {\"label|account\",\"address_type\"} },\n     { \"wallet\",             \"getrawchangeaddress\",              &getrawchangeaddress,           {\"address_type\"} },\n     { \"wallet\",             \"getreceivedbyaddress\",             &getreceivedbyaddress,          {\"address\",\"minconf\"} },"
      }
    ]
  }
]