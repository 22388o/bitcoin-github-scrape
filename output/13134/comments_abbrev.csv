sdaftuar,2018-05-01T14:49:54Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-385689657,385689657,
gmaxwell,2018-05-01T18:12:20Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-385744738,385744738,
sipa,2018-05-02T02:48:28Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-385849651,385849651,
jonasschnelli,2018-05-02T06:55:54Z,utACK ca4d71559c9d0f4a5a9a1dec105bff827b530a00 (after squashing the squashme),https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-385881926,385881926,
laanwj,2018-05-03T12:42:59Z,Squashed ca4d715 → 39d4d10,https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-386282435,386282435,
morcos,2018-05-03T14:11:26Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-386309145,386309145,
MarcoFalke,2018-05-03T16:15:48Z,Agree that mentioning bip61 in the option name makes sense.,https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-386351187,386351187,
laanwj,2018-05-04T08:54:39Z,"> I think -enablebip61 is a better argument name than -peersendreject, which I think could be a little ambiguous/confusing.\n\nAs you might have guessed from the variable name I used that name at first, but thought this name was more direct/clear. But I'm ok with changing it to that.\n\nOne of the reasons for switching it around was that `-peerbloomfilters` was already a thing and I was trying",https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-386541851,386541851,
MarcoFalke,2018-05-09T18:39:47Z,Needs rebase <strike>if still relevant</strike>,https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-387835898,387835898,
laanwj,2018-05-09T19:07:13Z,Why would this already not be relevant now?,https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-387843676,387843676,
MarcoFalke,2018-05-09T19:08:43Z,"Sorry, this is an automated template reply :)",https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-387844088,387844088,
laanwj,2018-05-09T19:29:19Z,Rebased and renamed the option.,https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-387849449,387849449,
jnewbery,2018-05-09T20:02:36Z,"Strange. p2p_invalid_tx.py fails in one job in Travis, on the updated line:\n\n```\n        node.p2p.send_txs_and_test([tx1], node, success=False, expect_disconnect=True, reject_code=REJECT_INVALID)\n```\n\nI can't reproduce this locally.",https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-387858365,387858365,
laanwj,2018-05-10T04:54:22Z,"Right - and that's not even with changed `-enablebip61` setting, but the default one\n```\n2018-05-09T19:56:46.996000Z TestFramework (INFO): Test a transaction that is rejected\n2018-05-09T19:57:47.063000Z TestFramework.utils (ERROR): wait_until() failed. Predicate: (['            wait_until(lambda: self.reject_code_received == reject_code, lock=mininode_lock)\n'], 592)\n```\nIf it gets to th",https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-387951698,387951698,
laanwj,2018-05-10T05:34:01Z,"I'd missed @MarcoFalke 's comment about testing reject reason, patched and squashed:\n47d858ddfc481df811fb9c67a5c105c3dcbdfa10 →  56d8a5b0b58afc978bf47d7f18164d0362a433b0",https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-387956672,387956672,
MarcoFalke,2018-05-10T14:32:48Z,"Yes, the travis failure is unrelated. I will open an issue when I see this again.",https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-388071661,388071661,
MarcoFalke,2018-05-10T14:38:12Z,re-utACK 56d8a5b0b58afc978bf47d7f18164d0362a433b0 (Only change is rebase and test fixup as well as a change to the option name),https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-388073262,388073262,
MarcoFalke,2018-05-13T18:37:55Z,Needs rebase due to merge conflict in tests,https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-388646970,388646970,
laanwj,2018-05-13T19:06:20Z,Rebased 56d8a5b0b58afc978bf47d7f18164d0362a433b0 → 87fe292d897e09e176ac7e254144466c319cc9ac,https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-388648680,388648680,
MarcoFalke,2018-05-15T15:33:20Z,re-utACK 87fe292 (no changes other than rebase),https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-389211132,389211132,
jnewbery,2018-05-16T18:21:25Z,utACK 87fe292d897e09e176ac7e254144466c319cc9ac,https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-389617466,389617466,
MarcoFalke,2018-05-23T20:23:00Z,@jonasschnelli @sdaftuar Mind to re-ACK?,https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-391483873,391483873,
sipa,2018-05-23T23:22:01Z,utACK 87fe292d897e09e176ac7e254144466c319cc9ac,https://github.com/bitcoin/bitcoin/pull/13134#issuecomment-391531223,391531223,
MarcoFalke,2018-05-01T13:24:30Z,txr seems unused?,https://github.com/bitcoin/bitcoin/pull/13134#discussion_r185220015,185220015,test/functional/p2p_invalid_tx.py
laanwj,2018-05-01T13:28:02Z,"yes, it's not necessary, we can re-use tx1 (initially added it because it looked like I needed to generate a different transaction, but `persistmempool=0` works too...)",https://github.com/bitcoin/bitcoin/pull/13134#discussion_r185220696,185220696,test/functional/p2p_invalid_tx.py
MarcoFalke,2018-05-03T14:22:06Z,"nit: If you set the reject_code, you might as well set the reject_reason:\n\n```py\nreject_reason=b'mandatory-script-verify-flag-failed (Invalid OP_IF construction)'\n```",https://github.com/bitcoin/bitcoin/pull/13134#discussion_r185815013,185815013,test/functional/p2p_invalid_tx.py
MarcoFalke,2018-05-03T14:23:04Z,micro-style-nit: Could add a white space after the comma?,https://github.com/bitcoin/bitcoin/pull/13134#discussion_r185815384,185815384,test/functional/p2p_invalid_tx.py
