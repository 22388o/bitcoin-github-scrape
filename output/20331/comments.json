[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723441919",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#issuecomment-723441919",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20331",
    "id": 723441919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzQ0MTkxOQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-07T12:45:09Z",
    "updated_at": "2021-09-26T01:36:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22937](https://github.com/bitcoin/bitcoin/pull/22937) (refactor: Forbid calling unsafe fs::path(std::string) constructor and fs::path::string() method by ryanofsky)\n* [#16981](https://github.com/bitcoin/bitcoin/pull/16981) (Improve runtime performance of --reindex by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723441919/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/724176941",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#issuecomment-724176941",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20331",
    "id": 724176941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDE3Njk0MQ==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-09T18:00:25Z",
    "updated_at": "2020-11-09T18:00:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "A useful follow-on to this PR, since loading unordered blocks would become possible, might be the addition of a `-loadblocksdir=` argument that takes a directory path and loads all blocks found in the directory. That way it's not necessary to specify a very large number of `-loadblock` arguments. It would then be easy to import an entire blockchain. \r\n\r\nAnother way to accomplish approximately the same thing would be to replace the entire `blocks` directory in the data directory and then `-reindex`. But using `-loadblocksdir` would allow you to \"merge\" blocks into your existing blocks list (suppressing duplicates), which is kind of cool.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/724176941/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/724371601",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#issuecomment-724371601",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20331",
    "id": 724371601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDM3MTYwMQ==",
    "user": {
      "login": "adamjonas",
      "id": 755825,
      "node_id": "MDQ6VXNlcjc1NTgyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/755825?u=fc2e6f106f98731d49e9787f9cbfe86a17447c23&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamjonas",
      "html_url": "https://github.com/adamjonas",
      "followers_url": "https://api.github.com/users/adamjonas/followers",
      "following_url": "https://api.github.com/users/adamjonas/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamjonas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
      "organizations_url": "https://api.github.com/users/adamjonas/orgs",
      "repos_url": "https://api.github.com/users/adamjonas/repos",
      "events_url": "https://api.github.com/users/adamjonas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamjonas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-10T00:37:00Z",
    "updated_at": "2020-11-10T00:37:00Z",
    "author_association": "MEMBER",
    "body": "Appears that the CI picked up a couple of argument issues with the `LoadExternalBlockFile` fuzz test:\r\n\r\n```\r\ntest/fuzz/load_external_block_file.cpp:33:9: error: no matching function for call to 'LoadExternalBlockFile'\r\n        LoadExternalBlockFile(Params(), fuzzed_block_file, &flat_file_pos, &blocks_with_unknown_parent);\r\n        ^~~~~~~~~~~~~~~~~~~~~\r\n./validation.h:162:6: note: candidate function not viable: requires 5 arguments, but 4 were provided\r\nvoid LoadExternalBlockFile(\r\n     ^\r\ntest/fuzz/load_external_block_file.cpp:35:9: error: no matching function for call to 'LoadExternalBlockFile'\r\n        LoadExternalBlockFile(Params(), fuzzed_block_file);\r\n        ^~~~~~~~~~~~~~~~~~~~~\r\n./validation.h:162:6: note: candidate function not viable: requires 5 arguments, but 2 were provided\r\nvoid LoadExternalBlockFile(\r\n     ^\r\n2 errors generated.\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/724371601/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/724419011",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#issuecomment-724419011",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20331",
    "id": 724419011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDQxOTAxMQ==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-10T03:03:23Z",
    "updated_at": "2020-11-10T03:03:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't know if anyone has been confused by `-loadblock` not loading all the blocks, but that did happen on the zcash network (a bitcoin core fork that I also work on): https://github.com/zcash/zcash/issues/4679",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/724419011/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/724427698",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#issuecomment-724427698",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20331",
    "id": 724427698,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDQyNzY5OA==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-10T03:32:46Z",
    "updated_at": "2020-11-12T15:16:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, @adamjonas, force-pushed to fix the fuzz test.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/724427698/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/726206231",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#issuecomment-726206231",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20331",
    "id": 726206231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjIwNjIzMQ==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-12T17:00:00Z",
    "updated_at": "2020-11-12T17:00:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's a manual test procedure (I'll describe testnet because it's faster, but mainnet works too)\r\n- testnet node is not running\r\n- wait for your testnet3 data directory to get out of date (don't run the client for at least several days)\r\n- change directory to your `.bitcoin` data directory\r\n- rename `testnet3` to `testnet3-save`\r\n- start the node with `-testnet`, wait for it to sync (IBD), it will have more blocks (and more blocks files) than `testnet3-save`\r\n- stop the node\r\n- rename `testnet3` to `testnet3-new`\r\n- rename `testnet3-save` to `testnet3`\r\n- start the node as follows, except replace `191`  with the highest-numbered file in the `testnet3-save` directory:\r\n\r\n```\r\nbitcoind -testnet -networkactive=0 $(seq 0 191|xargs printf '-loadblock=testnet3-new/blocks/blk%05u.dat ')\r\n```\r\nThis generates a command line like:\r\n```\r\nbitcoind -testnet -networkactive=0 -loadblock=testnet3-new/blocks/blk00000.dat -loadblock=testnet3-new/blocks/blk00001.dat ...\r\n```\r\n\r\n\r\n- observe that, even though not syncing with peers,  the node successfully reaches a recent block height (look at the most recent `UpdateTip` in `debug.log`).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/726206231/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/727190555",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#issuecomment-727190555",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20331",
    "id": 727190555,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNzE5MDU1NQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-14T11:15:50Z",
    "updated_at": "2020-11-14T11:15:50Z",
    "author_association": "MEMBER",
    "body": "@LarryRuane I guess it's possible to make a functional test then?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/727190555/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/727227721",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#issuecomment-727227721",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20331",
    "id": 727227721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNzIyNzcyMQ==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-14T16:02:39Z",
    "updated_at": "2020-11-14T16:02:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@promag I didn't write a new functional test, but I did [modify](https://github.com/bitcoin/bitcoin/pull/20331/files#diff-cabb34205d48861dbb53b2ad0df92776bf7d917150caf17778e15fbc8e63e123R73) the existing loadblock functional test to cover the new behavior (the test fails without the PR). Is that sufficient?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/727227721/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/738161531",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#issuecomment-738161531",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20331",
    "id": 738161531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczODE2MTUzMQ==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-03T17:26:38Z",
    "updated_at": "2020-12-03T17:26:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Verified that the test fails without the new behaviour, cool!\r\n\r\nA couple of things that could be done:\r\n1. Instead of asserting based on the debug log (which is a bit more fragile), perhaps the assertion can be made based on the number of blocks connected (tip height). We may need to disable networking for this to work reliably.\r\n2. I think the changes in `test/functional` should be split into its own commit and put as the first commit in this patchset, this way it's easier for reviewers to verify that the new behavior does indeed do what it's supposed to do.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/738161531/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/738524266",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#issuecomment-738524266",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20331",
    "id": 738524266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczODUyNDI2Ng==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-04T02:42:18Z",
    "updated_at": "2021-03-05T17:49:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Force-pushed to implement both suggestions from @dongcarl (thank you!).\r\n\r\nReminder, this PR is layered on top of #19594 so please review only the last _two_ commits (of the 3).\r\n\r\nUPDATE Mar 5, 2021: I squashed the last two commits, so only review the last commit.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/738524266/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/773391046",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#issuecomment-773391046",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20331",
    "id": 773391046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzM5MTA0Ng==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-04T15:25:11Z",
    "updated_at": "2021-02-04T15:25:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased, no functional changes.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/773391046/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/825762813",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#issuecomment-825762813",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20331",
    "id": 825762813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTc2MjgxMw==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-23T16:10:18Z",
    "updated_at": "2021-04-23T16:10:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "This required rebase also splits the second commit into two commits to separate refactoring from the functional changes. Ready for review.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/825762813/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834058984",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#issuecomment-834058984",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20331",
    "id": 834058984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzNDA1ODk4NA==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-07T04:38:54Z",
    "updated_at": "2021-05-07T04:38:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased. The second commit is now much simpler because of #21727.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834058984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/859132786",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#issuecomment-859132786",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20331",
    "id": 859132786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1OTEzMjc4Ng==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-10T22:45:51Z",
    "updated_at": "2021-06-10T22:45:51Z",
    "author_association": "MEMBER",
    "body": "utACK dbd7f729f42d58a1d47700dc75fb1a5a6d76cdf2",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/859132786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/860341739",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#issuecomment-860341739",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20331",
    "id": 860341739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MDM0MTczOQ==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-14T03:40:18Z",
    "updated_at": "2021-06-14T03:40:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased to resolve merge conflicts.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/860341739/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/944151965",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#issuecomment-944151965",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20331",
    "id": 944151965,
    "node_id": "IC_kwDOABII5844Rp2d",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-15T09:40:34Z",
    "updated_at": "2021-10-15T09:40:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n\ud83d\udc19 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/944151965/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521565897",
    "pull_request_review_id": 528442559,
    "id": 521565897,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU2NTg5Nw==",
    "diff_hunk": "@@ -1143,35 +1143,46 @@ static bool WriteBlockToDisk(const CBlock& block, FlatFilePos& pos, const CMessa\n     return true;\n }\n \n-bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::Params& consensusParams)\n+bool ReadBlockFromDisk(CBlock& block, const fs::path& path, unsigned int offset, const Consensus::Params& consensusParams)\n {\n     block.SetNull();\n \n     // Open history file to read\n-    CAutoFile filein(OpenBlockFile(pos, true), SER_DISK, CLIENT_VERSION);\n-    if (filein.IsNull())\n-        return error(\"ReadBlockFromDisk: OpenBlockFile failed for %s\", pos.ToString());\n+    FILE* file = fsbridge::fopen(path, \"rb\");\n+    if (!file) {\n+        return error(\"ReadBlockFromDisk: open failed for %s\", path.string());\n+    }\n+    if (offset > 0 && fseek(file, offset, SEEK_SET)) {\n+        fclose(file);\n+        return error(\"ReadBlockFromDisk: fseek failed for %s offset %u\", path.string(), offset);\n+    }\n+    CAutoFile filein(file, SER_DISK, CLIENT_VERSION);",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "0c97fa3d22a405e244a6c9b5c7849b49f0c5454f",
    "original_commit_id": "7afedcfc716f497601925dd713c89cb835ed5477",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why was this change made? Could you explain how the behavior of this is changing, aside from the function signature taking `const fs::path& path, unsigned int offset` instead of `const FlatFilePos& pos`?",
    "created_at": "2020-11-11T18:45:30Z",
    "updated_at": "2021-04-24T04:28:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521565897",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521565897"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521565897"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521565897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 1151,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 1189,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521566574",
    "pull_request_review_id": 528442559,
    "id": 521566574,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU2NjU3NA==",
    "diff_hunk": "@@ -702,43 +702,34 @@ static void ThreadImport(ChainstateManager& chainman, std::vector<fs::path> vImp\n \n     // -reindex\n     if (fReindex) {\n-        int nFile = 0;\n-        std::multimap<uint256, FlatFilePos> blocks_with_unknown_parent;\n+        // Create a list of block file path names to be loaded.\n+        std::vector<fs::path> blk_paths;\n+        int n_file = 0;\n         while (true) {\n-            FlatFilePos pos(nFile, 0);\n-            if (!fs::exists(GetBlockPosFilename(pos)))\n+            FlatFilePos pos(n_file, 0);\n+            fs::path blk_file_name = GetBlockPosFilename(pos);\n+            if (!fs::exists(blk_file_name))\n                 break; // No block files left to reindex\n-            FILE *file = OpenBlockFile(pos, true);\n-            if (!file)\n-                break; // This error is logged in OpenBlockFile\n-            LogPrintf(\"Reindexing block file blk%05u.dat...\\n\", (unsigned int)nFile);\n-            LoadExternalBlockFile(chainparams, file, &pos, &blocks_with_unknown_parent);\n-            if (ShutdownRequested()) {\n-                LogPrintf(\"Shutdown requested. Exit %s\\n\", __func__);\n-                return;\n-            }\n-            nFile++;\n+            blk_paths.push_back(blk_file_name);\n+            n_file++;\n         }\n+\n+        // Load blocks into memory and the index, but it's not necessary to\n+        // write the blocks to the data directory (they're already there).\n+        LoadExternalBlockFiles(\"Reindexing\", chainparams, blk_paths, false);\n+\n+        // Clear the reindexing flag only after successful completion.\n         pblocktree->WriteReindexing(false);\n         fReindex = false;\n-        LogPrintf(\"Reindexing finished\\n\");\n+\n         // To avoid ending up in a situation without genesis block, re-try initializing (no-op if reindexing worked):\n         LoadGenesisBlock(chainparams);\n     }\n \n     // -loadblock=\n-    for (const fs::path& path : vImportFiles) {\n-        FILE *file = fsbridge::fopen(path, \"rb\");\n-        if (file) {\n-            LogPrintf(\"Importing blocks file %s...\\n\", path.string());\n-            LoadExternalBlockFile(chainparams, file);\n-            if (ShutdownRequested()) {\n-                LogPrintf(\"Shutdown requested. Exit %s\\n\", __func__);\n-                return;\n-            }\n-        } else {\n-            LogPrintf(\"Warning: Could not open blocks file %s\\n\", path.string());\n-        }\n+    if (vImportFiles.size() > 0) {",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 56,
    "commit_id": "0c97fa3d22a405e244a6c9b5c7849b49f0c5454f",
    "original_commit_id": "7afedcfc716f497601925dd713c89cb835ed5477",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Do you need the additional code branch here? Would it be preferable to just invoke `LoadExternalBlockFiles(\"Importing\", chainparams, vImportFiles, true);` no matter what, and the for loop just won't iterate through anything if `vImportFiles` is empty?",
    "created_at": "2020-11-11T18:46:48Z",
    "updated_at": "2021-04-24T04:28:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521566574",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521566574"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521566574"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521566574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 729,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521578329",
    "pull_request_review_id": 528442559,
    "id": 521578329,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU3ODMyOQ==",
    "diff_hunk": "@@ -4670,20 +4681,48 @@ bool LoadGenesisBlock(const CChainParams& chainparams)\n     return ::ChainstateActive().LoadGenesisBlock(chainparams);\n }\n \n-void LoadExternalBlockFile(\n+void LoadExternalBlockFiles(\n+    const std::string& action,\n     const CChainParams& chainparams,\n-    FILE* fileIn,\n-    FlatFilePos* dbp,\n-    std::multimap<uint256, FlatFilePos>* blocks_with_unknown_parent)\n+    const std::vector<fs::path>& blk_paths,\n+    bool write_to_disk)\n {\n-    assert((dbp && blocks_with_unknown_parent) || (!dbp && !blocks_with_unknown_parent));\n+    std::multimap<uint256, FlatFilePos> blocks_with_unknown_parent;\n+    for (size_t n_file = 0; n_file < blk_paths.size(); ++n_file) {\n+        LogPrintf(\"%s block file %s ...\\n\", action, blk_paths[n_file].filename().string());\n+        FILE* file = fsbridge::fopen(blk_paths[n_file], \"rb\");\n+        if (file == nullptr) {\n+            LogPrintf(\"%s: Warning: Could not open blocks file %s\\n\", __func__, blk_paths[n_file]);\n+            return;\n+        }",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 76,
    "commit_id": "0c97fa3d22a405e244a6c9b5c7849b49f0c5454f",
    "original_commit_id": "7afedcfc716f497601925dd713c89cb835ed5477",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Isn't this kinda duplication of what `ReadBlockFromDisk` does? I'm wondering why `FlatFilePos pos(n_file, 0);` isn't created, passed to  `ReadBlockFromDisk` (like before, when signature took `FlatFilePos`), and then you can pass it to `LoadExternalBlockFile`",
    "created_at": "2020-11-11T19:09:18Z",
    "updated_at": "2021-04-24T04:28:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521578329",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521578329"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521578329"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521578329/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 4693,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 4672,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521579611",
    "pull_request_review_id": 528442559,
    "id": 521579611,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU3OTYxMQ==",
    "diff_hunk": "@@ -152,12 +152,20 @@ extern const std::vector<std::string> CHECKLEVEL_DOC;\n FILE* OpenBlockFile(const FlatFilePos &pos, bool fReadOnly = false);\n /** Translation to a filesystem path */\n fs::path GetBlockPosFilename(const FlatFilePos &pos);\n+/** Import blocks from one or more external files */\n+void LoadExternalBlockFiles(\n+    const std::string& action,\n+    const CChainParams& chainparams,\n+    const std::vector<fs::path>& blk_paths,\n+    bool write_to_disk);\n /** Import blocks from an external file */\n void LoadExternalBlockFile(\n     const CChainParams& chainparams,\n-    FILE* fileIn,\n-    FlatFilePos* dbp = nullptr,\n-    std::multimap<uint256, FlatFilePos>* blocks_with_unknown_parent = nullptr);\n+    const std::vector<fs::path>& blk_paths,\n+    size_t n_file,",
    "path": "src/validation.h",
    "position": null,
    "original_position": 17,
    "commit_id": "0c97fa3d22a405e244a6c9b5c7849b49f0c5454f",
    "original_commit_id": "7afedcfc716f497601925dd713c89cb835ed5477",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Given the name `LoadExternalBlockFile` I'm confused why `blk_paths` plural is passed as a param, instead of just a single file/path",
    "created_at": "2020-11-11T19:11:42Z",
    "updated_at": "2021-04-24T04:28:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521579611",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521579611"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521579611"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521579611/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 164,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 165,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521581342",
    "pull_request_review_id": 528442559,
    "id": 521581342,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU4MTM0Mg==",
    "diff_hunk": "@@ -1143,35 +1143,46 @@ static bool WriteBlockToDisk(const CBlock& block, FlatFilePos& pos, const CMessa\n     return true;\n }\n \n-bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::Params& consensusParams)\n+bool ReadBlockFromDisk(CBlock& block, const fs::path& path, unsigned int offset, const Consensus::Params& consensusParams)\n {\n     block.SetNull();\n \n     // Open history file to read\n-    CAutoFile filein(OpenBlockFile(pos, true), SER_DISK, CLIENT_VERSION);\n-    if (filein.IsNull())\n-        return error(\"ReadBlockFromDisk: OpenBlockFile failed for %s\", pos.ToString());\n+    FILE* file = fsbridge::fopen(path, \"rb\");\n+    if (!file) {\n+        return error(\"ReadBlockFromDisk: open failed for %s\", path.string());\n+    }\n+    if (offset > 0 && fseek(file, offset, SEEK_SET)) {\n+        fclose(file);\n+        return error(\"ReadBlockFromDisk: fseek failed for %s offset %u\", path.string(), offset);\n+    }\n+    CAutoFile filein(file, SER_DISK, CLIENT_VERSION);",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "0c97fa3d22a405e244a6c9b5c7849b49f0c5454f",
    "original_commit_id": "7afedcfc716f497601925dd713c89cb835ed5477",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Note: I'm guessing this change was made bc of what you do at line 4810: `ReadBlockFromDisk(*pblockrecursive, blk_paths[child_pos.nFile], child_pos.nPos, chainparams.GetConsensus())`\r\n\r\nBut I'm failing to understand why you can't just do: `ReadBlockFromDisk(*pblockrecursive, child_pos, chainparams.GetConsensus())`\r\n\r\nI'm probably missing something here, but I just want to check",
    "created_at": "2020-11-11T19:15:00Z",
    "updated_at": "2021-04-24T04:28:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521581342",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521581342"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521581342"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521581342/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 1151,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 1189,
    "side": "RIGHT",
    "in_reply_to_id": 521565897
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521612378",
    "pull_request_review_id": 528501690,
    "id": 521612378,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYxMjM3OA==",
    "diff_hunk": "@@ -702,43 +702,34 @@ static void ThreadImport(ChainstateManager& chainman, std::vector<fs::path> vImp\n \n     // -reindex\n     if (fReindex) {\n-        int nFile = 0;\n-        std::multimap<uint256, FlatFilePos> blocks_with_unknown_parent;\n+        // Create a list of block file path names to be loaded.\n+        std::vector<fs::path> blk_paths;\n+        int n_file = 0;\n         while (true) {\n-            FlatFilePos pos(nFile, 0);\n-            if (!fs::exists(GetBlockPosFilename(pos)))\n+            FlatFilePos pos(n_file, 0);\n+            fs::path blk_file_name = GetBlockPosFilename(pos);\n+            if (!fs::exists(blk_file_name))\n                 break; // No block files left to reindex\n-            FILE *file = OpenBlockFile(pos, true);\n-            if (!file)\n-                break; // This error is logged in OpenBlockFile\n-            LogPrintf(\"Reindexing block file blk%05u.dat...\\n\", (unsigned int)nFile);\n-            LoadExternalBlockFile(chainparams, file, &pos, &blocks_with_unknown_parent);\n-            if (ShutdownRequested()) {\n-                LogPrintf(\"Shutdown requested. Exit %s\\n\", __func__);\n-                return;\n-            }\n-            nFile++;\n+            blk_paths.push_back(blk_file_name);\n+            n_file++;\n         }\n+\n+        // Load blocks into memory and the index, but it's not necessary to\n+        // write the blocks to the data directory (they're already there).\n+        LoadExternalBlockFiles(\"Reindexing\", chainparams, blk_paths, false);\n+\n+        // Clear the reindexing flag only after successful completion.\n         pblocktree->WriteReindexing(false);\n         fReindex = false;\n-        LogPrintf(\"Reindexing finished\\n\");\n+\n         // To avoid ending up in a situation without genesis block, re-try initializing (no-op if reindexing worked):\n         LoadGenesisBlock(chainparams);\n     }\n \n     // -loadblock=\n-    for (const fs::path& path : vImportFiles) {\n-        FILE *file = fsbridge::fopen(path, \"rb\");\n-        if (file) {\n-            LogPrintf(\"Importing blocks file %s...\\n\", path.string());\n-            LoadExternalBlockFile(chainparams, file);\n-            if (ShutdownRequested()) {\n-                LogPrintf(\"Shutdown requested. Exit %s\\n\", __func__);\n-                return;\n-            }\n-        } else {\n-            LogPrintf(\"Warning: Could not open blocks file %s\\n\", path.string());\n-        }\n+    if (vImportFiles.size() > 0) {",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 56,
    "commit_id": "0c97fa3d22a405e244a6c9b5c7849b49f0c5454f",
    "original_commit_id": "7afedcfc716f497601925dd713c89cb835ed5477",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You're right, it's not really needed, but I think it's useful to show the reader here that loading blocks this isn't always being done; otherwise, to know nothing's being done, the reader has to go look at `LoadExternalBlockFiles()`. \r\n\r\nI also like that the conditional makes this part of the code similar to the `if (fReindex)` code just above it; they are doing very similar work.\r\n\r\nBut I could go either way (no strong preference).",
    "created_at": "2020-11-11T20:14:36Z",
    "updated_at": "2021-04-24T04:28:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521612378",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521612378"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521612378"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521612378/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 729,
    "side": "RIGHT",
    "in_reply_to_id": 521566574
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521622592",
    "pull_request_review_id": 528501690,
    "id": 521622592,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYyMjU5Mg==",
    "diff_hunk": "@@ -1143,35 +1143,46 @@ static bool WriteBlockToDisk(const CBlock& block, FlatFilePos& pos, const CMessa\n     return true;\n }\n \n-bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::Params& consensusParams)\n+bool ReadBlockFromDisk(CBlock& block, const fs::path& path, unsigned int offset, const Consensus::Params& consensusParams)\n {\n     block.SetNull();\n \n     // Open history file to read\n-    CAutoFile filein(OpenBlockFile(pos, true), SER_DISK, CLIENT_VERSION);\n-    if (filein.IsNull())\n-        return error(\"ReadBlockFromDisk: OpenBlockFile failed for %s\", pos.ToString());\n+    FILE* file = fsbridge::fopen(path, \"rb\");\n+    if (!file) {\n+        return error(\"ReadBlockFromDisk: open failed for %s\", path.string());\n+    }\n+    if (offset > 0 && fseek(file, offset, SEEK_SET)) {\n+        fclose(file);\n+        return error(\"ReadBlockFromDisk: fseek failed for %s offset %u\", path.string(), offset);\n+    }\n+    CAutoFile filein(file, SER_DISK, CLIENT_VERSION);",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "0c97fa3d22a405e244a6c9b5c7849b49f0c5454f",
    "original_commit_id": "7afedcfc716f497601925dd713c89cb835ed5477",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, I reached several dead-ends before arriving at this code factoring. We can't use `ReadBlockFromDisk(..., child_pos, ...)` here because the `pos` argument is used in lower-level code (`OpenFlockFile()`) to construct and open a pathname like `.../.bitcoin/blocks/blknnnnn.dat`, which is just what we want for the `-reindex` case, but not for the `-loadblock` case (both share this code), because in the latter, we have a list of arbitrary pathnames to read from. Instead of calling the `pos` variant in the `-reindex` case and the `path, offset` variant in the `-loadblock` case, it's simpler to just call it in the same way for both cases.",
    "created_at": "2020-11-11T20:34:43Z",
    "updated_at": "2021-04-24T04:28:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521622592",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521622592"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521622592"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521622592/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 1151,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 1189,
    "side": "RIGHT",
    "in_reply_to_id": 521565897
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521692298",
    "pull_request_review_id": 528501690,
    "id": 521692298,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY5MjI5OA==",
    "diff_hunk": "@@ -4670,20 +4681,48 @@ bool LoadGenesisBlock(const CChainParams& chainparams)\n     return ::ChainstateActive().LoadGenesisBlock(chainparams);\n }\n \n-void LoadExternalBlockFile(\n+void LoadExternalBlockFiles(\n+    const std::string& action,\n     const CChainParams& chainparams,\n-    FILE* fileIn,\n-    FlatFilePos* dbp,\n-    std::multimap<uint256, FlatFilePos>* blocks_with_unknown_parent)\n+    const std::vector<fs::path>& blk_paths,\n+    bool write_to_disk)\n {\n-    assert((dbp && blocks_with_unknown_parent) || (!dbp && !blocks_with_unknown_parent));\n+    std::multimap<uint256, FlatFilePos> blocks_with_unknown_parent;\n+    for (size_t n_file = 0; n_file < blk_paths.size(); ++n_file) {\n+        LogPrintf(\"%s block file %s ...\\n\", action, blk_paths[n_file].filename().string());\n+        FILE* file = fsbridge::fopen(blk_paths[n_file], \"rb\");\n+        if (file == nullptr) {\n+            LogPrintf(\"%s: Warning: Could not open blocks file %s\\n\", __func__, blk_paths[n_file]);\n+            return;\n+        }",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 76,
    "commit_id": "0c97fa3d22a405e244a6c9b5c7849b49f0c5454f",
    "original_commit_id": "7afedcfc716f497601925dd713c89cb835ed5477",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This duplication exists even without this PR. Before this PR, this `fopen()` happens [here](https://github.com/bitcoin/bitcoin/pull/20331/files#diff-b1e19192258d83199d8adaa5ac31f067af98f63554bfdd679bd8e8073815e69dL729). \r\n\r\nTo summarize why this happens in two places: There are two ways blocks are \"loaded\" into memory when reindexing (and, now, with this PR, when using `-loadblock`). First, a blocks file is opened ([here](https://github.com/bitcoin/bitcoin/pull/20331/files#diff-97c3a52bc5fad452d82670a7fd291800bae20c7bc35bb82686c2c0a4ea7b5b98R4693)) and read from disk (using large reads) sequentially. At this point, we don't know the individual blocks' starting offsets, so we can't create a `FlatFilePos` to pass to `ReadBlockFromDisk()` as you suggest. Besides, doing these large reads is more efficient, typically many blocks per read -- plus a partial block at the end (since, again, the block boundaries are unknown). Once in memory, the block boundaries are discovered, and each block is deserialized. But the blocks in these blocks files are mostly out of order, so most of the blocks can't be accepted (have `AcceptBlock()` called on it) because its parent has not yet been seen.\r\n\r\nWhen such a parent is later found, the child block is then _re-read_ from disk using `ReadBlockFromDisk()`, deserialized a second time, and then passed to `AcceptBlock()` (allowed because its parent is now present). In this case, we're reading exactly a single block, because we know where it starts (in the file) and its length (which is what a `FlatFilePos` encodes).",
    "created_at": "2020-11-11T23:09:51Z",
    "updated_at": "2021-04-24T04:28:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521692298",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521692298"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521692298"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521692298/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 4693,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 4672,
    "side": "RIGHT",
    "in_reply_to_id": 521578329
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521696666",
    "pull_request_review_id": 528501690,
    "id": 521696666,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY5NjY2Ng==",
    "diff_hunk": "@@ -152,12 +152,20 @@ extern const std::vector<std::string> CHECKLEVEL_DOC;\n FILE* OpenBlockFile(const FlatFilePos &pos, bool fReadOnly = false);\n /** Translation to a filesystem path */\n fs::path GetBlockPosFilename(const FlatFilePos &pos);\n+/** Import blocks from one or more external files */\n+void LoadExternalBlockFiles(\n+    const std::string& action,\n+    const CChainParams& chainparams,\n+    const std::vector<fs::path>& blk_paths,\n+    bool write_to_disk);\n /** Import blocks from an external file */\n void LoadExternalBlockFile(\n     const CChainParams& chainparams,\n-    FILE* fileIn,\n-    FlatFilePos* dbp = nullptr,\n-    std::multimap<uint256, FlatFilePos>* blocks_with_unknown_parent = nullptr);\n+    const std::vector<fs::path>& blk_paths,\n+    size_t n_file,",
    "path": "src/validation.h",
    "position": null,
    "original_position": 17,
    "commit_id": "0c97fa3d22a405e244a6c9b5c7849b49f0c5454f",
    "original_commit_id": "7afedcfc716f497601925dd713c89cb835ed5477",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That function, `LoadExternalBlockFile()`, does (attempt to) load the blocks from exactly one block file, _but_, doing so may cause, as a side effect, the loading of blocks seen earlier (in earlier files) but that could not be loaded then because their parent was missing (and is now present, see my earlier comment). This requires reaching back and reading specific blocks from earlier files, and that requires the full list of block file paths (the `blk_paths` argument). This basic flow is the same as before this PR. I agree this is somewhat confusing, maybe a comment would help. But maybe not, because perhaps there's no shortcut to just studying the code, I'm not sure.",
    "created_at": "2020-11-11T23:20:17Z",
    "updated_at": "2021-04-24T04:28:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521696666",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521696666"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521696666"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521696666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 164,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 165,
    "side": "RIGHT",
    "in_reply_to_id": 521579611
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521697943",
    "pull_request_review_id": 528501690,
    "id": 521697943,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY5Nzk0Mw==",
    "diff_hunk": "@@ -49,6 +49,7 @@\n #include <validationinterface.h>\n #include <warnings.h>\n \n+#include <cassert>",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "0c97fa3d22a405e244a6c9b5c7849b49f0c5454f",
    "original_commit_id": "7afedcfc716f497601925dd713c89cb835ed5477",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This isn't needed, I'll remove in a later force-push.",
    "created_at": "2020-11-11T23:22:10Z",
    "updated_at": "2021-04-24T04:28:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521697943",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521697943"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521697943"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521697943/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 52,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521698200",
    "pull_request_review_id": 528501690,
    "id": 521698200,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY5ODIwMA==",
    "diff_hunk": "@@ -11,6 +11,7 @@\n #include <validation.h>\n \n #include <cstdint>\n+#include <map>",
    "path": "src/test/fuzz/load_external_block_file.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "0c97fa3d22a405e244a6c9b5c7849b49f0c5454f",
    "original_commit_id": "7afedcfc716f497601925dd713c89cb835ed5477",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This isn't needed, I'll remove in a later force-push.",
    "created_at": "2020-11-11T23:22:30Z",
    "updated_at": "2021-04-24T04:28:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521698200",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521698200"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20331#discussion_r521698200"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20331"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521698200/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 14,
    "side": "RIGHT"
  }
]