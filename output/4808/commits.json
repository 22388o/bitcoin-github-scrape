[
  {
    "sha": "47eb76597efb7dadb36dd98bc20bd80b2db9cd50",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0N2ViNzY1OTdlZmI3ZGFkYjM2ZGQ5OGJjMjBiZDgwYjJkYjljZDUw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-09-01T19:36:46Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-09-01T20:00:19Z"
      },
      "message": "Serializer simplifications after IMPLEMENT_SERIALIZE overhaul",
      "tree": {
        "sha": "b021b10e49d0e5513b4b597c74ecba5eccff6165",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b021b10e49d0e5513b4b597c74ecba5eccff6165"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/47eb76597efb7dadb36dd98bc20bd80b2db9cd50",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47eb76597efb7dadb36dd98bc20bd80b2db9cd50",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/47eb76597efb7dadb36dd98bc20bd80b2db9cd50",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47eb76597efb7dadb36dd98bc20bd80b2db9cd50/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2e731f24b5a5c894e013a6d752f1cd409303e916",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e731f24b5a5c894e013a6d752f1cd409303e916",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2e731f24b5a5c894e013a6d752f1cd409303e916"
      }
    ],
    "stats": {
      "total": 109,
      "additions": 43,
      "deletions": 66
    },
    "files": [
      {
        "sha": "ed37f7a3f8208b31bc9f93bbb72b7d70128a9e50",
        "filename": "src/core.h",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47eb76597efb7dadb36dd98bc20bd80b2db9cd50/src/core.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47eb76597efb7dadb36dd98bc20bd80b2db9cd50/src/core.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core.h?ref=47eb76597efb7dadb36dd98bc20bd80b2db9cd50",
        "patch": "@@ -257,14 +257,12 @@ class CTransaction\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n-        bool fRead = ser_action.ForRead();\n-\n         READWRITE(*const_cast<int32_t*>(&this->nVersion));\n         nVersion = this->nVersion;\n         READWRITE(*const_cast<std::vector<CTxIn>*>(&vin));\n         READWRITE(*const_cast<std::vector<CTxOut>*>(&vout));\n         READWRITE(*const_cast<uint32_t*>(&nLockTime));\n-        if (fRead)\n+        if (ser_action.ForRead())\n             UpdateHash();\n     }\n \n@@ -346,8 +344,7 @@ class CTxOutCompressor\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n-        bool fRead = ser_action.ForRead();\n-        if (!fRead) {\n+        if (!ser_action.ForRead()) {\n             uint64_t nVal = CompressAmount(txout.nValue);\n             READWRITE(VARINT(nVal));\n         } else {"
      },
      {
        "sha": "1d1a9df10f2952366ddb92a74a09f47ec5e6ebba",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47eb76597efb7dadb36dd98bc20bd80b2db9cd50/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47eb76597efb7dadb36dd98bc20bd80b2db9cd50/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=47eb76597efb7dadb36dd98bc20bd80b2db9cd50",
        "patch": "@@ -424,12 +424,10 @@ class CPartialMerkleTree\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n-        bool fRead = ser_action.ForRead();\n-\n         READWRITE(nTransactions);\n         READWRITE(vHash);\n         std::vector<unsigned char> vBytes;\n-        if (fRead) {\n+        if (ser_action.ForRead()) {\n             READWRITE(vBytes);\n             CPartialMerkleTree &us = *(const_cast<CPartialMerkleTree*>(this));\n             us.vBits.resize(vBytes.size() * 8);"
      },
      {
        "sha": "a061a91556715df5c9c30ec227ccb0a22539863e",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47eb76597efb7dadb36dd98bc20bd80b2db9cd50/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47eb76597efb7dadb36dd98bc20bd80b2db9cd50/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=47eb76597efb7dadb36dd98bc20bd80b2db9cd50",
        "patch": "@@ -154,11 +154,10 @@ class CService : public CNetAddr\n \n         template <typename Stream, typename Operation>\n         inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n-            bool fRead = ser_action.ForRead();\n             READWRITE(FLATDATA(ip));\n             unsigned short portN = htons(port);\n             READWRITE(portN);\n-            if (fRead)\n+            if (ser_action.ForRead())\n                  port = ntohs(portN);\n         }\n };"
      },
      {
        "sha": "ddf096aeacc63f05e7555a1103f0e21db2a451b2",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47eb76597efb7dadb36dd98bc20bd80b2db9cd50/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47eb76597efb7dadb36dd98bc20bd80b2db9cd50/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=47eb76597efb7dadb36dd98bc20bd80b2db9cd50",
        "patch": "@@ -89,16 +89,13 @@ class CAddress : public CService\n \n         template <typename Stream, typename Operation>\n         inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n-            bool fRead = ser_action.ForRead();\n-\n-            CAddress* pthis = const_cast<CAddress*>(this);\n-            if (fRead)\n-                pthis->Init();\n+            if (ser_action.ForRead())\n+                Init();\n             if (nType & SER_DISK)\n                 READWRITE(nVersion);\n             if ((nType & SER_DISK) ||\n                 (nVersion >= CADDR_TIME_VERSION && !(nType & SER_GETHASH)))\n-            READWRITE(nTime);\n+                READWRITE(nTime);\n             READWRITE(nServices);\n             READWRITE(*(CService*)this);\n         }"
      },
      {
        "sha": "cdb7e47f623913826f72aa27e548b49068fa900b",
        "filename": "src/qt/recentrequeststablemodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 7,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47eb76597efb7dadb36dd98bc20bd80b2db9cd50/src/qt/recentrequeststablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47eb76597efb7dadb36dd98bc20bd80b2db9cd50/src/qt/recentrequeststablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.h?ref=47eb76597efb7dadb36dd98bc20bd80b2db9cd50",
        "patch": "@@ -28,19 +28,15 @@ class RecentRequestEntry\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n-        bool fRead = ser_action.ForRead();\n-\n-        RecentRequestEntry* pthis = const_cast<RecentRequestEntry*>(this);\n-\n         unsigned int nDate = date.toTime_t();\n \n-        READWRITE(pthis->nVersion);\n-        nVersion = pthis->nVersion;\n+        READWRITE(this->nVersion);\n+        nVersion = this->nVersion;\n         READWRITE(id);\n         READWRITE(nDate);\n         READWRITE(recipient);\n \n-        if (fRead)\n+        if (ser_action.ForRead())\n             date = QDateTime::fromTime_t(nDate);\n     }\n };"
      },
      {
        "sha": "bd8a25bb94f11c82aebef8adc2cac4c171e4403c",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 14,
        "deletions": 18,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47eb76597efb7dadb36dd98bc20bd80b2db9cd50/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47eb76597efb7dadb36dd98bc20bd80b2db9cd50/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=47eb76597efb7dadb36dd98bc20bd80b2db9cd50",
        "patch": "@@ -63,35 +63,31 @@ class SendCoinsRecipient\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n-        bool fRead = ser_action.ForRead();\n-\n-        SendCoinsRecipient* pthis = const_cast<SendCoinsRecipient*>(this);\n-\n-        std::string sAddress = pthis->address.toStdString();\n-        std::string sLabel = pthis->label.toStdString();\n-        std::string sMessage = pthis->message.toStdString();\n+        std::string sAddress = address.toStdString();\n+        std::string sLabel = label.toStdString();\n+        std::string sMessage = message.toStdString();\n         std::string sPaymentRequest;\n-        if (!fRead && pthis->paymentRequest.IsInitialized())\n-            pthis->paymentRequest.SerializeToString(&sPaymentRequest);\n-        std::string sAuthenticatedMerchant = pthis->authenticatedMerchant.toStdString();\n+        if (!ser_action.ForRead() && paymentRequest.IsInitialized())\n+            paymentRequest.SerializeToString(&sPaymentRequest);\n+        std::string sAuthenticatedMerchant = authenticatedMerchant.toStdString();\n \n-        READWRITE(pthis->nVersion);\n-        nVersion = pthis->nVersion;\n+        READWRITE(this->nVersion);\n+        nVersion = this->nVersion;\n         READWRITE(sAddress);\n         READWRITE(sLabel);\n         READWRITE(amount);\n         READWRITE(sMessage);\n         READWRITE(sPaymentRequest);\n         READWRITE(sAuthenticatedMerchant);\n \n-        if (fRead)\n+        if (ser_action.ForRead())\n         {\n-            pthis->address = QString::fromStdString(sAddress);\n-            pthis->label = QString::fromStdString(sLabel);\n-            pthis->message = QString::fromStdString(sMessage);\n+            address = QString::fromStdString(sAddress);\n+            label = QString::fromStdString(sLabel);\n+            message = QString::fromStdString(sMessage);\n             if (!sPaymentRequest.empty())\n-                pthis->paymentRequest.parse(QByteArray::fromRawData(sPaymentRequest.data(), sPaymentRequest.size()));\n-            pthis->authenticatedMerchant = QString::fromStdString(sAuthenticatedMerchant);\n+                paymentRequest.parse(QByteArray::fromRawData(sPaymentRequest.data(), sPaymentRequest.size()));\n+            authenticatedMerchant = QString::fromStdString(sAuthenticatedMerchant);\n         }\n     }\n };"
      },
      {
        "sha": "2fc953c516c1fc35278894803f6b3f2881925a66",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 19,
        "deletions": 25,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47eb76597efb7dadb36dd98bc20bd80b2db9cd50/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47eb76597efb7dadb36dd98bc20bd80b2db9cd50/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=47eb76597efb7dadb36dd98bc20bd80b2db9cd50",
        "patch": "@@ -609,21 +609,18 @@ class CWalletTx : public CMerkleTx\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n-        bool fRead = ser_action.ForRead();\n-\n-        CWalletTx* pthis = const_cast<CWalletTx*>(this);\n-        if (fRead)\n-            pthis->Init(NULL);\n+        if (ser_action.ForRead())\n+            Init(NULL);\n         char fSpent = false;\n \n-        if (!fRead)\n+        if (!ser_action.ForRead())\n         {\n-            pthis->mapValue[\"fromaccount\"] = pthis->strFromAccount;\n+            mapValue[\"fromaccount\"] = strFromAccount;\n \n-            WriteOrderPos(pthis->nOrderPos, pthis->mapValue);\n+            WriteOrderPos(nOrderPos, mapValue);\n \n             if (nTimeSmart)\n-                pthis->mapValue[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n+                mapValue[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n         }\n \n         READWRITE(*(CMerkleTx*)this);\n@@ -636,13 +633,13 @@ class CWalletTx : public CMerkleTx\n         READWRITE(fFromMe);\n         READWRITE(fSpent);\n \n-        if (fRead)\n+        if (ser_action.ForRead())\n         {\n-            pthis->strFromAccount = pthis->mapValue[\"fromaccount\"];\n+            strFromAccount = mapValue[\"fromaccount\"];\n \n-            ReadOrderPos(pthis->nOrderPos, pthis->mapValue);\n+            ReadOrderPos(nOrderPos, mapValue);\n \n-            pthis->nTimeSmart = mapValue.count(\"timesmart\") ? (unsigned int)atoi64(pthis->mapValue[\"timesmart\"]) : 0;\n+            nTimeSmart = mapValue.count(\"timesmart\") ? (unsigned int)atoi64(mapValue[\"timesmart\"]) : 0;\n         }\n \n         mapValue.erase(\"fromaccount\");\n@@ -979,46 +976,43 @@ class CAccountingEntry\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n-        bool fRead = ser_action.ForRead();\n-\n-        CAccountingEntry& me = *const_cast<CAccountingEntry*>(this);\n         if (!(nType & SER_GETHASH))\n             READWRITE(nVersion);\n         // Note: strAccount is serialized as part of the key, not here.\n         READWRITE(nCreditDebit);\n         READWRITE(nTime);\n         READWRITE(LIMITED_STRING(strOtherAccount, 65536));\n \n-        if (!fRead)\n+        if (!ser_action.ForRead())\n         {\n-            WriteOrderPos(nOrderPos, me.mapValue);\n+            WriteOrderPos(nOrderPos, mapValue);\n \n             if (!(mapValue.empty() && _ssExtra.empty()))\n             {\n                 CDataStream ss(nType, nVersion);\n                 ss.insert(ss.begin(), '\\0');\n                 ss << mapValue;\n                 ss.insert(ss.end(), _ssExtra.begin(), _ssExtra.end());\n-                me.strComment.append(ss.str());\n+                strComment.append(ss.str());\n             }\n         }\n \n         READWRITE(LIMITED_STRING(strComment, 65536));\n \n         size_t nSepPos = strComment.find(\"\\0\", 0, 1);\n-        if (fRead)\n+        if (ser_action.ForRead())\n         {\n-            me.mapValue.clear();\n+            mapValue.clear();\n             if (std::string::npos != nSepPos)\n             {\n                 CDataStream ss(std::vector<char>(strComment.begin() + nSepPos + 1, strComment.end()), nType, nVersion);\n-                ss >> me.mapValue;\n-                me._ssExtra = std::vector<char>(ss.begin(), ss.end());\n+                ss >> mapValue;\n+                _ssExtra = std::vector<char>(ss.begin(), ss.end());\n             }\n-            ReadOrderPos(me.nOrderPos, me.mapValue);\n+            ReadOrderPos(nOrderPos, mapValue);\n         }\n         if (std::string::npos != nSepPos)\n-            me.strComment.erase(nSepPos);\n+            strComment.erase(nSepPos);\n \n         mapValue.erase(\"n\");\n     }"
      }
    ]
  },
  {
    "sha": "3f6540ad8f9c7b45a0dd2b260a282d3adad2406f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjY1NDBhZDhmOWM3YjQ1YTBkZDJiMjYwYTI4MmQzYWRhZDI0MDZm",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-09-02T07:58:09Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-09-02T07:58:09Z"
      },
      "message": "Rename IMPLEMENT_SERIALIZE to ADD_SERIALIZE_METHODS",
      "tree": {
        "sha": "046e2e1e5d88ae36286e0bb99ce530ff33b570b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/046e2e1e5d88ae36286e0bb99ce530ff33b570b7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "47eb76597efb7dadb36dd98bc20bd80b2db9cd50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47eb76597efb7dadb36dd98bc20bd80b2db9cd50",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/47eb76597efb7dadb36dd98bc20bd80b2db9cd50"
      }
    ],
    "stats": {
      "total": 82,
      "additions": 41,
      "deletions": 41
    },
    "files": [
      {
        "sha": "90507cb4580bd3da714ad717ba59dd10a3ae0154",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=3f6540ad8f9c7b45a0dd2b260a282d3adad2406f",
        "patch": "@@ -46,7 +46,7 @@ class CAddrInfo : public CAddress\n \n public:\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -268,7 +268,7 @@ class CAddrMan\n     // This format is more complex, but significantly smaller (at most 1.5 MiB), and supports\n     // changes to the ADDRMAN_ parameters without breaking the on-disk structure.\n     //\n-    // We don't use IMPLEMENT_SERIALIZE since the serialization and deserialization code has\n+    // We don't use ADD_SERIALIZE_METHODS since the serialization and deserialization code has\n     // very little in common.\n     template<typename Stream>\n     void Serialize(Stream &s, int nType, int nVersionDummy) const"
      },
      {
        "sha": "5ecf94cea8c9ea638cdff6de83d60bb51c011eaa",
        "filename": "src/alert.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/alert.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/alert.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.h?ref=3f6540ad8f9c7b45a0dd2b260a282d3adad2406f",
        "patch": "@@ -46,7 +46,7 @@ class CUnsignedAlert\n     std::string strStatusBar;\n     std::string strReserved;\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -84,7 +84,7 @@ class CAlert : public CUnsignedAlert\n         SetNull();\n     }\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {"
      },
      {
        "sha": "143e3b4c79f80a9642379f97989bbddc28bc480e",
        "filename": "src/bloom.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/bloom.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/bloom.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.h?ref=3f6540ad8f9c7b45a0dd2b260a282d3adad2406f",
        "patch": "@@ -62,7 +62,7 @@ class CBloomFilter\n     CBloomFilter(unsigned int nElements, double nFPRate, unsigned int nTweak, unsigned char nFlagsIn);\n     CBloomFilter() : isFull(true), isEmpty(false), nHashFuncs(0), nTweak(0), nFlags(0) {}\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {"
      },
      {
        "sha": "cde8d8b3fe07abe0ec8642cb7d0d450af2439c23",
        "filename": "src/core.h",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/core.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/core.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core.h?ref=3f6540ad8f9c7b45a0dd2b260a282d3adad2406f",
        "patch": "@@ -31,7 +31,7 @@ class COutPoint\n     COutPoint() { SetNull(); }\n     COutPoint(uint256 hashIn, uint32_t nIn) { hash = hashIn; n = nIn; }\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -91,7 +91,7 @@ class CTxIn\n     explicit CTxIn(COutPoint prevoutIn, CScript scriptSigIn=CScript(), uint32_t nSequenceIn=std::numeric_limits<unsigned int>::max());\n     CTxIn(uint256 hashPrevTx, uint32_t nOut, CScript scriptSigIn=CScript(), uint32_t nSequenceIn=std::numeric_limits<uint32_t>::max());\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -145,7 +145,7 @@ class CFeeRate\n     friend bool operator>=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK >= b.nSatoshisPerK; }\n     std::string ToString() const;\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -170,7 +170,7 @@ class CTxOut\n \n     CTxOut(int64_t nValueIn, CScript scriptPubKeyIn);\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -253,7 +253,7 @@ class CTransaction\n \n     CTransaction& operator=(const CTransaction& tx);\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -311,7 +311,7 @@ struct CMutableTransaction\n     CMutableTransaction();\n     CMutableTransaction(const CTransaction& tx);\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -340,7 +340,7 @@ class CTxOutCompressor\n \n     CTxOutCompressor(CTxOut &txoutIn) : txout(txoutIn) { }\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -407,7 +407,7 @@ class CTxUndo\n     // undo information for all txins\n     std::vector<CTxInUndo> vprevout;\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -440,7 +440,7 @@ class CBlockHeader\n         SetNull();\n     }\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -497,7 +497,7 @@ class CBlock : public CBlockHeader\n         *((CBlockHeader*)this) = header;\n     }\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -547,7 +547,7 @@ struct CBlockLocator\n         vHave = vHaveIn;\n     }\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {"
      },
      {
        "sha": "c7424c9b20e55e01a7a63e8aaaee4f34c2580b56",
        "filename": "src/crypter.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/crypter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/crypter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypter.h?ref=3f6540ad8f9c7b45a0dd2b260a282d3adad2406f",
        "patch": "@@ -43,7 +43,7 @@ class CMasterKey\n     // such as the various parameters to scrypt\n     std::vector<unsigned char> vchOtherDerivationParameters;\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {"
      },
      {
        "sha": "6ef16c1ed1ef09983cd4dbd7881143937098edba",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=3f6540ad8f9c7b45a0dd2b260a282d3adad2406f",
        "patch": "@@ -197,7 +197,7 @@ struct CDiskBlockPos\n     int nFile;\n     unsigned int nPos;\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -230,7 +230,7 @@ struct CDiskTxPos : public CDiskBlockPos\n {\n     unsigned int nTxOffset; // after header\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -313,7 +313,7 @@ class CBlockUndo\n public:\n     std::vector<CTxUndo> vtxundo; // for all but the coinbase\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -420,7 +420,7 @@ class CPartialMerkleTree\n public:\n \n     // serialization implementation\n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -496,7 +496,7 @@ class CBlockFileInfo\n     uint64_t nTimeFirst;         // earliest time of block in file\n     uint64_t nTimeLast;          // latest time of block in file\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -770,7 +770,7 @@ class CDiskBlockIndex : public CBlockIndex\n         hashPrev = (pprev ? pprev->GetBlockHash() : 0);\n     }\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -992,7 +992,7 @@ class CMerkleBlock\n     // thus the filter will likely be modified.\n     CMerkleBlock(const CBlock& block, CBloomFilter& filter);\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {"
      },
      {
        "sha": "9fc5c72eb813cb20b03e38991d04e0f508eb5a91",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=3f6540ad8f9c7b45a0dd2b260a282d3adad2406f",
        "patch": "@@ -88,7 +88,7 @@ class CNetAddr\n         friend bool operator!=(const CNetAddr& a, const CNetAddr& b);\n         friend bool operator<(const CNetAddr& a, const CNetAddr& b);\n \n-        IMPLEMENT_SERIALIZE;\n+        ADD_SERIALIZE_METHODS;\n \n         template <typename Stream, typename Operation>\n         inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -150,7 +150,7 @@ class CService : public CNetAddr\n         CService(const struct in6_addr& ipv6Addr, unsigned short port);\n         CService(const struct sockaddr_in6& addr);\n \n-        IMPLEMENT_SERIALIZE;\n+        ADD_SERIALIZE_METHODS;\n \n         template <typename Stream, typename Operation>\n         inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {"
      },
      {
        "sha": "82d29e66de955cf8293f6257304365a03eb27e8d",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=3f6540ad8f9c7b45a0dd2b260a282d3adad2406f",
        "patch": "@@ -35,7 +35,7 @@ class CMessageHeader\n         std::string GetCommand() const;\n         bool IsValid() const;\n \n-        IMPLEMENT_SERIALIZE;\n+        ADD_SERIALIZE_METHODS;\n \n         template <typename Stream, typename Operation>\n         inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -85,7 +85,7 @@ class CAddress : public CService\n \n         void Init();\n \n-        IMPLEMENT_SERIALIZE;\n+        ADD_SERIALIZE_METHODS;\n \n         template <typename Stream, typename Operation>\n         inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -119,7 +119,7 @@ class CInv\n         CInv(int typeIn, const uint256& hashIn);\n         CInv(const std::string& strType, const uint256& hashIn);\n \n-        IMPLEMENT_SERIALIZE;\n+        ADD_SERIALIZE_METHODS;\n \n         template <typename Stream, typename Operation>\n         inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {"
      },
      {
        "sha": "3df5971823b12b63143aada0ad1be7b339f36d18",
        "filename": "src/qt/recentrequeststablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/qt/recentrequeststablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/qt/recentrequeststablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.h?ref=3f6540ad8f9c7b45a0dd2b260a282d3adad2406f",
        "patch": "@@ -24,7 +24,7 @@ class RecentRequestEntry\n     QDateTime date;\n     SendCoinsRecipient recipient;\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {"
      },
      {
        "sha": "52d02038cd398e8a6863dbd5ea15f3818541c122",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=3f6540ad8f9c7b45a0dd2b260a282d3adad2406f",
        "patch": "@@ -59,7 +59,7 @@ class SendCoinsRecipient\n     static const int CURRENT_VERSION = 1;\n     int nVersion;\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {"
      },
      {
        "sha": "dba3460d1bff2257abea9be08e8c93f844eb4910",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=3f6540ad8f9c7b45a0dd2b260a282d3adad2406f",
        "patch": "@@ -91,9 +91,9 @@ enum\n \n /* Implement three methods for serializable objects. These are actually wrappers over\n  * \"SerializationOp\" template, which implements the body of each class' serialization\n- * code. Adding \"IMPLEMENT_SERIALIZE\" in the body of the class causes these wrappers to be\n+ * code. Adding \"ADD_SERIALIZE_METHODS\" in the body of the class causes these wrappers to be\n  * added as members. */\n-#define IMPLEMENT_SERIALIZE                                                          \\\n+#define ADD_SERIALIZE_METHODS                                                          \\\n     size_t GetSerializeSize(int nType, int nVersion) const {                         \\\n         CSizeComputer s(nType, nVersion);                                            \\\n         NCONST_PTR(this)->SerializationOp(s, CSerActionSerialize(), nType, nVersion);\\\n@@ -807,7 +807,7 @@ void Unserialize(Stream& is, std::set<K, Pred, A>& m, int nType, int nVersion)\n \n \n //\n-// Support for IMPLEMENT_SERIALIZE and READWRITE macro\n+// Support for ADD_SERIALIZE_METHODS and READWRITE macro\n //\n struct CSerActionSerialize\n {"
      },
      {
        "sha": "f8e1ebac121960ddc1450c513eb4b340ae245f51",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=3f6540ad8f9c7b45a0dd2b260a282d3adad2406f",
        "patch": "@@ -64,7 +64,7 @@ class CKeyPool\n     CKeyPool();\n     CKeyPool(const CPubKey& vchPubKeyIn);\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -492,7 +492,7 @@ class CMerkleTx : public CTransaction\n         fMerkleVerified = false;\n     }\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -605,7 +605,7 @@ class CWalletTx : public CMerkleTx\n         nOrderPos = -1;\n     }\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -893,7 +893,7 @@ class CWalletKey\n \n     CWalletKey(int64_t nExpires=0);\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -929,7 +929,7 @@ class CAccount\n         vchPubKey = CPubKey();\n     }\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n@@ -972,7 +972,7 @@ class CAccountingEntry\n         nEntryNo = 0;\n     }\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {"
      },
      {
        "sha": "ce63bb0b97df658ba71b5b51d8e89d2223637ba8",
        "filename": "src/walletdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f6540ad8f9c7b45a0dd2b260a282d3adad2406f/src/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.h?ref=3f6540ad8f9c7b45a0dd2b260a282d3adad2406f",
        "patch": "@@ -55,7 +55,7 @@ class CKeyMetadata\n         nCreateTime = nCreateTime_;\n     }\n \n-    IMPLEMENT_SERIALIZE;\n+    ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {"
      }
    ]
  }
]