[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/590647940",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-590647940",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
    "id": 590647940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDY0Nzk0MA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-25T02:20:47Z",
    "updated_at": "2020-03-08T18:56:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #16710 (build: Enable -Wsuggest-override if available by hebasto)\n* #16116 (Avoid unnecessary signing provider copies on descriptor expansion by Empact)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/590647940/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591045213",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-591045213",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
    "id": 591045213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTA0NTIxMw==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-25T20:10:07Z",
    "updated_at": "2020-02-25T20:10:07Z",
    "author_association": "MEMBER",
    "body": "Fixed the assertion. Travis seems to be seeing a memory leak but I'm having trouble figuring out where that is.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591045213/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591184682",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-591184682",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
    "id": 591184682,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTE4NDY4Mg==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-26T01:17:15Z",
    "updated_at": "2020-02-26T01:17:15Z",
    "author_association": "MEMBER",
    "body": "I've reworked how the caching works to get rid of the `global_pos` and `internal_pos` stuff.\r\n\r\nInstead of having `ExpandHelper` go through the cache and find the pubkeys, we pass the cache into the `PubkeyProvider`s and let them do the cache lookups. Since really only `BIP32PubkeyProvider` uses the cache, we can get rid of the position stuff by having it store only xpubs in a map. So for all derived keys, we store their `KeyOriginInfo` and xpub so that later the `BIP32PubkeyProvider` can look them up. The last parent is still being stored so that additional derivation can occur.\r\n\r\nThis consolidates cache reads and writes and encapsulates them in the classes that actually use the cache.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591184682/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591559861",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-591559861",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
    "id": 591559861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTU1OTg2MQ==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-26T17:59:24Z",
    "updated_at": "2020-02-26T17:59:24Z",
    "author_association": "MEMBER",
    "body": "I've squashed the middle three commits together (the ones that just changed to using DescriptorCache) so that the signature of `Expand` and `ExpandHelper` don't change so many times.\r\n\r\n> Switching from pubkeys to xpubs plus origin info increases the cache size by ~40 bytes per key, or 240 KB for a typical descriptor wallet with change & receive for three output types, with the first 1000 keys expanded. That's probably acceptable, though maybe the serialization could be optimized to leave out the chain code for \"leaf\" keys (meh, complexity).\r\n\r\nWe could do what I did originally and have a pubkey cache, but I felt that to be unnecessary. We would still be storing `KeyOriginInfo`.\r\n\r\n> This could be a good time to rename `m_derive` to `m_range_derive` to make it clear that this refers to whether a given (final?) path element is (hardened) ranged or not.\r\n\r\nWhy? I find it to be clear.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591559861/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592081988",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-592081988",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
    "id": 592081988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjA4MTk4OA==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-27T17:31:02Z",
    "updated_at": "2020-02-27T17:31:02Z",
    "author_association": "MEMBER",
    "body": "Unable to \"review\" at the moment due to github issues, but https://github.com/bitcoin/bitcoin/pull/18204/commits/d90075e586b2a4b1fbc1c511d662c0b918023595 looks logically correct (will swing back here when back up and drop comments)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592081988/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592107250",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-592107250",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
    "id": 592107250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjEwNzI1MA==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-27T18:26:48Z",
    "updated_at": "2020-02-27T18:26:48Z",
    "author_association": "MEMBER",
    "body": "> Can you move 568a90f and 23aef19 from #16528 to here? 568a90f could use a test to show that nothing is added to cache.\r\n\r\nDone. Also squashed a bit and added tests.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592107250/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592482741",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-592482741",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
    "id": 592482741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjQ4Mjc0MQ==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-28T11:58:30Z",
    "updated_at": "2020-02-28T11:59:09Z",
    "author_association": "MEMBER",
    "body": "Travis and AppVeyor didn't run. Probably because of the Github problems yesterday. It might help to force push some trivial change.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592482741/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592748507",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-592748507",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
    "id": 592748507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5Mjc0ODUwNw==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-28T21:59:49Z",
    "updated_at": "2020-02-28T21:59:49Z",
    "author_association": "MEMBER",
    "body": "I've added another commit to internally cache that parent xpub inside of `BIP32PubkeyProvider` so the `Expand` doesn't constantly re-derive the same xpub.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592748507/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594120140",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-594120140",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
    "id": 594120140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDEyMDE0MA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-03T19:16:36Z",
    "updated_at": "2020-03-03T19:16:36Z",
    "author_association": "MEMBER",
    "body": "Code review re-ACK 1373d9d885fdc671a7538f9ea6410582bcaee1d5",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594120140/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594177852",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-594177852",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
    "id": 594177852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDE3Nzg1Mg==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-03T21:27:20Z",
    "updated_at": "2020-03-03T21:27:20Z",
    "author_association": "MEMBER",
    "body": "The logic seems correct, but only once I did my own little refactorings to make it more understandable what everything was doing: https://github.com/instagibbs/bitcoin/commit/9c169165cbfb1565c28b8969733351e5611db6ac\r\n\r\nI'm willing to ACK the logic as-is, but I find it extremely opaque and would immediately open up a PR with these changes.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594177852/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594213072",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-594213072",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
    "id": 594213072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDIxMzA3Mg==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-03T22:53:18Z",
    "updated_at": "2020-03-03T22:53:18Z",
    "author_association": "MEMBER",
    "body": "I've pulled in @instagibbs suggested changes with only one small modification.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594213072/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594243308",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-594243308",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
    "id": 594243308,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDI0MzMwOA==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-04T00:32:46Z",
    "updated_at": "2020-03-04T00:32:46Z",
    "author_association": "MEMBER",
    "body": "code review ACK https://github.com/bitcoin/bitcoin/pull/18204/commits/1c20f259cf8f406254989d4ecca1c52d858209ae\r\n\r\nthanks for pulling in most the suggestions!\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594243308/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594839723",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-594839723",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
    "id": 594839723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDgzOTcyMw==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-04T21:03:37Z",
    "updated_at": "2020-03-04T21:04:39Z",
    "author_association": "MEMBER",
    "body": "I've changed the cache back to using position, but this time with `unordered_map`s instead of a vector. This requires using two maps, one for the derived keys, and one for the parent xpubs.\r\n\r\nTo facilitate this, `PubkeyProvider`s will now store their position in the descriptor. This position is established during parsing.\r\n\r\nAlso dropped the commit for `GetNotCached`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594839723/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/595376100",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-595376100",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
    "id": 595376100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTM3NjEwMA==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-05T18:23:53Z",
    "updated_at": "2020-03-05T18:23:53Z",
    "author_association": "MEMBER",
    "body": "code review re-ACK https://github.com/bitcoin/bitcoin/pull/18204/commits/d7b241109f74b3c1c407929930e7d035cdcf60c9",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/595376100/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596096561",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-596096561",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
    "id": 596096561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjA5NjU2MQ==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-07T14:54:08Z",
    "updated_at": "2020-03-10T13:29:10Z",
    "author_association": "MEMBER",
    "body": "re-ACK 31304fc4f8f0d7870794d8c675831d8c73c959cb",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596096561/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596773416",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-596773416",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
    "id": 596773416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5Njc3MzQxNg==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-09T20:52:27Z",
    "updated_at": "2020-03-09T20:52:27Z",
    "author_association": "MEMBER",
    "body": "code review re-re-ACK https://github.com/bitcoin/bitcoin/pull/18204/commits/09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596773416/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383778842",
    "pull_request_review_id": 364014093,
    "id": 383778842,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3ODg0Mg==",
    "diff_hunk": "@@ -13,6 +13,18 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    unsigned int m_pos_begin;\n+    std::vector<std::vector<CPubKey>> m_pubkey_cache;\n+\n+public:\n+    DescriptorCache() : m_pos_begin(0) {}\n+    DescriptorCache(int begin_pos) : m_pos_begin(begin_pos) {}\n+    bool CachePubKey(unsigned int cache_pos, const CPubKey& pubkey);\n+    bool GetCachedPubKey(unsigned int global_pos, unsigned int internal_pos, CPubKey& pubkey) const;",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 14,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "13b526665646f5c3593fed996df4eabbfb64f7b4",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`global_pos` and `internal_pos` could use documentation. Would it make sense to cache all pubkeys (for a given position) in one operation?",
    "created_at": "2020-02-25T10:08:02Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383778842",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383778842"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383778842"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383778842/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 26,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383891841",
    "pull_request_review_id": 364156739,
    "id": 383891841,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg5MTg0MQ==",
    "diff_hunk": "@@ -13,6 +13,18 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    unsigned int m_pos_begin;\n+    std::vector<std::vector<CPubKey>> m_pubkey_cache;\n+\n+public:\n+    DescriptorCache() : m_pos_begin(0) {}\n+    DescriptorCache(int begin_pos) : m_pos_begin(begin_pos) {}\n+    bool CachePubKey(unsigned int cache_pos, const CPubKey& pubkey);",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 13,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "13b526665646f5c3593fed996df4eabbfb64f7b4",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: it's named `global_pos` in the definition which lines up with `GetCachedPubKey`",
    "created_at": "2020-02-25T13:54:47Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383891841",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383891841"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383891841"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383891841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 25,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383892053",
    "pull_request_review_id": 364156739,
    "id": 383892053,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg5MjA1Mw==",
    "diff_hunk": "@@ -13,6 +13,18 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    unsigned int m_pos_begin;",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 7,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "13b526665646f5c3593fed996df4eabbfb64f7b4",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "this needs a description as well",
    "created_at": "2020-02-25T13:55:10Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383892053",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383892053"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383892053"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383892053/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 19,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384534021",
    "pull_request_review_id": 364952572,
    "id": 384534021,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUzNDAyMQ==",
    "diff_hunk": "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {\n+            if (a.fingerprint[i] < b.fingerprint[i]) return true;\n+            if (a.fingerprint[i] > b.fingerprint[i]) return false;\n+        }\n+        if (a.path.size() < b.path.size()) return true;",
    "path": "src/script/keyorigin.h",
    "position": null,
    "original_position": 10,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "6df2a7a0e1ff5baa4a174e393abfcd27fe2967b9",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We should compare path elements first (`max(a.path.size(), b.path.size())`) and size after.\r\n\r\nSince `std::map<KeyOriginInfo, CExtPubKey> m_xpubs` is serialised, I'd prefer to tidy up the ordering. Whether this matters depends on how you rebase https://github.com/bitcoin/bitcoin/pull/16528/commits/35bb585b28e5de43553bfd52d2257db9400199be, if it remains a blob or becomes multiple entries keyed by origin.",
    "created_at": "2020-02-26T14:40:50Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384534021",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384534021"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384534021"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384534021/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 27,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384554045",
    "pull_request_review_id": 364952572,
    "id": 384554045,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1NDA0NQ==",
    "diff_hunk": "@@ -135,19 +136,34 @@ void DoCheck(const std::string& prv, const std::string& pub, int flags, const st\n             // Evaluate the descriptor selected by `t` in poisition `i`.\n             FlatSigningProvider script_provider, script_provider_cached;\n             std::vector<CScript> spks, spks_cached;\n-            std::vector<unsigned char> cache;\n-            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &cache));\n+            DescriptorCache desc_cache;\n+            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &desc_cache));\n \n             // Compare the output with the expected result.\n             BOOST_CHECK_EQUAL(spks.size(), ref.size());\n \n             // Try to expand again using cached data, and compare.\n-            BOOST_CHECK(parse_pub->ExpandFromCache(i, cache, spks_cached, script_provider_cached));\n+            BOOST_CHECK(parse_pub->ExpandFromCache(i, desc_cache, spks_cached, script_provider_cached));\n             BOOST_CHECK(spks == spks_cached);\n             BOOST_CHECK(script_provider.pubkeys == script_provider_cached.pubkeys);\n             BOOST_CHECK(script_provider.scripts == script_provider_cached.scripts);\n             BOOST_CHECK(script_provider.origins == script_provider_cached.origins);\n \n+            // Make sure we can expand using cached xpubs for unhardened derivation\n+            if (!(flags & DERIVE_HARDENED)) {\n+                // Evaluate the descriptor at i + 1\n+                FlatSigningProvider script_provider1, script_provider_cached1;\n+                std::vector<CScript> spks1, spks_cached1;",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: maybe rename `spks_cached1` to `spks1_from_cache`",
    "created_at": "2020-02-26T15:09:57Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384554045",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384554045"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384554045"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384554045/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 156,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384555695",
    "pull_request_review_id": 364952572,
    "id": 384555695,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1NTY5NQ==",
    "diff_hunk": "@@ -135,19 +136,34 @@ void DoCheck(const std::string& prv, const std::string& pub, int flags, const st\n             // Evaluate the descriptor selected by `t` in poisition `i`.\n             FlatSigningProvider script_provider, script_provider_cached;\n             std::vector<CScript> spks, spks_cached;\n-            std::vector<unsigned char> cache;\n-            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &cache));\n+            DescriptorCache desc_cache;\n+            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &desc_cache));\n \n             // Compare the output with the expected result.\n             BOOST_CHECK_EQUAL(spks.size(), ref.size());\n \n             // Try to expand again using cached data, and compare.\n-            BOOST_CHECK(parse_pub->ExpandFromCache(i, cache, spks_cached, script_provider_cached));\n+            BOOST_CHECK(parse_pub->ExpandFromCache(i, desc_cache, spks_cached, script_provider_cached));\n             BOOST_CHECK(spks == spks_cached);\n             BOOST_CHECK(script_provider.pubkeys == script_provider_cached.pubkeys);\n             BOOST_CHECK(script_provider.scripts == script_provider_cached.scripts);\n             BOOST_CHECK(script_provider.origins == script_provider_cached.origins);\n \n+            // Make sure we can expand using cached xpubs for unhardened derivation\n+            if (!(flags & DERIVE_HARDENED)) {\n+                // Evaluate the descriptor at i + 1\n+                FlatSigningProvider script_provider1, script_provider_cached1;\n+                std::vector<CScript> spks1, spks_cached1;\n+                BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i + 1, key_provider, spks1, script_provider1, nullptr));\n+\n+                // Try again but use the old cache. The old cache won't have the pubkeys, but will have the parent xpub for derivation.",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`but use the cache generated while expanding i. This cache won't have the pubkeys for i + 1, but`",
    "created_at": "2020-02-26T15:12:26Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384555695",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384555695"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384555695"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384555695/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 159,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384560821",
    "pull_request_review_id": 364952572,
    "id": 384560821,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU2MDgyMQ==",
    "diff_hunk": "@@ -262,6 +262,16 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         return true;\n     }\n \n+    // Derives the last xpub",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 34,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`xpub or xpriv`, unless you neuter it at the end and have it return a `CExtPubKey&`",
    "created_at": "2020-02-26T15:19:36Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384560821",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384560821"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384560821"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384560821/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 265,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384579514",
    "pull_request_review_id": 364952572,
    "id": 384579514,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3OTUxNA==",
    "diff_hunk": "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n+            } else if (IsHardened()) {\n+                CExtKey xprv;\n+                if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n+                if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n+                if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n+                extkey = xprv.Neuter();\n             } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+            }\n+            *key = extkey.pubkey;\n+            if (write_cache && !read_cache) {\n+                if (!write_cache->CacheExtPubKey(info_out, extkey)) return false;\n+                // Only cache parent if there is any unhardened derivation\n+                if (m_derive == DeriveType::UNHARDENED && !write_cache->CacheExtPubKey(parent_info, parent)) return false;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 100,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is it worth skipping the parent `write` once it's done?",
    "created_at": "2020-02-26T15:45:35Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384579514",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384579514"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384579514"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384579514/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 327,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384655169",
    "pull_request_review_id": 365105969,
    "id": 384655169,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY1NTE2OQ==",
    "diff_hunk": "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n+            } else if (IsHardened()) {\n+                CExtKey xprv;\n+                if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n+                if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n+                if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n+                extkey = xprv.Neuter();\n             } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+            }\n+            *key = extkey.pubkey;\n+            if (write_cache && !read_cache) {\n+                if (!write_cache->CacheExtPubKey(info_out, extkey)) return false;\n+                // Only cache parent if there is any unhardened derivation\n+                if (m_derive == DeriveType::UNHARDENED && !write_cache->CacheExtPubKey(parent_info, parent)) return false;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 100,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "A lookup is just as expensive as an insertion, so I don't think so.",
    "created_at": "2020-02-26T17:41:37Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384655169",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384655169"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384655169"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384655169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 327,
    "side": "RIGHT",
    "in_reply_to_id": 384579514
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663400",
    "pull_request_review_id": 365116244,
    "id": 384663400,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY2MzQwMA==",
    "diff_hunk": "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {\n+            if (a.fingerprint[i] < b.fingerprint[i]) return true;\n+            if (a.fingerprint[i] > b.fingerprint[i]) return false;\n+        }\n+        if (a.path.size() < b.path.size()) return true;",
    "path": "src/script/keyorigin.h",
    "position": null,
    "original_position": 10,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "6df2a7a0e1ff5baa4a174e393abfcd27fe2967b9",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-02-26T17:56:20Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384663400",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663400"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384663400"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663400/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 27,
    "side": "RIGHT",
    "in_reply_to_id": 384534021
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663446",
    "pull_request_review_id": 365116296,
    "id": 384663446,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY2MzQ0Ng==",
    "diff_hunk": "@@ -135,19 +136,34 @@ void DoCheck(const std::string& prv, const std::string& pub, int flags, const st\n             // Evaluate the descriptor selected by `t` in poisition `i`.\n             FlatSigningProvider script_provider, script_provider_cached;\n             std::vector<CScript> spks, spks_cached;\n-            std::vector<unsigned char> cache;\n-            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &cache));\n+            DescriptorCache desc_cache;\n+            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &desc_cache));\n \n             // Compare the output with the expected result.\n             BOOST_CHECK_EQUAL(spks.size(), ref.size());\n \n             // Try to expand again using cached data, and compare.\n-            BOOST_CHECK(parse_pub->ExpandFromCache(i, cache, spks_cached, script_provider_cached));\n+            BOOST_CHECK(parse_pub->ExpandFromCache(i, desc_cache, spks_cached, script_provider_cached));\n             BOOST_CHECK(spks == spks_cached);\n             BOOST_CHECK(script_provider.pubkeys == script_provider_cached.pubkeys);\n             BOOST_CHECK(script_provider.scripts == script_provider_cached.scripts);\n             BOOST_CHECK(script_provider.origins == script_provider_cached.origins);\n \n+            // Make sure we can expand using cached xpubs for unhardened derivation\n+            if (!(flags & DERIVE_HARDENED)) {\n+                // Evaluate the descriptor at i + 1\n+                FlatSigningProvider script_provider1, script_provider_cached1;\n+                std::vector<CScript> spks1, spks_cached1;",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-02-26T17:56:24Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384663446",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663446"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384663446"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663446/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 156,
    "side": "RIGHT",
    "in_reply_to_id": 384554045
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663507",
    "pull_request_review_id": 365116377,
    "id": 384663507,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY2MzUwNw==",
    "diff_hunk": "@@ -135,19 +136,34 @@ void DoCheck(const std::string& prv, const std::string& pub, int flags, const st\n             // Evaluate the descriptor selected by `t` in poisition `i`.\n             FlatSigningProvider script_provider, script_provider_cached;\n             std::vector<CScript> spks, spks_cached;\n-            std::vector<unsigned char> cache;\n-            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &cache));\n+            DescriptorCache desc_cache;\n+            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &desc_cache));\n \n             // Compare the output with the expected result.\n             BOOST_CHECK_EQUAL(spks.size(), ref.size());\n \n             // Try to expand again using cached data, and compare.\n-            BOOST_CHECK(parse_pub->ExpandFromCache(i, cache, spks_cached, script_provider_cached));\n+            BOOST_CHECK(parse_pub->ExpandFromCache(i, desc_cache, spks_cached, script_provider_cached));\n             BOOST_CHECK(spks == spks_cached);\n             BOOST_CHECK(script_provider.pubkeys == script_provider_cached.pubkeys);\n             BOOST_CHECK(script_provider.scripts == script_provider_cached.scripts);\n             BOOST_CHECK(script_provider.origins == script_provider_cached.origins);\n \n+            // Make sure we can expand using cached xpubs for unhardened derivation\n+            if (!(flags & DERIVE_HARDENED)) {\n+                // Evaluate the descriptor at i + 1\n+                FlatSigningProvider script_provider1, script_provider_cached1;\n+                std::vector<CScript> spks1, spks_cached1;\n+                BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i + 1, key_provider, spks1, script_provider1, nullptr));\n+\n+                // Try again but use the old cache. The old cache won't have the pubkeys, but will have the parent xpub for derivation.",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-02-26T17:56:31Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384663507",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663507"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384663507"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663507/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 159,
    "side": "RIGHT",
    "in_reply_to_id": 384555695
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663587",
    "pull_request_review_id": 365116491,
    "id": 384663587,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY2MzU4Nw==",
    "diff_hunk": "@@ -262,6 +262,16 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         return true;\n     }\n \n+    // Derives the last xpub",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 34,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Changed to xprv",
    "created_at": "2020-02-26T17:56:41Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384663587",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663587"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384663587"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 265,
    "side": "RIGHT",
    "in_reply_to_id": 384560821
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384811070",
    "pull_request_review_id": 365297033,
    "id": 384811070,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxMTA3MA==",
    "diff_hunk": "@@ -18,6 +18,22 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {\n+            if (a.fingerprint[i] < b.fingerprint[i]) return true;\n+            if (a.fingerprint[i] > b.fingerprint[i]) return false;\n+        }\n+        unsigned int min = std::min(a.path.size(), b.path.size());\n+        for (unsigned int i = 0; i < min; ++i) {\n+            if (a.path.at(i) < b.path.at(i)) return true;\n+            if (a.path.at(i) > b.path.at(i)) return false;\n+        }\n+        if (a.path.size() < b.path.size()) return true;\n+        if (a.path.size() > b.path.size()) return false;",
    "path": "src/script/keyorigin.h",
    "position": null,
    "original_position": 16,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "08186b12cec164a7f056ffff2397a78103ebe6a7",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can be removed.",
    "created_at": "2020-02-26T22:39:04Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384811070",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384811070"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384811070"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384811070/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 33,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384812839",
    "pull_request_review_id": 365297033,
    "id": 384812839,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxMjgzOQ==",
    "diff_hunk": "@@ -13,6 +13,15 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;\n+\n+public:\n+    bool CacheExtPubKey(const KeyOriginInfo& origin_info, const CExtPubKey& xpub);",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 10,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "08186b12cec164a7f056ffff2397a78103ebe6a7",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Will this return false in a follow up change?",
    "created_at": "2020-02-26T22:43:17Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384812839",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384812839"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384812839"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384812839/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 22,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384875316",
    "pull_request_review_id": 365371087,
    "id": 384875316,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg3NTMxNg==",
    "diff_hunk": "@@ -18,6 +18,22 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {\n+            if (a.fingerprint[i] < b.fingerprint[i]) return true;\n+            if (a.fingerprint[i] > b.fingerprint[i]) return false;\n+        }\n+        unsigned int min = std::min(a.path.size(), b.path.size());\n+        for (unsigned int i = 0; i < min; ++i) {\n+            if (a.path.at(i) < b.path.at(i)) return true;\n+            if (a.path.at(i) > b.path.at(i)) return false;\n+        }\n+        if (a.path.size() < b.path.size()) return true;\n+        if (a.path.size() > b.path.size()) return false;",
    "path": "src/script/keyorigin.h",
    "position": null,
    "original_position": 16,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "08186b12cec164a7f056ffff2397a78103ebe6a7",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-02-27T02:05:12Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384875316",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384875316"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384875316"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384875316/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 33,
    "side": "RIGHT",
    "in_reply_to_id": 384811070
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384875354",
    "pull_request_review_id": 365371134,
    "id": 384875354,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg3NTM1NA==",
    "diff_hunk": "@@ -13,6 +13,15 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;\n+\n+public:\n+    bool CacheExtPubKey(const KeyOriginInfo& origin_info, const CExtPubKey& xpub);",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 10,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "08186b12cec164a7f056ffff2397a78103ebe6a7",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No. I've made it `void`",
    "created_at": "2020-02-27T02:05:20Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384875354",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384875354"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384875354"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384875354/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 22,
    "side": "RIGHT",
    "in_reply_to_id": 384812839
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384987867",
    "pull_request_review_id": 365505343,
    "id": 384987867,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk4Nzg2Nw==",
    "diff_hunk": "@@ -1050,3 +1061,16 @@ std::unique_ptr<Descriptor> InferDescriptor(const CScript& script, const Signing\n {\n     return InferScript(script, ParseScriptContext::TOP, provider);\n }\n+\n+void DescriptorCache::CacheExtPubKey(const KeyOriginInfo& origin_info, const CExtPubKey& xpub)\n+{\n+    m_xpubs[origin_info] = xpub;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 190,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Does it make sense to `assert(m_xpubs.count(origin_info) == 0)`?",
    "created_at": "2020-02-27T08:57:05Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384987867",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384987867"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384987867"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384987867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1094,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385114549",
    "pull_request_review_id": 365665103,
    "id": 385114549,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTExNDU0OQ==",
    "diff_hunk": "@@ -1050,3 +1061,16 @@ std::unique_ptr<Descriptor> InferDescriptor(const CScript& script, const Signing\n {\n     return InferScript(script, ParseScriptContext::TOP, provider);\n }\n+\n+void DescriptorCache::CacheExtPubKey(const KeyOriginInfo& origin_info, const CExtPubKey& xpub)\n+{\n+    m_xpubs[origin_info] = xpub;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 190,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Not at the moment: https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384655169",
    "created_at": "2020-02-27T13:08:52Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385114549",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385114549"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385114549"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385114549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1094,
    "side": "RIGHT",
    "in_reply_to_id": 384987867
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385131791",
    "pull_request_review_id": 365687424,
    "id": 385131791,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzMTc5MQ==",
    "diff_hunk": "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 67,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This `CExtPubKey` juggling still confuses me :-)\r\n\r\nI added some comments for my own sanity. Will probably need to read this again later.\r\n\r\n```\r\nCExtPubKey extkey_out = m_extkey;    // to hold extended key for *key (m/.../k)\r\nCExtPubKey extkey_parent = m_extkey; // to hold extended key for the parent of *key (m/.../k/pos)\r\n```\r\n",
    "created_at": "2020-02-27T13:41:22Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385131791",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385131791"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385131791"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385131791/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 302,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385134821",
    "pull_request_review_id": 365687424,
    "id": 385134821,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzNDgyMQ==",
    "diff_hunk": "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 71,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n// Check if the parent at m/.../k is cached\r\n```",
    "created_at": "2020-02-27T13:46:43Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385134821",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385134821"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385134821"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385134821/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 306,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385135647",
    "pull_request_review_id": 365687424,
    "id": 385135647,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzNTY0Nw==",
    "diff_hunk": "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n+            } else if (IsHardened()) {\n+                CExtKey xprv;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 77,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n// Get the extended private key at m/.../k\r\n```",
    "created_at": "2020-02-27T13:48:10Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385135647",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385135647"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385135647"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385135647/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 312,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385137236",
    "pull_request_review_id": 365687424,
    "id": 385137236,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzNzIzNg==",
    "diff_hunk": "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n+            } else if (IsHardened()) {\n+                CExtKey xprv;\n+                if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 79,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n// Get the extended public key at m/.../k/i or m/.../k/i'\r\n```",
    "created_at": "2020-02-27T13:50:53Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385137236",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385137236"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385137236"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385137236/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 314,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385139315",
    "pull_request_review_id": 365687424,
    "id": 385139315,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzOTMxNQ==",
    "diff_hunk": "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n+            } else if (IsHardened()) {\n+                CExtKey xprv;\n+                if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n+                if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n+                if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n+                extkey = xprv.Neuter();\n             } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 88,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "(one line up)\r\n```\r\n// Set parent to the extended public key at m/.../k\r\n```",
    "created_at": "2020-02-27T13:54:23Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385139315",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385139315"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385139315"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385139315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 320,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385140390",
    "pull_request_review_id": 365687424,
    "id": 385140390,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE0MDM5MA==",
    "diff_hunk": "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n+            } else if (IsHardened()) {\n+                CExtKey xprv;\n+                if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n+                if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n+                if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n+                extkey = xprv.Neuter();\n             } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 91,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "(above)\r\n```\r\n// If this is not a ranged descriptor, we return the public key at `m/.../k`, otherwise at `m/.../k/i\r\n```",
    "created_at": "2020-02-27T13:56:18Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385140390",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385140390"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385140390"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385140390/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 322,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385142659",
    "pull_request_review_id": 365701767,
    "id": 385142659,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE0MjY1OQ==",
    "diff_hunk": "@@ -13,6 +13,15 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;\n+\n+public:\n+    void CacheExtPubKey(const KeyOriginInfo& origin_info, const CExtPubKey& xpub);\n+    bool GetCachedExtPubKey(const KeyOriginInfo& origin_info, CExtPubKey& xpub) const;\n+};",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 12,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "0837211a3868151bb6f2ae2730850c7ecd9bdd15",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "much clearer now :+1: ",
    "created_at": "2020-02-27T14:00:07Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385142659",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385142659"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385142659"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385142659/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 16,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 58,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385154331",
    "pull_request_review_id": 365701767,
    "id": 385154331,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1NDMzMQ==",
    "diff_hunk": "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {",
    "path": "src/script/keyorigin.h",
    "position": null,
    "original_position": 6,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "0837211a3868151bb6f2ae2730850c7ecd9bdd15",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I made this complaint long ago but I'd really prefer some constant for `4` being littered everywhere.",
    "created_at": "2020-02-27T14:18:43Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385154331",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385154331"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385154331"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385154331/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 23,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385155902",
    "pull_request_review_id": 365701767,
    "id": 385155902,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1NTkwMg==",
    "diff_hunk": "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)",
    "path": "src/script/keyorigin.h",
    "position": null,
    "original_position": 4,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "0837211a3868151bb6f2ae2730850c7ecd9bdd15",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "future work: Noticed there are no unit tests for `KeyOriginInfo`, would be nice to have",
    "created_at": "2020-02-27T14:21:08Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385155902",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385155902"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385155902"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385155902/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 21,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385161281",
    "pull_request_review_id": 365701767,
    "id": 385161281,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE2MTI4MQ==",
    "diff_hunk": "@@ -153,7 +153,7 @@ struct PubkeyProvider\n     virtual ~PubkeyProvider() = default;\n \n     /** Derive a public key. If key==nullptr, only info is desired. */\n-    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const = 0;\n+    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const = 0;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "db007ea44f90befcad8fe0b3d089c273deecc89c",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "A few words on the new optional args?",
    "created_at": "2020-02-27T14:29:12Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385161281",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385161281"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385161281"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385161281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 155,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 159,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385180274",
    "pull_request_review_id": 365701767,
    "id": 385180274,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE4MDI3NA==",
    "diff_hunk": "@@ -287,32 +287,44 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     size_t GetSize() const override { return 33; }\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n             CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n             if (read_cache) {\n-                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n             } else if (IsHardened()) {\n                 CExtKey xprv;\n                 if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n                 if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n                 if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n                 extkey = xprv.Neuter();\n             } else {\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n             }\n             *key = extkey.pubkey;\n             if (write_cache && !read_cache) {\n                 write_cache->CacheExtPubKey(info_out, extkey);\n+                // Only cache parent if there is any unhardened derivation",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 44,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "any? The whole path has to be unhardened right?",
    "created_at": "2020-02-27T15:20:43Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385180274",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385180274"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385180274"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385180274/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 329,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385287770",
    "pull_request_review_id": 365891599,
    "id": 385287770,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4Nzc3MA==",
    "diff_hunk": "@@ -287,32 +287,44 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     size_t GetSize() const override { return 33; }\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n             CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n             if (read_cache) {\n-                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n             } else if (IsHardened()) {\n                 CExtKey xprv;\n                 if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n                 if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n                 if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n                 extkey = xprv.Neuter();\n             } else {\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n             }\n             *key = extkey.pubkey;\n             if (write_cache && !read_cache) {\n                 write_cache->CacheExtPubKey(info_out, extkey);\n+                // Only cache parent if there is any unhardened derivation",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 44,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Just the last range step. The range derivation type has to be unhardened or none. This means it either ends with `*` or with an absolute path. There can be hardened steps in between, and even have the last step be hardened if it is not a range.\r\n\r\nThis thing about a non-ranged path is kind of a hack to make sure that we cache the pubkey for descriptors that have keys like `xprv../1'`. We have some examples of this in the tests.",
    "created_at": "2020-02-27T18:21:21Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385287770",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385287770"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385287770"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385287770/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 329,
    "side": "RIGHT",
    "in_reply_to_id": 385180274
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385290029",
    "pull_request_review_id": 365894431,
    "id": 385290029,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI5MDAyOQ==",
    "diff_hunk": "@@ -153,7 +153,7 @@ struct PubkeyProvider\n     virtual ~PubkeyProvider() = default;\n \n     /** Derive a public key. If key==nullptr, only info is desired. */\n-    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const = 0;\n+    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const = 0;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "db007ea44f90befcad8fe0b3d089c273deecc89c",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Added some comments.",
    "created_at": "2020-02-27T18:25:30Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385290029",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385290029"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385290029"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385290029/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 155,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 159,
    "side": "RIGHT",
    "in_reply_to_id": 385161281
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385292764",
    "pull_request_review_id": 365897948,
    "id": 385292764,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI5Mjc2NA==",
    "diff_hunk": "@@ -1050,3 +1061,16 @@ std::unique_ptr<Descriptor> InferDescriptor(const CScript& script, const Signing\n {\n     return InferScript(script, ParseScriptContext::TOP, provider);\n }\n+\n+void DescriptorCache::CacheExtPubKey(const KeyOriginInfo& origin_info, const CExtPubKey& xpub)\n+{\n+    m_xpubs[origin_info] = xpub;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 190,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Performance penalty aside, makes sense to assert it's the same xpub if already cached?",
    "created_at": "2020-02-27T18:30:33Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385292764",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385292764"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385292764"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385292764/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1094,
    "side": "RIGHT",
    "in_reply_to_id": 384987867
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385299363",
    "pull_request_review_id": 365906201,
    "id": 385299363,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI5OTM2Mw==",
    "diff_hunk": "@@ -287,32 +287,44 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     size_t GetSize() const override { return 33; }\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n             CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n             if (read_cache) {\n-                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n             } else if (IsHardened()) {\n                 CExtKey xprv;\n                 if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n                 if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n                 if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n                 extkey = xprv.Neuter();\n             } else {\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n             }\n             *key = extkey.pubkey;\n             if (write_cache && !read_cache) {\n                 write_cache->CacheExtPubKey(info_out, extkey);\n+                // Only cache parent if there is any unhardened derivation",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 44,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Just to clarify, there's no test for this AFAIK, but `xpriv/../*/...` isn't allowed, right?",
    "created_at": "2020-02-27T18:42:54Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385299363",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385299363"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385299363"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385299363/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 329,
    "side": "RIGHT",
    "in_reply_to_id": 385180274
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385308764",
    "pull_request_review_id": 365918191,
    "id": 385308764,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMwODc2NA==",
    "diff_hunk": "@@ -287,32 +287,44 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     size_t GetSize() const override { return 33; }\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n             CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n             if (read_cache) {\n-                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n             } else if (IsHardened()) {\n                 CExtKey xprv;\n                 if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n                 if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n                 if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n                 extkey = xprv.Neuter();\n             } else {\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n             }\n             *key = extkey.pubkey;\n             if (write_cache && !read_cache) {\n                 write_cache->CacheExtPubKey(info_out, extkey);\n+                // Only cache parent if there is any unhardened derivation",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 44,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I see, so we don't do any intermediate caching if we can always generate from \"root\" anyways with pubkey.",
    "created_at": "2020-02-27T19:00:07Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385308764",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385308764"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385308764"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385308764/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 329,
    "side": "RIGHT",
    "in_reply_to_id": 385180274
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385311318",
    "pull_request_review_id": 365921550,
    "id": 385311318,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMxMTMxOA==",
    "diff_hunk": "@@ -287,32 +287,44 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     size_t GetSize() const override { return 33; }\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n             CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n             if (read_cache) {\n-                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n             } else if (IsHardened()) {\n                 CExtKey xprv;\n                 if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n                 if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n                 if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n                 extkey = xprv.Neuter();\n             } else {\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n             }\n             *key = extkey.pubkey;\n             if (write_cache && !read_cache) {\n                 write_cache->CacheExtPubKey(info_out, extkey);\n+                // Only cache parent if there is any unhardened derivation",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 44,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Just to clarify, there's no test for this AFAIK, but `xpriv/../*/...` isn't allowed, right?\r\n\r\nYes. Maybe we should add a `CheckUnparsable` for that.\r\n\r\n> I see, so we don't do any intermediate caching if we can always generate from \"root\" anyways with pubkey.\r\n\r\nActually no. We always cache if there are xpubs. If the descriptor has just an xpub, e.g. `wpkh(xpub...)`, we actually would cache that xpub. If it were `wpkh(xpub.../0)`, we would cache the derived xpub. Same if it is hardened.",
    "created_at": "2020-02-27T19:05:06Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385311318",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385311318"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385311318"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385311318/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 329,
    "side": "RIGHT",
    "in_reply_to_id": 385180274
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385313609",
    "pull_request_review_id": 365924341,
    "id": 385313609,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMxMzYwOQ==",
    "diff_hunk": "@@ -287,32 +287,44 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     size_t GetSize() const override { return 33; }\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n             CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n             if (read_cache) {\n-                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n             } else if (IsHardened()) {\n                 CExtKey xprv;\n                 if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n                 if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n                 if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n                 extkey = xprv.Neuter();\n             } else {\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n             }\n             *key = extkey.pubkey;\n             if (write_cache && !read_cache) {\n                 write_cache->CacheExtPubKey(info_out, extkey);\n+                // Only cache parent if there is any unhardened derivation",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 44,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "d90075e586b2a4b1fbc1c511d662c0b918023595",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think I'm agreeing with you here.",
    "created_at": "2020-02-27T19:09:30Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385313609",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385313609"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385313609"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385313609/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 329,
    "side": "RIGHT",
    "in_reply_to_id": 385180274
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385672434",
    "pull_request_review_id": 366367050,
    "id": 385672434,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3MjQzNA==",
    "diff_hunk": "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 62,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n// For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\r\n```",
    "created_at": "2020-02-28T12:37:13Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385672434",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385672434"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385672434"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385672434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 298,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385676713",
    "pull_request_review_id": 366367050,
    "id": 385676713,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3NjcxMw==",
    "diff_hunk": "@@ -262,6 +265,16 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         return true;\n     }\n \n+    // Derives the last xprv\n+    bool GetDerivedExtKey(const SigningProvider& arg, CExtKey& xprv) const\n+    {\n+        if (!GetExtKey(arg, xprv)) return false;\n+        for (auto entry : m_path) {\n+            xprv.Derive(xprv, entry);",
    "path": "src/script/descriptor.cpp",
    "position": 88,
    "original_position": 44,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: assert `Derive()` succeeds",
    "created_at": "2020-02-28T12:47:05Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385676713",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385676713"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385676713"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385676713/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 286,
    "original_line": 286,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385676836",
    "pull_request_review_id": 366367050,
    "id": 385676836,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3NjgzNg==",
    "diff_hunk": "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+            } else if (IsHardened()) {\n+                CExtKey xprv;\n+                if (!GetDerivedExtKey(arg, xprv)) return false;\n+                if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 76,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: assert `Derive()` succeeds",
    "created_at": "2020-02-28T12:47:21Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385676836",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385676836"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385676836"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385676836/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 306,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385679014",
    "pull_request_review_id": 366367050,
    "id": 385679014,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3OTAxNA==",
    "diff_hunk": "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 59,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You don't need this temporary variable anymore, suggest renaming `info` to `info_out` instead. ",
    "created_at": "2020-02-28T12:52:48Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385679014",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385679014"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385679014"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385679014/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 293,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385683704",
    "pull_request_review_id": 366367050,
    "id": 385683704,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY4MzcwNA==",
    "diff_hunk": "@@ -152,8 +152,11 @@ struct PubkeyProvider\n {\n     virtual ~PubkeyProvider() = default;\n \n-    /** Derive a public key. If key==nullptr, only info is desired. */\n-    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const = 0;\n+    /** Derive a public key. If key==nullptr, only info is desired.",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`CPubKey* key` can be a reference now, and you can drop `if(key)` in a few places. The `nullptr` was only used for caching individual pubkeys.",
    "created_at": "2020-02-28T13:04:17Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385683704",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385683704"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385683704"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385683704/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 155,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385849377",
    "pull_request_review_id": 366593569,
    "id": 385849377,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg0OTM3Nw==",
    "diff_hunk": "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 59,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We want to avoid modifying `info` in case later steps fail.",
    "created_at": "2020-02-28T18:21:11Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385849377",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385849377"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385849377"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385849377/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 293,
    "side": "RIGHT",
    "in_reply_to_id": 385679014
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385851709",
    "pull_request_review_id": 366596472,
    "id": 385851709,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1MTcwOQ==",
    "diff_hunk": "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 59,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "might be worth a comment(took me a bit to convince myself what it was doing)",
    "created_at": "2020-02-28T18:26:03Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385851709",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385851709"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385851709"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385851709/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 293,
    "side": "RIGHT",
    "in_reply_to_id": 385679014
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385863672",
    "pull_request_review_id": 366611544,
    "id": 385863672,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2MzY3Mg==",
    "diff_hunk": "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 59,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Then we need another test, because everything passed when I changed that.",
    "created_at": "2020-02-28T18:51:57Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385863672",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385863672"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385863672"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385863672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 293,
    "side": "RIGHT",
    "in_reply_to_id": 385679014
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883261",
    "pull_request_review_id": 366636525,
    "id": 385883261,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MzI2MQ==",
    "diff_hunk": "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 59,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I added a comment. I don't think a test is useful. Everything still passes because `ExpandHelper` does the same thing. Just keeping it for belt-and-suspenders.",
    "created_at": "2020-02-28T19:34:46Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385883261",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883261"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385883261"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883261/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 293,
    "side": "RIGHT",
    "in_reply_to_id": 385679014
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883435",
    "pull_request_review_id": 366636764,
    "id": 385883435,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MzQzNQ==",
    "diff_hunk": "@@ -262,6 +265,16 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         return true;\n     }\n \n+    // Derives the last xprv\n+    bool GetDerivedExtKey(const SigningProvider& arg, CExtKey& xprv) const\n+    {\n+        if (!GetExtKey(arg, xprv)) return false;\n+        for (auto entry : m_path) {\n+            xprv.Derive(xprv, entry);",
    "path": "src/script/descriptor.cpp",
    "position": 88,
    "original_position": 44,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done here and elsewhere.",
    "created_at": "2020-02-28T19:35:12Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385883435",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883435"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385883435"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883435/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 286,
    "original_line": 286,
    "side": "RIGHT",
    "in_reply_to_id": 385676713
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883484",
    "pull_request_review_id": 366636816,
    "id": 385883484,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MzQ4NA==",
    "diff_hunk": "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 62,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Added",
    "created_at": "2020-02-28T19:35:19Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385883484",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883484"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385883484"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883484/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 298,
    "side": "RIGHT",
    "in_reply_to_id": 385672434
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883549",
    "pull_request_review_id": 366636884,
    "id": 385883549,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MzU0OQ==",
    "diff_hunk": "@@ -152,8 +152,11 @@ struct PubkeyProvider\n {\n     virtual ~PubkeyProvider() = default;\n \n-    /** Derive a public key. If key==nullptr, only info is desired. */\n-    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const = 0;\n+    /** Derive a public key. If key==nullptr, only info is desired.",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-02-28T19:35:27Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385883549",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883549"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385883549"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 155,
    "side": "RIGHT",
    "in_reply_to_id": 385683704
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386011800",
    "pull_request_review_id": 366785407,
    "id": 386011800,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxMTgwMA==",
    "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+\n+        // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n+\n+        // Derive keys or fetch them from cache\n+        CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n+        if (read_cache) {\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;\n+                // Try to get the derivation parent\n+                if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                assert(m_derive == DeriveType::UNHARDENED);\n+                assert(parent.Derive(extkey, pos));",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 104,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks for adding the asserts, but now they violate \"Assertions should not have side-effects\": https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#general-c",
    "created_at": "2020-02-29T08:21:22Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386011800",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386011800"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386011800"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386011800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 314,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386012519",
    "pull_request_review_id": 366785407,
    "id": 386012519,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxMjUxOQ==",
    "diff_hunk": "@@ -291,35 +291,47 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n         // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n \n         // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n \n         // Derive keys or fetch them from cache\n         CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n         if (read_cache) {\n-            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;",
    "path": "src/script/descriptor.cpp",
    "position": 138,
    "original_position": 21,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "2f04cc4c50a9ef94f6e67d97ea552e7b6e03cec7",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In 2f04cc4c50a9ef94f6e67d97ea552e7b6e03cec7 : maybe change to `m_derive != DeriveType:: UNHARDENED` for readability, since there's no point in calling `GetCachedExtPubKey(parent_info` for `DeriveType:: NONE`, because `parent_info == info_out` in that case.",
    "created_at": "2020-02-29T08:35:43Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386012519",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386012519"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386012519"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386012519/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 323,
    "original_line": 323,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386012626",
    "pull_request_review_id": 366785407,
    "id": 386012626,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxMjYyNg==",
    "diff_hunk": "@@ -291,35 +291,47 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n         // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n \n         // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n \n         // Derive keys or fetch them from cache\n         CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n         if (read_cache) {\n-            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;\n+                // Try to get the derivation parent\n+                if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                assert(m_derive == DeriveType::UNHARDENED);",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 24,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "2f04cc4c50a9ef94f6e67d97ea552e7b6e03cec7",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "With my previous suggestion this `assert` would go away.",
    "created_at": "2020-02-29T08:37:11Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386012626",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386012626"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386012626"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386012626/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 312,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386039834",
    "pull_request_review_id": 366807278,
    "id": 386039834,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzOTgzNA==",
    "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 68,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The exclusive use of either `read_cache` or `write_cache` trips me up. A reminder like `assert(!(read_cache && write_cache));` may be helpful.",
    "created_at": "2020-02-29T16:43:50Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386039834",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386039834"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386039834"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386039834/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 292,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386040461",
    "pull_request_review_id": 366807278,
    "id": 386040461,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA0MDQ2MQ==",
    "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+\n+        // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n+\n+        // Derive keys or fetch them from cache\n+        CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n+        if (read_cache) {\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;\n+                // Try to get the derivation parent\n+                if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                assert(m_derive == DeriveType::UNHARDENED);\n+                assert(parent.Derive(extkey, pos));\n+            }\n+        } else if (m_cached_xpub.pubkey.IsValid() && m_derive != DeriveType::HARDENED) {\n+            parent = extkey = m_cached_xpub;\n+            if (m_derive == DeriveType::UNHARDENED) assert(parent.Derive(extkey, pos));\n+        } else if (IsHardened()) {\n+            CExtKey xprv;\n+            if (!GetDerivedExtKey(arg, xprv)) return false;\n+            parent = xprv.Neuter();\n+            if (m_derive == DeriveType::UNHARDENED) assert(xprv.Derive(xprv, pos));\n+            if (m_derive == DeriveType::HARDENED) assert(xprv.Derive(xprv, pos | 0x80000000UL));\n+            extkey = xprv.Neuter();\n+        } else {\n+            for (auto entry : m_path) {\n+                assert(parent.Derive(parent, entry));\n             }\n+            extkey = parent;\n+            if (m_derive == DeriveType::UNHARDENED) assert(parent.Derive(extkey, pos));\n+            assert(m_derive != DeriveType::HARDENED);\n         }\n-        CKeyID keyid = m_extkey.pubkey.GetID();\n-        std::copy(keyid.begin(), keyid.begin() + sizeof(info.fingerprint), info.fingerprint);\n-        info.path = m_path;\n-        if (m_derive == DeriveType::UNHARDENED) info.path.push_back((uint32_t)pos);\n-        if (m_derive == DeriveType::HARDENED) info.path.push_back(((uint32_t)pos) | 0x80000000L);\n+        key = extkey.pubkey;\n+        if (!m_cached_xpub.pubkey.IsValid() && m_derive != DeriveType::HARDENED) m_cached_xpub = parent;\n+        if (write_cache && !read_cache) {\n+            write_cache->CacheExtPubKey(info_out, extkey, true);",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 132,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The `skip_unhardened` argument of `CacheExtPubKey` is a nett confusion increase for me, try:\r\n```cpp\r\n// Cache parent instead of child if there is any unhardened derivation\r\nif (m_derive != DeriveType::HARDENED) {\r\n  write_cache->CacheExtPubKey(parent_info, parent);\r\n} else if (info_out.path.size() > 0) {\r\n  write_cache->CacheExtPubKey(info_out, extkey);\r\n}\r\n```",
    "created_at": "2020-02-29T16:54:31Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386040461",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386040461"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386040461"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386040461/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 337,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386041610",
    "pull_request_review_id": 366807278,
    "id": 386041610,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA0MTYxMA==",
    "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+\n+        // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n+\n+        // Derive keys or fetch them from cache\n+        CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n+        if (read_cache) {\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;\n+                // Try to get the derivation parent\n+                if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                assert(m_derive == DeriveType::UNHARDENED);\n+                assert(parent.Derive(extkey, pos));\n+            }",
    "path": "src/script/descriptor.cpp",
    "position": 143,
    "original_position": 105,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n// If we don't have a read_cache, we have a write_cache\r\n```",
    "created_at": "2020-02-29T17:13:00Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386041610",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386041610"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386041610"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386041610/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 328,
    "original_line": 328,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386549347",
    "pull_request_review_id": 367400340,
    "id": 386549347,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU0OTM0Nw==",
    "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 68,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think exclusive use is really needed or enforced.",
    "created_at": "2020-03-02T17:50:32Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386549347",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386549347"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386549347"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386549347/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 292,
    "side": "RIGHT",
    "in_reply_to_id": 386039834
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386575643",
    "pull_request_review_id": 367433468,
    "id": 386575643,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3NTY0Mw==",
    "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 68,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "All tests pass if I put the assert there. That implies we're not testing mixed use. ",
    "created_at": "2020-03-02T18:40:35Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386575643",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386575643"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386575643"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386575643/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 292,
    "side": "RIGHT",
    "in_reply_to_id": 386039834
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386577777",
    "pull_request_review_id": 367436172,
    "id": 386577777,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3Nzc3Nw==",
    "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 68,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, it is currently not possible to have mixed use, but I don't think we should enforce non-mixed use. This should work regardless of mixed use and I don't want to make it such that mixed use is not an intended use case.",
    "created_at": "2020-03-02T18:44:35Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386577777",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386577777"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386577777"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386577777/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 292,
    "side": "RIGHT",
    "in_reply_to_id": 386039834
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386581770",
    "pull_request_review_id": 367440882,
    "id": 386581770,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU4MTc3MA==",
    "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+\n+        // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n+\n+        // Derive keys or fetch them from cache\n+        CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n+        if (read_cache) {\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;\n+                // Try to get the derivation parent\n+                if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                assert(m_derive == DeriveType::UNHARDENED);\n+                assert(parent.Derive(extkey, pos));",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 104,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Removed the asserts then.",
    "created_at": "2020-03-02T18:51:43Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386581770",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386581770"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386581770"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386581770/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 314,
    "side": "RIGHT",
    "in_reply_to_id": 386011800
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386581840",
    "pull_request_review_id": 367440958,
    "id": 386581840,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU4MTg0MA==",
    "diff_hunk": "@@ -291,35 +291,47 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n         // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n \n         // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n \n         // Derive keys or fetch them from cache\n         CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n         if (read_cache) {\n-            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;",
    "path": "src/script/descriptor.cpp",
    "position": 138,
    "original_position": 21,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "2f04cc4c50a9ef94f6e67d97ea552e7b6e03cec7",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-03-02T18:51:50Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386581840",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386581840"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386581840"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386581840/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 323,
    "original_line": 323,
    "side": "RIGHT",
    "in_reply_to_id": 386012519
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386581946",
    "pull_request_review_id": 367441089,
    "id": 386581946,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU4MTk0Ng==",
    "diff_hunk": "@@ -291,35 +291,47 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n         // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n \n         // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n \n         // Derive keys or fetch them from cache\n         CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n         if (read_cache) {\n-            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;\n+                // Try to get the derivation parent\n+                if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                assert(m_derive == DeriveType::UNHARDENED);",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 24,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "2f04cc4c50a9ef94f6e67d97ea552e7b6e03cec7",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-03-02T18:52:00Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386581946",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386581946"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386581946"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386581946/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 312,
    "side": "RIGHT",
    "in_reply_to_id": 386012626
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386582085",
    "pull_request_review_id": 367441254,
    "id": 386582085,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU4MjA4NQ==",
    "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+\n+        // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n+\n+        // Derive keys or fetch them from cache\n+        CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n+        if (read_cache) {\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;\n+                // Try to get the derivation parent\n+                if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                assert(m_derive == DeriveType::UNHARDENED);\n+                assert(parent.Derive(extkey, pos));\n+            }\n+        } else if (m_cached_xpub.pubkey.IsValid() && m_derive != DeriveType::HARDENED) {\n+            parent = extkey = m_cached_xpub;\n+            if (m_derive == DeriveType::UNHARDENED) assert(parent.Derive(extkey, pos));\n+        } else if (IsHardened()) {\n+            CExtKey xprv;\n+            if (!GetDerivedExtKey(arg, xprv)) return false;\n+            parent = xprv.Neuter();\n+            if (m_derive == DeriveType::UNHARDENED) assert(xprv.Derive(xprv, pos));\n+            if (m_derive == DeriveType::HARDENED) assert(xprv.Derive(xprv, pos | 0x80000000UL));\n+            extkey = xprv.Neuter();\n+        } else {\n+            for (auto entry : m_path) {\n+                assert(parent.Derive(parent, entry));\n             }\n+            extkey = parent;\n+            if (m_derive == DeriveType::UNHARDENED) assert(parent.Derive(extkey, pos));\n+            assert(m_derive != DeriveType::HARDENED);\n         }\n-        CKeyID keyid = m_extkey.pubkey.GetID();\n-        std::copy(keyid.begin(), keyid.begin() + sizeof(info.fingerprint), info.fingerprint);\n-        info.path = m_path;\n-        if (m_derive == DeriveType::UNHARDENED) info.path.push_back((uint32_t)pos);\n-        if (m_derive == DeriveType::HARDENED) info.path.push_back(((uint32_t)pos) | 0x80000000L);\n+        key = extkey.pubkey;\n+        if (!m_cached_xpub.pubkey.IsValid() && m_derive != DeriveType::HARDENED) m_cached_xpub = parent;\n+        if (write_cache && !read_cache) {\n+            write_cache->CacheExtPubKey(info_out, extkey, true);",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 132,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done. Removed `skip_unhardened`.",
    "created_at": "2020-03-02T18:52:14Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386582085",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386582085"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386582085"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386582085/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 337,
    "side": "RIGHT",
    "in_reply_to_id": 386040461
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387193334",
    "pull_request_review_id": 368198111,
    "id": 387193334,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE5MzMzNA==",
    "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 68,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe add the assert, with a comment above it along the lines of `// Mixed use of read_cache and write_cache should be possible, but is currently untested`? (or just the comment)",
    "created_at": "2020-03-03T17:56:08Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387193334",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387193334"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387193334"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387193334/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 292,
    "side": "RIGHT",
    "in_reply_to_id": 386039834
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387217912",
    "pull_request_review_id": 368229027,
    "id": 387217912,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIxNzkxMg==",
    "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 68,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I really don't think it is necessary to have an assert here.",
    "created_at": "2020-03-03T18:42:00Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387217912",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387217912"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387217912"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387217912/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 292,
    "side": "RIGHT",
    "in_reply_to_id": 386039834
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387229455",
    "pull_request_review_id": 368243286,
    "id": 387229455,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIyOTQ1NQ==",
    "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+\n+        // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n+\n+        // Derive keys or fetch them from cache\n+        CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n+        if (read_cache) {\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;\n+                // Try to get the derivation parent\n+                if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                assert(m_derive == DeriveType::UNHARDENED);\n+                assert(parent.Derive(extkey, pos));",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 104,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I've added asserts in that shouldn't have side effects.",
    "created_at": "2020-03-03T19:02:31Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387229455",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387229455"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387229455"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387229455/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 314,
    "side": "RIGHT",
    "in_reply_to_id": 386011800
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387301667",
    "pull_request_review_id": 368334535,
    "id": 387301667,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMwMTY2Nw==",
    "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 68,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's gotta be documented at least.",
    "created_at": "2020-03-03T21:23:40Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387301667",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387301667"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387301667"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387301667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 292,
    "side": "RIGHT",
    "in_reply_to_id": 386039834
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387351840",
    "pull_request_review_id": 368395418,
    "id": 387351840,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM1MTg0MA==",
    "diff_hunk": "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 68,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "384562930a48474f337224b0355b6fd08784c375",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I've mentioned it in the comment for `GetPubKey` in `PubkeyProvider`.",
    "created_at": "2020-03-03T23:14:15Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387351840",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387351840"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387351840"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387351840/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 292,
    "side": "RIGHT",
    "in_reply_to_id": 386039834
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387413284",
    "pull_request_review_id": 368462180,
    "id": 387413284,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQxMzI4NA==",
    "diff_hunk": "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {",
    "path": "src/script/keyorigin.h",
    "position": null,
    "original_position": 6,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You can probably write this more readably as:\r\n\r\n```\r\nif (std::lexicographic_compare(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint), std::end(b.fingerprint)) return true;\r\nif (std::lexicographic_compare(std::begin(b.fingerprint), std::end(b.fingerprint), std::begin(a.fingerprint), std::end(a.fingerprint)) return false;\r\n```\r\n\r\netc., which also avoids the magic 4 number.\r\n",
    "created_at": "2020-03-04T02:18:53Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387413284",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387413284"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387413284"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387413284/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 23,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387413876",
    "pull_request_review_id": 368462180,
    "id": 387413876,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQxMzg3Ng==",
    "diff_hunk": "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {\n+            if (a.fingerprint[i] < b.fingerprint[i]) return true;\n+            if (a.fingerprint[i] > b.fingerprint[i]) return false;\n+        }\n+        unsigned int min = std::min(a.path.size(), b.path.size());",
    "path": "src/script/keyorigin.h",
    "position": null,
    "original_position": 10,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Same here:\r\n\r\n```\r\nif (std::lexicographic_compare(std::begin(a.path), std::end(a.path), std::begin(b.path), std::end(b.path)) return true;\r\nif (std::lexicographic_compare(std::begin(b.path), std::end(b.path), std::begin(a.path), std::end(a.path)) return false;\r\n```\r\n\r\nWhich also avoids manually comparing lengths.",
    "created_at": "2020-03-04T02:21:33Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387413876",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387413876"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387413876"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387413876/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 27,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387416099",
    "pull_request_review_id": 368462180,
    "id": 387416099,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQxNjA5OQ==",
    "diff_hunk": "@@ -246,18 +246,19 @@ enum class DeriveType {\n /** An object representing a parsed extended public key in a descriptor. */\n class BIP32PubkeyProvider final : public PubkeyProvider\n {\n-    CExtPubKey m_extkey;\n+    // Root xpub, path, and final derivation step type being used, if any\n+    CExtPubKey m_root_extkey;",
    "path": "src/script/descriptor.cpp",
    "position": 59,
    "original_position": 6,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "169d5a1891190a2bb263205e693e8fdbf47a5bde",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's not necessarily the root, right? For example in `[012345678/0']xpub.../0/1` this variable would correspond to the 2nd level intermediary node.",
    "created_at": "2020-03-04T02:29:58Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387416099",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387416099"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387416099"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387416099/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 262,
    "original_line": 262,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387420972",
    "pull_request_review_id": 368462180,
    "id": 387420972,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQyMDk3Mg==",
    "diff_hunk": "@@ -13,6 +13,17 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 7,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Shouldn't this be a multimap? There can be collisions in the fingerprint + all subsequent path elements.",
    "created_at": "2020-03-04T02:48:08Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387420972",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387420972"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387420972"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387420972/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 19,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387421686",
    "pull_request_review_id": 368462180,
    "id": 387421686,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQyMTY4Ng==",
    "diff_hunk": "@@ -183,9 +187,9 @@ class OriginPubkeyProvider final : public PubkeyProvider\n \n public:\n     OriginPubkeyProvider(KeyOriginInfo info, std::unique_ptr<PubkeyProvider> provider) : m_origin(std::move(info)), m_provider(std::move(provider)) {}\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        if (!m_provider->GetPubKey(pos, arg, key, info)) return false;\n+        if (!m_provider->GetPubKey(pos, arg, key, info, read_cache, write_cache)) return false;",
    "path": "src/script/descriptor.cpp",
    "position": 35,
    "original_position": 23,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "c0dcb535372236a4ef0108a953a1ee175c0714f2",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Shouldn't the entry with overridden origin info be stored in the write cache here?",
    "created_at": "2020-03-04T02:49:48Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387421686",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387421686"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387421686"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387421686/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 200,
    "original_line": 200,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387426672",
    "pull_request_review_id": 368478266,
    "id": 387426672,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQyNjY3Mg==",
    "diff_hunk": "@@ -246,18 +246,19 @@ enum class DeriveType {\n /** An object representing a parsed extended public key in a descriptor. */\n class BIP32PubkeyProvider final : public PubkeyProvider\n {\n-    CExtPubKey m_extkey;\n+    // Root xpub, path, and final derivation step type being used, if any\n+    CExtPubKey m_root_extkey;",
    "path": "src/script/descriptor.cpp",
    "position": 59,
    "original_position": 6,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "169d5a1891190a2bb263205e693e8fdbf47a5bde",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sure, but it's easier to just call this the root and it's the root key that we do all our later derivation from.",
    "created_at": "2020-03-04T03:08:03Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387426672",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387426672"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387426672"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387426672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 262,
    "original_line": 262,
    "side": "RIGHT",
    "in_reply_to_id": 387416099
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387427656",
    "pull_request_review_id": 368479302,
    "id": 387427656,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQyNzY1Ng==",
    "diff_hunk": "@@ -13,6 +13,17 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 7,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think that's extremely unlikely. It would require several thousand xpubs in the descriptor itself. I think we have a few other places where we assume origin info don't colide.",
    "created_at": "2020-03-04T03:12:08Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387427656",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387427656"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387427656"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387427656/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 19,
    "side": "RIGHT",
    "in_reply_to_id": 387420972
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387428849",
    "pull_request_review_id": 368480691,
    "id": 387428849,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQyODg0OQ==",
    "diff_hunk": "@@ -183,9 +187,9 @@ class OriginPubkeyProvider final : public PubkeyProvider\n \n public:\n     OriginPubkeyProvider(KeyOriginInfo info, std::unique_ptr<PubkeyProvider> provider) : m_origin(std::move(info)), m_provider(std::move(provider)) {}\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        if (!m_provider->GetPubKey(pos, arg, key, info)) return false;\n+        if (!m_provider->GetPubKey(pos, arg, key, info, read_cache, write_cache)) return false;",
    "path": "src/script/descriptor.cpp",
    "position": 35,
    "original_position": 23,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "c0dcb535372236a4ef0108a953a1ee175c0714f2",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think it would be useful to do that since we aren't reading from the cache here.",
    "created_at": "2020-03-04T03:17:29Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387428849",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387428849"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387428849"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387428849/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 200,
    "original_line": 200,
    "side": "RIGHT",
    "in_reply_to_id": 387421686
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387429413",
    "pull_request_review_id": 368481460,
    "id": 387429413,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQyOTQxMw==",
    "diff_hunk": "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {",
    "path": "src/script/keyorigin.h",
    "position": null,
    "original_position": 6,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-03-04T03:20:10Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387429413",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387429413"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387429413"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387429413/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 23,
    "side": "RIGHT",
    "in_reply_to_id": 387413284
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387429433",
    "pull_request_review_id": 368481486,
    "id": 387429433,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQyOTQzMw==",
    "diff_hunk": "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {\n+            if (a.fingerprint[i] < b.fingerprint[i]) return true;\n+            if (a.fingerprint[i] > b.fingerprint[i]) return false;\n+        }\n+        unsigned int min = std::min(a.path.size(), b.path.size());",
    "path": "src/script/keyorigin.h",
    "position": null,
    "original_position": 10,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-03-04T03:20:15Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387429433",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387429433"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387429433"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387429433/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 27,
    "side": "RIGHT",
    "in_reply_to_id": 387413876
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387463282",
    "pull_request_review_id": 368522007,
    "id": 387463282,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2MzI4Mg==",
    "diff_hunk": "@@ -13,6 +13,17 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 7,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "With 93 entries there is a 1 in a million chance for a collision... I agree it's low, but it's not so low that it is negligible, and certainly not so low that one couldn't grind a descriptor to intentionally cause a collision.\r\n\r\nThis makes me wonder if using KeyOriginInfo as key is the right approach. In theory, it should be sufficient to just key by the index of the key expression in the descriptor, right? As the descriptor is constant, and the cache is specific to one descriptor, that would uniquely identify what the entry is for.",
    "created_at": "2020-03-04T06:01:30Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387463282",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387463282"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387463282"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387463282/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 19,
    "side": "RIGHT",
    "in_reply_to_id": 387420972
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387686744",
    "pull_request_review_id": 368803505,
    "id": 387686744,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY4Njc0NA==",
    "diff_hunk": "@@ -13,6 +13,17 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 7,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": ">index of the key expression in the descriptor\r\n\r\nthe what?",
    "created_at": "2020-03-04T14:06:02Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387686744",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387686744"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387686744"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387686744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 19,
    "side": "RIGHT",
    "in_reply_to_id": 387420972
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387761668",
    "pull_request_review_id": 368901814,
    "id": 387761668,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc2MTY2OA==",
    "diff_hunk": "@@ -13,6 +13,17 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 7,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Every descriptor consists of some functions that combine the output of key expressions (pubkeys, xpubs, origin info, derivation paths, ...). We can assign the successive key expressions numbers 0, 1, 2, ... and use those index positions as key in the map (which would then become a std::map<int, CExtPubKey>).",
    "created_at": "2020-03-04T15:57:05Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387761668",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387761668"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387761668"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387761668/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 19,
    "side": "RIGHT",
    "in_reply_to_id": 387420972
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387799544",
    "pull_request_review_id": 368950757,
    "id": 387799544,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc5OTU0NA==",
    "diff_hunk": "@@ -13,6 +13,17 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 7,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't really like using the position to index into the cache. It requires the `PubkeyProviders` to know their position within the descriptor when it really doesn't matter to them.\r\n\r\nIf this was changed to a multimap, how would we decide which xpub to use in the event that there is a collision?",
    "created_at": "2020-03-04T16:53:37Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387799544",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387799544"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387799544"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387799544/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 19,
    "side": "RIGHT",
    "in_reply_to_id": 387420972
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387814756",
    "pull_request_review_id": 368970489,
    "id": 387814756,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxNDc1Ng==",
    "diff_hunk": "@@ -13,6 +13,17 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 7,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think that's not a useful argument. If the current way the code works makes it hard to implement the right solution, the code should be changed. It seems to me that using position is the more concise, exact, and efficient way of doing it, and ignoring current code architecture it also seems the simplest, so I think it would be preferable.\n\nYou're right that a multimap wouldn't work. Using a KeyOriginInfo to identify the record is inherently lossy - a better solution is just not throwing it away at all.",
    "created_at": "2020-03-04T17:19:32Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387814756",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387814756"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387814756"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387814756/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 19,
    "side": "RIGHT",
    "in_reply_to_id": 387420972
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387815296",
    "pull_request_review_id": 368971181,
    "id": 387815296,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxNTI5Ng==",
    "diff_hunk": "@@ -13,6 +13,17 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 7,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "f2bcabc410d49efaaac6b1c779f7664845861950",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@achow101 well it requires the *user/builder* of the cache to know each pubkey position, at least, right?",
    "created_at": "2020-03-04T17:20:28Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387815296",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387815296"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r387815296"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387815296/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 19,
    "side": "RIGHT",
    "in_reply_to_id": 387420972
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388217325",
    "pull_request_review_id": 369469826,
    "id": 388217325,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxNzMyNQ==",
    "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 9,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "6a6f3f66734e5083cab3088b31e6803d4418cbad",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It would be more readable to map this the other way around:\r\n```cpp\r\n// Map key expression index to xpub\r\nusing ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\r\n\r\n// Map derivation index to ExtPubKeyMap\r\nstd::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs;\r\n```",
    "created_at": "2020-03-05T10:51:48Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388217325",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388217325"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388217325"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388217325/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 21,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388330036",
    "pull_request_review_id": 369616045,
    "id": 388330036,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMzMDAzNg==",
    "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 6,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Suggested reword:\r\n\r\n// Cache for a single descriptor's derived extended pubkeys",
    "created_at": "2020-03-05T14:32:29Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388330036",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388330036"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388330036"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388330036/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 18,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388331268",
    "pull_request_review_id": 369616045,
    "id": 388331268,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMzMTI2OA==",
    "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression indexes to parent xpubs\n+\n+public:\n+    /** Cache a parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheParentExtPubKey(uint32_t key_exp_pos, const CExtPubKey& xpub);\n+    /** Retrieve a cached parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 22,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "this doesn't appear to exist",
    "created_at": "2020-03-05T14:34:22Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388331268",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388331268"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388331268"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388331268/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 34,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388331595",
    "pull_request_review_id": 369616045,
    "id": 388331595,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMzMTU5NQ==",
    "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression indexes to parent xpubs\n+\n+public:\n+    /** Cache a parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheParentExtPubKey(uint32_t key_exp_pos, const CExtPubKey& xpub);\n+    /** Retrieve a cached parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 23,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@param[out] xpub The CExtPubKey to get from cache",
    "created_at": "2020-03-05T14:34:50Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388331595",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388331595"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388331595"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388331595/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 35,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388333320",
    "pull_request_review_id": 369616045,
    "id": 388333320,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMzMzMyMA==",
    "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression indexes to parent xpubs\n+\n+public:\n+    /** Cache a parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheParentExtPubKey(uint32_t key_exp_pos, const CExtPubKey& xpub);\n+    /** Retrieve a cached parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    bool GetCachedParentExtPubKey(uint32_t key_exp_pos, CExtPubKey& xpub) const;\n+    /** Cache an xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheDerivedExtPubKey(uint32_t key_exp_pos, uint32_t der_index, const CExtPubKey& xpub);\n+    /** Retrieve a cached xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 37,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`@param[out] xpub The CExtPubKey to get from cache`",
    "created_at": "2020-03-05T14:37:32Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388333320",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388333320"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388333320"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388333320/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 49,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388334656",
    "pull_request_review_id": 369616045,
    "id": 388334656,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMzNDY1Ng==",
    "diff_hunk": "@@ -150,10 +150,21 @@ typedef std::vector<uint32_t> KeyPath;\n /** Interface for public key objects in descriptors. */\n struct PubkeyProvider\n {\n+protected:\n+    //! Index of this key expression in the descriptor",
    "path": "src/script/descriptor.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "A quick example wouldn't hurt(I was confused), which would also show what index it starts at :)",
    "created_at": "2020-03-05T14:39:39Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388334656",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388334656"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388334656"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388334656/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 154,
    "original_line": 154,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388338598",
    "pull_request_review_id": 369616045,
    "id": 388338598,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMzODU5OA==",
    "diff_hunk": "@@ -150,10 +150,21 @@ typedef std::vector<uint32_t> KeyPath;\n /** Interface for public key objects in descriptors. */\n struct PubkeyProvider\n {\n+protected:\n+    //! Index of this key expression in the descriptor\n+    uint32_t m_exp_index;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "bikeshed: `m_expr_index` disallows my brain from guessing random words like `expect`, `expub`(??? thanks brain)",
    "created_at": "2020-03-05T14:45:41Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388338598",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388338598"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388338598"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388338598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 155,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388348343",
    "pull_request_review_id": 369616045,
    "id": 388348343,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM0ODM0Mw==",
    "diff_hunk": "@@ -272,37 +297,77 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     }\n \n public:\n-    BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n+    BIP32PubkeyProvider(uint32_t exp_index, const CExtPubKey& extkey, KeyPath path, DeriveType derive) : PubkeyProvider(exp_index), m_root_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key_out, KeyOriginInfo& child_info_out, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Info of parent of the to be derived pubkey\n+        KeyOriginInfo parent_info;\n+        CKeyID keyid = m_root_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(parent_info.fingerprint), parent_info.fingerprint);\n+        parent_info.path = m_path;\n+\n+        // Info of the derived key itself which is copied out upon successful completion\n+        KeyOriginInfo child_info_out_tmp = parent_info;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 127,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "apologies for re-litigating variable naming after making you change it once: it's either child or \"parent\" depending on the derivation, same with `child_extkey` and `child_info_out`, maybe just rename everything `final_*`?\r\n\r\nReviewing the latest changes made me realize my folly of naming it this way.",
    "created_at": "2020-03-05T15:00:07Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388348343",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388348343"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388348343"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388348343/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 312,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388354155",
    "pull_request_review_id": 369616045,
    "id": 388354155,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM1NDE1NQ==",
    "diff_hunk": "@@ -789,30 +835,30 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool per\n     assert(fpr_bytes.size() == 4);\n     std::copy(fpr_bytes.begin(), fpr_bytes.end(), info.fingerprint);\n     if (!ParseKeyPath(slash_split, info.path, error)) return nullptr;\n-    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out, error);\n+    auto provider = ParsePubkeyInner(key_exp_index, origin_split[1], permit_uncompressed, out, error);\n     if (!provider) return nullptr;\n-    return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(provider));\n+    return MakeUnique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n /** Parse a script in a particular context. */\n-std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)\n+std::unique_ptr<DescriptorImpl> ParseScript(uint32_t key_exp_index, Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)",
    "path": "src/script/descriptor.cpp",
    "position": 330,
    "original_position": 329,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In what situations would you like to start with non-0 index?",
    "created_at": "2020-03-05T15:08:12Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388354155",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388354155"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388354155"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388354155/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 845,
    "original_line": 845,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388399524",
    "pull_request_review_id": 369707778,
    "id": 388399524,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM5OTUyNA==",
    "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 9,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "6a6f3f66734e5083cab3088b31e6803d4418cbad",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think that's really inefficient. In most cases, that would mean a map for every single derived xpub, and that map just has one element. In the current mapping, it's only two maps.",
    "created_at": "2020-03-05T16:13:28Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388399524",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388399524"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388399524"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388399524/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 21,
    "side": "RIGHT",
    "in_reply_to_id": 388217325
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388400687",
    "pull_request_review_id": 369709341,
    "id": 388400687,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQwMDY4Nw==",
    "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 9,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "6a6f3f66734e5083cab3088b31e6803d4418cbad",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I found the code as-is completely understandable fwiw. Maybe suggest a renaming/rewording somewhere?",
    "created_at": "2020-03-05T16:15:14Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388400687",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388400687"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388400687"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388400687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 21,
    "side": "RIGHT",
    "in_reply_to_id": 388217325
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388401264",
    "pull_request_review_id": 369710119,
    "id": 388401264,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQwMTI2NA==",
    "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 9,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "6a6f3f66734e5083cab3088b31e6803d4418cbad",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "maybe just make it more visual: `map: key expression index -> key derivation index -> xpub`",
    "created_at": "2020-03-05T16:16:06Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388401264",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388401264"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388401264"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388401264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 21,
    "side": "RIGHT",
    "in_reply_to_id": 388217325
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388405043",
    "pull_request_review_id": 369715072,
    "id": 388405043,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQwNTA0Mw==",
    "diff_hunk": "@@ -789,30 +835,30 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool per\n     assert(fpr_bytes.size() == 4);\n     std::copy(fpr_bytes.begin(), fpr_bytes.end(), info.fingerprint);\n     if (!ParseKeyPath(slash_split, info.path, error)) return nullptr;\n-    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out, error);\n+    auto provider = ParsePubkeyInner(key_exp_index, origin_split[1], permit_uncompressed, out, error);\n     if (!provider) return nullptr;\n-    return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(provider));\n+    return MakeUnique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n /** Parse a script in a particular context. */\n-std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)\n+std::unique_ptr<DescriptorImpl> ParseScript(uint32_t key_exp_index, Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)",
    "path": "src/script/descriptor.cpp",
    "position": 330,
    "original_position": 329,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "None, but this is recursive.",
    "created_at": "2020-03-05T16:21:52Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388405043",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388405043"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388405043"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388405043/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 845,
    "original_line": 845,
    "side": "RIGHT",
    "in_reply_to_id": 388354155
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388406669",
    "pull_request_review_id": 369717151,
    "id": 388406669,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQwNjY2OQ==",
    "diff_hunk": "@@ -789,30 +835,30 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool per\n     assert(fpr_bytes.size() == 4);\n     std::copy(fpr_bytes.begin(), fpr_bytes.end(), info.fingerprint);\n     if (!ParseKeyPath(slash_split, info.path, error)) return nullptr;\n-    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out, error);\n+    auto provider = ParsePubkeyInner(key_exp_index, origin_split[1], permit_uncompressed, out, error);\n     if (!provider) return nullptr;\n-    return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(provider));\n+    return MakeUnique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n /** Parse a script in a particular context. */\n-std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)\n+std::unique_ptr<DescriptorImpl> ParseScript(uint32_t key_exp_index, Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)",
    "path": "src/script/descriptor.cpp",
    "position": 330,
    "original_position": 329,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah! Duh.",
    "created_at": "2020-03-05T16:24:19Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388406669",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388406669"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388406669"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388406669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 845,
    "original_line": 845,
    "side": "RIGHT",
    "in_reply_to_id": 388354155
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388423855",
    "pull_request_review_id": 369738919,
    "id": 388423855,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyMzg1NQ==",
    "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 9,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "6a6f3f66734e5083cab3088b31e6803d4418cbad",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I've clarified the comment.",
    "created_at": "2020-03-05T16:50:27Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388423855",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388423855"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388423855"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388423855/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 21,
    "side": "RIGHT",
    "in_reply_to_id": 388217325
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388423908",
    "pull_request_review_id": 369738993,
    "id": 388423908,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyMzkwOA==",
    "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 6,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-03-05T16:50:32Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388423908",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388423908"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388423908"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388423908/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 18,
    "side": "RIGHT",
    "in_reply_to_id": 388330036
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388423977",
    "pull_request_review_id": 369739076,
    "id": 388423977,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyMzk3Nw==",
    "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression indexes to parent xpubs\n+\n+public:\n+    /** Cache a parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheParentExtPubKey(uint32_t key_exp_pos, const CExtPubKey& xpub);\n+    /** Retrieve a cached parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 22,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed",
    "created_at": "2020-03-05T16:50:38Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388423977",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388423977"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388423977"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388423977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 34,
    "side": "RIGHT",
    "in_reply_to_id": 388331268
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424066",
    "pull_request_review_id": 369739177,
    "id": 388424066,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyNDA2Ng==",
    "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression indexes to parent xpubs\n+\n+public:\n+    /** Cache a parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheParentExtPubKey(uint32_t key_exp_pos, const CExtPubKey& xpub);\n+    /** Retrieve a cached parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 23,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-03-05T16:50:45Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388424066",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424066"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388424066"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 35,
    "side": "RIGHT",
    "in_reply_to_id": 388331595
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424132",
    "pull_request_review_id": 369739248,
    "id": 388424132,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyNDEzMg==",
    "diff_hunk": "@@ -13,6 +13,46 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression indexes to a map of derivation indexes to xpubs\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression indexes to parent xpubs\n+\n+public:\n+    /** Cache a parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheParentExtPubKey(uint32_t key_exp_pos, const CExtPubKey& xpub);\n+    /** Retrieve a cached parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    bool GetCachedParentExtPubKey(uint32_t key_exp_pos, CExtPubKey& xpub) const;\n+    /** Cache an xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheDerivedExtPubKey(uint32_t key_exp_pos, uint32_t der_index, const CExtPubKey& xpub);\n+    /** Retrieve a cached xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 37,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-03-05T16:50:50Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388424132",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424132"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388424132"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424132/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 49,
    "side": "RIGHT",
    "in_reply_to_id": 388333320
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424254",
    "pull_request_review_id": 369739402,
    "id": 388424254,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyNDI1NA==",
    "diff_hunk": "@@ -150,10 +150,21 @@ typedef std::vector<uint32_t> KeyPath;\n /** Interface for public key objects in descriptors. */\n struct PubkeyProvider\n {\n+protected:\n+    //! Index of this key expression in the descriptor",
    "path": "src/script/descriptor.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I added an example to the comment.",
    "created_at": "2020-03-05T16:51:00Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388424254",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424254"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388424254"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424254/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 154,
    "original_line": 154,
    "side": "RIGHT",
    "in_reply_to_id": 388334656
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424314",
    "pull_request_review_id": 369739492,
    "id": 388424314,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyNDMxNA==",
    "diff_hunk": "@@ -150,10 +150,21 @@ typedef std::vector<uint32_t> KeyPath;\n /** Interface for public key objects in descriptors. */\n struct PubkeyProvider\n {\n+protected:\n+    //! Index of this key expression in the descriptor\n+    uint32_t m_exp_index;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-03-05T16:51:06Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388424314",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424314"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388424314"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424314/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 155,
    "side": "RIGHT",
    "in_reply_to_id": 388338598
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424370",
    "pull_request_review_id": 369739564,
    "id": 388424370,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyNDM3MA==",
    "diff_hunk": "@@ -272,37 +297,77 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     }\n \n public:\n-    BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n+    BIP32PubkeyProvider(uint32_t exp_index, const CExtPubKey& extkey, KeyPath path, DeriveType derive) : PubkeyProvider(exp_index), m_root_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key_out, KeyOriginInfo& child_info_out, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Info of parent of the to be derived pubkey\n+        KeyOriginInfo parent_info;\n+        CKeyID keyid = m_root_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(parent_info.fingerprint), parent_info.fingerprint);\n+        parent_info.path = m_path;\n+\n+        // Info of the derived key itself which is copied out upon successful completion\n+        KeyOriginInfo child_info_out_tmp = parent_info;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 127,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-03-05T16:51:12Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388424370",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424370"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388424370"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388424370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 312,
    "side": "RIGHT",
    "in_reply_to_id": 388348343
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388462936",
    "pull_request_review_id": 369788886,
    "id": 388462936,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ2MjkzNg==",
    "diff_hunk": "@@ -272,37 +298,77 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     }\n \n public:\n-    BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n+    BIP32PubkeyProvider(uint32_t exp_index, const CExtPubKey& extkey, KeyPath path, DeriveType derive) : PubkeyProvider(exp_index), m_root_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key_out, KeyOriginInfo& final_info_out, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Info of parent of the to be derived pubkey\n+        KeyOriginInfo parent_info;\n+        CKeyID keyid = m_root_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(parent_info.fingerprint), parent_info.fingerprint);\n+        parent_info.path = m_path;\n+\n+        // Info of the derived key itself which is copied out upon successful completion\n+        KeyOriginInfo final_info_out_tmp = parent_info;\n+        if (m_derive == DeriveType::UNHARDENED) final_info_out_tmp.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) final_info_out_tmp.path.push_back(((uint32_t)pos) | 0x80000000L);\n+\n+        // Derive keys or fetch them from cache\n+        CExtPubKey child_extkey = m_root_extkey;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 133,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "196c9765eaa88120964cfb1a81362f37a24ced9b",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Was also thinking changing this to `final_extkey` as well for same reason.",
    "created_at": "2020-03-05T17:56:53Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388462936",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388462936"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388462936"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388462936/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 318,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388476524",
    "pull_request_review_id": 369806127,
    "id": 388476524,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ3NjUyNA==",
    "diff_hunk": "@@ -272,37 +298,77 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     }\n \n public:\n-    BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n+    BIP32PubkeyProvider(uint32_t exp_index, const CExtPubKey& extkey, KeyPath path, DeriveType derive) : PubkeyProvider(exp_index), m_root_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key_out, KeyOriginInfo& final_info_out, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Info of parent of the to be derived pubkey\n+        KeyOriginInfo parent_info;\n+        CKeyID keyid = m_root_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(parent_info.fingerprint), parent_info.fingerprint);\n+        parent_info.path = m_path;\n+\n+        // Info of the derived key itself which is copied out upon successful completion\n+        KeyOriginInfo final_info_out_tmp = parent_info;\n+        if (m_derive == DeriveType::UNHARDENED) final_info_out_tmp.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) final_info_out_tmp.path.push_back(((uint32_t)pos) | 0x80000000L);\n+\n+        // Derive keys or fetch them from cache\n+        CExtPubKey child_extkey = m_root_extkey;",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 133,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "196c9765eaa88120964cfb1a81362f37a24ced9b",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-03-05T18:21:56Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388476524",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388476524"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388476524"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388476524/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 318,
    "side": "RIGHT",
    "in_reply_to_id": 388462936
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388848544",
    "pull_request_review_id": 370251656,
    "id": 388848544,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0ODU0NA==",
    "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 6,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit, to get doxygen to pick this up:\r\n```cpp\r\n/** Cache for single descriptor's derived extended pubkeys */\r\n```",
    "created_at": "2020-03-06T11:19:02Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388848544",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388848544"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388848544"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388848544/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 18,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388848732",
    "pull_request_review_id": 370251656,
    "id": 388848732,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0ODczMg==",
    "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression index -> map of (key derivation index -> xpub)",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 9,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```cpp\r\n/** Map key expression index -> map of (key derivation index -> xpub) */\r\n```",
    "created_at": "2020-03-06T11:19:29Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388848732",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388848732"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388848732"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388848732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 21,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388849029",
    "pull_request_review_id": 370251656,
    "id": 388849029,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0OTAyOQ==",
    "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression index -> map of (key derivation index -> xpub)\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression index -> parent xpub",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 10,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```cpp\r\n/** Map key expression index -> parent xpub */\r\n```",
    "created_at": "2020-03-06T11:20:08Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388849029",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388849029"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388849029"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388849029/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 22,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388850443",
    "pull_request_review_id": 370251656,
    "id": 388850443,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg1MDQ0Mw==",
    "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression index -> map of (key derivation index -> xpub)\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression index -> parent xpub\n+\n+public:\n+    /** Cache a parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheParentExtPubKey(uint32_t key_exp_pos, const CExtPubKey& xpub);\n+    /** Retrieve a cached parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to get from cache\n+     */\n+    bool GetCachedParentExtPubKey(uint32_t key_exp_pos, CExtPubKey& xpub) const;\n+    /** Cache an xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheDerivedExtPubKey(uint32_t key_exp_pos, uint32_t der_index, const CExtPubKey& xpub);\n+    /** Retrieve a cached xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to get from cache\n+     */\n+    bool GetCachedDerivedExtPubKey(uint32_t key_exp_pos, uint32_t der_index, CExtPubKey& xpub) const;\n+\n+    const ExtPubKeyMap GetCachedParentExtPubKeys() const;",
    "path": "src/script/descriptor.h",
    "position": 43,
    "original_position": 40,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```cpp\r\n    /** Retrieve all cached parent xpubs */\r\n```",
    "created_at": "2020-03-06T11:23:27Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388850443",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388850443"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388850443"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388850443/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 55,
    "original_line": 55,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388850544",
    "pull_request_review_id": 370251656,
    "id": 388850544,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg1MDU0NA==",
    "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression index -> map of (key derivation index -> xpub)\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression index -> parent xpub\n+\n+public:\n+    /** Cache a parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheParentExtPubKey(uint32_t key_exp_pos, const CExtPubKey& xpub);\n+    /** Retrieve a cached parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to get from cache\n+     */\n+    bool GetCachedParentExtPubKey(uint32_t key_exp_pos, CExtPubKey& xpub) const;\n+    /** Cache an xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheDerivedExtPubKey(uint32_t key_exp_pos, uint32_t der_index, const CExtPubKey& xpub);\n+    /** Retrieve a cached xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to get from cache\n+     */\n+    bool GetCachedDerivedExtPubKey(uint32_t key_exp_pos, uint32_t der_index, CExtPubKey& xpub) const;\n+\n+    const ExtPubKeyMap GetCachedParentExtPubKeys() const;\n+    const std::unordered_map<uint32_t, ExtPubKeyMap> GetCachedDerivedExtPubKeys() const;",
    "path": "src/script/descriptor.h",
    "position": 45,
    "original_position": 41,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```cpp\r\n    /** Retrieve all cached final xpubs */\r\n```",
    "created_at": "2020-03-06T11:23:40Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388850544",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388850544"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388850544"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388850544/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 57,
    "original_line": 57,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388865999",
    "pull_request_review_id": 370251656,
    "id": 388865999,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg2NTk5OQ==",
    "diff_hunk": "@@ -789,30 +835,30 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool per\n     assert(fpr_bytes.size() == 4);\n     std::copy(fpr_bytes.begin(), fpr_bytes.end(), info.fingerprint);\n     if (!ParseKeyPath(slash_split, info.path, error)) return nullptr;\n-    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out, error);\n+    auto provider = ParsePubkeyInner(key_exp_index, origin_split[1], permit_uncompressed, out, error);\n     if (!provider) return nullptr;\n-    return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(provider));\n+    return MakeUnique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n /** Parse a script in a particular context. */\n-std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)\n+std::unique_ptr<DescriptorImpl> ParseScript(uint32_t key_exp_index, Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)",
    "path": "src/script/descriptor.cpp",
    "position": 330,
    "original_position": 329,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Only `multi` and `sortedmulti` can cause `key_exp_index` to be non-zero, and those don't recurse. You could make `uint32_t key_exp_index` local to just that if branch, and hardcode `0` in all other calls to `ParsePubkey(0`.\r\n\r\nHowever with an eye on miniscript, we do expect to support scripts inside `threshold`, so might as well be ready for that. ",
    "created_at": "2020-03-06T12:03:24Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388865999",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388865999"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388865999"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388865999/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 845,
    "original_line": 845,
    "side": "RIGHT",
    "in_reply_to_id": 388354155
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388867305",
    "pull_request_review_id": 370251656,
    "id": 388867305,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg2NzMwNQ==",
    "diff_hunk": "@@ -246,18 +246,19 @@ enum class DeriveType {\n /** An object representing a parsed extended public key in a descriptor. */\n class BIP32PubkeyProvider final : public PubkeyProvider\n {\n-    CExtPubKey m_extkey;\n+    // Root xpub, path, and final derivation step type being used, if any\n+    CExtPubKey m_root_extkey;",
    "path": "src/script/descriptor.cpp",
    "position": 59,
    "original_position": 6,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "169d5a1891190a2bb263205e693e8fdbf47a5bde",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`m_base_extkey ` could be a nice alternative",
    "created_at": "2020-03-06T12:06:53Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388867305",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388867305"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388867305"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388867305/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 262,
    "original_line": 262,
    "side": "RIGHT",
    "in_reply_to_id": 387416099
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388900093",
    "pull_request_review_id": 370251656,
    "id": 388900093,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkwMDA5Mw==",
    "diff_hunk": "@@ -345,10 +345,11 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         key_out = final_extkey.pubkey;\n \n         if (write_cache) {\n-            write_cache->CacheDerivedExtPubKey(m_expr_index, pos, final_extkey);\n             // Only cache parent if there is any unhardened derivation\n             if (m_derive != DeriveType::HARDENED) {\n                 write_cache->CacheParentExtPubKey(m_expr_index, parent_extkey);\n+            } else if (child_info_out.path.size() > 0) {",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 8,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e4262c45655b4f79ddfd9905db66dc44b8f5148c",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "e4262c45655b4f79ddfd9905db66dc44b8f5148c doesn't compile (`child_info_out`  is  renamed in In d7b241109f74b3c1c407929930e7d035cdcf60c9 `to `child_info_out`)",
    "created_at": "2020-03-06T13:25:16Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388900093",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388900093"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r388900093"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388900093/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 351,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389193895",
    "pull_request_review_id": 370687757,
    "id": 389193895,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE5Mzg5NQ==",
    "diff_hunk": "@@ -246,18 +246,19 @@ enum class DeriveType {\n /** An object representing a parsed extended public key in a descriptor. */\n class BIP32PubkeyProvider final : public PubkeyProvider\n {\n-    CExtPubKey m_extkey;\n+    // Root xpub, path, and final derivation step type being used, if any\n+    CExtPubKey m_root_extkey;",
    "path": "src/script/descriptor.cpp",
    "position": 59,
    "original_position": 6,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "169d5a1891190a2bb263205e693e8fdbf47a5bde",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think there's enough bikeshedding in this pr :/",
    "created_at": "2020-03-06T23:36:01Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389193895",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389193895"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389193895"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389193895/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 262,
    "original_line": 262,
    "side": "RIGHT",
    "in_reply_to_id": 387416099
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389194107",
    "pull_request_review_id": 370688015,
    "id": 389194107,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE5NDEwNw==",
    "diff_hunk": "@@ -789,30 +835,30 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool per\n     assert(fpr_bytes.size() == 4);\n     std::copy(fpr_bytes.begin(), fpr_bytes.end(), info.fingerprint);\n     if (!ParseKeyPath(slash_split, info.path, error)) return nullptr;\n-    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out, error);\n+    auto provider = ParsePubkeyInner(key_exp_index, origin_split[1], permit_uncompressed, out, error);\n     if (!provider) return nullptr;\n-    return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(provider));\n+    return MakeUnique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n /** Parse a script in a particular context. */\n-std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)\n+std::unique_ptr<DescriptorImpl> ParseScript(uint32_t key_exp_index, Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)",
    "path": "src/script/descriptor.cpp",
    "position": 330,
    "original_position": 329,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e7e8333fbb67cf18d7de8603e90deccedfd23a81",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I was intending for this to be generic so that it would work with future changes to descriptors, including miniscript. So I think I will leave it as is.",
    "created_at": "2020-03-06T23:37:02Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389194107",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389194107"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389194107"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389194107/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 845,
    "original_line": 845,
    "side": "RIGHT",
    "in_reply_to_id": 388354155
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259344",
    "pull_request_review_id": 370747495,
    "id": 389259344,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTM0NA==",
    "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 6,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-03-07T14:44:34Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259344",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259344"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259344"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 18,
    "side": "RIGHT",
    "in_reply_to_id": 388848544
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259351",
    "pull_request_review_id": 370747502,
    "id": 389259351,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTM1MQ==",
    "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression index -> map of (key derivation index -> xpub)",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 9,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-03-07T14:44:41Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259351",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259351"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259351"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259351/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 21,
    "side": "RIGHT",
    "in_reply_to_id": 388848732
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259357",
    "pull_request_review_id": 370747509,
    "id": 389259357,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTM1Nw==",
    "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression index -> map of (key derivation index -> xpub)\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression index -> parent xpub",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 10,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-03-07T14:44:47Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259357",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259357"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259357"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259357/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 22,
    "side": "RIGHT",
    "in_reply_to_id": 388849029
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259363",
    "pull_request_review_id": 370747515,
    "id": 389259363,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTM2Mw==",
    "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression index -> map of (key derivation index -> xpub)\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression index -> parent xpub\n+\n+public:\n+    /** Cache a parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheParentExtPubKey(uint32_t key_exp_pos, const CExtPubKey& xpub);\n+    /** Retrieve a cached parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to get from cache\n+     */\n+    bool GetCachedParentExtPubKey(uint32_t key_exp_pos, CExtPubKey& xpub) const;\n+    /** Cache an xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheDerivedExtPubKey(uint32_t key_exp_pos, uint32_t der_index, const CExtPubKey& xpub);\n+    /** Retrieve a cached xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to get from cache\n+     */\n+    bool GetCachedDerivedExtPubKey(uint32_t key_exp_pos, uint32_t der_index, CExtPubKey& xpub) const;\n+\n+    const ExtPubKeyMap GetCachedParentExtPubKeys() const;",
    "path": "src/script/descriptor.h",
    "position": 43,
    "original_position": 40,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-03-07T14:44:52Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259363",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259363"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259363"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259363/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 55,
    "original_line": 55,
    "side": "RIGHT",
    "in_reply_to_id": 388850443
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259367",
    "pull_request_review_id": 370747522,
    "id": 389259367,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTM2Nw==",
    "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression index -> map of (key derivation index -> xpub)\n+    ExtPubKeyMap m_parent_xpubs; // Map key expression index -> parent xpub\n+\n+public:\n+    /** Cache a parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheParentExtPubKey(uint32_t key_exp_pos, const CExtPubKey& xpub);\n+    /** Retrieve a cached parent xpub\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] xpub The CExtPubKey to get from cache\n+     */\n+    bool GetCachedParentExtPubKey(uint32_t key_exp_pos, CExtPubKey& xpub) const;\n+    /** Cache an xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to cache\n+     */\n+    void CacheDerivedExtPubKey(uint32_t key_exp_pos, uint32_t der_index, const CExtPubKey& xpub);\n+    /** Retrieve a cached xpub derived at an index\n+     *\n+     * @param[in] key_exp_pos Position of the key expression within the descriptor\n+     * @param[in] der_index Derivation index of the xpub\n+     * @param[in] xpub The CExtPubKey to get from cache\n+     */\n+    bool GetCachedDerivedExtPubKey(uint32_t key_exp_pos, uint32_t der_index, CExtPubKey& xpub) const;\n+\n+    const ExtPubKeyMap GetCachedParentExtPubKeys() const;\n+    const std::unordered_map<uint32_t, ExtPubKeyMap> GetCachedDerivedExtPubKeys() const;",
    "path": "src/script/descriptor.h",
    "position": 45,
    "original_position": 41,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-03-07T14:44:58Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259367",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259367"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259367"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259367/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 57,
    "original_line": 57,
    "side": "RIGHT",
    "in_reply_to_id": 388850544
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259375",
    "pull_request_review_id": 370747527,
    "id": 389259375,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTM3NQ==",
    "diff_hunk": "@@ -345,10 +345,11 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         key_out = final_extkey.pubkey;\n \n         if (write_cache) {\n-            write_cache->CacheDerivedExtPubKey(m_expr_index, pos, final_extkey);\n             // Only cache parent if there is any unhardened derivation\n             if (m_derive != DeriveType::HARDENED) {\n                 write_cache->CacheParentExtPubKey(m_expr_index, parent_extkey);\n+            } else if (child_info_out.path.size() > 0) {",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 8,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "e4262c45655b4f79ddfd9905db66dc44b8f5148c",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed",
    "created_at": "2020-03-07T14:45:06Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259375",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259375"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259375"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259375/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 351,
    "side": "RIGHT",
    "in_reply_to_id": 388900093
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259898",
    "pull_request_review_id": 370747887,
    "id": 389259898,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTg5OA==",
    "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression index -> map of (key derivation index -> xpub)",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 9,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It needs to be on the line above, otherwise this happens:\r\n<img width=\"808\" alt=\"Schermafbeelding 2020-03-07 om 15 53 36\" src=\"https://user-images.githubusercontent.com/10217/76145663-d47e7780-608b-11ea-8f09-8d4399a0d315.png\">\r\n",
    "created_at": "2020-03-07T14:53:50Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259898",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259898"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389259898"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389259898/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 21,
    "side": "RIGHT",
    "in_reply_to_id": 388848732
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389261149",
    "pull_request_review_id": 370748815,
    "id": 389261149,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MTE0OQ==",
    "diff_hunk": "@@ -13,6 +13,45 @@\n \n #include <vector>\n \n+using ExtPubKeyMap = std::unordered_map<uint32_t, CExtPubKey>;\n+\n+// Cache for single descriptor's derived extended pubkeys\n+class DescriptorCache {\n+private:\n+    std::unordered_map<uint32_t, ExtPubKeyMap> m_derived_xpubs; // Map key expression index -> map of (key derivation index -> xpub)",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 9,
    "commit_id": "09e25071f40c564af08a1386c39c4f2d8eb484b6",
    "original_commit_id": "a4a887fa065fef8fdb6d88b99d2577b56120f920",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed",
    "created_at": "2020-03-07T15:13:59Z",
    "updated_at": "2020-03-07T15:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389261149",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389261149"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r389261149"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389261149/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 21,
    "side": "RIGHT",
    "in_reply_to_id": 388848732
  }
]