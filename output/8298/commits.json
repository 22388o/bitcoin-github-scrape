[
  {
    "sha": "20f3cd75f6af8f75de943fef43b4b7769746f732",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMGYzY2Q3NWY2YWY4Zjc1ZGU5NDNmZWY0M2I0Yjc3Njk3NDZmNzMy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-07-01T11:22:52Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-07-01T11:26:01Z"
      },
      "message": "wallet: Revert input selection post-pruning\n\nThis reverts PR #4906, \"Coinselection prunes extraneous inputs from\nApproximateBestSubset\".\n\nApparently the previous behavior of slightly over-estimating the set of\ninputs was useful in cleaning up UTXOs.\n\nSee also #7664, #7657, as well as 2016-07-01 discussion on #bitcoin-core-dev IRC.",
      "tree": {
        "sha": "d53ff4d012cf5f2b4535a41fc27a3a10bebe606d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d53ff4d012cf5f2b4535a41fc27a3a10bebe606d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/20f3cd75f6af8f75de943fef43b4b7769746f732",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20f3cd75f6af8f75de943fef43b4b7769746f732",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/20f3cd75f6af8f75de943fef43b4b7769746f732",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20f3cd75f6af8f75de943fef43b4b7769746f732/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da50997a3ee7d3b73180c71cd454580af49c2244",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da50997a3ee7d3b73180c71cd454580af49c2244",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da50997a3ee7d3b73180c71cd454580af49c2244"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 0,
      "deletions": 24
    },
    "files": [
      {
        "sha": "c6c5058984c00f25d491b8c647df3e177a1c85ba",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20f3cd75f6af8f75de943fef43b4b7769746f732/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20f3cd75f6af8f75de943fef43b4b7769746f732/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=20f3cd75f6af8f75de943fef43b4b7769746f732",
        "patch": "@@ -349,20 +349,6 @@ BOOST_AUTO_TEST_CASE(ApproximateBestSubset)\n     BOOST_CHECK(wallet.SelectCoinsMinConf(1003 * COIN, 1, 6, vCoins, setCoinsRet, nValueRet));\n     BOOST_CHECK_EQUAL(nValueRet, 1003 * COIN);\n     BOOST_CHECK_EQUAL(setCoinsRet.size(), 2U);\n-\n-    empty_wallet();\n-\n-    // Test trimming\n-    for (int i = 0; i < 100; i++)\n-        add_coin(10 * COIN);\n-    for (int i = 0; i < 100; i++)\n-        add_coin(1000 * COIN);\n-\n-    BOOST_CHECK(wallet.SelectCoinsMinConf(100001 * COIN, 1, 6, vCoins, setCoinsRet, nValueRet));\n-    // We need all 100 larger coins and exactly one small coin.\n-    // Superfluous small coins must be trimmed from the set:\n-    BOOST_CHECK_EQUAL(nValueRet, 100010 * COIN);\n-    BOOST_CHECK_EQUAL(setCoinsRet.size(), 101);\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "a0095ebd92e760c0599ef34de0c13bb9fe7bc39b",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20f3cd75f6af8f75de943fef43b4b7769746f732/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20f3cd75f6af8f75de943fef43b4b7769746f732/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=20f3cd75f6af8f75de943fef43b4b7769746f732",
        "patch": "@@ -1879,16 +1879,6 @@ static void ApproximateBestSubset(vector<pair<CAmount, pair<const CWalletTx*,uns\n             }\n         }\n     }\n-\n-    //Reduces the approximate best subset by removing any inputs that are smaller than the surplus of nTotal beyond nTargetValue. \n-    for (unsigned int i = 0; i < vValue.size(); i++)\n-    {                        \n-        if (vfBest[i] && (nBest - vValue[i].first) >= nTargetValue )\n-        {\n-            vfBest[i] = false;\n-            nBest -= vValue[i].first;\n-        }\n-    }\n }\n \n bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, int nConfMine, int nConfTheirs, vector<COutput> vCoins,"
      }
    ]
  }
]