[
  {
    "sha": "efe700c28c4663f7a8d5630441a28fabf61ddce7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZmU3MDBjMjhjNDY2M2Y3YThkNTYzMDQ0MWEyOGZhYmY2MWRkY2U3",
    "commit": {
      "author": {
        "name": "Nicolas Benoit",
        "email": "nbenoit@tuxfamily.org",
        "date": "2015-02-24T17:32:34Z"
      },
      "committer": {
        "name": "Nicolas Benoit",
        "email": "nbenoit@tuxfamily.org",
        "date": "2015-02-24T17:32:34Z"
      },
      "message": "Replaced current function names with __func__ in LogPrintf() calls.",
      "tree": {
        "sha": "b68ef1d74257dc5bc8b82af87ba29bb03bcca0a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b68ef1d74257dc5bc8b82af87ba29bb03bcca0a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/efe700c28c4663f7a8d5630441a28fabf61ddce7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/efe700c28c4663f7a8d5630441a28fabf61ddce7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/efe700c28c4663f7a8d5630441a28fabf61ddce7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/efe700c28c4663f7a8d5630441a28fabf61ddce7/comments",
    "author": {
      "login": "nbenoit",
      "id": 7476289,
      "node_id": "MDQ6VXNlcjc0NzYyODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7476289?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nbenoit",
      "html_url": "https://github.com/nbenoit",
      "followers_url": "https://api.github.com/users/nbenoit/followers",
      "following_url": "https://api.github.com/users/nbenoit/following{/other_user}",
      "gists_url": "https://api.github.com/users/nbenoit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nbenoit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nbenoit/subscriptions",
      "organizations_url": "https://api.github.com/users/nbenoit/orgs",
      "repos_url": "https://api.github.com/users/nbenoit/repos",
      "events_url": "https://api.github.com/users/nbenoit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nbenoit/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "nbenoit",
      "id": 7476289,
      "node_id": "MDQ6VXNlcjc0NzYyODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7476289?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nbenoit",
      "html_url": "https://github.com/nbenoit",
      "followers_url": "https://api.github.com/users/nbenoit/followers",
      "following_url": "https://api.github.com/users/nbenoit/following{/other_user}",
      "gists_url": "https://api.github.com/users/nbenoit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nbenoit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nbenoit/subscriptions",
      "organizations_url": "https://api.github.com/users/nbenoit/orgs",
      "repos_url": "https://api.github.com/users/nbenoit/repos",
      "events_url": "https://api.github.com/users/nbenoit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nbenoit/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aaba10f275059cd762c1f07597aa5efb24176cdd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aaba10f275059cd762c1f07597aa5efb24176cdd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aaba10f275059cd762c1f07597aa5efb24176cdd"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 17,
      "deletions": 17
    },
    "files": [
      {
        "sha": "b7a4c9b99861cfded76bb240edaaaa5d9af268bd",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/efe700c28c4663f7a8d5630441a28fabf61ddce7/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/efe700c28c4663f7a8d5630441a28fabf61ddce7/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=efe700c28c4663f7a8d5630441a28fabf61ddce7",
        "patch": "@@ -1283,14 +1283,14 @@ void CheckForkWarningConditions()\n         }\n         if (pindexBestForkTip && pindexBestForkBase)\n         {\n-            LogPrintf(\"CheckForkWarningConditions: Warning: Large valid fork found\\n  forking the chain at height %d (%s)\\n  lasting to height %d (%s).\\nChain state database corruption likely.\\n\",\n+            LogPrintf(\"%s: Warning: Large valid fork found\\n  forking the chain at height %d (%s)\\n  lasting to height %d (%s).\\nChain state database corruption likely.\\n\", __func__,\n                    pindexBestForkBase->nHeight, pindexBestForkBase->phashBlock->ToString(),\n                    pindexBestForkTip->nHeight, pindexBestForkTip->phashBlock->ToString());\n             fLargeWorkForkFound = true;\n         }\n         else\n         {\n-            LogPrintf(\"CheckForkWarningConditions: Warning: Found invalid chain at least ~6 blocks longer than our best chain.\\nChain state database corruption likely.\\n\");\n+            LogPrintf(\"%s: Warning: Found invalid chain at least ~6 blocks longer than our best chain.\\nChain state database corruption likely.\\n\", __func__);\n             fLargeWorkInvalidChainFound = true;\n         }\n     }\n@@ -1348,22 +1348,22 @@ void Misbehaving(NodeId pnode, int howmuch)\n     int banscore = GetArg(\"-banscore\", 100);\n     if (state->nMisbehavior >= banscore && state->nMisbehavior - howmuch < banscore)\n     {\n-        LogPrintf(\"Misbehaving: %s (%d -> %d) BAN THRESHOLD EXCEEDED\\n\", state->name, state->nMisbehavior-howmuch, state->nMisbehavior);\n+        LogPrintf(\"%s: %s (%d -> %d) BAN THRESHOLD EXCEEDED\\n\", __func__, state->name, state->nMisbehavior-howmuch, state->nMisbehavior);\n         state->fShouldBan = true;\n     } else\n-        LogPrintf(\"Misbehaving: %s (%d -> %d)\\n\", state->name, state->nMisbehavior-howmuch, state->nMisbehavior);\n+        LogPrintf(\"%s: %s (%d -> %d)\\n\", __func__, state->name, state->nMisbehavior-howmuch, state->nMisbehavior);\n }\n \n void static InvalidChainFound(CBlockIndex* pindexNew)\n {\n     if (!pindexBestInvalid || pindexNew->nChainWork > pindexBestInvalid->nChainWork)\n         pindexBestInvalid = pindexNew;\n \n-    LogPrintf(\"InvalidChainFound: invalid block=%s  height=%d  log2_work=%.8g  date=%s\\n\",\n+    LogPrintf(\"%s: invalid block=%s  height=%d  log2_work=%.8g  date=%s\\n\", __func__,\n       pindexNew->GetBlockHash().ToString(), pindexNew->nHeight,\n       log(pindexNew->nChainWork.getdouble())/log(2.0), DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\",\n       pindexNew->GetBlockTime()));\n-    LogPrintf(\"InvalidChainFound:  current best=%s  height=%d  log2_work=%.8g  date=%s\\n\",\n+    LogPrintf(\"%s:  current best=%s  height=%d  log2_work=%.8g  date=%s\\n\", __func__,\n       chainActive.Tip()->GetBlockHash().ToString(), chainActive.Height(), log(chainActive.Tip()->nChainWork.getdouble())/log(2.0),\n       DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", chainActive.Tip()->GetBlockTime()));\n     CheckForkWarningConditions();\n@@ -1970,7 +1970,7 @@ void static UpdateTip(CBlockIndex *pindexNew) {\n     nTimeBestReceived = GetTime();\n     mempool.AddTransactionsUpdated(1);\n \n-    LogPrintf(\"UpdateTip: new best=%s  height=%d  log2_work=%.8g  tx=%lu  date=%s progress=%f  cache=%u\\n\",\n+    LogPrintf(\"%s: new best=%s  height=%d  log2_work=%.8g  tx=%lu  date=%s progress=%f  cache=%u\\n\", __func__,\n       chainActive.Tip()->GetBlockHash().ToString(), chainActive.Height(), log(chainActive.Tip()->nChainWork.getdouble())/log(2.0), (unsigned long)chainActive.Tip()->nChainTx,\n       DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", chainActive.Tip()->GetBlockTime()),\n       Checkpoints::GuessVerificationProgress(chainActive.Tip()), (unsigned int)pcoinsTip->GetCacheSize());\n@@ -1990,7 +1990,7 @@ void static UpdateTip(CBlockIndex *pindexNew) {\n             pindex = pindex->pprev;\n         }\n         if (nUpgraded > 0)\n-            LogPrintf(\"SetBestChain: %d of last 100 blocks above version %d\\n\", nUpgraded, (int)CBlock::CURRENT_VERSION);\n+            LogPrintf(\"%s: %d of last 100 blocks above version %d\\n\", __func__, nUpgraded, (int)CBlock::CURRENT_VERSION);\n         if (nUpgraded > 100/2)\n         {\n             // strMiscWarning is read by GetWarnings(), called by Qt and the JSON-RPC code to warn the user:\n@@ -2977,7 +2977,7 @@ bool static LoadBlockIndexDB()\n \n     // Check whether we have a transaction index\n     pblocktree->ReadFlag(\"txindex\", fTxIndex);\n-    LogPrintf(\"LoadBlockIndexDB(): transaction index %s\\n\", fTxIndex ? \"enabled\" : \"disabled\");\n+    LogPrintf(\"%s(): transaction index %s\\n\", __func__, fTxIndex ? \"enabled\" : \"disabled\");\n \n     // Load pointer to end of best chain\n     BlockMap::iterator it = mapBlockIndex.find(pcoinsTip->GetBestBlock());\n@@ -2987,7 +2987,7 @@ bool static LoadBlockIndexDB()\n \n     PruneBlockIndexCandidates();\n \n-    LogPrintf(\"LoadBlockIndexDB(): hashBestChain=%s height=%d date=%s progress=%f\\n\",\n+    LogPrintf(\"%s(): hashBestChain=%s height=%d date=%s progress=%f\\n\", __func__,\n         chainActive.Tip()->GetBlockHash().ToString(), chainActive.Height(),\n         DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", chainActive.Tip()->GetBlockTime()),\n         Checkpoints::GuessVerificationProgress(chainActive.Tip()));\n@@ -3362,7 +3362,7 @@ void static ProcessGetData(CNode* pfrom)\n                     if (pcheckpoint && nHeight < pcheckpoint->nHeight) {\n                         if (!chainActive.Contains(mi->second))\n                         {\n-                            LogPrintf(\"ProcessGetData(): ignoring request for old block that isn't in the main chain\\n\");\n+                            LogPrintf(\"%s(): ignoring request for old block that isn't in the main chain\\n\", __func__);\n                         } else {\n                             send = true;\n                         }\n@@ -4259,7 +4259,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n bool ProcessMessages(CNode* pfrom)\n {\n     //if (fDebug)\n-    //    LogPrintf(\"ProcessMessages(%u messages)\\n\", pfrom->vRecvMsg.size());\n+    //    LogPrintf(\"%s(%u messages)\\n\", __func__, pfrom->vRecvMsg.size());\n \n     //\n     // Message format\n@@ -4287,7 +4287,7 @@ bool ProcessMessages(CNode* pfrom)\n         CNetMessage& msg = *it;\n \n         //if (fDebug)\n-        //    LogPrintf(\"ProcessMessages(message %u msgsz, %u bytes, complete:%s)\\n\",\n+        //    LogPrintf(\"%s(message %u msgsz, %u bytes, complete:%s)\\n\", __func__,\n         //            msg.hdr.nMessageSize, msg.vRecv.size(),\n         //            msg.complete() ? \"Y\" : \"N\");\n \n@@ -4324,7 +4324,7 @@ bool ProcessMessages(CNode* pfrom)\n         memcpy(&nChecksum, &hash, sizeof(nChecksum));\n         if (nChecksum != hdr.nChecksum)\n         {\n-            LogPrintf(\"ProcessMessages(%s, %u bytes): CHECKSUM ERROR nChecksum=%08x hdr.nChecksum=%08x\\n\",\n+            LogPrintf(\"%s(%s, %u bytes): CHECKSUM ERROR nChecksum=%08x hdr.nChecksum=%08x\\n\", __func__,\n                SanitizeString(strCommand), nMessageSize, nChecksum, hdr.nChecksum);\n             continue;\n         }\n@@ -4342,12 +4342,12 @@ bool ProcessMessages(CNode* pfrom)\n             if (strstr(e.what(), \"end of data\"))\n             {\n                 // Allow exceptions from under-length message on vRecv\n-                LogPrintf(\"ProcessMessages(%s, %u bytes): Exception '%s' caught, normally caused by a message being shorter than its stated length\\n\", SanitizeString(strCommand), nMessageSize, e.what());\n+                LogPrintf(\"%s(%s, %u bytes): Exception '%s' caught, normally caused by a message being shorter than its stated length\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n             }\n             else if (strstr(e.what(), \"size too large\"))\n             {\n                 // Allow exceptions from over-long size\n-                LogPrintf(\"ProcessMessages(%s, %u bytes): Exception '%s' caught\\n\", SanitizeString(strCommand), nMessageSize, e.what());\n+                LogPrintf(\"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n             }\n             else\n             {\n@@ -4364,7 +4364,7 @@ bool ProcessMessages(CNode* pfrom)\n         }\n \n         if (!fRet)\n-            LogPrintf(\"ProcessMessage(%s, %u bytes) FAILED peer=%d\\n\", SanitizeString(strCommand), nMessageSize, pfrom->id);\n+            LogPrintf(\"%s(%s, %u bytes) FAILED peer=%d\\n\", __func__, SanitizeString(strCommand), nMessageSize, pfrom->id);\n \n         break;\n     }"
      }
    ]
  },
  {
    "sha": "67dee4a8d2f405c526f127f621636263761d1c00",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2N2RlZTRhOGQyZjQwNWM1MjZmMTI3ZjYyMTYzNjI2Mzc2MWQxYzAw",
    "commit": {
      "author": {
        "name": "Nicolas Benoit",
        "email": "nbenoit@tuxfamily.org",
        "date": "2015-02-25T17:40:32Z"
      },
      "committer": {
        "name": "Nicolas Benoit",
        "email": "nbenoit@tuxfamily.org",
        "date": "2015-02-25T17:40:32Z"
      },
      "message": "Removed '()' where used without contents inside\n\nThis additional patch removes '()' from current function name in LogPrintf output.",
      "tree": {
        "sha": "a95644fd9970c0dc3e2e788c0141cf10821c40a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a95644fd9970c0dc3e2e788c0141cf10821c40a3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/67dee4a8d2f405c526f127f621636263761d1c00",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/67dee4a8d2f405c526f127f621636263761d1c00",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/67dee4a8d2f405c526f127f621636263761d1c00",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/67dee4a8d2f405c526f127f621636263761d1c00/comments",
    "author": {
      "login": "nbenoit",
      "id": 7476289,
      "node_id": "MDQ6VXNlcjc0NzYyODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7476289?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nbenoit",
      "html_url": "https://github.com/nbenoit",
      "followers_url": "https://api.github.com/users/nbenoit/followers",
      "following_url": "https://api.github.com/users/nbenoit/following{/other_user}",
      "gists_url": "https://api.github.com/users/nbenoit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nbenoit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nbenoit/subscriptions",
      "organizations_url": "https://api.github.com/users/nbenoit/orgs",
      "repos_url": "https://api.github.com/users/nbenoit/repos",
      "events_url": "https://api.github.com/users/nbenoit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nbenoit/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "nbenoit",
      "id": 7476289,
      "node_id": "MDQ6VXNlcjc0NzYyODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7476289?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nbenoit",
      "html_url": "https://github.com/nbenoit",
      "followers_url": "https://api.github.com/users/nbenoit/followers",
      "following_url": "https://api.github.com/users/nbenoit/following{/other_user}",
      "gists_url": "https://api.github.com/users/nbenoit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nbenoit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nbenoit/subscriptions",
      "organizations_url": "https://api.github.com/users/nbenoit/orgs",
      "repos_url": "https://api.github.com/users/nbenoit/repos",
      "events_url": "https://api.github.com/users/nbenoit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nbenoit/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "efe700c28c4663f7a8d5630441a28fabf61ddce7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/efe700c28c4663f7a8d5630441a28fabf61ddce7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/efe700c28c4663f7a8d5630441a28fabf61ddce7"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "a520caea42af43523f74c96217be134321655b8d",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/67dee4a8d2f405c526f127f621636263761d1c00/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/67dee4a8d2f405c526f127f621636263761d1c00/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=67dee4a8d2f405c526f127f621636263761d1c00",
        "patch": "@@ -2977,7 +2977,7 @@ bool static LoadBlockIndexDB()\n \n     // Check whether we have a transaction index\n     pblocktree->ReadFlag(\"txindex\", fTxIndex);\n-    LogPrintf(\"%s(): transaction index %s\\n\", __func__, fTxIndex ? \"enabled\" : \"disabled\");\n+    LogPrintf(\"%s: transaction index %s\\n\", __func__, fTxIndex ? \"enabled\" : \"disabled\");\n \n     // Load pointer to end of best chain\n     BlockMap::iterator it = mapBlockIndex.find(pcoinsTip->GetBestBlock());\n@@ -2987,7 +2987,7 @@ bool static LoadBlockIndexDB()\n \n     PruneBlockIndexCandidates();\n \n-    LogPrintf(\"%s(): hashBestChain=%s height=%d date=%s progress=%f\\n\", __func__,\n+    LogPrintf(\"%s: hashBestChain=%s height=%d date=%s progress=%f\\n\", __func__,\n         chainActive.Tip()->GetBlockHash().ToString(), chainActive.Height(),\n         DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", chainActive.Tip()->GetBlockTime()),\n         Checkpoints::GuessVerificationProgress(chainActive.Tip()));\n@@ -3362,7 +3362,7 @@ void static ProcessGetData(CNode* pfrom)\n                     if (pcheckpoint && nHeight < pcheckpoint->nHeight) {\n                         if (!chainActive.Contains(mi->second))\n                         {\n-                            LogPrintf(\"%s(): ignoring request for old block that isn't in the main chain\\n\", __func__);\n+                            LogPrintf(\"%s: ignoring request for old block that isn't in the main chain\\n\", __func__);\n                         } else {\n                             send = true;\n                         }"
      }
    ]
  }
]