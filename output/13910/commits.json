[
  {
    "sha": "e58985c916fda39b8ccf08d0db00426af939749a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNTg5ODVjOTE2ZmRhMzliOGNjZjA4ZDBkYjAwNDI2YWY5Mzk3NDlh",
    "commit": {
      "author": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2018-08-08T11:22:13Z"
      },
      "committer": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2018-08-08T11:22:13Z"
      },
      "message": "Log progress while verifying blocks at level 4.\n\nWhen verifying blocks at startup, the progress is printed in 10%\nincrements to logs.  When -checklevel=4, however, the second half\nof the verification (connecting the blocks again) does not log the\nprogress anymore.  (It is still computed and shown in the UI, but\nnot printed to logs.)\n\nThis change makes the behaviour consistent, by adding the missing\nprogress logging also for level-4 checks.",
      "tree": {
        "sha": "e64c9e8f42838207dafa38b76dbdd6c46c9faf15",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e64c9e8f42838207dafa38b76dbdd6c46c9faf15"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e58985c916fda39b8ccf08d0db00426af939749a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e58985c916fda39b8ccf08d0db00426af939749a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e58985c916fda39b8ccf08d0db00426af939749a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e58985c916fda39b8ccf08d0db00426af939749a/comments",
    "author": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d86aad287f07e20066138b9f909758ad7a2e098",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d86aad287f07e20066138b9f909758ad7a2e098",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d86aad287f07e20066138b9f909758ad7a2e098"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 8,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c47186ad779f6ee699aa547143b48fa379355f87",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e58985c916fda39b8ccf08d0db00426af939749a/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e58985c916fda39b8ccf08d0db00426af939749a/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=e58985c916fda39b8ccf08d0db00426af939749a",
        "patch": "@@ -3990,7 +3990,7 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview,\n     LogPrintf(\"[0%%]...\"); /* Continued */\n     for (pindex = chainActive.Tip(); pindex && pindex->pprev; pindex = pindex->pprev) {\n         boost::this_thread::interruption_point();\n-        int percentageDone = std::max(1, std::min(99, (int)(((double)(chainActive.Height() - pindex->nHeight)) / (double)nCheckDepth * (nCheckLevel >= 4 ? 50 : 100))));\n+        const int percentageDone = std::max(1, std::min(99, (int)(((double)(chainActive.Height() - pindex->nHeight)) / (double)nCheckDepth * (nCheckLevel >= 4 ? 50 : 100))));\n         if (reportDone < percentageDone/10) {\n             // report every 10% step\n             LogPrintf(\"[%d%%]...\", percentageDone); /* Continued */\n@@ -4048,7 +4048,13 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview,\n     if (nCheckLevel >= 4) {\n         while (pindex != chainActive.Tip()) {\n             boost::this_thread::interruption_point();\n-            uiInterface.ShowProgress(_(\"Verifying blocks...\"), std::max(1, std::min(99, 100 - (int)(((double)(chainActive.Height() - pindex->nHeight)) / (double)nCheckDepth * 50))), false);\n+            const int percentageDone = std::max(1, std::min(99, 100 - (int)(((double)(chainActive.Height() - pindex->nHeight)) / (double)nCheckDepth * 50)));\n+            if (reportDone < percentageDone/10) {\n+                // report every 10% step\n+                LogPrintf(\"[%d%%]...\", percentageDone); /* Continued */\n+                reportDone = percentageDone/10;\n+            }\n+            uiInterface.ShowProgress(_(\"Verifying blocks...\"), percentageDone, false);\n             pindex = chainActive.Next(pindex);\n             CBlock block;\n             if (!ReadBlockFromDisk(block, pindex, chainparams.GetConsensus()))"
      }
    ]
  }
]