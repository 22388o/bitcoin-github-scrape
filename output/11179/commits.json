[
  {
    "sha": "ec6902d0ea2bbe75179684fc71849d5e34647a14",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYzY5MDJkMGVhMmJiZTc1MTc5Njg0ZmM3MTg0OWQ1ZTM0NjQ3YTE0",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2017-06-09T00:38:23Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-08-29T08:09:41Z"
      },
      "message": "rpc: Push down safe mode checks\n\nThis contains most of the changes of 10563 \"remove safe mode\", but doesn't\nremove the safe mode yet, but put an `ObserveSafeMode()` check in\nindividual calls with okSafeMode=false.\n\nThis cleans up the ugly \"okSafeMode\" flag from the dispatch tables,\nwhich is not a concern for the RPC server.\n\nExtra-author: Wladimir J. van der Laan <laanwj@gmail.com>",
      "tree": {
        "sha": "42393f7b18521829584072668b2f2e1c1c069e00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/42393f7b18521829584072668b2f2e1c1c069e00"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec6902d0ea2bbe75179684fc71849d5e34647a14",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec6902d0ea2bbe75179684fc71849d5e34647a14",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ec6902d0ea2bbe75179684fc71849d5e34647a14",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec6902d0ea2bbe75179684fc71849d5e34647a14/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cee4fe1d53b2e1ff91ff48bc881cb41dfba01c52",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cee4fe1d53b2e1ff91ff48bc881cb41dfba01c52",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cee4fe1d53b2e1ff91ff48bc881cb41dfba01c52"
      }
    ],
    "stats": {
      "total": 339,
      "additions": 189,
      "deletions": 150
    },
    "files": [
      {
        "sha": "a1cbe75dd8109107473bde584007d5fa02811363",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=ec6902d0ea2bbe75179684fc71849d5e34647a14",
        "patch": "@@ -130,6 +130,7 @@ BITCOIN_CORE_H = \\\n   rpc/client.h \\\n   rpc/mining.h \\\n   rpc/protocol.h \\\n+  rpc/safemode.h \\\n   rpc/server.h \\\n   rpc/register.h \\\n   scheduler.h \\\n@@ -210,6 +211,7 @@ libbitcoin_server_a_SOURCES = \\\n   rpc/misc.cpp \\\n   rpc/net.cpp \\\n   rpc/rawtransaction.cpp \\\n+  rpc/safemode.cpp \\\n   rpc/server.cpp \\\n   script/sigcache.cpp \\\n   script/ismine.cpp \\"
      },
      {
        "sha": "6114bbaa2de0061ead644c92592c94eee8db1baa",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 11,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ec6902d0ea2bbe75179684fc71849d5e34647a14",
        "patch": "@@ -30,6 +30,7 @@\n #include \"policy/policy.h\"\n #include \"rpc/server.h\"\n #include \"rpc/register.h\"\n+#include \"rpc/safemode.h\"\n #include \"rpc/blockchain.h\"\n #include \"script/standard.h\"\n #include \"script/sigcache.h\"\n@@ -70,7 +71,6 @@\n bool fFeeEstimatesInitialized = false;\n static const bool DEFAULT_PROXYRANDOMIZE = true;\n static const bool DEFAULT_REST_ENABLE = false;\n-static const bool DEFAULT_DISABLE_SAFEMODE = true;\n static const bool DEFAULT_STOPAFTERBLOCKIMPORT = false;\n \n std::unique_ptr<CConnman> g_connman;\n@@ -318,15 +318,6 @@ void OnRPCStopped()\n     LogPrint(BCLog::RPC, \"RPC stopped.\\n\");\n }\n \n-void OnRPCPreCommand(const CRPCCommand& cmd)\n-{\n-    // Observe safe mode\n-    std::string strWarning = GetWarnings(\"rpc\");\n-    if (strWarning != \"\" && !gArgs.GetBoolArg(\"-disablesafemode\", DEFAULT_DISABLE_SAFEMODE) &&\n-        !cmd.okSafeMode)\n-        throw JSONRPCError(RPC_FORBIDDEN_BY_SAFE_MODE, std::string(\"Safe mode: \") + strWarning);\n-}\n-\n std::string HelpMessage(HelpMessageMode mode)\n {\n     const auto defaultBaseParams = CreateBaseChainParams(CBaseChainParams::MAIN);\n@@ -721,7 +712,6 @@ bool AppInitServers(boost::thread_group& threadGroup)\n {\n     RPCServer::OnStarted(&OnRPCStarted);\n     RPCServer::OnStopped(&OnRPCStopped);\n-    RPCServer::OnPreCommand(&OnRPCPreCommand);\n     if (!InitHTTPServer())\n         return false;\n     if (!StartRPC())"
      },
      {
        "sha": "cb781c8328c32bb160d54e60e89d4f40671ad4d8",
        "filename": "src/qt/test/rpcnestedtests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/qt/test/rpcnestedtests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/qt/test/rpcnestedtests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/rpcnestedtests.cpp?ref=ec6902d0ea2bbe75179684fc71849d5e34647a14",
        "patch": "@@ -29,7 +29,7 @@ static UniValue rpcNestedTest_rpc(const JSONRPCRequest& request)\n \n static const CRPCCommand vRPCCommands[] =\n {\n-    { \"test\", \"rpcNestedTest\", &rpcNestedTest_rpc, true, {} },\n+    { \"test\", \"rpcNestedTest\", &rpcNestedTest_rpc, {} },\n };\n \n void RPCNestedTests::rpcNestedTests()"
      },
      {
        "sha": "6e1af263dc93272654d3e2c3e20840b3336957fd",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 27,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=ec6902d0ea2bbe75179684fc71849d5e34647a14",
        "patch": "@@ -1532,35 +1532,35 @@ UniValue getchaintxstats(const JSONRPCRequest& request)\n }\n \n static const CRPCCommand commands[] =\n-{ //  category              name                      actor (function)         okSafe argNames\n-  //  --------------------- ------------------------  -----------------------  ------ ----------\n-    { \"blockchain\",         \"getblockchaininfo\",      &getblockchaininfo,      true,  {} },\n-    { \"blockchain\",         \"getchaintxstats\",        &getchaintxstats,        true,  {\"nblocks\", \"blockhash\"} },\n-    { \"blockchain\",         \"getbestblockhash\",       &getbestblockhash,       true,  {} },\n-    { \"blockchain\",         \"getblockcount\",          &getblockcount,          true,  {} },\n-    { \"blockchain\",         \"getblock\",               &getblock,               true,  {\"blockhash\",\"verbosity|verbose\"} },\n-    { \"blockchain\",         \"getblockhash\",           &getblockhash,           true,  {\"height\"} },\n-    { \"blockchain\",         \"getblockheader\",         &getblockheader,         true,  {\"blockhash\",\"verbose\"} },\n-    { \"blockchain\",         \"getchaintips\",           &getchaintips,           true,  {} },\n-    { \"blockchain\",         \"getdifficulty\",          &getdifficulty,          true,  {} },\n-    { \"blockchain\",         \"getmempoolancestors\",    &getmempoolancestors,    true,  {\"txid\",\"verbose\"} },\n-    { \"blockchain\",         \"getmempooldescendants\",  &getmempooldescendants,  true,  {\"txid\",\"verbose\"} },\n-    { \"blockchain\",         \"getmempoolentry\",        &getmempoolentry,        true,  {\"txid\"} },\n-    { \"blockchain\",         \"getmempoolinfo\",         &getmempoolinfo,         true,  {} },\n-    { \"blockchain\",         \"getrawmempool\",          &getrawmempool,          true,  {\"verbose\"} },\n-    { \"blockchain\",         \"gettxout\",               &gettxout,               true,  {\"txid\",\"n\",\"include_mempool\"} },\n-    { \"blockchain\",         \"gettxoutsetinfo\",        &gettxoutsetinfo,        true,  {} },\n-    { \"blockchain\",         \"pruneblockchain\",        &pruneblockchain,        true,  {\"height\"} },\n-    { \"blockchain\",         \"verifychain\",            &verifychain,            true,  {\"checklevel\",\"nblocks\"} },\n-\n-    { \"blockchain\",         \"preciousblock\",          &preciousblock,          true,  {\"blockhash\"} },\n+{ //  category              name                      actor (function)         argNames\n+  //  --------------------- ------------------------  -----------------------  ----------\n+    { \"blockchain\",         \"getblockchaininfo\",      &getblockchaininfo,      {} },\n+    { \"blockchain\",         \"getchaintxstats\",        &getchaintxstats,        {\"nblocks\", \"blockhash\"} },\n+    { \"blockchain\",         \"getbestblockhash\",       &getbestblockhash,       {} },\n+    { \"blockchain\",         \"getblockcount\",          &getblockcount,          {} },\n+    { \"blockchain\",         \"getblock\",               &getblock,               {\"blockhash\",\"verbosity|verbose\"} },\n+    { \"blockchain\",         \"getblockhash\",           &getblockhash,           {\"height\"} },\n+    { \"blockchain\",         \"getblockheader\",         &getblockheader,         {\"blockhash\",\"verbose\"} },\n+    { \"blockchain\",         \"getchaintips\",           &getchaintips,           {} },\n+    { \"blockchain\",         \"getdifficulty\",          &getdifficulty,          {} },\n+    { \"blockchain\",         \"getmempoolancestors\",    &getmempoolancestors,    {\"txid\",\"verbose\"} },\n+    { \"blockchain\",         \"getmempooldescendants\",  &getmempooldescendants,  {\"txid\",\"verbose\"} },\n+    { \"blockchain\",         \"getmempoolentry\",        &getmempoolentry,        {\"txid\"} },\n+    { \"blockchain\",         \"getmempoolinfo\",         &getmempoolinfo,         {} },\n+    { \"blockchain\",         \"getrawmempool\",          &getrawmempool,          {\"verbose\"} },\n+    { \"blockchain\",         \"gettxout\",               &gettxout,               {\"txid\",\"n\",\"include_mempool\"} },\n+    { \"blockchain\",         \"gettxoutsetinfo\",        &gettxoutsetinfo,        {} },\n+    { \"blockchain\",         \"pruneblockchain\",        &pruneblockchain,        {\"height\"} },\n+    { \"blockchain\",         \"verifychain\",            &verifychain,            {\"checklevel\",\"nblocks\"} },\n+\n+    { \"blockchain\",         \"preciousblock\",          &preciousblock,          {\"blockhash\"} },\n \n     /* Not shown in help */\n-    { \"hidden\",             \"invalidateblock\",        &invalidateblock,        true,  {\"blockhash\"} },\n-    { \"hidden\",             \"reconsiderblock\",        &reconsiderblock,        true,  {\"blockhash\"} },\n-    { \"hidden\",             \"waitfornewblock\",        &waitfornewblock,        true,  {\"timeout\"} },\n-    { \"hidden\",             \"waitforblock\",           &waitforblock,           true,  {\"blockhash\",\"timeout\"} },\n-    { \"hidden\",             \"waitforblockheight\",     &waitforblockheight,     true,  {\"height\",\"timeout\"} },\n+    { \"hidden\",             \"invalidateblock\",        &invalidateblock,        {\"blockhash\"} },\n+    { \"hidden\",             \"reconsiderblock\",        &reconsiderblock,        {\"blockhash\"} },\n+    { \"hidden\",             \"waitfornewblock\",        &waitfornewblock,        {\"timeout\"} },\n+    { \"hidden\",             \"waitforblock\",           &waitforblock,           {\"blockhash\",\"timeout\"} },\n+    { \"hidden\",             \"waitforblockheight\",     &waitforblockheight,     {\"height\",\"timeout\"} },\n };\n \n void RegisterBlockchainRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "ca406ce448e76112401ec83c474c310464097ee7",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 10,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=ec6902d0ea2bbe75179684fc71849d5e34647a14",
        "patch": "@@ -967,20 +967,21 @@ UniValue estimaterawfee(const JSONRPCRequest& request)\n }\n \n static const CRPCCommand commands[] =\n-{ //  category              name                      actor (function)         okSafeMode\n+{ //  category              name                      actor (function)         argNames\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"mining\",             \"getnetworkhashps\",       &getnetworkhashps,       true,  {\"nblocks\",\"height\"} },\n-    { \"mining\",             \"getmininginfo\",          &getmininginfo,          true,  {} },\n-    { \"mining\",             \"prioritisetransaction\",  &prioritisetransaction,  true,  {\"txid\",\"dummy\",\"fee_delta\"} },\n-    { \"mining\",             \"getblocktemplate\",       &getblocktemplate,       true,  {\"template_request\"} },\n-    { \"mining\",             \"submitblock\",            &submitblock,            true,  {\"hexdata\",\"dummy\"} },\n+    { \"mining\",             \"getnetworkhashps\",       &getnetworkhashps,       {\"nblocks\",\"height\"} },\n+    { \"mining\",             \"getmininginfo\",          &getmininginfo,          {} },\n+    { \"mining\",             \"prioritisetransaction\",  &prioritisetransaction,  {\"txid\",\"dummy\",\"fee_delta\"} },\n+    { \"mining\",             \"getblocktemplate\",       &getblocktemplate,       {\"template_request\"} },\n+    { \"mining\",             \"submitblock\",            &submitblock,            {\"hexdata\",\"dummy\"} },\n \n-    { \"generating\",         \"generatetoaddress\",      &generatetoaddress,      true,  {\"nblocks\",\"address\",\"maxtries\"} },\n \n-    { \"util\",               \"estimatefee\",            &estimatefee,            true,  {\"nblocks\"} },\n-    { \"util\",               \"estimatesmartfee\",       &estimatesmartfee,       true,  {\"conf_target\", \"estimate_mode\"} },\n+    { \"generating\",         \"generatetoaddress\",      &generatetoaddress,      {\"nblocks\",\"address\",\"maxtries\"} },\n \n-    { \"hidden\",             \"estimaterawfee\",         &estimaterawfee,         true,  {\"conf_target\", \"threshold\"} },\n+    { \"util\",               \"estimatefee\",            &estimatefee,            {\"nblocks\"} },\n+    { \"util\",               \"estimatesmartfee\",       &estimatesmartfee,       {\"nblocks\", \"estimate_mode\"} },\n+\n+    { \"hidden\",             \"estimaterawfee\",         &estimaterawfee,         {\"conf_target\", \"threshold\"} },\n };\n \n void RegisterMiningRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "76eefabd29be5c1c3e8859dc253901b54cd8e5a6",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=ec6902d0ea2bbe75179684fc71849d5e34647a14",
        "patch": "@@ -649,20 +649,20 @@ UniValue echo(const JSONRPCRequest& request)\n }\n \n static const CRPCCommand commands[] =\n-{ //  category              name                      actor (function)         okSafeMode\n+{ //  category              name                      actor (function)         argNames\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"control\",            \"getinfo\",                &getinfo,                true,  {} }, /* uses wallet if enabled */\n-    { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          true,  {\"mode\"} },\n-    { \"util\",               \"validateaddress\",        &validateaddress,        true,  {\"address\"} }, /* uses wallet if enabled */\n-    { \"util\",               \"createmultisig\",         &createmultisig,         true,  {\"nrequired\",\"keys\"} },\n-    { \"util\",               \"verifymessage\",          &verifymessage,          true,  {\"address\",\"signature\",\"message\"} },\n-    { \"util\",               \"signmessagewithprivkey\", &signmessagewithprivkey, true,  {\"privkey\",\"message\"} },\n+    { \"control\",            \"getinfo\",                &getinfo,                {} }, /* uses wallet if enabled */\n+    { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          {\"mode\"} },\n+    { \"util\",               \"validateaddress\",        &validateaddress,        {\"address\"} }, /* uses wallet if enabled */\n+    { \"util\",               \"createmultisig\",         &createmultisig,         {\"nrequired\",\"keys\"} },\n+    { \"util\",               \"verifymessage\",          &verifymessage,          {\"address\",\"signature\",\"message\"} },\n+    { \"util\",               \"signmessagewithprivkey\", &signmessagewithprivkey, {\"privkey\",\"message\"} },\n \n     /* Not shown in help */\n-    { \"hidden\",             \"setmocktime\",            &setmocktime,            true,  {\"timestamp\"}},\n-    { \"hidden\",             \"echo\",                   &echo,                   true,  {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n-    { \"hidden\",             \"echojson\",               &echo,                   true,  {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n-    { \"hidden\",             \"logging\",                &logging,                true,  {\"include\", \"exclude\"}},\n+    { \"hidden\",             \"setmocktime\",            &setmocktime,            {\"timestamp\"}},\n+    { \"hidden\",             \"echo\",                   &echo,                   {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n+    { \"hidden\",             \"echojson\",               &echo,                   {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n+    { \"hidden\",             \"logging\",                &logging,                {\"include\", \"exclude\"}},\n };\n \n void RegisterMiscRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "7faf216047a04e351de560d85187114abbcb6ce7",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=ec6902d0ea2bbe75179684fc71849d5e34647a14",
        "patch": "@@ -623,20 +623,20 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n }\n \n static const CRPCCommand commands[] =\n-{ //  category              name                      actor (function)         okSafeMode\n+{ //  category              name                      actor (function)         argNames\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"network\",            \"getconnectioncount\",     &getconnectioncount,     true,  {} },\n-    { \"network\",            \"ping\",                   &ping,                   true,  {} },\n-    { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true,  {} },\n-    { \"network\",            \"addnode\",                &addnode,                true,  {\"node\",\"command\"} },\n-    { \"network\",            \"disconnectnode\",         &disconnectnode,         true,  {\"address\", \"nodeid\"} },\n-    { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       true,  {\"node\"} },\n-    { \"network\",            \"getnettotals\",           &getnettotals,           true,  {} },\n-    { \"network\",            \"getnetworkinfo\",         &getnetworkinfo,         true,  {} },\n-    { \"network\",            \"setban\",                 &setban,                 true,  {\"subnet\", \"command\", \"bantime\", \"absolute\"} },\n-    { \"network\",            \"listbanned\",             &listbanned,             true,  {} },\n-    { \"network\",            \"clearbanned\",            &clearbanned,            true,  {} },\n-    { \"network\",            \"setnetworkactive\",       &setnetworkactive,       true,  {\"state\"} },\n+    { \"network\",            \"getconnectioncount\",     &getconnectioncount,     {} },\n+    { \"network\",            \"ping\",                   &ping,                   {} },\n+    { \"network\",            \"getpeerinfo\",            &getpeerinfo,            {} },\n+    { \"network\",            \"addnode\",                &addnode,                {\"node\",\"command\"} },\n+    { \"network\",            \"disconnectnode\",         &disconnectnode,         {\"address\", \"nodeid\"} },\n+    { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       {\"node\"} },\n+    { \"network\",            \"getnettotals\",           &getnettotals,           {} },\n+    { \"network\",            \"getnetworkinfo\",         &getnetworkinfo,         {} },\n+    { \"network\",            \"setban\",                 &setban,                 {\"subnet\", \"command\", \"bantime\", \"absolute\"} },\n+    { \"network\",            \"listbanned\",             &listbanned,             {} },\n+    { \"network\",            \"clearbanned\",            &clearbanned,            {} },\n+    { \"network\",            \"setnetworkactive\",       &setnetworkactive,       {\"state\"} },\n };\n \n void RegisterNetRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "27daefaf5ad1345f583336db98b8fa7732851b5a",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 11,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=ec6902d0ea2bbe75179684fc71849d5e34647a14",
        "patch": "@@ -16,6 +16,7 @@\n #include \"policy/policy.h\"\n #include \"policy/rbf.h\"\n #include \"primitives/transaction.h\"\n+#include \"rpc/safemode.h\"\n #include \"rpc/server.h\"\n #include \"script/script.h\"\n #include \"script/script_error.h\"\n@@ -703,6 +704,7 @@ UniValue signrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"signrawtransaction\", \"\\\"myhex\\\"\")\n         );\n \n+    ObserveSafeMode();\n #ifdef ENABLE_WALLET\n     LOCK2(cs_main, pwallet ? &pwallet->cs_wallet : nullptr);\n #else\n@@ -908,6 +910,7 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"sendrawtransaction\", \"\\\"signedhex\\\"\")\n         );\n \n+    ObserveSafeMode();\n     LOCK(cs_main);\n     RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n \n@@ -959,18 +962,18 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n }\n \n static const CRPCCommand commands[] =\n-{ //  category              name                      actor (function)         okSafeMode\n+{ //  category              name                      actor (function)         argNames\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"rawtransactions\",    \"getrawtransaction\",      &getrawtransaction,      true,  {\"txid\",\"verbose\"} },\n-    { \"rawtransactions\",    \"createrawtransaction\",   &createrawtransaction,   true,  {\"inputs\",\"outputs\",\"locktime\",\"replaceable\"} },\n-    { \"rawtransactions\",    \"decoderawtransaction\",   &decoderawtransaction,   true,  {\"hexstring\"} },\n-    { \"rawtransactions\",    \"decodescript\",           &decodescript,           true,  {\"hexstring\"} },\n-    { \"rawtransactions\",    \"sendrawtransaction\",     &sendrawtransaction,     false, {\"hexstring\",\"allowhighfees\"} },\n-    { \"rawtransactions\",    \"combinerawtransaction\",  &combinerawtransaction,  true,  {\"txs\"} },\n-    { \"rawtransactions\",    \"signrawtransaction\",     &signrawtransaction,     false, {\"hexstring\",\"prevtxs\",\"privkeys\",\"sighashtype\"} }, /* uses wallet if enabled */\n-\n-    { \"blockchain\",         \"gettxoutproof\",          &gettxoutproof,          true,  {\"txids\", \"blockhash\"} },\n-    { \"blockchain\",         \"verifytxoutproof\",       &verifytxoutproof,       true,  {\"proof\"} },\n+    { \"rawtransactions\",    \"getrawtransaction\",      &getrawtransaction,      {\"txid\",\"verbose\"} },\n+    { \"rawtransactions\",    \"createrawtransaction\",   &createrawtransaction,   {\"inputs\",\"outputs\",\"locktime\",\"replaceable\"} },\n+    { \"rawtransactions\",    \"decoderawtransaction\",   &decoderawtransaction,   {\"hexstring\"} },\n+    { \"rawtransactions\",    \"decodescript\",           &decodescript,           {\"hexstring\"} },\n+    { \"rawtransactions\",    \"sendrawtransaction\",     &sendrawtransaction,     {\"hexstring\",\"allowhighfees\"} },\n+    { \"rawtransactions\",    \"combinerawtransaction\",  &combinerawtransaction,  {\"txs\"} },\n+    { \"rawtransactions\",    \"signrawtransaction\",     &signrawtransaction,     {\"hexstring\",\"prevtxs\",\"privkeys\",\"sighashtype\"} }, /* uses wallet if enabled */\n+\n+    { \"blockchain\",         \"gettxoutproof\",          &gettxoutproof,          {\"txids\", \"blockhash\"} },\n+    { \"blockchain\",         \"verifytxoutproof\",       &verifytxoutproof,       {\"proof\"} },\n };\n \n void RegisterRawTransactionRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "24770ad47f073859d31167985f2ed2916f4dcb3e",
        "filename": "src/rpc/safemode.cpp",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/rpc/safemode.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/rpc/safemode.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/safemode.cpp?ref=ec6902d0ea2bbe75179684fc71849d5e34647a14",
        "patch": "@@ -0,0 +1,14 @@\n+#include \"safemode.h\"\n+\n+#include \"rpc/protocol.h\"\n+#include \"util.h\"\n+#include \"warnings.h\"\n+\n+void ObserveSafeMode()\n+{\n+    std::string warning = GetWarnings(\"rpc\");\n+    if (warning != \"\" && !gArgs.GetBoolArg(\"-disablesafemode\", DEFAULT_DISABLE_SAFEMODE)) {\n+        throw JSONRPCError(RPC_FORBIDDEN_BY_SAFE_MODE, std::string(\"Safe mode: \") + warning);\n+    }\n+}\n+"
      },
      {
        "sha": "8466d6b2f975a7b5b39edd0480f6684f08ee54e8",
        "filename": "src/rpc/safemode.h",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/rpc/safemode.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/rpc/safemode.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/safemode.h?ref=ec6902d0ea2bbe75179684fc71849d5e34647a14",
        "patch": "@@ -0,0 +1,12 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_RPC_SAFEMODE_H\n+#define BITCOIN_RPC_SAFEMODE_H\n+\n+static const bool DEFAULT_DISABLE_SAFEMODE = true;\n+\n+void ObserveSafeMode();\n+\n+#endif // BITCOIN_RPC_SAFEMODE_H"
      },
      {
        "sha": "428ab3b9b0eda6e45c3ae7b3087efe134db8b861",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 10,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=ec6902d0ea2bbe75179684fc71849d5e34647a14",
        "patch": "@@ -51,11 +51,6 @@ void RPCServer::OnStopped(std::function<void ()> slot)\n     g_rpcSignals.Stopped.connect(slot);\n }\n \n-void RPCServer::OnPreCommand(std::function<void (const CRPCCommand&)> slot)\n-{\n-    g_rpcSignals.PreCommand.connect(boost::bind(slot, _1));\n-}\n-\n void RPCTypeCheck(const UniValue& params,\n                   const std::list<UniValue::VType>& typesExpected,\n                   bool fAllowNull)\n@@ -267,12 +262,12 @@ UniValue uptime(const JSONRPCRequest& jsonRequest)\n  * Call Table\n  */\n static const CRPCCommand vRPCCommands[] =\n-{ //  category              name                      actor (function)         okSafe argNames\n-  //  --------------------- ------------------------  -----------------------  ------ ----------\n+{ //  category              name                      actor (function)         argNames\n+  //  --------------------- ------------------------  -----------------------  ----------\n     /* Overall control/query calls */\n-    { \"control\",            \"help\",                   &help,                   true,  {\"command\"}  },\n-    { \"control\",            \"stop\",                   &stop,                   true,  {}  },\n-    { \"control\",            \"uptime\",                 &uptime,                 true,  {}  },\n+    { \"control\",            \"help\",                   &help,                   {\"command\"}  },\n+    { \"control\",            \"stop\",                   &stop,                   {}  },\n+    { \"control\",            \"uptime\",                 &uptime,                 {}  },\n };\n \n CRPCTable::CRPCTable()"
      },
      {
        "sha": "777acbcb9417b65d037073035786efaa1f703f05",
        "filename": "src/rpc/server.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/rpc/server.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/rpc/server.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.h?ref=ec6902d0ea2bbe75179684fc71849d5e34647a14",
        "patch": "@@ -25,7 +25,6 @@ namespace RPCServer\n {\n     void OnStarted(std::function<void ()> slot);\n     void OnStopped(std::function<void ()> slot);\n-    void OnPreCommand(std::function<void (const CRPCCommand&)> slot);\n }\n \n /** Wrapper for UniValue::VType, which includes typeAny:\n@@ -134,7 +133,6 @@ class CRPCCommand\n     std::string category;\n     std::string name;\n     rpcfn_type actor;\n-    bool okSafeMode;\n     std::vector<std::string> argNames;\n };\n "
      },
      {
        "sha": "db6f6b48ac8f6ffa3c3ae1d3eb320b7eee561cbf",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=ec6902d0ea2bbe75179684fc71849d5e34647a14",
        "patch": "@@ -4,6 +4,7 @@\n \n #include \"base58.h\"\n #include \"chain.h\"\n+#include \"rpc/safemode.h\"\n #include \"rpc/server.h\"\n #include \"init.h\"\n #include \"validation.h\"\n@@ -174,6 +175,7 @@ UniValue abortrescan(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"abortrescan\", \"\")\n         );\n \n+    ObserveSafeMode();\n     if (!pwallet->IsScanning() || pwallet->IsAbortingRescan()) return false;\n     pwallet->AbortRescan();\n     return true;"
      },
      {
        "sha": "0829c9ec4c6a535920f555484c1ba9e486f61c84",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 76,
        "deletions": 54,
        "changes": 130,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec6902d0ea2bbe75179684fc71849d5e34647a14/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=ec6902d0ea2bbe75179684fc71849d5e34647a14",
        "patch": "@@ -16,6 +16,7 @@\n #include \"policy/policy.h\"\n #include \"policy/rbf.h\"\n #include \"rpc/mining.h\"\n+#include \"rpc/safemode.h\"\n #include \"rpc/server.h\"\n #include \"script/sign.h\"\n #include \"timedata.h\"\n@@ -450,6 +451,7 @@ UniValue sendtoaddress(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\", 0.1, \\\"donation\\\", \\\"seans outpost\\\"\")\n         );\n \n+    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     CBitcoinAddress address(request.params[0].get_str());\n@@ -526,6 +528,7 @@ UniValue listaddressgroupings(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listaddressgroupings\", \"\")\n         );\n \n+    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     UniValue jsonGroupings(UniValue::VARR);\n@@ -635,6 +638,7 @@ UniValue getreceivedbyaddress(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"getreceivedbyaddress\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\", 6\")\n        );\n \n+    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     // Bitcoin address\n@@ -695,6 +699,7 @@ UniValue getreceivedbyaccount(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"getreceivedbyaccount\", \"\\\"tabby\\\", 6\")\n         );\n \n+    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     // Minimum confirmations\n@@ -767,6 +772,7 @@ UniValue getbalance(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"getbalance\", \"\\\"*\\\", 6\")\n         );\n \n+    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     const UniValue& account_value = request.params[0];\n@@ -811,6 +817,7 @@ UniValue getunconfirmedbalance(const JSONRPCRequest &request)\n                 \"getunconfirmedbalance\\n\"\n                 \"Returns the server's total unconfirmed balance\\n\");\n \n+    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     return ValueFromAmount(pwallet->GetUnconfirmedBalance());\n@@ -845,6 +852,7 @@ UniValue movecmd(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"move\", \"\\\"timotei\\\", \\\"akiko\\\", 0.01, 6, \\\"happy birthday!\\\"\")\n         );\n \n+    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     std::string strFrom = AccountFromValue(request.params[0]);\n@@ -903,6 +911,7 @@ UniValue sendfrom(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"sendfrom\", \"\\\"tabby\\\", \\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\", 0.01, 6, \\\"donation\\\", \\\"seans outpost\\\"\")\n         );\n \n+    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     std::string strAccount = AccountFromValue(request.params[0]);\n@@ -986,6 +995,7 @@ UniValue sendmany(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"sendmany\", \"\\\"\\\", \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\", 6, \\\"testing\\\"\")\n         );\n \n+    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     if (pwallet->GetBroadcastTransactions() && !g_connman) {\n@@ -1403,6 +1413,7 @@ UniValue listreceivedbyaddress(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listreceivedbyaddress\", \"6, true, true\")\n         );\n \n+    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     return ListReceived(pwallet, request.params, false);\n@@ -1442,6 +1453,7 @@ UniValue listreceivedbyaccount(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listreceivedbyaccount\", \"6, true, true\")\n         );\n \n+    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     return ListReceived(pwallet, request.params, true);\n@@ -1629,6 +1641,7 @@ UniValue listtransactions(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listtransactions\", \"\\\"*\\\", 20, 100\")\n         );\n \n+    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     std::string strAccount = \"*\";\n@@ -1722,6 +1735,7 @@ UniValue listaccounts(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listaccounts\", \"6\")\n         );\n \n+    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     int nMinDepth = 1;\n@@ -1830,6 +1844,7 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listsinceblock\", \"\\\"000000000000000bacf66f7497b7dc45ef753ee9a7d38571037cdb1a57f663ad\\\", 6\")\n         );\n \n+    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     const CBlockIndex* pindex = nullptr;    // Block index of the specified block or the common ancestor, if the block provided was in a deactivated chain.\n@@ -1961,6 +1976,7 @@ UniValue gettransaction(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"gettransaction\", \"\\\"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\\\"\")\n         );\n \n+    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     uint256 hash;\n@@ -2022,6 +2038,7 @@ UniValue abandontransaction(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"abandontransaction\", \"\\\"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\\\"\")\n         );\n \n+    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     uint256 hash;\n@@ -2454,6 +2471,7 @@ UniValue listlockunspent(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listlockunspent\", \"\")\n         );\n \n+    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     std::vector<COutPoint> vOutpts;\n@@ -2532,6 +2550,7 @@ UniValue getwalletinfo(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"getwalletinfo\", \"\")\n         );\n \n+    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     UniValue obj(UniValue::VOBJ);\n@@ -2684,6 +2703,8 @@ UniValue listunspent(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listunspent\", \"6, 9999999, [] , true, { \\\"minimumAmount\\\": 0.005 } \")\n         );\n \n+    ObserveSafeMode();\n+\n     int nMinDepth = 1;\n     if (!request.params[0].isNull()) {\n         RPCTypeCheckArgument(request.params[0], UniValue::VNUM);\n@@ -2845,6 +2866,7 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n                             + HelpExampleCli(\"sendrawtransaction\", \"\\\"signedtransactionhex\\\"\")\n                             );\n \n+    ObserveSafeMode();\n     RPCTypeCheck(request.params, {UniValue::VSTR});\n \n     CCoinControl coinControl;\n@@ -3159,60 +3181,60 @@ extern UniValue removeprunedfunds(const JSONRPCRequest& request);\n extern UniValue importmulti(const JSONRPCRequest& request);\n \n static const CRPCCommand commands[] =\n-{ //  category              name                        actor (function)           okSafeMode\n-    //  --------------------- ------------------------    -----------------------    ----------\n-    { \"rawtransactions\",    \"fundrawtransaction\",       &fundrawtransaction,       false,  {\"hexstring\",\"options\"} },\n-    { \"hidden\",             \"resendwallettransactions\", &resendwallettransactions, true,   {} },\n-    { \"wallet\",             \"abandontransaction\",       &abandontransaction,       false,  {\"txid\"} },\n-    { \"wallet\",             \"abortrescan\",              &abortrescan,              false,  {} },\n-    { \"wallet\",             \"addmultisigaddress\",       &addmultisigaddress,       true,   {\"nrequired\",\"keys\",\"account\"} },\n-    { \"wallet\",             \"addwitnessaddress\",        &addwitnessaddress,        true,   {\"address\"} },\n-    { \"wallet\",             \"backupwallet\",             &backupwallet,             true,   {\"destination\"} },\n-    { \"wallet\",             \"bumpfee\",                  &bumpfee,                  true,   {\"txid\", \"options\"} },\n-    { \"wallet\",             \"dumpprivkey\",              &dumpprivkey,              true,   {\"address\"}  },\n-    { \"wallet\",             \"dumpwallet\",               &dumpwallet,               true,   {\"filename\"} },\n-    { \"wallet\",             \"encryptwallet\",            &encryptwallet,            true,   {\"passphrase\"} },\n-    { \"wallet\",             \"getaccountaddress\",        &getaccountaddress,        true,   {\"account\"} },\n-    { \"wallet\",             \"getaccount\",               &getaccount,               true,   {\"address\"} },\n-    { \"wallet\",             \"getaddressesbyaccount\",    &getaddressesbyaccount,    true,   {\"account\"} },\n-    { \"wallet\",             \"getbalance\",               &getbalance,               false,  {\"account\",\"minconf\",\"include_watchonly\"} },\n-    { \"wallet\",             \"getnewaddress\",            &getnewaddress,            true,   {\"account\"} },\n-    { \"wallet\",             \"getrawchangeaddress\",      &getrawchangeaddress,      true,   {} },\n-    { \"wallet\",             \"getreceivedbyaccount\",     &getreceivedbyaccount,     false,  {\"account\",\"minconf\"} },\n-    { \"wallet\",             \"getreceivedbyaddress\",     &getreceivedbyaddress,     false,  {\"address\",\"minconf\"} },\n-    { \"wallet\",             \"gettransaction\",           &gettransaction,           false,  {\"txid\",\"include_watchonly\"} },\n-    { \"wallet\",             \"getunconfirmedbalance\",    &getunconfirmedbalance,    false,  {} },\n-    { \"wallet\",             \"getwalletinfo\",            &getwalletinfo,            false,  {} },\n-    { \"wallet\",             \"importmulti\",              &importmulti,              true,   {\"requests\",\"options\"} },\n-    { \"wallet\",             \"importprivkey\",            &importprivkey,            true,   {\"privkey\",\"label\",\"rescan\"} },\n-    { \"wallet\",             \"importwallet\",             &importwallet,             true,   {\"filename\"} },\n-    { \"wallet\",             \"importaddress\",            &importaddress,            true,   {\"address\",\"label\",\"rescan\",\"p2sh\"} },\n-    { \"wallet\",             \"importprunedfunds\",        &importprunedfunds,        true,   {\"rawtransaction\",\"txoutproof\"} },\n-    { \"wallet\",             \"importpubkey\",             &importpubkey,             true,   {\"pubkey\",\"label\",\"rescan\"} },\n-    { \"wallet\",             \"keypoolrefill\",            &keypoolrefill,            true,   {\"newsize\"} },\n-    { \"wallet\",             \"listaccounts\",             &listaccounts,             false,  {\"minconf\",\"include_watchonly\"} },\n-    { \"wallet\",             \"listaddressgroupings\",     &listaddressgroupings,     false,  {} },\n-    { \"wallet\",             \"listlockunspent\",          &listlockunspent,          false,  {} },\n-    { \"wallet\",             \"listreceivedbyaccount\",    &listreceivedbyaccount,    false,  {\"minconf\",\"include_empty\",\"include_watchonly\"} },\n-    { \"wallet\",             \"listreceivedbyaddress\",    &listreceivedbyaddress,    false,  {\"minconf\",\"include_empty\",\"include_watchonly\"} },\n-    { \"wallet\",             \"listsinceblock\",           &listsinceblock,           false,  {\"blockhash\",\"target_confirmations\",\"include_watchonly\",\"include_removed\"} },\n-    { \"wallet\",             \"listtransactions\",         &listtransactions,         false,  {\"account\",\"count\",\"skip\",\"include_watchonly\"} },\n-    { \"wallet\",             \"listunspent\",              &listunspent,              false,  {\"minconf\",\"maxconf\",\"addresses\",\"include_unsafe\",\"query_options\"} },\n-    { \"wallet\",             \"listwallets\",              &listwallets,              true,   {} },\n-    { \"wallet\",             \"lockunspent\",              &lockunspent,              true,   {\"unlock\",\"transactions\"} },\n-    { \"wallet\",             \"move\",                     &movecmd,                  false,  {\"fromaccount\",\"toaccount\",\"amount\",\"minconf\",\"comment\"} },\n-    { \"wallet\",             \"sendfrom\",                 &sendfrom,                 false,  {\"fromaccount\",\"toaddress\",\"amount\",\"minconf\",\"comment\",\"comment_to\"} },\n-    { \"wallet\",             \"sendmany\",                 &sendmany,                 false,  {\"fromaccount\",\"amounts\",\"minconf\",\"comment\",\"subtractfeefrom\",\"replaceable\",\"conf_target\",\"estimate_mode\"} },\n-    { \"wallet\",             \"sendtoaddress\",            &sendtoaddress,            false,  {\"address\",\"amount\",\"comment\",\"comment_to\",\"subtractfeefromamount\",\"replaceable\",\"conf_target\",\"estimate_mode\"} },\n-    { \"wallet\",             \"setaccount\",               &setaccount,               true,   {\"address\",\"account\"} },\n-    { \"wallet\",             \"settxfee\",                 &settxfee,                 true,   {\"amount\"} },\n-    { \"wallet\",             \"signmessage\",              &signmessage,              true,   {\"address\",\"message\"} },\n-    { \"wallet\",             \"walletlock\",               &walletlock,               true,   {} },\n-    { \"wallet\",             \"walletpassphrasechange\",   &walletpassphrasechange,   true,   {\"oldpassphrase\",\"newpassphrase\"} },\n-    { \"wallet\",             \"walletpassphrase\",         &walletpassphrase,         true,   {\"passphrase\",\"timeout\"} },\n-    { \"wallet\",             \"removeprunedfunds\",        &removeprunedfunds,        true,   {\"txid\"} },\n-\n-    { \"generating\",         \"generate\",                 &generate,                 true,   {\"nblocks\",\"maxtries\"} },\n+{ //  category              name                        actor (function)           argNames\n+    //  --------------------- ------------------------    -----------------------  ----------\n+    { \"rawtransactions\",    \"fundrawtransaction\",       &fundrawtransaction,       {\"hexstring\",\"options\"} },\n+    { \"hidden\",             \"resendwallettransactions\", &resendwallettransactions, {} },\n+    { \"wallet\",             \"abandontransaction\",       &abandontransaction,       {\"txid\"} },\n+    { \"wallet\",             \"abortrescan\",              &abortrescan,              {} },\n+    { \"wallet\",             \"addmultisigaddress\",       &addmultisigaddress,       {\"nrequired\",\"keys\",\"account\"} },\n+    { \"wallet\",             \"addwitnessaddress\",        &addwitnessaddress,        {\"address\"} },\n+    { \"wallet\",             \"backupwallet\",             &backupwallet,             {\"destination\"} },\n+    { \"wallet\",             \"bumpfee\",                  &bumpfee,                  {\"txid\", \"options\"} },\n+    { \"wallet\",             \"dumpprivkey\",              &dumpprivkey,              {\"address\"}  },\n+    { \"wallet\",             \"dumpwallet\",               &dumpwallet,               {\"filename\"} },\n+    { \"wallet\",             \"encryptwallet\",            &encryptwallet,            {\"passphrase\"} },\n+    { \"wallet\",             \"getaccountaddress\",        &getaccountaddress,        {\"account\"} },\n+    { \"wallet\",             \"getaccount\",               &getaccount,               {\"address\"} },\n+    { \"wallet\",             \"getaddressesbyaccount\",    &getaddressesbyaccount,    {\"account\"} },\n+    { \"wallet\",             \"getbalance\",               &getbalance,               {\"account\",\"minconf\",\"include_watchonly\"} },\n+    { \"wallet\",             \"getnewaddress\",            &getnewaddress,            {\"account\"} },\n+    { \"wallet\",             \"getrawchangeaddress\",      &getrawchangeaddress,      {} },\n+    { \"wallet\",             \"getreceivedbyaccount\",     &getreceivedbyaccount,     {\"account\",\"minconf\"} },\n+    { \"wallet\",             \"getreceivedbyaddress\",     &getreceivedbyaddress,     {\"address\",\"minconf\"} },\n+    { \"wallet\",             \"gettransaction\",           &gettransaction,           {\"txid\",\"include_watchonly\"} },\n+    { \"wallet\",             \"getunconfirmedbalance\",    &getunconfirmedbalance,    {} },\n+    { \"wallet\",             \"getwalletinfo\",            &getwalletinfo,            {} },\n+    { \"wallet\",             \"importmulti\",              &importmulti,              {\"requests\",\"options\"} },\n+    { \"wallet\",             \"importprivkey\",            &importprivkey,            {\"privkey\",\"label\",\"rescan\"} },\n+    { \"wallet\",             \"importwallet\",             &importwallet,             {\"filename\"} },\n+    { \"wallet\",             \"importaddress\",            &importaddress,            {\"address\",\"label\",\"rescan\",\"p2sh\"} },\n+    { \"wallet\",             \"importprunedfunds\",        &importprunedfunds,        {\"rawtransaction\",\"txoutproof\"} },\n+    { \"wallet\",             \"importpubkey\",             &importpubkey,             {\"pubkey\",\"label\",\"rescan\"} },\n+    { \"wallet\",             \"keypoolrefill\",            &keypoolrefill,            {\"newsize\"} },\n+    { \"wallet\",             \"listaccounts\",             &listaccounts,             {\"minconf\",\"include_watchonly\"} },\n+    { \"wallet\",             \"listaddressgroupings\",     &listaddressgroupings,     {} },\n+    { \"wallet\",             \"listlockunspent\",          &listlockunspent,          {} },\n+    { \"wallet\",             \"listreceivedbyaccount\",    &listreceivedbyaccount,    {\"minconf\",\"include_empty\",\"include_watchonly\"} },\n+    { \"wallet\",             \"listreceivedbyaddress\",    &listreceivedbyaddress,    {\"minconf\",\"include_empty\",\"include_watchonly\"} },\n+    { \"wallet\",             \"listsinceblock\",           &listsinceblock,           {\"blockhash\",\"target_confirmations\",\"include_watchonly\",\"include_removed\"} },\n+    { \"wallet\",             \"listtransactions\",         &listtransactions,         {\"account\",\"count\",\"skip\",\"include_watchonly\"} },\n+    { \"wallet\",             \"listunspent\",              &listunspent,              {\"minconf\",\"maxconf\",\"addresses\",\"include_unsafe\",\"query_options\"} },\n+    { \"wallet\",             \"listwallets\",              &listwallets,              {} },\n+    { \"wallet\",             \"lockunspent\",              &lockunspent,              {\"unlock\",\"transactions\"} },\n+    { \"wallet\",             \"move\",                     &movecmd,                  {\"fromaccount\",\"toaccount\",\"amount\",\"minconf\",\"comment\"} },\n+    { \"wallet\",             \"sendfrom\",                 &sendfrom,                 {\"fromaccount\",\"toaddress\",\"amount\",\"minconf\",\"comment\",\"comment_to\"} },\n+    { \"wallet\",             \"sendmany\",                 &sendmany,                 {\"fromaccount\",\"amounts\",\"minconf\",\"comment\",\"subtractfeefrom\",\"replaceable\",\"conf_target\",\"estimate_mode\"} },\n+    { \"wallet\",             \"sendtoaddress\",            &sendtoaddress,            {\"address\",\"amount\",\"comment\",\"comment_to\",\"subtractfeefromamount\",\"replaceable\",\"conf_target\",\"estimate_mode\"} },\n+    { \"wallet\",             \"setaccount\",               &setaccount,               {\"address\",\"account\"} },\n+    { \"wallet\",             \"settxfee\",                 &settxfee,                 {\"amount\"} },\n+    { \"wallet\",             \"signmessage\",              &signmessage,              {\"address\",\"message\"} },\n+    { \"wallet\",             \"walletlock\",               &walletlock,               {} },\n+    { \"wallet\",             \"walletpassphrasechange\",   &walletpassphrasechange,   {\"oldpassphrase\",\"newpassphrase\"} },\n+    { \"wallet\",             \"walletpassphrase\",         &walletpassphrase,         {\"passphrase\",\"timeout\"} },\n+    { \"wallet\",             \"removeprunedfunds\",        &removeprunedfunds,        {\"txid\"} },\n+\n+    { \"generating\",         \"generate\",                 &generate,                 {\"nblocks\",\"maxtries\"} },\n };\n \n void RegisterWalletRPCCommands(CRPCTable &t)"
      }
    ]
  }
]