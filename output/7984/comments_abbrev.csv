MarcoFalke,2016-05-01T16:07:47Z,"Concept ACK.\n\nRelated: #6570, #7061,  #7551\n",https://github.com/bitcoin/bitcoin/pull/7984#issuecomment-216052264,216052264,
jonasschnelli,2016-05-01T18:04:40Z,I tend to concept NACK.\nWhat if you want to import 10 addresses? Self-calculate the oldest heigh and pass it in when you import the last address?\n\nIMO the `importmulti` #7551 call makes more sense maybe there could also be a reason to support the `rescanblockchain` #7061. But later should not be required if we do #7551 right.\n,https://github.com/bitcoin/bitcoin/pull/7984#issuecomment-216059463,216059463,
achow101,2016-05-01T18:26:37Z,"> What if you want to import 10 addresses? Self-calculate the oldest heigh and pass it in when you import the last address?\n\nSure, why not? The current behavior would have it rescan from genesis for the last address, and that behavior will still happen here.\n\n As for importmulti, I agree that would also be good. However, I think that the individual import RPCs should also have the same rescann",https://github.com/bitcoin/bitcoin/pull/7984#issuecomment-216062408,216062408,
jonasschnelli,2016-05-02T06:54:10Z,@achow101:\nRight. This is a point.\n\nEither we support no rescan for a single input (maybe together with a manual rescan like #7061) or each address/script/pubkey input call should support the same rescan flexibility.\n\nThe question now is if we should support heights or timestamps (key birthday). IIRC discussions in #7061 showed that most devs prefer timestamps.\n,https://github.com/bitcoin/bitcoin/pull/7984#issuecomment-216118380,216118380,
laanwj,2016-05-02T11:35:59Z,"100% agree with @jonasschnelli, importmulti with explicit key birthdays is the answer here, not adding yet another positional argument to RPC calls (yes, you can also use importmulti to import just one key).\nLet's focus on that pull and get it merged.\n\nIn time we can deprecate `import*` in favor of the `importmulti` interface which can (but doesn't need to) handle multiple keys. There are some ",https://github.com/bitcoin/bitcoin/pull/7984#issuecomment-216212024,216212024,
promag,2016-05-02T12:36:42Z,Agree with @laanwj and @jonasschnelli. For me _batch_ calls are preferred. Still not sure about the name `importmulti` thou.\n\nBut let's not put aside the concept of `rescanblockchain`. It makes perfect sense to trigger notifications from a specific block/timestamp.\n,https://github.com/bitcoin/bitcoin/pull/7984#issuecomment-216224278,216224278,
promag,2016-05-02T12:39:40Z,> (and no one generally really wants to import keys one by one and rescan in between)\n\n@laanwj true but one can import one by one and then issue the rescan from the correct timestamp.\n,https://github.com/bitcoin/bitcoin/pull/7984#issuecomment-216224795,216224795,
laanwj,2016-05-02T12:40:36Z,"@promag \n\n> true but one can import one by one and then issue the rescan from the correct timestamp.\n\nI agree, but that's inferior in every way to just having one self-contained operation.\n",https://github.com/bitcoin/bitcoin/pull/7984#issuecomment-216224942,216224942,
promag,2016-05-02T12:57:59Z,"> I agree, but that's inferior in every way to just having one self-contained operation.\n\n@laanwj well this discussion is like `*rawtransaction` calls vs `createtransaction` on steroids. In terms of API it is more desirable to have simple, flexible, self explanatory calls instead of one super configurable call.\n\nHowever I see this like OpenGL `glVertex` vs `glDrawArrays`. There are too much lo",https://github.com/bitcoin/bitcoin/pull/7984#issuecomment-216227955,216227955,
sipa,2016-06-02T18:34:23Z,"@promag I think this is a bit different.\n\nIf we would have had something like `importmulti` as the only mechanism for importing, I think nobody would even know the concept of a rescan, which is just an artifact of how wallets used to work (without knowing up to where they were synced, and without birth time).\n",https://github.com/bitcoin/bitcoin/pull/7984#issuecomment-223381740,223381740,
jonasschnelli,2016-06-02T18:38:50Z,"I think as long as we support/have a rescan ~~RPC~~ call, we should also support an optional ""fromheight"" argument. We could argue about dropping the rescan call.\n",https://github.com/bitcoin/bitcoin/pull/7984#issuecomment-223382994,223382994,
jonasschnelli,2016-06-02T18:41:16Z,"Sorry, I meant `-rescan` as startup option (not as RPC call). IMO we could drop the -rescan startup argument in favor or ""importmulti"" or/and RPC ""rescanblockchain"" https://github.com/bitcoin/bitcoin/pull/7061/files\n",https://github.com/bitcoin/bitcoin/pull/7984#issuecomment-223383697,223383697,
sipa,2016-06-02T18:47:54Z,"We've talked about changing `-rescan` to a dummy before, because people would keep on suggesting it as a magic fix for all sorts of problems for years on the forums, while it had absolutely no reason (only when you manually changed your wallet.dat file it would be needed).\n\nSince the introduction of importprivkey without rescan, it became useful again, since it was the only way to import multipl",https://github.com/bitcoin/bitcoin/pull/7984#issuecomment-223385646,223385646,
sipa,2016-06-02T18:48:00Z,Concept NACK\n,https://github.com/bitcoin/bitcoin/pull/7984#issuecomment-223385689,223385689,
kazcw,2016-05-01T17:59:14Z,Why not define this in the `if (fRescan)` block where it's used?\n,https://github.com/bitcoin/bitcoin/pull/7984#discussion_r61690375,61690375,src/wallet/rpcdump.cpp
kazcw,2016-05-01T18:03:31Z,Indexing into chainActive isn't safe until after locking cs_main\n,https://github.com/bitcoin/bitcoin/pull/7984#discussion_r61690442,61690442,src/wallet/rpcdump.cpp
kazcw,2016-05-01T18:08:40Z,"This doesn't need to be a special case since the default for `-rescan` is `0`, and `chainActive.Genesis() == chainActive[0]`\n",https://github.com/bitcoin/bitcoin/pull/7984#discussion_r61690502,61690502,src/wallet/wallet.cpp
achow101,2016-05-01T18:32:40Z,"If I move it down to `if (fRescan)`, cs_main should be locked, right?\n",https://github.com/bitcoin/bitcoin/pull/7984#discussion_r61690799,61690799,src/wallet/rpcdump.cpp
achow101,2016-05-01T18:39:33Z,fixed\n,https://github.com/bitcoin/bitcoin/pull/7984#discussion_r61690899,61690899,src/wallet/rpcdump.cpp
achow101,2016-05-01T18:39:40Z,fixed\n,https://github.com/bitcoin/bitcoin/pull/7984#discussion_r61690902,61690902,src/wallet/wallet.cpp
