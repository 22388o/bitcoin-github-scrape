[
  {
    "sha": "3d552b0d788a7d3102396b32d0de08e57cbfd297",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZDU1MmIwZDc4OGE3ZDMxMDIzOTZiMzJkMGRlMDhlNTdjYmZkMjk3",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-06T11:26:58Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2021-06-03T17:09:28Z"
      },
      "message": "[doc] explain why CheckBlock() is called before AcceptBlock()\n\nCo-authored-by: Suhas Daftuar <sdaftuar@gmail.com>",
      "tree": {
        "sha": "a96d28377499649379aad5d193d02fe958e4e347",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a96d28377499649379aad5d193d02fe958e4e347"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d552b0d788a7d3102396b32d0de08e57cbfd297",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmC5DUcACgkQV/+b28ww\nEAl8qQ//cSdFJBvUTaTJcj3sxoL2ccDzMLOEtytf9TM9DyVczjMiZv364kjAgeK/\n+OeaGPSi/+J5E/dmzcfNeOMcEorR8KFxJGUmU8f4kFWerclHG5Tvqq2oodM3IVZW\n0JAflVDzD1AAxVFHLfClgw/QAE9Th4OR3s2O0LDtcAMdm0400pFIK0CpL1nCtCGy\ndwrBIqNM1NhsZ/ufByItyfckl3k5yrDruzdfP6mu+reM/ynjJOWLo93A+NXcSHRg\nZzktHwSxrxBKe/RwS6FmokEE+ks7bn2kTWkuOrOXui75T6QTThfbUo/qXxIH+sdx\n7GNE9PicQpzynShSJmm6DHanEarjVU6Htu2is2GWxGarp6NT4M7HSYAHj7V1T59l\nBNhDose+ZJWzXw6K/WjqSRYFczuyFsDk0ClHjaH45CQ13esMfKq6fSWWQfKz7pd+\n6o32ZQORwChh7MO6VpKHEdzEbbiZwqA9Tqeu+vjgVaGfaI3kyJrCE5JBgpa/Od6Q\nnznXWWM+VLJnrXZ0NStqesYUYkaY2F7gztqw208iZgKXIaq2pPXAOcjezMcJecbb\ntPilNzp1k2cguYoZtR2uYUF6yAhisKzMLGt9p+5B4VInW2YHRdY285YYYdIE+pGb\n3ZU+1B4u8Nfy4k8Yov3WJ+o2S4glub+ovUKMBSV9ryR8gaxffNY=\n=MUvZ\n-----END PGP SIGNATURE-----",
        "payload": "tree a96d28377499649379aad5d193d02fe958e4e347\nparent 07ededa30c9473ac32fc3e12b399c0ba999a4c40\nauthor Sjors Provoost <sjors@sprovoost.nl> 1551871618 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1622740168 +0200\n\n[doc] explain why CheckBlock() is called before AcceptBlock()\n\nCo-authored-by: Suhas Daftuar <sdaftuar@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d552b0d788a7d3102396b32d0de08e57cbfd297",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3d552b0d788a7d3102396b32d0de08e57cbfd297",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d552b0d788a7d3102396b32d0de08e57cbfd297/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "07ededa30c9473ac32fc3e12b399c0ba999a4c40",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07ededa30c9473ac32fc3e12b399c0ba999a4c40",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/07ededa30c9473ac32fc3e12b399c0ba999a4c40"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 5,
      "deletions": 2
    },
    "files": [
      {
        "sha": "af5a7e98e3d2e3189727f927acf16b1a3b976426",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3d552b0d788a7d3102396b32d0de08e57cbfd297/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3d552b0d788a7d3102396b32d0de08e57cbfd297/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=3d552b0d788a7d3102396b32d0de08e57cbfd297",
        "patch": "@@ -3605,8 +3605,11 @@ bool ChainstateManager::ProcessNewBlock(const CChainParams& chainparams, const s\n         // Therefore, the following critical section must include the CheckBlock() call as well.\n         LOCK(cs_main);\n \n-        // Ensure that CheckBlock() passes before calling AcceptBlock, as\n-        // belt-and-suspenders.\n+        // Skipping AcceptBlock() for CheckBlock() failures means that we will never mark a block as invalid if\n+        // CheckBlock() fails.  This is protective against consensus failure if there are any unknown forms of block\n+        // malleability that cause CheckBlock() to fail; see e.g. CVE-2012-2459 and\n+        // https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-February/016697.html.  Because CheckBlock() is\n+        // not very expensive, the anti-DoS benefits of caching failure (of a definitely-invalid block) are not substantial.\n         bool ret = CheckBlock(*block, state, chainparams.GetConsensus());\n         if (ret) {\n             // Store to disk"
      }
    ]
  }
]