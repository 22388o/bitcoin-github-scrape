practicalswift,2020-06-09 15:11:42,Now fuzzing `BanMan::Discourage(â€¦)` too: the commit from #19219 is now part of this PR.,https://github.com/bitcoin/bitcoin/pull/19222#issuecomment-641361227,641361227,
DrahtBot,2020-06-09 22:47:36,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19415 (net: Make DNS lookup mockable, add fuzzing harness by practicalswift)\n* #19288 (tests: Add fuzzing harness for To",https://github.com/bitcoin/bitcoin/pull/19222#issuecomment-641620718,641620718,
practicalswift,2020-07-09 21:03:32,Rebased on `master` now that @sipa's discouragement filter change in #19219 has been merged :),https://github.com/bitcoin/bitcoin/pull/19222#issuecomment-656350286,656350286,
Crypt-iQ,2020-07-11 05:44:47,"Tested ACK :)\n\nRan against ad953a2 for about 18 hours on a Ubuntu VM with 2 core and 2g RAM. It was pretty slow even for a weak VM, probably because of file io when dumping the banlist. \n```\nstart_time        : 1594037321\nlast_update       : 1594098196\nfuzzer_pid        : 16179\ncycles_done       : 0\nexecs_done        : 379262\nexecs_per_sec     : 6.20\npaths_total       : 341\np",https://github.com/bitcoin/bitcoin/pull/19222#issuecomment-656995470,656995470,
practicalswift,2020-07-11 17:38:42,@Crypt-iQ Thanks a lot for testing and reviewing. Great to have you on board as one of the actively reviewing fuzzing enthusiasts of the project! :),https://github.com/bitcoin/bitcoin/pull/19222#issuecomment-657101171,657101171,
Crypt-iQ,2020-07-05 08:30:21,"@practicalswift Do you think adding random data to ""fuzzed_banlist.dat"", then calling `BanMan ban_man{banlist_file, nullptr, ConsumeBanTimeOffset(fuzzed_data_provider)};` could be its own fuzz test? It would basically fuzz `DeserializeFileDB` in `src/addrdb.cpp`.",https://github.com/bitcoin/bitcoin/pull/19222#discussion_r449850434,449850434,src/test/fuzz/banman.cpp
practicalswift,2020-07-09 21:01:39,"That is a good idea that can be tackled in a follow-up PR, but instead of writing files to disk I think we should use a mocked/fuzzed filesystem interface like the one that will be introduced as part of #19143. Please consider reviewing that PR :)",https://github.com/bitcoin/bitcoin/pull/19222#discussion_r452487835,452487835,src/test/fuzz/banman.cpp
MarcoFalke,2020-07-11 09:39:50,"instead of having a fuzz header which is included in all fuzz test, and itself includes all of bitcoin core, what about moving the implementations to a cpp file or maybe even a fuzz/util/net etc ",https://github.com/bitcoin/bitcoin/pull/19222#discussion_r453177452,453177452,src/test/fuzz/util.h
practicalswift,2020-07-11 17:23:21,Sounds like a plan! :),https://github.com/bitcoin/bitcoin/pull/19222#discussion_r453215753,453215753,src/test/fuzz/util.h
