[
  {
    "sha": "3ae0735553e078bcedffd0a657bee106ab79a5d4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYWUwNzM1NTUzZTA3OGJjZWRmZmQwYTY1N2JlZTEwNmFiNzlhNWQ0",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-02-06T17:37:49Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-02-07T14:14:31Z"
      },
      "message": "Unit tests for the GetArg() methods",
      "tree": {
        "sha": "aae8ef122e0956fa200c9c1a6f8adf3ef1673e37",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aae8ef122e0956fa200c9c1a6f8adf3ef1673e37"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ae0735553e078bcedffd0a657bee106ab79a5d4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ae0735553e078bcedffd0a657bee106ab79a5d4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3ae0735553e078bcedffd0a657bee106ab79a5d4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ae0735553e078bcedffd0a657bee106ab79a5d4/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b452dff5e9f1401343b6c52ef739014d81fa8c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b452dff5e9f1401343b6c52ef739014d81fa8c6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b452dff5e9f1401343b6c52ef739014d81fa8c6"
      }
    ],
    "stats": {
      "total": 170,
      "additions": 146,
      "deletions": 24
    },
    "files": [
      {
        "sha": "5b378eaca9c7ee21e959e49e4c9c9c57f513e428",
        "filename": "src/test/getarg_tests.cpp",
        "status": "added",
        "additions": 95,
        "deletions": 0,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ae0735553e078bcedffd0a657bee106ab79a5d4/src/test/getarg_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ae0735553e078bcedffd0a657bee106ab79a5d4/src/test/getarg_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/getarg_tests.cpp?ref=3ae0735553e078bcedffd0a657bee106ab79a5d4",
        "patch": "@@ -0,0 +1,95 @@\n+#include <boost/algorithm/string.hpp>\n+#include <boost/foreach.hpp>\n+#include <boost/test/unit_test.hpp>\n+\n+#include \"util.h\"\n+\n+BOOST_AUTO_TEST_SUITE(getarg_tests)\n+\n+static void\n+ResetArgs(const std::string& strArg)\n+{\n+    std::vector<std::string> vecArg;\n+    boost::split(vecArg, strArg, boost::is_space(), boost::token_compress_on);\n+\n+    // Insert dummy executable name:\n+    vecArg.insert(vecArg.begin(), \"testbitcoin\");\n+\n+    // Convert to char*:\n+    std::vector<const char*> vecChar;\n+    BOOST_FOREACH(std::string& s, vecArg)\n+        vecChar.push_back(s.c_str());\n+\n+    ParseParameters(vecChar.size(), &vecChar[0]);\n+}\n+\n+BOOST_AUTO_TEST_CASE(boolarg)\n+{\n+    ResetArgs(\"-foo\");\n+    BOOST_CHECK(GetBoolArg(\"-foo\"));\n+    BOOST_CHECK(GetBoolArg(\"-foo\", false));\n+    BOOST_CHECK(GetBoolArg(\"-foo\", true));\n+\n+    BOOST_CHECK(!GetBoolArg(\"-fo\"));\n+    BOOST_CHECK(!GetBoolArg(\"-fo\", false));\n+    BOOST_CHECK(GetBoolArg(\"-fo\", true));\n+\n+    BOOST_CHECK(!GetBoolArg(\"-fooo\"));\n+    BOOST_CHECK(!GetBoolArg(\"-fooo\", false));\n+    BOOST_CHECK(GetBoolArg(\"-fooo\", true));\n+\n+    ResetArgs(\"-foo=0\");\n+    BOOST_CHECK(!GetBoolArg(\"-foo\"));\n+    BOOST_CHECK(!GetBoolArg(\"-foo\", false));\n+    BOOST_CHECK(!GetBoolArg(\"-foo\", true));\n+\n+    ResetArgs(\"-foo=1\");\n+    BOOST_CHECK(GetBoolArg(\"-foo\"));\n+    BOOST_CHECK(GetBoolArg(\"-foo\", false));\n+    BOOST_CHECK(GetBoolArg(\"-foo\", true));\n+}\n+\n+BOOST_AUTO_TEST_CASE(stringarg)\n+{\n+    ResetArgs(\"\");\n+    BOOST_CHECK_EQUAL(GetArg(\"-foo\", \"\"), \"\");\n+    BOOST_CHECK_EQUAL(GetArg(\"-foo\", \"eleven\"), \"eleven\");\n+\n+    ResetArgs(\"-foo -bar\");\n+    BOOST_CHECK_EQUAL(GetArg(\"-foo\", \"\"), \"\");\n+    BOOST_CHECK_EQUAL(GetArg(\"-foo\", \"eleven\"), \"\");\n+\n+    ResetArgs(\"-foo=\");\n+    BOOST_CHECK_EQUAL(GetArg(\"-foo\", \"\"), \"\");\n+    BOOST_CHECK_EQUAL(GetArg(\"-foo\", \"eleven\"), \"\");\n+\n+    ResetArgs(\"-foo=11\");\n+    BOOST_CHECK_EQUAL(GetArg(\"-foo\", \"\"), \"11\");\n+    BOOST_CHECK_EQUAL(GetArg(\"-foo\", \"eleven\"), \"11\");\n+\n+    ResetArgs(\"-foo=eleven\");\n+    BOOST_CHECK_EQUAL(GetArg(\"-foo\", \"\"), \"eleven\");\n+    BOOST_CHECK_EQUAL(GetArg(\"-foo\", \"eleven\"), \"eleven\");\n+\n+}\n+\n+BOOST_AUTO_TEST_CASE(intarg)\n+{\n+    ResetArgs(\"\");\n+    BOOST_CHECK_EQUAL(GetArg(\"-foo\", 11), 11);\n+    BOOST_CHECK_EQUAL(GetArg(\"-foo\", 0), 0);\n+\n+    ResetArgs(\"-foo -bar\");\n+    BOOST_CHECK_EQUAL(GetArg(\"-foo\", 11), 0);\n+    BOOST_CHECK_EQUAL(GetArg(\"-bar\", 11), 0);\n+\n+    ResetArgs(\"-foo=11 -bar=12\");\n+    BOOST_CHECK_EQUAL(GetArg(\"-foo\", 0), 11);\n+    BOOST_CHECK_EQUAL(GetArg(\"-bar\", 11), 12);\n+\n+    ResetArgs(\"-foo=NaN -bar=NotANumber\");\n+    BOOST_CHECK_EQUAL(GetArg(\"-foo\", 1), 0);\n+    BOOST_CHECK_EQUAL(GetArg(\"-bar\", 11), 0);\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "b4f854356671c7d72221433f14bc18f5659f0fcf",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 1,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ae0735553e078bcedffd0a657bee106ab79a5d4/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ae0735553e078bcedffd0a657bee106ab79a5d4/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=3ae0735553e078bcedffd0a657bee106ab79a5d4",
        "patch": "@@ -454,7 +454,7 @@ vector<unsigned char> ParseHex(const string& str)\n     return ParseHex(str.c_str());\n }\n \n-void ParseParameters(int argc, char* argv[])\n+void ParseParameters(int argc, const char*const argv[])\n {\n     mapArgs.clear();\n     mapMultiArgs.clear();\n@@ -480,6 +480,31 @@ void ParseParameters(int argc, char* argv[])\n     }\n }\n \n+std::string GetArg(const std::string& strArg, const std::string& strDefault)\n+{\n+    if (mapArgs.count(strArg))\n+        return mapArgs[strArg];\n+    return strDefault;\n+}\n+\n+int64 GetArg(const std::string& strArg, int64 nDefault)\n+{\n+    if (mapArgs.count(strArg))\n+        return atoi64(mapArgs[strArg]);\n+    return nDefault;\n+}\n+\n+bool GetBoolArg(const std::string& strArg, bool fDefault)\n+{\n+    if (mapArgs.count(strArg))\n+    {\n+        if (mapArgs[strArg].empty())\n+            return true;\n+        return (atoi(mapArgs[strArg]) != 0);\n+    }\n+    return fDefault;\n+}\n+\n bool SoftSetArg(const std::string& strArg, const std::string& strValue)\n {\n     if (mapArgs.count(strArg))"
      },
      {
        "sha": "20fdb36fe6677eb97b20e5260aa215f820820b10",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 25,
        "deletions": 23,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ae0735553e078bcedffd0a657bee106ab79a5d4/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ae0735553e078bcedffd0a657bee106ab79a5d4/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=3ae0735553e078bcedffd0a657bee106ab79a5d4",
        "patch": "@@ -143,7 +143,7 @@ std::vector<unsigned char> DecodeBase64(const char* p, bool* pfInvalid = NULL);\n std::string DecodeBase64(const std::string& str);\n std::string EncodeBase64(const unsigned char* pch, size_t len);\n std::string EncodeBase64(const std::string& str);\n-void ParseParameters(int argc, char* argv[]);\n+void ParseParameters(int argc, const char*const argv[]);\n bool WildcardMatch(const char* psz, const char* mask);\n bool WildcardMatch(const std::string& str, const std::string& mask);\n int GetFilesize(FILE* file);\n@@ -401,30 +401,32 @@ inline bool IsSwitchChar(char c)\n #endif\n }\n \n-inline std::string GetArg(const std::string& strArg, const std::string& strDefault)\n-{\n-    if (mapArgs.count(strArg))\n-        return mapArgs[strArg];\n-    return strDefault;\n-}\n+/**\n+ * Return string argument or default value\n+ *\n+ * @param strArg Argument to get (e.g. \"-foo\")\n+ * @param default (e.g. \"1\")\n+ * @return command-line argument or default value\n+ */\n+std::string GetArg(const std::string& strArg, const std::string& strDefault);\n \n-inline int64 GetArg(const std::string& strArg, int64 nDefault)\n-{\n-    if (mapArgs.count(strArg))\n-        return atoi64(mapArgs[strArg]);\n-    return nDefault;\n-}\n+/**\n+ * Return integer argument or default value\n+ *\n+ * @param strArg Argument to get (e.g. \"-foo\")\n+ * @param default (e.g. 1)\n+ * @return command-line argument (0 if invalid number) or default value\n+ */\n+int64 GetArg(const std::string& strArg, int64 nDefault);\n \n-inline bool GetBoolArg(const std::string& strArg, bool fDefault=false)\n-{\n-    if (mapArgs.count(strArg))\n-    {\n-        if (mapArgs[strArg].empty())\n-            return true;\n-        return (atoi(mapArgs[strArg]) != 0);\n-    }\n-    return fDefault;\n-}\n+/**\n+ * Return boolean argument or default value\n+ *\n+ * @param strArg Argument to get (e.g. \"-foo\")\n+ * @param default (true or false)\n+ * @return command-line argument or default value\n+ */\n+bool GetBoolArg(const std::string& strArg, bool fDefault=false);\n \n /**\n  * Set an argument if it doesn't already have a value"
      }
    ]
  },
  {
    "sha": "3ad9f8a70fda629d0ec0b87631d1361178763733",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYWQ5ZjhhNzBmZGE2MjlkMGVjMGI4NzYzMWQxMzYxMTc4NzYzNzMz",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-02-06T18:55:11Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-02-07T14:14:31Z"
      },
      "message": "New GetArg features: allow --, and booleans can be -foo or -nofoo",
      "tree": {
        "sha": "2b5d3f08689aafb3d0b0de92b832529871db9b31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2b5d3f08689aafb3d0b0de92b832529871db9b31"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ad9f8a70fda629d0ec0b87631d1361178763733",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ad9f8a70fda629d0ec0b87631d1361178763733",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3ad9f8a70fda629d0ec0b87631d1361178763733",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ad9f8a70fda629d0ec0b87631d1361178763733/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3ae0735553e078bcedffd0a657bee106ab79a5d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ae0735553e078bcedffd0a657bee106ab79a5d4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3ae0735553e078bcedffd0a657bee106ab79a5d4"
      }
    ],
    "stats": {
      "total": 100,
      "additions": 100,
      "deletions": 0
    },
    "files": [
      {
        "sha": "78953d296f4f333ba6d3937b9c8f12278e738fbf",
        "filename": "src/test/getarg_tests.cpp",
        "status": "modified",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ad9f8a70fda629d0ec0b87631d1361178763733/src/test/getarg_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ad9f8a70fda629d0ec0b87631d1361178763733/src/test/getarg_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/getarg_tests.cpp?ref=3ad9f8a70fda629d0ec0b87631d1361178763733",
        "patch": "@@ -47,6 +47,44 @@ BOOST_AUTO_TEST_CASE(boolarg)\n     BOOST_CHECK(GetBoolArg(\"-foo\"));\n     BOOST_CHECK(GetBoolArg(\"-foo\", false));\n     BOOST_CHECK(GetBoolArg(\"-foo\", true));\n+\n+    // New 0.6 feature: auto-map -nosomething to !-something:\n+    ResetArgs(\"-nofoo\");\n+    BOOST_CHECK(!GetBoolArg(\"-foo\"));\n+    BOOST_CHECK(!GetBoolArg(\"-foo\", false));\n+    BOOST_CHECK(!GetBoolArg(\"-foo\", true));\n+\n+    ResetArgs(\"-nofoo=1\");\n+    BOOST_CHECK(!GetBoolArg(\"-foo\"));\n+    BOOST_CHECK(!GetBoolArg(\"-foo\", false));\n+    BOOST_CHECK(!GetBoolArg(\"-foo\", true));\n+\n+    ResetArgs(\"-foo -nofoo\");  // -foo should win\n+    BOOST_CHECK(GetBoolArg(\"-foo\"));\n+    BOOST_CHECK(GetBoolArg(\"-foo\", false));\n+    BOOST_CHECK(GetBoolArg(\"-foo\", true));\n+\n+    ResetArgs(\"-foo=1 -nofoo=1\");  // -foo should win\n+    BOOST_CHECK(GetBoolArg(\"-foo\"));\n+    BOOST_CHECK(GetBoolArg(\"-foo\", false));\n+    BOOST_CHECK(GetBoolArg(\"-foo\", true));\n+\n+    ResetArgs(\"-foo=0 -nofoo=0\");  // -foo should win\n+    BOOST_CHECK(!GetBoolArg(\"-foo\"));\n+    BOOST_CHECK(!GetBoolArg(\"-foo\", false));\n+    BOOST_CHECK(!GetBoolArg(\"-foo\", true));\n+\n+    // New 0.6 feature: treat -- same as -:\n+    ResetArgs(\"--foo=1\");\n+    BOOST_CHECK(GetBoolArg(\"-foo\"));\n+    BOOST_CHECK(GetBoolArg(\"-foo\", false));\n+    BOOST_CHECK(GetBoolArg(\"-foo\", true));\n+\n+    ResetArgs(\"--nofoo=1\");\n+    BOOST_CHECK(!GetBoolArg(\"-foo\"));\n+    BOOST_CHECK(!GetBoolArg(\"-foo\", false));\n+    BOOST_CHECK(!GetBoolArg(\"-foo\", true));\n+\n }\n \n BOOST_AUTO_TEST_CASE(stringarg)\n@@ -92,4 +130,38 @@ BOOST_AUTO_TEST_CASE(intarg)\n     BOOST_CHECK_EQUAL(GetArg(\"-bar\", 11), 0);\n }\n \n+BOOST_AUTO_TEST_CASE(doubledash)\n+{\n+    ResetArgs(\"--foo\");\n+    BOOST_CHECK_EQUAL(GetBoolArg(\"-foo\"), true);\n+\n+    ResetArgs(\"--foo=verbose --bar=1\");\n+    BOOST_CHECK_EQUAL(GetArg(\"-foo\", \"\"), \"verbose\");\n+    BOOST_CHECK_EQUAL(GetArg(\"-bar\", 0), 1);\n+}\n+\n+BOOST_AUTO_TEST_CASE(boolargno)\n+{\n+    ResetArgs(\"-nofoo\");\n+    BOOST_CHECK(!GetBoolArg(\"-foo\"));\n+    BOOST_CHECK(!GetBoolArg(\"-foo\", true));\n+    BOOST_CHECK(!GetBoolArg(\"-foo\", false));\n+\n+    ResetArgs(\"-nofoo=1\");\n+    BOOST_CHECK(!GetBoolArg(\"-foo\"));\n+    BOOST_CHECK(!GetBoolArg(\"-foo\", true));\n+    BOOST_CHECK(!GetBoolArg(\"-foo\", false));\n+\n+    ResetArgs(\"-nofoo=0\");\n+    BOOST_CHECK(GetBoolArg(\"-foo\"));\n+    BOOST_CHECK(GetBoolArg(\"-foo\", true));\n+    BOOST_CHECK(GetBoolArg(\"-foo\", false));\n+\n+    ResetArgs(\"-foo --nofoo\");\n+    BOOST_CHECK(GetBoolArg(\"-foo\"));\n+\n+    ResetArgs(\"-nofoo -foo\"); // foo always wins:\n+    BOOST_CHECK(GetBoolArg(\"-foo\"));\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "8bbdfbc834e763fa3a0bb22dddd93fdd12de3d8d",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ad9f8a70fda629d0ec0b87631d1361178763733/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ad9f8a70fda629d0ec0b87631d1361178763733/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=3ad9f8a70fda629d0ec0b87631d1361178763733",
        "patch": "@@ -475,9 +475,37 @@ void ParseParameters(int argc, const char*const argv[])\n         #endif\n         if (psz[0] != '-')\n             break;\n+\n         mapArgs[psz] = pszValue;\n         mapMultiArgs[psz].push_back(pszValue);\n     }\n+\n+    // New 0.6 features:\n+    BOOST_FOREACH(const PAIRTYPE(string,string)& entry, mapArgs)\n+    {\n+        string name = entry.first;\n+\n+        //  interpret --foo as -foo (as long as both are not set)\n+        if (name.find(\"--\") == 0)\n+        {\n+            std::string singleDash(name.begin()+1, name.end());\n+            if (mapArgs.count(singleDash) == 0)\n+                mapArgs[singleDash] = entry.second;\n+            name = singleDash;\n+        }\n+\n+        //  interpret -nofoo as -foo=0 (and -nofoo=0 as -foo=1, as long as -foo not set)\n+        if (name.find(\"-no\") == 0)\n+        {\n+            std::string positive(\"-\");\n+            positive.append(name.begin()+3, name.end());\n+            if (mapArgs.count(positive) == 0)\n+            {\n+                bool value = !GetBoolArg(name);\n+                mapArgs[positive] = (value ? \"1\" : \"0\");\n+            }\n+        }\n+    }\n }\n \n std::string GetArg(const std::string& strArg, const std::string& strDefault)"
      }
    ]
  },
  {
    "sha": "9d952d17bb1bd05d5dbfb620f669adfbc223ce0e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDk1MmQxN2JiMWJkMDVkNWRiZmI2MjBmNjY5YWRmYmMyMjNjZTBl",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-02-06T19:35:57Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-02-07T14:14:31Z"
      },
      "message": "Look for flushwallet/listen/irc/dnsseed/upnp instead of noflushwallet/etc. And switch default for irc to 0.",
      "tree": {
        "sha": "bd1361bd1ea63650651969dd58a662ddc267b26a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bd1361bd1ea63650651969dd58a662ddc267b26a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d952d17bb1bd05d5dbfb620f669adfbc223ce0e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d952d17bb1bd05d5dbfb620f669adfbc223ce0e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d952d17bb1bd05d5dbfb620f669adfbc223ce0e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d952d17bb1bd05d5dbfb620f669adfbc223ce0e/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3ad9f8a70fda629d0ec0b87631d1361178763733",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ad9f8a70fda629d0ec0b87631d1361178763733",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3ad9f8a70fda629d0ec0b87631d1361178763733"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 19,
      "deletions": 18
    },
    "files": [
      {
        "sha": "196363a547abe862b51bc4ef3e8216d3e54e2435",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d952d17bb1bd05d5dbfb620f669adfbc223ce0e/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d952d17bb1bd05d5dbfb620f669adfbc223ce0e/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=9d952d17bb1bd05d5dbfb620f669adfbc223ce0e",
        "patch": "@@ -990,7 +990,7 @@ void ThreadFlushWalletDB(void* parg)\n     if (fOneThread)\n         return;\n     fOneThread = true;\n-    if (mapArgs.count(\"-noflushwallet\"))\n+    if (!GetBoolArg(\"-flushwallet\", true))\n         return;\n \n     unsigned int nLastSeen = nWalletDBUpdated;"
      },
      {
        "sha": "c4c70f6cfc2caf074be62d74660ebfceec7e6660",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d952d17bb1bd05d5dbfb620f669adfbc223ce0e/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d952d17bb1bd05d5dbfb620f669adfbc223ce0e/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=9d952d17bb1bd05d5dbfb620f669adfbc223ce0e",
        "patch": "@@ -194,18 +194,18 @@ bool AppInit2(int argc, char* argv[])\n             \"  -maxconnections=<n>\\t  \" + _(\"Maintain at most <n> connections to peers (default: 125)\") + \"\\n\" +\n             \"  -addnode=<ip>    \\t  \"   + _(\"Add a node to connect to and attempt to keep the connection open\") + \"\\n\" +\n             \"  -connect=<ip>    \\t\\t  \" + _(\"Connect only to the specified node\") + \"\\n\" +\n-            \"  -noirc           \\t  \"   + _(\"Don't find peers using internet relay chat\") + \"\\n\" +\n-            \"  -nolisten        \\t  \"   + _(\"Don't accept connections from outside\") + \"\\n\" +\n-            \"  -nodnsseed       \\t  \"   + _(\"Don't bootstrap list of peers using DNS\") + \"\\n\" +\n+            \"  -irc             \\t  \"   + _(\"Find peers using internet relay chat (default: 0)\") + \"\\n\" +\n+            \"  -listen          \\t  \"   + _(\"Accept connections from outside (default: 1)\") + \"\\n\" +\n+            \"  -dnsseed         \\t  \"   + _(\"Find peers using DNS lookup (default: 1)\") + \"\\n\" +\n             \"  -banscore=<n>    \\t  \"   + _(\"Threshold for disconnecting misbehaving peers (default: 100)\") + \"\\n\" +\n             \"  -bantime=<n>     \\t  \"   + _(\"Number of seconds to keep misbehaving peers from reconnecting (default: 86400)\") + \"\\n\" +\n             \"  -maxreceivebuffer=<n>\\t  \" + _(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: 10000)\") + \"\\n\" +\n             \"  -maxsendbuffer=<n>\\t  \"   + _(\"Maximum per-connection send buffer, <n>*1000 bytes (default: 10000)\") + \"\\n\" +\n #ifdef USE_UPNP\n #if USE_UPNP\n-            \"  -noupnp          \\t  \"   + _(\"Don't attempt to use UPnP to map the listening port\") + \"\\n\" +\n+            \"  -upnp            \\t  \"   + _(\"Use Universal Plug and Play to map the listening port (default: 1)\") + \"\\n\" +\n #else\n-            \"  -upnp            \\t  \"   + _(\"Attempt to use UPnP to map the listening port\") + \"\\n\" +\n+            \"  -upnp            \\t  \"   + _(\"Use Universal Plug and Play to map the listening port (default: 0)\") + \"\\n\" +\n #endif\n #endif\n             \"  -paytxfee=<amt>  \\t  \"   + _(\"Fee per KB to add to transactions you send\") + \"\\n\" +\n@@ -476,16 +476,15 @@ bool AppInit2(int argc, char* argv[])\n     {\n         // Use SoftSetBoolArg here so user can override any of these if they wish.\n         // Note: the GetBoolArg() calls for all of these must happen later.\n-        SoftSetBoolArg(\"-nolisten\", true);\n-        SoftSetBoolArg(\"-noirc\", true);\n-        SoftSetBoolArg(\"-nodnsseed\", true);\n-        SoftSetBoolArg(\"-noupnp\", true);\n+        SoftSetBoolArg(\"-listen\", false);\n+        SoftSetBoolArg(\"-irc\", false);\n+        SoftSetBoolArg(\"-dnsseed\", false);\n         SoftSetBoolArg(\"-upnp\", false);\n         SoftSetBoolArg(\"-dns\", false);\n     }\n \n     fAllowDNS = GetBoolArg(\"-dns\");\n-    fNoListen = GetBoolArg(\"-nolisten\");\n+    fNoListen = !GetBoolArg(\"-listen\", true);\n \n     // This code can be removed once a super-majority of the network has upgraded.\n     if (GetBoolArg(\"-bip16\", true))\n@@ -507,10 +506,11 @@ bool AppInit2(int argc, char* argv[])\n     }\n \n     // Command-line args override in-wallet settings:\n-    if (mapArgs.count(\"-upnp\"))\n-        fUseUPnP = GetBoolArg(\"-upnp\");\n-    else if (mapArgs.count(\"-noupnp\"))\n-        fUseUPnP = !GetBoolArg(\"-noupnp\");\n+#if USE_UPNP\n+    fUseUPnP = GetBoolArg(\"-upnp\", true);\n+#else\n+    fUseUPnP = GetBoolArg(\"-upnp\", false);\n+#endif\n \n     if (!fNoListen)\n     {"
      },
      {
        "sha": "78d86e119687df81b9372686e2fb67e5e6dd151d",
        "filename": "src/irc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d952d17bb1bd05d5dbfb620f669adfbc223ce0e/src/irc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d952d17bb1bd05d5dbfb620f669adfbc223ce0e/src/irc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/irc.cpp?ref=9d952d17bb1bd05d5dbfb620f669adfbc223ce0e",
        "patch": "@@ -261,8 +261,9 @@ void ThreadIRCSeed2(void* parg)\n     if (mapArgs.count(\"-connect\") || fNoListen)\n         return;\n \n-    if (GetBoolArg(\"-noirc\"))\n+    if (!GetBoolArg(\"-irc\", false))\n         return;\n+\n     printf(\"ThreadIRCSeed started\\n\");\n     int nErrorWait = 10;\n     int nRetryWait = 10;"
      },
      {
        "sha": "b6f2951d6ef0e4c79381c9057da074de37598cac",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d952d17bb1bd05d5dbfb620f669adfbc223ce0e/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d952d17bb1bd05d5dbfb620f669adfbc223ce0e/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=9d952d17bb1bd05d5dbfb620f669adfbc223ce0e",
        "patch": "@@ -200,7 +200,7 @@ bool GetMyExternalIP(CNetAddr& ipRet)\n void ThreadGetMyExternalIP(void* parg)\n {\n     // Wait for IRC to get it first\n-    if (!GetBoolArg(\"-noirc\"))\n+    if (GetBoolArg(\"-irc\", false))\n     {\n         for (int i = 0; i < 2 * 60; i++)\n         {\n@@ -1706,7 +1706,7 @@ void StartNode(void* parg)\n     // Start threads\n     //\n \n-    if (GetBoolArg(\"-nodnsseed\"))\n+    if (!GetBoolArg(\"-dnsseed\", true))\n         printf(\"DNS seeding disabled\\n\");\n     else\n         if (!CreateThread(ThreadDNSAddressSeed, NULL))"
      }
    ]
  }
]