[
  {
    "sha": "aa85dcf47288e86f283f38fe47c022ffcfa53d8b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYTg1ZGNmNDcyODhlODZmMjgzZjM4ZmU0N2MwMjJmZmNmYTUzZDhi",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2018-04-26T17:02:58Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2018-04-26T17:02:58Z"
      },
      "message": "build: sync ax_boost_chrono/unit_test",
      "tree": {
        "sha": "e9d5dcc9b6e6e06a4caf6a67c690bc85b9fd7f4d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e9d5dcc9b6e6e06a4caf6a67c690bc85b9fd7f4d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aa85dcf47288e86f283f38fe47c022ffcfa53d8b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa85dcf47288e86f283f38fe47c022ffcfa53d8b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aa85dcf47288e86f283f38fe47c022ffcfa53d8b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa85dcf47288e86f283f38fe47c022ffcfa53d8b/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "826acc9a3d023ca1fa49fcb9daa82dea454032d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/826acc9a3d023ca1fa49fcb9daa82dea454032d5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/826acc9a3d023ca1fa49fcb9daa82dea454032d5"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 2,
      "deletions": 4
    },
    "files": [
      {
        "sha": "6ea77b9b3eff0290afa7de7dbb18670dfede735c",
        "filename": "build-aux/m4/ax_boost_chrono.m4",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa85dcf47288e86f283f38fe47c022ffcfa53d8b/build-aux/m4/ax_boost_chrono.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa85dcf47288e86f283f38fe47c022ffcfa53d8b/build-aux/m4/ax_boost_chrono.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_chrono.m4?ref=aa85dcf47288e86f283f38fe47c022ffcfa53d8b",
        "patch": "@@ -81,7 +81,6 @@ AC_DEFUN([AX_BOOST_CHRONO],\n \n \t\t\tLDFLAGS_SAVE=$LDFLAGS\n             if test \"x$ax_boost_user_chrono_lib\" = \"x\"; then\n-                ax_lib=\n                 for libextension in `ls $BOOSTLIBDIR/libboost_chrono*.so* $BOOSTLIBDIR/libboost_chrono*.dylib* $BOOSTLIBDIR/libboost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_chrono.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n                      ax_lib=${libextension}\n \t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n@@ -106,7 +105,7 @@ AC_DEFUN([AX_BOOST_CHRONO],\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_chrono library!)\n+                AC_MSG_ERROR(Could not find a version of the library!)\n             fi\n \t\t\tif test \"x$link_chrono\" = \"xno\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)"
      },
      {
        "sha": "3d8e93e964bdd94350d8730d60606fbcf04ac1ff",
        "filename": "build-aux/m4/ax_boost_unit_test_framework.m4",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa85dcf47288e86f283f38fe47c022ffcfa53d8b/build-aux/m4/ax_boost_unit_test_framework.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa85dcf47288e86f283f38fe47c022ffcfa53d8b/build-aux/m4/ax_boost_unit_test_framework.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_unit_test_framework.m4?ref=aa85dcf47288e86f283f38fe47c022ffcfa53d8b",
        "patch": "@@ -76,7 +76,6 @@ AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n \n             if test \"x$ax_boost_user_unit_test_framework_lib\" = \"x\"; then\n \t\t\tsaved_ldflags=\"${LDFLAGS}\"\n-                ax_lib=\n                 for monitor_library in `ls $BOOSTLIBDIR/libboost_unit_test_framework*.so* $BOOSTLIBDIR/libboost_unit_test_framework*.dylib* $BOOSTLIBDIR/libboost_unit_test_framework*.a* 2>/dev/null` ; do\n                     if test -r $monitor_library ; then\n                        libextension=`echo $monitor_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'`\n@@ -125,7 +124,7 @@ AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n                done\n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_unit_test_framework library!)\n+                AC_MSG_ERROR(Could not find a version of the library!)\n             fi\n \t\t\tif test \"x$link_unit_test_framework\" != \"xyes\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)"
      }
    ]
  }
]