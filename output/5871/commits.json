[
  {
    "sha": "59bd89f11636e90b2d684e8f411d8d7a88622458",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OWJkODlmMTE2MzZlOTBiMmQ2ODRlOGY0MTFkOGQ3YTg4NjIyNDU4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-03-09T15:04:43Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-03-09T15:06:14Z"
      },
      "message": "test: Remove UNITTEST params\n\nUNITTEST parameter are not used by any current tests, and the model\n(modifyable parameters) is inconvenient when unit-testing. As\nthey are stored in a global structure eevery test\nwould have to (re)set up its own parameters.\n\nFor consistency it is also better to test with MAIN parameters.",
      "tree": {
        "sha": "8c01545831dd3ba1701f584adacfbc2a6b992a9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c01545831dd3ba1701f584adacfbc2a6b992a9b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/59bd89f11636e90b2d684e8f411d8d7a88622458",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59bd89f11636e90b2d684e8f411d8d7a88622458",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/59bd89f11636e90b2d684e8f411d8d7a88622458",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59bd89f11636e90b2d684e8f411d8d7a88622458/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8cbe1f4f5870a165be729cabb9b55dcbf0f85e09",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8cbe1f4f5870a165be729cabb9b55dcbf0f85e09",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8cbe1f4f5870a165be729cabb9b55dcbf0f85e09"
      }
    ],
    "stats": {
      "total": 77,
      "additions": 3,
      "deletions": 74
    },
    "files": [
      {
        "sha": "c48ccbc08abf749a0db2c4d8d65b9804afada036",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 45,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59bd89f11636e90b2d684e8f411d8d7a88622458/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59bd89f11636e90b2d684e8f411d8d7a88622458/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=59bd89f11636e90b2d684e8f411d8d7a88622458",
        "patch": "@@ -281,51 +281,8 @@ class CRegTestParams : public CTestNetParams {\n };\n static CRegTestParams regTestParams;\n \n-/**\n- * Unit test\n- */\n-class CUnitTestParams : public CMainParams, public CModifiableParams {\n-public:\n-    CUnitTestParams() {\n-        strNetworkID = \"unittest\";\n-        nDefaultPort = 18445;\n-        vFixedSeeds.clear(); //! Unit test mode doesn't have any fixed seeds.\n-        vSeeds.clear();  //! Unit test mode doesn't have any DNS seeds.\n-\n-        fRequireRPCPassword = false;\n-        fMiningRequiresPeers = false;\n-        fDefaultCheckMemPool = true;\n-        fAllowMinDifficultyBlocks = false;\n-        fMineBlocksOnDemand = true;\n-    }\n-\n-    const Checkpoints::CCheckpointData& Checkpoints() const \n-    {\n-        // UnitTest share the same checkpoints as MAIN\n-        return data;\n-    }\n-\n-    //! Published setters to allow changing values in unit test cases\n-    virtual void setSubsidyHalvingInterval(int anSubsidyHalvingInterval)  { nSubsidyHalvingInterval=anSubsidyHalvingInterval; }\n-    virtual void setEnforceBlockUpgradeMajority(int anEnforceBlockUpgradeMajority)  { nEnforceBlockUpgradeMajority=anEnforceBlockUpgradeMajority; }\n-    virtual void setRejectBlockOutdatedMajority(int anRejectBlockOutdatedMajority)  { nRejectBlockOutdatedMajority=anRejectBlockOutdatedMajority; }\n-    virtual void setToCheckBlockUpgradeMajority(int anToCheckBlockUpgradeMajority)  { nToCheckBlockUpgradeMajority=anToCheckBlockUpgradeMajority; }\n-    virtual void setDefaultCheckMemPool(bool afDefaultCheckMemPool)  { fDefaultCheckMemPool=afDefaultCheckMemPool; }\n-    virtual void setAllowMinDifficultyBlocks(bool afAllowMinDifficultyBlocks) {  fAllowMinDifficultyBlocks=afAllowMinDifficultyBlocks; }\n-    virtual void setSkipProofOfWorkCheck(bool afSkipProofOfWorkCheck) { fSkipProofOfWorkCheck = afSkipProofOfWorkCheck; }\n-};\n-static CUnitTestParams unitTestParams;\n-\n-\n static CChainParams *pCurrentParams = 0;\n \n-CModifiableParams *ModifiableParams()\n-{\n-   assert(pCurrentParams);\n-   assert(pCurrentParams==&unitTestParams);\n-   return (CModifiableParams*)&unitTestParams;\n-}\n-\n const CChainParams &Params() {\n     assert(pCurrentParams);\n     return *pCurrentParams;\n@@ -339,8 +296,6 @@ CChainParams &Params(CBaseChainParams::Network network) {\n             return testNetParams;\n         case CBaseChainParams::REGTEST:\n             return regTestParams;\n-        case CBaseChainParams::UNITTEST:\n-            return unitTestParams;\n         default:\n             assert(false && \"Unimplemented network\");\n             return mainParams;"
      },
      {
        "sha": "48b1383a675c352919f9a1d60dd82476040cb5aa",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59bd89f11636e90b2d684e8f411d8d7a88622458/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59bd89f11636e90b2d684e8f411d8d7a88622458/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=59bd89f11636e90b2d684e8f411d8d7a88622458",
        "patch": "@@ -108,25 +108,6 @@ class CChainParams\n     bool fTestnetToBeDeprecatedFieldRPC;\n };\n \n-/** \n- * Modifiable parameters interface is used by test cases to adapt the parameters in order\n- * to test specific features more easily. Test cases should always restore the previous\n- * values after finalization.\n- */\n-\n-class CModifiableParams {\n-public:\n-    //! Published setters to allow changing values in unit test cases\n-    virtual void setSubsidyHalvingInterval(int anSubsidyHalvingInterval) =0;\n-    virtual void setEnforceBlockUpgradeMajority(int anEnforceBlockUpgradeMajority)=0;\n-    virtual void setRejectBlockOutdatedMajority(int anRejectBlockOutdatedMajority)=0;\n-    virtual void setToCheckBlockUpgradeMajority(int anToCheckBlockUpgradeMajority)=0;\n-    virtual void setDefaultCheckMemPool(bool aDefaultCheckMemPool)=0;\n-    virtual void setAllowMinDifficultyBlocks(bool aAllowMinDifficultyBlocks)=0;\n-    virtual void setSkipProofOfWorkCheck(bool aSkipProofOfWorkCheck)=0;\n-};\n-\n-\n /**\n  * Return the currently selected parameters. This won't change after app startup\n  * outside of the unit tests.\n@@ -136,9 +117,6 @@ const CChainParams &Params();\n /** Return parameters for the given network. */\n CChainParams &Params(CBaseChainParams::Network network);\n \n-/** Get modifiable network parameters (UNITTEST only) */\n-CModifiableParams *ModifiableParams();\n-\n /** Sets the params returned by Params() to those for the given network. */\n void SelectParams(CBaseChainParams::Network network);\n "
      },
      {
        "sha": "7d82d689ec45f9f96bcae66da6f196db4ee8323b",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59bd89f11636e90b2d684e8f411d8d7a88622458/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59bd89f11636e90b2d684e8f411d8d7a88622458/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=59bd89f11636e90b2d684e8f411d8d7a88622458",
        "patch": "@@ -82,9 +82,6 @@ void SelectBaseParams(CBaseChainParams::Network network)\n     case CBaseChainParams::REGTEST:\n         pCurrentBaseParams = &regTestParams;\n         break;\n-    case CBaseChainParams::UNITTEST:\n-        pCurrentBaseParams = &unitTestParams;\n-        break;\n     default:\n         assert(false && \"Unimplemented network\");\n         return;"
      },
      {
        "sha": "421a3a06ff4c6c76ece3554963941daccdb2906f",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59bd89f11636e90b2d684e8f411d8d7a88622458/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59bd89f11636e90b2d684e8f411d8d7a88622458/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=59bd89f11636e90b2d684e8f411d8d7a88622458",
        "patch": "@@ -19,7 +19,6 @@ class CBaseChainParams\n         MAIN,\n         TESTNET,\n         REGTEST,\n-        UNITTEST,\n \n         MAX_NETWORK_TYPES\n     };"
      },
      {
        "sha": "c242dd26e2b2caaf9e172aae788a3a0733df6949",
        "filename": "src/test/base58_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59bd89f11636e90b2d684e8f411d8d7a88622458/src/test/base58_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59bd89f11636e90b2d684e8f411d8d7a88622458/src/test/base58_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/base58_tests.cpp?ref=59bd89f11636e90b2d684e8f411d8d7a88622458",
        "patch": "@@ -127,6 +127,7 @@ BOOST_AUTO_TEST_CASE(base58_keys_valid_parse)\n     std::vector<unsigned char> result;\n     CBitcoinSecret secret;\n     CBitcoinAddress addr;\n+    SelectParams(CBaseChainParams::MAIN);\n \n     BOOST_FOREACH(Value& tv, tests)\n     {\n@@ -176,7 +177,6 @@ BOOST_AUTO_TEST_CASE(base58_keys_valid_parse)\n             BOOST_CHECK_MESSAGE(!secret.IsValid(), \"IsValid pubkey as privkey:\" + strTest);\n         }\n     }\n-    SelectParams(CBaseChainParams::UNITTEST);\n }\n \n // Goal: check that generated keys match test vectors\n@@ -244,7 +244,7 @@ BOOST_AUTO_TEST_CASE(base58_keys_valid_gen)\n     CTxDestination nodest = CNoDestination();\n     BOOST_CHECK(!dummyAddr.Set(nodest));\n \n-    SelectParams(CBaseChainParams::UNITTEST);\n+    SelectParams(CBaseChainParams::MAIN);\n }\n \n // Goal: check that base58 parsing code is robust against a variety of corrupted data"
      },
      {
        "sha": "a1355ad445aaf9e5e4220997ac5711241acd217f",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59bd89f11636e90b2d684e8f411d8d7a88622458/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59bd89f11636e90b2d684e8f411d8d7a88622458/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=59bd89f11636e90b2d684e8f411d8d7a88622458",
        "patch": "@@ -29,7 +29,7 @@ extern void noui_connect();\n TestingSetup::TestingSetup()\n {\n         fPrintToDebugLog = false; // don't want to write to debug.log file\n-        SelectParams(CBaseChainParams::UNITTEST);\n+        SelectParams(CBaseChainParams::MAIN);\n         noui_connect();\n #ifdef ENABLE_WALLET\n         bitdb.MakeMock();"
      }
    ]
  },
  {
    "sha": "3aa0130b963087025b64108225bbadea36d8c6df",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYWEwMTMwYjk2MzA4NzAyNWI2NDEwODIyNWJiYWRlYTM2ZDhjNmRm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-03-09T15:09:54Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-03-09T15:09:54Z"
      },
      "message": "test: remove fSkipProofOfWork\n\nNot used, and REGTEST already allows creating blocks at\nthe lowerst possible difficulty.",
      "tree": {
        "sha": "024f6956d4d5c6df9c9c232a25cfbd6ceb409168",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/024f6956d4d5c6df9c9c232a25cfbd6ceb409168"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3aa0130b963087025b64108225bbadea36d8c6df",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3aa0130b963087025b64108225bbadea36d8c6df",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3aa0130b963087025b64108225bbadea36d8c6df",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3aa0130b963087025b64108225bbadea36d8c6df/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "59bd89f11636e90b2d684e8f411d8d7a88622458",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59bd89f11636e90b2d684e8f411d8d7a88622458",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/59bd89f11636e90b2d684e8f411d8d7a88622458"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 1,
      "deletions": 9
    },
    "files": [
      {
        "sha": "2bc8976510a2fe4d0da4686f2871222e3c0849e6",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3aa0130b963087025b64108225bbadea36d8c6df/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3aa0130b963087025b64108225bbadea36d8c6df/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=3aa0130b963087025b64108225bbadea36d8c6df",
        "patch": "@@ -170,7 +170,6 @@ class CMainParams : public CChainParams {\n         fAllowMinDifficultyBlocks = false;\n         fRequireStandard = true;\n         fMineBlocksOnDemand = false;\n-        fSkipProofOfWorkCheck = false;\n         fTestnetToBeDeprecatedFieldRPC = false;\n     }\n "
      },
      {
        "sha": "134dcd65582d5f0845d1d73b920234d309229f60",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3aa0130b963087025b64108225bbadea36d8c6df/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3aa0130b963087025b64108225bbadea36d8c6df/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=3aa0130b963087025b64108225bbadea36d8c6df",
        "patch": "@@ -60,8 +60,6 @@ class CChainParams\n     bool DefaultCheckMemPool() const { return fDefaultCheckMemPool; }\n     /** Allow mining of a min-difficulty block */\n     bool AllowMinDifficultyBlocks() const { return fAllowMinDifficultyBlocks; }\n-    /** Skip proof-of-work check: allow mining of any difficulty block */\n-    bool SkipProofOfWorkCheck() const { return fSkipProofOfWorkCheck; }\n     /** Make standard checks */\n     bool RequireStandard() const { return fRequireStandard; }\n     int64_t TargetTimespan() const { return nTargetTimespan; }\n@@ -104,7 +102,6 @@ class CChainParams\n     bool fAllowMinDifficultyBlocks;\n     bool fRequireStandard;\n     bool fMineBlocksOnDemand;\n-    bool fSkipProofOfWorkCheck;\n     bool fTestnetToBeDeprecatedFieldRPC;\n };\n "
      },
      {
        "sha": "f47155ca904e818181a16a8f868e3b651022bf66",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3aa0130b963087025b64108225bbadea36d8c6df/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3aa0130b963087025b64108225bbadea36d8c6df/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=3aa0130b963087025b64108225bbadea36d8c6df",
        "patch": "@@ -2593,8 +2593,7 @@ bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& sta\n     int nHeight = pindexPrev->nHeight+1;\n \n     // Check proof of work\n-    if ((!Params().SkipProofOfWorkCheck()) &&\n-       (block.nBits != GetNextWorkRequired(pindexPrev, &block)))\n+    if ((block.nBits != GetNextWorkRequired(pindexPrev, &block)))\n         return state.DoS(100, error(\"%s: incorrect proof of work\", __func__),\n                          REJECT_INVALID, \"bad-diffbits\");\n "
      },
      {
        "sha": "eb899ffc942b599029ab6bc4dc92a91bf2d74189",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3aa0130b963087025b64108225bbadea36d8c6df/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3aa0130b963087025b64108225bbadea36d8c6df/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=3aa0130b963087025b64108225bbadea36d8c6df",
        "patch": "@@ -87,9 +87,6 @@ bool CheckProofOfWork(uint256 hash, unsigned int nBits)\n     bool fOverflow;\n     arith_uint256 bnTarget;\n \n-    if (Params().SkipProofOfWorkCheck())\n-       return true;\n-\n     bnTarget.SetCompact(nBits, &fNegative, &fOverflow);\n \n     // Check range"
      }
    ]
  }
]