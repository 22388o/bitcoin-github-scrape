DrahtBot,2018-11-21T07:32:57Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15340](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15340.html) (gui: Introduce bilingual GUI error messages",https://github.com/bitcoin/bitcoin/pull/14776#issuecomment-440565114,440565114,
laanwj,2018-11-21T08:52:47Z,"Concept ACK.\n\nI'm not sure this should be switched on `ENABLE_WALLET`. Knowing nothing else I'd say we should enable this always when possible (and not disabled using the flag).\n",https://github.com/bitcoin/bitcoin/pull/14776#issuecomment-440584840,440584840,
laanwj,2018-11-21T10:09:59Z,"Taking a step back from the ""should we switch this based on wallet"" or ""should we take the (unknown) performance hit for the whole process"". I think it's important here to define what the threat scenario is that this is protecting against. This also needs to be documented to the user.\n\nAs I understand it, Spectre mitigation is especially meant for browsers and such and other software that runs",https://github.com/bitcoin/bitcoin/pull/14776#issuecomment-440607879,440607879,
luke-jr,2018-11-21T11:16:18Z,"Spectre can allow unrelated processes to get at private data of other processes. Whether these specific mitigations help with that scenario or not, however, I am unsure.",https://github.com/bitcoin/bitcoin/pull/14776#issuecomment-440627881,440627881,
gmaxwell,2018-11-21T23:29:24Z,"We shouldn't take this by default without characterizing the performance implications, esp if we're not precisely sure about what it's protecting against.  If the performance impact is negligible then perhaps we can ignore the minutia of what it's protecting.\n\nLack of comprehensive mlock (e.g. rpc/QT result in decryption keys laying around in memory) probably and the lack of process isolation ",https://github.com/bitcoin/bitcoin/pull/14776#issuecomment-440849477,440849477,
laanwj,2018-11-22T09:42:24Z,"> Spectre can allow unrelated processes to get at private data of other processes. Whether these specific mitigations help with that scenario or not, however, I am unsure.\n\nI think we need to be sure about that, as far as possible.\n\nI have a fairly good grasp of how vulnerabilities and exploitation work in general, but this Spectre stuff is abracadabra to me. I can't imagine how a PoC expl",https://github.com/bitcoin/bitcoin/pull/14776#issuecomment-440971031,440971031,
gmaxwell,2018-11-24T23:51:14Z,It's probably easier to tell if it has a meaningfully negative performance impact... understanding could be replaced with emailing the author(s) of the kernel functionality and asking if they think it would be useful for us.,https://github.com/bitcoin/bitcoin/pull/14776#issuecomment-441404368,441404368,
jameshilliard,2018-11-26T22:47:55Z,@gmaxwell I sent an email to the authors of the spectre prctl kernel patch asking them about how it should be used.,https://github.com/bitcoin/bitcoin/pull/14776#issuecomment-441830244,441830244,
DrahtBot,2019-02-21T08:39:45Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/14776#issuecomment-465910690,465910690,
fanquake,2019-06-19T01:14:51Z,"I'm going to close this. Discussion seems to have stalled. It's not entirely clear when or how the mitigations should be applied. There would also need to be some effort put into figuring out the performance implications.\n\n> I have a fairly good grasp of how vulnerabilities and exploitation work in general, but this Spectre stuff is abracadabra to me. I can't imagine how a PoC exploit for this",https://github.com/bitcoin/bitcoin/pull/14776#issuecomment-503367780,503367780,
kallewoof,2018-11-21T07:09:44Z,"You could do\n```C++\nbool mitigatespectre_default = !gArgs.GetBoolArg(""-disablewallet"", false) && DEFAULT_MITIGATE_SPECTE;\nSpectreMitigation(gArgs.GetBoolArg(""-mitigatespectre"", mitigatespectre_default));\n```\n",https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235272587,235272587,src/init.cpp
luke-jr,2018-11-21T07:23:07Z,This doesn't seem safe. What if a kernel has number 52 with a different meaning?,https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235275199,235275199,src/util/system.cpp
jameshilliard,2018-11-21T07:24:00Z,"yeah, that's def much cleaner",https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235275374,235275374,src/init.cpp
luke-jr,2018-11-21T07:35:40Z,"The default-exception language here doesn't match elsewhere.\n\nMaybe something like:\n```C++\n    gArgs.AddArg(""-mitigatespectre"", strprintf(""Attempt to enable per process spectre mitigations (default: %u%s)"", DEFAULT_MITIGATE_SPECTRE, (\n#ifdef ENABLE_WALLET\n    DEFAULT_MITIGATE_SPECTRE ? ""0 or 1 if -disablewallet set"" : ""0""\n#else\n    strprintf(""%u"", DEFAULT_MITIGATE_SPECTRE)\n#endif",https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235277564,235277564,src/init.cpp
kallewoof,2018-11-21T07:38:04Z,"Alphabetic ordering seems to happen here, so move this entry up to below `-minimumchainwork`",https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235278207,235278207,src/init.cpp
jameshilliard,2018-11-21T07:52:25Z,AFAIK the linux kernel API is supposed to be stable for these types of calls so that should not change.,https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235281472,235281472,src/util/system.cpp
kallewoof,2018-11-21T08:00:35Z,"This will turn into `00` if `!DEFAULT_MITIGATE_SPECTE`, I think? Probably want end to go `: """"`.",https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235283402,235283402,src/init.cpp
kallewoof,2018-11-21T08:01:36Z,Am I misreading this code completely? This looks like it will print out `DEFAULT_MITIGATE_SPECTRE` twice.,https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235283644,235283644,src/init.cpp
jameshilliard,2018-11-21T08:03:30Z,"debug help shows with wallet enabled:  \n```\n  -mitigatespectre\n       Attempt to enable per process spectre mitigations (default: 1 or 0 if\n       -disablewallet set)\n```",https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235284006,235284006,src/init.cpp
kallewoof,2018-11-21T08:06:06Z,If you set `DEFAULT_MITIGATE_SPECTRE` to `false` it will say `00` I think.,https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235284566,235284566,src/init.cpp
jameshilliard,2018-11-21T08:08:27Z,"`DEFAULT_MITIGATE_SPECTRE` is somewhat redundant in `DEFAULT_MITIGATE_SPECTRE ? "" or 0 if -disablewallet set"" : ""0""` since `DEFAULT_MITIGATE_SPECTRE` is controlled by `ENABLE_WALLET`, doesn't look like it would be printed twice.",https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235285092,235285092,src/init.cpp
jameshilliard,2018-11-21T08:10:06Z,"yeah, it only works because `DEFAULT_MITIGATE_SPECTRE` is controlled by `ENABLE_WALLET`",https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235285513,235285513,src/init.cpp
kallewoof,2018-11-21T08:36:42Z,"I don't think it should rely on that.\n\nAnd it does give the following output for `-disable-wallet` (at configure level) so it's broken regardless:\n```\n  -mitigatespectre\n       Attempt to enable per process spectre mitigations (default: 00)\n```\n\nPerhaps \n```C++\n    gArgs.AddArg(""-mitigatespectre"", strprintf(""Attempt to enable per process spectre mitigations (default: %s)"", (\n",https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235292633,235292633,src/init.cpp
kallewoof,2018-11-21T08:39:45Z,"The first `0` comes from `%u` in the initial format line and `DEFAULT_MITIGATE_SPECTRE`. The second `0` comes from\n```C++\n    strprintf(""%u"", DEFAULT_MITIGATE_SPECTRE);\n```\nin the else case on line 365.",https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235293907,235293907,src/init.cpp
jameshilliard,2018-11-21T08:42:47Z,"ah, removed that line now",https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235294926,235294926,src/init.cpp
laanwj,2018-11-21T08:44:14Z,Please add a common prefix to these log messages to be able to quickly grep for it. E.g. `SpectreMitigation:` using `%s:` and `__func__`. It also makes it seem less to come out of the blue for users.,https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235295371,235295371,src/util/system.cpp
laanwj,2018-11-21T08:45:29Z,"Please don't add `#ifdef ENABLE_WALLET` in the utility code! We've only recently painstakingly removed `#ifdef ENABLE_WALLET` stuff from the `server` library, for example.\n\nAlso I think it probably should be switched based on the run-time `-disablewallet` flag as well?\n\nOr maybe: always enable it, don't make it depend on the wallet at all? What would be the drawback to that?\n",https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235295665,235295665,src/util/system.h
laanwj,2018-11-21T08:47:59Z,"Might want to add that this works around a CPU vulnerability, for users that don't know what `spectre` is.",https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235296392,235296392,src/init.cpp
laanwj,2018-11-21T08:53:36Z,"Should make it clear that this is for *linux only*.\nAre there other operating systems with PRCTL?",https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235298091,235298091,src/util/system.cpp
kallewoof,2018-11-21T08:57:01Z,"@laanwj Performance slowdown. For a node not running a wallet having mitigation for spectre seems rather pointless, but I could be wrong on that.",https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235299243,235299243,src/util/system.h
jameshilliard,2018-11-21T08:59:50Z,I think some emulate the interface.,https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235300149,235300149,src/util/system.cpp
jameshilliard,2018-11-21T09:04:20Z,Should I move that to somewhere else?,https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235301604,235301604,src/util/system.h
laanwj,2018-11-21T10:05:48Z,"What *is* the performance slowdown in practice?\nI think this needs benchmarking, if it's neglible over say, a full sync, I don't think it makes sense to do this kind of switching at all.",https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235322856,235322856,src/util/system.h
luke-jr,2018-11-21T11:08:43Z,"IRIX has its own prctl(), and there's no guarantee someone won't fork Linux incompatibly either - it's open source, after all.\n\nAnyone building from source should have recent enough headers to match their actual kernel anyway. Let's just make sure the gitian builds have it working, and rely on the system for source builds...?",https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235344495,235344495,src/util/system.cpp
luke-jr,2018-11-21T11:10:19Z,Perhaps this should be a ParameterInteraction thing using SoftSetArg in the wallet logic?,https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235344930,235344930,src/util/system.h
luke-jr,2018-11-21T11:12:14Z,"Hmm, I wonder if it should be future-proofed by making it applicable to any other vulns we could mitigate later.",https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235345585,235345585,src/init.cpp
jameshilliard,2018-11-21T15:58:54Z,"Irix is an abandoned platform, I think the only other non-linux OS's that have prctl are BSD's but they seem to be just for compatibility with linux so their prctl numbers should always match. Regardless as long as those values are present in the kernel header the ones I hard coded should not get used. I didn't want to have it build this feature based on the presence of the defines in prctl.h sinc",https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235445311,235445311,src/util/system.cpp
jameshilliard,2018-11-21T21:52:28Z,I think there will soon be multiple spectre related prctl controls such as [this](https://lkml.org/lkml/2018/11/21/179).,https://github.com/bitcoin/bitcoin/pull/14776#discussion_r235548724,235548724,src/init.cpp
