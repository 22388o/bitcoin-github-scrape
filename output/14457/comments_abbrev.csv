practicalswift,2018-10-10T09:34:35Z,"Excellent! Thanks for doing this\n\nConcept ACK",https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-428505215,428505215,
promag,2018-10-11T06:42:24Z,Concept ACK! And looking the code LGTM. IMO there is no need to be comprehensive.,https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-428839299,428839299,
jamesob,2018-10-16T18:47:08Z,Addressed @practicalswift @jimmysong feedback. Thanks for the looks.,https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-430353566,430353566,
sipa,2018-10-17T07:19:21Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-430517627,430517627,
jonasschnelli,2018-10-17T07:41:58Z,"Neat!\n\nutACK 74306a55a5fd15ed194d8addb50cb55a849f293c",https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-430523991,430523991,
jamesob,2018-10-24T19:45:20Z,Addressed @MarcoFalke's feedback.,https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-432802206,432802206,
DrahtBot,2018-11-21T09:08:23Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14696](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14696.html) (qa: Add explicit references to related CVE'",https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-440589207,440589207,
MarcoFalke,2018-11-27T22:32:05Z,"travis fails :(\n\ncc @practicalswift ",https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-442243272,442243272,
practicalswift,2018-11-27T22:44:02Z,"@MarcoFalke Thanks for the ping!\n\n@jamesob `vulture` identifies `MAX_P2SH_SIGOPS` as unused. Regarding the other warnings: it seems like `vulture` doesn't understand that the classes are referenced using `BadTxTemplate.__subclasses__()`. Could the class usage be made more explicit so that `vulture` (and humans) can infer it? If not, add the class names to `--ignore-names` in `test/lint/lint-py",https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-442246764,442246764,
jamesob,2018-11-27T22:55:58Z,"@practicalswift thanks for the advice. I've excluded the whole `invalid_txs.py` file from analysis by vulture because there are more than a few class names spuriously detected, and any time someone adds a new invalid txn class they'd have to update that file otherwise.",https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-442250089,442250089,
laanwj,2019-01-02T13:43:57Z,utACK 59e387705c7e55ec40400301346354fa2d0c613f,https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-450866526,450866526,
jimmysong,2018-10-12T23:09:45Z,nit: put these one per line so diffs are easier to see later.,https://github.com/bitcoin/bitcoin/pull/14457#discussion_r224935545,224935545,test/functional/feature_block.py
jimmysong,2018-10-12T23:12:04Z,Maybe put the test names here so someone can look for it in the future?,https://github.com/bitcoin/bitcoin/pull/14457#discussion_r224935814,224935814,test/functional/feature_block.py
practicalswift,2018-10-13T13:46:41Z,Since this is a new file you might want to run it file through `black` to get PEP-8 formatting. Including fixing this case of too many blank lines :-),https://github.com/bitcoin/bitcoin/pull/14457#discussion_r224960547,224960547,test/functional/data/invalid_txs.py
practicalswift,2018-10-13T13:52:59Z,Not used in this file?,https://github.com/bitcoin/bitcoin/pull/14457#discussion_r224960730,224960730,test/functional/feature_block.py
practicalswift,2018-10-13T13:53:50Z,"Should be referenced from a test at least? :-)\n\nApplies also to other unused classes added in this PR",https://github.com/bitcoin/bitcoin/pull/14457#discussion_r224960753,224960753,test/functional/data/invalid_txs.py
practicalswift,2018-10-16T13:06:54Z,"Should be ""construction"" :-)",https://github.com/bitcoin/bitcoin/pull/14457#discussion_r225530196,225530196,test/functional/data/invalid_txs.py
jamesob,2018-10-16T16:38:16Z,These are all accessed via [`iter_all_templates()`](https://github.com/bitcoin/bitcoin/pull/14457/files/1483640cf1f106c62c0fbe026da8d60e1992c91f#diff-61418630f672af16f132a5c0b56fb6fbR181).,https://github.com/bitcoin/bitcoin/pull/14457#discussion_r225618333,225618333,test/functional/data/invalid_txs.py
jamesob,2018-10-16T16:40:32Z,Not sure what you mean by this - which test names?,https://github.com/bitcoin/bitcoin/pull/14457#discussion_r225619189,225619189,test/functional/feature_block.py
jamesob,2018-10-16T16:55:01Z,https://github.com/bitcoin/bitcoin/blob/1483640cf1f106c62c0fbe026da8d60e1992c91f/test/functional/feature_block.py#L244,https://github.com/bitcoin/bitcoin/pull/14457#discussion_r225624173,225624173,test/functional/feature_block.py
practicalswift,2018-10-16T20:14:20Z,"@jamesob Ah, got it! Thanks for the clarification!",https://github.com/bitcoin/bitcoin/pull/14457#discussion_r225692008,225692008,test/functional/data/invalid_txs.py
MarcoFalke,2018-10-23T22:00:12Z,"nit: Could use `self , *, spend_tx=...` to enforce named args.",https://github.com/bitcoin/bitcoin/pull/14457#discussion_r227580725,227580725,test/functional/data/invalid_txs.py
MarcoFalke,2018-10-23T22:00:54Z,"nit: The developer notes discourage the leading `C`, so might want to call this `get_tx`?",https://github.com/bitcoin/bitcoin/pull/14457#discussion_r227580961,227580961,test/functional/data/invalid_txs.py
ryanofsky,2018-11-07T16:45:20Z,Why are both of these increasing by one?,https://github.com/bitcoin/bitcoin/pull/14457#discussion_r231585245,231585245,test/functional/feature_block.py
jamesob,2018-11-07T18:11:26Z,Just because I added an additional coinbase to (try to) spend for the new tests included below.,https://github.com/bitcoin/bitcoin/pull/14457#discussion_r231618740,231618740,test/functional/feature_block.py
MarcoFalke,2018-11-27T21:07:53Z,"nit:\n```suggestion\n        self.spend_avail = sum(o.nValue for o in self.spend_tx.vout)\n```",https://github.com/bitcoin/bitcoin/pull/14457#discussion_r236846428,236846428,test/functional/data/invalid_txs.py
MarcoFalke,2018-11-27T21:24:46Z,"Why not borrow a coinbase output that is later used and keep those numbers as they were before? Since all blocks/tx are invalid that spend this coinbase output, there should be no downside in recycling it.",https://github.com/bitcoin/bitcoin/pull/14457#discussion_r236852018,236852018,test/functional/feature_block.py
jamesob,2018-11-27T22:23:09Z,"Yep, good point. Fixed.",https://github.com/bitcoin/bitcoin/pull/14457#discussion_r236871124,236871124,test/functional/feature_block.py
MarcoFalke,2018-11-30T20:47:29Z,missing inputs means the vin is empty and is thus interpreted as the witness dummy vin?,https://github.com/bitcoin/bitcoin/pull/14457#discussion_r237997595,237997595,test/functional/feature_block.py
MarcoFalke,2018-12-22T20:26:59Z,"See:\n\n```\ntx as sent:     CTransaction(nVersion=1 vin=[] vout=[CTxOut(nValue=0.00000000 scriptPubKey=51515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151)] wit=CTxWitness() nLockTime=0)\ntx as received: CTransaction(nVersion=1 vin=[] vout=[] wit",https://github.com/bitcoin/bitcoin/pull/14457#discussion_r243745472,243745472,test/functional/feature_block.py
MarcoFalke,2018-12-22T20:33:35Z,"One solution would be:\n\n```diff\ndiff --git a/test/functional/feature_block.py b/test/functional/feature_block.py\nindex 697a0b19ac..edbdcf2d55 100755\n--- a/test/functional/feature_block.py\n+++ b/test/functional/feature_block.py\n@@ -137,12 +137,6 @@ class FullBlockTest(BitcoinTestFramework):\n         for TxTemplate in invalid_txs.iter_all_templates():\n             template = TxTemp",https://github.com/bitcoin/bitcoin/pull/14457#discussion_r243745630,243745630,test/functional/feature_block.py
