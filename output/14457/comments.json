[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/428505215",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-428505215",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14457",
    "id": 428505215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODUwNTIxNQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T09:34:35Z",
    "updated_at": "2018-10-10T09:34:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Excellent! Thanks for doing this\r\n\r\nConcept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/428505215/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/428839299",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-428839299",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14457",
    "id": 428839299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODgzOTI5OQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-11T06:42:24Z",
    "updated_at": "2018-10-11T06:42:24Z",
    "author_association": "MEMBER",
    "body": "Concept ACK! And looking the code LGTM. IMO there is no need to be comprehensive.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/428839299/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430353566",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-430353566",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14457",
    "id": 430353566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDM1MzU2Ng==",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T18:47:08Z",
    "updated_at": "2018-10-16T18:47:08Z",
    "author_association": "MEMBER",
    "body": "Addressed @practicalswift @jimmysong feedback. Thanks for the looks.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430353566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430517627",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-430517627",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14457",
    "id": 430517627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDUxNzYyNw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T07:19:21Z",
    "updated_at": "2018-10-17T07:19:21Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430517627/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430523991",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-430523991",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14457",
    "id": 430523991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDUyMzk5MQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T07:41:58Z",
    "updated_at": "2018-10-17T07:41:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Neat!\r\n\r\nutACK 74306a55a5fd15ed194d8addb50cb55a849f293c",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430523991/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/432802206",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-432802206",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14457",
    "id": 432802206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjgwMjIwNg==",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-24T19:45:20Z",
    "updated_at": "2018-10-24T19:45:20Z",
    "author_association": "MEMBER",
    "body": "Addressed @MarcoFalke's feedback.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/432802206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/440589207",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-440589207",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14457",
    "id": 440589207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDU4OTIwNw==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T09:08:23Z",
    "updated_at": "2018-11-24T21:47:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14696](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14696.html) (qa: Add explicit references to related CVE's in p2p_invalid_block test. by lucash-dev)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/440589207/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/442243272",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-442243272",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14457",
    "id": 442243272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjI0MzI3Mg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-27T22:32:05Z",
    "updated_at": "2018-11-27T22:32:05Z",
    "author_association": "MEMBER",
    "body": "travis fails :(\r\n\r\ncc @practicalswift ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/442243272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/442246764",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-442246764",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14457",
    "id": 442246764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjI0Njc2NA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-27T22:44:02Z",
    "updated_at": "2018-11-27T22:44:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MarcoFalke Thanks for the ping!\r\n\r\n@jamesob `vulture` identifies `MAX_P2SH_SIGOPS` as unused. Regarding the other warnings: it seems like `vulture` doesn't understand that the classes are referenced using `BadTxTemplate.__subclasses__()`. Could the class usage be made more explicit so that `vulture` (and humans) can infer it? If not, add the class names to `--ignore-names` in `test/lint/lint-python-dead-code.sh` :-)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/442246764/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/442250089",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-442250089",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14457",
    "id": 442250089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjI1MDA4OQ==",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-27T22:55:58Z",
    "updated_at": "2018-11-27T22:55:58Z",
    "author_association": "MEMBER",
    "body": "@practicalswift thanks for the advice. I've excluded the whole `invalid_txs.py` file from analysis by vulture because there are more than a few class names spuriously detected, and any time someone adds a new invalid txn class they'd have to update that file otherwise.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/442250089/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450866526",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#issuecomment-450866526",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14457",
    "id": 450866526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDg2NjUyNg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-02T13:43:57Z",
    "updated_at": "2019-01-02T13:43:57Z",
    "author_association": "MEMBER",
    "body": "utACK 59e387705c7e55ec40400301346354fa2d0c613f",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450866526/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224935545",
    "pull_request_review_id": 164434671,
    "id": 224935545,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDkzNTU0NQ==",
    "diff_hunk": "@@ -7,7 +7,9 @@\n import struct\n import time\n \n-from test_framework.blocktools import create_block, create_coinbase, create_tx_with_script, get_legacy_sigopcount_block\n+from test_framework.blocktools import (\n+    create_block, create_coinbase, create_tx_with_script, get_legacy_sigopcount_block,",
    "path": "test/functional/feature_block.py",
    "position": null,
    "original_position": 6,
    "commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "original_commit_id": "1483640cf1f106c62c0fbe026da8d60e1992c91f",
    "user": {
      "login": "jimmysong",
      "id": 524761,
      "node_id": "MDQ6VXNlcjUyNDc2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/524761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmysong",
      "html_url": "https://github.com/jimmysong",
      "followers_url": "https://api.github.com/users/jimmysong/followers",
      "following_url": "https://api.github.com/users/jimmysong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmysong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmysong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmysong/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmysong/orgs",
      "repos_url": "https://api.github.com/users/jimmysong/repos",
      "events_url": "https://api.github.com/users/jimmysong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmysong/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: put these one per line so diffs are easier to see later.",
    "created_at": "2018-10-12T23:09:45Z",
    "updated_at": "2018-11-27T22:54:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r224935545",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224935545"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r224935545"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224935545/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 11,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224935814",
    "pull_request_review_id": 164434671,
    "id": 224935814,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDkzNTgxNA==",
    "diff_hunk": "@@ -116,7 +122,38 @@ def run_test(self):\n         b2 = self.next_block(2, spend=out[1])\n         self.save_spendable_output()\n \n-        self.sync_blocks([b1, b2])\n+        self.sync_blocks([b1, b2], timeout=4)\n+\n+        # Pop the first unspent output in `out`.\n+        spend_tx = out.pop(2)\n+\n+        # Submit blocks for rejection, each of which contains a single transaction\n+        # (aside from coinbase) which should be considered invalid.\n+        for TxTemplate in invalid_txs.iter_all_templates():\n+            template = TxTemplate(spend_tx=spend_tx)\n+\n+            # Something about the serialization code for missing inputs creates",
    "path": "test/functional/feature_block.py",
    "position": 66,
    "original_position": 61,
    "commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "original_commit_id": "1483640cf1f106c62c0fbe026da8d60e1992c91f",
    "user": {
      "login": "jimmysong",
      "id": 524761,
      "node_id": "MDQ6VXNlcjUyNDc2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/524761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmysong",
      "html_url": "https://github.com/jimmysong",
      "followers_url": "https://api.github.com/users/jimmysong/followers",
      "following_url": "https://api.github.com/users/jimmysong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmysong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmysong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmysong/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmysong/orgs",
      "repos_url": "https://api.github.com/users/jimmysong/repos",
      "events_url": "https://api.github.com/users/jimmysong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmysong/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe put the test names here so someone can look for it in the future?",
    "created_at": "2018-10-12T23:12:04Z",
    "updated_at": "2018-11-27T22:54:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r224935814",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224935814"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r224935814"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224935814/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 140,
    "original_line": 140,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224960547",
    "pull_request_review_id": 164463700,
    "id": 224960547,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDk2MDU0Nw==",
    "diff_hunk": "@@ -0,0 +1,182 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Templates for constructing various sorts of invalid transactions.\n+\n+These templates (or an iterator over all of them) can be reused in different\n+contexts to test using a number of invalid transaction types.\n+\n+Hopefully this makes it easier to get coverage of a full variety of tx\n+validation checks through different interfaces (AcceptBlock, AcceptToMemPool,\n+etc.) without repeating ourselves.\n+\n+Invalid tx cases not covered here can be found by running:\n+\n+    $ diff \\\n+      <(grep -IREho \"bad-txns[a-zA-Z-]+\" src | sort -u) \\\n+      <(grep -IEho \"bad-txns[a-zA-Z-]+\" test/functional/data/invalid_txs.py | sort -u)\n+\n+\"\"\"\n+import abc\n+\n+from test_framework.messages import CTransaction, CTxIn, CTxOut, COutPoint\n+from test_framework import script as sc\n+from test_framework.blocktools import create_tx_with_script, MAX_BLOCK_SIGOPS\n+\n+basic_p2sh = sc.CScript([sc.OP_HASH160, sc.hash160(sc.CScript([sc.OP_0])), sc.OP_EQUAL])\n+\n+MAX_P2SH_SIGOPS = 15  # See policy/policy.h.\n+\n+\n+class BadTxTemplate:\n+    \"\"\"Allows simple consruction of a certain kind of invalid tx. Base class to be subclassed.\"\"\"\n+    __metaclass__ = abc.ABCMeta\n+\n+    # The expected error code given by bitcoind upon submission of the tx.\n+    reject_reason = \"\"\n+\n+    # Only specified if it differs from mempool acceptance error.\n+    block_reject_reason = \"\"\n+\n+    # Do we expect to be disconnected after submitting this tx?\n+    expect_disconnect = False\n+\n+    # Is this tx considered valid when included in a block, but not for acceptance into\n+    # the mempool (i.e. does it violate policy but not consensus)?\n+    valid_in_block = False\n+\n+    def __init__(self, spend_tx=None, spend_block=None):\n+        self.spend_tx = spend_block.vtx[0] if spend_block else spend_tx\n+        self.spend_avail = sum(i.nValue for i in self.spend_tx.vout)\n+        self.valid_txin = CTxIn(COutPoint(self.spend_tx.sha256, 0), b\"\", 0xffffffff)\n+\n+    @abc.abstractmethod\n+    def get_ctx(self, *args, **kwargs):\n+        \"\"\"Return a CTransaction that is invalid per the subclass.\"\"\"\n+        pass\n+\n+\n+class OutputMissing(BadTxTemplate):\n+    reject_reason = \"bad-txns-vout-empty\"\n+    expect_disconnect = False\n+\n+    def get_ctx(self):\n+        tx = CTransaction()\n+        tx.vin.append(self.valid_txin)\n+        tx.calc_sha256()\n+        return tx\n+\n+\n+class InputMissing(BadTxTemplate):\n+    reject_reason = \"bad-txns-vin-empty\"\n+    expect_disconnect = False\n+\n+    def get_ctx(self):\n+        tx = CTransaction()\n+        tx.vout.append(CTxOut(0, sc.CScript([sc.OP_TRUE] * 100)))\n+        tx.calc_sha256()\n+        return tx\n+\n+\n+",
    "path": "test/functional/data/invalid_txs.py",
    "position": null,
    "original_position": 83,
    "commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "original_commit_id": "1483640cf1f106c62c0fbe026da8d60e1992c91f",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Since this is a new file you might want to run it file through `black` to get PEP-8 formatting. Including fixing this case of too many blank lines :-)",
    "created_at": "2018-10-13T13:46:41Z",
    "updated_at": "2018-11-27T22:54:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r224960547",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224960547"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r224960547"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224960547/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 83,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224960730",
    "pull_request_review_id": 164463899,
    "id": 224960730,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDk2MDczMA==",
    "diff_hunk": "@@ -7,7 +7,9 @@\n import struct\n import time\n \n-from test_framework.blocktools import create_block, create_coinbase, create_tx_with_script, get_legacy_sigopcount_block\n+from test_framework.blocktools import (\n+    create_block, create_coinbase, create_tx_with_script, get_legacy_sigopcount_block,\n+    MAX_BLOCK_SIGOPS)",
    "path": "test/functional/feature_block.py",
    "position": null,
    "original_position": 7,
    "commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "original_commit_id": "1483640cf1f106c62c0fbe026da8d60e1992c91f",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Not used in this file?",
    "created_at": "2018-10-13T13:52:59Z",
    "updated_at": "2018-11-27T22:54:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r224960730",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224960730"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r224960730"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224960730/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 12,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224960753",
    "pull_request_review_id": 164463919,
    "id": 224960753,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDk2MDc1Mw==",
    "diff_hunk": "@@ -0,0 +1,182 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Templates for constructing various sorts of invalid transactions.\n+\n+These templates (or an iterator over all of them) can be reused in different\n+contexts to test using a number of invalid transaction types.\n+\n+Hopefully this makes it easier to get coverage of a full variety of tx\n+validation checks through different interfaces (AcceptBlock, AcceptToMemPool,\n+etc.) without repeating ourselves.\n+\n+Invalid tx cases not covered here can be found by running:\n+\n+    $ diff \\\n+      <(grep -IREho \"bad-txns[a-zA-Z-]+\" src | sort -u) \\\n+      <(grep -IEho \"bad-txns[a-zA-Z-]+\" test/functional/data/invalid_txs.py | sort -u)\n+\n+\"\"\"\n+import abc\n+\n+from test_framework.messages import CTransaction, CTxIn, CTxOut, COutPoint\n+from test_framework import script as sc\n+from test_framework.blocktools import create_tx_with_script, MAX_BLOCK_SIGOPS\n+\n+basic_p2sh = sc.CScript([sc.OP_HASH160, sc.hash160(sc.CScript([sc.OP_0])), sc.OP_EQUAL])\n+\n+MAX_P2SH_SIGOPS = 15  # See policy/policy.h.\n+\n+\n+class BadTxTemplate:\n+    \"\"\"Allows simple consruction of a certain kind of invalid tx. Base class to be subclassed.\"\"\"\n+    __metaclass__ = abc.ABCMeta\n+\n+    # The expected error code given by bitcoind upon submission of the tx.\n+    reject_reason = \"\"\n+\n+    # Only specified if it differs from mempool acceptance error.\n+    block_reject_reason = \"\"\n+\n+    # Do we expect to be disconnected after submitting this tx?\n+    expect_disconnect = False\n+\n+    # Is this tx considered valid when included in a block, but not for acceptance into\n+    # the mempool (i.e. does it violate policy but not consensus)?\n+    valid_in_block = False\n+\n+    def __init__(self, spend_tx=None, spend_block=None):\n+        self.spend_tx = spend_block.vtx[0] if spend_block else spend_tx\n+        self.spend_avail = sum(i.nValue for i in self.spend_tx.vout)\n+        self.valid_txin = CTxIn(COutPoint(self.spend_tx.sha256, 0), b\"\", 0xffffffff)\n+\n+    @abc.abstractmethod\n+    def get_ctx(self, *args, **kwargs):\n+        \"\"\"Return a CTransaction that is invalid per the subclass.\"\"\"\n+        pass\n+\n+\n+class OutputMissing(BadTxTemplate):",
    "path": "test/functional/data/invalid_txs.py",
    "position": 59,
    "original_position": 61,
    "commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "original_commit_id": "1483640cf1f106c62c0fbe026da8d60e1992c91f",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should be referenced from a test at least? :-)\r\n\r\nApplies also to other unused classes added in this PR",
    "created_at": "2018-10-13T13:53:50Z",
    "updated_at": "2018-11-27T22:54:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r224960753",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224960753"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r224960753"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224960753/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 59,
    "original_line": 59,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225530196",
    "pull_request_review_id": 165147457,
    "id": 225530196,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNTUzMDE5Ng==",
    "diff_hunk": "@@ -0,0 +1,182 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Templates for constructing various sorts of invalid transactions.\n+\n+These templates (or an iterator over all of them) can be reused in different\n+contexts to test using a number of invalid transaction types.\n+\n+Hopefully this makes it easier to get coverage of a full variety of tx\n+validation checks through different interfaces (AcceptBlock, AcceptToMemPool,\n+etc.) without repeating ourselves.\n+\n+Invalid tx cases not covered here can be found by running:\n+\n+    $ diff \\\n+      <(grep -IREho \"bad-txns[a-zA-Z-]+\" src | sort -u) \\\n+      <(grep -IEho \"bad-txns[a-zA-Z-]+\" test/functional/data/invalid_txs.py | sort -u)\n+\n+\"\"\"\n+import abc\n+\n+from test_framework.messages import CTransaction, CTxIn, CTxOut, COutPoint\n+from test_framework import script as sc\n+from test_framework.blocktools import create_tx_with_script, MAX_BLOCK_SIGOPS\n+\n+basic_p2sh = sc.CScript([sc.OP_HASH160, sc.hash160(sc.CScript([sc.OP_0])), sc.OP_EQUAL])\n+\n+MAX_P2SH_SIGOPS = 15  # See policy/policy.h.\n+\n+\n+class BadTxTemplate:\n+    \"\"\"Allows simple consruction of a certain kind of invalid tx. Base class to be subclassed.\"\"\"",
    "path": "test/functional/data/invalid_txs.py",
    "position": null,
    "original_position": 34,
    "commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "original_commit_id": "1483640cf1f106c62c0fbe026da8d60e1992c91f",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should be \"construction\" :-)",
    "created_at": "2018-10-16T13:06:54Z",
    "updated_at": "2018-11-27T22:54:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r225530196",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225530196"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r225530196"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225530196/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 34,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225618333",
    "pull_request_review_id": 165257838,
    "id": 225618333,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNTYxODMzMw==",
    "diff_hunk": "@@ -0,0 +1,182 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Templates for constructing various sorts of invalid transactions.\n+\n+These templates (or an iterator over all of them) can be reused in different\n+contexts to test using a number of invalid transaction types.\n+\n+Hopefully this makes it easier to get coverage of a full variety of tx\n+validation checks through different interfaces (AcceptBlock, AcceptToMemPool,\n+etc.) without repeating ourselves.\n+\n+Invalid tx cases not covered here can be found by running:\n+\n+    $ diff \\\n+      <(grep -IREho \"bad-txns[a-zA-Z-]+\" src | sort -u) \\\n+      <(grep -IEho \"bad-txns[a-zA-Z-]+\" test/functional/data/invalid_txs.py | sort -u)\n+\n+\"\"\"\n+import abc\n+\n+from test_framework.messages import CTransaction, CTxIn, CTxOut, COutPoint\n+from test_framework import script as sc\n+from test_framework.blocktools import create_tx_with_script, MAX_BLOCK_SIGOPS\n+\n+basic_p2sh = sc.CScript([sc.OP_HASH160, sc.hash160(sc.CScript([sc.OP_0])), sc.OP_EQUAL])\n+\n+MAX_P2SH_SIGOPS = 15  # See policy/policy.h.\n+\n+\n+class BadTxTemplate:\n+    \"\"\"Allows simple consruction of a certain kind of invalid tx. Base class to be subclassed.\"\"\"\n+    __metaclass__ = abc.ABCMeta\n+\n+    # The expected error code given by bitcoind upon submission of the tx.\n+    reject_reason = \"\"\n+\n+    # Only specified if it differs from mempool acceptance error.\n+    block_reject_reason = \"\"\n+\n+    # Do we expect to be disconnected after submitting this tx?\n+    expect_disconnect = False\n+\n+    # Is this tx considered valid when included in a block, but not for acceptance into\n+    # the mempool (i.e. does it violate policy but not consensus)?\n+    valid_in_block = False\n+\n+    def __init__(self, spend_tx=None, spend_block=None):\n+        self.spend_tx = spend_block.vtx[0] if spend_block else spend_tx\n+        self.spend_avail = sum(i.nValue for i in self.spend_tx.vout)\n+        self.valid_txin = CTxIn(COutPoint(self.spend_tx.sha256, 0), b\"\", 0xffffffff)\n+\n+    @abc.abstractmethod\n+    def get_ctx(self, *args, **kwargs):\n+        \"\"\"Return a CTransaction that is invalid per the subclass.\"\"\"\n+        pass\n+\n+\n+class OutputMissing(BadTxTemplate):",
    "path": "test/functional/data/invalid_txs.py",
    "position": 59,
    "original_position": 61,
    "commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "original_commit_id": "1483640cf1f106c62c0fbe026da8d60e1992c91f",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "These are all accessed via [`iter_all_templates()`](https://github.com/bitcoin/bitcoin/pull/14457/files/1483640cf1f106c62c0fbe026da8d60e1992c91f#diff-61418630f672af16f132a5c0b56fb6fbR181).",
    "created_at": "2018-10-16T16:38:16Z",
    "updated_at": "2018-11-27T22:54:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r225618333",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225618333"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r225618333"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225618333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 59,
    "original_line": 59,
    "side": "RIGHT",
    "in_reply_to_id": 224960753
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225619189",
    "pull_request_review_id": 165258825,
    "id": 225619189,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNTYxOTE4OQ==",
    "diff_hunk": "@@ -116,7 +122,38 @@ def run_test(self):\n         b2 = self.next_block(2, spend=out[1])\n         self.save_spendable_output()\n \n-        self.sync_blocks([b1, b2])\n+        self.sync_blocks([b1, b2], timeout=4)\n+\n+        # Pop the first unspent output in `out`.\n+        spend_tx = out.pop(2)\n+\n+        # Submit blocks for rejection, each of which contains a single transaction\n+        # (aside from coinbase) which should be considered invalid.\n+        for TxTemplate in invalid_txs.iter_all_templates():\n+            template = TxTemplate(spend_tx=spend_tx)\n+\n+            # Something about the serialization code for missing inputs creates",
    "path": "test/functional/feature_block.py",
    "position": 66,
    "original_position": 61,
    "commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "original_commit_id": "1483640cf1f106c62c0fbe026da8d60e1992c91f",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Not sure what you mean by this - which test names?",
    "created_at": "2018-10-16T16:40:32Z",
    "updated_at": "2018-11-27T22:54:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r225619189",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225619189"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r225619189"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225619189/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 140,
    "original_line": 140,
    "side": "RIGHT",
    "in_reply_to_id": 224935814
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225624173",
    "pull_request_review_id": 165264944,
    "id": 225624173,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNTYyNDE3Mw==",
    "diff_hunk": "@@ -7,7 +7,9 @@\n import struct\n import time\n \n-from test_framework.blocktools import create_block, create_coinbase, create_tx_with_script, get_legacy_sigopcount_block\n+from test_framework.blocktools import (\n+    create_block, create_coinbase, create_tx_with_script, get_legacy_sigopcount_block,\n+    MAX_BLOCK_SIGOPS)",
    "path": "test/functional/feature_block.py",
    "position": null,
    "original_position": 7,
    "commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "original_commit_id": "1483640cf1f106c62c0fbe026da8d60e1992c91f",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "https://github.com/bitcoin/bitcoin/blob/1483640cf1f106c62c0fbe026da8d60e1992c91f/test/functional/feature_block.py#L244",
    "created_at": "2018-10-16T16:55:01Z",
    "updated_at": "2018-11-27T22:54:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r225624173",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225624173"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r225624173"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225624173/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 12,
    "side": "RIGHT",
    "in_reply_to_id": 224960730
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225692008",
    "pull_request_review_id": 165347340,
    "id": 225692008,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNTY5MjAwOA==",
    "diff_hunk": "@@ -0,0 +1,182 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Templates for constructing various sorts of invalid transactions.\n+\n+These templates (or an iterator over all of them) can be reused in different\n+contexts to test using a number of invalid transaction types.\n+\n+Hopefully this makes it easier to get coverage of a full variety of tx\n+validation checks through different interfaces (AcceptBlock, AcceptToMemPool,\n+etc.) without repeating ourselves.\n+\n+Invalid tx cases not covered here can be found by running:\n+\n+    $ diff \\\n+      <(grep -IREho \"bad-txns[a-zA-Z-]+\" src | sort -u) \\\n+      <(grep -IEho \"bad-txns[a-zA-Z-]+\" test/functional/data/invalid_txs.py | sort -u)\n+\n+\"\"\"\n+import abc\n+\n+from test_framework.messages import CTransaction, CTxIn, CTxOut, COutPoint\n+from test_framework import script as sc\n+from test_framework.blocktools import create_tx_with_script, MAX_BLOCK_SIGOPS\n+\n+basic_p2sh = sc.CScript([sc.OP_HASH160, sc.hash160(sc.CScript([sc.OP_0])), sc.OP_EQUAL])\n+\n+MAX_P2SH_SIGOPS = 15  # See policy/policy.h.\n+\n+\n+class BadTxTemplate:\n+    \"\"\"Allows simple consruction of a certain kind of invalid tx. Base class to be subclassed.\"\"\"\n+    __metaclass__ = abc.ABCMeta\n+\n+    # The expected error code given by bitcoind upon submission of the tx.\n+    reject_reason = \"\"\n+\n+    # Only specified if it differs from mempool acceptance error.\n+    block_reject_reason = \"\"\n+\n+    # Do we expect to be disconnected after submitting this tx?\n+    expect_disconnect = False\n+\n+    # Is this tx considered valid when included in a block, but not for acceptance into\n+    # the mempool (i.e. does it violate policy but not consensus)?\n+    valid_in_block = False\n+\n+    def __init__(self, spend_tx=None, spend_block=None):\n+        self.spend_tx = spend_block.vtx[0] if spend_block else spend_tx\n+        self.spend_avail = sum(i.nValue for i in self.spend_tx.vout)\n+        self.valid_txin = CTxIn(COutPoint(self.spend_tx.sha256, 0), b\"\", 0xffffffff)\n+\n+    @abc.abstractmethod\n+    def get_ctx(self, *args, **kwargs):\n+        \"\"\"Return a CTransaction that is invalid per the subclass.\"\"\"\n+        pass\n+\n+\n+class OutputMissing(BadTxTemplate):",
    "path": "test/functional/data/invalid_txs.py",
    "position": 59,
    "original_position": 61,
    "commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "original_commit_id": "1483640cf1f106c62c0fbe026da8d60e1992c91f",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@jamesob Ah, got it! Thanks for the clarification!",
    "created_at": "2018-10-16T20:14:20Z",
    "updated_at": "2018-11-27T22:54:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r225692008",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225692008"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r225692008"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225692008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 59,
    "original_line": 59,
    "side": "RIGHT",
    "in_reply_to_id": 224960753
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227580725",
    "pull_request_review_id": 167656195,
    "id": 227580725,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzU4MDcyNQ==",
    "diff_hunk": "@@ -0,0 +1,182 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Templates for constructing various sorts of invalid transactions.\n+\n+These templates (or an iterator over all of them) can be reused in different\n+contexts to test using a number of invalid transaction types.\n+\n+Hopefully this makes it easier to get coverage of a full variety of tx\n+validation checks through different interfaces (AcceptBlock, AcceptToMemPool,\n+etc.) without repeating ourselves.\n+\n+Invalid tx cases not covered here can be found by running:\n+\n+    $ diff \\\n+      <(grep -IREho \"bad-txns[a-zA-Z-]+\" src | sort -u) \\\n+      <(grep -IEho \"bad-txns[a-zA-Z-]+\" test/functional/data/invalid_txs.py | sort -u)\n+\n+\"\"\"\n+import abc\n+\n+from test_framework.messages import CTransaction, CTxIn, CTxOut, COutPoint\n+from test_framework import script as sc\n+from test_framework.blocktools import create_tx_with_script, MAX_BLOCK_SIGOPS\n+\n+basic_p2sh = sc.CScript([sc.OP_HASH160, sc.hash160(sc.CScript([sc.OP_0])), sc.OP_EQUAL])\n+\n+MAX_P2SH_SIGOPS = 15  # See policy/policy.h.\n+\n+\n+class BadTxTemplate:\n+    \"\"\"Allows simple construction of a certain kind of invalid tx. Base class to be subclassed.\"\"\"\n+    __metaclass__ = abc.ABCMeta\n+\n+    # The expected error code given by bitcoind upon submission of the tx.\n+    reject_reason = \"\"\n+\n+    # Only specified if it differs from mempool acceptance error.\n+    block_reject_reason = \"\"\n+\n+    # Do we expect to be disconnected after submitting this tx?\n+    expect_disconnect = False\n+\n+    # Is this tx considered valid when included in a block, but not for acceptance into\n+    # the mempool (i.e. does it violate policy but not consensus)?\n+    valid_in_block = False\n+\n+    def __init__(self, spend_tx=None, spend_block=None):",
    "path": "test/functional/data/invalid_txs.py",
    "position": null,
    "original_position": 50,
    "commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "original_commit_id": "74306a55a5fd15ed194d8addb50cb55a849f293c",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: Could use `self , *, spend_tx=...` to enforce named args.",
    "created_at": "2018-10-23T22:00:12Z",
    "updated_at": "2018-11-27T22:54:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r227580725",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227580725"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r227580725"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227580725/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 50,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227580961",
    "pull_request_review_id": 167656195,
    "id": 227580961,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzU4MDk2MQ==",
    "diff_hunk": "@@ -0,0 +1,182 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Templates for constructing various sorts of invalid transactions.\n+\n+These templates (or an iterator over all of them) can be reused in different\n+contexts to test using a number of invalid transaction types.\n+\n+Hopefully this makes it easier to get coverage of a full variety of tx\n+validation checks through different interfaces (AcceptBlock, AcceptToMemPool,\n+etc.) without repeating ourselves.\n+\n+Invalid tx cases not covered here can be found by running:\n+\n+    $ diff \\\n+      <(grep -IREho \"bad-txns[a-zA-Z-]+\" src | sort -u) \\\n+      <(grep -IEho \"bad-txns[a-zA-Z-]+\" test/functional/data/invalid_txs.py | sort -u)\n+\n+\"\"\"\n+import abc\n+\n+from test_framework.messages import CTransaction, CTxIn, CTxOut, COutPoint\n+from test_framework import script as sc\n+from test_framework.blocktools import create_tx_with_script, MAX_BLOCK_SIGOPS\n+\n+basic_p2sh = sc.CScript([sc.OP_HASH160, sc.hash160(sc.CScript([sc.OP_0])), sc.OP_EQUAL])\n+\n+MAX_P2SH_SIGOPS = 15  # See policy/policy.h.\n+\n+\n+class BadTxTemplate:\n+    \"\"\"Allows simple construction of a certain kind of invalid tx. Base class to be subclassed.\"\"\"\n+    __metaclass__ = abc.ABCMeta\n+\n+    # The expected error code given by bitcoind upon submission of the tx.\n+    reject_reason = \"\"\n+\n+    # Only specified if it differs from mempool acceptance error.\n+    block_reject_reason = \"\"\n+\n+    # Do we expect to be disconnected after submitting this tx?\n+    expect_disconnect = False\n+\n+    # Is this tx considered valid when included in a block, but not for acceptance into\n+    # the mempool (i.e. does it violate policy but not consensus)?\n+    valid_in_block = False\n+\n+    def __init__(self, spend_tx=None, spend_block=None):\n+        self.spend_tx = spend_block.vtx[0] if spend_block else spend_tx\n+        self.spend_avail = sum(i.nValue for i in self.spend_tx.vout)\n+        self.valid_txin = CTxIn(COutPoint(self.spend_tx.sha256, 0), b\"\", 0xffffffff)\n+\n+    @abc.abstractmethod\n+    def get_ctx(self, *args, **kwargs):",
    "path": "test/functional/data/invalid_txs.py",
    "position": null,
    "original_position": 56,
    "commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "original_commit_id": "74306a55a5fd15ed194d8addb50cb55a849f293c",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: The developer notes discourage the leading `C`, so might want to call this `get_tx`?",
    "created_at": "2018-10-23T22:00:54Z",
    "updated_at": "2018-11-27T22:54:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r227580961",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227580961"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r227580961"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227580961/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 56,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231585245",
    "pull_request_review_id": 172587108,
    "id": 231585245,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTU4NTI0NQ==",
    "diff_hunk": "@@ -95,16 +100,21 @@ def run_test(self):\n         self.save_spendable_output()\n         self.sync_blocks([b0])\n \n+        # These constants chosen specifically to trigger an immature coinbase spend\n+        # at a certain time below.\n+        NUM_BUFFER_BLOCKS_TO_GENERATE = 100",
    "path": "test/functional/feature_block.py",
    "position": null,
    "original_position": 31,
    "commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "original_commit_id": "428c144fc3acc02d36cb0e01dd631d39f0e9a00c",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why are both of these increasing by one?",
    "created_at": "2018-11-07T16:45:20Z",
    "updated_at": "2018-11-27T22:54:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r231585245",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231585245"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r231585245"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231585245/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 105,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231618740",
    "pull_request_review_id": 172626590,
    "id": 231618740,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTYxODc0MA==",
    "diff_hunk": "@@ -95,16 +100,21 @@ def run_test(self):\n         self.save_spendable_output()\n         self.sync_blocks([b0])\n \n+        # These constants chosen specifically to trigger an immature coinbase spend\n+        # at a certain time below.\n+        NUM_BUFFER_BLOCKS_TO_GENERATE = 100",
    "path": "test/functional/feature_block.py",
    "position": null,
    "original_position": 31,
    "commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "original_commit_id": "428c144fc3acc02d36cb0e01dd631d39f0e9a00c",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Just because I added an additional coinbase to (try to) spend for the new tests included below.",
    "created_at": "2018-11-07T18:11:26Z",
    "updated_at": "2018-11-27T22:54:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r231618740",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231618740"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r231618740"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231618740/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 105,
    "side": "RIGHT",
    "in_reply_to_id": 231585245
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236846428",
    "pull_request_review_id": 179009377,
    "id": 236846428,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjg0NjQyOA==",
    "diff_hunk": "@@ -0,0 +1,182 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Templates for constructing various sorts of invalid transactions.\n+\n+These templates (or an iterator over all of them) can be reused in different\n+contexts to test using a number of invalid transaction types.\n+\n+Hopefully this makes it easier to get coverage of a full variety of tx\n+validation checks through different interfaces (AcceptBlock, AcceptToMemPool,\n+etc.) without repeating ourselves.\n+\n+Invalid tx cases not covered here can be found by running:\n+\n+    $ diff \\\n+      <(grep -IREho \"bad-txns[a-zA-Z-]+\" src | sort -u) \\\n+      <(grep -IEho \"bad-txns[a-zA-Z-]+\" test/functional/data/invalid_txs.py | sort -u)\n+\n+\"\"\"\n+import abc\n+\n+from test_framework.messages import CTransaction, CTxIn, CTxOut, COutPoint\n+from test_framework import script as sc\n+from test_framework.blocktools import create_tx_with_script, MAX_BLOCK_SIGOPS\n+\n+basic_p2sh = sc.CScript([sc.OP_HASH160, sc.hash160(sc.CScript([sc.OP_0])), sc.OP_EQUAL])\n+\n+MAX_P2SH_SIGOPS = 15  # See policy/policy.h.\n+\n+\n+class BadTxTemplate:\n+    \"\"\"Allows simple construction of a certain kind of invalid tx. Base class to be subclassed.\"\"\"\n+    __metaclass__ = abc.ABCMeta\n+\n+    # The expected error code given by bitcoind upon submission of the tx.\n+    reject_reason = \"\"\n+\n+    # Only specified if it differs from mempool acceptance error.\n+    block_reject_reason = \"\"\n+\n+    # Do we expect to be disconnected after submitting this tx?\n+    expect_disconnect = False\n+\n+    # Is this tx considered valid when included in a block, but not for acceptance into\n+    # the mempool (i.e. does it violate policy but not consensus)?\n+    valid_in_block = False\n+\n+    def __init__(self, *, spend_tx=None, spend_block=None):\n+        self.spend_tx = spend_block.vtx[0] if spend_block else spend_tx\n+        self.spend_avail = sum(i.nValue for i in self.spend_tx.vout)",
    "path": "test/functional/data/invalid_txs.py",
    "position": null,
    "original_position": 52,
    "commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "original_commit_id": "428c144fc3acc02d36cb0e01dd631d39f0e9a00c",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit:\r\n```suggestion\r\n        self.spend_avail = sum(o.nValue for o in self.spend_tx.vout)\r\n```",
    "created_at": "2018-11-27T21:07:53Z",
    "updated_at": "2018-11-27T22:54:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r236846428",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236846428"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r236846428"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236846428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 52,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236852018",
    "pull_request_review_id": 179009377,
    "id": 236852018,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjg1MjAxOA==",
    "diff_hunk": "@@ -95,16 +100,21 @@ def run_test(self):\n         self.save_spendable_output()\n         self.sync_blocks([b0])\n \n+        # These constants chosen specifically to trigger an immature coinbase spend\n+        # at a certain time below.\n+        NUM_BUFFER_BLOCKS_TO_GENERATE = 100",
    "path": "test/functional/feature_block.py",
    "position": null,
    "original_position": 31,
    "commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "original_commit_id": "428c144fc3acc02d36cb0e01dd631d39f0e9a00c",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why not borrow a coinbase output that is later used and keep those numbers as they were before? Since all blocks/tx are invalid that spend this coinbase output, there should be no downside in recycling it.",
    "created_at": "2018-11-27T21:24:46Z",
    "updated_at": "2018-11-27T22:54:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r236852018",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236852018"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r236852018"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236852018/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 105,
    "side": "RIGHT",
    "in_reply_to_id": 231585245
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236871124",
    "pull_request_review_id": 179040014,
    "id": 236871124,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjg3MTEyNA==",
    "diff_hunk": "@@ -95,16 +100,21 @@ def run_test(self):\n         self.save_spendable_output()\n         self.sync_blocks([b0])\n \n+        # These constants chosen specifically to trigger an immature coinbase spend\n+        # at a certain time below.\n+        NUM_BUFFER_BLOCKS_TO_GENERATE = 100",
    "path": "test/functional/feature_block.py",
    "position": null,
    "original_position": 31,
    "commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "original_commit_id": "428c144fc3acc02d36cb0e01dd631d39f0e9a00c",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yep, good point. Fixed.",
    "created_at": "2018-11-27T22:23:09Z",
    "updated_at": "2018-11-27T22:54:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r236871124",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236871124"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r236871124"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236871124/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 105,
    "side": "RIGHT",
    "in_reply_to_id": 231585245
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237997595",
    "pull_request_review_id": 180443107,
    "id": 237997595,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNzk5NzU5NQ==",
    "diff_hunk": "@@ -116,7 +126,39 @@ def run_test(self):\n         b2 = self.next_block(2, spend=out[1])\n         self.save_spendable_output()\n \n-        self.sync_blocks([b1, b2])\n+        self.sync_blocks([b1, b2], timeout=4)\n+\n+        # Select a txn with an output eligible for spending. This won't actually be spent,\n+        # since we're testing submission of a series of blocks with invalid txns.\n+        attempt_spend_tx = out[2]\n+\n+        # Submit blocks for rejection, each of which contains a single transaction\n+        # (aside from coinbase) which should be considered invalid.\n+        for TxTemplate in invalid_txs.iter_all_templates():\n+            template = TxTemplate(spend_tx=attempt_spend_tx)\n+\n+            # Something about the serialization code for missing inputs creates\n+            # a different hash in the test client than on bitcoind, resulting\n+            # in a mismatching merkle root during block validation.\n+            # Skip until we figure out what's going on.",
    "path": "test/functional/feature_block.py",
    "position": 69,
    "original_position": 69,
    "commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "original_commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "missing inputs means the vin is empty and is thus interpreted as the witness dummy vin?",
    "created_at": "2018-11-30T20:47:29Z",
    "updated_at": "2018-11-30T20:47:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r237997595",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237997595"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r237997595"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237997595/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 143,
    "original_line": 143,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/243745472",
    "pull_request_review_id": 187602172,
    "id": 243745472,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0Mzc0NTQ3Mg==",
    "diff_hunk": "@@ -116,7 +126,39 @@ def run_test(self):\n         b2 = self.next_block(2, spend=out[1])\n         self.save_spendable_output()\n \n-        self.sync_blocks([b1, b2])\n+        self.sync_blocks([b1, b2], timeout=4)\n+\n+        # Select a txn with an output eligible for spending. This won't actually be spent,\n+        # since we're testing submission of a series of blocks with invalid txns.\n+        attempt_spend_tx = out[2]\n+\n+        # Submit blocks for rejection, each of which contains a single transaction\n+        # (aside from coinbase) which should be considered invalid.\n+        for TxTemplate in invalid_txs.iter_all_templates():\n+            template = TxTemplate(spend_tx=attempt_spend_tx)\n+\n+            # Something about the serialization code for missing inputs creates\n+            # a different hash in the test client than on bitcoind, resulting\n+            # in a mismatching merkle root during block validation.\n+            # Skip until we figure out what's going on.",
    "path": "test/functional/feature_block.py",
    "position": 69,
    "original_position": 69,
    "commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "original_commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "See:\r\n\r\n```\r\ntx as sent:     CTransaction(nVersion=1 vin=[] vout=[CTxOut(nValue=0.00000000 scriptPubKey=51515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151)] wit=CTxWitness() nLockTime=0)\r\ntx as received: CTransaction(nVersion=1 vin=[] vout=[] wit=CTxWitness() nLockTime=0)\r\n",
    "created_at": "2018-12-22T20:26:59Z",
    "updated_at": "2018-12-22T20:26:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r243745472",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/243745472"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r243745472"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/243745472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 143,
    "original_line": 143,
    "side": "RIGHT",
    "in_reply_to_id": 237997595
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/243745630",
    "pull_request_review_id": 187602339,
    "id": 243745630,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0Mzc0NTYzMA==",
    "diff_hunk": "@@ -116,7 +126,39 @@ def run_test(self):\n         b2 = self.next_block(2, spend=out[1])\n         self.save_spendable_output()\n \n-        self.sync_blocks([b1, b2])\n+        self.sync_blocks([b1, b2], timeout=4)\n+\n+        # Select a txn with an output eligible for spending. This won't actually be spent,\n+        # since we're testing submission of a series of blocks with invalid txns.\n+        attempt_spend_tx = out[2]\n+\n+        # Submit blocks for rejection, each of which contains a single transaction\n+        # (aside from coinbase) which should be considered invalid.\n+        for TxTemplate in invalid_txs.iter_all_templates():\n+            template = TxTemplate(spend_tx=attempt_spend_tx)\n+\n+            # Something about the serialization code for missing inputs creates\n+            # a different hash in the test client than on bitcoind, resulting\n+            # in a mismatching merkle root during block validation.\n+            # Skip until we figure out what's going on.",
    "path": "test/functional/feature_block.py",
    "position": 69,
    "original_position": 69,
    "commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "original_commit_id": "59e387705c7e55ec40400301346354fa2d0c613f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "One solution would be:\r\n\r\n```diff\r\ndiff --git a/test/functional/feature_block.py b/test/functional/feature_block.py\r\nindex 697a0b19ac..edbdcf2d55 100755\r\n--- a/test/functional/feature_block.py\r\n+++ b/test/functional/feature_block.py\r\n@@ -137,12 +137,6 @@ class FullBlockTest(BitcoinTestFramework):\r\n         for TxTemplate in invalid_txs.iter_all_templates():\r\n             template = TxTemplate(spend_tx=attempt_spend_tx)\r\n \r\n-            # Something about the serialization code for missing inputs creates\r\n-            # a different hash in the test client than on bitcoind, resulting\r\n-            # in a mismatching merkle root during block validation.\r\n-            # Skip until we figure out what's going on.\r\n-            if TxTemplate == invalid_txs.InputMissing:\r\n-                continue\r\n             if template.valid_in_block:\r\n                 continue\r\n \r\n@@ -150,7 +144,10 @@ class FullBlockTest(BitcoinTestFramework):\r\n             blockname = \"for_invalid.%s\" % TxTemplate.__name__\r\n             badblock = self.next_block(blockname)\r\n             badtx = template.get_tx()\r\n-            self.sign_tx(badtx, attempt_spend_tx)\r\n+            if TxTemplate != invalid_txs.InputMissing:\r\n+                self.sign_tx(badtx, attempt_spend_tx)\r\n+            else:\r\n+                badtx.vout = []  # Also set outputs empty, so we can calculate the correct hash\r\n             badtx.rehash()\r\n             badblock = self.update_block(blockname, [badtx])\r\n             self.sync_blocks(",
    "created_at": "2018-12-22T20:33:35Z",
    "updated_at": "2018-12-22T20:33:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r243745630",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/243745630"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14457#discussion_r243745630"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14457"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/243745630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 143,
    "original_line": 143,
    "side": "RIGHT",
    "in_reply_to_id": 237997595
  }
]