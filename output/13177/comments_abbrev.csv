ken2812221,2018-05-06T23:50:57Z,"Still have some probleams. Why doesn't it be allowed to export these symbols.\n```\nbitcoin-cli: export of symbol stdout not allowed\nbitcoin-cli: export of symbol stderr not allowed\nbitcoin-tx: export of symbol stdout not allowed\nbitcoin-tx: export of symbol stdin not allowed\nbitcoin-tx: export of symbol stderr not allowed\nqt/bitcoin-qt: export of symbol stdout not allowed\nqt/bitcoin",https://github.com/bitcoin/bitcoin/pull/13177#issuecomment-386926174,386926174,
laanwj,2018-05-07T09:29:27Z,"> Still have some probleams. Why doesn't it be allowed to export these symbols.\n\nBecause it's an executable - it's unnecessary to export any symbols, so if that happens that usually points towards a problem during linking that can cause weird issues with shared libraries later on.\n(however, maybe there's a good reason for these then they could be added to the exceptions)",https://github.com/bitcoin/bitcoin/pull/13177#issuecomment-387011057,387011057,
ken2812221,2018-05-07T10:31:32Z,"I actually don't know this too much, but I think thery all need to be exported.\n```\n0000000002537398 g    D  .bss   0000000000000000  Base        _end\n000000000251ca40 g    DO .bss   0000000000000008  GLIBC_2.2.5 stdout\n000000000251ca30 g    D  .data  0000000000000000  Base        _edata\n00000000024a7d00  w   DO .data.rel.ro   0000000000000010  GLIBC_2.2.5 in6addr_any\n000000000251ca30 ",https://github.com/bitcoin/bitcoin/pull/13177#issuecomment-387025244,387025244,
laanwj,2018-05-07T10:42:39Z,"`_end` `_fini` and such are harmless to export. I don't think they're strictly necessary for execution, but they're just part of the linking process, and delimit the various sections.\nNot sure about the rest, though.\n`stdout`/`stderr`/`in6addr_any` sound like they should be exported from the C library, not our executable.\nI'll look into it as well when I get around to playing around with Ubu",https://github.com/bitcoin/bitcoin/pull/13177#issuecomment-387027473,387027473,
theuni,2018-05-08T13:36:39Z,"@laanwj Thanks.\n\nThose are interesting. in6addr_any is weak-linked for some reason. If necessary we could just define a new constant. No clue about stdout/stderr, I'll have to play with that as well.\n\n@ken2812221 Is it not sufficient to define the replacements with their own symbol names? Why use \_\_wrap\_\_?",https://github.com/bitcoin/bitcoin/pull/13177#issuecomment-387404507,387404507,
theuni,2018-05-08T14:35:04Z,"This should take care of in6addr_any:\n```patch\n--- a/src/net.cpp\n+++ b/src/net.cpp\n@@ -2254,7 +2254,7 @@ bool CConnman::InitBinds(const std::vector<CService>& binds, const std::vector<C\n     if (binds.empty() && whiteBinds.empty()) {\n         struct in_addr inaddr_any;\n         inaddr_any.s_addr = INADDR_ANY;\n-        fBound |= Bind(CService(in6addr_any, GetListenPort()), BF_NONE);",https://github.com/bitcoin/bitcoin/pull/13177#issuecomment-387423870,387423870,
ken2812221,2018-05-08T17:12:34Z,">This should take care of in6addr_any:\n\nThanks. That does work.\n> Is it not sufficient to define the replacements with their own symbol names? Why use __wrap__?\n\nI thought it would conflict with the library, so I didn't try that before. ~~But it works now.~~ No. it doesn't, this would cause a segfault on [Travis](https://travis-ci.org/bitcoin/bitcoin/builds/376458511).",https://github.com/bitcoin/bitcoin/pull/13177#issuecomment-387474882,387474882,
ken2812221,2018-06-02T18:01:13Z,"I couldn't find any way not to export stdin, stdout, stderr. Also, it is harmless to export them since glibc is versioned, so I just ignore them in symbol-check.py.",https://github.com/bitcoin/bitcoin/pull/13177#issuecomment-394105435,394105435,
Sjors,2018-07-12T10:59:06Z,This improves #13604 such that it produces ARM binaries that work on Xenial when cross-compiling on Bionic.,https://github.com/bitcoin/bitcoin/pull/13177#issuecomment-404474300,404474300,
laanwj,2018-07-12T14:26:38Z,utACK 253f5929097548fb10ef995002dedbb8dadb6a0d,https://github.com/bitcoin/bitcoin/pull/13177#issuecomment-404531179,404531179,
theuni,2018-07-12T17:50:15Z,"Sorry for the late review...\n\nI really dislike the use of wrap here. I suspect it will get in the way of things like sanitizers and lto, and it really shouldn't be necessary since the other compat stubs manage to work without it.\n\nI'll follow up with another PR if I can come up with a working solution without wrapping.",https://github.com/bitcoin/bitcoin/pull/13177#issuecomment-404595124,404595124,
ken2812221,2018-07-12T17:55:26Z,It caused a segfault on travis for qt 4. But qt 4 has gone now. I am not sure if we should get rid of wrap.,https://github.com/bitcoin/bitcoin/pull/13177#issuecomment-404596707,404596707,
