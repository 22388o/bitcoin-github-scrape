sipa,2016-10-03T00:27:19Z,Looks harmless at worst. utACK.\n,https://github.com/bitcoin/bitcoin/pull/8862#issuecomment-251006662,251006662,
gmaxwell,2016-10-03T03:33:53Z,"utACK.   Seems like it would be easy to introduce more of these issues in the future, this fix seems fine though we might want to consider something more comprehensive for later.\n",https://github.com/bitcoin/bitcoin/pull/8862#issuecomment-251020010,251020010,
theuni,2016-10-03T04:42:27Z,"@gmaxwell Agreed. As mentioned above, #8708 adds an assert to catch a specific form of this case (sending a post-handshake message before the handshake is complete), so a more comprehensive fix will be required for sure, and is coming as part of the disconnection logic cleanup. These two were just added because they're low-hanging fruit and are easily backported, and because they were the only one",https://github.com/bitcoin/bitcoin/pull/8862#issuecomment-251025609,251025609,
rebroad,2016-10-03T05:13:33Z,Why not put this logic at the start of SendMessages - where it checks if Version is non zero?\n,https://github.com/bitcoin/bitcoin/pull/8862#issuecomment-251028047,251028047,
theuni,2016-10-03T05:31:46Z,"@rebroad I believe that may inhibit the send of some valid reject messages. Generally speaking, I don't like the idea of relying on a stateful difference in SendMessages, as I think the goal should be generally async responses as opposed to the current model of ""check all connections for all eligible broadcasts all the time"".\n\n It's a good makeshift suggestion though, I'll have a look.\n",https://github.com/bitcoin/bitcoin/pull/8862#issuecomment-251029669,251029669,
laanwj,2016-10-03T08:53:31Z,"utACK\n\n> Noticed these in #8708, which turns them into crashes\n\nOuch. I hope we can avoid this in a consistent way. To avoid DoSes, in network code it's always preferable to continue and (if its state is messed up) just boot a peer to crashing. Even in case of bugs.\n",https://github.com/bitcoin/bitcoin/pull/8862#issuecomment-251056811,251056811,
