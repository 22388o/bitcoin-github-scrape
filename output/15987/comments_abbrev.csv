gmaxwell,2019-05-08 21:45:47,Meta-concept-ack!  we should absolutely do something like this (I haven't looked at the specifics of what this does yet),https://github.com/bitcoin/bitcoin/pull/15987#issuecomment-490662554,490662554,
DrahtBot,2019-05-08 22:45:30,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17513](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17513.html) (refactor, qt: Nuke some circular dependenci",https://github.com/bitcoin/bitcoin/pull/15987#issuecomment-490677723,490677723,
meshcollider,2019-05-09 05:48:17,"Concept ACK\n\nThis addresses #3266 I assume",https://github.com/bitcoin/bitcoin/pull/15987#issuecomment-490752695,490752695,
luke-jr,2019-05-09 06:13:13,"It doesn't take into consideration all the ideas/advice (even my own!) on #3266, but yes, it implements the general idea I think.",https://github.com/bitcoin/bitcoin/pull/15987#issuecomment-490757897,490757897,
jonasschnelli,2019-05-09 07:11:39,Concept ACK,https://github.com/bitcoin/bitcoin/pull/15987#issuecomment-490772492,490772492,
hebasto,2019-05-09 14:24:17,Concept ACK,https://github.com/bitcoin/bitcoin/pull/15987#issuecomment-490926440,490926440,
promag,2019-06-12 22:32:13,"Concept ACK, didn't see the code but maybe you could split RPC changes to other PR?",https://github.com/bitcoin/bitcoin/pull/15987#issuecomment-501478739,501478739,
Sjors,2019-08-15 17:11:33,"Concept ACK, but agree with @promag on splitting `getaddressinfo` into a seperate PR, so we can review that and the bloom filter stuff first.\n\nWhen I enter a duplicate address the field becomes yellow as expected, but when I also enter an absurdly high amount, it no longer shows the ""insufficient balance error"", but instead ignores the amount I entered and falls back to the previous amount. Al",https://github.com/bitcoin/bitcoin/pull/15987#issuecomment-521720335,521720335,
luke-jr,2019-08-29 02:11:45,"Rebased, fixed issues, and moved RPC change to a new `rpc_gai_txids` branch that can be PR'd after this.",https://github.com/bitcoin/bitcoin/pull/15987#issuecomment-525991876,525991876,
instagibbs,2019-09-13 19:03:56,concept ACK,https://github.com/bitcoin/bitcoin/pull/15987#issuecomment-531355193,531355193,
DrahtBot,2019-11-21 19:12:38,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/15987#issuecomment-557230196,557230196,
luke-jr,2020-03-05 19:34:10,Planning to redo this as an addressbook `bool` once #18192 gets merged...,https://github.com/bitcoin/bitcoin/pull/15987#issuecomment-595407223,595407223,
hebasto,2020-05-04 05:59:01,"> Planning to redo this as an addressbook `bool` once #18192 gets merged...\n\n#18192 and #18546 have been merged already :D",https://github.com/bitcoin/bitcoin/pull/15987#issuecomment-623272617,623272617,
rebroad,2020-08-20 05:15:38,@luke-jr re-open?,https://github.com/bitcoin/bitcoin/pull/15987#issuecomment-677100463,677100463,
hebasto,2021-10-03 09:01:25,Up for grabs?,https://github.com/bitcoin/bitcoin/pull/15987#issuecomment-932892761,932892761,
luke-jr,2021-10-03 21:24:02,It's maintained. PR is pending on https://github.com/bitcoin-core/gui/pull/404,https://github.com/bitcoin/bitcoin/pull/15987#issuecomment-933027946,933027946,
luke-jr,2019-05-08 21:45:47,Note: `//:` is how Qt lets us add notes for translators. (I'm not sure if it survives to Transifex?),https://github.com/bitcoin/bitcoin/pull/15987#discussion_r282261940,282261940,src/qt/sendcoinsdialog.cpp
sipa,2019-05-22 21:13:41,"Is this code assuming that there are two outputs per transaction? Bloom filter performance is very much dependent on this estimate being correct (if you take a filter designed for N elements with fprate=0.000001, and put 2N elements in it, the resulting fprate is only 0.0032).",https://github.com/bitcoin/bitcoin/pull/15987#discussion_r286690316,286690316,src/wallet/wallet.cpp
luke-jr,2019-05-23 01:22:33,"The intent was to not need rebuilding until the wallet doubled in size, but I guess it fails to consider transactions having multiple outputs.\n\nWould another factor (or variable) be better here?",https://github.com/bitcoin/bitcoin/pull/15987#discussion_r286744869,286744869,src/wallet/wallet.cpp
luke-jr,2019-08-29 02:12:33,Made it 6x for now.,https://github.com/bitcoin/bitcoin/pull/15987#discussion_r318861157,318861157,src/wallet/wallet.cpp
Sjors,2019-11-15 18:07:39,Assert that `m_address_bloom_filter` has been built?,https://github.com/bitcoin/bitcoin/pull/15987#discussion_r346945980,346945980,src/wallet/wallet.cpp
Sjors,2019-11-15 18:09:38,I'm still seeing `* 2`. Move the constants `ADDR_BLOOM_FILTER_TX_TO_ELEMENTS_FACTOR` and `ADDR_BLOOM_FILTER_FP_RATE` defined in 39f49f653541ce172a91a8d6996f44831f9a8df2 to  a13c30296f0507b1c6cdd70e42e693fe38d3c9df?,https://github.com/bitcoin/bitcoin/pull/15987#discussion_r346946703,346946703,src/wallet/wallet.cpp
Sjors,2019-11-15 18:18:25,"Can you document the params here? Also maybe explicitly state that this function corrects for any false positives found with the bloom filter.\n\nI think using `std::vector<CWalletTx&>& transactions` instead of a callback is more readable (and avoids Boost). Or do you need this to be asynchronous?",https://github.com/bitcoin/bitcoin/pull/15987#discussion_r346949910,346949910,src/wallet/wallet.h
Sjors,2019-11-15 18:24:16,"Suggested comment: `// Bloom filters can return false positives, so iterate through all wallet addresses`",https://github.com/bitcoin/bitcoin/pull/15987#discussion_r346952171,346952171,src/wallet/wallet.cpp
Sjors,2019-11-15 18:31:53,`AddressesToScriptPubKeys`?,https://github.com/bitcoin/bitcoin/pull/15987#discussion_r346955282,346955282,src/interfaces/wallet.cpp
Sjors,2019-11-15 18:37:20,`checkAddressesForUsage`?,https://github.com/bitcoin/bitcoin/pull/15987#discussion_r346957401,346957401,src/qt/walletmodel.h
Sjors,2019-11-15 18:45:10,Maybe add a comment here. Why not put `ifndef ENABLE_BIP70` before the entire `{` block? Can users manually add destinations to a BIP70 payment?,https://github.com/bitcoin/bitcoin/pull/15987#discussion_r346960391,346960391,src/qt/sendcoinsdialog.cpp
fanquake,2019-11-15 18:56:42,"> Can users manually add destinations to a BIP70 payment?\n\nBIP70 is no longer supported. Looks like this needs to be rebased on master and any `ENABLE_BIP70` additions needs to be removed.",https://github.com/bitcoin/bitcoin/pull/15987#discussion_r346964914,346964914,src/qt/sendcoinsdialog.cpp
promag,2019-12-16 22:23:53,Could early return if no callback?,https://github.com/bitcoin/bitcoin/pull/15987#discussion_r358498232,358498232,src/wallet/wallet.cpp
hebasto,2021-03-26 00:48:35,"> Note: `//:` is how Qt lets us add notes for translators. (I'm not sure if it survives to Transifex?)\n\nSmth like #21465 is required for that.",https://github.com/bitcoin/bitcoin/pull/15987#discussion_r601932930,601932930,src/qt/sendcoinsdialog.cpp
