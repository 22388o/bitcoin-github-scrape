[
  {
    "sha": "491f0dda96ed50ddeec04d4516e39f03ae6832fb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OTFmMGRkYTk2ZWQ1MGRkZWVjMDRkNDUxNmUzOWYwM2FlNjgzMmZi",
    "commit": {
      "author": {
        "name": "Jon Layton",
        "email": "me@jonl.io",
        "date": "2018-10-29T14:46:53Z"
      },
      "committer": {
        "name": "Jon Layton",
        "email": "me@jonl.io",
        "date": "2018-11-29T18:08:48Z"
      },
      "message": "scripted-diff: [rpc] Descriptions: Consistent arg labels for types 'object' and 'boolean'\n\n-BEGIN VERIFY SCRIPT-\n\ngit grep -l \"(bool) \" src | xargs sed -i \"s/(bool) /(boolean) /g\"\ngit grep -l \"(bool, \" src/rpc | xargs sed -i \"s/(bool, /(boolean, /g\"\ngit grep -l \"(bool, \" src/wallet | xargs sed -i \"s/(bool, /(boolean, /g\"\n\ngit grep -l \"(json object) \" src | xargs sed -i \"s/(json object) /(object) /g\"\ngit grep -l \"(json object, \" src | xargs sed -i \"s/(json object, /(object, /g\"\n\ngit grep -l \"(json array\" src | xargs sed -i \"s/(json array/(array/g\"\ngit grep -l \"of json objects\" src | xargs sed -i \"s/of json objects/of objects/g\"\n\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "bd580c99f24120f6850376c9d7a8e7cc6bd9218f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bd580c99f24120f6850376c9d7a8e7cc6bd9218f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/491f0dda96ed50ddeec04d4516e39f03ae6832fb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/491f0dda96ed50ddeec04d4516e39f03ae6832fb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/491f0dda96ed50ddeec04d4516e39f03ae6832fb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/491f0dda96ed50ddeec04d4516e39f03ae6832fb/comments",
    "author": {
      "login": "ch4ot1c",
      "id": 2287825,
      "node_id": "MDQ6VXNlcjIyODc4MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2287825?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ch4ot1c",
      "html_url": "https://github.com/ch4ot1c",
      "followers_url": "https://api.github.com/users/ch4ot1c/followers",
      "following_url": "https://api.github.com/users/ch4ot1c/following{/other_user}",
      "gists_url": "https://api.github.com/users/ch4ot1c/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ch4ot1c/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ch4ot1c/subscriptions",
      "organizations_url": "https://api.github.com/users/ch4ot1c/orgs",
      "repos_url": "https://api.github.com/users/ch4ot1c/repos",
      "events_url": "https://api.github.com/users/ch4ot1c/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ch4ot1c/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ch4ot1c",
      "id": 2287825,
      "node_id": "MDQ6VXNlcjIyODc4MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2287825?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ch4ot1c",
      "html_url": "https://github.com/ch4ot1c",
      "followers_url": "https://api.github.com/users/ch4ot1c/followers",
      "following_url": "https://api.github.com/users/ch4ot1c/following{/other_user}",
      "gists_url": "https://api.github.com/users/ch4ot1c/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ch4ot1c/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ch4ot1c/subscriptions",
      "organizations_url": "https://api.github.com/users/ch4ot1c/orgs",
      "repos_url": "https://api.github.com/users/ch4ot1c/repos",
      "events_url": "https://api.github.com/users/ch4ot1c/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ch4ot1c/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "60b20c869f8df9a81b5080ebcbe8c9cf4e6b9d77",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60b20c869f8df9a81b5080ebcbe8c9cf4e6b9d77",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/60b20c869f8df9a81b5080ebcbe8c9cf4e6b9d77"
      }
    ],
    "stats": {
      "total": 158,
      "additions": 79,
      "deletions": 79
    },
    "files": [
      {
        "sha": "8464aff017a32e5dd05d32bf4977e3a7fd7ee316",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/491f0dda96ed50ddeec04d4516e39f03ae6832fb/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/491f0dda96ed50ddeec04d4516e39f03ae6832fb/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=491f0dda96ed50ddeec04d4516e39f03ae6832fb",
        "patch": "@@ -505,7 +505,7 @@ static UniValue getrawmempool(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. verbose (boolean, optional, default=false) True for a json object, false for array of transaction ids\\n\"\n             \"\\nResult: (for verbose = false):\\n\"\n-            \"[                     (json array of string)\\n\"\n+            \"[                     (array of string)\\n\"\n             \"  \\\"transactionid\\\"     (string) The transaction id\\n\"\n             \"  ,...\\n\"\n             \"]\\n\"\n@@ -542,7 +542,7 @@ static UniValue getmempoolancestors(const JSONRPCRequest& request)\n             \"1. \\\"txid\\\"                 (string, required) The transaction id (must be in mempool)\\n\"\n             \"2. verbose                  (boolean, optional, default=false) True for a json object, false for array of transaction ids\\n\"\n             \"\\nResult (for verbose = false):\\n\"\n-            \"[                       (json array of strings)\\n\"\n+            \"[                       (array of strings)\\n\"\n             \"  \\\"transactionid\\\"           (string) The transaction id of an in-mempool ancestor transaction\\n\"\n             \"  ,...\\n\"\n             \"]\\n\"\n@@ -611,7 +611,7 @@ static UniValue getmempooldescendants(const JSONRPCRequest& request)\n             \"1. \\\"txid\\\"                 (string, required) The transaction id (must be in mempool)\\n\"\n             \"2. verbose                  (boolean, optional, default=false) True for a json object, false for array of transaction ids\\n\"\n             \"\\nResult (for verbose = false):\\n\"\n-            \"[                       (json array of strings)\\n\"\n+            \"[                       (array of strings)\\n\"\n             \"  \\\"transactionid\\\"           (string) The transaction id of an in-mempool descendant transaction\\n\"\n             \"  ,...\\n\"\n             \"]\\n\"\n@@ -1272,7 +1272,7 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n             \"  \\\"difficulty\\\": xxxxxx,         (numeric) the current difficulty\\n\"\n             \"  \\\"mediantime\\\": xxxxxx,         (numeric) median time for the current best block\\n\"\n             \"  \\\"verificationprogress\\\": xxxx, (numeric) estimate of verification progress [0..1]\\n\"\n-            \"  \\\"initialblockdownload\\\": xxxx, (bool) (debug information) estimate of whether this node is in Initial Block Download mode.\\n\"\n+            \"  \\\"initialblockdownload\\\": xxxx, (boolean) (debug information) estimate of whether this node is in Initial Block Download mode.\\n\"\n             \"  \\\"chainwork\\\": \\\"xxxx\\\"           (string) total amount of work in active chain, in hexadecimal\\n\"\n             \"  \\\"size_on_disk\\\": xxxxxx,       (numeric) the estimated size of the block and undo files on disk\\n\"\n             \"  \\\"pruned\\\": xx,                 (boolean) if the blocks are subject to pruning\\n\""
      },
      {
        "sha": "cc1071851899f3594bb5f491bc584580c2e23292",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/491f0dda96ed50ddeec04d4516e39f03ae6832fb/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/491f0dda96ed50ddeec04d4516e39f03ae6832fb/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=491f0dda96ed50ddeec04d4516e39f03ae6832fb",
        "patch": "@@ -340,7 +340,7 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n                 }}\n                 .ToString() +\n             \"\\nArguments:\\n\"\n-            \"1. template_request         (json object, optional) A json object in the following spec\\n\"\n+            \"1. template_request         (object, optional) A json object in the following spec\\n\"\n             \"     {\\n\"\n             \"       \\\"mode\\\":\\\"template\\\"    (string, optional) This must be set to \\\"template\\\", \\\"proposal\\\" (see BIP 23), or omitted\\n\"\n             \"       \\\"capabilities\\\":[     (array, optional) A list of strings\\n\"\n@@ -358,7 +358,7 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n             \"{\\n\"\n             \"  \\\"version\\\" : n,                    (numeric) The preferred block version\\n\"\n             \"  \\\"rules\\\" : [ \\\"rulename\\\", ... ],    (array of strings) specific block rules that are to be enforced\\n\"\n-            \"  \\\"vbavailable\\\" : {                 (json object) set of pending, supported versionbit (BIP 9) softfork deployments\\n\"\n+            \"  \\\"vbavailable\\\" : {                 (object) set of pending, supported versionbit (BIP 9) softfork deployments\\n\"\n             \"      \\\"rulename\\\" : bitnumber          (numeric) identifies the bit number as indicating acceptance and readiness for the named softfork rule\\n\"\n             \"      ,...\\n\"\n             \"  },\\n\"\n@@ -379,11 +379,11 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n             \"      }\\n\"\n             \"      ,...\\n\"\n             \"  ],\\n\"\n-            \"  \\\"coinbaseaux\\\" : {                 (json object) data that should be included in the coinbase's scriptSig content\\n\"\n+            \"  \\\"coinbaseaux\\\" : {                 (object) data that should be included in the coinbase's scriptSig content\\n\"\n             \"      \\\"flags\\\" : \\\"xx\\\"                  (string) key name is to be ignored, and value included in scriptSig\\n\"\n             \"  },\\n\"\n             \"  \\\"coinbasevalue\\\" : n,              (numeric) maximum allowable input to coinbase transaction, including the generation award and transaction fees (in satoshis)\\n\"\n-            \"  \\\"coinbasetxn\\\" : { ... },          (json object) information for coinbase transaction\\n\"\n+            \"  \\\"coinbasetxn\\\" : { ... },          (object) information for coinbase transaction\\n\"\n             \"  \\\"target\\\" : \\\"xxxx\\\",                (string) The hash target\\n\"\n             \"  \\\"mintime\\\" : xxx,                  (numeric) The minimum timestamp appropriate for next block time in seconds since epoch (Jan 1 1970 GMT)\\n\"\n             \"  \\\"mutable\\\" : [                     (array of string) list of ways the block template may be changed \\n\"\n@@ -870,7 +870,7 @@ static UniValue estimatesmartfee(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"feerate\\\" : x.x,     (numeric, optional) estimate fee rate in \" + CURRENCY_UNIT + \"/kB\\n\"\n-            \"  \\\"errors\\\": [ str... ] (json array of strings, optional) Errors encountered during processing\\n\"\n+            \"  \\\"errors\\\": [ str... ] (array of strings, optional) Errors encountered during processing\\n\"\n             \"  \\\"blocks\\\" : n         (numeric) block number where estimate was found\\n\"\n             \"}\\n\"\n             \"\\n\"\n@@ -932,23 +932,23 @@ static UniValue estimaterawfee(const JSONRPCRequest& request)\n             \"               lower buckets.  Default: 0.95\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n-            \"  \\\"short\\\" : {            (json object, optional) estimate for short time horizon\\n\"\n+            \"  \\\"short\\\" : {            (object, optional) estimate for short time horizon\\n\"\n             \"      \\\"feerate\\\" : x.x,        (numeric, optional) estimate fee rate in \" + CURRENCY_UNIT + \"/kB\\n\"\n             \"      \\\"decay\\\" : x.x,          (numeric) exponential decay (per block) for historical moving average of confirmation data\\n\"\n             \"      \\\"scale\\\" : x,            (numeric) The resolution of confirmation targets at this time horizon\\n\"\n-            \"      \\\"pass\\\" : {              (json object, optional) information about the lowest range of feerates to succeed in meeting the threshold\\n\"\n+            \"      \\\"pass\\\" : {              (object, optional) information about the lowest range of feerates to succeed in meeting the threshold\\n\"\n             \"          \\\"startrange\\\" : x.x,     (numeric) start of feerate range\\n\"\n             \"          \\\"endrange\\\" : x.x,       (numeric) end of feerate range\\n\"\n             \"          \\\"withintarget\\\" : x.x,   (numeric) number of txs over history horizon in the feerate range that were confirmed within target\\n\"\n             \"          \\\"totalconfirmed\\\" : x.x, (numeric) number of txs over history horizon in the feerate range that were confirmed at any point\\n\"\n             \"          \\\"inmempool\\\" : x.x,      (numeric) current number of txs in mempool in the feerate range unconfirmed for at least target blocks\\n\"\n             \"          \\\"leftmempool\\\" : x.x,    (numeric) number of txs over history horizon in the feerate range that left mempool unconfirmed after target\\n\"\n             \"      },\\n\"\n-            \"      \\\"fail\\\" : { ... },       (json object, optional) information about the highest range of feerates to fail to meet the threshold\\n\"\n-            \"      \\\"errors\\\":  [ str... ]   (json array of strings, optional) Errors encountered during processing\\n\"\n+            \"      \\\"fail\\\" : { ... },       (object, optional) information about the highest range of feerates to fail to meet the threshold\\n\"\n+            \"      \\\"errors\\\":  [ str... ]   (array of strings, optional) Errors encountered during processing\\n\"\n             \"  },\\n\"\n-            \"  \\\"medium\\\" : { ... },    (json object, optional) estimate for medium time horizon\\n\"\n-            \"  \\\"long\\\" : { ... }       (json object) estimate for long time horizon\\n\"\n+            \"  \\\"medium\\\" : { ... },    (object, optional) estimate for medium time horizon\\n\"\n+            \"  \\\"long\\\" : { ... }       (object) estimate for long time horizon\\n\"\n             \"}\\n\"\n             \"\\n\"\n             \"Results are returned for any horizon which tracks blocks up to the confirmation target.\\n\""
      },
      {
        "sha": "1d87b9f9b056b65f112c15e16c6a4c568c414112",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/491f0dda96ed50ddeec04d4516e39f03ae6832fb/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/491f0dda96ed50ddeec04d4516e39f03ae6832fb/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=491f0dda96ed50ddeec04d4516e39f03ae6832fb",
        "patch": "@@ -330,7 +330,7 @@ static UniValue getmemoryinfo(const JSONRPCRequest& request)\n             \"  - \\\"mallocinfo\\\" returns an XML string describing low-level heap state (only available if compiled with glibc 2.10+).\\n\"\n             \"\\nResult (mode \\\"stats\\\"):\\n\"\n             \"{\\n\"\n-            \"  \\\"locked\\\": {               (json object) Information about locked memory manager\\n\"\n+            \"  \\\"locked\\\": {               (object) Information about locked memory manager\\n\"\n             \"    \\\"used\\\": xxxxx,          (numeric) Number of bytes used\\n\"\n             \"    \\\"free\\\": xxxxx,          (numeric) Number of bytes available in current arenas\\n\"\n             \"    \\\"total\\\": xxxxxxx,       (numeric) Total number of bytes managed\\n\""
      },
      {
        "sha": "8e9540ca1363202f2a9cebfe7fb1b9bb03a7837d",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/491f0dda96ed50ddeec04d4516e39f03ae6832fb/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/491f0dda96ed50ddeec04d4516e39f03ae6832fb/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=491f0dda96ed50ddeec04d4516e39f03ae6832fb",
        "patch": "@@ -449,10 +449,10 @@ static UniValue getnetworkinfo(const JSONRPCRequest& request)\n             \"  \\\"subversion\\\": \\\"/Satoshi:x.x.x/\\\",     (string) the server subversion string\\n\"\n             \"  \\\"protocolversion\\\": xxxxx,              (numeric) the protocol version\\n\"\n             \"  \\\"localservices\\\": \\\"xxxxxxxxxxxxxxxx\\\", (string) the services we offer to the network\\n\"\n-            \"  \\\"localrelay\\\": true|false,              (bool) true if transaction relay is requested from peers\\n\"\n+            \"  \\\"localrelay\\\": true|false,              (boolean) true if transaction relay is requested from peers\\n\"\n             \"  \\\"timeoffset\\\": xxxxx,                   (numeric) the time offset\\n\"\n             \"  \\\"connections\\\": xxxxx,                  (numeric) the number of connections\\n\"\n-            \"  \\\"networkactive\\\": true|false,           (bool) whether p2p networking is enabled\\n\"\n+            \"  \\\"networkactive\\\": true|false,           (boolean) whether p2p networking is enabled\\n\"\n             \"  \\\"networks\\\": [                          (array) information per network\\n\"\n             \"  {\\n\"\n             \"    \\\"name\\\": \\\"xxx\\\",                     (string) network (ipv4, ipv6 or onion)\\n\""
      },
      {
        "sha": "8ab59bb63ca8a3ae7a7f986b76ca0651beab1077",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 33,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/491f0dda96ed50ddeec04d4516e39f03ae6832fb/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/491f0dda96ed50ddeec04d4516e39f03ae6832fb/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=491f0dda96ed50ddeec04d4516e39f03ae6832fb",
        "patch": "@@ -86,15 +86,15 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n \n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"      (string, required) The transaction id\\n\"\n-            \"2. verbose     (bool, optional, default=false) If false, return a string, otherwise return a json object\\n\"\n+            \"2. verbose     (boolean, optional, default=false) If false, return a string, otherwise return a json object\\n\"\n             \"3. \\\"blockhash\\\" (string, optional) The block in which to look for the transaction\\n\"\n \n             \"\\nResult (if verbose is not set or set to false):\\n\"\n             \"\\\"data\\\"      (string) The serialized, hex-encoded data for 'txid'\\n\"\n \n             \"\\nResult (if verbose is set to true):\\n\"\n             \"{\\n\"\n-            \"  \\\"in_active_chain\\\": b, (bool) Whether specified block is in the active chain or not (only present with explicit \\\"blockhash\\\" argument)\\n\"\n+            \"  \\\"in_active_chain\\\": b, (boolean) Whether specified block is in the active chain or not (only present with explicit \\\"blockhash\\\" argument)\\n\"\n             \"  \\\"hex\\\" : \\\"data\\\",       (string) The serialized, hex-encoded data for 'txid'\\n\"\n             \"  \\\"txid\\\" : \\\"id\\\",        (string) The transaction id (same as provided)\\n\"\n             \"  \\\"hash\\\" : \\\"id\\\",        (string) The transaction hash (differs from txid for witness transactions)\\n\"\n@@ -103,11 +103,11 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n             \"  \\\"weight\\\" : n,           (numeric) The transaction's weight (between vsize*4-3 and vsize*4)\\n\"\n             \"  \\\"version\\\" : n,          (numeric) The version\\n\"\n             \"  \\\"locktime\\\" : ttt,       (numeric) The lock time\\n\"\n-            \"  \\\"vin\\\" : [               (array of json objects)\\n\"\n+            \"  \\\"vin\\\" : [               (array of objects)\\n\"\n             \"     {\\n\"\n             \"       \\\"txid\\\": \\\"id\\\",    (string) The transaction id\\n\"\n             \"       \\\"vout\\\": n,         (numeric) \\n\"\n-            \"       \\\"scriptSig\\\": {     (json object) The script\\n\"\n+            \"       \\\"scriptSig\\\": {     (object) The script\\n\"\n             \"         \\\"asm\\\": \\\"asm\\\",  (string) asm\\n\"\n             \"         \\\"hex\\\": \\\"hex\\\"   (string) hex\\n\"\n             \"       },\\n\"\n@@ -116,7 +116,7 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n             \"     }\\n\"\n             \"     ,...\\n\"\n             \"  ],\\n\"\n-            \"  \\\"vout\\\" : [              (array of json objects)\\n\"\n+            \"  \\\"vout\\\" : [              (array of objects)\\n\"\n             \"     {\\n\"\n             \"       \\\"value\\\" : x.xxx,            (numeric) The value in \" + CURRENCY_UNIT + \"\\n\"\n             \"       \\\"n\\\" : n,                    (numeric) index\\n\"\n@@ -125,7 +125,7 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n             \"         \\\"hex\\\" : \\\"hex\\\",          (string) the hex\\n\"\n             \"         \\\"reqSigs\\\" : n,            (numeric) The required sigs\\n\"\n             \"         \\\"type\\\" : \\\"pubkeyhash\\\",  (string) The type, eg 'pubkeyhash'\\n\"\n-            \"         \\\"addresses\\\" : [           (json array of string)\\n\"\n+            \"         \\\"addresses\\\" : [           (array of string)\\n\"\n             \"           \\\"address\\\"        (string) bitcoin address\\n\"\n             \"           ,...\\n\"\n             \"         ]\\n\"\n@@ -471,7 +471,7 @@ static UniValue createrawtransaction(const JSONRPCRequest& request)\n             \"it is not stored in the wallet or transmitted to the network.\\n\"\n \n             \"\\nArguments:\\n\"\n-            \"1. \\\"inputs\\\"                (array, required) A json array of json objects\\n\"\n+            \"1. \\\"inputs\\\"                (array, required) A json array of objects\\n\"\n             \"     [\\n\"\n             \"       {\\n\"\n             \"         \\\"txid\\\":\\\"id\\\",      (string, required) The transaction id\\n\"\n@@ -544,11 +544,11 @@ static UniValue decoderawtransaction(const JSONRPCRequest& request)\n             \"  \\\"weight\\\" : n,           (numeric) The transaction's weight (between vsize*4 - 3 and vsize*4)\\n\"\n             \"  \\\"version\\\" : n,          (numeric) The version\\n\"\n             \"  \\\"locktime\\\" : ttt,       (numeric) The lock time\\n\"\n-            \"  \\\"vin\\\" : [               (array of json objects)\\n\"\n+            \"  \\\"vin\\\" : [               (array of objects)\\n\"\n             \"     {\\n\"\n             \"       \\\"txid\\\": \\\"id\\\",    (string) The transaction id\\n\"\n             \"       \\\"vout\\\": n,         (numeric) The output number\\n\"\n-            \"       \\\"scriptSig\\\": {     (json object) The script\\n\"\n+            \"       \\\"scriptSig\\\": {     (object) The script\\n\"\n             \"         \\\"asm\\\": \\\"asm\\\",  (string) asm\\n\"\n             \"         \\\"hex\\\": \\\"hex\\\"   (string) hex\\n\"\n             \"       },\\n\"\n@@ -557,7 +557,7 @@ static UniValue decoderawtransaction(const JSONRPCRequest& request)\n             \"     }\\n\"\n             \"     ,...\\n\"\n             \"  ],\\n\"\n-            \"  \\\"vout\\\" : [             (array of json objects)\\n\"\n+            \"  \\\"vout\\\" : [             (array of objects)\\n\"\n             \"     {\\n\"\n             \"       \\\"value\\\" : x.xxx,            (numeric) The value in \" + CURRENCY_UNIT + \"\\n\"\n             \"       \\\"n\\\" : n,                    (numeric) index\\n\"\n@@ -566,7 +566,7 @@ static UniValue decoderawtransaction(const JSONRPCRequest& request)\n             \"         \\\"hex\\\" : \\\"hex\\\",          (string) the hex\\n\"\n             \"         \\\"reqSigs\\\" : n,            (numeric) The required sigs\\n\"\n             \"         \\\"type\\\" : \\\"pubkeyhash\\\",  (string) The type, eg 'pubkeyhash'\\n\"\n-            \"         \\\"addresses\\\" : [           (json array of string)\\n\"\n+            \"         \\\"addresses\\\" : [           (array of string)\\n\"\n             \"           \\\"12tvKAXCxZjSmdNbao16dKXC8tRWfcF5oc\\\"   (string) bitcoin address\\n\"\n             \"           ,...\\n\"\n             \"         ]\\n\"\n@@ -616,7 +616,7 @@ static UniValue decodescript(const JSONRPCRequest& request)\n             \"  \\\"hex\\\":\\\"hex\\\",   (string) hex-encoded public key\\n\"\n             \"  \\\"type\\\":\\\"type\\\", (string) The output type\\n\"\n             \"  \\\"reqSigs\\\": n,    (numeric) The required signatures\\n\"\n-            \"  \\\"addresses\\\": [   (json array of string)\\n\"\n+            \"  \\\"addresses\\\": [   (array of string)\\n\"\n             \"     \\\"address\\\"     (string) bitcoin address\\n\"\n             \"     ,...\\n\"\n             \"  ],\\n\"\n@@ -963,12 +963,12 @@ static UniValue signrawtransactionwithkey(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. \\\"hexstring\\\"                      (string, required) The transaction hex string\\n\"\n             \"2. \\\"privkeys\\\"                       (string, required) A json array of base58-encoded private keys for signing\\n\"\n-            \"    [                               (json array of strings)\\n\"\n+            \"    [                               (array of strings)\\n\"\n             \"      \\\"privatekey\\\"                  (string) private key in base58-encoding\\n\"\n             \"      ,...\\n\"\n             \"    ]\\n\"\n             \"3. \\\"prevtxs\\\"                        (string, optional) An json array of previous dependent transaction outputs\\n\"\n-            \"     [                              (json array of json objects, or 'null' if none provided)\\n\"\n+            \"     [                              (array of objects, or 'null' if none provided)\\n\"\n             \"       {\\n\"\n             \"         \\\"txid\\\":\\\"id\\\",               (string, required) The transaction id\\n\"\n             \"         \\\"vout\\\":n,                  (numeric, required) The output number\\n\"\n@@ -990,7 +990,7 @@ static UniValue signrawtransactionwithkey(const JSONRPCRequest& request)\n             \"{\\n\"\n             \"  \\\"hex\\\" : \\\"value\\\",                  (string) The hex-encoded raw transaction with signature(s)\\n\"\n             \"  \\\"complete\\\" : true|false,          (boolean) If the transaction has a complete set of signatures\\n\"\n-            \"  \\\"errors\\\" : [                      (json array of objects) Script verification errors (if there are any)\\n\"\n+            \"  \\\"errors\\\" : [                      (array of objects) Script verification errors (if there are any)\\n\"\n             \"    {\\n\"\n             \"      \\\"txid\\\" : \\\"hash\\\",              (string) The hash of the referenced, previous transaction\\n\"\n             \"      \\\"vout\\\" : n,                   (numeric) The index of the output to spent and used as input\\n\"\n@@ -1249,19 +1249,19 @@ UniValue decodepsbt(const JSONRPCRequest& request)\n \n             \"\\nResult:\\n\"\n             \"{\\n\"\n-            \"  \\\"tx\\\" : {                   (json object) The decoded network-serialized unsigned transaction.\\n\"\n+            \"  \\\"tx\\\" : {                   (object) The decoded network-serialized unsigned transaction.\\n\"\n             \"    ...                                      The layout is the same as the output of decoderawtransaction.\\n\"\n             \"  },\\n\"\n-            \"  \\\"unknown\\\" : {                (json object) The unknown global fields\\n\"\n+            \"  \\\"unknown\\\" : {                (object) The unknown global fields\\n\"\n             \"    \\\"key\\\" : \\\"value\\\"            (key-value pair) An unknown key-value pair\\n\"\n             \"     ...\\n\"\n             \"  },\\n\"\n-            \"  \\\"inputs\\\" : [                 (array of json objects)\\n\"\n+            \"  \\\"inputs\\\" : [                 (array of objects)\\n\"\n             \"    {\\n\"\n-            \"      \\\"non_witness_utxo\\\" : {   (json object, optional) Decoded network transaction for non-witness UTXOs\\n\"\n+            \"      \\\"non_witness_utxo\\\" : {   (object, optional) Decoded network transaction for non-witness UTXOs\\n\"\n             \"        ...\\n\"\n             \"      },\\n\"\n-            \"      \\\"witness_utxo\\\" : {            (json object, optional) Transaction output for witness UTXOs\\n\"\n+            \"      \\\"witness_utxo\\\" : {            (object, optional) Transaction output for witness UTXOs\\n\"\n             \"        \\\"amount\\\" : x.xxx,           (numeric) The value in \" + CURRENCY_UNIT + \"\\n\"\n             \"        \\\"scriptPubKey\\\" : {          (json object)\\n\"\n             \"          \\\"asm\\\" : \\\"asm\\\",            (string) The asm\\n\"\n@@ -1270,53 +1270,53 @@ UniValue decodepsbt(const JSONRPCRequest& request)\n             \"          \\\"address\\\" : \\\"address\\\"     (string) Bitcoin address if there is one\\n\"\n             \"        }\\n\"\n             \"      },\\n\"\n-            \"      \\\"partial_signatures\\\" : {             (json object, optional)\\n\"\n+            \"      \\\"partial_signatures\\\" : {             (object, optional)\\n\"\n             \"        \\\"pubkey\\\" : \\\"signature\\\",           (string) The public key and signature that corresponds to it.\\n\"\n             \"        ,...\\n\"\n             \"      }\\n\"\n             \"      \\\"sighash\\\" : \\\"type\\\",                  (string, optional) The sighash type to be used\\n\"\n-            \"      \\\"redeem_script\\\" : {       (json object, optional)\\n\"\n+            \"      \\\"redeem_script\\\" : {       (object, optional)\\n\"\n             \"          \\\"asm\\\" : \\\"asm\\\",            (string) The asm\\n\"\n             \"          \\\"hex\\\" : \\\"hex\\\",            (string) The hex\\n\"\n             \"          \\\"type\\\" : \\\"pubkeyhash\\\",    (string) The type, eg 'pubkeyhash'\\n\"\n             \"        }\\n\"\n-            \"      \\\"witness_script\\\" : {       (json object, optional)\\n\"\n+            \"      \\\"witness_script\\\" : {       (object, optional)\\n\"\n             \"          \\\"asm\\\" : \\\"asm\\\",            (string) The asm\\n\"\n             \"          \\\"hex\\\" : \\\"hex\\\",            (string) The hex\\n\"\n             \"          \\\"type\\\" : \\\"pubkeyhash\\\",    (string) The type, eg 'pubkeyhash'\\n\"\n             \"        }\\n\"\n-            \"      \\\"bip32_derivs\\\" : {          (json object, optional)\\n\"\n-            \"        \\\"pubkey\\\" : {                     (json object, optional) The public key with the derivation path as the value.\\n\"\n+            \"      \\\"bip32_derivs\\\" : {          (object, optional)\\n\"\n+            \"        \\\"pubkey\\\" : {                     (object, optional) The public key with the derivation path as the value.\\n\"\n             \"          \\\"master_fingerprint\\\" : \\\"fingerprint\\\"     (string) The fingerprint of the master key\\n\"\n             \"          \\\"path\\\" : \\\"path\\\",                         (string) The path\\n\"\n             \"        }\\n\"\n             \"        ,...\\n\"\n             \"      }\\n\"\n-            \"      \\\"final_scriptsig\\\" : {       (json object, optional)\\n\"\n+            \"      \\\"final_scriptsig\\\" : {       (object, optional)\\n\"\n             \"          \\\"asm\\\" : \\\"asm\\\",            (string) The asm\\n\"\n             \"          \\\"hex\\\" : \\\"hex\\\",            (string) The hex\\n\"\n             \"        }\\n\"\n             \"       \\\"final_scriptwitness\\\": [\\\"hex\\\", ...] (array of string) hex-encoded witness data (if any)\\n\"\n-            \"      \\\"unknown\\\" : {                (json object) The unknown global fields\\n\"\n+            \"      \\\"unknown\\\" : {                (object) The unknown global fields\\n\"\n             \"        \\\"key\\\" : \\\"value\\\"            (key-value pair) An unknown key-value pair\\n\"\n             \"         ...\\n\"\n             \"      },\\n\"\n             \"    }\\n\"\n             \"    ,...\\n\"\n             \"  ]\\n\"\n-            \"  \\\"outputs\\\" : [                 (array of json objects)\\n\"\n+            \"  \\\"outputs\\\" : [                 (array of objects)\\n\"\n             \"    {\\n\"\n-            \"      \\\"redeem_script\\\" : {       (json object, optional)\\n\"\n+            \"      \\\"redeem_script\\\" : {       (object, optional)\\n\"\n             \"          \\\"asm\\\" : \\\"asm\\\",            (string) The asm\\n\"\n             \"          \\\"hex\\\" : \\\"hex\\\",            (string) The hex\\n\"\n             \"          \\\"type\\\" : \\\"pubkeyhash\\\",    (string) The type, eg 'pubkeyhash'\\n\"\n             \"        }\\n\"\n-            \"      \\\"witness_script\\\" : {       (json object, optional)\\n\"\n+            \"      \\\"witness_script\\\" : {       (object, optional)\\n\"\n             \"          \\\"asm\\\" : \\\"asm\\\",            (string) The asm\\n\"\n             \"          \\\"hex\\\" : \\\"hex\\\",            (string) The hex\\n\"\n             \"          \\\"type\\\" : \\\"pubkeyhash\\\",    (string) The type, eg 'pubkeyhash'\\n\"\n             \"      }\\n\"\n-            \"      \\\"bip32_derivs\\\" : [          (array of json objects, optional)\\n\"\n+            \"      \\\"bip32_derivs\\\" : [          (array of objects, optional)\\n\"\n             \"        {\\n\"\n             \"          \\\"pubkey\\\" : \\\"pubkey\\\",                     (string) The public key this path corresponds to\\n\"\n             \"          \\\"master_fingerprint\\\" : \\\"fingerprint\\\"     (string) The fingerprint of the master key\\n\"\n@@ -1325,7 +1325,7 @@ UniValue decodepsbt(const JSONRPCRequest& request)\n             \"        }\\n\"\n             \"        ,...\\n\"\n             \"      ],\\n\"\n-            \"      \\\"unknown\\\" : {                (json object) The unknown global fields\\n\"\n+            \"      \\\"unknown\\\" : {                (object) The unknown global fields\\n\"\n             \"        \\\"key\\\" : \\\"value\\\"            (key-value pair) An unknown key-value pair\\n\"\n             \"         ...\\n\"\n             \"      },\\n\"\n@@ -1680,7 +1680,7 @@ UniValue createpsbt(const JSONRPCRequest& request)\n                 }}\n                 .ToString() +\n                             \"\\nArguments:\\n\"\n-                            \"1. \\\"inputs\\\"                (array, required) A json array of json objects\\n\"\n+                            \"1. \\\"inputs\\\"                (array, required) A json array of objects\\n\"\n                             \"     [\\n\"\n                             \"       {\\n\"\n                             \"         \\\"txid\\\":\\\"id\\\",      (string, required) The transaction id\\n\""
      },
      {
        "sha": "cd174387031bf63ee5360bbfdc6ad1de3b7f0b4f",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/491f0dda96ed50ddeec04d4516e39f03ae6832fb/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/491f0dda96ed50ddeec04d4516e39f03ae6832fb/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=491f0dda96ed50ddeec04d4516e39f03ae6832fb",
        "patch": "@@ -1155,7 +1155,7 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n                 .ToString() +\n             \"Arguments:\\n\"\n             \"1. requests     (array, required) Data to be imported\\n\"\n-            \"  [     (array of json objects)\\n\"\n+            \"  [     (array of objects)\\n\"\n             \"    {\\n\"\n             \"      \\\"scriptPubKey\\\": \\\"<script>\\\" | { \\\"address\\\":\\\"<address>\\\" }, (string / json, required) Type of scriptPubKey (string for script, json for address)\\n\"\n             \"      \\\"timestamp\\\": timestamp | \\\"now\\\"                        , (integer / string, required) Creation time of the key in seconds since epoch (Jan 1 1970 GMT),\\n\""
      },
      {
        "sha": "869e685abc4aebbe4fdda93843f506c0d0ab2d76",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 27,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/491f0dda96ed50ddeec04d4516e39f03ae6832fb/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/491f0dda96ed50ddeec04d4516e39f03ae6832fb/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=491f0dda96ed50ddeec04d4516e39f03ae6832fb",
        "patch": "@@ -749,7 +749,7 @@ static UniValue getbalance(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. (dummy)           (string, optional) Remains for backward compatibility. Must be excluded or set to \\\"*\\\".\\n\"\n             \"2. minconf           (numeric, optional, default=0) Only include transactions confirmed at least this many times.\\n\"\n-            \"3. include_watchonly (bool, optional, default=false) Also include balance in watch-only addresses (see 'importaddress')\\n\"\n+            \"3. include_watchonly (boolean, optional, default=false) Also include balance in watch-only addresses (see 'importaddress')\\n\"\n             \"\\nResult:\\n\"\n             \"amount              (numeric) The total amount in \" + CURRENCY_UNIT + \" received for this wallet.\\n\"\n             \"\\nExamples:\\n\"\n@@ -1246,13 +1246,13 @@ static UniValue listreceivedbyaddress(const JSONRPCRequest& request)\n                 .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. minconf           (numeric, optional, default=1) The minimum number of confirmations before payments are included.\\n\"\n-            \"2. include_empty     (bool, optional, default=false) Whether to include addresses that haven't received any payments.\\n\"\n-            \"3. include_watchonly (bool, optional, default=false) Whether to include watch-only addresses (see 'importaddress').\\n\"\n+            \"2. include_empty     (boolean, optional, default=false) Whether to include addresses that haven't received any payments.\\n\"\n+            \"3. include_watchonly (boolean, optional, default=false) Whether to include watch-only addresses (see 'importaddress').\\n\"\n             \"4. address_filter    (string, optional) If present, only return information on this address.\\n\"\n             \"\\nResult:\\n\"\n             \"[\\n\"\n             \"  {\\n\"\n-            \"    \\\"involvesWatchonly\\\" : true,        (bool) Only returned if imported addresses were involved in transaction\\n\"\n+            \"    \\\"involvesWatchonly\\\" : true,        (boolean) Only returned if imported addresses were involved in transaction\\n\"\n             \"    \\\"address\\\" : \\\"receivingaddress\\\",  (string) The receiving address\\n\"\n             \"    \\\"amount\\\" : x.xxx,                  (numeric) The total amount in \" + CURRENCY_UNIT + \" received by the address\\n\"\n             \"    \\\"confirmations\\\" : n,               (numeric) The number of confirmations of the most recent transaction included\\n\"\n@@ -1303,13 +1303,13 @@ static UniValue listreceivedbylabel(const JSONRPCRequest& request)\n                 .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. minconf           (numeric, optional, default=1) The minimum number of confirmations before payments are included.\\n\"\n-            \"2. include_empty     (bool, optional, default=false) Whether to include labels that haven't received any payments.\\n\"\n-            \"3. include_watchonly (bool, optional, default=false) Whether to include watch-only addresses (see 'importaddress').\\n\"\n+            \"2. include_empty     (boolean, optional, default=false) Whether to include labels that haven't received any payments.\\n\"\n+            \"3. include_watchonly (boolean, optional, default=false) Whether to include watch-only addresses (see 'importaddress').\\n\"\n \n             \"\\nResult:\\n\"\n             \"[\\n\"\n             \"  {\\n\"\n-            \"    \\\"involvesWatchonly\\\" : true,   (bool) Only returned if imported addresses were involved in transaction\\n\"\n+            \"    \\\"involvesWatchonly\\\" : true,   (boolean) Only returned if imported addresses were involved in transaction\\n\"\n             \"    \\\"amount\\\" : x.xxx,             (numeric) The total amount received by addresses with this label\\n\"\n             \"    \\\"confirmations\\\" : n,          (numeric) The number of confirmations of the most recent transaction included\\n\"\n             \"    \\\"label\\\" : \\\"label\\\"           (string) The label of the receiving address. The default label is \\\"\\\".\\n\"\n@@ -1453,7 +1453,7 @@ UniValue listtransactions(const JSONRPCRequest& request)\n             \"              with the specified label, or \\\"*\\\" to disable filtering and return all transactions.\\n\"\n             \"2. count          (numeric, optional, default=10) The number of transactions to return\\n\"\n             \"3. skip           (numeric, optional, default=0) The number of transactions to skip\\n\"\n-            \"4. include_watchonly (bool, optional, default=false) Include transactions to watch-only addresses (see 'importaddress')\\n\"\n+            \"4. include_watchonly (boolean, optional, default=false) Include transactions to watch-only addresses (see 'importaddress')\\n\"\n             \"\\nResult:\\n\"\n             \"[\\n\"\n             \"  {\\n\"\n@@ -1467,7 +1467,7 @@ UniValue listtransactions(const JSONRPCRequest& request)\n             \"                                         'send' category of transactions.\\n\"\n             \"    \\\"confirmations\\\": n,       (numeric) The number of confirmations for the transaction. Negative confirmations indicate the\\n\"\n             \"                                         transaction conflicts with the block chain\\n\"\n-            \"    \\\"trusted\\\": xxx,           (bool) Whether we consider the outputs of this unconfirmed transaction safe to spend.\\n\"\n+            \"    \\\"trusted\\\": xxx,           (boolean) Whether we consider the outputs of this unconfirmed transaction safe to spend.\\n\"\n             \"    \\\"blockhash\\\": \\\"hashvalue\\\", (string) The block hash containing the transaction.\\n\"\n             \"    \\\"blockindex\\\": n,          (numeric) The index of the transaction in the block that includes it.\\n\"\n             \"    \\\"blocktime\\\": xxx,         (numeric) The block time in seconds since epoch (1 Jan 1970 GMT).\\n\"\n@@ -1477,7 +1477,7 @@ UniValue listtransactions(const JSONRPCRequest& request)\n             \"    \\\"comment\\\": \\\"...\\\",       (string) If a comment is associated with the transaction.\\n\"\n             \"    \\\"bip125-replaceable\\\": \\\"yes|no|unknown\\\",  (string) Whether this transaction could be replaced due to BIP125 (replace-by-fee);\\n\"\n             \"                                                     may be unknown for unconfirmed transactions not in the mempool\\n\"\n-            \"    \\\"abandoned\\\": xxx          (bool) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the \\n\"\n+            \"    \\\"abandoned\\\": xxx          (boolean) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the \\n\"\n             \"                                         'send' category of transactions.\\n\"\n             \"  }\\n\"\n             \"]\\n\"\n@@ -1586,8 +1586,8 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. \\\"blockhash\\\"            (string, optional) The block hash to list transactions since\\n\"\n             \"2. target_confirmations:    (numeric, optional, default=1) Return the nth block hash from the main chain. e.g. 1 would mean the best block hash. Note: this is not used as a filter, but only affects [lastblock] in the return value\\n\"\n-            \"3. include_watchonly:       (bool, optional, default=false) Include transactions to watch-only addresses (see 'importaddress')\\n\"\n-            \"4. include_removed:         (bool, optional, default=true) Show transactions that were removed due to a reorg in the \\\"removed\\\" array\\n\"\n+            \"3. include_watchonly:       (boolean, optional, default=false) Include transactions to watch-only addresses (see 'importaddress')\\n\"\n+            \"4. include_removed:         (boolean, optional, default=true) Show transactions that were removed due to a reorg in the \\\"removed\\\" array\\n\"\n             \"                                                           (not guaranteed to work on pruned nodes)\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n@@ -1608,7 +1608,7 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n             \"    \\\"timereceived\\\": xxx,      (numeric) The time received in seconds since epoch (Jan 1 1970 GMT). Available for 'send' and 'receive' category of transactions.\\n\"\n             \"    \\\"bip125-replaceable\\\": \\\"yes|no|unknown\\\",  (string) Whether this transaction could be replaced due to BIP125 (replace-by-fee);\\n\"\n             \"                                                   may be unknown for unconfirmed transactions not in the mempool\\n\"\n-            \"    \\\"abandoned\\\": xxx,         (bool) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the 'send' category of transactions.\\n\"\n+            \"    \\\"abandoned\\\": xxx,         (boolean) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the 'send' category of transactions.\\n\"\n             \"    \\\"comment\\\": \\\"...\\\",       (string) If a comment is associated with the transaction.\\n\"\n             \"    \\\"label\\\" : \\\"label\\\"       (string) A comment for the address/transaction, if any\\n\"\n             \"    \\\"to\\\": \\\"...\\\",            (string) If a comment to is associated with the transaction.\\n\"\n@@ -1728,7 +1728,7 @@ static UniValue gettransaction(const JSONRPCRequest& request)\n                 .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"                  (string, required) The transaction id\\n\"\n-            \"2. \\\"include_watchonly\\\"     (bool, optional, default=false) Whether to include watch-only addresses in balance calculation and details[]\\n\"\n+            \"2. \\\"include_watchonly\\\"     (boolean, optional, default=false) Whether to include watch-only addresses in balance calculation and details[]\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"amount\\\" : x.xxx,        (numeric) The transaction amount in \" + CURRENCY_UNIT + \"\\n\"\n@@ -1752,7 +1752,7 @@ static UniValue gettransaction(const JSONRPCRequest& request)\n             \"      \\\"vout\\\" : n,                       (numeric) the vout value\\n\"\n             \"      \\\"fee\\\": x.xxx,                     (numeric) The amount of the fee in \" + CURRENCY_UNIT + \". This is negative and only available for the \\n\"\n             \"                                           'send' category of transactions.\\n\"\n-            \"      \\\"abandoned\\\": xxx                  (bool) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the \\n\"\n+            \"      \\\"abandoned\\\": xxx                  (boolean) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the \\n\"\n             \"                                           'send' category of transactions.\\n\"\n             \"    }\\n\"\n             \"    ,...\\n\"\n@@ -2234,7 +2234,7 @@ static UniValue lockunspent(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. unlock            (boolean, required) Whether to unlock (true) or lock (false) the specified transactions\\n\"\n             \"2. \\\"transactions\\\"  (string, optional) A json array of objects. Each object the txid (string) vout (numeric)\\n\"\n-            \"     [           (json array of json objects)\\n\"\n+            \"     [           (array of objects)\\n\"\n             \"       {\\n\"\n             \"         \\\"txid\\\":\\\"id\\\",    (string) The transaction id\\n\"\n             \"         \\\"vout\\\": n         (numeric) The output number\\n\"\n@@ -2516,7 +2516,7 @@ static UniValue listwalletdir(const JSONRPCRequest& request)\n                 \"Returns a list of wallets in the wallet directory.\\n\", {}}\n                 .ToString() +\n             \"{\\n\"\n-            \"  \\\"wallets\\\" : [                (json array of objects)\\n\"\n+            \"  \\\"wallets\\\" : [                (array of objects)\\n\"\n             \"    {\\n\"\n             \"      \\\"name\\\" : \\\"name\\\"          (string) The wallet name\\n\"\n             \"    }\\n\"\n@@ -2551,7 +2551,7 @@ static UniValue listwallets(const JSONRPCRequest& request)\n                 {}}\n                 .ToString() +\n             \"\\nResult:\\n\"\n-            \"[                         (json array of strings)\\n\"\n+            \"[                         (array of strings)\\n\"\n             \"  \\\"walletname\\\"            (string) the wallet name\\n\"\n             \"   ...\\n\"\n             \"]\\n\"\n@@ -2824,7 +2824,7 @@ static UniValue listunspent(const JSONRPCRequest& request)\n             \"      \\\"address\\\"     (string) bitcoin address\\n\"\n             \"      ,...\\n\"\n             \"    ]\\n\"\n-            \"4. include_unsafe (bool, optional, default=true) Include outputs that are not safe to spend\\n\"\n+            \"4. include_unsafe (boolean, optional, default=true) Include outputs that are not safe to spend\\n\"\n             \"                  See description of \\\"safe\\\" attribute below.\\n\"\n             \"5. query_options    (json, optional) JSON with query options\\n\"\n             \"    {\\n\"\n@@ -2844,10 +2844,10 @@ static UniValue listunspent(const JSONRPCRequest& request)\n             \"    \\\"amount\\\" : x.xxx,         (numeric) the transaction output amount in \" + CURRENCY_UNIT + \"\\n\"\n             \"    \\\"confirmations\\\" : n,      (numeric) The number of confirmations\\n\"\n             \"    \\\"redeemScript\\\" : n        (string) The redeemScript if scriptPubKey is P2SH\\n\"\n-            \"    \\\"spendable\\\" : xxx,        (bool) Whether we have the private keys to spend this output\\n\"\n-            \"    \\\"solvable\\\" : xxx,         (bool) Whether we know how to spend this output, ignoring the lack of keys\\n\"\n+            \"    \\\"spendable\\\" : xxx,        (boolean) Whether we have the private keys to spend this output\\n\"\n+            \"    \\\"solvable\\\" : xxx,         (boolean) Whether we know how to spend this output, ignoring the lack of keys\\n\"\n             \"    \\\"desc\\\" : xxx,             (string, only when solvable) A descriptor for spending this output\\n\"\n-            \"    \\\"safe\\\" : xxx              (bool) Whether this output is considered safe to spend. Unconfirmed transactions\\n\"\n+            \"    \\\"safe\\\" : xxx              (boolean) Whether this output is considered safe to spend. Unconfirmed transactions\\n\"\n             \"                              from outside keys and unconfirmed replacement transactions are considered unsafe\\n\"\n             \"                              and are not eligible for spending by fundrawtransaction and sendtoaddress.\\n\"\n             \"  }\\n\"\n@@ -3242,7 +3242,7 @@ UniValue signrawtransactionwithwallet(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. \\\"hexstring\\\"                      (string, required) The transaction hex string\\n\"\n             \"2. \\\"prevtxs\\\"                        (string, optional) An json array of previous dependent transaction outputs\\n\"\n-            \"     [                              (json array of json objects, or 'null' if none provided)\\n\"\n+            \"     [                              (array of objects, or 'null' if none provided)\\n\"\n             \"       {\\n\"\n             \"         \\\"txid\\\":\\\"id\\\",               (string, required) The transaction id\\n\"\n             \"         \\\"vout\\\":n,                  (numeric, required) The output number\\n\"\n@@ -3264,7 +3264,7 @@ UniValue signrawtransactionwithwallet(const JSONRPCRequest& request)\n             \"{\\n\"\n             \"  \\\"hex\\\" : \\\"value\\\",                  (string) The hex-encoded raw transaction with signature(s)\\n\"\n             \"  \\\"complete\\\" : true|false,          (boolean) If the transaction has a complete set of signatures\\n\"\n-            \"  \\\"errors\\\" : [                      (json array of objects) Script verification errors (if there are any)\\n\"\n+            \"  \\\"errors\\\" : [                      (array of objects) Script verification errors (if there are any)\\n\"\n             \"    {\\n\"\n             \"      \\\"txid\\\" : \\\"hash\\\",              (string) The hash of the referenced, previous transaction\\n\"\n             \"      \\\"vout\\\" : n,                   (numeric) The index of the output to spent and used as input\\n\"\n@@ -3357,7 +3357,7 @@ static UniValue bumpfee(const JSONRPCRequest& request)\n             \"  \\\"txid\\\":    \\\"value\\\",   (string)  The id of the new transaction\\n\"\n             \"  \\\"origfee\\\":  n,         (numeric) Fee of the replaced transaction\\n\"\n             \"  \\\"fee\\\":      n,         (numeric) Fee of the new transaction\\n\"\n-            \"  \\\"errors\\\":  [ str... ] (json array of strings) Errors encountered during processing (may be empty)\\n\"\n+            \"  \\\"errors\\\":  [ str... ] (array of strings) Errors encountered during processing (may be empty)\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             \"\\nBump the fee, get the new transaction\\'s txid\\n\" +\n@@ -3928,7 +3928,7 @@ static UniValue listlabels(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. \\\"purpose\\\"    (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"\n             \"\\nResult:\\n\"\n-            \"[               (json array of string)\\n\"\n+            \"[               (array of string)\\n\"\n             \"  \\\"label\\\",      (string) Label name\\n\"\n             \"  ...\\n\"\n             \"]\\n\"\n@@ -4245,7 +4245,7 @@ UniValue walletcreatefundedpsbt(const JSONRPCRequest& request)\n                 }}\n                 .ToString() +\n                             \"\\nArguments:\\n\"\n-                            \"1. \\\"inputs\\\"                (array, required) A json array of json objects\\n\"\n+                            \"1. \\\"inputs\\\"                (array, required) A json array of objects\\n\"\n                             \"     [\\n\"\n                             \"       {\\n\"\n                             \"         \\\"txid\\\":\\\"id\\\",      (string, required) The transaction id\\n\""
      }
    ]
  },
  {
    "sha": "cd5fb6f75125d4fbb63ce8c4534ce9b536708880",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZDVmYjZmNzUxMjVkNGZiYjYzY2U4YzQ1MzRjZTliNTM2NzA4ODgw",
    "commit": {
      "author": {
        "name": "Jon Layton",
        "email": "me@jonl.io",
        "date": "2018-10-29T15:34:46Z"
      },
      "committer": {
        "name": "Jon Layton",
        "email": "me@jonl.io",
        "date": "2018-11-29T18:08:48Z"
      },
      "message": "scripted-diff: [rpc] Descriptions: Pluralize 'string' when used in 'array'\n\n-BEGIN VERIFY SCRIPT-\n\ngit grep -l \"of string)\" src | xargs sed -i \"s/of string)/of strings)/g\"\n\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "d6bf794785d4bee0cb49befde190e22fec8f7426",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d6bf794785d4bee0cb49befde190e22fec8f7426"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd5fb6f75125d4fbb63ce8c4534ce9b536708880",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd5fb6f75125d4fbb63ce8c4534ce9b536708880",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cd5fb6f75125d4fbb63ce8c4534ce9b536708880",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd5fb6f75125d4fbb63ce8c4534ce9b536708880/comments",
    "author": {
      "login": "ch4ot1c",
      "id": 2287825,
      "node_id": "MDQ6VXNlcjIyODc4MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2287825?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ch4ot1c",
      "html_url": "https://github.com/ch4ot1c",
      "followers_url": "https://api.github.com/users/ch4ot1c/followers",
      "following_url": "https://api.github.com/users/ch4ot1c/following{/other_user}",
      "gists_url": "https://api.github.com/users/ch4ot1c/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ch4ot1c/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ch4ot1c/subscriptions",
      "organizations_url": "https://api.github.com/users/ch4ot1c/orgs",
      "repos_url": "https://api.github.com/users/ch4ot1c/repos",
      "events_url": "https://api.github.com/users/ch4ot1c/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ch4ot1c/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ch4ot1c",
      "id": 2287825,
      "node_id": "MDQ6VXNlcjIyODc4MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2287825?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ch4ot1c",
      "html_url": "https://github.com/ch4ot1c",
      "followers_url": "https://api.github.com/users/ch4ot1c/followers",
      "following_url": "https://api.github.com/users/ch4ot1c/following{/other_user}",
      "gists_url": "https://api.github.com/users/ch4ot1c/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ch4ot1c/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ch4ot1c/subscriptions",
      "organizations_url": "https://api.github.com/users/ch4ot1c/orgs",
      "repos_url": "https://api.github.com/users/ch4ot1c/repos",
      "events_url": "https://api.github.com/users/ch4ot1c/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ch4ot1c/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "491f0dda96ed50ddeec04d4516e39f03ae6832fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/491f0dda96ed50ddeec04d4516e39f03ae6832fb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/491f0dda96ed50ddeec04d4516e39f03ae6832fb"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 11,
      "deletions": 11
    },
    "files": [
      {
        "sha": "67662a444d69d2572a58008e38cc6005df641ed5",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd5fb6f75125d4fbb63ce8c4534ce9b536708880/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd5fb6f75125d4fbb63ce8c4534ce9b536708880/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=cd5fb6f75125d4fbb63ce8c4534ce9b536708880",
        "patch": "@@ -505,7 +505,7 @@ static UniValue getrawmempool(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. verbose (boolean, optional, default=false) True for a json object, false for array of transaction ids\\n\"\n             \"\\nResult: (for verbose = false):\\n\"\n-            \"[                     (array of string)\\n\"\n+            \"[                     (array of strings)\\n\"\n             \"  \\\"transactionid\\\"     (string) The transaction id\\n\"\n             \"  ,...\\n\"\n             \"]\\n\"\n@@ -843,7 +843,7 @@ static UniValue getblock(const JSONRPCRequest& request)\n             \"  \\\"version\\\" : n,         (numeric) The block version\\n\"\n             \"  \\\"versionHex\\\" : \\\"00000000\\\", (string) The block version formatted in hexadecimal\\n\"\n             \"  \\\"merkleroot\\\" : \\\"xxxx\\\", (string) The merkle root\\n\"\n-            \"  \\\"tx\\\" : [               (array of string) The transaction ids\\n\"\n+            \"  \\\"tx\\\" : [               (array of strings) The transaction ids\\n\"\n             \"     \\\"transactionid\\\"     (string) The transaction id\\n\"\n             \"     ,...\\n\"\n             \"  ],\\n\"\n@@ -1095,7 +1095,7 @@ UniValue gettxout(const JSONRPCRequest& request)\n             \"     \\\"hex\\\" : \\\"hex\\\",        (string) \\n\"\n             \"     \\\"reqSigs\\\" : n,          (numeric) Number of required signatures\\n\"\n             \"     \\\"type\\\" : \\\"pubkeyhash\\\", (string) The type, eg pubkeyhash\\n\"\n-            \"     \\\"addresses\\\" : [          (array of string) array of bitcoin addresses\\n\"\n+            \"     \\\"addresses\\\" : [          (array of strings) array of bitcoin addresses\\n\"\n             \"        \\\"address\\\"     (string) bitcoin address\\n\"\n             \"        ,...\\n\"\n             \"     ]\\n\""
      },
      {
        "sha": "665644d5e6ca77602937ae5ff5bc1cd8802099b8",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd5fb6f75125d4fbb63ce8c4534ce9b536708880/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd5fb6f75125d4fbb63ce8c4534ce9b536708880/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=cd5fb6f75125d4fbb63ce8c4534ce9b536708880",
        "patch": "@@ -386,7 +386,7 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n             \"  \\\"coinbasetxn\\\" : { ... },          (object) information for coinbase transaction\\n\"\n             \"  \\\"target\\\" : \\\"xxxx\\\",                (string) The hash target\\n\"\n             \"  \\\"mintime\\\" : xxx,                  (numeric) The minimum timestamp appropriate for next block time in seconds since epoch (Jan 1 1970 GMT)\\n\"\n-            \"  \\\"mutable\\\" : [                     (array of string) list of ways the block template may be changed \\n\"\n+            \"  \\\"mutable\\\" : [                     (array of strings) list of ways the block template may be changed \\n\"\n             \"     \\\"value\\\"                          (string) A way the block template may be changed, e.g. 'time', 'transactions', 'prevblock'\\n\"\n             \"     ,...\\n\"\n             \"  ],\\n\""
      },
      {
        "sha": "f5b5dffa2dd560eb534d2b25d627ca262da0ba6a",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd5fb6f75125d4fbb63ce8c4534ce9b536708880/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd5fb6f75125d4fbb63ce8c4534ce9b536708880/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=cd5fb6f75125d4fbb63ce8c4534ce9b536708880",
        "patch": "@@ -112,7 +112,7 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n             \"         \\\"hex\\\": \\\"hex\\\"   (string) hex\\n\"\n             \"       },\\n\"\n             \"       \\\"sequence\\\": n      (numeric) The script sequence number\\n\"\n-            \"       \\\"txinwitness\\\": [\\\"hex\\\", ...] (array of string) hex-encoded witness data (if any)\\n\"\n+            \"       \\\"txinwitness\\\": [\\\"hex\\\", ...] (array of strings) hex-encoded witness data (if any)\\n\"\n             \"     }\\n\"\n             \"     ,...\\n\"\n             \"  ],\\n\"\n@@ -125,7 +125,7 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n             \"         \\\"hex\\\" : \\\"hex\\\",          (string) the hex\\n\"\n             \"         \\\"reqSigs\\\" : n,            (numeric) The required sigs\\n\"\n             \"         \\\"type\\\" : \\\"pubkeyhash\\\",  (string) The type, eg 'pubkeyhash'\\n\"\n-            \"         \\\"addresses\\\" : [           (array of string)\\n\"\n+            \"         \\\"addresses\\\" : [           (array of strings)\\n\"\n             \"           \\\"address\\\"        (string) bitcoin address\\n\"\n             \"           ,...\\n\"\n             \"         ]\\n\"\n@@ -552,7 +552,7 @@ static UniValue decoderawtransaction(const JSONRPCRequest& request)\n             \"         \\\"asm\\\": \\\"asm\\\",  (string) asm\\n\"\n             \"         \\\"hex\\\": \\\"hex\\\"   (string) hex\\n\"\n             \"       },\\n\"\n-            \"       \\\"txinwitness\\\": [\\\"hex\\\", ...] (array of string) hex-encoded witness data (if any)\\n\"\n+            \"       \\\"txinwitness\\\": [\\\"hex\\\", ...] (array of strings) hex-encoded witness data (if any)\\n\"\n             \"       \\\"sequence\\\": n     (numeric) The script sequence number\\n\"\n             \"     }\\n\"\n             \"     ,...\\n\"\n@@ -566,7 +566,7 @@ static UniValue decoderawtransaction(const JSONRPCRequest& request)\n             \"         \\\"hex\\\" : \\\"hex\\\",          (string) the hex\\n\"\n             \"         \\\"reqSigs\\\" : n,            (numeric) The required sigs\\n\"\n             \"         \\\"type\\\" : \\\"pubkeyhash\\\",  (string) The type, eg 'pubkeyhash'\\n\"\n-            \"         \\\"addresses\\\" : [           (array of string)\\n\"\n+            \"         \\\"addresses\\\" : [           (array of strings)\\n\"\n             \"           \\\"12tvKAXCxZjSmdNbao16dKXC8tRWfcF5oc\\\"   (string) bitcoin address\\n\"\n             \"           ,...\\n\"\n             \"         ]\\n\"\n@@ -616,7 +616,7 @@ static UniValue decodescript(const JSONRPCRequest& request)\n             \"  \\\"hex\\\":\\\"hex\\\",   (string) hex-encoded public key\\n\"\n             \"  \\\"type\\\":\\\"type\\\", (string) The output type\\n\"\n             \"  \\\"reqSigs\\\": n,    (numeric) The required signatures\\n\"\n-            \"  \\\"addresses\\\": [   (array of string)\\n\"\n+            \"  \\\"addresses\\\": [   (array of strings)\\n\"\n             \"     \\\"address\\\"     (string) bitcoin address\\n\"\n             \"     ,...\\n\"\n             \"  ],\\n\"\n@@ -1296,7 +1296,7 @@ UniValue decodepsbt(const JSONRPCRequest& request)\n             \"          \\\"asm\\\" : \\\"asm\\\",            (string) The asm\\n\"\n             \"          \\\"hex\\\" : \\\"hex\\\",            (string) The hex\\n\"\n             \"        }\\n\"\n-            \"       \\\"final_scriptwitness\\\": [\\\"hex\\\", ...] (array of string) hex-encoded witness data (if any)\\n\"\n+            \"       \\\"final_scriptwitness\\\": [\\\"hex\\\", ...] (array of strings) hex-encoded witness data (if any)\\n\"\n             \"      \\\"unknown\\\" : {                (object) The unknown global fields\\n\"\n             \"        \\\"key\\\" : \\\"value\\\"            (key-value pair) An unknown key-value pair\\n\"\n             \"         ...\\n\""
      },
      {
        "sha": "25ed61ad716a2f90b295191cc996f3adbc72ce60",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd5fb6f75125d4fbb63ce8c4534ce9b536708880/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd5fb6f75125d4fbb63ce8c4534ce9b536708880/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=cd5fb6f75125d4fbb63ce8c4534ce9b536708880",
        "patch": "@@ -3928,7 +3928,7 @@ static UniValue listlabels(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. \\\"purpose\\\"    (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"\n             \"\\nResult:\\n\"\n-            \"[               (array of string)\\n\"\n+            \"[               (array of strings)\\n\"\n             \"  \\\"label\\\",      (string) Label name\\n\"\n             \"  ...\\n\"\n             \"]\\n\""
      }
    ]
  }
]