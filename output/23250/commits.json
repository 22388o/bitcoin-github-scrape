[
  {
    "sha": "0054080f3d41d57b2b308679c8c66174ac40038a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMDU0MDgwZjNkNDFkNTdiMmIzMDg2NzljOGM2NjE3NGFjNDAwMzhh",
    "commit": {
      "author": {
        "name": "SatoshiBitcoin",
        "email": "oprisorovidiu@yahoo.com",
        "date": "2020-07-13T12:14:43Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2020-07-13T12:14:43Z"
      },
      "message": "Update README.md",
      "tree": {
        "sha": "f4dbbda16fbc3f88a34b073dbf85ef96afd2cdc3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f4dbbda16fbc3f88a34b073dbf85ef96afd2cdc3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0054080f3d41d57b2b308679c8c66174ac40038a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfDFAzCRBK7hj4Ov3rIwAAdHIIAJW6MhQRJXu3KQLFR2jNXMp4\nspn8ryVSOzVP8bd78H/PqFHvyI9m1z8IbV8P9S6UOPc3no0wPDdn0yDHZ/NUIjC9\nJYwdgaJFO80MXz3IalzIzjuUjN92nLZI84pY9whwiVU8xid052/UM8IjUVCFCwT4\nUU/l6j8npKkEAAgpjpUCgeyWYzwbtkTo+ytJR1XiW9uUdaLEWbgQNDOnKRFWvn6d\nN5K1GVxzuEuxqbOUsAvqfe0v8ioWgqyr1YBTc3B6rxcJtkPLfK1ww4tOhiammaj7\njytBXBMDRkn09JstPEI23jAQaV7BcP5buIKpPPBhrSHw1qUoKfrvwnQFVTRCpcY=\n=ifHd\n-----END PGP SIGNATURE-----\n",
        "payload": "tree f4dbbda16fbc3f88a34b073dbf85ef96afd2cdc3\nparent 2ae58d5bfb76ba01ceb52518281f0eeaaf2882f7\nauthor SatoshiBitcoin <oprisorovidiu@yahoo.com> 1594642483 +0200\ncommitter GitHub <noreply@github.com> 1594642483 +0200\n\nUpdate README.md"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0054080f3d41d57b2b308679c8c66174ac40038a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0054080f3d41d57b2b308679c8c66174ac40038a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0054080f3d41d57b2b308679c8c66174ac40038a/comments",
    "author": null,
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2ae58d5bfb76ba01ceb52518281f0eeaaf2882f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ae58d5bfb76ba01ceb52518281f0eeaaf2882f7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2ae58d5bfb76ba01ceb52518281f0eeaaf2882f7"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8b2ca8d451ede4e54e08f8f1ee298341640ea36e",
        "filename": "README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0054080f3d41d57b2b308679c8c66174ac40038a/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0054080f3d41d57b2b308679c8c66174ac40038a/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=0054080f3d41d57b2b308679c8c66174ac40038a",
        "patch": "@@ -1,11 +1,11 @@\n-Bitcoin Core integration/staging tree\n+Satoshi Bitcoin Core integration/staging tree\n =====================================\n \n [![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n \n https://bitcoincore.org\n \n-What is Bitcoin?\n+What is Satoshi Bitcoin?\n ----------------\n \n Bitcoin is an experimental digital currency that enables instant payments to"
      }
    ]
  },
  {
    "sha": "e16c485f1ab165b7cf49fed8ece3be789db35872",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMTZjNDg1ZjFhYjE2NWI3Y2Y0OWZlZDhlY2UzYmU3ODlkYjM1ODcy",
    "commit": {
      "author": {
        "name": "SatoshiBitcoin",
        "email": "oprisorovidiu@yahoo.com",
        "date": "2020-07-13T12:22:49Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2020-07-13T12:22:49Z"
      },
      "message": "Update README.md",
      "tree": {
        "sha": "2cd045ae1d4efbf224bb352e7edc9774a3654b2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2cd045ae1d4efbf224bb352e7edc9774a3654b2f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e16c485f1ab165b7cf49fed8ece3be789db35872",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfDFIZCRBK7hj4Ov3rIwAAdHIIAKFgyk39XITl4rBQgVN7X6QA\n6gEkeNzkeLd/Dww0Lthq53f+st/O1KxoFXQNqRPG9T3bkXECNwVkFcxXHrPjUJqJ\nR0lfEV/PNAu6vUvFLnT0NNB0wZCUnsuqjy8ECb6qYx+qwqiVRakRGD0zPnqhNpdg\nkrAo0vJibIkdoFrTZjEBQEVCr2NRBjDwZ4WdVGXElEYXpbbjZOJpbj8+Ezb8J4kF\nIHUXJANh46Th1EkVXZ06/nY4jla4igx9xDpj+Dv6lAN8nGtXe5KxZTaN+efP/0zg\n95Y9tGQOBv6nhBGBz5gBs7A459yIJNl0b0+TdTrFtzvemOx1bM8h/wgzkPvi3JU=\n=AjRm\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 2cd045ae1d4efbf224bb352e7edc9774a3654b2f\nparent 0054080f3d41d57b2b308679c8c66174ac40038a\nauthor SatoshiBitcoin <oprisorovidiu@yahoo.com> 1594642969 +0200\ncommitter GitHub <noreply@github.com> 1594642969 +0200\n\nUpdate README.md"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e16c485f1ab165b7cf49fed8ece3be789db35872",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e16c485f1ab165b7cf49fed8ece3be789db35872",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e16c485f1ab165b7cf49fed8ece3be789db35872/comments",
    "author": null,
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0054080f3d41d57b2b308679c8c66174ac40038a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0054080f3d41d57b2b308679c8c66174ac40038a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0054080f3d41d57b2b308679c8c66174ac40038a"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "7daba0f9a26fb15d55a5df259132425022eb35a2",
        "filename": "README.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e16c485f1ab165b7cf49fed8ece3be789db35872/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e16c485f1ab165b7cf49fed8ece3be789db35872/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=e16c485f1ab165b7cf49fed8ece3be789db35872",
        "patch": "@@ -8,28 +8,28 @@ https://bitcoincore.org\n What is Satoshi Bitcoin?\n ----------------\n \n-Bitcoin is an experimental digital currency that enables instant payments to\n-anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n+Satoshi Bitcoin is an experimental digital currency that enables instant payments to\n+anyone, anywhere in the world. Satoshi Bitcoin uses peer-to-peer technology to operate\n with no central authority: managing transactions and issuing money are carried\n-out collectively by the network. Bitcoin Core is the name of open source\n+out collectively by the network. Satoshi Bitcoin Core is the name of open source\n software which enables the use of this currency.\n \n For more information, as well as an immediately useable, binary version of\n-the Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n+the Satoshi Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n [original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n \n License\n -------\n \n-Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n+Satoshi Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n information or see https://opensource.org/licenses/MIT.\n \n Development Process\n -------------------\n \n The `master` branch is regularly built and tested, but is not guaranteed to be\n completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n-regularly to indicate new official, stable release versions of Bitcoin Core.\n+regularly to indicate new official, stable release versions of Satoshi Bitcoin Core.\n \n The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n \n@@ -71,7 +71,7 @@ Translations\n ------------\n \n Changes to translations as well as new translations can be submitted to\n-[Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n+[Satoshi Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n \n Translations are periodically pulled from Transifex and merged into the git repository. See the\n [translation process](doc/translation_process.md) for details on how this works."
      }
    ]
  },
  {
    "sha": "7d1627e584e38b8cbea2868bf2c18756add94c0a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZDE2MjdlNTg0ZTM4YjhjYmVhMjg2OGJmMmMxODc1NmFkZDk0YzBh",
    "commit": {
      "author": {
        "name": "SatoshiBitcoin",
        "email": "oprisorovidiu@yahoo.com",
        "date": "2020-07-13T12:28:19Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2020-07-13T12:28:19Z"
      },
      "message": "Update COPYING",
      "tree": {
        "sha": "4aa8f0527cfa2788ce96ef5b6f03b112dd59e2ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4aa8f0527cfa2788ce96ef5b6f03b112dd59e2ae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7d1627e584e38b8cbea2868bf2c18756add94c0a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfDFNjCRBK7hj4Ov3rIwAAdHIIAE6X7LMtcLJcOUOPECccR4qK\n9skXrMRQ8MZ0u6NwHfCs0ukBtx7401crekqR4ZI0J44Sny7a4cEIN1DqwoY4s2NS\no+OaeQJP6FhiPnXeg9NGXaQby/P8E0ulfPB7P0TOmVFPV/crDEiMgATa1zE5n72y\n9u+H0ZKyi6DfrZp8/iH+/shAjU8ojuiAWLrKci1bIGa+l2mnZUvDpmk55EONt3HP\nXBvALuPMaC6QJh8wpNIqamsCher2mcYfganNwXqtCRElK4YPztNs4XqL51pnhYP2\nVw+v/824EcXE2psRAypdSuW4onqHnp3immGZEOPLDpOjzQBPJNulhr1ZmfSKQRo=\n=EFZr\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 4aa8f0527cfa2788ce96ef5b6f03b112dd59e2ae\nparent e16c485f1ab165b7cf49fed8ece3be789db35872\nauthor SatoshiBitcoin <oprisorovidiu@yahoo.com> 1594643299 +0200\ncommitter GitHub <noreply@github.com> 1594643299 +0200\n\nUpdate COPYING"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d1627e584e38b8cbea2868bf2c18756add94c0a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7d1627e584e38b8cbea2868bf2c18756add94c0a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d1627e584e38b8cbea2868bf2c18756add94c0a/comments",
    "author": null,
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e16c485f1ab165b7cf49fed8ece3be789db35872",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e16c485f1ab165b7cf49fed8ece3be789db35872",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e16c485f1ab165b7cf49fed8ece3be789db35872"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "bf1aafe4b3d3d7bc582951c597cdc51bcd271a8e",
        "filename": "COPYING",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d1627e584e38b8cbea2868bf2c18756add94c0a/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d1627e584e38b8cbea2868bf2c18756add94c0a/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=7d1627e584e38b8cbea2868bf2c18756add94c0a",
        "patch": "@@ -1,7 +1,7 @@\n The MIT License (MIT)\n \n-Copyright (c) 2009-2017 The Bitcoin Core developers\n-Copyright (c) 2009-2017 Bitcoin Developers\n+Copyright (c) 2009-2017 The Satoshi Bitcoin Core developers\n+Copyright (c) 2009-2017 Satoshi Bitcoin Developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      }
    ]
  },
  {
    "sha": "44d860321abdd629da5e6d862578e7bf0703ee4b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NGQ4NjAzMjFhYmRkNjI5ZGE1ZTZkODYyNTc4ZTdiZjA3MDNlZTRi",
    "commit": {
      "author": {
        "name": "SatoshiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-08T15:07:56Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2020-11-08T15:07:56Z"
      },
      "message": "Update README.md",
      "tree": {
        "sha": "8ef853fbf14ab06ed3090e55d85ad1faffd0c145",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8ef853fbf14ab06ed3090e55d85ad1faffd0c145"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/44d860321abdd629da5e6d862578e7bf0703ee4b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfqAnMCRBK7hj4Ov3rIwAAdHIIAJblrFnWeT4UuGCAIRVPxyt7\n7yHKkR55byXAD9fqu8XAFstNPKDYHRwYs3xnfEWC7Bn+bep4zIewzLGeCv9a7g6t\nB4Q5Tcm6kfHwf8r3/i6mAgrQdUj9h/ksAeJLGiVuJdgdKdhH3+OQl7ClUV58R6Nt\nlTx1L/AMD6TLdPND7ZAOjUSIfUxz8qylOwOkzsTtEUZZhoppTCqArg7hYe8jBxgH\nTYzGXsXPu+2UtESRwJVOiEJ1lxVX41QIWIleFYq5hmB++ko6ww8OrAke5I/3msh2\nAAHZYIG4dcON9ZQPMNcblJiW2YU/+mlzSB4ZUsOjiTZcWEYfo5SZ9hZylc6ZnfQ=\n=jnm4\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 8ef853fbf14ab06ed3090e55d85ad1faffd0c145\nparent 7d1627e584e38b8cbea2868bf2c18756add94c0a\nauthor SatoshiBitcoin <office@satoshibitcoin.app> 1604848076 +0100\ncommitter GitHub <noreply@github.com> 1604848076 +0100\n\nUpdate README.md"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44d860321abdd629da5e6d862578e7bf0703ee4b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/44d860321abdd629da5e6d862578e7bf0703ee4b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44d860321abdd629da5e6d862578e7bf0703ee4b/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7d1627e584e38b8cbea2868bf2c18756add94c0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d1627e584e38b8cbea2868bf2c18756add94c0a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7d1627e584e38b8cbea2868bf2c18756add94c0a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6ed748e1472043bd0fd7a809e0e28fb0a0367407",
        "filename": "README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44d860321abdd629da5e6d862578e7bf0703ee4b/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44d860321abdd629da5e6d862578e7bf0703ee4b/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=44d860321abdd629da5e6d862578e7bf0703ee4b",
        "patch": "@@ -1,4 +1,4 @@\n-Satoshi Bitcoin Core integration/staging tree\n+Satoshi Bitcoin 2 0 Core integration/staging tree\n =====================================\n \n [![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)"
      }
    ]
  },
  {
    "sha": "c1e384ec1ea7ac922485c9427b4c59eefb18f011",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMWUzODRlYzFlYTdhYzkyMjQ4NWM5NDI3YjRjNTllZWZiMThmMDEx",
    "commit": {
      "author": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-08T15:42:34Z"
      },
      "committer": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-08T15:42:34Z"
      },
      "message": "Initial commit",
      "tree": {
        "sha": "c9d9888383ce5f1aff384fa03bc163343f8ce6c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c9d9888383ce5f1aff384fa03bc163343f8ce6c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1e384ec1ea7ac922485c9427b4c59eefb18f011",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1e384ec1ea7ac922485c9427b4c59eefb18f011",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c1e384ec1ea7ac922485c9427b4c59eefb18f011",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1e384ec1ea7ac922485c9427b4c59eefb18f011/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "44d860321abdd629da5e6d862578e7bf0703ee4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44d860321abdd629da5e6d862578e7bf0703ee4b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/44d860321abdd629da5e6d862578e7bf0703ee4b"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d6f648d69d80f3ae428ba6641daa434a77e6bee2",
        "filename": "README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1e384ec1ea7ac922485c9427b4c59eefb18f011/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1e384ec1ea7ac922485c9427b4c59eefb18f011/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=c1e384ec1ea7ac922485c9427b4c59eefb18f011",
        "patch": "@@ -1,4 +1,4 @@\n-Satoshi Bitcoin 2 0 Core integration/staging tree\n+Satoshi Bitcoin 2 0 Core++ integration/staging tree\n =====================================\n \n [![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)"
      }
    ]
  },
  {
    "sha": "d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkM2JlYjJmYTU4OGYwZDFlZjYyYzg0MGRmYWZlNDVkZjFiNDNkNWYx",
    "commit": {
      "author": {
        "name": "SatoshiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-08T16:30:44Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2020-11-08T16:30:44Z"
      },
      "message": "Update README.md",
      "tree": {
        "sha": "8ef853fbf14ab06ed3090e55d85ad1faffd0c145",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8ef853fbf14ab06ed3090e55d85ad1faffd0c145"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfqB00CRBK7hj4Ov3rIwAAdHIIAAafhCgbufsJ/bULUZrVvgRu\nFxP4hVCUkO98fZczQvCG7W6aGCDbd2cK1sfAP0Nxe6XlqTNSvZWeRbbRqnlf6to8\n0iHFqnJ9613l4c7d3z3lvfZrgJwYzmJUGOxYzthvQqcN0qioed4I6kCRfO6lqQi2\nAEUSJ0PZ8h0VwbP1LgwmqmGu4NqjEmzgOzDBKqBeZq+YYmp8AKJqaFrexTPUeu/5\n10vMUBR4xQE68hRjbVec93TuBJRRkJSY1JzTLZy6edooDwV32Mbbntbw16EDzQ9J\nwCa+P45Han0JlExIVZI2qfUx66zMckWPCkcOnUVw7UEXqtOfvD7/p6S5njRUtyw=\n=xLIJ\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 8ef853fbf14ab06ed3090e55d85ad1faffd0c145\nparent c1e384ec1ea7ac922485c9427b4c59eefb18f011\nauthor SatoshiBitcoin <office@satoshibitcoin.app> 1604853044 +0100\ncommitter GitHub <noreply@github.com> 1604853044 +0100\n\nUpdate README.md"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c1e384ec1ea7ac922485c9427b4c59eefb18f011",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1e384ec1ea7ac922485c9427b4c59eefb18f011",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c1e384ec1ea7ac922485c9427b4c59eefb18f011"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6ed748e1472043bd0fd7a809e0e28fb0a0367407",
        "filename": "README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1",
        "patch": "@@ -1,4 +1,4 @@\n-Satoshi Bitcoin 2 0 Core++ integration/staging tree\n+Satoshi Bitcoin 2 0 Core integration/staging tree\n =====================================\n \n [![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)"
      }
    ]
  },
  {
    "sha": "535f93324e6550b16d9d6798d6eb7b563445a316",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MzVmOTMzMjRlNjU1MGIxNmQ5ZDY3OThkNmViN2I1NjM0NDVhMzE2",
    "commit": {
      "author": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T11:50:47Z"
      },
      "committer": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T11:50:47Z"
      },
      "message": "Merge branch 'master' of https://github.com/SatoshiBitcoin/SatoshiBitcoin2.0",
      "tree": {
        "sha": "8699486379e3a807fc45eeee2c7810f07a8e126b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8699486379e3a807fc45eeee2c7810f07a8e126b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/535f93324e6550b16d9d6798d6eb7b563445a316",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/535f93324e6550b16d9d6798d6eb7b563445a316",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/535f93324e6550b16d9d6798d6eb7b563445a316",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/535f93324e6550b16d9d6798d6eb7b563445a316/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7e373294a5ae819099c39d9d03d1f5a311d63cfc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e373294a5ae819099c39d9d03d1f5a311d63cfc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7e373294a5ae819099c39d9d03d1f5a311d63cfc"
      },
      {
        "sha": "d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 26,
      "deletions": 6
    },
    "files": [
      {
        "sha": "5ea3b90c531137d5feb363cdf28206cea091b314",
        "filename": "COPYING",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/535f93324e6550b16d9d6798d6eb7b563445a316/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/535f93324e6550b16d9d6798d6eb7b563445a316/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=535f93324e6550b16d9d6798d6eb7b563445a316",
        "patch": "@@ -1,7 +1,12 @@\n The MIT License (MIT)\n \n+<<<<<<< HEAD\n Copyright (c) 2009-2020 The Bitcoin Core developers\n Copyright (c) 2009-2020 Bitcoin Developers\n+=======\n+Copyright (c) 2009-2017 The Satoshi Bitcoin Core developers\n+Copyright (c) 2009-2017 Satoshi Bitcoin Developers\n+>>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "a41ef5cd1a2bbd75a8f0399bbaba0be1151aea30",
        "filename": "README.md",
        "status": "modified",
        "additions": 21,
        "deletions": 6,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/535f93324e6550b16d9d6798d6eb7b563445a316/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/535f93324e6550b16d9d6798d6eb7b563445a316/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=535f93324e6550b16d9d6798d6eb7b563445a316",
        "patch": "@@ -1,33 +1,44 @@\n-Bitcoin Core integration/staging tree\n+Satoshi Bitcoin 2 0 Core integration/staging tree\n =====================================\n \n https://bitcoincore.org\n \n-What is Bitcoin?\n+What is Satoshi Bitcoin?\n ----------------\n \n-Bitcoin is an experimental digital currency that enables instant payments to\n-anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n+Satoshi Bitcoin is an experimental digital currency that enables instant payments to\n+anyone, anywhere in the world. Satoshi Bitcoin uses peer-to-peer technology to operate\n with no central authority: managing transactions and issuing money are carried\n-out collectively by the network. Bitcoin Core is the name of open source\n+out collectively by the network. Satoshi Bitcoin Core is the name of open source\n software which enables the use of this currency.\n \n+<<<<<<< HEAD\n For more information, as well as an immediately usable, binary version of\n the Bitcoin Core software, see https://bitcoincore.org/en/download/, or read the\n+=======\n+For more information, as well as an immediately useable, binary version of\n+the Satoshi Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n+>>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n [original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n \n License\n -------\n \n-Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n+Satoshi Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n information or see https://opensource.org/licenses/MIT.\n \n Development Process\n -------------------\n \n The `master` branch is regularly built (see `doc/build-*.md` for instructions) and tested, but it is not guaranteed to be\n completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n+<<<<<<< HEAD\n regularly from release branches to indicate new official, stable release versions of Bitcoin Core.\n+=======\n+regularly to indicate new official, stable release versions of Satoshi Bitcoin Core.\n+\n+The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n+>>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n \n The https://github.com/bitcoin-core/gui repository is used exclusively for the\n development of the GUI. Its master branch is identical in all monotree\n@@ -69,7 +80,11 @@ Translations\n ------------\n \n Changes to translations as well as new translations can be submitted to\n+<<<<<<< HEAD\n [Bitcoin Core's Transifex page](https://www.transifex.com/bitcoin/bitcoin/).\n+=======\n+[Satoshi Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n+>>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n \n Translations are periodically pulled from Transifex and merged into the git repository. See the\n [translation process](doc/translation_process.md) for details on how this works."
      }
    ]
  },
  {
    "sha": "5409bfe1b564f584c0a816ff05669ec744db4683",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDA5YmZlMWI1NjRmNTg0YzBhODE2ZmYwNTY2OWVjNzQ0ZGI0Njgz",
    "commit": {
      "author": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T13:55:07Z"
      },
      "committer": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T13:55:07Z"
      },
      "message": "note",
      "tree": {
        "sha": "2d174ea881948b8213d42a23263b25927b5a7b0c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d174ea881948b8213d42a23263b25927b5a7b0c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5409bfe1b564f584c0a816ff05669ec744db4683",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5409bfe1b564f584c0a816ff05669ec744db4683",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5409bfe1b564f584c0a816ff05669ec744db4683",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5409bfe1b564f584c0a816ff05669ec744db4683/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "535f93324e6550b16d9d6798d6eb7b563445a316",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/535f93324e6550b16d9d6798d6eb7b563445a316",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/535f93324e6550b16d9d6798d6eb7b563445a316"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 0,
      "deletions": 27
    },
    "files": [
      {
        "sha": "5ea3b90c531137d5feb363cdf28206cea091b314",
        "filename": "COPYING",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/535f93324e6550b16d9d6798d6eb7b563445a316/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/535f93324e6550b16d9d6798d6eb7b563445a316/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=535f93324e6550b16d9d6798d6eb7b563445a316",
        "patch": "@@ -1,27 +0,0 @@\n-The MIT License (MIT)\n-\n-<<<<<<< HEAD\n-Copyright (c) 2009-2020 The Bitcoin Core developers\n-Copyright (c) 2009-2020 Bitcoin Developers\n-=======\n-Copyright (c) 2009-2017 The Satoshi Bitcoin Core developers\n-Copyright (c) 2009-2017 Satoshi Bitcoin Developers\n->>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n-\n-Permission is hereby granted, free of charge, to any person obtaining a copy\n-of this software and associated documentation files (the \"Software\"), to deal\n-in the Software without restriction, including without limitation the rights\n-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n-copies of the Software, and to permit persons to whom the Software is\n-furnished to do so, subject to the following conditions:\n-\n-The above copyright notice and this permission notice shall be included in\n-all copies or substantial portions of the Software.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n-THE SOFTWARE."
      }
    ]
  },
  {
    "sha": "49dbf566de3900207b0e34c697db4a8da5e9ea67",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OWRiZjU2NmRlMzkwMDIwN2IwZTM0YzY5N2RiNGE4ZGE1ZTllYTY3",
    "commit": {
      "author": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T13:56:03Z"
      },
      "committer": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T13:56:03Z"
      },
      "message": "note",
      "tree": {
        "sha": "0bf37539861365d9b96fd4a9d9506ed954ef7eaf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0bf37539861365d9b96fd4a9d9506ed954ef7eaf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49dbf566de3900207b0e34c697db4a8da5e9ea67",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49dbf566de3900207b0e34c697db4a8da5e9ea67",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/49dbf566de3900207b0e34c697db4a8da5e9ea67",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49dbf566de3900207b0e34c697db4a8da5e9ea67/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5409bfe1b564f584c0a816ff05669ec744db4683",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5409bfe1b564f584c0a816ff05669ec744db4683",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5409bfe1b564f584c0a816ff05669ec744db4683"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 0,
      "deletions": 5
    },
    "files": [
      {
        "sha": "520a47d96078dfa80cec83d03146c9349d6369c1",
        "filename": "INSTALL.md",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5409bfe1b564f584c0a816ff05669ec744db4683/INSTALL.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5409bfe1b564f584c0a816ff05669ec744db4683/INSTALL.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL.md?ref=5409bfe1b564f584c0a816ff05669ec744db4683",
        "patch": "@@ -1,5 +0,0 @@\n-Building Bitcoin\n-================\n-\n-See doc/build-*.md for instructions on building the various\n-elements of the Bitcoin Core reference implementation of Bitcoin."
      }
    ]
  },
  {
    "sha": "71852244cd5bef3c2275bdbdf9d5b12cfb075ee5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MTg1MjI0NGNkNWJlZjNjMjI3NWJkYmRmOWQ1YjEyY2ZiMDc1ZWU1",
    "commit": {
      "author": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:08:51Z"
      },
      "committer": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:08:51Z"
      },
      "message": "Your commit message",
      "tree": {
        "sha": "b0d909fce5c65638b8690dd9a505d9e49e1794ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b0d909fce5c65638b8690dd9a505d9e49e1794ae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/71852244cd5bef3c2275bdbdf9d5b12cfb075ee5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/71852244cd5bef3c2275bdbdf9d5b12cfb075ee5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/71852244cd5bef3c2275bdbdf9d5b12cfb075ee5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/71852244cd5bef3c2275bdbdf9d5b12cfb075ee5/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "49dbf566de3900207b0e34c697db4a8da5e9ea67",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49dbf566de3900207b0e34c697db4a8da5e9ea67",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/49dbf566de3900207b0e34c697db4a8da5e9ea67"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 32,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5ea3b90c531137d5feb363cdf28206cea091b314",
        "filename": "COPYING_",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/71852244cd5bef3c2275bdbdf9d5b12cfb075ee5/COPYING_",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/71852244cd5bef3c2275bdbdf9d5b12cfb075ee5/COPYING_",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING_?ref=71852244cd5bef3c2275bdbdf9d5b12cfb075ee5",
        "patch": "@@ -0,0 +1,27 @@\n+The MIT License (MIT)\n+\n+<<<<<<< HEAD\n+Copyright (c) 2009-2020 The Bitcoin Core developers\n+Copyright (c) 2009-2020 Bitcoin Developers\n+=======\n+Copyright (c) 2009-2017 The Satoshi Bitcoin Core developers\n+Copyright (c) 2009-2017 Satoshi Bitcoin Developers\n+>>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n+\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in\n+all copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+THE SOFTWARE."
      },
      {
        "sha": "520a47d96078dfa80cec83d03146c9349d6369c1",
        "filename": "INSTALL.md_",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/71852244cd5bef3c2275bdbdf9d5b12cfb075ee5/INSTALL.md_",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/71852244cd5bef3c2275bdbdf9d5b12cfb075ee5/INSTALL.md_",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL.md_?ref=71852244cd5bef3c2275bdbdf9d5b12cfb075ee5",
        "patch": "@@ -0,0 +1,5 @@\n+Building Bitcoin\n+================\n+\n+See doc/build-*.md for instructions on building the various\n+elements of the Bitcoin Core reference implementation of Bitcoin."
      }
    ]
  },
  {
    "sha": "ea40410c2d52ed36c82eff6188b81396c96b7181",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYTQwNDEwYzJkNTJlZDM2YzgyZWZmNjE4OGI4MTM5NmM5NmI3MTgx",
    "commit": {
      "author": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:11:36Z"
      },
      "committer": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:11:36Z"
      },
      "message": "Your commit message",
      "tree": {
        "sha": "3a47ddf1f6fb9e41a17003371cbd7d309466e201",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a47ddf1f6fb9e41a17003371cbd7d309466e201"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea40410c2d52ed36c82eff6188b81396c96b7181",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea40410c2d52ed36c82eff6188b81396c96b7181",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ea40410c2d52ed36c82eff6188b81396c96b7181",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea40410c2d52ed36c82eff6188b81396c96b7181/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "71852244cd5bef3c2275bdbdf9d5b12cfb075ee5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/71852244cd5bef3c2275bdbdf9d5b12cfb075ee5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/71852244cd5bef3c2275bdbdf9d5b12cfb075ee5"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c8af4228f35c76aa18ce0b9eb9a90f4aa1cb1a72",
        "filename": "Makefile.am_",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea40410c2d52ed36c82eff6188b81396c96b7181/Makefile.am_",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea40410c2d52ed36c82eff6188b81396c96b7181/Makefile.am_",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am_?ref=ea40410c2d52ed36c82eff6188b81396c96b7181",
        "previous_filename": "Makefile.am"
      }
    ]
  },
  {
    "sha": "b30ddcb99eeb55b49965f84438663b88d51a06aa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMzBkZGNiOTllZWI1NWI0OTk2NWY4NDQzODY2M2I4OGQ1MWEwNmFh",
    "commit": {
      "author": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:13:20Z"
      },
      "committer": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:13:20Z"
      },
      "message": "msg",
      "tree": {
        "sha": "3209ae068a4d8f02e6b940b5a2cef791fd424e70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3209ae068a4d8f02e6b940b5a2cef791fd424e70"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b30ddcb99eeb55b49965f84438663b88d51a06aa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b30ddcb99eeb55b49965f84438663b88d51a06aa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b30ddcb99eeb55b49965f84438663b88d51a06aa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b30ddcb99eeb55b49965f84438663b88d51a06aa/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ea40410c2d52ed36c82eff6188b81396c96b7181",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea40410c2d52ed36c82eff6188b81396c96b7181",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea40410c2d52ed36c82eff6188b81396c96b7181"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7ed96c7cea392323b4b50245087794f5cc7810f7",
        "filename": "SECURITY.md_",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b30ddcb99eeb55b49965f84438663b88d51a06aa/SECURITY.md_",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b30ddcb99eeb55b49965f84438663b88d51a06aa/SECURITY.md_",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/SECURITY.md_?ref=b30ddcb99eeb55b49965f84438663b88d51a06aa",
        "previous_filename": "SECURITY.md"
      }
    ]
  },
  {
    "sha": "f45d738545d97760a8c955ca1209a6565fa5ed8d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNDVkNzM4NTQ1ZDk3NzYwYThjOTU1Y2ExMjA5YTY1NjVmYTVlZDhk",
    "commit": {
      "author": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:16:07Z"
      },
      "committer": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:16:07Z"
      },
      "message": ".gitignore fix",
      "tree": {
        "sha": "c6639e0984fe01953fcf7c7718b7bdf428268295",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c6639e0984fe01953fcf7c7718b7bdf428268295"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f45d738545d97760a8c955ca1209a6565fa5ed8d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f45d738545d97760a8c955ca1209a6565fa5ed8d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f45d738545d97760a8c955ca1209a6565fa5ed8d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f45d738545d97760a8c955ca1209a6565fa5ed8d/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b30ddcb99eeb55b49965f84438663b88d51a06aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b30ddcb99eeb55b49965f84438663b88d51a06aa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b30ddcb99eeb55b49965f84438663b88d51a06aa"
      }
    ],
    "stats": {
      "total": 149,
      "additions": 0,
      "deletions": 149
    },
    "files": [
      {
        "sha": "95b5342f1ef9dc9b9bb66538d0cc842d02951d62",
        "filename": "contrib/init/org.bitcoin.bitcoind.plist",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b30ddcb99eeb55b49965f84438663b88d51a06aa/contrib/init/org.bitcoin.bitcoind.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b30ddcb99eeb55b49965f84438663b88d51a06aa/contrib/init/org.bitcoin.bitcoind.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/org.bitcoin.bitcoind.plist?ref=b30ddcb99eeb55b49965f84438663b88d51a06aa",
        "patch": "@@ -1,14 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n-<plist version=\"1.0\">\n-<dict>\n-\t<key>Label</key>\n-\t<string>org.bitcoin.bitcoind</string>\n-\t<key>ProgramArguments</key>\n-\t<array>\n-\t\t<string>/usr/local/bin/bitcoind</string>\n-\t</array>\n-\t<key>RunAtLoad</key>\n-\t<true/>\n-</dict>\n-</plist>"
      },
      {
        "sha": "ef277a7f14ad66ecdb8597a865a54b9506fd0ff9",
        "filename": "contrib/macdeploy/fancy.plist",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b30ddcb99eeb55b49965f84438663b88d51a06aa/contrib/macdeploy/fancy.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b30ddcb99eeb55b49965f84438663b88d51a06aa/contrib/macdeploy/fancy.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/fancy.plist?ref=b30ddcb99eeb55b49965f84438663b88d51a06aa",
        "patch": "@@ -1,32 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n-<plist version=\"1.0\">\n-<dict>\n-\t<key>window_bounds</key>\n-\t<array>\n-\t\t<integer>300</integer>\n-\t\t<integer>300</integer>\n-\t\t<integer>800</integer>\n-\t\t<integer>620</integer>\n-\t</array>\n-\t<key>background_picture</key>\n-\t<string>background.tiff</string>\n-\t<key>icon_size</key>\n-\t<integer>96</integer>\n-\t<key>applications_symlink</key>\n-\t<true/>\n-\t<key>items_position</key>\n-\t<dict>\n-\t\t<key>Applications</key>\n-\t\t<array>\n-\t\t\t<integer>370</integer>\n-\t\t\t<integer>156</integer>\n-\t\t</array>\n-\t\t<key>Bitcoin-Qt.app</key>\n-\t\t<array>\n-\t\t\t<integer>128</integer>\n-\t\t\t<integer>156</integer>\n-\t\t</array>\n-\t</dict>\n-</dict>\n-</plist>"
      },
      {
        "sha": "b9dcf0c5992216013d27464202cc86d2e8c31c93",
        "filename": "src/qt/Makefile",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b30ddcb99eeb55b49965f84438663b88d51a06aa/src/qt/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b30ddcb99eeb55b49965f84438663b88d51a06aa/src/qt/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile?ref=b30ddcb99eeb55b49965f84438663b88d51a06aa",
        "patch": "@@ -1,9 +0,0 @@\n-.PHONY: FORCE\n-all: FORCE\n-\t$(MAKE) -C .. bitcoin_qt test_bitcoin_qt\n-clean: FORCE\n-\t$(MAKE) -C .. bitcoin_qt_clean test_bitcoin_qt_clean\n-check: FORCE\n-\t$(MAKE) -C .. test_bitcoin_qt_check\n-bitcoin-qt bitcoin-qt.exe: FORCE\n-\t $(MAKE) -C .. bitcoin_qt"
      },
      {
        "sha": "a02f86b62ac9b38ec85b266c6205b0485557e3a5",
        "filename": "src/qt/test/Makefile",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b30ddcb99eeb55b49965f84438663b88d51a06aa/src/qt/test/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b30ddcb99eeb55b49965f84438663b88d51a06aa/src/qt/test/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile?ref=b30ddcb99eeb55b49965f84438663b88d51a06aa",
        "patch": "@@ -1,6 +0,0 @@\n-all:\n-\t$(MAKE) -C ../../ test_bitcoin_qt\n-clean:\n-\t$(MAKE) -C ../../ test_bitcoin_qt_clean\n-check:\n-\t$(MAKE) -C ../../ test_bitcoin_qt_check"
      },
      {
        "sha": "87bf73fec98d99ed7421093bfde8528d3ced4ddb",
        "filename": "src/test/Makefile",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b30ddcb99eeb55b49965f84438663b88d51a06aa/src/test/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b30ddcb99eeb55b49965f84438663b88d51a06aa/src/test/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile?ref=b30ddcb99eeb55b49965f84438663b88d51a06aa",
        "patch": "@@ -1,6 +0,0 @@\n-all:\n-\t$(MAKE) -C .. bitcoin_test\n-clean:\n-\t$(MAKE) -C .. bitcoin_test_clean\n-check:\n-\t$(MAKE) -C .. bitcoin_test_check"
      },
      {
        "sha": "85fe20924acef784470a633886c7ba86d6979bcf",
        "filename": "src/univalue/gen/gen.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 82,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b30ddcb99eeb55b49965f84438663b88d51a06aa/src/univalue/gen/gen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b30ddcb99eeb55b49965f84438663b88d51a06aa/src/univalue/gen/gen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/gen/gen.cpp?ref=b30ddcb99eeb55b49965f84438663b88d51a06aa",
        "patch": "@@ -1,82 +0,0 @@\n-// Copyright 2014 BitPay Inc.\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-//\n-// To re-create univalue_escapes.h:\n-// $ g++ -o gen gen.cpp\n-// $ ./gen > univalue_escapes.h\n-//\n-\n-#include <stdio.h>\n-#include <string.h>\n-#include \"univalue.h\"\n-\n-static bool initEscapes;\n-static std::string escapes[256];\n-\n-static void initJsonEscape()\n-{\n-    // Escape all lower control characters (some get overridden with smaller sequences below)\n-    for (int ch=0x00; ch<0x20; ++ch) {\n-        char tmpbuf[20];\n-        snprintf(tmpbuf, sizeof(tmpbuf), \"\\\\u%04x\", ch);\n-        escapes[ch] = std::string(tmpbuf);\n-    }\n-\n-    escapes[(int)'\"'] = \"\\\\\\\"\";\n-    escapes[(int)'\\\\'] = \"\\\\\\\\\";\n-    escapes[(int)'\\b'] = \"\\\\b\";\n-    escapes[(int)'\\f'] = \"\\\\f\";\n-    escapes[(int)'\\n'] = \"\\\\n\";\n-    escapes[(int)'\\r'] = \"\\\\r\";\n-    escapes[(int)'\\t'] = \"\\\\t\";\n-    escapes[(int)'\\x7f'] = \"\\\\u007f\"; // U+007F DELETE\n-\n-    initEscapes = true;\n-}\n-\n-static void outputEscape()\n-{\n-\tprintf(\t\"// Automatically generated file. Do not modify.\\n\"\n-\t\t\"#ifndef BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\\n\"\n-\t\t\"#define BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\\n\"\n-\t\t\"static const char *escapes[256] = {\\n\");\n-\n-\tfor (unsigned int i = 0; i < 256; i++) {\n-\t\tif (escapes[i].empty()) {\n-\t\t\tprintf(\"\\tNULL,\\n\");\n-\t\t} else {\n-\t\t\tprintf(\"\\t\\\"\");\n-\n-\t\t\tunsigned int si;\n-\t\t\tfor (si = 0; si < escapes[i].size(); si++) {\n-\t\t\t\tchar ch = escapes[i][si];\n-\t\t\t\tswitch (ch) {\n-\t\t\t\tcase '\"':\n-\t\t\t\t\tprintf(\"\\\\\\\"\");\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase '\\\\':\n-\t\t\t\t\tprintf(\"\\\\\\\\\");\n-\t\t\t\t\tbreak;\n-\t\t\t\tdefault:\n-\t\t\t\t\tprintf(\"%c\", escapes[i][si]);\n-\t\t\t\t\tbreak;\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\tprintf(\"\\\",\\n\");\n-\t\t}\n-\t}\n-\n-\tprintf(\t\"};\\n\"\n-\t\t\"#endif // BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\\n\");\n-}\n-\n-int main (int argc, char *argv[])\n-{\n-\tinitJsonEscape();\n-\toutputEscape();\n-\treturn 0;\n-}\n-"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "test/functional/data/wallets/high_minversion/db.log",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b30ddcb99eeb55b49965f84438663b88d51a06aa/test/functional/data/wallets/high_minversion/db.log",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b30ddcb99eeb55b49965f84438663b88d51a06aa/test/functional/data/wallets/high_minversion/db.log",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/data/wallets/high_minversion/db.log?ref=b30ddcb99eeb55b49965f84438663b88d51a06aa"
      },
      {
        "sha": "99ab8092631c4a7da2236f46e7250e6c265d3b49",
        "filename": "test/functional/data/wallets/high_minversion/wallet.dat",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b30ddcb99eeb55b49965f84438663b88d51a06aa/test/functional/data/wallets/high_minversion/wallet.dat",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b30ddcb99eeb55b49965f84438663b88d51a06aa/test/functional/data/wallets/high_minversion/wallet.dat",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/data/wallets/high_minversion/wallet.dat?ref=b30ddcb99eeb55b49965f84438663b88d51a06aa"
      }
    ]
  },
  {
    "sha": "54e33660af1a251381d8cce5a7f50afbf067fcf1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NGUzMzY2MGFmMWEyNTEzODFkOGNjZTVhN2Y1MGFmYmYwNjdmY2Yx",
    "commit": {
      "author": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:17:39Z"
      },
      "committer": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:17:39Z"
      },
      "message": ".gitignore fix",
      "tree": {
        "sha": "4b825dc642cb6eb9a060e54bf8d69288fbee4904",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b825dc642cb6eb9a060e54bf8d69288fbee4904"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54e33660af1a251381d8cce5a7f50afbf067fcf1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54e33660af1a251381d8cce5a7f50afbf067fcf1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/54e33660af1a251381d8cce5a7f50afbf067fcf1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54e33660af1a251381d8cce5a7f50afbf067fcf1/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f45d738545d97760a8c955ca1209a6565fa5ed8d"
      }
    ],
    "stats": {
      "total": 564351,
      "additions": 0,
      "deletions": 564351
    },
    "files": [
      {
        "sha": "eace0b712119afb911e9404be36737766a36e5cc",
        "filename": ".appveyor.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 62,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/.appveyor.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/.appveyor.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.appveyor.yml?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,62 +0,0 @@\n-version: '{branch}.{build}'\n-skip_tags: true\n-image: Visual Studio 2019\n-configuration: Release\n-platform: x64\n-clone_depth: 5\n-environment:\n-  PATH: 'C:\\Python37-x64;C:\\Python37-x64\\Scripts;%PATH%'\n-  PYTHONUTF8: 1\n-  QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/v1.6/Qt5.9.8_x64_static_vs2019.zip'\n-  QT_DOWNLOAD_HASH: '9a8c6eb20967873785057fdcd329a657c7f922b0af08c5fde105cc597dd37e21'\n-  QT_LOCAL_PATH: 'C:\\Qt5.9.8_x64_static_vs2019'\n-  VCPKG_INSTALL_PATH: 'C:\\tools\\vcpkg\\installed'\n-  VCPKG_COMMIT_ID: '40230b8e3f6368dcb398d649331be878ca1e9007'\n-install:\n-# Disable zmq test for now since python zmq library on Windows would cause Access violation sometimes.\n-# - cmd: pip install zmq\n-# Powershell block below is to install the c++ dependencies via vcpkg. The pseudo code is:\n-#    a. Checkout the vcpkg source (including port files) for the specific checkout and build the vcpkg binary,\n-#    b. Install the missing packages using the vcpkg manifest.\n-- ps: |\n-      cd c:\\tools\\vcpkg\n-      $env:GIT_REDIRECT_STDERR = '2>&1' # git is writing non-errors to STDERR when doing git pull. Send to STDOUT instead.\n-      git pull origin master > $null\n-      git -c advice.detachedHead=false checkout $env:VCPKG_COMMIT_ID\n-      .\\bootstrap-vcpkg.bat > $null\n-      cd \"$env:APPVEYOR_BUILD_FOLDER\"\n-before_build:\n-# Powershell block below is to download and extract the Qt static libraries. The pseudo code is:\n-#    a. Download the zip file with the prebuilt Qt static libraries.\n-#    b. Check that the downloaded file matches the expected hash.\n-#    c. Extract the zip file to the specific destination path expected by the msbuild projects.\n-- ps: |\n-      Write-Host \"Downloading Qt binaries.\";\n-      Invoke-WebRequest -Uri $env:QT_DOWNLOAD_URL -Out qtdownload.zip;\n-      Write-Host \"Qt binaries successfully downloaded, checking hash against $env:QT_DOWNLOAD_HASH...\";\n-      if((Get-FileHash qtdownload.zip).Hash -eq $env:QT_DOWNLOAD_HASH) {\n-        Expand-Archive qtdownload.zip -DestinationPath $env:QT_LOCAL_PATH;\n-        Write-Host \"Qt binary download matched the expected hash.\";\n-      }\n-      else {\n-        Write-Host \"ERROR: Qt binary download did not match the expected hash.\";\n-        Exit-AppveyorBuild;\n-      }\n-- cmd: python build_msvc\\msvc-autogen.py\n-build_script:\n-- cmd: msbuild /p:TrackFileAccess=false build_msvc\\bitcoin.sln /m /v:q /nologo\n-after_build:\n-#- 7z a bitcoin-%APPVEYOR_BUILD_VERSION%.zip %APPVEYOR_BUILD_FOLDER%\\build_msvc\\%platform%\\%configuration%\\*.exe\n-test_script:\n-- cmd: src\\test_bitcoin.exe -l test_suite\n-- cmd: src\\bench_bitcoin.exe > NUL\n-- ps:  python test\\util\\bitcoin-util-test.py\n-- cmd: python test\\util\\rpcauth-test.py\n-# Fee estimation test failing on appveyor with: WinError 10048] Only one usage of each socket address (protocol/network address/port) is normally permitted.\n-# functional tests disabled for now. See\n-# https://github.com/bitcoin/bitcoin/pull/18626#issuecomment-613396202\n-# https://github.com/bitcoin/bitcoin/issues/18623\n-# - cmd: python test\\functional\\test_runner.py --ci --quiet --combinedlogslen=4000 --failfast --exclude feature_fee_estimation\n-artifacts:\n-#- path: bitcoin-%APPVEYOR_BUILD_VERSION%.zip\n-deploy: off"
      },
      {
        "sha": "916f172a6af7a7828920c7342c5ff00df7140543",
        "filename": ".cirrus.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 121,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/.cirrus.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/.cirrus.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.cirrus.yml?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,121 +0,0 @@\n-### Global defaults\n-\n-timeout_in: 120m  # https://cirrus-ci.org/faq/#instance-timed-out\n-container:\n-  # https://cirrus-ci.org/faq/#are-there-any-limits\n-  # Each project has 16 CPU in total, assign 2 to each container, so that 8 tasks run in parallel\n-  cpu: 2\n-  memory: 8G  # Set to 8GB to avoid OOM. https://cirrus-ci.org/guide/linux/#linux-containers\n-  kvm: true  # Use kvm to avoid spurious CI failures in the default virtualization cluster, see https://github.com/bitcoin/bitcoin/issues/20093\n-env:\n-  PACKAGE_MANAGER_INSTALL : \"apt-get update && apt-get install -y\"\n-  MAKEJOBS: \"-j4\"\n-  DANGER_RUN_CI_ON_HOST: \"1\"  # Containers will be discarded after the run, so there is no risk that the ci scripts modify the system\n-  TEST_RUNNER_PORT_MIN: \"14000\"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache\n-  CCACHE_SIZE: \"200M\"\n-  CCACHE_DIR: \"/tmp/ccache_dir\"\n-\n-### Global task template\n-\n-# https://cirrus-ci.org/guide/tips-and-tricks/#sharing-configuration-between-tasks\n-global_task_template: &GLOBAL_TASK_TEMPLATE\n-  skip: $CIRRUS_REPO_FULL_NAME == \"bitcoin-core/gui\" && $CIRRUS_PR == \"\"  # No need to run on the read-only mirror, unless it is a PR. https://cirrus-ci.org/guide/writing-tasks/#conditional-task-execution\n-  ccache_cache:\n-    folder: \"/tmp/ccache_dir\"\n-  depends_built_cache:\n-    folder: \"/tmp/cirrus-ci-build/depends/built\"\n-  depends_sdk_cache:\n-    folder: \"/tmp/cirrus-ci-build/depends/sdk-sources\"\n-  depends_releases_cache:\n-    folder: \"/tmp/cirrus-ci-build/releases\"\n-  merge_base_script:\n-    - bash -c \"$PACKAGE_MANAGER_INSTALL git\"\n-    - git fetch $CIRRUS_REPO_CLONE_URL $CIRRUS_BASE_BRANCH\n-    - git config --global user.email \"ci@ci.ci\"\n-    - git config --global user.name \"ci\"\n-    - git merge FETCH_HEAD  # Merge base to detect silent merge conflicts\n-  ci_script:\n-    - ./ci/test_run_all.sh\n-\n-#task:\n-#  name: \"Windows\"\n-#  windows_container:\n-#    image: cirrusci/windowsservercore:2019\n-#  env:\n-#    CIRRUS_SHELL: powershell\n-#    PATH: 'C:\\Python37;C:\\Python37\\Scripts;%PATH%'\n-#    PYTHONUTF8: 1\n-#    QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/v1.6/Qt5.9.8_x64_static_vs2019.zip'\n-#    QT_DOWNLOAD_HASH: '9a8c6eb20967873785057fdcd329a657c7f922b0af08c5fde105cc597dd37e21'\n-#    QT_LOCAL_PATH: 'C:\\Qt5.9.8_x64_static_vs2019'\n-#    VCPKG_INSTALL_PATH: 'C:\\tools\\vcpkg\\installed'\n-#    VCPKG_COMMIT_ID: 'ed0df8ecc4ed7e755ea03e18aaf285fd9b4b4a74'\n-#  install_script:\n-#    - choco install python --version=3.7.7 -y\n-\n-task:\n-  name: 'x86_64 Linux  [GOAL: install]  [bionic]  [C++17, previous releases, uses qt5 dev package and some depends packages] [unsigned char]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:bionic\n-  env:\n-    FILE_ENV: \"./ci/test/00_setup_env_native_qt5.sh\"\n-\n-task:\n-  name: 'x86_64 Linux  [GOAL: install]  [focal]  [depends, sanitizers: thread (TSan), no gui]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:focal\n-    cpu: 4  # Double CPU and Memory to avoid timeout\n-    memory: 16G\n-  env:\n-    MAKEJOBS: \"-j8\"\n-    FILE_ENV: \"./ci/test/00_setup_env_native_tsan.sh\"\n-\n-task:\n-  name: 'x86_64 Linux  [GOAL: install]  [focal]  [depends, sanitizers: memory (MSan)]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:focal\n-  env:\n-    FILE_ENV: \"./ci/test/00_setup_env_native_msan.sh\"\n-\n-task:\n-  name: 'x86_64 Linux  [GOAL: install]  [focal]  [no depends, only system libs, sanitizers: address/leak (ASan + LSan) + undefined (UBSan) + integer]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:focal\n-  env:\n-    FILE_ENV: \"./ci/test/00_setup_env_native_asan.sh\"\n-\n-task:\n-  name: 'x86_64 Linux  [GOAL: install]  [focal]  [no depends, only system libs, sanitizers: fuzzer,address,undefined]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:focal\n-  env:\n-    FILE_ENV: \"./ci/test/00_setup_env_native_fuzz.sh\"\n-\n-task:\n-  name: 'x86_64 Linux  [GOAL: install]  [focal]  [no depends, only system libs, fuzzers under valgrind]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:focal\n-  env:\n-    FILE_ENV: \"./ci/test/00_setup_env_native_fuzz_with_valgrind.sh\"\n-\n-task:\n-  name: 'x86_64 Linux [GOAL: install]  [focal]  [multiprocess]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:focal\n-  env:\n-    FILE_ENV: \"./ci/test/00_setup_env_native_multiprocess.sh\"\n-\n-task:\n-  name: 'macOS 10.12  [GOAL: deploy] [no functional tests]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:bionic\n-  env:\n-    FILE_ENV: \"./ci/test/00_setup_env_mac.sh\""
      },
      {
        "sha": "d44ac27eb9370e0b02b241ee28e67d0d71a947e8",
        "filename": ".fuzzbuzz.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/.fuzzbuzz.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/.fuzzbuzz.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.fuzzbuzz.yml?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,16 +0,0 @@\n-base: ubuntu:16.04\n-language: c++\n-engine: libFuzzer\n-environment:\n-  - CXXFLAGS=-fcoverage-mapping -fno-omit-frame-pointer -fprofile-instr-generate -gline-tables-only -O1\n-setup:\n-  - sudo apt-get update\n-  - sudo apt-get install -y autoconf bsdmainutils clang git libboost-all-dev libboost-program-options-dev libc++1 libc++abi1 libc++abi-dev libc++-dev libclang1 libclang-dev libdb5.3++ libevent-dev libllvm-ocaml-dev libomp5 libomp-dev libprotobuf-dev libqt5core5a libqt5dbus5 libqt5gui5 libssl-dev libtool llvm llvm-dev llvm-runtime pkg-config protobuf-compiler qttools5-dev qttools5-dev-tools software-properties-common\n-  - ./autogen.sh\n-  - CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n-  - make\n-  - git clone https://github.com/bitcoin-core/qa-assets\n-auto_targets:\n-  find_targets_command: find src/test/fuzz/ -executable -type f ! -name \"*.cpp\" ! -name \"*.h\"\n-  base_corpus_dir: qa-assets/fuzz_seed_corpus/\n-  memory_limit: none"
      },
      {
        "sha": "c9cf4a7d9cd03ed588ba9882d26bfd1dd6800fe7",
        "filename": ".gitattributes",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/.gitattributes",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/.gitattributes",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitattributes?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1 +0,0 @@\n-src/clientversion.cpp export-subst"
      },
      {
        "sha": "eedeeb4e54c58c80ca730dfcefe2c1f5da05c9e6",
        "filename": ".github/ISSUE_TEMPLATE.md",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/.github/ISSUE_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/.github/ISSUE_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,27 +0,0 @@\n-<!-- This issue tracker is only for technical issues related to Bitcoin Core.\n-\n-General bitcoin questions and/or support requests are best directed to the Bitcoin StackExchange at https://bitcoin.stackexchange.com.\n-\n-For reporting security issues, please read instructions at https://bitcoincore.org/en/contact/.\n-\n-If the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue!\n-\n-Any report, issue or feature request related to the GUI should be reported at\n-https://github.com/bitcoin-core/gui/issues/\n--->\n-\n-<!-- Describe the issue -->\n-<!--- What behavior did you expect? -->\n-\n-<!--- What was the actual behavior (provide screenshots if the issue is GUI-related)? -->\n-\n-<!--- How reliably can you reproduce the issue, what are the steps to do so? -->\n-\n-<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\n-\n-<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\n-\n-<!-- GUI-related issue? What is your operating system and its version? If Linux, what is your desktop environment and graphical shell? -->\n-\n-<!-- Any extra information that might be useful in the debugging process. -->\n-<!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->"
      },
      {
        "sha": "fb91208954ea9698d5610a85a1a9b3efb7311142",
        "filename": ".github/ISSUE_TEMPLATE/bug_report.md",
        "status": "removed",
        "additions": 0,
        "deletions": 41,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/.github/ISSUE_TEMPLATE/bug_report.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/.github/ISSUE_TEMPLATE/bug_report.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/bug_report.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,41 +0,0 @@\n----\n-name: Bug report\n-about: Create a report to help us improve (use this for suspected bugs only, if not sure, open a regular issue below)\n-title: ''\n-labels: Bug\n-assignees: ''\n-\n----\n-\n-<!-- This issue tracker is only for technical issues related to Bitcoin Core.\n-\n-General bitcoin questions and/or support requests are best directed to the Bitcoin StackExchange at https://bitcoin.stackexchange.com.\n-\n-For reporting security issues, please read instructions at https://bitcoincore.org/en/contact/.\n-\n-If the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue! -->\n-\n-<!-- Describe the issue -->\n-\n-**Expected behavior**\n-\n-<!--- What behavior did you expect? -->\n-\n-**Actual behavior**\n-\n-<!--- What was the actual behavior (provide screenshots if the issue is GUI-related)? -->\n-\n-**To reproduce**\n-\n-<!--- How reliably can you reproduce the issue, what are the steps to do so? -->\n-\n-**System information**\n-\n-<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\n-\n-<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\n-\n-<!-- GUI-related issue? What is your operating system and its version? If Linux, what is your desktop environment and graphical shell? -->\n-\n-<!-- Any extra information that might be useful in the debugging process. -->\n-<!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->"
      },
      {
        "sha": "2d5685185ea3621cb9c7d83e62a628468cb9f786",
        "filename": ".github/ISSUE_TEMPLATE/feature_request.md",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/.github/ISSUE_TEMPLATE/feature_request.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/.github/ISSUE_TEMPLATE/feature_request.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/feature_request.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,20 +0,0 @@\n----\n-name: Feature request\n-about: Suggest an idea for this project\n-title: ''\n-labels: Feature\n-assignees: ''\n-\n----\n-\n-**Is your feature request related to a problem? Please describe.**\n-<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\n-\n-**Describe the solution you'd like**\n-<!-- A clear and concise description of what you want to happen. -->\n-\n-**Describe alternatives you've considered**\n-<!-- A clear and concise description of any alternative solutions or features you've considered. -->\n-\n-**Additional context**\n-<!-- Add any other context or screenshots about the feature request here. -->"
      },
      {
        "sha": "d32e22d36079ab27228ab036aafe006d26b9c4ce",
        "filename": ".github/ISSUE_TEMPLATE/good_first_issue.md",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/.github/ISSUE_TEMPLATE/good_first_issue.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/.github/ISSUE_TEMPLATE/good_first_issue.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/good_first_issue.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,22 +0,0 @@\n----\n-name: Good first issue\n-about: '(Regular devs only): Suggest a new good first issue'\n-title: ''\n-labels: ''\n-assignees: ''\n-\n----\n-\n-<!-- Needs the label \"good first issue\" assigned manually before or after opening -->\n-\n-<!-- A good first issue is an uncontroversial issue, that has a relatively unique and obvious solution -->\n-\n-<!-- Motivate the issue and explain the solution briefly -->\n-\n-#### Useful skills:\n-\n-<!-- (For example, \u201cC++11 std::thread\u201d, \u201cQt5 GUI and async GUI design\u201d or \u201cbasic understanding of Bitcoin mining and the Bitcoin Core RPC interface\u201d.) -->\n-\n-#### Want to work on this issue?\n-\n-For guidance on contributing, please read [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md) before opening your pull request."
      },
      {
        "sha": "37acc81e21e6c9e49a89623e016bb6df7002cba6",
        "filename": ".github/ISSUE_TEMPLATE/gui_issue.md",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/.github/ISSUE_TEMPLATE/gui_issue.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/.github/ISSUE_TEMPLATE/gui_issue.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/gui_issue.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,11 +0,0 @@\n----\n-name: An issue or feature request related to the GUI\n-about: Any report, issue or feature request related to the GUI should be reported at https://github.com/bitcoin-core/gui/issues/\n-title: Any report, issue or feature request related to the GUI should be reported at https://github.com/bitcoin-core/gui/issues/\n-labels: GUI\n-assignees: ''\n-\n----\n-\n-Any report, issue or feature request related to the GUI should be reported at\n-https://github.com/bitcoin-core/gui/issues/"
      },
      {
        "sha": "ae92fc78f2d1cf342d4eb9439d9a0ff91d9092b4",
        "filename": ".github/PULL_REQUEST_TEMPLATE.md",
        "status": "removed",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/.github/PULL_REQUEST_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/.github/PULL_REQUEST_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/PULL_REQUEST_TEMPLATE.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,43 +0,0 @@\n-<!--\n-*** Please remove the following help text before submitting: ***\n-\n-Pull requests without a rationale and clear improvement may be closed\n-immediately.\n-\n-GUI-related pull requests should be opened against\n-https://github.com/bitcoin-core/gui\n-first. See CONTRIBUTING.md\n--->\n-\n-<!--\n-Please provide clear motivation for your patch and explain how it improves\n-Bitcoin Core user experience or Bitcoin Core developer experience\n-significantly:\n-\n-* Any test improvements or new tests that improve coverage are always welcome.\n-* All other changes should have accompanying unit tests (see `src/test/`) or\n-  functional tests (see `test/`). Contributors should note which tests cover\n-  modified code. If no tests exist for a region of modified code, new tests\n-  should accompany the change.\n-* Bug fixes are most welcome when they come with steps to reproduce or an\n-  explanation of the potential issue as well as reasoning for the way the bug\n-  was fixed.\n-* Features are welcome, but might be rejected due to design or scope issues.\n-  If a feature is based on a lot of dependencies, contributors should first\n-  consider building the system outside of Bitcoin Core, if possible.\n-* Refactoring changes are only accepted if they are required for a feature or\n-  bug fix or otherwise improve developer experience significantly. For example,\n-  most \"code style\" refactoring changes require a thorough explanation why they\n-  are useful, what downsides they have and why they *significantly* improve\n-  developer experience or avoid serious programming bugs. Note that code style\n-  is often a subjective matter. Unless they are explicitly mentioned to be\n-  preferred in the [developer notes](/doc/developer-notes.md), stylistic code\n-  changes are usually rejected.\n--->\n-\n-<!--\n-Bitcoin Core has a thorough review process and even the most trivial change\n-needs to pass a lot of eyes and requires non-zero or even substantial time\n-effort to review. There is a huge lack of active reviewers on the project, so\n-patches often sit for a long time.\n--->"
      },
      {
        "sha": "5726b18928847149bfcbccbffda97c712392128c",
        "filename": ".gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 150,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,150 +0,0 @@\n-*.tar.gz\n-\n-*.exe\n-*.pdb\n-src/bitcoin\n-src/bitcoind\n-src/bitcoin-cli\n-src/bitcoin-gui\n-src/bitcoin-node\n-src/bitcoin-tx\n-src/bitcoin-wallet\n-src/test/fuzz/*\n-!src/test/fuzz/*.*\n-src/test/test_bitcoin\n-src/qt/test/test_bitcoin-qt\n-\n-# autoreconf\n-Makefile.in\n-aclocal.m4\n-autom4te.cache/\n-build-aux/config.guess\n-build-aux/config.sub\n-build-aux/depcomp\n-build-aux/install-sh\n-build-aux/ltmain.sh\n-build-aux/m4/libtool.m4\n-build-aux/m4/lt~obsolete.m4\n-build-aux/m4/ltoptions.m4\n-build-aux/m4/ltsugar.m4\n-build-aux/m4/ltversion.m4\n-build-aux/missing\n-build-aux/compile\n-build-aux/test-driver\n-config.cache\n-config.log\n-config.status\n-configure\n-libtool\n-src/config/bitcoin-config.h\n-src/config/bitcoin-config.h.in\n-src/config/stamp-h1\n-src/obj\n-share/setup.nsi\n-share/qt/Info.plist\n-\n-src/univalue/gen\n-\n-src/qt/*.moc\n-src/qt/moc_*.cpp\n-src/qt/forms/ui_*.h\n-\n-src/qt/test/moc*.cpp\n-\n-src/qt/bitcoin-qt.config\n-src/qt/bitcoin-qt.creator\n-src/qt/bitcoin-qt.creator.user\n-src/qt/bitcoin-qt.files\n-src/qt/bitcoin-qt.includes\n-\n-.deps\n-.dirstamp\n-.libs\n-.*.swp\n-*.*~*\n-*.bak\n-*.rej\n-*.orig\n-*.pyc\n-*.o\n-*.o-*\n-*.a\n-*.pb.cc\n-*.pb.h\n-*.dat\n-\n-*.log\n-*.trs\n-*.dmg\n-\n-*.json.h\n-*.raw.h\n-\n-# Only ignore unexpected patches\n-*.patch\n-!depends/patches/**/*.patch\n-\n-#libtool object files\n-*.lo\n-*.la\n-\n-# Compilation and Qt preprocessor part\n-*.qm\n-Makefile\n-!depends/Makefile\n-src/qt/bitcoin-qt\n-Bitcoin-Qt.app\n-background.tiff*\n-\n-# Qt Creator\n-Makefile.am.user\n-\n-# Unit-tests\n-Makefile.test\n-bitcoin-qt_test\n-\n-# Resources cpp\n-qrc_*.cpp\n-\n-# Mac specific\n-.DS_Store\n-build\n-\n-# Previous releases\n-releases\n-\n-#lcov\n-*.gcno\n-*.gcda\n-/*.info\n-test_bitcoin.coverage/\n-total.coverage/\n-fuzz.coverage/\n-coverage_percent.txt\n-/cov_tool_wrapper.sh\n-qa-assets/\n-\n-#build tests\n-linux-coverage-build\n-linux-build\n-win32-build\n-test/config.ini\n-test/cache/*\n-test/.mypy_cache/\n-\n-!src/leveldb*/Makefile\n-\n-/doc/doxygen/\n-\n-libbitcoinconsensus.pc\n-contrib/devtools/split-debug.sh\n-\n-# Output from running db4 installation\n-db4/\n-\n-# clang-check\n-*.plist\n-\n-osx_volname\n-dist/\n-*.background.tiff"
      },
      {
        "sha": "c49282585a030b902316d2b71a73b15b5840aaa2",
        "filename": ".python-version",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/.python-version",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/.python-version",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.python-version?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1 +0,0 @@\n-3.5.6"
      },
      {
        "sha": "69d8c6aee417d6fd300990e3c34ae719f16406a2",
        "filename": ".style.yapf",
        "status": "removed",
        "additions": 0,
        "deletions": 261,
        "changes": 261,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/.style.yapf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/.style.yapf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.style.yapf?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,261 +0,0 @@\n-[style]\n-# Align closing bracket with visual indentation.\n-align_closing_bracket_with_visual_indent=True\n-\n-# Allow dictionary keys to exist on multiple lines. For example:\n-#\n-#   x = {\n-#       ('this is the first element of a tuple',\n-#        'this is the second element of a tuple'):\n-#            value,\n-#   }\n-allow_multiline_dictionary_keys=False\n-\n-# Allow lambdas to be formatted on more than one line.\n-allow_multiline_lambdas=False\n-\n-# Allow splits before the dictionary value.\n-allow_split_before_dict_value=True\n-\n-# Number of blank lines surrounding top-level function and class\n-# definitions.\n-blank_lines_around_top_level_definition=2\n-\n-# Insert a blank line before a class-level docstring.\n-blank_line_before_class_docstring=False\n-\n-# Insert a blank line before a module docstring.\n-blank_line_before_module_docstring=False\n-\n-# Insert a blank line before a 'def' or 'class' immediately nested\n-# within another 'def' or 'class'. For example:\n-#\n-#   class Foo:\n-#                      # <------ this blank line\n-#     def method():\n-#       ...\n-blank_line_before_nested_class_or_def=False\n-\n-# Do not split consecutive brackets. Only relevant when\n-# dedent_closing_brackets is set. For example:\n-#\n-#    call_func_that_takes_a_dict(\n-#        {\n-#            'key1': 'value1',\n-#            'key2': 'value2',\n-#        }\n-#    )\n-#\n-# would reformat to:\n-#\n-#    call_func_that_takes_a_dict({\n-#        'key1': 'value1',\n-#        'key2': 'value2',\n-#    })\n-coalesce_brackets=False\n-\n-# The column limit.\n-column_limit=160\n-\n-# The style for continuation alignment. Possible values are:\n-#\n-# - SPACE: Use spaces for continuation alignment. This is default behavior.\n-# - FIXED: Use fixed number (CONTINUATION_INDENT_WIDTH) of columns\n-#   (ie: CONTINUATION_INDENT_WIDTH/INDENT_WIDTH tabs) for continuation\n-#   alignment.\n-# - LESS: Slightly left if cannot vertically align continuation lines with\n-#   indent characters.\n-# - VALIGN-RIGHT: Vertically align continuation lines with indent\n-#   characters. Slightly right (one more indent character) if cannot\n-#   vertically align continuation lines with indent characters.\n-#\n-# For options FIXED, and VALIGN-RIGHT are only available when USE_TABS is\n-# enabled.\n-continuation_align_style=SPACE\n-\n-# Indent width used for line continuations.\n-continuation_indent_width=4\n-\n-# Put closing brackets on a separate line, dedented, if the bracketed\n-# expression can't fit in a single line. Applies to all kinds of brackets,\n-# including function definitions and calls. For example:\n-#\n-#   config = {\n-#       'key1': 'value1',\n-#       'key2': 'value2',\n-#   }        # <--- this bracket is dedented and on a separate line\n-#\n-#   time_series = self.remote_client.query_entity_counters(\n-#       entity='dev3246.region1',\n-#       key='dns.query_latency_tcp',\n-#       transform=Transformation.AVERAGE(window=timedelta(seconds=60)),\n-#       start_ts=now()-timedelta(days=3),\n-#       end_ts=now(),\n-#   )        # <--- this bracket is dedented and on a separate line\n-dedent_closing_brackets=False\n-\n-# Disable the heuristic which places each list element on a separate line\n-# if the list is comma-terminated.\n-disable_ending_comma_heuristic=False\n-\n-# Place each dictionary entry onto its own line.\n-each_dict_entry_on_separate_line=True\n-\n-# The regex for an i18n comment. The presence of this comment stops\n-# reformatting of that line, because the comments are required to be\n-# next to the string they translate.\n-i18n_comment=\n-\n-# The i18n function call names. The presence of this function stops\n-# reformattting on that line, because the string it has cannot be moved\n-# away from the i18n comment.\n-i18n_function_call=\n-\n-# Indent the dictionary value if it cannot fit on the same line as the\n-# dictionary key. For example:\n-#\n-#   config = {\n-#       'key1':\n-#           'value1',\n-#       'key2': value1 +\n-#               value2,\n-#   }\n-indent_dictionary_value=False\n-\n-# The number of columns to use for indentation.\n-indent_width=4\n-\n-# Join short lines into one line. E.g., single line 'if' statements.\n-join_multiple_lines=True\n-\n-# Do not include spaces around selected binary operators. For example:\n-#\n-#   1 + 2 * 3 - 4 / 5\n-#\n-# will be formatted as follows when configured with \"*,/\":\n-#\n-#   1 + 2*3 - 4/5\n-#\n-no_spaces_around_selected_binary_operators=\n-\n-# Use spaces around default or named assigns.\n-spaces_around_default_or_named_assign=False\n-\n-# Use spaces around the power operator.\n-spaces_around_power_operator=False\n-\n-# The number of spaces required before a trailing comment.\n-spaces_before_comment=2\n-\n-# Insert a space between the ending comma and closing bracket of a list,\n-# etc.\n-space_between_ending_comma_and_closing_bracket=True\n-\n-# Split before arguments\n-split_all_comma_separated_values=False\n-\n-# Split before arguments if the argument list is terminated by a\n-# comma.\n-split_arguments_when_comma_terminated=False\n-\n-# Set to True to prefer splitting before '&', '|' or '^' rather than\n-# after.\n-split_before_bitwise_operator=True\n-\n-# Split before the closing bracket if a list or dict literal doesn't fit on\n-# a single line.\n-split_before_closing_bracket=True\n-\n-# Split before a dictionary or set generator (comp_for). For example, note\n-# the split before the 'for':\n-#\n-#   foo = {\n-#       variable: 'Hello world, have a nice day!'\n-#       for variable in bar if variable != 42\n-#   }\n-split_before_dict_set_generator=True\n-\n-# Split before the '.' if we need to split a longer expression:\n-#\n-#   foo = ('This is a really long string: {}, {}, {}, {}'.format(a, b, c, d))\n-#\n-# would reformat to something like:\n-#\n-#   foo = ('This is a really long string: {}, {}, {}, {}'\n-#          .format(a, b, c, d))\n-split_before_dot=False\n-\n-# Split after the opening paren which surrounds an expression if it doesn't\n-# fit on a single line.\n-split_before_expression_after_opening_paren=False\n-\n-# If an argument / parameter list is going to be split, then split before\n-# the first argument.\n-split_before_first_argument=False\n-\n-# Set to True to prefer splitting before 'and' or 'or' rather than\n-# after.\n-split_before_logical_operator=True\n-\n-# Split named assignments onto individual lines.\n-split_before_named_assigns=True\n-\n-# Set to True to split list comprehensions and generators that have\n-# non-trivial expressions and multiple clauses before each of these\n-# clauses. For example:\n-#\n-#   result = [\n-#       a_long_var + 100 for a_long_var in xrange(1000)\n-#       if a_long_var % 10]\n-#\n-# would reformat to something like:\n-#\n-#   result = [\n-#       a_long_var + 100\n-#       for a_long_var in xrange(1000)\n-#       if a_long_var % 10]\n-split_complex_comprehension=False\n-\n-# The penalty for splitting right after the opening bracket.\n-split_penalty_after_opening_bracket=30\n-\n-# The penalty for splitting the line after a unary operator.\n-split_penalty_after_unary_operator=10000\n-\n-# The penalty for splitting right before an if expression.\n-split_penalty_before_if_expr=0\n-\n-# The penalty of splitting the line around the '&', '|', and '^'\n-# operators.\n-split_penalty_bitwise_operator=300\n-\n-# The penalty for splitting a list comprehension or generator\n-# expression.\n-split_penalty_comprehension=80\n-\n-# The penalty for characters over the column limit.\n-split_penalty_excess_character=7000\n-\n-# The penalty incurred by adding a line split to the unwrapped line. The\n-# more line splits added the higher the penalty.\n-split_penalty_for_added_line_split=30\n-\n-# The penalty of splitting a list of \"import as\" names. For example:\n-#\n-#   from a_very_long_or_indented_module_name_yada_yad import (long_argument_1,\n-#                                                             long_argument_2,\n-#                                                             long_argument_3)\n-#\n-# would reformat to something like:\n-#\n-#   from a_very_long_or_indented_module_name_yada_yad import (\n-#       long_argument_1, long_argument_2, long_argument_3)\n-split_penalty_import_names=0\n-\n-# The penalty of splitting the line around the 'and' and 'or'\n-# operators.\n-split_penalty_logical_operator=300\n-\n-# Use the Tab character for indentation.\n-use_tabs=False\n-"
      },
      {
        "sha": "55b34ae422d2fb828a70a0b518061c06333a725a",
        "filename": ".travis.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 109,
        "changes": 109,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,109 +0,0 @@\n-# Travis caches can be manually removed if necessary. This is one of the very\n-# few manual operations that is possible with Travis, and it can be done by a\n-# Bitcoin Core GitHub member via the Travis web interface [0].\n-#\n-# Travis CI uploads the cache after the script phase of the build [1].\n-# However, the build is terminated without saving the cache if it takes over\n-# 50 minutes [2]. Thus, if we spent too much time in early build stages, fail\n-# with an error and save the cache.\n-#\n-# [0] https://travis-ci.org/bitcoin/bitcoin/caches\n-# [1] https://docs.travis-ci.com/user/caching/#build-phases\n-# [2] https://docs.travis-ci.com/user/customizing-the-build#build-timeouts\n-\n-version: ~> 1.0\n-\n-dist: bionic\n-os: linux\n-language: minimal\n-arch: amd64\n-cache:\n-  directories:\n-    - $TRAVIS_BUILD_DIR/depends/built\n-    - $TRAVIS_BUILD_DIR/depends/sdk-sources\n-    - $TRAVIS_BUILD_DIR/ci/scratch/.ccache\n-    - $TRAVIS_BUILD_DIR/releases/$HOST\n-stages:\n-  - lint\n-  - test\n-env:\n-  global:\n-    - CI_RETRY_EXE=\"travis_retry\"\n-    - CACHE_ERR_MSG=\"Error! Initial build successful, but not enough time remains to run later build stages and tests. See https://docs.travis-ci.com/user/customizing-the-build#build-timeouts . Please manually re-run this job by using the travis restart button. The next run should not time out because the build cache has been saved.\"\n-before_install:\n-  - set -o errexit; source ./ci/test/00_setup_env.sh\n-  - set -o errexit; source ./ci/test/03_before_install.sh\n-install:\n-  - set -o errexit; source ./ci/test/04_install.sh\n-before_script:\n-  # Temporary workaround for https://github.com/bitcoin/bitcoin/issues/16368\n-  - for i in {1..4}; do echo \"$(sleep 500)\" ; done &\n-  - set -o errexit; source ./ci/test/05_before_script.sh &> \"/dev/null\"\n-script:\n-  - export CONTINUE=1\n-  - if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long\n-  - if [ $TRAVIS_REPO_SLUG = \"bitcoin/bitcoin\" ]; then export CONTINUE=1; fi  # continue on repos with extended build time (90 minutes)\n-  - if [ $CONTINUE = \"1\" ]; then set -o errexit; source ./ci/test/06_script_a.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n-  - if [[ $SECONDS -gt 50*60-$EXPECTED_TESTS_DURATION_IN_SECONDS ]]; then export CONTINUE=0; fi\n-  - if [ $TRAVIS_REPO_SLUG = \"bitcoin/bitcoin\" ]; then export CONTINUE=1; fi  # continue on repos with extended build time (90 minutes)\n-  - if [ $CONTINUE = \"1\" ]; then set -o errexit; source ./ci/test/06_script_b.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n-after_script:\n-  - echo $TRAVIS_COMMIT_RANGE\n-jobs:\n-  include:\n-\n-    - stage: lint\n-      name: 'lint'\n-      env:\n-      cache: pip\n-      language: python\n-      python: '3.5' # Oldest supported version according to doc/dependencies.md\n-      install:\n-        - set -o errexit; source ./ci/lint/04_install.sh\n-      before_script:\n-        - set -o errexit; source ./ci/lint/05_before_script.sh\n-      script:\n-        - set -o errexit; source ./ci/lint/06_script.sh\n-\n-    - stage: test\n-      name: 'ARM  [GOAL: install]  [buster]  [unit tests, no functional tests]'\n-      arch: arm64  # Can disable QEMU_USER_CMD and run the tests natively without qemu\n-      env: >-\n-        FILE_ENV=\"./ci/test/00_setup_env_arm.sh\"\n-        QEMU_USER_CMD=\"\"\n-\n-    - stage: test\n-      name: 'Win64  [GOAL: deploy]  [unit tests, no gui, no boost::process, no functional tests]'\n-      env: >-\n-        FILE_ENV=\"./ci/test/00_setup_env_win64.sh\"\n-\n-    - stage: test\n-      name: '32-bit + dash  [GOAL: install]  [CentOS 7]  [gui]'\n-      env: >-\n-        FILE_ENV=\"./ci/test/00_setup_env_i686_centos.sh\"\n-\n-    - stage: test\n-      name: 'x86_64 Linux  [GOAL: install]  [xenial]  [no wallet]'\n-      env: >-\n-        FILE_ENV=\"./ci/test/00_setup_env_native_nowallet.sh\"\n-\n-    - stage: test\n-      name: 'macOS 10.14 native [GOAL: install] [GUI] [no depends]'\n-      os: osx\n-      # Use the most recent version:\n-      # Xcode 11.3.1, macOS 10.14, SDK 10.15\n-      # https://docs.travis-ci.com/user/reference/osx/#macos-version\n-      osx_image: xcode11.3\n-      addons:\n-        homebrew:\n-          packages:\n-          - berkeley-db4\n-          - miniupnpc\n-          - qrencode\n-          - sqlite\n-          - ccache\n-          - zeromq\n-      env: >-\n-        DANGER_RUN_CI_ON_HOST=true\n-        CI_USE_APT_INSTALL=no\n-        FILE_ENV=\"./ci/test/00_setup_env_mac_host.sh\""
      },
      {
        "sha": "86b517a6120ccf7036aef3e1bea936612cc5b3b0",
        "filename": ".tx/config",
        "status": "removed",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,7 +0,0 @@\n-[main]\n-host = https://www.transifex.com\n-\n-[bitcoin.qt-translation-021x]\n-file_filter = src/qt/locale/bitcoin_<lang>.ts\n-source_file = src/qt/locale/bitcoin_en.ts\n-source_lang = en"
      },
      {
        "sha": "24a80fb35d28a2427628d8dc35ff5ec0ac4fb4b1",
        "filename": "CODEOWNERS",
        "status": "removed",
        "additions": 0,
        "deletions": 136,
        "changes": 136,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/CODEOWNERS",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/CODEOWNERS",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CODEOWNERS?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,136 +0,0 @@\n-# ==============================================================================\n-#                          Bitcoin Core CODEOWNERS\n-# ==============================================================================\n-\n-# Configuration of code ownership and review approvals for the bitcoin/bitcoin\n-# repo.\n-\n-# Order is important; the last matching pattern takes the most precedence.\n-# More info on how this file works can be found at:\n-# https://help.github.com/articles/about-codeowners/\n-\n-# This file is called CODEOWNERS because it is a magic file for GitHub to\n-# automatically suggest reviewers. In this project's case, the names below\n-# should be thought of as code reviewers rather than owners. Regular\n-# contributors are free to add their names to specific directories or files\n-# provided that they are willing to provide a review when automatically\n-# assigned.\n-\n-# Absence from this list should not be interpreted as a discouragement to\n-# review a pull request. Peer review is always welcome and is a critical\n-# component of the progress of the codebase. Information on peer review\n-# guidelines can be found in the CONTRIBUTING.md doc.\n-\n-\n-# Maintainers\n-#   @laanwj\n-#   @sipa\n-#   @fanquake\n-#   @jonasschnelli\n-#   @marcofalke\n-#   @meshcollider\n-\n-# Docs\n-/doc/*[a-zA-Z-].md                          @harding\n-/doc/Doxyfile.in                            @fanquake\n-/doc/REST-interface.md                      @jonasschnelli\n-/doc/benchmarking.md                        @ariard\n-/doc/bitcoin-conf.md                        @hebasto\n-/doc/build-freebsd.md                       @fanquake\n-/doc/build-netbsd.md                        @fanquake\n-/doc/build-openbsd.md                       @laanwj\n-/doc/build-osx.md                           @fanquake\n-/doc/build-unix.md                          @laanwj\n-/doc/build-windows.md                       @sipsorcery\n-/doc/dependencies.md                        @fanquake\n-/doc/developer-notes.md                     @laanwj\n-/doc/files.md                               @hebasto\n-/doc/gitian-building.md                     @laanwj\n-/doc/reduce-memory.md                       @fanquake\n-/doc/reduce-traffic.md                      @jonasschnelli\n-/doc/release-process.md                     @laanwj\n-/doc/translation_strings_policy.md          @laanwj\n-\n-# Build aux\n-/build-aux/m4/bitcoin_qt.m4                 @hebasto\n-\n-# MSVC build system\n-/build_msvc/                                @sipsorcery\n-\n-# Settings\n-/src/util/settings.*                        @ryanofsky\n-\n-# Fuzzing\n-/src/test/fuzz/                             @practicalswift\n-/doc/fuzzing.md                             @practicalswift\n-\n-# Test framework\n-/test/functional/mempool_updatefromblock.py @hebasto\n-/test/functional/feature_asmap.py           @jonatack\n-/test/functional/interface_bitcoin_cli.py   @jonatack\n-/test/functional/tool_wallet.py             @jonatack\n-\n-# Translations\n-/src/util/translation.h                     @hebasto\n-\n-# Dev Tools\n-/contrib/devtools/security-check.py         @fanquake\n-/contrib/devtools/test-security-check.py    @fanquake\n-/contrib/devtools/symbol-check.py           @fanquake\n-\n-# Gitian/Guix\n-/contrib/gitian-build.py                    @hebasto\n-/contrib/guix/                              @dongcarl\n-\n-# Compatibility\n-/src/compat/glibc_*                         @fanquake\n-\n-# GUI\n-/src/qt/forms/                              @hebasto\n-\n-# Wallet\n-/src/wallet/                                @achow101\n-\n-# CLI\n-/src/bitcoin-cli.cpp                        @jonatack\n-\n-# Coinstats\n-/src/node/coinstats.*                       @fjahr\n-\n-# Index\n-/src/index/                                 @fjahr\n-\n-# Descriptors\n-*descriptor*                                @achow101 @sipa\n-\n-# Interfaces\n-/src/interfaces/                            @ryanofsky\n-\n-# DB\n-/src/txdb.*                                 @jamesob\n-/src/dbwrapper.*                            @jamesob\n-\n-# Scripts/Linter\n-*.sh                                        @practicalswift\n-/test/lint/                                 @practicalswift\n-/test/lint/lint-shell.sh                    @hebasto\n-\n-# Bech32\n-/src/bech32.*                               @sipa\n-/src/bench/bech32.*                         @sipa\n-\n-# PSBT\n-/src/psbt*                                  @achow101\n-/src/node/psbt*                             @achow101\n-/doc/psbt.md                                @achow101\n-\n-# P2P\n-/src/net_processing.*                       @sipa\n-/src/protocol.*                             @sipa\n-\n-# Consensus\n-/src/coins.*                                @sipa @jamesob\n-/src/script/script.*                        @sipa\n-/src/script/interpreter.*                   @sipa\n-/src/validation.*                           @sipa\n-/src/consensus/                             @sipa"
      },
      {
        "sha": "2e114743822562f45432d1f9f634eec70e49022a",
        "filename": "CONTRIBUTING.md",
        "status": "removed",
        "additions": 0,
        "deletions": 436,
        "changes": 436,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,436 +0,0 @@\n-Contributing to Bitcoin Core\n-============================\n-\n-The Bitcoin Core project operates an open contributor model where anyone is\n-welcome to contribute towards development in the form of peer review, testing\n-and patches. This document explains the practical process and guidelines for\n-contributing.\n-\n-First, in terms of structure, there is no particular concept of \"Bitcoin Core\n-developers\" in the sense of privileged people. Open source often naturally\n-revolves around a meritocracy where contributors earn trust from the developer\n-community over time. Nevertheless, some hierarchy is necessary for practical\n-purposes. As such, there are repository \"maintainers\" who are responsible for\n-merging pull requests, as well as a \"lead maintainer\" who is responsible for the\n-release cycle as well as overall merging, moderation and appointment of\n-maintainers.\n-\n-Getting Started\n----------------\n-\n-New contributors are very welcome and needed.\n-\n-Reviewing and testing is highly valued and the most effective way you can contribute\n-as a new contributor. It also will teach you much more about the code and\n-process than opening pull requests. Please refer to the [peer review](#peer-review)\n-section below.\n-\n-Before you start contributing, familiarize yourself with the Bitcoin Core build\n-system and tests. Refer to the documentation in the repository on how to build\n-Bitcoin Core and how to run the unit tests, functional tests, and fuzz tests.\n-\n-There are many open issues of varying difficulty waiting to be fixed.\n-If you're looking for somewhere to start contributing, check out the\n-[good first issue](https://github.com/bitcoin/bitcoin/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22)\n-list or changes that are\n-[up for grabs](https://github.com/bitcoin/bitcoin/issues?utf8=%E2%9C%93&q=label%3A%22Up+for+grabs%22).\n-Some of them might no longer be applicable. So if you are interested, but\n-unsure, you might want to leave a comment on the issue first.\n-\n-You may also participate in the weekly\n-[Bitcoin Core PR Review Club](https://bitcoincore.reviews/) meeting.\n-\n-### Good First Issue Label\n-\n-The purpose of the `good first issue` label is to highlight which issues are\n-suitable for a new contributor without a deep understanding of the codebase.\n-\n-However, good first issues can be solved by anyone. If they remain unsolved\n-for a longer time, a frequent contributor might address them.\n-\n-You do not need to request permission to start working on an issue. However,\n-you are encouraged to leave a comment if you are planning to work on it. This\n-will help other contributors monitor which issues are actively being addressed\n-and is also an effective way to request assistance if and when you need it.\n-\n-Communication Channels\n-----------------------\n-\n-Most communication about Bitcoin Core development happens on IRC, in the\n-`#bitcoin-core-dev` channel on Freenode. The easiest way to participate on IRC is\n-with the web client, [webchat.freenode.net](https://webchat.freenode.net/). Chat\n-history logs can be found\n-on [http://www.erisian.com.au/bitcoin-core-dev/](http://www.erisian.com.au/bitcoin-core-dev/)\n-and [http://gnusha.org/bitcoin-core-dev/](http://gnusha.org/bitcoin-core-dev/).\n-\n-Discussion about codebase improvements happens in GitHub issues and pull\n-requests.\n-\n-The developer\n-[mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n-should be used to discuss complicated or controversial consensus or P2P protocol changes before working on\n-a patch set.\n-\n-\n-Contributor Workflow\n---------------------\n-\n-The codebase is maintained using the \"contributor workflow\" where everyone\n-without exception contributes patch proposals using \"pull requests\" (PRs). This\n-facilitates social contribution, easy testing and peer review.\n-\n-To contribute a patch, the workflow is as follows:\n-\n-  1. Fork repository ([only for the first time](https://help.github.com/en/articles/fork-a-repo))\n-  1. Create topic branch\n-  1. Commit patches\n-\n-For GUI-related issues or pull requests, the https://github.com/bitcoin-core/gui repository should be used.\n-For all other issues and pull requests, the https://github.com/bitcoin/bitcoin node repository should be used.\n-\n-The master branch for all monotree repositories is identical.\n-\n-As a rule of thumb, everything that only modifies `src/qt` is a GUI-only pull\n-request. However:\n-\n-* For global refactoring or other transversal changes the node repository\n-  should be used.\n-* For GUI-related build system changes, the node repository should be used\n-  because the change needs review by the build systems reviewers.\n-* Changes in `src/interfaces` need to go to the node repository because they\n-  might affect other components like the wallet.\n-\n-For large GUI changes that include build system and interface changes, it is\n-recommended to first open a pull request against the GUI repository. When there\n-is agreement to proceed with the changes, a pull request with the build system\n-and interfaces changes can be submitted to the node repository.\n-\n-The project coding conventions in the [developer notes](doc/developer-notes.md)\n-must be followed.\n-\n-### Committing Patches\n-\n-In general, [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention)\n-and diffs should be easy to read. For this reason, do not mix any formatting\n-fixes or code moves with actual code changes.\n-\n-Make sure each individual commit is hygienic: that it builds successfully on its\n-own without warnings, errors, regressions, or test failures.\n-\n-Commit messages should be verbose by default consisting of a short subject line\n-(50 chars max), a blank line and detailed explanatory text as separate\n-paragraph(s), unless the title alone is self-explanatory (like \"Corrected typo\n-in init.cpp\") in which case a single title line is sufficient. Commit messages should be\n-helpful to people reading your code in the future, so explain the reasoning for\n-your decisions. Further explanation [here](https://chris.beams.io/posts/git-commit/).\n-\n-If a particular commit references another issue, please add the reference. For\n-example: `refs #1234` or `fixes #4321`. Using the `fixes` or `closes` keywords\n-will cause the corresponding issue to be closed when the pull request is merged.\n-\n-Commit messages should never contain any `@` mentions (usernames prefixed with \"@\").\n-\n-Please refer to the [Git manual](https://git-scm.com/doc) for more information\n-about Git.\n-\n-  - Push changes to your fork\n-  - Create pull request\n-\n-### Creating the Pull Request\n-\n-The title of the pull request should be prefixed by the component or area that\n-the pull request affects. Valid areas as:\n-\n-  - `consensus` for changes to consensus critical code\n-  - `doc` for changes to the documentation\n-  - `qt` or `gui` for changes to bitcoin-qt\n-  - `log` for changes to log messages\n-  - `mining` for changes to the mining code\n-  - `net` or `p2p` for changes to the peer-to-peer network code\n-  - `refactor` for structural changes that do not change behavior\n-  - `rpc`, `rest` or `zmq` for changes to the RPC, REST or ZMQ APIs\n-  - `script` for changes to the scripts and tools\n-  - `test`, `qa` or `ci` for changes to the unit tests, QA tests or CI code\n-  - `util` or `lib` for changes to the utils or libraries\n-  - `wallet` for changes to the wallet code\n-  - `build` for changes to the GNU Autotools or reproducible builds\n-\n-Examples:\n-\n-    consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n-    net: Automatically create onion service, listen on Tor\n-    qt: Add feed bump button\n-    log: Fix typo in log message\n-\n-The body of the pull request should contain sufficient description of *what* the\n-patch does, and even more importantly, *why*, with justification and reasoning.\n-You should include references to any discussions (for example, other issues or\n-mailing list discussions).\n-\n-The description for a new pull request should not contain any `@` mentions. The\n-PR description will be included in the commit message when the PR is merged and\n-any users mentioned in the description will be annoyingly notified each time a\n-fork of Bitcoin Core copies the merge. Instead, make any username mentions in a\n-subsequent comment to the PR.\n-\n-### Translation changes\n-\n-Note that translations should not be submitted as pull requests. Please see\n-[Translation Process](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md)\n-for more information on helping with translations.\n-\n-### Work in Progress Changes and Requests for Comments\n-\n-If a pull request is not to be considered for merging (yet), please\n-prefix the title with [WIP] or use [Tasks Lists](https://help.github.com/articles/basic-writing-and-formatting-syntax/#task-lists)\n-in the body of the pull request to indicate tasks are pending.\n-\n-### Address Feedback\n-\n-At this stage, one should expect comments and review from other contributors. You\n-can add more commits to your pull request by committing them locally and pushing\n-to your fork until you have satisfied all feedback.\n-\n-Note: Code review is a burdensome but important part of the development process, and as such, certain types of pull requests are rejected. In general, if the **improvements** do not warrant the **review effort** required, the PR has a high chance of being rejected. It is up to the PR author to convince the reviewers that the changes warrant the review effort, and if reviewers are \"Concept NACK'ing\" the PR, the author may need to present arguments and/or do research backing their suggested changes.\n-\n-### Squashing Commits\n-\n-If your pull request contains fixup commits (commits that change the same line of code repeatedly) or too fine-grained\n-commits, you may be asked to [squash](https://git-scm.com/docs/git-rebase#_interactive_mode) your commits\n-before it will be merged. The basic squashing workflow is shown below.\n-\n-    git checkout your_branch_name\n-    git rebase -i HEAD~n\n-    # n is normally the number of commits in the pull request.\n-    # Set commits (except the one in the first line) from 'pick' to 'squash', save and quit.\n-    # On the next screen, edit/refine commit messages.\n-    # Save and quit.\n-    git push -f # (force push to GitHub)\n-\n-Please update the resulting commit message, if needed. It should read as a\n-coherent message. In most cases, this means not just listing the interim\n-commits.\n-\n-If you have problems with squashing or other git workflows, you can enable\n-\"Allow edits from maintainers\" in the right-hand sidebar of the GitHub web\n-interface and ask for help in the pull request.\n-\n-Please refrain from creating several pull requests for the same change.\n-Use the pull request that is already open (or was created earlier) to amend\n-changes. This preserves the discussion and review that happened earlier for\n-the respective change set.\n-\n-The length of time required for peer review is unpredictable and will vary from\n-pull request to pull request.\n-\n-### Rebasing Changes\n-\n-When a pull request conflicts with the target branch, you may be asked to rebase it on top of the current target branch.\n-The `git rebase` command will take care of rebuilding your commits on top of the new base.\n-\n-This project aims to have a clean git history, where code changes are only made in non-merge commits. This simplifies\n-auditability because merge commits can be assumed to not contain arbitrary code changes. Merge commits should be signed,\n-and the resulting git tree hash must be deterministic and reproducible. The script in\n-[/contrib/verify-commits](/contrib/verify-commits) checks that.\n-\n-After a rebase, reviewers are encouraged to sign off on the force push. This should be relatively straightforward with\n-the `git range-diff` tool explained in the [productivity\n-notes](/doc/productivity.md#diff-the-diffs-with-git-range-diff). To avoid needless review churn, maintainers will\n-generally merge pull requests that received the most review attention first.\n-\n-Pull Request Philosophy\n------------------------\n-\n-Patchsets should always be focused. For example, a pull request could add a\n-feature, fix a bug, or refactor code; but not a mixture. Please also avoid super\n-pull requests which attempt to do too much, are overly large, or overly complex\n-as this makes review difficult.\n-\n-\n-### Features\n-\n-When adding a new feature, thought must be given to the long term technical debt\n-and maintenance that feature may require after inclusion. Before proposing a new\n-feature that will require maintenance, please consider if you are willing to\n-maintain it (including bug fixing). If features get orphaned with no maintainer\n-in the future, they may be removed by the Repository Maintainer.\n-\n-\n-### Refactoring\n-\n-Refactoring is a necessary part of any software project's evolution. The\n-following guidelines cover refactoring pull requests for the project.\n-\n-There are three categories of refactoring: code-only moves, code style fixes, and\n-code refactoring. In general, refactoring pull requests should not mix these\n-three kinds of activities in order to make refactoring pull requests easy to\n-review and uncontroversial. In all cases, refactoring PRs must not change the\n-behaviour of code within the pull request (bugs must be preserved as is).\n-\n-Project maintainers aim for a quick turnaround on refactoring pull requests, so\n-where possible keep them short, uncomplex and easy to verify.\n-\n-Pull requests that refactor the code should not be made by new contributors. It\n-requires a certain level of experience to know where the code belongs to and to\n-understand the full ramification (including rebase effort of open pull requests).\n-\n-Trivial pull requests or pull requests that refactor the code with no clear\n-benefits may be immediately closed by the maintainers to reduce unnecessary\n-workload on reviewing.\n-\n-\n-\"Decision Making\" Process\n--------------------------\n-\n-The following applies to code changes to the Bitcoin Core project (and related\n-projects such as libsecp256k1), and is not to be confused with overall Bitcoin\n-Network Protocol consensus changes.\n-\n-Whether a pull request is merged into Bitcoin Core rests with the project merge\n-maintainers and ultimately the project lead.\n-\n-Maintainers will take into consideration if a patch is in line with the general\n-principles of the project; meets the minimum standards for inclusion; and will\n-judge the general consensus of contributors.\n-\n-In general, all pull requests must:\n-\n-  - Have a clear use case, fix a demonstrable bug or serve the greater good of\n-    the project (for example refactoring for modularisation);\n-  - Be well peer-reviewed;\n-  - Have unit tests, functional tests, and fuzz tests, where appropriate;\n-  - Follow code style guidelines ([C++](doc/developer-notes.md), [functional tests](test/functional/README.md));\n-  - Not break the existing test suite;\n-  - Where bugs are fixed, where possible, there should be unit tests\n-    demonstrating the bug and also proving the fix. This helps prevent regression.\n-  - Change relevant comments and documentation when behaviour of code changes.\n-\n-Patches that change Bitcoin consensus rules are considerably more involved than\n-normal because they affect the entire ecosystem and so must be preceded by\n-extensive mailing list discussions and have a numbered BIP. While each case will\n-be different, one should be prepared to expend more time and effort than for\n-other kinds of patches because of increased peer review and consensus building\n-requirements.\n-\n-\n-### Peer Review\n-\n-Anyone may participate in peer review which is expressed by comments in the pull\n-request. Typically reviewers will review the code for obvious errors, as well as\n-test out the patch set and opine on the technical merits of the patch. Project\n-maintainers take into account the peer review when determining if there is\n-consensus to merge a pull request (remember that discussions may have been\n-spread out over GitHub, mailing list and IRC discussions).\n-\n-#### Conceptual Review\n-\n-A review can be a conceptual review, where the reviewer leaves a comment\n- * `Concept (N)ACK`, meaning \"I do (not) agree with the general goal of this pull\n-   request\",\n- * `Approach (N)ACK`, meaning `Concept ACK`, but \"I do (not) agree with the\n-   approach of this change\".\n-\n-A `NACK` needs to include a rationale why the change is not worthwhile.\n-NACKs without accompanying reasoning may be disregarded.\n-\n-#### Code Review\n-\n-After conceptual agreement on the change, code review can be provided. A review\n-begins with `ACK BRANCH_COMMIT`, where `BRANCH_COMMIT` is the top of the PR\n-branch, followed by a description of how the reviewer did the review. The\n-following language is used within pull request comments:\n-\n-  - \"I have tested the code\", involving change-specific manual testing in\n-    addition to running the unit, functional, or fuzz tests, and in case it is\n-    not obvious how the manual testing was done, it should be described;\n-  - \"I have not tested the code, but I have reviewed it and it looks\n-    OK, I agree it can be merged\";\n-  - A \"nit\" refers to a trivial, often non-blocking issue.\n-\n-Project maintainers reserve the right to weigh the opinions of peer reviewers\n-using common sense judgement and may also weigh based on merit. Reviewers that\n-have demonstrated a deeper commitment and understanding of the project over time\n-or who have clear domain expertise may naturally have more weight, as one would\n-expect in all walks of life.\n-\n-Where a patch set affects consensus-critical code, the bar will be much\n-higher in terms of discussion and peer review requirements, keeping in mind that\n-mistakes could be very costly to the wider community. This includes refactoring\n-of consensus-critical code.\n-\n-Where a patch set proposes to change the Bitcoin consensus, it must have been\n-discussed extensively on the mailing list and IRC, be accompanied by a widely\n-discussed BIP and have a generally widely perceived technical consensus of being\n-a worthwhile change based on the judgement of the maintainers.\n-\n-### Finding Reviewers\n-\n-As most reviewers are themselves developers with their own projects, the review\n-process can be quite lengthy, and some amount of patience is required. If you find\n-that you've been waiting for a pull request to be given attention for several\n-months, there may be a number of reasons for this, some of which you can do something\n-about:\n-\n-  - It may be because of a feature freeze due to an upcoming release. During this time,\n-    only bug fixes are taken into consideration. If your pull request is a new feature,\n-    it will not be prioritized until after the release. Wait for the release.\n-  - It may be because the changes you are suggesting do not appeal to people. Rather than\n-    nits and critique, which require effort and means they care enough to spend time on your\n-    contribution, thundering silence is a good sign of widespread (mild) dislike of a given change\n-    (because people don't assume *others* won't actually like the proposal). Don't take\n-    that personally, though! Instead, take another critical look at what you are suggesting\n-    and see if it: changes too much, is too broad, doesn't adhere to the\n-    [developer notes](doc/developer-notes.md), is dangerous or insecure, is messily written, etc.\n-    Identify and address any of the issues you find. Then ask e.g. on IRC if someone could give\n-    their opinion on the concept itself.\n-  - It may be because your code is too complex for all but a few people, and those people\n-    may not have realized your pull request even exists. A great way to find people who\n-    are qualified and care about the code you are touching is the\n-    [Git Blame feature](https://help.github.com/articles/tracing-changes-in-a-file/). Simply\n-    look up who last modified the code you are changing and see if you can find\n-    them and give them a nudge. Don't be incessant about the nudging, though.\n-  - Finally, if all else fails, ask on IRC or elsewhere for someone to give your pull request\n-    a look. If you think you've been waiting for an unreasonably long time (say,\n-    more than a month) for no particular reason (a few lines changed, etc.),\n-    this is totally fine. Try to return the favor when someone else is asking\n-    for feedback on their code, and the universe balances out.\n-  - Remember that the best thing you can do while waiting is give review to others!\n-\n-\n-Backporting\n------------\n-\n-Security and bug fixes can be backported from `master` to release\n-branches.\n-If the backport is non-trivial, it may be appropriate to open an\n-additional PR to backport the change, but only after the original PR\n-has been merged.\n-Otherwise, backports will be done in batches and\n-the maintainers will use the proper `Needs backport (...)` labels\n-when needed (the original author does not need to worry about it).\n-\n-A backport should contain the following metadata in the commit body:\n-\n-```\n-Github-Pull: #<PR number>\n-Rebased-From: <commit hash of the original commit>\n-```\n-\n-Have a look at [an example backport PR](\n-https://github.com/bitcoin/bitcoin/pull/16189).\n-\n-Also see the [backport.py script](\n-https://github.com/bitcoin-core/bitcoin-maintainer-tools#backport).\n-\n-Release Policy\n---------------\n-\n-The project leader is the release manager for each Bitcoin Core release.\n-\n-Copyright\n----------\n-\n-By contributing to this repository, you agree to license your work under the\n-MIT license unless specified otherwise in `contrib/debian/copyright` or at\n-the top of the file itself. Any work contributed where you are not the original\n-author must contain its license header with the original author(s) and source."
      },
      {
        "sha": "5ea3b90c531137d5feb363cdf28206cea091b314",
        "filename": "COPYING_",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/COPYING_",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/COPYING_",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING_?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,27 +0,0 @@\n-The MIT License (MIT)\n-\n-<<<<<<< HEAD\n-Copyright (c) 2009-2020 The Bitcoin Core developers\n-Copyright (c) 2009-2020 Bitcoin Developers\n-=======\n-Copyright (c) 2009-2017 The Satoshi Bitcoin Core developers\n-Copyright (c) 2009-2017 Satoshi Bitcoin Developers\n->>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n-\n-Permission is hereby granted, free of charge, to any person obtaining a copy\n-of this software and associated documentation files (the \"Software\"), to deal\n-in the Software without restriction, including without limitation the rights\n-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n-copies of the Software, and to permit persons to whom the Software is\n-furnished to do so, subject to the following conditions:\n-\n-The above copyright notice and this permission notice shall be included in\n-all copies or substantial portions of the Software.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n-THE SOFTWARE."
      },
      {
        "sha": "520a47d96078dfa80cec83d03146c9349d6369c1",
        "filename": "INSTALL.md_",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/INSTALL.md_",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/INSTALL.md_",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL.md_?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,5 +0,0 @@\n-Building Bitcoin\n-================\n-\n-See doc/build-*.md for instructions on building the various\n-elements of the Bitcoin Core reference implementation of Bitcoin."
      },
      {
        "sha": "c8af4228f35c76aa18ce0b9eb9a90f4aa1cb1a72",
        "filename": "Makefile.am_",
        "status": "removed",
        "additions": 0,
        "deletions": 362,
        "changes": 362,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/Makefile.am_",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/Makefile.am_",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am_?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,362 +0,0 @@\n-# Copyright (c) 2013-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# Pattern rule to print variables, e.g. make print-top_srcdir\n-print-%:\n-\t@echo $* = $($*)\n-\n-ACLOCAL_AMFLAGS = -I build-aux/m4\n-SUBDIRS = src\n-if ENABLE_MAN\n-SUBDIRS += doc/man\n-endif\n-.PHONY: deploy FORCE\n-\n-export PYTHONPATH\n-\n-if BUILD_BITCOIN_LIBS\n-pkgconfigdir = $(libdir)/pkgconfig\n-pkgconfig_DATA = libbitcoinconsensus.pc\n-endif\n-\n-BITCOIND_BIN=$(top_builddir)/src/$(BITCOIN_DAEMON_NAME)$(EXEEXT)\n-BITCOIN_QT_BIN=$(top_builddir)/src/qt/$(BITCOIN_GUI_NAME)$(EXEEXT)\n-BITCOIN_CLI_BIN=$(top_builddir)/src/$(BITCOIN_CLI_NAME)$(EXEEXT)\n-BITCOIN_TX_BIN=$(top_builddir)/src/$(BITCOIN_TX_NAME)$(EXEEXT)\n-BITCOIN_WALLET_BIN=$(top_builddir)/src/$(BITCOIN_WALLET_TOOL_NAME)$(EXEEXT)\n-BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win64-setup$(EXEEXT)\n-\n-empty :=\n-space := $(empty) $(empty)\n-\n-OSX_APP=Bitcoin-Qt.app\n-OSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))\n-OSX_DMG = $(OSX_VOLNAME).dmg\n-OSX_BACKGROUND_SVG=background.svg\n-OSX_BACKGROUND_IMAGE=background.tiff\n-OSX_BACKGROUND_IMAGE_DPIS=36 72\n-OSX_DSSTORE_GEN=$(top_srcdir)/contrib/macdeploy/custom_dsstore.py\n-OSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus\n-OSX_FANCY_PLIST=$(top_srcdir)/contrib/macdeploy/fancy.plist\n-OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n-OSX_PLIST=$(top_builddir)/share/qt/Info.plist #not installed\n-OSX_QT_TRANSLATIONS = ar,bg,ca,cs,da,de,es,fa,fi,fr,gd,gl,he,hu,it,ja,ko,lt,lv,pl,pt,ru,sk,sl,sv,uk,zh_CN,zh_TW\n-\n-DIST_CONTRIB = \\\n-\t       $(top_srcdir)/contrib/linearize/linearize-data.py \\\n-\t       $(top_srcdir)/contrib/linearize/linearize-hashes.py\n-\n-DIST_SHARE = \\\n-  $(top_srcdir)/share/genbuild.sh \\\n-  $(top_srcdir)/share/rpcauth\n-\n-BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n-           $(top_srcdir)/contrib/devtools/security-check.py\n-\n-WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n-  $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n-  $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n-  $(top_srcdir)/doc/README_windows.txt\n-\n-OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n-  $(top_srcdir)/contrib/macdeploy/$(OSX_BACKGROUND_SVG) \\\n-  $(OSX_DSSTORE_GEN) \\\n-  $(top_srcdir)/contrib/macdeploy/detached-sig-apply.sh \\\n-  $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n-\n-COVERAGE_INFO = $(COV_TOOL_WRAPPER) baseline.info \\\n-  test_bitcoin_filtered.info total_coverage.info \\\n-  baseline_filtered.info functional_test.info functional_test_filtered.info \\\n-  test_bitcoin_coverage.info test_bitcoin.info fuzz.info fuzz_filtered.info fuzz_coverage.info\n-\n-dist-hook:\n-\t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n-\n-$(BITCOIN_WIN_INSTALLER): all-recursive\n-\t$(MKDIR_P) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_TX_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_WALLET_BIN) $(top_builddir)/release\n-\t@test -f $(MAKENSIS) && echo 'OutFile \"$@\"' | cat $(top_builddir)/share/setup.nsi - | $(MAKENSIS) -V2 - || \\\n-\t  echo error: could not build $@\n-\t@echo built $@\n-\n-$(OSX_APP)/Contents/PkgInfo:\n-\t$(MKDIR_P) $(@D)\n-\t@echo \"APPL????\" > $@\n-\n-$(OSX_APP)/Contents/Resources/empty.lproj:\n-\t$(MKDIR_P) $(@D)\n-\t@touch $@\n-\n-$(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n-\t$(MKDIR_P) $(@D)\n-\t$(INSTALL_DATA) $< $@\n-\n-$(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n-\t$(MKDIR_P) $(@D)\n-\t$(INSTALL_DATA) $< $@\n-\n-$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: all-recursive\n-\t$(MKDIR_P) $(@D)\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $(BITCOIN_QT_BIN) $@\n-\n-$(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n-\t$(MKDIR_P) $(@D)\n-\techo '{\tCFBundleDisplayName = \"$(PACKAGE_NAME)\"; CFBundleName = \"$(PACKAGE_NAME)\"; }' > $@\n-\n-OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n-  $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n-  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n-\n-osx_volname:\n-\techo $(OSX_VOLNAME) >$@\n-\n-if BUILD_DARWIN\n-$(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING) $(OSX_BACKGROUND_IMAGE)\n-\t$(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2 -volname $(OSX_VOLNAME)\n-\n-$(OSX_BACKGROUND_IMAGE).png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n-\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 36 -p 36 -o $@\n-$(OSX_BACKGROUND_IMAGE)@2x.png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n-\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 72 -p 72 -o $@\n-$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE).png $(OSX_BACKGROUND_IMAGE)@2x.png\n-\ttiffutil -cathidpicheck $^ -out $@\n-\n-deploydir: $(OSX_DMG)\n-else\n-APP_DIST_DIR=$(top_builddir)/dist\n-APP_DIST_EXTRAS=$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE) $(APP_DIST_DIR)/.DS_Store $(APP_DIST_DIR)/Applications\n-\n-$(APP_DIST_DIR)/Applications:\n-\t@rm -f $@\n-\t@cd $(@D); $(LN_S) /Applications $(@F)\n-\n-$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n-\n-$(OSX_DMG): $(APP_DIST_EXTRAS)\n-\t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n-\n-dpi%.$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n-\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d $* -p $* | $(IMAGEMAGICK_CONVERT) - $@\n-OSX_BACKGROUND_IMAGE_DPIFILES := $(foreach dpi,$(OSX_BACKGROUND_IMAGE_DPIS),dpi$(dpi).$(OSX_BACKGROUND_IMAGE))\n-$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIFILES)\n-\t$(MKDIR_P) $(@D)\n-\t$(TIFFCP) -c none $(OSX_BACKGROUND_IMAGE_DPIFILES) $@\n-\n-$(APP_DIST_DIR)/.DS_Store: $(OSX_DSSTORE_GEN)\n-\t$(PYTHON) $< \"$@\" \"$(OSX_VOLNAME)\"\n-\n-$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n-\tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n-\n-deploydir: $(APP_DIST_EXTRAS)\n-endif\n-\n-if TARGET_DARWIN\n-appbundle: $(OSX_APP_BUILT)\n-deploy: $(OSX_DMG)\n-endif\n-if TARGET_WINDOWS\n-deploy: $(BITCOIN_WIN_INSTALLER)\n-endif\n-\n-$(BITCOIN_QT_BIN): FORCE\n-\t$(MAKE) -C src qt/$(@F)\n-\n-$(BITCOIND_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-$(BITCOIN_CLI_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-$(BITCOIN_TX_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-$(BITCOIN_WALLET_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-if USE_LCOV\n-LCOV_FILTER_PATTERN = \\\n-\t-p \"/usr/local/\" \\\n-\t-p \"/usr/include/\" \\\n-\t-p \"/usr/lib/\" \\\n-\t-p \"/usr/lib64/\" \\\n-\t-p \"src/leveldb/\" \\\n-\t-p \"src/crc32c/\" \\\n-\t-p \"src/bench/\" \\\n-\t-p \"src/univalue\" \\\n-\t-p \"src/crypto/ctaes\" \\\n-\t-p \"src/secp256k1\" \\\n-\t-p \"depends\"\n-\n-DIR_FUZZ_SEED_CORPUS ?= qa-assets/fuzz_seed_corpus\n-\n-$(COV_TOOL_WRAPPER):\n-\t@echo 'exec $(COV_TOOL) \"$$@\"' > $(COV_TOOL_WRAPPER)\n-\t@chmod +x $(COV_TOOL_WRAPPER)\n-\n-baseline.info: $(COV_TOOL_WRAPPER)\n-\t$(LCOV) -c -i -d $(abs_builddir)/src -o $@\n-\n-baseline_filtered.info: baseline.info\n-\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n-\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n-\n-fuzz.info: baseline_filtered.info\n-\t@TIMEOUT=15 test/fuzz/test_runner.py $(DIR_FUZZ_SEED_CORPUS) -l DEBUG\n-\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src --t fuzz-tests -o $@\n-\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n-\n-fuzz_filtered.info: fuzz.info\n-\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n-\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n-\n-test_bitcoin.info: baseline_filtered.info\n-\t$(MAKE) -C src/ check\n-\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src -t test_bitcoin -o $@\n-\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n-\n-test_bitcoin_filtered.info: test_bitcoin.info\n-\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n-\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n-\n-functional_test.info: test_bitcoin_filtered.info\n-\t@TIMEOUT=15 test/functional/test_runner.py $(EXTENDED_FUNCTIONAL_TESTS)\n-\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src --t functional-tests -o $@\n-\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n-\n-functional_test_filtered.info: functional_test.info\n-\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n-\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n-\n-fuzz_coverage.info: fuzz_filtered.info\n-\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a fuzz_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n-\n-test_bitcoin_coverage.info: baseline_filtered.info test_bitcoin_filtered.info\n-\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n-\n-total_coverage.info: test_bitcoin_filtered.info functional_test_filtered.info\n-\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -a functional_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n-\n-fuzz.coverage/.dirstamp: fuzz_coverage.info\n-\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n-\t@touch $@\n-\n-test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n-\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n-\t@touch $@\n-\n-total.coverage/.dirstamp: total_coverage.info\n-\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n-\t@touch $@\n-\n-cov_fuzz: fuzz.coverage/.dirstamp\n-\n-cov: test_bitcoin.coverage/.dirstamp total.coverage/.dirstamp\n-\n-endif\n-\n-dist_noinst_SCRIPTS = autogen.sh\n-\n-EXTRA_DIST = $(DIST_SHARE) $(DIST_CONTRIB) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n-\n-EXTRA_DIST += \\\n-    test/functional \\\n-    test/fuzz\n-\n-EXTRA_DIST += \\\n-    test/util/bitcoin-util-test.py \\\n-    test/util/data/bitcoin-util-test.json \\\n-    test/util/data/blanktxv1.hex \\\n-    test/util/data/blanktxv1.json \\\n-    test/util/data/blanktxv2.hex \\\n-    test/util/data/blanktxv2.json \\\n-    test/util/data/tt-delin1-out.hex \\\n-    test/util/data/tt-delin1-out.json \\\n-    test/util/data/tt-delout1-out.hex \\\n-    test/util/data/tt-delout1-out.json \\\n-    test/util/data/tt-locktime317000-out.hex \\\n-    test/util/data/tt-locktime317000-out.json \\\n-    test/util/data/tx394b54bb.hex \\\n-    test/util/data/txcreate1.hex \\\n-    test/util/data/txcreate1.json \\\n-    test/util/data/txcreate2.hex \\\n-    test/util/data/txcreate2.json \\\n-    test/util/data/txcreatedata1.hex \\\n-    test/util/data/txcreatedata1.json \\\n-    test/util/data/txcreatedata2.hex \\\n-    test/util/data/txcreatedata2.json \\\n-    test/util/data/txcreatedata_seq0.hex \\\n-    test/util/data/txcreatedata_seq0.json \\\n-    test/util/data/txcreatedata_seq1.hex \\\n-    test/util/data/txcreatedata_seq1.json \\\n-    test/util/data/txcreatemultisig1.hex \\\n-    test/util/data/txcreatemultisig1.json \\\n-    test/util/data/txcreatemultisig2.hex \\\n-    test/util/data/txcreatemultisig2.json \\\n-    test/util/data/txcreatemultisig3.hex \\\n-    test/util/data/txcreatemultisig3.json \\\n-    test/util/data/txcreatemultisig4.hex \\\n-    test/util/data/txcreatemultisig4.json \\\n-    test/util/data/txcreatemultisig5.json \\\n-    test/util/data/txcreateoutpubkey1.hex \\\n-    test/util/data/txcreateoutpubkey1.json \\\n-    test/util/data/txcreateoutpubkey2.hex \\\n-    test/util/data/txcreateoutpubkey2.json \\\n-    test/util/data/txcreateoutpubkey3.hex \\\n-    test/util/data/txcreateoutpubkey3.json \\\n-    test/util/data/txcreatescript1.hex \\\n-    test/util/data/txcreatescript1.json \\\n-    test/util/data/txcreatescript2.hex \\\n-    test/util/data/txcreatescript2.json \\\n-    test/util/data/txcreatescript3.hex \\\n-    test/util/data/txcreatescript3.json \\\n-    test/util/data/txcreatescript4.hex \\\n-    test/util/data/txcreatescript4.json \\\n-    test/util/data/txcreatescript5.hex \\\n-    test/util/data/txcreatescript6.hex \\\n-    test/util/data/txcreatesignv1.hex \\\n-    test/util/data/txcreatesignv1.json \\\n-    test/util/data/txcreatesignv2.hex \\\n-    test/util/rpcauth-test.py\n-\n-CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n-\n-.INTERMEDIATE: $(COVERAGE_INFO)\n-\n-DISTCHECK_CONFIGURE_FLAGS = --enable-man\n-\n-doc/doxygen/.stamp: doc/Doxyfile FORCE\n-\t$(MKDIR_P) $(@D)\n-\t$(DOXYGEN) $^\n-\t$(AM_V_at) touch $@\n-\n-if HAVE_DOXYGEN\n-docs: doc/doxygen/.stamp\n-else\n-docs:\n-\t@echo \"error: doxygen not found\"\n-endif\n-\n-clean-docs:\n-\trm -rf doc/doxygen\n-\n-clean-local: clean-docs\n-\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ fuzz.coverage/ test/tmp/ cache/ $(OSX_APP)\n-\trm -rf test/functional/__pycache__ test/functional/test_framework/__pycache__ test/cache share/rpcauth/__pycache__\n-\trm -rf osx_volname dist/ dpi36.background.tiff dpi72.background.tiff\n-\n-test-security-check:\n-if TARGET_DARWIN\n-\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_MACHO\n-endif\n-if TARGET_WINDOWS\n-\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_PE\n-endif\n-if TARGET_LINUX\n-\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_ELF\n-endif"
      },
      {
        "sha": "a41ef5cd1a2bbd75a8f0399bbaba0be1151aea30",
        "filename": "README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 95,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,95 +0,0 @@\n-Satoshi Bitcoin 2 0 Core integration/staging tree\n-=====================================\n-\n-https://bitcoincore.org\n-\n-What is Satoshi Bitcoin?\n-----------------\n-\n-Satoshi Bitcoin is an experimental digital currency that enables instant payments to\n-anyone, anywhere in the world. Satoshi Bitcoin uses peer-to-peer technology to operate\n-with no central authority: managing transactions and issuing money are carried\n-out collectively by the network. Satoshi Bitcoin Core is the name of open source\n-software which enables the use of this currency.\n-\n-<<<<<<< HEAD\n-For more information, as well as an immediately usable, binary version of\n-the Bitcoin Core software, see https://bitcoincore.org/en/download/, or read the\n-=======\n-For more information, as well as an immediately useable, binary version of\n-the Satoshi Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n->>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n-[original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n-\n-License\n--------\n-\n-Satoshi Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n-information or see https://opensource.org/licenses/MIT.\n-\n-Development Process\n--------------------\n-\n-The `master` branch is regularly built (see `doc/build-*.md` for instructions) and tested, but it is not guaranteed to be\n-completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n-<<<<<<< HEAD\n-regularly from release branches to indicate new official, stable release versions of Bitcoin Core.\n-=======\n-regularly to indicate new official, stable release versions of Satoshi Bitcoin Core.\n-\n-The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n->>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n-\n-The https://github.com/bitcoin-core/gui repository is used exclusively for the\n-development of the GUI. Its master branch is identical in all monotree\n-repositories. Release branches and tags do not exist, so please do not fork\n-that repository unless it is for development reasons.\n-\n-The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md)\n-and useful hints for developers can be found in [doc/developer-notes.md](doc/developer-notes.md).\n-\n-Testing\n--------\n-\n-Testing and code review is the bottleneck for development; we get more pull\n-requests than we can review and test on short notice. Please be patient and help out by testing\n-other people's pull requests, and remember this is a security-critical project where any mistake might cost people\n-lots of money.\n-\n-### Automated Testing\n-\n-Developers are strongly encouraged to write [unit tests](src/test/README.md) for new code, and to\n-submit new unit tests for old code. Unit tests can be compiled and run\n-(assuming they weren't disabled in configure) with: `make check`. Further details on running\n-and extending unit tests can be found in [/src/test/README.md](/src/test/README.md).\n-\n-There are also [regression and integration tests](/test), written\n-in Python, that are run automatically on the build server.\n-These tests can be run (if the [test dependencies](/test) are installed) with: `test/functional/test_runner.py`\n-\n-The Travis CI system makes sure that every pull request is built for Windows, Linux, and macOS, and that unit/sanity tests are run automatically.\n-\n-### Manual Quality Assurance (QA) Testing\n-\n-Changes should be tested by somebody other than the developer who wrote the\n-code. This is especially important for large or high-risk changes. It is useful\n-to add a test plan to the pull request description if testing the changes is\n-not straightforward.\n-\n-Translations\n-------------\n-\n-Changes to translations as well as new translations can be submitted to\n-<<<<<<< HEAD\n-[Bitcoin Core's Transifex page](https://www.transifex.com/bitcoin/bitcoin/).\n-=======\n-[Satoshi Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n->>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n-\n-Translations are periodically pulled from Transifex and merged into the git repository. See the\n-[translation process](doc/translation_process.md) for details on how this works.\n-\n-**Important**: We do not accept translation changes as GitHub pull requests because the next\n-pull from Transifex would automatically overwrite them again.\n-\n-Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators)."
      },
      {
        "sha": "7ed96c7cea392323b4b50245087794f5cc7810f7",
        "filename": "SECURITY.md_",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/SECURITY.md_",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/SECURITY.md_",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/SECURITY.md_?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,20 +0,0 @@\n-# Security Policy\n-\n-## Supported Versions\n-\n-See our website for versions of Bitcoin Core that are currently supported with\n-security updates: https://bitcoincore.org/en/lifecycle/#schedule\n-\n-## Reporting a Vulnerability\n-\n-To report security issues send an email to security@bitcoincore.org (not for support).\n-\n-The following keys may be used to communicate sensitive information to developers:\n-\n-| Name | Fingerprint |\n-|------|-------------|\n-| Wladimir van der Laan | 71A3 B167 3540 5025 D447  E8F2 7481 0B01 2346 C9A6 |\n-| Jonas Schnelli | 32EE 5C4C 3FA1 5CCA DB46  ABE5 29D4 BCB6 416F 53EC |\n-| Pieter Wuille | 133E AC17 9436 F14A 5CF1  B794 860F EB80 4E66 9320 |\n-\n-You can import a key by running the following command with that individual\u2019s fingerprint: `gpg --recv-keys \"<fingerprint>\"` Ensure that you put quotes around fingerprints containing spaces."
      },
      {
        "sha": "de16260b563279aea0ae038ecd4250964e8bd540",
        "filename": "autogen.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,16 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2013-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-set -e\n-srcdir=\"$(dirname \"$0\")\"\n-cd \"$srcdir\"\n-if [ -z \"${LIBTOOLIZE}\" ] && GLIBTOOLIZE=\"$(command -v glibtoolize)\"; then\n-  LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n-  export LIBTOOLIZE\n-fi\n-command -v autoreconf >/dev/null || \\\n-  (echo \"configuration failed, please install autoconf first\" && exit 1)\n-autoreconf --install --force --warnings=all"
      },
      {
        "sha": "2ae33f71402aaf6a4c70212f3493354ecfb01ec8",
        "filename": "build-aux/m4/ax_boost_base.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 303,
        "changes": 303,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_base.m4?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,303 +0,0 @@\n-# ===========================================================================\n-#      https://www.gnu.org/software/autoconf-archive/ax_boost_base.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_BASE([MINIMUM-VERSION], [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n-#\n-# DESCRIPTION\n-#\n-#   Test for the Boost C++ libraries of a particular version (or newer)\n-#\n-#   If no path to the installed boost library is given the macro searchs\n-#   under /usr, /usr/local, /opt and /opt/local and evaluates the\n-#   $BOOST_ROOT environment variable. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_CPPFLAGS) / AC_SUBST(BOOST_LDFLAGS)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2009 Peter Adolphs\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 48\n-\n-# example boost program (need to pass version)\n-m4_define([_AX_BOOST_BASE_PROGRAM],\n-          [AC_LANG_PROGRAM([[\n-#include <boost/version.hpp>\n-]],[[\n-(void) ((void)sizeof(char[1 - 2*!!((BOOST_VERSION) < ($1))]));\n-]])])\n-\n-AC_DEFUN([AX_BOOST_BASE],\n-[\n-AC_ARG_WITH([boost],\n-  [AS_HELP_STRING([--with-boost@<:@=ARG@:>@],\n-    [use Boost library from a standard location (ARG=yes),\n-     from the specified location (ARG=<path>),\n-     or disable it (ARG=no)\n-     @<:@ARG=yes@:>@ ])],\n-    [\n-     AS_CASE([$withval],\n-       [no],[want_boost=\"no\";_AX_BOOST_BASE_boost_path=\"\"],\n-       [yes],[want_boost=\"yes\";_AX_BOOST_BASE_boost_path=\"\"],\n-       [want_boost=\"yes\";_AX_BOOST_BASE_boost_path=\"$withval\"])\n-    ],\n-    [want_boost=\"yes\"])\n-\n-\n-AC_ARG_WITH([boost-libdir],\n-  [AS_HELP_STRING([--with-boost-libdir=LIB_DIR],\n-    [Force given directory for boost libraries.\n-     Note that this will override library path detection,\n-     so use this parameter only if default library detection fails\n-     and you know exactly where your boost libraries are located.])],\n-  [\n-   AS_IF([test -d \"$withval\"],\n-         [_AX_BOOST_BASE_boost_lib_path=\"$withval\"],\n-    [AC_MSG_ERROR([--with-boost-libdir expected directory name])])\n-  ],\n-  [_AX_BOOST_BASE_boost_lib_path=\"\"])\n-\n-BOOST_LDFLAGS=\"\"\n-BOOST_CPPFLAGS=\"\"\n-AS_IF([test \"x$want_boost\" = \"xyes\"],\n-      [_AX_BOOST_BASE_RUNDETECT([$1],[$2],[$3])])\n-AC_SUBST(BOOST_CPPFLAGS)\n-AC_SUBST(BOOST_LDFLAGS)\n-])\n-\n-\n-# convert a version string in $2 to numeric and affect to polymorphic var $1\n-AC_DEFUN([_AX_BOOST_BASE_TONUMERICVERSION],[\n-  AS_IF([test \"x$2\" = \"x\"],[_AX_BOOST_BASE_TONUMERICVERSION_req=\"1.20.0\"],[_AX_BOOST_BASE_TONUMERICVERSION_req=\"$2\"])\n-  _AX_BOOST_BASE_TONUMERICVERSION_req_shorten=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n-  _AX_BOOST_BASE_TONUMERICVERSION_req_major=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '\\([[0-9]]*\\)'`\n-  AS_IF([test \"x$_AX_BOOST_BASE_TONUMERICVERSION_req_major\" = \"x\"],\n-        [AC_MSG_ERROR([You should at least specify libboost major version])])\n-  _AX_BOOST_BASE_TONUMERICVERSION_req_minor=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '[[0-9]]*\\.\\([[0-9]]*\\)'`\n-  AS_IF([test \"x$_AX_BOOST_BASE_TONUMERICVERSION_req_minor\" = \"x\"],\n-        [_AX_BOOST_BASE_TONUMERICVERSION_req_minor=\"0\"])\n-  _AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '[[0-9]]*\\.[[0-9]]*\\.\\([[0-9]]*\\)'`\n-  AS_IF([test \"X$_AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor\" = \"X\"],\n-        [_AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor=\"0\"])\n-  _AX_BOOST_BASE_TONUMERICVERSION_RET=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req_major \\* 100000 \\+  $_AX_BOOST_BASE_TONUMERICVERSION_req_minor \\* 100 \\+ $_AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor`\n-  AS_VAR_SET($1,$_AX_BOOST_BASE_TONUMERICVERSION_RET)\n-])\n-\n-dnl Run the detection of boost should be run only if $want_boost\n-AC_DEFUN([_AX_BOOST_BASE_RUNDETECT],[\n-    _AX_BOOST_BASE_TONUMERICVERSION(WANT_BOOST_VERSION,[$1])\n-    succeeded=no\n-\n-\n-    AC_REQUIRE([AC_CANONICAL_HOST])\n-    dnl On 64-bit systems check for system libraries in both lib64 and lib.\n-    dnl The former is specified by FHS, but e.g. Debian does not adhere to\n-    dnl this (as it rises problems for generic multi-arch support).\n-    dnl The last entry in the list is chosen by default when no libraries\n-    dnl are found, e.g. when only header-only libraries are installed!\n-    AS_CASE([${host_cpu}],\n-      [x86_64],[libsubdirs=\"lib64 libx32 lib lib64\"],\n-      [mips*64*],[libsubdirs=\"lib64 lib32 lib lib64\"],\n-      [ppc64|powerpc64|s390x|sparc64|aarch64|ppc64le|powerpc64le|riscv64],[libsubdirs=\"lib64 lib lib64\"],\n-      [libsubdirs=\"lib\"]\n-    )\n-\n-    dnl allow for real multi-arch paths e.g. /usr/lib/x86_64-linux-gnu. Give\n-    dnl them priority over the other paths since, if libs are found there, they\n-    dnl are almost assuredly the ones desired.\n-    AS_CASE([${host_cpu}],\n-      [i?86],[multiarch_libsubdir=\"lib/i386-${host_os}\"],\n-      [armv7l],[multiarch_libsubdir=\"lib/arm-${host_os}\"],\n-      [multiarch_libsubdir=\"lib/${host_cpu}-${host_os}\"]\n-    )\n-\n-    dnl first we check the system location for boost libraries\n-    dnl this location ist chosen if boost libraries are installed with the --layout=system option\n-    dnl or if you install boost with RPM\n-    AS_IF([test \"x$_AX_BOOST_BASE_boost_path\" != \"x\"],[\n-        AC_MSG_CHECKING([for boostlib >= $1 ($WANT_BOOST_VERSION) includes in \"$_AX_BOOST_BASE_boost_path/include\"])\n-         AS_IF([test -d \"$_AX_BOOST_BASE_boost_path/include\" && test -r \"$_AX_BOOST_BASE_boost_path/include\"],[\n-           AC_MSG_RESULT([yes])\n-           BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path/include\"\n-           for _AX_BOOST_BASE_boost_path_tmp in $multiarch_libsubdir $libsubdirs; do\n-                AC_MSG_CHECKING([for boostlib >= $1 ($WANT_BOOST_VERSION) lib path in \"$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\"])\n-                AS_IF([test -d \"$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\" && test -r \"$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\" ],[\n-                        AC_MSG_RESULT([yes])\n-                        BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\";\n-                        break;\n-                ],\n-      [AC_MSG_RESULT([no])])\n-           done],[\n-      AC_MSG_RESULT([no])])\n-    ],[\n-        if test X\"$cross_compiling\" = Xyes; then\n-            search_libsubdirs=$multiarch_libsubdir\n-        else\n-            search_libsubdirs=\"$multiarch_libsubdir $libsubdirs\"\n-        fi\n-        for _AX_BOOST_BASE_boost_path_tmp in /usr /usr/local /opt /opt/local ; do\n-            if test -d \"$_AX_BOOST_BASE_boost_path_tmp/include/boost\" && test -r \"$_AX_BOOST_BASE_boost_path_tmp/include/boost\" ; then\n-                for libsubdir in $search_libsubdirs ; do\n-                    if ls \"$_AX_BOOST_BASE_boost_path_tmp/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n-                done\n-                BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_path_tmp/$libsubdir\"\n-                BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path_tmp/include\"\n-                break;\n-            fi\n-        done\n-    ])\n-\n-    dnl overwrite ld flags if we have required special directory with\n-    dnl --with-boost-libdir parameter\n-    AS_IF([test \"x$_AX_BOOST_BASE_boost_lib_path\" != \"x\"],\n-          [BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_lib_path\"])\n-\n-    AC_MSG_CHECKING([for boostlib >= $1 ($WANT_BOOST_VERSION)])\n-    CPPFLAGS_SAVED=\"$CPPFLAGS\"\n-    CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-    export CPPFLAGS\n-\n-    LDFLAGS_SAVED=\"$LDFLAGS\"\n-    LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-    export LDFLAGS\n-\n-    AC_REQUIRE([AC_PROG_CXX])\n-    AC_LANG_PUSH(C++)\n-        AC_COMPILE_IFELSE([_AX_BOOST_BASE_PROGRAM($WANT_BOOST_VERSION)],[\n-        AC_MSG_RESULT(yes)\n-    succeeded=yes\n-    found_system=yes\n-        ],[\n-        ])\n-    AC_LANG_POP([C++])\n-\n-\n-\n-    dnl if we found no boost with system layout we search for boost libraries\n-    dnl built and installed without the --layout=system option or for a staged(not installed) version\n-    if test \"x$succeeded\" != \"xyes\" ; then\n-        CPPFLAGS=\"$CPPFLAGS_SAVED\"\n-        LDFLAGS=\"$LDFLAGS_SAVED\"\n-        BOOST_CPPFLAGS=\n-        if test -z \"$_AX_BOOST_BASE_boost_lib_path\" ; then\n-            BOOST_LDFLAGS=\n-        fi\n-        _version=0\n-        if test -n \"$_AX_BOOST_BASE_boost_path\" ; then\n-            if test -d \"$_AX_BOOST_BASE_boost_path\" && test -r \"$_AX_BOOST_BASE_boost_path\"; then\n-                for i in `ls -d $_AX_BOOST_BASE_boost_path/include/boost-* 2>/dev/null`; do\n-                    _version_tmp=`echo $i | sed \"s#$_AX_BOOST_BASE_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n-                    V_CHECK=`expr $_version_tmp \\> $_version`\n-                    if test \"x$V_CHECK\" = \"x1\" ; then\n-                        _version=$_version_tmp\n-                    fi\n-                    VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n-                    BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path/include/boost-$VERSION_UNDERSCORE\"\n-                done\n-                dnl if nothing found search for layout used in Windows distributions\n-                if test -z \"$BOOST_CPPFLAGS\"; then\n-                    if test -d \"$_AX_BOOST_BASE_boost_path/boost\" && test -r \"$_AX_BOOST_BASE_boost_path/boost\"; then\n-                        BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path\"\n-                    fi\n-                fi\n-                dnl if we found something and BOOST_LDFLAGS was unset before\n-                dnl (because \"$_AX_BOOST_BASE_boost_lib_path\" = \"\"), set it here.\n-                if test -n \"$BOOST_CPPFLAGS\" && test -z \"$BOOST_LDFLAGS\"; then\n-                    for libsubdir in $libsubdirs ; do\n-                        if ls \"$_AX_BOOST_BASE_boost_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n-                    done\n-                    BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_path/$libsubdir\"\n-                fi\n-            fi\n-        else\n-            if test \"x$cross_compiling\" != \"xyes\" ; then\n-                for _AX_BOOST_BASE_boost_path in /usr /usr/local /opt /opt/local ; do\n-                    if test -d \"$_AX_BOOST_BASE_boost_path\" && test -r \"$_AX_BOOST_BASE_boost_path\" ; then\n-                        for i in `ls -d $_AX_BOOST_BASE_boost_path/include/boost-* 2>/dev/null`; do\n-                            _version_tmp=`echo $i | sed \"s#$_AX_BOOST_BASE_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n-                            V_CHECK=`expr $_version_tmp \\> $_version`\n-                            if test \"x$V_CHECK\" = \"x1\" ; then\n-                                _version=$_version_tmp\n-                                best_path=$_AX_BOOST_BASE_boost_path\n-                            fi\n-                        done\n-                    fi\n-                done\n-\n-                VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n-                BOOST_CPPFLAGS=\"-I$best_path/include/boost-$VERSION_UNDERSCORE\"\n-                if test -z \"$_AX_BOOST_BASE_boost_lib_path\" ; then\n-                    for libsubdir in $libsubdirs ; do\n-                        if ls \"$best_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n-                    done\n-                    BOOST_LDFLAGS=\"-L$best_path/$libsubdir\"\n-                fi\n-            fi\n-\n-            if test -n \"$BOOST_ROOT\" ; then\n-                for libsubdir in $libsubdirs ; do\n-                    if ls \"$BOOST_ROOT/stage/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n-                done\n-                if test -d \"$BOOST_ROOT\" && test -r \"$BOOST_ROOT\" && test -d \"$BOOST_ROOT/stage/$libsubdir\" && test -r \"$BOOST_ROOT/stage/$libsubdir\"; then\n-                    version_dir=`expr //$BOOST_ROOT : '.*/\\(.*\\)'`\n-                    stage_version=`echo $version_dir | sed 's/boost_//' | sed 's/_/./g'`\n-                        stage_version_shorten=`expr $stage_version : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n-                    V_CHECK=`expr $stage_version_shorten \\>\\= $_version`\n-                    if test \"x$V_CHECK\" = \"x1\" && test -z \"$_AX_BOOST_BASE_boost_lib_path\" ; then\n-                        AC_MSG_NOTICE(We will use a staged boost library from $BOOST_ROOT)\n-                        BOOST_CPPFLAGS=\"-I$BOOST_ROOT\"\n-                        BOOST_LDFLAGS=\"-L$BOOST_ROOT/stage/$libsubdir\"\n-                    fi\n-                fi\n-            fi\n-        fi\n-\n-        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-        export CPPFLAGS\n-        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-        export LDFLAGS\n-\n-        AC_LANG_PUSH(C++)\n-            AC_COMPILE_IFELSE([_AX_BOOST_BASE_PROGRAM($WANT_BOOST_VERSION)],[\n-            AC_MSG_RESULT(yes)\n-        succeeded=yes\n-        found_system=yes\n-            ],[\n-            ])\n-        AC_LANG_POP([C++])\n-    fi\n-\n-    if test \"x$succeeded\" != \"xyes\" ; then\n-        if test \"x$_version\" = \"x0\" ; then\n-            AC_MSG_NOTICE([[We could not detect the boost libraries (version $1 or higher). If you have a staged boost library (still not installed) please specify \\$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])\n-        else\n-            AC_MSG_NOTICE([Your boost libraries seems to old (version $_version).])\n-        fi\n-        # execute ACTION-IF-NOT-FOUND (if present):\n-        ifelse([$3], , :, [$3])\n-    else\n-        AC_DEFINE(HAVE_BOOST,,[define if the Boost library is available])\n-        # execute ACTION-IF-FOUND (if present):\n-        ifelse([$2], , :, [$2])\n-    fi\n-\n-    CPPFLAGS=\"$CPPFLAGS_SAVED\"\n-    LDFLAGS=\"$LDFLAGS_SAVED\"\n-\n-])"
      },
      {
        "sha": "12f7bc5e2ebc18f70537f3d271802e107bfacdad",
        "filename": "build-aux/m4/ax_boost_filesystem.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 118,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_boost_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_boost_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_filesystem.m4?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,118 +0,0 @@\n-# ===========================================================================\n-#   https://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_FILESYSTEM\n-#\n-# DESCRIPTION\n-#\n-#   Test for Filesystem library from the Boost C++ libraries. The macro\n-#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n-#   available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_FILESYSTEM_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_FILESYSTEM\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2009 Michael Tindal\n-#   Copyright (c) 2009 Roman Rybalko <libtorrent@romanr.info>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 28\n-\n-AC_DEFUN([AX_BOOST_FILESYSTEM],\n-[\n-\tAC_ARG_WITH([boost-filesystem],\n-\tAS_HELP_STRING([--with-boost-filesystem@<:@=special-lib@:>@],\n-                   [use the Filesystem library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-filesystem=boost_filesystem-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_filesystem_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_filesystem_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-\t\tLIBS_SAVED=$LIBS\n-\t\tLIBS=\"$LIBS $BOOST_SYSTEM_LIB\"\n-\t\texport LIBS\n-\n-        AC_CACHE_CHECK(whether the Boost::Filesystem library is available,\n-\t\t\t\t\t   ax_cv_boost_filesystem,\n-        [AC_LANG_PUSH([C++])\n-         AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/filesystem/path.hpp>]],\n-                                   [[using namespace boost::filesystem;\n-                                   path my_path( \"foo/bar/data.txt\" );\n-                                   return 0;]])],\n-\t\t\t\t\t       ax_cv_boost_filesystem=yes, ax_cv_boost_filesystem=no)\n-         AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_filesystem\" = \"xyes\"; then\n-\t\t\tAC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-            if test \"x$ax_boost_user_filesystem_lib\" = \"x\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_filesystem* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                 [link_filesystem=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_filesystem\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_filesystem* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                 [link_filesystem=\"no\"])\n-\t\t\t\tdone\n-\t\t    fi\n-            else\n-               for ax_lib in $ax_boost_user_filesystem_lib boost_filesystem-$ax_boost_user_filesystem_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                   [link_filesystem=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the Boost::Filesystem library!)\n-            fi\n-\t\t\tif test \"x$link_filesystem\" != \"xyes\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\t\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\t\tLIBS=\"$LIBS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "5d20e67464fcde6ee00f2582607e59f0759115b8",
        "filename": "build-aux/m4/ax_boost_process.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 121,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_boost_process.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_boost_process.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_process.m4?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,121 +0,0 @@\n-# ===========================================================================\n-#     https://www.gnu.org/software/autoconf-archive/ax_boost_process.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_PROCESS\n-#\n-# DESCRIPTION\n-#\n-#   Test for Process library from the Boost C++ libraries. The macro\n-#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n-#   available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_PROCESS_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_PROCESS\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2008 Michael Tindal\n-#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 2\n-\n-AC_DEFUN([AX_BOOST_PROCESS],\n-[\n-\tAC_ARG_WITH([boost-process],\n-\tAS_HELP_STRING([--with-boost-process@<:@=special-lib@:>@],\n-                   [use the Process library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-process=boost_process-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost_process=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost_process=\"yes\"\n-            ax_boost_user_process_lib=\"\"\n-        else\n-\t\t    want_boost_process=\"yes\"\n-\t\tax_boost_user_process_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost_process=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost_process\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Process library is available,\n-\t\t\t\t\t   ax_cv_boost_process,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n-\t\t\t CXXFLAGS=\n-\n-             AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/process.hpp>]],\n-                [[boost::process::child* child = new boost::process::child; delete child;]])],\n-                ax_cv_boost_process=yes, ax_cv_boost_process=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_process\" = \"xyes\"; then\n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n-\n-\t\t\tAC_DEFINE(HAVE_BOOST_PROCESS,,[define if the Boost::Process library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n-            if test \"x$ax_boost_user_process_lib\" = \"x\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_process* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_PROCESS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROCESS_LIB) link_process=\"yes\"; break],\n-                                 [link_process=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_process\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_process* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_PROCESS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROCESS_LIB) link_process=\"yes\"; break],\n-                                 [link_process=\"no\"])\n-\t\t\t\tdone\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_process_lib boost_process-$ax_boost_user_process_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_PROCESS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROCESS_LIB) link_process=\"yes\"; break],\n-                                   [link_process=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the Boost::Process library!)\n-            fi\n-\t\t\tif test \"x$link_process\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "323e2a676a8e0428008dd4563416ce141e278f33",
        "filename": "build-aux/m4/ax_boost_system.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 121,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_system.m4?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,121 +0,0 @@\n-# ===========================================================================\n-#     https://www.gnu.org/software/autoconf-archive/ax_boost_system.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_SYSTEM\n-#\n-# DESCRIPTION\n-#\n-#   Test for System library from the Boost C++ libraries. The macro requires\n-#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_SYSTEM_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_SYSTEM\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2008 Michael Tindal\n-#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 20\n-\n-AC_DEFUN([AX_BOOST_SYSTEM],\n-[\n-\tAC_ARG_WITH([boost-system],\n-\tAS_HELP_STRING([--with-boost-system@<:@=special-lib@:>@],\n-                   [use the System library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-system=boost_system-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_system_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_system_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::System library is available,\n-\t\t\t\t\t   ax_cv_boost_system,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n-\t\t\t CXXFLAGS=\n-\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/system/error_code.hpp>]],\n-\t\t\t\t    [[boost::system::error_category *a = 0;]])],\n-                   ax_cv_boost_system=yes, ax_cv_boost_system=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_system\" = \"xyes\"; then\n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n-\n-\t\t\tAC_DEFINE(HAVE_BOOST_SYSTEM,,[define if the Boost::System library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n-            if test \"x$ax_boost_user_system_lib\" = \"x\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_system* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                 [link_system=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_system\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_system* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                 [link_system=\"no\"])\n-\t\t\t\tdone\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_system_lib boost_system-$ax_boost_user_system_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                   [link_system=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the Boost::System library!)\n-            fi\n-\t\t\tif test \"x$link_system\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "75e80e6e75aa9f6c22387d0dabce11e5fce9526b",
        "filename": "build-aux/m4/ax_boost_thread.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 187,
        "changes": 187,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_boost_thread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_boost_thread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_thread.m4?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,187 +0,0 @@\n-# ===========================================================================\n-#     https://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_THREAD\n-#\n-# DESCRIPTION\n-#\n-#   Test for Thread library from the Boost C++ libraries. The macro requires\n-#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_THREAD_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_THREAD\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2009 Michael Tindal\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 33\n-\n-AC_DEFUN([AX_BOOST_THREAD],\n-[\n-    AC_ARG_WITH([boost-thread],\n-    AS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n-                   [use the Thread library from boost -\n-                    it is possible to specify a certain library for the linker\n-                    e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_thread_lib=\"\"\n-        else\n-            want_boost=\"yes\"\n-            ax_boost_user_thread_lib=\"$withval\"\n-        fi\n-        ],\n-        [want_boost=\"yes\"]\n-    )\n-\n-    if test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-        CPPFLAGS_SAVED=\"$CPPFLAGS\"\n-        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-        export CPPFLAGS\n-\n-        LDFLAGS_SAVED=\"$LDFLAGS\"\n-        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-        export LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Thread library is available,\n-                       ax_cv_boost_thread,\n-        [AC_LANG_PUSH([C++])\n-             CXXFLAGS_SAVE=$CXXFLAGS\n-\n-             case \"x$host_os\" in\n-                 xsolaris )\n-                     CXXFLAGS=\"-pthreads $CXXFLAGS\"\n-                     break;\n-                     ;;\n-                 xmingw32 )\n-                     CXXFLAGS=\"-mthreads $CXXFLAGS\"\n-                     break;\n-                     ;;\n-                 *android* )\n-                     break;\n-                     ;;\n-                 * )\n-                     CXXFLAGS=\"-pthread $CXXFLAGS\"\n-                     break;\n-                     ;;\n-             esac\n-\n-             AC_COMPILE_IFELSE([\n-                 AC_LANG_PROGRAM(\n-                     [[@%:@include <boost/thread/thread.hpp>]],\n-                     [[boost::thread_group thrds;\n-                       return 0;]])],\n-                 ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n-             CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-        ])\n-        if test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n-            case \"x$host_os\" in\n-                xsolaris )\n-                    BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n-                    break;\n-                    ;;\n-                xmingw32 )\n-                    BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n-                    break;\n-                    ;;\n-                *android* )\n-                    break;\n-                    ;;\n-                * )\n-                    BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n-                    break;\n-                    ;;\n-            esac\n-\n-            AC_SUBST(BOOST_CPPFLAGS)\n-\n-            AC_DEFINE(HAVE_BOOST_THREAD,,\n-                      [define if the Boost::Thread library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-            LDFLAGS_SAVE=$LDFLAGS\n-                        case \"x$host_os\" in\n-                          *bsd* )\n-                               LDFLAGS=\"-pthread $LDFLAGS\"\n-                          break;\n-                          ;;\n-                        esac\n-            if test \"x$ax_boost_user_thread_lib\" = \"x\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_thread* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'`; do\n-                     ax_lib=${libextension}\n-                    AC_CHECK_LIB($ax_lib, exit,\n-                                 [link_thread=\"yes\"; break],\n-                                 [link_thread=\"no\"])\n-                done\n-                if test \"x$link_thread\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_thread* 2>/dev/null | sed 's,.*/,,' | sed 's,\\..*,,'`; do\n-                     ax_lib=${libextension}\n-                    AC_CHECK_LIB($ax_lib, exit,\n-                                 [link_thread=\"yes\"; break],\n-                                 [link_thread=\"no\"])\n-                done\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do\n-                      AC_CHECK_LIB($ax_lib, exit,\n-                                   [link_thread=\"yes\"; break],\n-                                   [link_thread=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the Boost::Thread library!)\n-            fi\n-            if test \"x$link_thread\" = \"xno\"; then\n-                AC_MSG_ERROR(Could not link against $ax_lib !)\n-            else\n-                BOOST_THREAD_LIB=\"-l$ax_lib\"\n-                case \"x$host_os\" in\n-                    *bsd* )\n-                        BOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n-                        break;\n-                        ;;\n-                    xsolaris )\n-                        BOOST_THREAD_LIB=\"$BOOST_THREAD_LIB -lpthread\"\n-                        break;\n-                        ;;\n-                    xmingw32 )\n-                        break;\n-                        ;;\n-                    *android* )\n-                        break;\n-                        ;;\n-                    * )\n-                        BOOST_THREAD_LIB=\"$BOOST_THREAD_LIB -lpthread\"\n-                        break;\n-                        ;;\n-                esac\n-                AC_SUBST(BOOST_THREAD_LIB)\n-            fi\n-        fi\n-\n-        CPPFLAGS=\"$CPPFLAGS_SAVED\"\n-        LDFLAGS=\"$LDFLAGS_SAVED\"\n-    fi\n-])"
      },
      {
        "sha": "4cca32fcfd6539b53e0a55c02544342d1d03ae75",
        "filename": "build-aux/m4/ax_boost_unit_test_framework.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 137,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_boost_unit_test_framework.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_boost_unit_test_framework.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_unit_test_framework.m4?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,137 +0,0 @@\n-# =================================================================================\n-#  https://www.gnu.org/software/autoconf-archive/ax_boost_unit_test_framework.html\n-# =================================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_UNIT_TEST_FRAMEWORK\n-#\n-# DESCRIPTION\n-#\n-#   Test for Unit_Test_Framework library from the Boost C++ libraries. The\n-#   macro requires a preceding call to AX_BOOST_BASE. Further documentation\n-#   is available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_UNIT_TEST_FRAMEWORK\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 22\n-\n-AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n-[\n-\tAC_ARG_WITH([boost-unit-test-framework],\n-\tAS_HELP_STRING([--with-boost-unit-test-framework@<:@=special-lib@:>@],\n-                   [use the Unit_Test_Framework library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-unit-test-framework=boost_unit_test_framework-gcc ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_unit_test_framework_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_unit_test_framework_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Unit_Test_Framework library is available,\n-\t\t\t\t\t   ax_cv_boost_unit_test_framework,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/test/unit_test.hpp>]],\n-                                    [[using boost::unit_test::test_suite;\n-\t\t\t\t\t\t\t test_suite* test= BOOST_TEST_SUITE( \"Unit test example 1\" ); if (test == NULL) { return 1; } else { return 0; }]])],\n-                   ax_cv_boost_unit_test_framework=yes, ax_cv_boost_unit_test_framework=no)\n-         AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_unit_test_framework\" = \"xyes\"; then\n-\t\t\tAC_DEFINE(HAVE_BOOST_UNIT_TEST_FRAMEWORK,,[define if the Boost::Unit_Test_Framework library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-            if test \"x$ax_boost_user_unit_test_framework_lib\" = \"x\"; then\n-\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n-                for monitor_library in `ls $BOOSTLIBDIR/libboost_unit_test_framework*.so* $BOOSTLIBDIR/libboost_unit_test_framework*.dylib* $BOOSTLIBDIR/libboost_unit_test_framework*.a* 2>/dev/null` ; do\n-                    if test -r $monitor_library ; then\n-                       libextension=`echo $monitor_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'`\n-                       ax_lib=${libextension}\n-                       link_unit_test_framework=\"yes\"\n-                    else\n-                       link_unit_test_framework=\"no\"\n-                    fi\n-\n-\t\t\t    if test \"x$link_unit_test_framework\" = \"xyes\"; then\n-                      BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n-                      AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n-\t\t\t\t\t  break\n-\t\t\t\t    fi\n-                done\n-                if test \"x$link_unit_test_framework\" != \"xyes\"; then\n-                for libextension in `ls $BOOSTLIBDIR/boost_unit_test_framework*.dll* $BOOSTLIBDIR/boost_unit_test_framework*.a* 2>/dev/null  | sed 's,.*/,,' | sed -e 's;^\\(boost_unit_test_framework.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB) link_unit_test_framework=\"yes\"; break],\n-                                 [link_unit_test_framework=\"no\"])\n-\t\t\t\tdone\n-                fi\n-            else\n-                link_unit_test_framework=\"no\"\n-\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n-                for ax_lib in boost_unit_test_framework-$ax_boost_user_unit_test_framework_lib $ax_boost_user_unit_test_framework_lib ; do\n-                   if test \"x$link_unit_test_framework\" = \"xyes\"; then\n-                      break;\n-                   fi\n-                   for unittest_library in `ls $BOOSTLIBDIR/lib${ax_lib}.so* $BOOSTLIBDIR/lib${ax_lib}.a* 2>/dev/null` ; do\n-                   if test -r $unittest_library ; then\n-                       libextension=`echo $unittest_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a*$;\\1;'`\n-                       ax_lib=${libextension}\n-                       link_unit_test_framework=\"yes\"\n-                    else\n-                       link_unit_test_framework=\"no\"\n-                    fi\n-\n-\t\t\t\tif test \"x$link_unit_test_framework\" = \"xyes\"; then\n-                        BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n-                        AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n-\t\t\t\t\t    break\n-\t\t\t\t    fi\n-                  done\n-               done\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the Boost::Unit_Test_Framework library!)\n-            fi\n-\t\t\tif test \"x$link_unit_test_framework\" != \"xyes\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "ca3639715e7243fa4343eb2e7f3de53927cc9d4a",
        "filename": "build-aux/m4/ax_check_compile_flag.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_check_compile_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_check_compile_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_compile_flag.m4?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,74 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_check_compile_flag.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n-#\n-# DESCRIPTION\n-#\n-#   Check whether the given FLAG works with the current language's compiler\n-#   or gives an error.  (Warnings, however, are ignored)\n-#\n-#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n-#   success/failure.\n-#\n-#   If EXTRA-FLAGS is defined, it is added to the current language's default\n-#   flags (e.g. CFLAGS) when the check is done.  The check is thus made with\n-#   the flags: \"CFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to\n-#   force the compiler to issue an error when a bad flag is given.\n-#\n-#   INPUT gives an alternative input source to AC_COMPILE_IFELSE.\n-#\n-#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n-#   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n-#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 4\n-\n-AC_DEFUN([AX_CHECK_COMPILE_FLAG],\n-[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n-AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl\n-AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [\n-  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS\n-  _AC_LANG_PREFIX[]FLAGS=\"$[]_AC_LANG_PREFIX[]FLAGS $4 $1\"\n-  AC_COMPILE_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n-    [AS_VAR_SET(CACHEVAR,[yes])],\n-    [AS_VAR_SET(CACHEVAR,[no])])\n-  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])\n-AS_VAR_IF(CACHEVAR,yes,\n-  [m4_default([$2], :)],\n-  [m4_default([$3], :)])\n-AS_VAR_POPDEF([CACHEVAR])dnl\n-])dnl AX_CHECK_COMPILE_FLAGS"
      },
      {
        "sha": "eb01a6ce135eca0fdde834b00c21b12202b09f3d",
        "filename": "build-aux/m4/ax_check_link_flag.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_check_link_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_check_link_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_link_flag.m4?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,74 +0,0 @@\n-# ===========================================================================\n-#    http://www.gnu.org/software/autoconf-archive/ax_check_link_flag.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n-#\n-# DESCRIPTION\n-#\n-#   Check whether the given FLAG works with the linker or gives an error.\n-#   (Warnings, however, are ignored)\n-#\n-#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n-#   success/failure.\n-#\n-#   If EXTRA-FLAGS is defined, it is added to the linker's default flags\n-#   when the check is done.  The check is thus made with the flags: \"LDFLAGS\n-#   EXTRA-FLAGS FLAG\".  This can for example be used to force the linker to\n-#   issue an error when a bad flag is given.\n-#\n-#   INPUT gives an alternative input source to AC_LINK_IFELSE.\n-#\n-#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n-#   macro in sync with AX_CHECK_{PREPROC,COMPILE}_FLAG.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n-#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 4\n-\n-AC_DEFUN([AX_CHECK_LINK_FLAG],\n-[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n-AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl\n-AC_CACHE_CHECK([whether the linker accepts $1], CACHEVAR, [\n-  ax_check_save_flags=$LDFLAGS\n-  LDFLAGS=\"$LDFLAGS $4 $1\"\n-  AC_LINK_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n-    [AS_VAR_SET(CACHEVAR,[yes])],\n-    [AS_VAR_SET(CACHEVAR,[no])])\n-  LDFLAGS=$ax_check_save_flags])\n-AS_VAR_IF(CACHEVAR,yes,\n-  [m4_default([$2], :)],\n-  [m4_default([$3], :)])\n-AS_VAR_POPDEF([CACHEVAR])dnl\n-])dnl AX_CHECK_LINK_FLAGS"
      },
      {
        "sha": "ca1d5ee2b6d1ae107504d4ab433bc5f6fd629f61",
        "filename": "build-aux/m4/ax_check_preproc_flag.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_check_preproc_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_check_preproc_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_preproc_flag.m4?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,74 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_check_preproc_flag.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CHECK_PREPROC_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n-#\n-# DESCRIPTION\n-#\n-#   Check whether the given FLAG works with the current language's\n-#   preprocessor or gives an error.  (Warnings, however, are ignored)\n-#\n-#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n-#   success/failure.\n-#\n-#   If EXTRA-FLAGS is defined, it is added to the preprocessor's default\n-#   flags when the check is done.  The check is thus made with the flags:\n-#   \"CPPFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to force the\n-#   preprocessor to issue an error when a bad flag is given.\n-#\n-#   INPUT gives an alternative input source to AC_PREPROC_IFELSE.\n-#\n-#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n-#   macro in sync with AX_CHECK_{COMPILE,LINK}_FLAG.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n-#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 4\n-\n-AC_DEFUN([AX_CHECK_PREPROC_FLAG],\n-[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n-AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]cppflags_$4_$1])dnl\n-AC_CACHE_CHECK([whether _AC_LANG preprocessor accepts $1], CACHEVAR, [\n-  ax_check_save_flags=$CPPFLAGS\n-  CPPFLAGS=\"$CPPFLAGS $4 $1\"\n-  AC_PREPROC_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n-    [AS_VAR_SET(CACHEVAR,[yes])],\n-    [AS_VAR_SET(CACHEVAR,[no])])\n-  CPPFLAGS=$ax_check_save_flags])\n-AS_VAR_IF(CACHEVAR,yes,\n-  [m4_default([$2], :)],\n-  [m4_default([$3], :)])\n-AS_VAR_POPDEF([CACHEVAR])dnl\n-])dnl AX_CHECK_PREPROC_FLAGS"
      },
      {
        "sha": "43087b2e6889ec6f8ebd2f8ba77f4a9a716f8ac2",
        "filename": "build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 951,
        "changes": 951,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_cxx_compile_stdcxx.m4?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,951 +0,0 @@\n-# ===========================================================================\n-#  https://www.gnu.org/software/autoconf-archive/ax_cxx_compile_stdcxx.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CXX_COMPILE_STDCXX(VERSION, [ext|noext], [mandatory|optional])\n-#\n-# DESCRIPTION\n-#\n-#   Check for baseline language coverage in the compiler for the specified\n-#   version of the C++ standard.  If necessary, add switches to CXX and\n-#   CXXCPP to enable support.  VERSION may be '11' (for the C++11 standard)\n-#   or '14' (for the C++14 standard).\n-#\n-#   The second argument, if specified, indicates whether you insist on an\n-#   extended mode (e.g. -std=gnu++11) or a strict conformance mode (e.g.\n-#   -std=c++11).  If neither is specified, you get whatever works, with\n-#   preference for an extended mode.\n-#\n-#   The third argument, if specified 'mandatory' or if left unspecified,\n-#   indicates that baseline support for the specified C++ standard is\n-#   required and that the macro should error out if no mode with that\n-#   support is found.  If specified 'optional', then configuration proceeds\n-#   regardless, after defining HAVE_CXX${VERSION} if and only if a\n-#   supporting mode is found.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Benjamin Kosnik <bkoz@redhat.com>\n-#   Copyright (c) 2012 Zack Weinberg <zackw@panix.com>\n-#   Copyright (c) 2013 Roy Stogner <roystgnr@ices.utexas.edu>\n-#   Copyright (c) 2014, 2015 Google Inc.; contributed by Alexey Sokolov <sokolov@google.com>\n-#   Copyright (c) 2015 Paul Norman <penorman@mac.com>\n-#   Copyright (c) 2015 Moritz Klammler <moritz@klammler.eu>\n-#   Copyright (c) 2016, 2018 Krzesimir Nowak <qdlacz@gmail.com>\n-#   Copyright (c) 2019 Enji Cooper <yaneurabeya@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved.  This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 11\n-\n-dnl  This macro is based on the code from the AX_CXX_COMPILE_STDCXX_11 macro\n-dnl  (serial version number 13).\n-\n-AC_DEFUN([AX_CXX_COMPILE_STDCXX], [dnl\n-  m4_if([$1], [11], [ax_cxx_compile_alternatives=\"11 0x\"],\n-        [$1], [14], [ax_cxx_compile_alternatives=\"14 1y\"],\n-        [$1], [17], [ax_cxx_compile_alternatives=\"17 1z\"],\n-        [m4_fatal([invalid first argument `$1' to AX_CXX_COMPILE_STDCXX])])dnl\n-  m4_if([$2], [], [],\n-        [$2], [ext], [],\n-        [$2], [noext], [],\n-        [m4_fatal([invalid second argument `$2' to AX_CXX_COMPILE_STDCXX])])dnl\n-  m4_if([$3], [], [ax_cxx_compile_cxx$1_required=true],\n-        [$3], [mandatory], [ax_cxx_compile_cxx$1_required=true],\n-        [$3], [optional], [ax_cxx_compile_cxx$1_required=false],\n-        [m4_fatal([invalid third argument `$3' to AX_CXX_COMPILE_STDCXX])])\n-  AC_LANG_PUSH([C++])dnl\n-  ac_success=no\n-\n-  m4_if([$2], [noext], [], [dnl\n-  if test x$ac_success = xno; then\n-    for alternative in ${ax_cxx_compile_alternatives}; do\n-      switch=\"-std=gnu++${alternative}\"\n-      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n-      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n-                     $cachevar,\n-        [ac_save_CXX=\"$CXX\"\n-         CXX=\"$CXX $switch\"\n-         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n-          [eval $cachevar=yes],\n-          [eval $cachevar=no])\n-         CXX=\"$ac_save_CXX\"])\n-      if eval test x\\$$cachevar = xyes; then\n-        CXX=\"$CXX $switch\"\n-        if test -n \"$CXXCPP\" ; then\n-          CXXCPP=\"$CXXCPP $switch\"\n-        fi\n-        ac_success=yes\n-        break\n-      fi\n-    done\n-  fi])\n-\n-  m4_if([$2], [ext], [], [dnl\n-  if test x$ac_success = xno; then\n-    dnl HP's aCC needs +std=c++11 according to:\n-    dnl http://h21007.www2.hp.com/portal/download/files/unprot/aCxx/PDF_Release_Notes/769149-001.pdf\n-    dnl Cray's crayCC needs \"-h std=c++11\"\n-    for alternative in ${ax_cxx_compile_alternatives}; do\n-      for switch in -std=c++${alternative} +std=c++${alternative} \"-h std=c++${alternative}\"; do\n-        cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n-        AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n-                       $cachevar,\n-          [ac_save_CXX=\"$CXX\"\n-           CXX=\"$CXX $switch\"\n-           AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n-            [eval $cachevar=yes],\n-            [eval $cachevar=no])\n-           CXX=\"$ac_save_CXX\"])\n-        if eval test x\\$$cachevar = xyes; then\n-          CXX=\"$CXX $switch\"\n-          if test -n \"$CXXCPP\" ; then\n-            CXXCPP=\"$CXXCPP $switch\"\n-          fi\n-          ac_success=yes\n-          break\n-        fi\n-      done\n-      if test x$ac_success = xyes; then\n-        break\n-      fi\n-    done\n-  fi])\n-  AC_LANG_POP([C++])\n-  if test x$ax_cxx_compile_cxx$1_required = xtrue; then\n-    if test x$ac_success = xno; then\n-      AC_MSG_ERROR([*** A compiler with support for C++$1 language features is required.])\n-    fi\n-  fi\n-  if test x$ac_success = xno; then\n-    HAVE_CXX$1=0\n-    AC_MSG_NOTICE([No compiler with C++$1 support was found])\n-  else\n-    HAVE_CXX$1=1\n-    AC_DEFINE(HAVE_CXX$1,1,\n-              [define if the compiler supports basic C++$1 syntax])\n-  fi\n-  AC_SUBST(HAVE_CXX$1)\n-])\n-\n-\n-dnl  Test body for checking C++11 support\n-\n-m4_define([_AX_CXX_COMPILE_STDCXX_testbody_11],\n-  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n-)\n-\n-\n-dnl  Test body for checking C++14 support\n-\n-m4_define([_AX_CXX_COMPILE_STDCXX_testbody_14],\n-  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n-  _AX_CXX_COMPILE_STDCXX_testbody_new_in_14\n-)\n-\n-m4_define([_AX_CXX_COMPILE_STDCXX_testbody_17],\n-  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n-  _AX_CXX_COMPILE_STDCXX_testbody_new_in_14\n-  _AX_CXX_COMPILE_STDCXX_testbody_new_in_17\n-)\n-\n-dnl  Tests for new features in C++11\n-\n-m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_11], [[\n-\n-// If the compiler admits that it is not ready for C++11, why torture it?\n-// Hopefully, this will speed up the test.\n-\n-#ifndef __cplusplus\n-\n-#error \"This is not a C++ compiler\"\n-\n-#elif __cplusplus < 201103L\n-\n-#error \"This is not a C++11 compiler\"\n-\n-#else\n-\n-namespace cxx11\n-{\n-\n-  namespace test_static_assert\n-  {\n-\n-    template <typename T>\n-    struct check\n-    {\n-      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n-    };\n-\n-  }\n-\n-  namespace test_final_override\n-  {\n-\n-    struct Base\n-    {\n-      virtual ~Base() {}\n-      virtual void f() {}\n-    };\n-\n-    struct Derived : public Base\n-    {\n-      virtual ~Derived() override {}\n-      virtual void f() override {}\n-    };\n-\n-  }\n-\n-  namespace test_double_right_angle_brackets\n-  {\n-\n-    template < typename T >\n-    struct check {};\n-\n-    typedef check<void> single_type;\n-    typedef check<check<void>> double_type;\n-    typedef check<check<check<void>>> triple_type;\n-    typedef check<check<check<check<void>>>> quadruple_type;\n-\n-  }\n-\n-  namespace test_decltype\n-  {\n-\n-    int\n-    f()\n-    {\n-      int a = 1;\n-      decltype(a) b = 2;\n-      return a + b;\n-    }\n-\n-  }\n-\n-  namespace test_type_deduction\n-  {\n-\n-    template < typename T1, typename T2 >\n-    struct is_same\n-    {\n-      static const bool value = false;\n-    };\n-\n-    template < typename T >\n-    struct is_same<T, T>\n-    {\n-      static const bool value = true;\n-    };\n-\n-    template < typename T1, typename T2 >\n-    auto\n-    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n-    {\n-      return a1 + a2;\n-    }\n-\n-    int\n-    test(const int c, volatile int v)\n-    {\n-      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n-      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n-      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n-      auto ac = c;\n-      auto av = v;\n-      auto sumi = ac + av + 'x';\n-      auto sumf = ac + av + 1.0;\n-      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n-      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n-      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n-      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n-      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n-      return (sumf > 0.0) ? sumi : add(c, v);\n-    }\n-\n-  }\n-\n-  namespace test_noexcept\n-  {\n-\n-    int f() { return 0; }\n-    int g() noexcept { return 0; }\n-\n-    static_assert(noexcept(f()) == false, \"\");\n-    static_assert(noexcept(g()) == true, \"\");\n-\n-  }\n-\n-  namespace test_constexpr\n-  {\n-\n-    template < typename CharT >\n-    unsigned long constexpr\n-    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n-    {\n-      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n-    }\n-\n-    template < typename CharT >\n-    unsigned long constexpr\n-    strlen_c(const CharT *const s) noexcept\n-    {\n-      return strlen_c_r(s, 0UL);\n-    }\n-\n-    static_assert(strlen_c(\"\") == 0UL, \"\");\n-    static_assert(strlen_c(\"1\") == 1UL, \"\");\n-    static_assert(strlen_c(\"example\") == 7UL, \"\");\n-    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n-\n-  }\n-\n-  namespace test_rvalue_references\n-  {\n-\n-    template < int N >\n-    struct answer\n-    {\n-      static constexpr int value = N;\n-    };\n-\n-    answer<1> f(int&)       { return answer<1>(); }\n-    answer<2> f(const int&) { return answer<2>(); }\n-    answer<3> f(int&&)      { return answer<3>(); }\n-\n-    void\n-    test()\n-    {\n-      int i = 0;\n-      const int c = 0;\n-      static_assert(decltype(f(i))::value == 1, \"\");\n-      static_assert(decltype(f(c))::value == 2, \"\");\n-      static_assert(decltype(f(0))::value == 3, \"\");\n-    }\n-\n-  }\n-\n-  namespace test_uniform_initialization\n-  {\n-\n-    struct test\n-    {\n-      static const int zero {};\n-      static const int one {1};\n-    };\n-\n-    static_assert(test::zero == 0, \"\");\n-    static_assert(test::one == 1, \"\");\n-\n-  }\n-\n-  namespace test_lambdas\n-  {\n-\n-    void\n-    test1()\n-    {\n-      auto lambda1 = [](){};\n-      auto lambda2 = lambda1;\n-      lambda1();\n-      lambda2();\n-    }\n-\n-    int\n-    test2()\n-    {\n-      auto a = [](int i, int j){ return i + j; }(1, 2);\n-      auto b = []() -> int { return '0'; }();\n-      auto c = [=](){ return a + b; }();\n-      auto d = [&](){ return c; }();\n-      auto e = [a, &b](int x) mutable {\n-        const auto identity = [](int y){ return y; };\n-        for (auto i = 0; i < a; ++i)\n-          a += b--;\n-        return x + identity(a + b);\n-      }(0);\n-      return a + b + c + d + e;\n-    }\n-\n-    int\n-    test3()\n-    {\n-      const auto nullary = [](){ return 0; };\n-      const auto unary = [](int x){ return x; };\n-      using nullary_t = decltype(nullary);\n-      using unary_t = decltype(unary);\n-      const auto higher1st = [](nullary_t f){ return f(); };\n-      const auto higher2nd = [unary](nullary_t f1){\n-        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n-      };\n-      return higher1st(nullary) + higher2nd(nullary)(unary);\n-    }\n-\n-  }\n-\n-  namespace test_variadic_templates\n-  {\n-\n-    template <int...>\n-    struct sum;\n-\n-    template <int N0, int... N1toN>\n-    struct sum<N0, N1toN...>\n-    {\n-      static constexpr auto value = N0 + sum<N1toN...>::value;\n-    };\n-\n-    template <>\n-    struct sum<>\n-    {\n-      static constexpr auto value = 0;\n-    };\n-\n-    static_assert(sum<>::value == 0, \"\");\n-    static_assert(sum<1>::value == 1, \"\");\n-    static_assert(sum<23>::value == 23, \"\");\n-    static_assert(sum<1, 2>::value == 3, \"\");\n-    static_assert(sum<5, 5, 11>::value == 21, \"\");\n-    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n-\n-  }\n-\n-  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n-  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n-  // because of this.\n-  namespace test_template_alias_sfinae\n-  {\n-\n-    struct foo {};\n-\n-    template<typename T>\n-    using member = typename T::member_type;\n-\n-    template<typename T>\n-    void func(...) {}\n-\n-    template<typename T>\n-    void func(member<T>*) {}\n-\n-    void test();\n-\n-    void test() { func<foo>(0); }\n-\n-  }\n-\n-}  // namespace cxx11\n-\n-#endif  // __cplusplus >= 201103L\n-\n-]])\n-\n-\n-dnl  Tests for new features in C++14\n-\n-m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_14], [[\n-\n-// If the compiler admits that it is not ready for C++14, why torture it?\n-// Hopefully, this will speed up the test.\n-\n-#ifndef __cplusplus\n-\n-#error \"This is not a C++ compiler\"\n-\n-#elif __cplusplus < 201402L\n-\n-#error \"This is not a C++14 compiler\"\n-\n-#else\n-\n-namespace cxx14\n-{\n-\n-  namespace test_polymorphic_lambdas\n-  {\n-\n-    int\n-    test()\n-    {\n-      const auto lambda = [](auto&&... args){\n-        const auto istiny = [](auto x){\n-          return (sizeof(x) == 1UL) ? 1 : 0;\n-        };\n-        const int aretiny[] = { istiny(args)... };\n-        return aretiny[0];\n-      };\n-      return lambda(1, 1L, 1.0f, '1');\n-    }\n-\n-  }\n-\n-  namespace test_binary_literals\n-  {\n-\n-    constexpr auto ivii = 0b0000000000101010;\n-    static_assert(ivii == 42, \"wrong value\");\n-\n-  }\n-\n-  namespace test_generalized_constexpr\n-  {\n-\n-    template < typename CharT >\n-    constexpr unsigned long\n-    strlen_c(const CharT *const s) noexcept\n-    {\n-      auto length = 0UL;\n-      for (auto p = s; *p; ++p)\n-        ++length;\n-      return length;\n-    }\n-\n-    static_assert(strlen_c(\"\") == 0UL, \"\");\n-    static_assert(strlen_c(\"x\") == 1UL, \"\");\n-    static_assert(strlen_c(\"test\") == 4UL, \"\");\n-    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n-\n-  }\n-\n-  namespace test_lambda_init_capture\n-  {\n-\n-    int\n-    test()\n-    {\n-      auto x = 0;\n-      const auto lambda1 = [a = x](int b){ return a + b; };\n-      const auto lambda2 = [a = lambda1(x)](){ return a; };\n-      return lambda2();\n-    }\n-\n-  }\n-\n-  namespace test_digit_separators\n-  {\n-\n-    constexpr auto ten_million = 100'000'000;\n-    static_assert(ten_million == 100000000, \"\");\n-\n-  }\n-\n-  namespace test_return_type_deduction\n-  {\n-\n-    auto f(int& x) { return x; }\n-    decltype(auto) g(int& x) { return x; }\n-\n-    template < typename T1, typename T2 >\n-    struct is_same\n-    {\n-      static constexpr auto value = false;\n-    };\n-\n-    template < typename T >\n-    struct is_same<T, T>\n-    {\n-      static constexpr auto value = true;\n-    };\n-\n-    int\n-    test()\n-    {\n-      auto x = 0;\n-      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n-      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n-      return x;\n-    }\n-\n-  }\n-\n-}  // namespace cxx14\n-\n-#endif  // __cplusplus >= 201402L\n-\n-]])\n-\n-\n-dnl  Tests for new features in C++17\n-\n-m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_17], [[\n-\n-// If the compiler admits that it is not ready for C++17, why torture it?\n-// Hopefully, this will speed up the test.\n-\n-#ifndef __cplusplus\n-\n-#error \"This is not a C++ compiler\"\n-\n-#elif __cplusplus < 201703L\n-\n-#error \"This is not a C++17 compiler\"\n-\n-#else\n-\n-#include <initializer_list>\n-#include <utility>\n-#include <type_traits>\n-\n-namespace cxx17\n-{\n-\n-  namespace test_constexpr_lambdas\n-  {\n-\n-    constexpr int foo = [](){return 42;}();\n-\n-  }\n-\n-  namespace test::nested_namespace::definitions\n-  {\n-\n-  }\n-\n-  namespace test_fold_expression\n-  {\n-\n-    template<typename... Args>\n-    int multiply(Args... args)\n-    {\n-      return (args * ... * 1);\n-    }\n-\n-    template<typename... Args>\n-    bool all(Args... args)\n-    {\n-      return (args && ...);\n-    }\n-\n-  }\n-\n-  namespace test_extended_static_assert\n-  {\n-\n-    static_assert (true);\n-\n-  }\n-\n-  namespace test_auto_brace_init_list\n-  {\n-\n-    auto foo = {5};\n-    auto bar {5};\n-\n-    static_assert(std::is_same<std::initializer_list<int>, decltype(foo)>::value);\n-    static_assert(std::is_same<int, decltype(bar)>::value);\n-  }\n-\n-  namespace test_typename_in_template_template_parameter\n-  {\n-\n-    template<template<typename> typename X> struct D;\n-\n-  }\n-\n-  namespace test_fallthrough_nodiscard_maybe_unused_attributes\n-  {\n-\n-    int f1()\n-    {\n-      return 42;\n-    }\n-\n-    [[nodiscard]] int f2()\n-    {\n-      [[maybe_unused]] auto unused = f1();\n-\n-      switch (f1())\n-      {\n-      case 17:\n-        f1();\n-        [[fallthrough]];\n-      case 42:\n-        f1();\n-      }\n-      return f1();\n-    }\n-\n-  }\n-\n-  namespace test_extended_aggregate_initialization\n-  {\n-\n-    struct base1\n-    {\n-      int b1, b2 = 42;\n-    };\n-\n-    struct base2\n-    {\n-      base2() {\n-        b3 = 42;\n-      }\n-      int b3;\n-    };\n-\n-    struct derived : base1, base2\n-    {\n-        int d;\n-    };\n-\n-    derived d1 {{1, 2}, {}, 4};  // full initialization\n-    derived d2 {{}, {}, 4};      // value-initialized bases\n-\n-  }\n-\n-  namespace test_general_range_based_for_loop\n-  {\n-\n-    struct iter\n-    {\n-      int i;\n-\n-      int& operator* ()\n-      {\n-        return i;\n-      }\n-\n-      const int& operator* () const\n-      {\n-        return i;\n-      }\n-\n-      iter& operator++()\n-      {\n-        ++i;\n-        return *this;\n-      }\n-    };\n-\n-    struct sentinel\n-    {\n-      int i;\n-    };\n-\n-    bool operator== (const iter& i, const sentinel& s)\n-    {\n-      return i.i == s.i;\n-    }\n-\n-    bool operator!= (const iter& i, const sentinel& s)\n-    {\n-      return !(i == s);\n-    }\n-\n-    struct range\n-    {\n-      iter begin() const\n-      {\n-        return {0};\n-      }\n-\n-      sentinel end() const\n-      {\n-        return {5};\n-      }\n-    };\n-\n-    void f()\n-    {\n-      range r {};\n-\n-      for (auto i : r)\n-      {\n-        [[maybe_unused]] auto v = i;\n-      }\n-    }\n-\n-  }\n-\n-  namespace test_lambda_capture_asterisk_this_by_value\n-  {\n-\n-    struct t\n-    {\n-      int i;\n-      int foo()\n-      {\n-        return [*this]()\n-        {\n-          return i;\n-        }();\n-      }\n-    };\n-\n-  }\n-\n-  namespace test_enum_class_construction\n-  {\n-\n-    enum class byte : unsigned char\n-    {};\n-\n-    byte foo {42};\n-\n-  }\n-\n-  namespace test_constexpr_if\n-  {\n-\n-    template <bool cond>\n-    int f ()\n-    {\n-      if constexpr(cond)\n-      {\n-        return 13;\n-      }\n-      else\n-      {\n-        return 42;\n-      }\n-    }\n-\n-  }\n-\n-  namespace test_selection_statement_with_initializer\n-  {\n-\n-    int f()\n-    {\n-      return 13;\n-    }\n-\n-    int f2()\n-    {\n-      if (auto i = f(); i > 0)\n-      {\n-        return 3;\n-      }\n-\n-      switch (auto i = f(); i + 4)\n-      {\n-      case 17:\n-        return 2;\n-\n-      default:\n-        return 1;\n-      }\n-    }\n-\n-  }\n-\n-  namespace test_template_argument_deduction_for_class_templates\n-  {\n-\n-    template <typename T1, typename T2>\n-    struct pair\n-    {\n-      pair (T1 p1, T2 p2)\n-        : m1 {p1},\n-          m2 {p2}\n-      {}\n-\n-      T1 m1;\n-      T2 m2;\n-    };\n-\n-    void f()\n-    {\n-      [[maybe_unused]] auto p = pair{13, 42u};\n-    }\n-\n-  }\n-\n-  namespace test_non_type_auto_template_parameters\n-  {\n-\n-    template <auto n>\n-    struct B\n-    {};\n-\n-    B<5> b1;\n-    B<'a'> b2;\n-\n-  }\n-\n-  namespace test_structured_bindings\n-  {\n-\n-    int arr[2] = { 1, 2 };\n-    std::pair<int, int> pr = { 1, 2 };\n-\n-    auto f1() -> int(&)[2]\n-    {\n-      return arr;\n-    }\n-\n-    auto f2() -> std::pair<int, int>&\n-    {\n-      return pr;\n-    }\n-\n-    struct S\n-    {\n-      int x1 : 2;\n-      volatile double y1;\n-    };\n-\n-    S f3()\n-    {\n-      return {};\n-    }\n-\n-    auto [ x1, y1 ] = f1();\n-    auto& [ xr1, yr1 ] = f1();\n-    auto [ x2, y2 ] = f2();\n-    auto& [ xr2, yr2 ] = f2();\n-    const auto [ x3, y3 ] = f3();\n-\n-  }\n-\n-  namespace test_exception_spec_type_system\n-  {\n-\n-    struct Good {};\n-    struct Bad {};\n-\n-    void g1() noexcept;\n-    void g2();\n-\n-    template<typename T>\n-    Bad\n-    f(T*, T*);\n-\n-    template<typename T1, typename T2>\n-    Good\n-    f(T1*, T2*);\n-\n-    static_assert (std::is_same_v<Good, decltype(f(g1, g2))>);\n-\n-  }\n-\n-  namespace test_inline_variables\n-  {\n-\n-    template<class T> void f(T)\n-    {}\n-\n-    template<class T> inline T g(T)\n-    {\n-      return T{};\n-    }\n-\n-    template<> inline void f<>(int)\n-    {}\n-\n-    template<> int g<>(int)\n-    {\n-      return 5;\n-    }\n-\n-  }\n-\n-}  // namespace cxx17\n-\n-#endif  // __cplusplus < 201703L\n-\n-]])"
      },
      {
        "sha": "c788ca9bd435fbfe4e1642281aabd7f9492786ff",
        "filename": "build-aux/m4/ax_gcc_func_attribute.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 223,
        "changes": 223,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_gcc_func_attribute.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_gcc_func_attribute.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_gcc_func_attribute.m4?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,223 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_gcc_func_attribute.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_GCC_FUNC_ATTRIBUTE(ATTRIBUTE)\n-#\n-# DESCRIPTION\n-#\n-#   This macro checks if the compiler supports one of GCC's function\n-#   attributes; many other compilers also provide function attributes with\n-#   the same syntax. Compiler warnings are used to detect supported\n-#   attributes as unsupported ones are ignored by default so quieting\n-#   warnings when using this macro will yield false positives.\n-#\n-#   The ATTRIBUTE parameter holds the name of the attribute to be checked.\n-#\n-#   If ATTRIBUTE is supported define HAVE_FUNC_ATTRIBUTE_<ATTRIBUTE>.\n-#\n-#   The macro caches its result in the ax_cv_have_func_attribute_<attribute>\n-#   variable.\n-#\n-#   The macro currently supports the following function attributes:\n-#\n-#    alias\n-#    aligned\n-#    alloc_size\n-#    always_inline\n-#    artificial\n-#    cold\n-#    const\n-#    constructor\n-#    constructor_priority for constructor attribute with priority\n-#    deprecated\n-#    destructor\n-#    dllexport\n-#    dllimport\n-#    error\n-#    externally_visible\n-#    flatten\n-#    format\n-#    format_arg\n-#    gnu_inline\n-#    hot\n-#    ifunc\n-#    leaf\n-#    malloc\n-#    noclone\n-#    noinline\n-#    nonnull\n-#    noreturn\n-#    nothrow\n-#    optimize\n-#    pure\n-#    unused\n-#    used\n-#    visibility\n-#    warning\n-#    warn_unused_result\n-#    weak\n-#    weakref\n-#\n-#   Unsuppored function attributes will be tested with a prototype returning\n-#   an int and not accepting any arguments and the result of the check might\n-#   be wrong or meaningless so use with care.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2013 Gabriele Svelto <gabriele.svelto@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved.  This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 3\n-\n-AC_DEFUN([AX_GCC_FUNC_ATTRIBUTE], [\n-    AS_VAR_PUSHDEF([ac_var], [ax_cv_have_func_attribute_$1])\n-\n-    AC_CACHE_CHECK([for __attribute__(($1))], [ac_var], [\n-        AC_LINK_IFELSE([AC_LANG_PROGRAM([\n-            m4_case([$1],\n-                [alias], [\n-                    int foo( void ) { return 0; }\n-                    int bar( void ) __attribute__(($1(\"foo\")));\n-                ],\n-                [aligned], [\n-                    int foo( void ) __attribute__(($1(32)));\n-                ],\n-                [alloc_size], [\n-                    void *foo(int a) __attribute__(($1(1)));\n-                ],\n-                [always_inline], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [artificial], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [cold], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [const], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [constructor_priority], [\n-                    int foo( void ) __attribute__((__constructor__(65535/2)));\n-                ],\n-                [constructor], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [deprecated], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [destructor], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [dllexport], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [dllimport], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [error], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [externally_visible], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [flatten], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [format], [\n-                    int foo(const char *p, ...) __attribute__(($1(printf, 1, 2)));\n-                ],\n-                [format_arg], [\n-                    char *foo(const char *p) __attribute__(($1(1)));\n-                ],\n-                [gnu_inline], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [hot], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [ifunc], [\n-                    int my_foo( void ) { return 0; }\n-                    static int (*resolve_foo(void))(void) { return my_foo; }\n-                    int foo( void ) __attribute__(($1(\"resolve_foo\")));\n-                ],\n-                [leaf], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [malloc], [\n-                    void *foo( void ) __attribute__(($1));\n-                ],\n-                [noclone], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [noinline], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [nonnull], [\n-                    int foo(char *p) __attribute__(($1(1)));\n-                ],\n-                [noreturn], [\n-                    void foo( void ) __attribute__(($1));\n-                ],\n-                [nothrow], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [optimize], [\n-                    __attribute__(($1(3))) int foo( void ) { return 0; }\n-                ],\n-                [pure], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [unused], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [used], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [visibility], [\n-                    int foo_def( void ) __attribute__(($1(\"default\")));\n-                    int foo_hid( void ) __attribute__(($1(\"hidden\")));\n-                    int foo_int( void ) __attribute__(($1(\"internal\")));\n-                    int foo_pro( void ) __attribute__(($1(\"protected\")));\n-                ],\n-                [warning], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [warn_unused_result], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [weak], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [weakref], [\n-                    static int foo( void ) { return 0; }\n-                    static int bar( void ) __attribute__(($1(\"foo\")));\n-                ],\n-                [\n-                 m4_warn([syntax], [Unsupported attribute $1, the test may fail])\n-                 int foo( void ) __attribute__(($1));\n-                ]\n-            )], [])\n-            ],\n-            dnl GCC doesn't exit with an error if an unknown attribute is\n-            dnl provided but only outputs a warning, so accept the attribute\n-            dnl only if no warning were issued.\n-            [AS_IF([test -s conftest.err],\n-                [AS_VAR_SET([ac_var], [no])],\n-                [AS_VAR_SET([ac_var], [yes])])],\n-            [AS_VAR_SET([ac_var], [no])])\n-    ])\n-\n-    AS_IF([test yes = AS_VAR_GET([ac_var])],\n-        [AC_DEFINE_UNQUOTED(AS_TR_CPP(HAVE_FUNC_ATTRIBUTE_$1), 1,\n-            [Define to 1 if the system has the `$1' function attribute])], [])\n-\n-    AS_VAR_POPDEF([ac_var])\n-])"
      },
      {
        "sha": "1598d077ff020f1f0be8388fded01c871c946354",
        "filename": "build-aux/m4/ax_pthread.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 507,
        "changes": 507,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_pthread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/ax_pthread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_pthread.m4?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,507 +0,0 @@\n-# ===========================================================================\n-#        https://www.gnu.org/software/autoconf-archive/ax_pthread.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_PTHREAD([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])\n-#\n-# DESCRIPTION\n-#\n-#   This macro figures out how to build C programs using POSIX threads. It\n-#   sets the PTHREAD_LIBS output variable to the threads library and linker\n-#   flags, and the PTHREAD_CFLAGS output variable to any special C compiler\n-#   flags that are needed. (The user can also force certain compiler\n-#   flags/libs to be tested by setting these environment variables.)\n-#\n-#   Also sets PTHREAD_CC to any special C compiler that is needed for\n-#   multi-threaded programs (defaults to the value of CC otherwise). (This\n-#   is necessary on AIX to use the special cc_r compiler alias.)\n-#\n-#   NOTE: You are assumed to not only compile your program with these flags,\n-#   but also to link with them as well. For example, you might link with\n-#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n-#\n-#   If you are only building threaded programs, you may wish to use these\n-#   variables in your default LIBS, CFLAGS, and CC:\n-#\n-#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n-#     CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-#     CC=\"$PTHREAD_CC\"\n-#\n-#   In addition, if the PTHREAD_CREATE_JOINABLE thread-attribute constant\n-#   has a nonstandard name, this macro defines PTHREAD_CREATE_JOINABLE to\n-#   that name (e.g. PTHREAD_CREATE_UNDETACHED on AIX).\n-#\n-#   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the\n-#   PTHREAD_PRIO_INHERIT symbol is defined when compiling with\n-#   PTHREAD_CFLAGS.\n-#\n-#   ACTION-IF-FOUND is a list of shell commands to run if a threads library\n-#   is found, and ACTION-IF-NOT-FOUND is a list of commands to run it if it\n-#   is not found. If ACTION-IF-FOUND is not specified, the default action\n-#   will define HAVE_PTHREAD.\n-#\n-#   Please let the authors know if this macro fails on any platform, or if\n-#   you have any other suggestions or comments. This macro was based on work\n-#   by SGJ on autoconf scripts for FFTW (http://www.fftw.org/) (with help\n-#   from M. Frigo), as well as ac_pthread and hb_pthread macros posted by\n-#   Alejandro Forero Cuervo to the autoconf macro repository. We are also\n-#   grateful for the helpful feedback of numerous users.\n-#\n-#   Updated for Autoconf 2.68 by Daniel Richard G.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Steven G. Johnson <stevenj@alum.mit.edu>\n-#   Copyright (c) 2011 Daniel Richard G. <skunk@iSKUNK.ORG>\n-#   Copyright (c) 2019 Marc Stevens <marc.stevens@cwi.nl>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <https://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 27\n-\n-AU_ALIAS([ACX_PTHREAD], [AX_PTHREAD])\n-AC_DEFUN([AX_PTHREAD], [\n-AC_REQUIRE([AC_CANONICAL_HOST])\n-AC_REQUIRE([AC_PROG_CC])\n-AC_REQUIRE([AC_PROG_SED])\n-AC_LANG_PUSH([C])\n-ax_pthread_ok=no\n-\n-# We used to check for pthread.h first, but this fails if pthread.h\n-# requires special compiler flags (e.g. on Tru64 or Sequent).\n-# It gets checked for in the link test anyway.\n-\n-# First of all, check if the user has set any of the PTHREAD_LIBS,\n-# etcetera environment variables, and if threads linking works using\n-# them:\n-if test \"x$PTHREAD_CFLAGS$PTHREAD_LIBS\" != \"x\"; then\n-        ax_pthread_save_CC=\"$CC\"\n-        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n-        ax_pthread_save_LIBS=\"$LIBS\"\n-        AS_IF([test \"x$PTHREAD_CC\" != \"x\"], [CC=\"$PTHREAD_CC\"])\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-        AC_MSG_CHECKING([for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS])\n-        AC_LINK_IFELSE([AC_LANG_CALL([], [pthread_join])], [ax_pthread_ok=yes])\n-        AC_MSG_RESULT([$ax_pthread_ok])\n-        if test \"x$ax_pthread_ok\" = \"xno\"; then\n-                PTHREAD_LIBS=\"\"\n-                PTHREAD_CFLAGS=\"\"\n-        fi\n-        CC=\"$ax_pthread_save_CC\"\n-        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n-        LIBS=\"$ax_pthread_save_LIBS\"\n-fi\n-\n-# We must check for the threads library under a number of different\n-# names; the ordering is very important because some systems\n-# (e.g. DEC) have both -lpthread and -lpthreads, where one of the\n-# libraries is broken (non-POSIX).\n-\n-# Create a list of thread flags to try. Items with a \",\" contain both\n-# C compiler flags (before \",\") and linker flags (after \",\"). Other items\n-# starting with a \"-\" are C compiler flags, and remaining items are\n-# library names, except for \"none\" which indicates that we try without\n-# any flags at all, and \"pthread-config\" which is a program returning\n-# the flags for the Pth emulation library.\n-\n-ax_pthread_flags=\"pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n-\n-# The ordering *is* (sometimes) important.  Some notes on the\n-# individual items follow:\n-\n-# pthreads: AIX (must check this before -lpthread)\n-# none: in case threads are in libc; should be tried before -Kthread and\n-#       other compiler flags to prevent continual compiler warnings\n-# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n-# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads), Tru64\n-#           (Note: HP C rejects this with \"bad form for `-t' option\")\n-# -pthreads: Solaris/gcc (Note: HP C also rejects)\n-# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n-#      doesn't hurt to check since this sometimes defines pthreads and\n-#      -D_REENTRANT too), HP C (must be checked before -lpthread, which\n-#      is present but should not be used directly; and before -mthreads,\n-#      because the compiler interprets this as \"-mt\" + \"-hreads\")\n-# -mthreads: Mingw32/gcc, Lynx/gcc\n-# pthread: Linux, etcetera\n-# --thread-safe: KAI C++\n-# pthread-config: use pthread-config program (for GNU Pth library)\n-\n-case $host_os in\n-\n-        freebsd*)\n-\n-        # -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n-        # lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n-\n-        ax_pthread_flags=\"-kthread lthread $ax_pthread_flags\"\n-        ;;\n-\n-        hpux*)\n-\n-        # From the cc(1) man page: \"[-mt] Sets various -D flags to enable\n-        # multi-threading and also sets -lpthread.\"\n-\n-        ax_pthread_flags=\"-mt -pthread pthread $ax_pthread_flags\"\n-        ;;\n-\n-        openedition*)\n-\n-        # IBM z/OS requires a feature-test macro to be defined in order to\n-        # enable POSIX threads at all, so give the user a hint if this is\n-        # not set. (We don't define these ourselves, as they can affect\n-        # other portions of the system API in unpredictable ways.)\n-\n-        AC_EGREP_CPP([AX_PTHREAD_ZOS_MISSING],\n-            [\n-#            if !defined(_OPEN_THREADS) && !defined(_UNIX03_THREADS)\n-             AX_PTHREAD_ZOS_MISSING\n-#            endif\n-            ],\n-            [AC_MSG_WARN([IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.])])\n-        ;;\n-\n-        solaris*)\n-\n-        # On Solaris (at least, for some versions), libc contains stubbed\n-        # (non-functional) versions of the pthreads routines, so link-based\n-        # tests will erroneously succeed. (N.B.: The stubs are missing\n-        # pthread_cleanup_push, or rather a function called by this macro,\n-        # so we could check for that, but who knows whether they'll stub\n-        # that too in a future libc.)  So we'll check first for the\n-        # standard Solaris way of linking pthreads (-mt -lpthread).\n-\n-        ax_pthread_flags=\"-mt,-lpthread pthread $ax_pthread_flags\"\n-        ;;\n-esac\n-\n-# Are we compiling with Clang?\n-\n-AC_CACHE_CHECK([whether $CC is Clang],\n-    [ax_cv_PTHREAD_CLANG],\n-    [ax_cv_PTHREAD_CLANG=no\n-     # Note that Autoconf sets GCC=yes for Clang as well as GCC\n-     if test \"x$GCC\" = \"xyes\"; then\n-        AC_EGREP_CPP([AX_PTHREAD_CC_IS_CLANG],\n-            [/* Note: Clang 2.7 lacks __clang_[a-z]+__ */\n-#            if defined(__clang__) && defined(__llvm__)\n-             AX_PTHREAD_CC_IS_CLANG\n-#            endif\n-            ],\n-            [ax_cv_PTHREAD_CLANG=yes])\n-     fi\n-    ])\n-ax_pthread_clang=\"$ax_cv_PTHREAD_CLANG\"\n-\n-\n-# GCC generally uses -pthread, or -pthreads on some platforms (e.g. SPARC)\n-\n-# Note that for GCC and Clang -pthread generally implies -lpthread,\n-# except when -nostdlib is passed.\n-# This is problematic using libtool to build C++ shared libraries with pthread:\n-# [1] https://gcc.gnu.org/bugzilla/show_bug.cgi?id=25460\n-# [2] https://bugzilla.redhat.com/show_bug.cgi?id=661333\n-# [3] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=468555\n-# To solve this, first try -pthread together with -lpthread for GCC\n-\n-AS_IF([test \"x$GCC\" = \"xyes\"],\n-      [ax_pthread_flags=\"-pthread,-lpthread -pthread -pthreads $ax_pthread_flags\"])\n-\n-# Clang takes -pthread (never supported any other flag), but we'll try with -lpthread first\n-\n-AS_IF([test \"x$ax_pthread_clang\" = \"xyes\"],\n-      [ax_pthread_flags=\"-pthread,-lpthread -pthread\"])\n-\n-\n-# The presence of a feature test macro requesting re-entrant function\n-# definitions is, on some systems, a strong hint that pthreads support is\n-# correctly enabled\n-\n-case $host_os in\n-        darwin* | hpux* | linux* | osf* | solaris*)\n-        ax_pthread_check_macro=\"_REENTRANT\"\n-        ;;\n-\n-        aix*)\n-        ax_pthread_check_macro=\"_THREAD_SAFE\"\n-        ;;\n-\n-        *)\n-        ax_pthread_check_macro=\"--\"\n-        ;;\n-esac\n-AS_IF([test \"x$ax_pthread_check_macro\" = \"x--\"],\n-      [ax_pthread_check_cond=0],\n-      [ax_pthread_check_cond=\"!defined($ax_pthread_check_macro)\"])\n-\n-\n-if test \"x$ax_pthread_ok\" = \"xno\"; then\n-for ax_pthread_try_flag in $ax_pthread_flags; do\n-\n-        case $ax_pthread_try_flag in\n-                none)\n-                AC_MSG_CHECKING([whether pthreads work without any flags])\n-                ;;\n-\n-                *,*)\n-                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\1/\"`\n-                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\2/\"`\n-                AC_MSG_CHECKING([whether pthreads work with \"$PTHREAD_CFLAGS\" and \"$PTHREAD_LIBS\"])\n-                ;;\n-\n-                -*)\n-                AC_MSG_CHECKING([whether pthreads work with $ax_pthread_try_flag])\n-                PTHREAD_CFLAGS=\"$ax_pthread_try_flag\"\n-                ;;\n-\n-                pthread-config)\n-                AC_CHECK_PROG([ax_pthread_config], [pthread-config], [yes], [no])\n-                AS_IF([test \"x$ax_pthread_config\" = \"xno\"], [continue])\n-                PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n-                PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n-                ;;\n-\n-                *)\n-                AC_MSG_CHECKING([for the pthreads library -l$ax_pthread_try_flag])\n-                PTHREAD_LIBS=\"-l$ax_pthread_try_flag\"\n-                ;;\n-        esac\n-\n-        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n-        ax_pthread_save_LIBS=\"$LIBS\"\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-\n-        # Check for various functions.  We must include pthread.h,\n-        # since some functions may be macros.  (On the Sequent, we\n-        # need a special flag -Kthread to make this header compile.)\n-        # We check for pthread_join because it is in -lpthread on IRIX\n-        # while pthread_create is in libc.  We check for pthread_attr_init\n-        # due to DEC craziness with -lpthreads.  We check for\n-        # pthread_cleanup_push because it is one of the few pthread\n-        # functions on Solaris that doesn't have a non-functional libc stub.\n-        # We try pthread_create on general principles.\n-\n-        AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>\n-#                       if $ax_pthread_check_cond\n-#                        error \"$ax_pthread_check_macro must be defined\"\n-#                       endif\n-                        static void *some_global = NULL;\n-                        static void routine(void *a)\n-                          {\n-                             /* To avoid any unused-parameter or\n-                                unused-but-set-parameter warning.  */\n-                             some_global = a;\n-                          }\n-                        static void *start_routine(void *a) { return a; }],\n-                       [pthread_t th; pthread_attr_t attr;\n-                        pthread_create(&th, 0, start_routine, 0);\n-                        pthread_join(th, 0);\n-                        pthread_attr_init(&attr);\n-                        pthread_cleanup_push(routine, 0);\n-                        pthread_cleanup_pop(0) /* ; */])],\n-            [ax_pthread_ok=yes],\n-            [])\n-\n-        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n-        LIBS=\"$ax_pthread_save_LIBS\"\n-\n-        AC_MSG_RESULT([$ax_pthread_ok])\n-        AS_IF([test \"x$ax_pthread_ok\" = \"xyes\"], [break])\n-\n-        PTHREAD_LIBS=\"\"\n-        PTHREAD_CFLAGS=\"\"\n-done\n-fi\n-\n-\n-# Clang needs special handling, because older versions handle the -pthread\n-# option in a rather... idiosyncratic way\n-\n-if test \"x$ax_pthread_clang\" = \"xyes\"; then\n-\n-        # Clang takes -pthread; it has never supported any other flag\n-\n-        # (Note 1: This will need to be revisited if a system that Clang\n-        # supports has POSIX threads in a separate library.  This tends not\n-        # to be the way of modern systems, but it's conceivable.)\n-\n-        # (Note 2: On some systems, notably Darwin, -pthread is not needed\n-        # to get POSIX threads support; the API is always present and\n-        # active.  We could reasonably leave PTHREAD_CFLAGS empty.  But\n-        # -pthread does define _REENTRANT, and while the Darwin headers\n-        # ignore this macro, third-party headers might not.)\n-\n-        # However, older versions of Clang make a point of warning the user\n-        # that, in an invocation where only linking and no compilation is\n-        # taking place, the -pthread option has no effect (\"argument unused\n-        # during compilation\").  They expect -pthread to be passed in only\n-        # when source code is being compiled.\n-        #\n-        # Problem is, this is at odds with the way Automake and most other\n-        # C build frameworks function, which is that the same flags used in\n-        # compilation (CFLAGS) are also used in linking.  Many systems\n-        # supported by AX_PTHREAD require exactly this for POSIX threads\n-        # support, and in fact it is often not straightforward to specify a\n-        # flag that is used only in the compilation phase and not in\n-        # linking.  Such a scenario is extremely rare in practice.\n-        #\n-        # Even though use of the -pthread flag in linking would only print\n-        # a warning, this can be a nuisance for well-run software projects\n-        # that build with -Werror.  So if the active version of Clang has\n-        # this misfeature, we search for an option to squash it.\n-\n-        AC_CACHE_CHECK([whether Clang needs flag to prevent \"argument unused\" warning when linking with -pthread],\n-            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG],\n-            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=unknown\n-             # Create an alternate version of $ac_link that compiles and\n-             # links in two steps (.c -> .o, .o -> exe) instead of one\n-             # (.c -> exe), because the warning occurs only in the second\n-             # step\n-             ax_pthread_save_ac_link=\"$ac_link\"\n-             ax_pthread_sed='s/conftest\\.\\$ac_ext/conftest.$ac_objext/g'\n-             ax_pthread_link_step=`$as_echo \"$ac_link\" | sed \"$ax_pthread_sed\"`\n-             ax_pthread_2step_ac_link=\"($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)\"\n-             ax_pthread_save_CFLAGS=\"$CFLAGS\"\n-             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do\n-                AS_IF([test \"x$ax_pthread_try\" = \"xunknown\"], [break])\n-                CFLAGS=\"-Werror -Wunknown-warning-option $ax_pthread_try -pthread $ax_pthread_save_CFLAGS\"\n-                ac_link=\"$ax_pthread_save_ac_link\"\n-                AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],\n-                    [ac_link=\"$ax_pthread_2step_ac_link\"\n-                     AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],\n-                         [break])\n-                    ])\n-             done\n-             ac_link=\"$ax_pthread_save_ac_link\"\n-             CFLAGS=\"$ax_pthread_save_CFLAGS\"\n-             AS_IF([test \"x$ax_pthread_try\" = \"x\"], [ax_pthread_try=no])\n-             ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=\"$ax_pthread_try\"\n-            ])\n-\n-        case \"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" in\n-                no | unknown) ;;\n-                *) PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG $PTHREAD_CFLAGS\" ;;\n-        esac\n-\n-fi # $ax_pthread_clang = yes\n-\n-\n-\n-# Various other checks:\n-if test \"x$ax_pthread_ok\" = \"xyes\"; then\n-        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n-        ax_pthread_save_LIBS=\"$LIBS\"\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-\n-        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.\n-        AC_CACHE_CHECK([for joinable pthread attribute],\n-            [ax_cv_PTHREAD_JOINABLE_ATTR],\n-            [ax_cv_PTHREAD_JOINABLE_ATTR=unknown\n-             for ax_pthread_attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n-                 AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],\n-                                                 [int attr = $ax_pthread_attr; return attr /* ; */])],\n-                                [ax_cv_PTHREAD_JOINABLE_ATTR=$ax_pthread_attr; break],\n-                                [])\n-             done\n-            ])\n-        AS_IF([test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xunknown\" && \\\n-               test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xPTHREAD_CREATE_JOINABLE\" && \\\n-               test \"x$ax_pthread_joinable_attr_defined\" != \"xyes\"],\n-              [AC_DEFINE_UNQUOTED([PTHREAD_CREATE_JOINABLE],\n-                                  [$ax_cv_PTHREAD_JOINABLE_ATTR],\n-                                  [Define to necessary symbol if this constant\n-                                   uses a non-standard name on your system.])\n-               ax_pthread_joinable_attr_defined=yes\n-              ])\n-\n-        AC_CACHE_CHECK([whether more special flags are required for pthreads],\n-            [ax_cv_PTHREAD_SPECIAL_FLAGS],\n-            [ax_cv_PTHREAD_SPECIAL_FLAGS=no\n-             case $host_os in\n-             solaris*)\n-             ax_cv_PTHREAD_SPECIAL_FLAGS=\"-D_POSIX_PTHREAD_SEMANTICS\"\n-             ;;\n-             esac\n-            ])\n-        AS_IF([test \"x$ax_cv_PTHREAD_SPECIAL_FLAGS\" != \"xno\" && \\\n-               test \"x$ax_pthread_special_flags_added\" != \"xyes\"],\n-              [PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_SPECIAL_FLAGS $PTHREAD_CFLAGS\"\n-               ax_pthread_special_flags_added=yes])\n-\n-        AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],\n-            [ax_cv_PTHREAD_PRIO_INHERIT],\n-            [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],\n-                                             [[int i = PTHREAD_PRIO_INHERIT;\n-                                               return i;]])],\n-                            [ax_cv_PTHREAD_PRIO_INHERIT=yes],\n-                            [ax_cv_PTHREAD_PRIO_INHERIT=no])\n-            ])\n-        AS_IF([test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\" && \\\n-               test \"x$ax_pthread_prio_inherit_defined\" != \"xyes\"],\n-              [AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], [1], [Have PTHREAD_PRIO_INHERIT.])\n-               ax_pthread_prio_inherit_defined=yes\n-              ])\n-\n-        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n-        LIBS=\"$ax_pthread_save_LIBS\"\n-\n-        # More AIX lossage: compile with *_r variant\n-        if test \"x$GCC\" != \"xyes\"; then\n-            case $host_os in\n-                aix*)\n-                AS_CASE([\"x/$CC\"],\n-                    [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],\n-                    [#handle absolute path differently from PATH based program lookup\n-                     AS_CASE([\"x$CC\"],\n-                         [x/*],\n-                         [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC=\"${CC}_r\"])],\n-                         [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])\n-                ;;\n-            esac\n-        fi\n-fi\n-\n-test -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n-\n-AC_SUBST([PTHREAD_LIBS])\n-AC_SUBST([PTHREAD_CFLAGS])\n-AC_SUBST([PTHREAD_CC])\n-\n-# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\n-if test \"x$ax_pthread_ok\" = \"xyes\"; then\n-        ifelse([$1],,[AC_DEFINE([HAVE_PTHREAD],[1],[Define if you have POSIX threads libraries and header files.])],[$1])\n-        :\n-else\n-        ax_pthread_ok=no\n-        $2\n-fi\n-AC_LANG_POP\n-])dnl AX_PTHREAD"
      },
      {
        "sha": "aa0111e5a20f0c2bfd7c8de310dd0102ee1a2c6d",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 78,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,78 +0,0 @@\n-dnl Copyright (c) 2013-2015 The Bitcoin Core developers\n-dnl Distributed under the MIT software license, see the accompanying\n-dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-AC_DEFUN([BITCOIN_FIND_BDB48],[\n-  AC_ARG_VAR(BDB_CFLAGS, [C compiler flags for BerkeleyDB, bypasses autodetection])\n-  AC_ARG_VAR(BDB_LIBS, [Linker flags for BerkeleyDB, bypasses autodetection])\n-\n-  if test \"x$BDB_CFLAGS\" = \"x\"; then\n-    AC_MSG_CHECKING([for Berkeley DB C++ headers])\n-    BDB_CPPFLAGS=\n-    bdbpath=X\n-    bdb48path=X\n-    bdbdirlist=\n-    for _vn in 4.8 48 4 5 5.3 ''; do\n-      for _pfx in b lib ''; do\n-        bdbdirlist=\"$bdbdirlist ${_pfx}db${_vn}\"\n-      done\n-    done\n-    for searchpath in $bdbdirlist ''; do\n-      test -n \"${searchpath}\" && searchpath=\"${searchpath}/\"\n-      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        #include <${searchpath}db_cxx.h>\n-      ]],[[\n-        #if !((DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 8) || DB_VERSION_MAJOR > 4)\n-          #error \"failed to find bdb 4.8+\"\n-        #endif\n-      ]])],[\n-        if test \"x$bdbpath\" = \"xX\"; then\n-          bdbpath=\"${searchpath}\"\n-        fi\n-      ],[\n-        continue\n-      ])\n-      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        #include <${searchpath}db_cxx.h>\n-      ]],[[\n-        #if !(DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR == 8)\n-          #error \"failed to find bdb 4.8\"\n-        #endif\n-      ]])],[\n-        bdb48path=\"${searchpath}\"\n-        break\n-      ],[])\n-    done\n-    if test \"x$bdbpath\" = \"xX\"; then\n-      AC_MSG_RESULT([no])\n-      AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n-    elif test \"x$bdb48path\" = \"xX\"; then\n-      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n-      AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n-        AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n-      ],[\n-        AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n-      ])\n-    else\n-      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n-      bdbpath=\"${bdb48path}\"\n-    fi\n-  else\n-    BDB_CPPFLAGS=${BDB_CFLAGS}\n-  fi\n-  AC_SUBST(BDB_CPPFLAGS)\n-\n-  if test \"x$BDB_LIBS\" = \"x\"; then\n-    # TODO: Ideally this could find the library version and make sure it matches the headers being used\n-    for searchlib in db_cxx-4.8 db_cxx db4_cxx; do\n-      AC_CHECK_LIB([$searchlib],[main],[\n-        BDB_LIBS=\"-l${searchlib}\"\n-        break\n-      ])\n-    done\n-    if test \"x$BDB_LIBS\" = \"x\"; then\n-        AC_MSG_ERROR([libdb_cxx missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n-    fi\n-  fi\n-  AC_SUBST(BDB_LIBS)\n-])"
      },
      {
        "sha": "6c7665830b30325e0c8a9e477cdd64d13236c212",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 357,
        "changes": 357,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,357 +0,0 @@\n-dnl Copyright (c) 2013-2016 The Bitcoin Core developers\n-dnl Distributed under the MIT software license, see the accompanying\n-dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-dnl Helper for cases where a qt dependency is not met.\n-dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n-AC_DEFUN([BITCOIN_QT_FAIL],[\n-  if test \"x$bitcoin_qt_want_version\" = xauto && test \"x$bitcoin_qt_force\" != xyes; then\n-    if test \"x$bitcoin_enable_qt\" != xno; then\n-      AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n-    fi\n-    bitcoin_enable_qt=no\n-    bitcoin_enable_qt_test=no\n-  else\n-    AC_MSG_ERROR([$1])\n-  fi\n-])\n-\n-AC_DEFUN([BITCOIN_QT_CHECK],[\n-  if test \"x$bitcoin_enable_qt\" != xno && test \"x$bitcoin_qt_want_version\" != xno; then\n-    true\n-    $1\n-  else\n-    true\n-    $2\n-  fi\n-])\n-\n-dnl BITCOIN_QT_PATH_PROGS([FOO], [foo foo2], [/path/to/search/first], [continue if missing])\n-dnl Helper for finding the path of programs needed for Qt.\n-dnl Inputs: $1: Variable to be set\n-dnl Inputs: $2: List of programs to search for\n-dnl Inputs: $3: Look for $2 here before $PATH\n-dnl Inputs: $4: If \"yes\", don't fail if $2 is not found.\n-dnl Output: $1 is set to the path of $2 if found. $2 are searched in order.\n-AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n-  BITCOIN_QT_CHECK([\n-    if test \"x$3\" != x; then\n-      AC_PATH_PROGS($1,$2,,$3)\n-    else\n-      AC_PATH_PROGS($1,$2)\n-    fi\n-    if test \"x$$1\" = x && test \"x$4\" != xyes; then\n-      BITCOIN_QT_FAIL([$1 not found])\n-    fi\n-  ])\n-])\n-\n-dnl Initialize qt input.\n-dnl This must be called before any other BITCOIN_QT* macros to ensure that\n-dnl input variables are set correctly.\n-dnl CAUTION: Do not use this inside of a conditional.\n-AC_DEFUN([BITCOIN_QT_INIT],[\n-  dnl enable qt support\n-  AC_ARG_WITH([gui],\n-    [AS_HELP_STRING([--with-gui@<:@=no|qt5|auto@:>@],\n-    [build bitcoin-qt GUI (default=auto)])],\n-    [\n-     bitcoin_qt_want_version=$withval\n-     if test \"x$bitcoin_qt_want_version\" = xyes; then\n-       bitcoin_qt_force=yes\n-       bitcoin_qt_want_version=auto\n-     fi\n-    ],\n-    [bitcoin_qt_want_version=auto])\n-\n-  AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n-  AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n-  AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n-  AC_ARG_WITH([qt-translationdir],[AS_HELP_STRING([--with-qt-translationdir=PLUGIN_DIR],[specify qt translation path (overridden by pkgconfig)])], [qt_translation_path=$withval], [])\n-  AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path])], [qt_bin_path=$withval], [])\n-\n-  AC_ARG_WITH([qtdbus],\n-    [AS_HELP_STRING([--with-qtdbus],\n-    [enable DBus support (default is yes if qt is enabled and QtDBus is found, except on Android)])],\n-    [use_dbus=$withval],\n-    [use_dbus=auto])\n-\n-  dnl Android doesn't support D-Bus and certainly doesn't use it for notifications\n-  case $host in\n-    *android*)\n-      if test \"x$use_dbus\" != xyes; then\n-        use_dbus=no\n-      fi\n-    ;;\n-  esac\n-\n-  AC_SUBST(QT_TRANSLATION_DIR,$qt_translation_path)\n-])\n-\n-dnl Find Qt libraries and includes.\n-dnl\n-dnl   BITCOIN_QT_CONFIGURE([MINIMUM-VERSION])\n-dnl\n-dnl Outputs: See _BITCOIN_QT_FIND_LIBS\n-dnl Outputs: Sets variables for all qt-related tools.\n-dnl Outputs: bitcoin_enable_qt, bitcoin_enable_qt_dbus, bitcoin_enable_qt_test\n-AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n-  qt_version=\">= $1\"\n-  qt_lib_prefix=\"Qt5\"\n-  BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS])\n-\n-  dnl This is ugly and complicated. Yuck. Works as follows:\n-  dnl For Qt5, we can check a header to find out whether Qt is build\n-  dnl statically. When Qt is built statically, some plugins must be linked into\n-  dnl the final binary as well.\n-  dnl With Qt5, languages moved into core and the WindowsIntegration plugin was\n-  dnl added.\n-  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n-  dnl results to QT_LIBS.\n-  BITCOIN_QT_CHECK([\n-  TEMP_CPPFLAGS=$CPPFLAGS\n-  TEMP_CXXFLAGS=$CXXFLAGS\n-  CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n-  _BITCOIN_QT_IS_STATIC\n-  if test \"x$bitcoin_cv_static_qt\" = xyes; then\n-    _BITCOIN_QT_FIND_STATIC_PLUGINS\n-    AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-    if test \"x$TARGET_OS\" != xandroid; then\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n-      AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n-    fi\n-    if test \"x$TARGET_OS\" = xwindows; then\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n-      AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n-    elif test \"x$TARGET_OS\" = xlinux; then\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n-      AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n-    elif test \"x$TARGET_OS\" = xdarwin; then\n-      AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n-      AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n-    elif test \"x$TARGET_OS\" = xandroid; then\n-      QT_LIBS=\"-Wl,--export-dynamic,--undefined=JNI_OnLoad -lqtforandroid -ljnigraphics -landroid -lqtfreetype -lQt5EglSupport $QT_LIBS\"\n-      AC_DEFINE(QT_QPA_PLATFORM_ANDROID, 1, [Define this symbol if the qt platform is android])\n-    fi\n-  fi\n-  CPPFLAGS=$TEMP_CPPFLAGS\n-  CXXFLAGS=$TEMP_CXXFLAGS\n-  ])\n-\n-  if test \"x$qt_bin_path\" = x; then\n-    qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n-  fi\n-\n-  if test \"x$use_hardening\" != xno; then\n-    BITCOIN_QT_CHECK([\n-    AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)\n-    TEMP_CPPFLAGS=$CPPFLAGS\n-    TEMP_CXXFLAGS=$CXXFLAGS\n-    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-    CXXFLAGS=\"$PIE_FLAGS $CXXFLAGS\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        #include <QtCore/qconfig.h>\n-        #ifndef QT_VERSION\n-        #  include <QtCore/qglobal.h>\n-        #endif\n-      ]],\n-      [[\n-        #if defined(QT_REDUCE_RELOCATIONS)\n-        choke\n-        #endif\n-      ]])],\n-      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIE_FLAGS ],\n-      [ AC_MSG_RESULT(no); QT_PIE_FLAGS=$PIC_FLAGS]\n-    )\n-    CPPFLAGS=$TEMP_CPPFLAGS\n-    CXXFLAGS=$TEMP_CXXFLAGS\n-    ])\n-  else\n-    BITCOIN_QT_CHECK([\n-    AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)\n-    TEMP_CPPFLAGS=$CPPFLAGS\n-    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        #include <QtCore/qconfig.h>\n-        #ifndef QT_VERSION\n-        #  include <QtCore/qglobal.h>\n-        #endif\n-      ]],\n-      [[\n-        #if defined(QT_REDUCE_RELOCATIONS)\n-        choke\n-        #endif\n-      ]])],\n-      [ AC_MSG_RESULT(no)],\n-      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIC_FLAGS]\n-    )\n-    CPPFLAGS=$TEMP_CPPFLAGS\n-    ])\n-  fi\n-\n-  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt5 moc5 moc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt5 uic5 uic], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt5 rcc5 rcc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt5 lrelease5 lrelease], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt5 lupdate5 lupdate],$qt_bin_path, yes)\n-\n-  MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'\n-  case $host in\n-    *darwin*)\n-     BITCOIN_QT_CHECK([\n-       MOC_DEFS=\"${MOC_DEFS} -DQ_OS_MAC\"\n-       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n-       AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS=\"$QT_LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n-     ])\n-    ;;\n-    *mingw*)\n-       BITCOIN_QT_CHECK([\n-         AX_CHECK_LINK_FLAG([[-mwindows]],[QT_LDFLAGS=\"$QT_LDFLAGS -mwindows\"],[AC_MSG_WARN(-mwindows linker support not detected)])\n-       ])\n-  esac\n-\n-\n-  dnl enable qt support\n-  AC_MSG_CHECKING([whether to build ]AC_PACKAGE_NAME[ GUI])\n-  BITCOIN_QT_CHECK([\n-    bitcoin_enable_qt=yes\n-    bitcoin_enable_qt_test=yes\n-    if test \"x$have_qt_test\" = xno; then\n-      bitcoin_enable_qt_test=no\n-    fi\n-    bitcoin_enable_qt_dbus=no\n-    if test \"x$use_dbus\" != xno && test \"x$have_qt_dbus\" = xyes; then\n-      bitcoin_enable_qt_dbus=yes\n-    fi\n-    if test \"x$use_dbus\" = xyes && test \"x$have_qt_dbus\" = xno; then\n-      AC_MSG_ERROR([libQtDBus not found. Install libQtDBus or remove --with-qtdbus.])\n-    fi\n-    if test \"x$LUPDATE\" = x; then\n-      AC_MSG_WARN([lupdate is required to update qt translations])\n-    fi\n-  ],[\n-    bitcoin_enable_qt=no\n-  ])\n-  if test x$bitcoin_enable_qt = xyes; then\n-    AC_MSG_RESULT([$bitcoin_enable_qt ($qt_lib_prefix)])\n-  else\n-    AC_MSG_RESULT([$bitcoin_enable_qt])\n-  fi\n-\n-  AC_SUBST(QT_PIE_FLAGS)\n-  AC_SUBST(QT_INCLUDES)\n-  AC_SUBST(QT_LIBS)\n-  AC_SUBST(QT_LDFLAGS)\n-  AC_SUBST(QT_DBUS_INCLUDES)\n-  AC_SUBST(QT_DBUS_LIBS)\n-  AC_SUBST(QT_TEST_INCLUDES)\n-  AC_SUBST(QT_TEST_LIBS)\n-  AC_SUBST(QT_SELECT, qt5)\n-  AC_SUBST(MOC_DEFS)\n-])\n-\n-dnl All macros below are internal and should _not_ be used from the main\n-dnl configure.ac.\n-dnl ----\n-\n-dnl Internal. Check if the linked version of Qt was built as static libs.\n-dnl Requires: Qt5.\n-dnl Requires: INCLUDES and LIBS must be populated as necessary.\n-dnl Output: bitcoin_cv_static_qt=yes|no\n-AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n-  AC_CACHE_CHECK(for static Qt, bitcoin_cv_static_qt,[\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        #include <QtCore/qconfig.h>\n-        #ifndef QT_VERSION\n-        #  include <QtCore/qglobal.h>\n-        #endif\n-      ]],\n-      [[\n-        #if !defined(QT_STATIC)\n-        choke\n-        #endif\n-      ]])],\n-      [bitcoin_cv_static_qt=yes],\n-      [bitcoin_cv_static_qt=no])\n-    ])\n-])\n-\n-dnl Internal. Check if the link-requirements for static plugins are met.\n-dnl Requires: INCLUDES and LIBS must be populated as necessary.\n-dnl Inputs: $1: A series of Q_IMPORT_PLUGIN().\n-dnl Inputs: $2: The libraries that resolve $1.\n-dnl Output: QT_LIBS is prepended or configure exits.\n-AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n-  AC_MSG_CHECKING(for static Qt plugins: $2)\n-  CHECK_STATIC_PLUGINS_TEMP_LIBS=\"$LIBS\"\n-  LIBS=\"$2 $QT_LIBS $LIBS\"\n-  AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-    #define QT_STATICPLUGIN\n-    #include <QtPlugin>\n-    $1]],\n-    [[return 0;]])],\n-    [AC_MSG_RESULT(yes); QT_LIBS=\"$2 $QT_LIBS\"],\n-    [AC_MSG_RESULT(no); BITCOIN_QT_FAIL(Could not resolve: $2)])\n-  LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n-])\n-\n-dnl Internal. Find paths necessary for linking qt static plugins\n-dnl Inputs: qt_plugin_path. optional.\n-dnl Outputs: QT_LIBS is appended\n-AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n-    if test \"x$qt_plugin_path\" != x; then\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n-      if test -d \"$qt_plugin_path/accessible\"; then\n-        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-      fi\n-      if test -d \"$qt_plugin_path/platforms/android\"; then\n-        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms/android -lqtfreetype -lEGL\"\n-      fi\n-      PKG_CHECK_MODULES([QTFONTDATABASE], [Qt5FontDatabaseSupport], [QT_LIBS=\"-lQt5FontDatabaseSupport $QT_LIBS\"])\n-      PKG_CHECK_MODULES([QTEVENTDISPATCHER], [Qt5EventDispatcherSupport], [QT_LIBS=\"-lQt5EventDispatcherSupport $QT_LIBS\"])\n-      PKG_CHECK_MODULES([QTTHEME], [Qt5ThemeSupport], [QT_LIBS=\"-lQt5ThemeSupport $QT_LIBS\"])\n-      PKG_CHECK_MODULES([QTDEVICEDISCOVERY], [Qt5DeviceDiscoverySupport], [QT_LIBS=\"-lQt5DeviceDiscoverySupport $QT_LIBS\"])\n-      PKG_CHECK_MODULES([QTACCESSIBILITY], [Qt5AccessibilitySupport], [QT_LIBS=\"-lQt5AccessibilitySupport $QT_LIBS\"])\n-      PKG_CHECK_MODULES([QTFB], [Qt5FbSupport], [QT_LIBS=\"-lQt5FbSupport $QT_LIBS\"])\n-      if test \"x$TARGET_OS\" = xlinux; then\n-        PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n-      elif test \"x$TARGET_OS\" = xdarwin; then\n-        PKG_CHECK_MODULES([QTCLIPBOARD], [Qt5ClipboardSupport], [QT_LIBS=\"-lQt5ClipboardSupport $QT_LIBS\"])\n-        PKG_CHECK_MODULES([QTGRAPHICS], [Qt5GraphicsSupport], [QT_LIBS=\"-lQt5GraphicsSupport $QT_LIBS\"])\n-        PKG_CHECK_MODULES([QTCGL], [Qt5CglSupport], [QT_LIBS=\"-lQt5CglSupport $QT_LIBS\"])\n-      fi\n-    fi\n-])\n-\n-dnl Internal. Find Qt libraries using pkg-config.\n-dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n-AC_DEFUN([_BITCOIN_QT_FIND_LIBS],[\n-  BITCOIN_QT_CHECK([\n-    PKG_CHECK_MODULES([QT_CORE], [${qt_lib_prefix}Core $qt_version], [],\n-                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Core $qt_version not found])])\n-  ])\n-  BITCOIN_QT_CHECK([\n-    PKG_CHECK_MODULES([QT_GUI], [${qt_lib_prefix}Gui $qt_version], [],\n-                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Gui $qt_version not found])])\n-  ])\n-  BITCOIN_QT_CHECK([\n-    PKG_CHECK_MODULES([QT_WIDGETS], [${qt_lib_prefix}Widgets $qt_version], [],\n-                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Widgets $qt_version not found])])\n-  ])\n-  BITCOIN_QT_CHECK([\n-    PKG_CHECK_MODULES([QT_NETWORK], [${qt_lib_prefix}Network $qt_version], [],\n-                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Network $qt_version not found])])\n-  ])\n-  QT_INCLUDES=\"$QT_CORE_CFLAGS $QT_GUI_CFLAGS $QT_WIDGETS_CFLAGS $QT_NETWORK_CFLAGS\"\n-  QT_LIBS=\"$QT_CORE_LIBS $QT_GUI_LIBS $QT_WIDGETS_LIBS $QT_NETWORK_LIBS\"\n-\n-  BITCOIN_QT_CHECK([\n-    PKG_CHECK_MODULES([QT_TEST], [${qt_lib_prefix}Test $qt_version], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n-    if test \"x$use_dbus\" != xno; then\n-      PKG_CHECK_MODULES([QT_DBUS], [${qt_lib_prefix}DBus $qt_version], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n-    fi\n-  ])\n-])"
      },
      {
        "sha": "7841042ac877b20ea8b35e634f1b4088aae1647f",
        "filename": "build-aux/m4/bitcoin_subdir_to_include.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/bitcoin_subdir_to_include.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/bitcoin_subdir_to_include.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_subdir_to_include.m4?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,18 +0,0 @@\n-dnl Copyright (c) 2013-2014 The Bitcoin Core developers\n-dnl Distributed under the MIT software license, see the accompanying\n-dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-dnl BITCOIN_SUBDIR_TO_INCLUDE([CPPFLAGS-VARIABLE-NAME],[SUBDIRECTORY-NAME],[HEADER-FILE])\n-dnl SUBDIRECTORY-NAME must end with a path separator\n-AC_DEFUN([BITCOIN_SUBDIR_TO_INCLUDE],[\n-  if test \"x$2\" = \"x\"; then\n-    AC_MSG_RESULT([default])\n-  else\n-    echo \"#include <$2$3.h>\" >conftest.cpp\n-    newinclpath=`${CXXCPP} ${CPPFLAGS} -M conftest.cpp 2>/dev/null | [ tr -d '\\\\n\\\\r\\\\\\\\' | sed -e 's/^.*[[:space:]:]\\(\\/[^[:space:]]*\\)]$3[\\.h[[:space:]].*$/\\1/' -e t -e d`]\n-    AC_MSG_RESULT([${newinclpath}])\n-    if test \"x${newinclpath}\" != \"x\"; then\n-      eval \"$1=\\\"\\$$1\\\"' -I${newinclpath}'\"\n-    fi\n-  fi\n-])"
      },
      {
        "sha": "75c43f9a92d3d6ac2a5d1aee89e97bab7a89f545",
        "filename": "build-aux/m4/l_atomic.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/l_atomic.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build-aux/m4/l_atomic.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/l_atomic.m4?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,46 +0,0 @@\n-dnl Copyright (c) 2015 Tim Kosse <tim.kosse@filezilla-project.org>\n-dnl Copying and distribution of this file, with or without modification, are\n-dnl permitted in any medium without royalty provided the copyright notice\n-dnl and this notice are preserved. This file is offered as-is, without any\n-dnl warranty.\n-\n-# Some versions of gcc/libstdc++ require linking with -latomic if\n-# using the C++ atomic library.\n-#\n-# Sourced from http://bugs.debian.org/797228\n-\n-m4_define([_CHECK_ATOMIC_testbody], [[\n-  #include <atomic>\n-  #include <cstdint>\n-\n-  int main() {\n-    std::atomic<int64_t> a{};\n-\n-    int64_t v = 5;\n-    int64_t r = a.fetch_add(v);\n-    return static_cast<int>(r);\n-  }\n-]])\n-\n-AC_DEFUN([CHECK_ATOMIC], [\n-\n-  AC_LANG_PUSH(C++)\n-\n-  AC_MSG_CHECKING([whether std::atomic can be used without link library])\n-\n-  AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_ATOMIC_testbody])],[\n-      AC_MSG_RESULT([yes])\n-    ],[\n-      AC_MSG_RESULT([no])\n-      LIBS=\"$LIBS -latomic\"\n-      AC_MSG_CHECKING([whether std::atomic needs -latomic])\n-      AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_ATOMIC_testbody])],[\n-          AC_MSG_RESULT([yes])\n-        ],[\n-          AC_MSG_RESULT([no])\n-          AC_MSG_FAILURE([cannot figure out how to use std::atomic])\n-        ])\n-    ])\n-\n-  AC_LANG_POP\n-])"
      },
      {
        "sha": "ae8120fdf3a44ab47700fe40a3a3cd93f3cb8d96",
        "filename": "build_msvc/.gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/.gitignore?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,27 +0,0 @@\n-# Build directories\n-Debug/*\n-Release/*\n-.vs\n-packages/*\n-*/Obj\n-*/Debug\n-*/Release\n-*/x64\n-*.vcxproj.user\n-\n-# .vcxproj files that are auto-generated by the msvc-autogen.py script.\n-libbitcoin_cli/libbitcoin_cli.vcxproj\n-libbitcoin_common/libbitcoin_common.vcxproj\n-libbitcoin_crypto/libbitcoin_crypto.vcxproj\n-libbitcoin_server/libbitcoin_server.vcxproj\n-libbitcoin_util/libbitcoin_util.vcxproj\n-libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj\n-libbitcoin_wallet/libbitcoin_wallet.vcxproj\n-libbitcoin_zmq/libbitcoin_zmq.vcxproj\n-bench_bitcoin/bench_bitcoin.vcxproj\n-libtest_util/libtest_util.vcxproj\n-\n-*/Win32\n-libbitcoin_qt/QtGeneratedFiles/*\n-test_bitcoin-qt/QtGeneratedFiles/*\n-vcpkg_installed\n\\ No newline at end of file"
      },
      {
        "sha": "87ea556a23b31897ac72907ebb5f9ee9516b7a1b",
        "filename": "build_msvc/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 79,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/README.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,79 +0,0 @@\n-Building Bitcoin Core with Visual Studio\n-========================================\n-\n-Introduction\n----------------------\n-Solution and project files to build the Bitcoin Core applications `msbuild` or Visual Studio can be found in the `build_msvc` directory. The build has been tested with Visual Studio 2017 and 2019.\n-\n-Building with Visual Studio is an alternative to the Linux based [cross-compiler build](https://github.com/bitcoin/bitcoin/blob/master/doc/build-windows.md).\n-\n-Quick Start\n----------------------\n-The minimal steps required to build Bitcoin Core with the msbuild toolchain are below. More detailed instructions are contained in the following sections.\n-\n-```\n-cd build_msvc\n-py -3 msvc-autogen.py\n-msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /t:build\n-```\n-\n-Dependencies\n----------------------\n-A number of [open source libraries](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) are required in order to be able to build Bitcoin Core.\n-\n-Options for installing the dependencies in a Visual Studio compatible manner are:\n-\n-- Use Microsoft's [vcpkg](https://docs.microsoft.com/en-us/cpp/vcpkg) to download the source packages and build locally. This is the recommended approach.\n-- Download the source code, build each dependency, add the required include paths, link libraries and binary tools to the Visual Studio project files.\n-- Use [nuget](https://www.nuget.org/) packages with the understanding that any binary files have been compiled by an untrusted third party.\n-\n-The [external dependencies](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) required for building are listed in the `build_msvc/vcpkg.json` file. The `msbuild` project files are configured to automatically install the `vcpkg` dependencies.\n-\n-Qt\n----------------------\n-In order to build the Bitcoin Core a static build of Qt is required. The runtime library version (e.g. v141, v142) and platform type (x86 or x64) must also match.\n-\n-Some prebuilt x64 versions of Qt can be downloaded from [here](https://github.com/sipsorcery/qt_win_binary/releases). Please be aware these downloads are NOT officially sanctioned by Bitcoin Core and are provided for developer convenience only. They should NOT be used for builds that will be used in a production environment or with real funds.\n-\n-To determine which Qt prebuilt version to download open the `.appveyor.yml` file and note the `QT_DOWNLOAD_URL`. When extracting the zip file the destination path must be set to `C:\\`. This is due to the way that Qt includes, libraries and tools use internal paths.\n-\n-To build Bitcoin Core without Qt unload or disable the `bitcoin-qt`, `libbitcoin_qt` and `test_bitcoin-qt` projects.\n-\n-Building\n----------------------\n-The instructions below use `vcpkg` to install the dependencies.\n-\n-- Install [`vcpkg`](https://github.com/Microsoft/vcpkg).\n-\n-- Use Python to generate `*.vcxproj` from Makefile\n-\n-```\n-PS >py -3 msvc-autogen.py\n-```\n-\n-- An optional step is to adjust the settings in the `build_msvc` directory and the `common.init.vcxproj` file. This project file contains settings that are common to all projects such as the runtime library version and target Windows SDK version. The Qt directories can also be set.\n-\n-- To build from the command line with the Visual Studio 2017 toolchain use:\n-\n-```\n-msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /p:PlatformToolset=v141 /t:build\n-```\n-\n-- To build from the command line with the Visual Studio 2019 toolchain use:\n-\n-```\n-msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /t:build\n-```\n-\n-- Alternatively open the `build_msvc/bitcoin.sln` file in Visual Studio.\n-\n-AppVeyor\n----------------------\n-The .appveyor.yml in the root directory is suitable to perform builds on [AppVeyor](https://www.appveyor.com/) Continuous Integration servers. The simplest way to perform an AppVeyor build is to fork Bitcoin Core and then configure a new AppVeyor Project pointing to the forked repository.\n-\n-For safety reasons the Bitcoin Core .appveyor.yml file has the artifact options disabled. The build will be performed but no executable files will be available. To enable artifacts on a forked repository uncomment the lines shown below:\n-\n-```\n-    #- 7z a bitcoin-%APPVEYOR_BUILD_VERSION%.zip %APPVEYOR_BUILD_FOLDER%\\build_msvc\\%platform%\\%configuration%\\*.exe\n-    #- path: bitcoin-%APPVEYOR_BUILD_VERSION%.zip\n-```"
      },
      {
        "sha": "128c1bd8e7b6bd0622eefee3b5be73c47907b1e8",
        "filename": "build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "status": "removed",
        "additions": 0,
        "deletions": 62,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,62 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{1125654E-E1B2-4431-8B5C-62EA9A2FEECB}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup>\n-    <ConfigurationType>Application</ConfigurationType>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n-  </PropertyGroup>\n-  <ItemGroup>\n-@SOURCE_FILES@\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n-      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n-      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n-      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n-      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n-      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n-      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n-      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n-      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n-      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n-      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libtest_util\\libtest_util.vcxproj\">\n-      <Project>{1e065f03-3566-47d0-8fa9-daa72b084e7d}</Project>\n-    </ProjectReference>\n-  </ItemGroup>\n-  <Target Name=\"RawBenchHeaderGen\" BeforeTargets=\"PrepareForBuild\">\n-    <PropertyGroup>\n-      <ErrorText>There was an error executing the raw bench header generation task.</ErrorText>\n-    </PropertyGroup>\n-    <ItemGroup>\n-      <RawBenchFile Include=\"..\\..\\src\\bench\\data\\*.raw\" />\n-    </ItemGroup>\n-    <HeaderFromHexdump RawFilePath=\"%(RawBenchFile.FullPath)\" HeaderFilePath=\"%(RawBenchFile.FullPath).h\" SourceHeader=\"static unsigned const char %(RawBenchFile.Filename)_raw[] = {\" SourceFooter=\"};\" />\n-  </Target>\n-  <Import Label=\"hexdumpTarget\" Project=\"..\\msbuild\\tasks\\hexdump.targets\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "e5e0e978f89819af98f55803da8e8368f2815d86",
        "filename": "build_msvc/bitcoin-cli/bitcoin-cli.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 31,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/bitcoin-cli/bitcoin-cli.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/bitcoin-cli/bitcoin-cli.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-cli/bitcoin-cli.vcxproj?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,31 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{0B2D7431-F876-4A58-87BF-F748338CD3BF}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup>\n-    <ConfigurationType>Application</ConfigurationType>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\bitcoin-cli.cpp\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n-      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n-      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n-      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n-      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n-    </ProjectReference>\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "17cd31a52ef27db296d34fd810a98d7dc515ad61",
        "filename": "build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 83,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,83 +0,0 @@\n-\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <Import Project=\"..\\common.qt.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{7E99172D-7FF2-4CB6-B736-AC9B76ED412A}</ProjectGuid>\n-    <ConfigurationType>Application</ConfigurationType>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\qt\\main.cpp\" />\n-    <ResourceCompile Include=\"..\\..\\src\\qt\\res\\bitcoin-qt-res.rc\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n-      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n-      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n-      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n-      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_qt\\libbitcoin_qt.vcxproj\">\n-      <Project>{2b4abff8-d1fd-4845-88c9-1f3c0a6512bf}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n-      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n-      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n-      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n-      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n-      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n-      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n-      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n-    </ProjectReference>\n-  </ItemGroup>\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Release'\">\n-    <ClCompile>\n-      <AdditionalIncludeDirectories>$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-    </ClCompile>\n-    <Link>\n-      <AdditionalDependencies>$(QtReleaseLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n-      <AdditionalOptions>/ignore:4206</AdditionalOptions>\n-    </Link>\n-    <ResourceCompile>\n-      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n-      <PreprocessorDefinitions>HAVE_CONFIG_H;_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-    </ResourceCompile>\n-  </ItemDefinitionGroup>\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Debug'\">\n-    <ClCompile>\n-      <AdditionalIncludeDirectories>$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-    </ClCompile>\n-    <Link>\n-      <AdditionalDependencies>$(QtDebugLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n-      <AdditionalOptions>/ignore:4206</AdditionalOptions>\n-    </Link>\n-    <ResourceCompile>\n-      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n-      <PreprocessorDefinitions>HAVE_CONFIG_H;_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-    </ResourceCompile>\n-  </ItemDefinitionGroup>\n-\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-</Project>"
      },
      {
        "sha": "4e9b4916a0fc9e909ff06662ca28d1bf502736af",
        "filename": "build_msvc/bitcoin-tx/bitcoin-tx.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/bitcoin-tx/bitcoin-tx.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/bitcoin-tx/bitcoin-tx.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-tx/bitcoin-tx.vcxproj?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,37 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>Application</ConfigurationType>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\bitcoin-tx.cpp\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n-      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n-      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n-      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n-      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n-      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n-      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n-    </ProjectReference>\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "40c5db5522881ef14b9090009e50d9b90b394395",
        "filename": "build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 55,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,55 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{84DE8790-EDE3-4483-81AC-C32F15E861F4}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>Application</ConfigurationType>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\bitcoin-wallet.cpp\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n-      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n-      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n-      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n-      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n-      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n-      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n-      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n-      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n-      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_wallet_tool\\libbitcoin_wallet_tool.vcxproj\">\n-      <Project>{f91ac55e-6f5e-4c58-9ac5-b40db7deef93}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n-      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n-      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n-    </ProjectReference>\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "5e9715451f5a9309ae2d4989cfed2e5ec337e929",
        "filename": "build_msvc/bitcoin.sln",
        "status": "removed",
        "additions": 0,
        "deletions": 252,
        "changes": 252,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/bitcoin.sln",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/bitcoin.sln",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin.sln?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,252 +0,0 @@\n-Microsoft Visual Studio Solution File, Format Version 12.00\n-# Visual Studio Version 16\n-VisualStudioVersion = 16.0.28803.452\n-MinimumVisualStudioVersion = 10.0.40219.1\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoinconsensus\", \"libbitcoinconsensus\\libbitcoinconsensus.vcxproj\", \"{2B384FA8-9EE1-4544-93CB-0D733C25E8CE}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"testconsensus\", \"testconsensus\\testconsensus.vcxproj\", \"{E78473E9-B850-456C-9120-276301E04C06}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoind\", \"bitcoind\\bitcoind.vcxproj\", \"{D4513DDF-6013-44DC-ADCC-12EAF6D1F038}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_util\", \"libbitcoin_util\\libbitcoin_util.vcxproj\", \"{B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_common\", \"libbitcoin_common\\libbitcoin_common.vcxproj\", \"{7C87E378-DF58-482E-AA2F-1BC129BC19CE}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_crypto\", \"libbitcoin_crypto\\libbitcoin_crypto.vcxproj\", \"{6190199C-6CF4-4DAD-BFBD-93FA72A760C1}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_server\", \"libbitcoin_server\\libbitcoin_server.vcxproj\", \"{460FEE33-1FE1-483F-B3BF-931FF8E969A5}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libunivalue\", \"libunivalue\\libunivalue.vcxproj\", \"{5724BA7D-A09A-4BA8-800B-C4C1561B3D69}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_wallet\", \"libbitcoin_wallet\\libbitcoin_wallet.vcxproj\", \"{93B86837-B543-48A5-A89B-7C87ABB77DF2}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_zmq\", \"libbitcoin_zmq\\libbitcoin_zmq.vcxproj\", \"{792D487F-F14C-49FC-A9DE-3FC150F31C3F}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"test_bitcoin\", \"test_bitcoin\\test_bitcoin.vcxproj\", \"{A56B73DB-D46D-4882-8374-1FE3FFA08F07}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_cli\", \"libbitcoin_cli\\libbitcoin_cli.vcxproj\", \"{0667528C-D734-4009-ADF9-C0D6C4A5A5A6}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-cli\", \"bitcoin-cli\\bitcoin-cli.vcxproj\", \"{0B2D7431-F876-4A58-87BF-F748338CD3BF}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bench_bitcoin\", \"bench_bitcoin\\bench_bitcoin.vcxproj\", \"{1125654E-E1B2-4431-8B5C-62EA9A2FEECB}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-tx\", \"bitcoin-tx\\bitcoin-tx.vcxproj\", \"{D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-wallet\", \"bitcoin-wallet\\bitcoin-wallet.vcxproj\", \"{84DE8790-EDE3-4483-81AC-C32F15E861F4}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_wallet_tool\", \"libbitcoin_wallet_tool\\libbitcoin_wallet_tool.vcxproj\", \"{F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libsecp256k1\", \"libsecp256k1\\libsecp256k1.vcxproj\", \"{BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libleveldb\", \"libleveldb\\libleveldb.vcxproj\", \"{18430FEF-6B61-4C53-B396-718E02850F1B}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_qt\", \"libbitcoin_qt\\libbitcoin_qt.vcxproj\", \"{2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-qt\", \"bitcoin-qt\\bitcoin-qt.vcxproj\", \"{7E99172D-7FF2-4CB6-B736-AC9B76ED412A}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libtest_util\", \"libtest_util\\libtest_util.vcxproj\", \"{868474FD-35F6-4400-8EED-30A33E7521D4}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"test_bitcoin-qt\", \"test_bitcoin-qt\\test_bitcoin-qt.vcxproj\", \"{51201D5E-D939-4854-AE9D-008F03FF518E}\"\n-EndProject\n-Global\n-    GlobalSection(SolutionConfigurationPlatforms) = preSolution\n-        Debug|x64 = Debug|x64\n-        Debug|x86 = Debug|x86\n-        Release|x64 = Release|x64\n-        Release|x86 = Release|x86\n-    EndGlobalSection\n-    GlobalSection(ProjectConfigurationPlatforms) = postSolution\n-        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x64.ActiveCfg = Debug|x64\n-        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x64.Build.0 = Debug|x64\n-        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x86.ActiveCfg = Debug|Win32\n-        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x86.Build.0 = Debug|Win32\n-        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x64.ActiveCfg = Release|x64\n-        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x64.Build.0 = Release|x64\n-        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x86.ActiveCfg = Release|Win32\n-        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x86.Build.0 = Release|Win32\n-        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x64.ActiveCfg = Debug|x64\n-        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x64.Build.0 = Debug|x64\n-        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x86.ActiveCfg = Debug|Win32\n-        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x86.Build.0 = Debug|Win32\n-        {E78473E9-B850-456C-9120-276301E04C06}.Release|x64.ActiveCfg = Release|x64\n-        {E78473E9-B850-456C-9120-276301E04C06}.Release|x64.Build.0 = Release|x64\n-        {E78473E9-B850-456C-9120-276301E04C06}.Release|x86.ActiveCfg = Release|Win32\n-        {E78473E9-B850-456C-9120-276301E04C06}.Release|x86.Build.0 = Release|Win32\n-        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x64.ActiveCfg = Debug|x64\n-        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x64.Build.0 = Debug|x64\n-        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x86.ActiveCfg = Debug|Win32\n-        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x86.Build.0 = Debug|Win32\n-        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x64.ActiveCfg = Release|x64\n-        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x64.Build.0 = Release|x64\n-        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x86.ActiveCfg = Release|Win32\n-        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x86.Build.0 = Release|Win32\n-        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x64.ActiveCfg = Debug|x64\n-        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x64.Build.0 = Debug|x64\n-        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x86.ActiveCfg = Debug|Win32\n-        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x86.Build.0 = Debug|Win32\n-        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x64.ActiveCfg = Release|x64\n-        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x64.Build.0 = Release|x64\n-        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x86.ActiveCfg = Release|Win32\n-        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x86.Build.0 = Release|Win32\n-        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x64.ActiveCfg = Debug|x64\n-        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x64.Build.0 = Debug|x64\n-        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x86.ActiveCfg = Debug|Win32\n-        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x86.Build.0 = Debug|Win32\n-        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x64.ActiveCfg = Release|x64\n-        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x64.Build.0 = Release|x64\n-        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x86.ActiveCfg = Release|Win32\n-        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x86.Build.0 = Release|Win32\n-        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x64.ActiveCfg = Debug|x64\n-        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x64.Build.0 = Debug|x64\n-        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x86.ActiveCfg = Debug|Win32\n-        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x86.Build.0 = Debug|Win32\n-        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x64.ActiveCfg = Release|x64\n-        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x64.Build.0 = Release|x64\n-        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x86.ActiveCfg = Release|Win32\n-        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x86.Build.0 = Release|Win32\n-        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x64.ActiveCfg = Debug|x64\n-        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x64.Build.0 = Debug|x64\n-        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x86.ActiveCfg = Debug|Win32\n-        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x86.Build.0 = Debug|Win32\n-        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x64.ActiveCfg = Release|x64\n-        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x64.Build.0 = Release|x64\n-        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x86.ActiveCfg = Release|Win32\n-        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x86.Build.0 = Release|Win32\n-        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x64.ActiveCfg = Debug|x64\n-        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x64.Build.0 = Debug|x64\n-        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x86.ActiveCfg = Debug|Win32\n-        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x86.Build.0 = Debug|Win32\n-        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x64.ActiveCfg = Release|x64\n-        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x64.Build.0 = Release|x64\n-        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x86.ActiveCfg = Release|Win32\n-        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x86.Build.0 = Release|Win32\n-        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x64.ActiveCfg = Debug|x64\n-        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x64.Build.0 = Debug|x64\n-        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x86.ActiveCfg = Debug|Win32\n-        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x86.Build.0 = Debug|Win32\n-        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x64.ActiveCfg = Release|x64\n-        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x64.Build.0 = Release|x64\n-        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x86.ActiveCfg = Release|Win32\n-        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x86.Build.0 = Release|Win32\n-        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x64.ActiveCfg = Debug|x64\n-        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x64.Build.0 = Debug|x64\n-        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x86.ActiveCfg = Debug|Win32\n-        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x86.Build.0 = Debug|Win32\n-        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x64.ActiveCfg = Release|x64\n-        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x64.Build.0 = Release|x64\n-        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x86.ActiveCfg = Release|Win32\n-        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x86.Build.0 = Release|Win32\n-        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x64.ActiveCfg = Debug|x64\n-        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x64.Build.0 = Debug|x64\n-        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x86.ActiveCfg = Debug|Win32\n-        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x86.Build.0 = Debug|Win32\n-        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x64.ActiveCfg = Release|x64\n-        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x64.Build.0 = Release|x64\n-        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x86.ActiveCfg = Release|Win32\n-        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x86.Build.0 = Release|Win32\n-        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x64.ActiveCfg = Debug|x64\n-        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x64.Build.0 = Debug|x64\n-        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x86.ActiveCfg = Debug|Win32\n-        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x86.Build.0 = Debug|Win32\n-        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x64.ActiveCfg = Release|x64\n-        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x64.Build.0 = Release|x64\n-        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x86.ActiveCfg = Release|Win32\n-        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x86.Build.0 = Release|Win32\n-        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x64.ActiveCfg = Debug|x64\n-        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x64.Build.0 = Debug|x64\n-        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x86.ActiveCfg = Debug|Win32\n-        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x86.Build.0 = Debug|Win32\n-        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x64.ActiveCfg = Release|x64\n-        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x64.Build.0 = Release|x64\n-        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x86.ActiveCfg = Release|Win32\n-        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x86.Build.0 = Release|Win32\n-        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x64.ActiveCfg = Debug|x64\n-        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x64.Build.0 = Debug|x64\n-        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x86.ActiveCfg = Debug|Win32\n-        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x86.Build.0 = Debug|Win32\n-        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x64.ActiveCfg = Release|x64\n-        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x64.Build.0 = Release|x64\n-        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x86.ActiveCfg = Release|Win32\n-        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x86.Build.0 = Release|Win32\n-        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x64.ActiveCfg = Debug|x64\n-        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x64.Build.0 = Debug|x64\n-        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x86.ActiveCfg = Debug|Win32\n-        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x86.Build.0 = Debug|Win32\n-        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x64.ActiveCfg = Release|x64\n-        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x64.Build.0 = Release|x64\n-        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x86.ActiveCfg = Release|Win32\n-        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x86.Build.0 = Release|Win32\n-        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x64.ActiveCfg = Debug|x64\n-        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x64.Build.0 = Debug|x64\n-        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x86.ActiveCfg = Debug|Win32\n-        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x86.Build.0 = Debug|Win32\n-        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x64.ActiveCfg = Release|x64\n-        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x64.Build.0 = Release|x64\n-        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x86.ActiveCfg = Release|Win32\n-        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x86.Build.0 = Release|Win32\n-        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x64.ActiveCfg = Debug|x64\n-        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x64.Build.0 = Debug|x64\n-        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x86.ActiveCfg = Debug|Win32\n-        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x86.Build.0 = Debug|Win32\n-        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x64.ActiveCfg = Release|x64\n-        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x64.Build.0 = Release|x64\n-        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x86.ActiveCfg = Release|Win32\n-        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x86.Build.0 = Release|Win32\n-        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Debug|x64.ActiveCfg = Debug|x64\n-        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Debug|x64.Build.0 = Debug|x64\n-        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Debug|x86.ActiveCfg = Debug|Win32\n-        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Debug|x86.Build.0 = Debug|Win32\n-        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Release|x64.ActiveCfg = Release|x64\n-        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Release|x64.Build.0 = Release|x64\n-        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Release|x86.ActiveCfg = Release|Win32\n-        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Release|x86.Build.0 = Release|Win32\n-        {18430FEF-6B61-4C53-B396-718E02850F1B}.Debug|x64.ActiveCfg = Debug|x64\n-        {18430FEF-6B61-4C53-B396-718E02850F1B}.Debug|x64.Build.0 = Debug|x64\n-        {18430FEF-6B61-4C53-B396-718E02850F1B}.Debug|x86.ActiveCfg = Debug|Win32\n-        {18430FEF-6B61-4C53-B396-718E02850F1B}.Debug|x86.Build.0 = Debug|Win32\n-        {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x64.ActiveCfg = Release|x64\n-        {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x64.Build.0 = Release|x64\n-        {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x86.ActiveCfg = Release|Win32\n-        {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x86.Build.0 = Release|Win32\n-        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x64.ActiveCfg = Debug|x64\n-        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x64.Build.0 = Debug|x64\n-        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x86.ActiveCfg = Debug|Win32\n-        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x86.Build.0 = Debug|Win32\n-        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x64.ActiveCfg = Release|x64\n-        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x64.Build.0 = Release|x64\n-        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x86.ActiveCfg = Release|Win32\n-        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x86.Build.0 = Release|Win32\n-        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x64.ActiveCfg = Debug|x64\n-        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x64.Build.0 = Debug|x64\n-        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x86.ActiveCfg = Debug|Win32\n-        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x86.Build.0 = Debug|Win32\n-        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x64.ActiveCfg = Release|x64\n-        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x64.Build.0 = Release|x64\n-        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x86.ActiveCfg = Release|Win32\n-        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x86.Build.0 = Release|Win32\n-        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x64.ActiveCfg = Debug|x64\n-        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x64.Build.0 = Debug|x64\n-        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x86.ActiveCfg = Debug|Win32\n-        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x86.Build.0 = Debug|Win32\n-        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x64.ActiveCfg = Release|x64\n-        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x64.Build.0 = Release|x64\n-        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x86.ActiveCfg = Release|Win32\n-        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x86.Build.0 = Release|Win32\n-        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x64.ActiveCfg = Debug|x64\n-        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x64.Build.0 = Debug|x64\n-        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x86.ActiveCfg = Debug|Win32\n-        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x86.Build.0 = Debug|Win32\n-        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x64.ActiveCfg = Release|x64\n-        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x64.Build.0 = Release|x64\n-        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x86.ActiveCfg = Release|Win32\n-        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x86.Build.0 = Release|Win32\n-    EndGlobalSection\n-    GlobalSection(SolutionProperties) = preSolution\n-        HideSolutionNode = FALSE\n-    EndGlobalSection\n-    GlobalSection(ExtensibilityGlobals) = postSolution\n-                        SolutionGuid = {8AA72EDA-2CD4-4564-B1E4-688B760EEEE9}\n-                SolutionGuid = {8607C0F4-F33D-41B8-8D51-18E366A0F8DF}\n-        SolutionGuid = {58AAB032-7274-49BD-845E-5EF4DBB69B70}\n-    EndGlobalSection\n-EndGlobal"
      },
      {
        "sha": "9d0b50a0b4bfe463fb4b6bff36cc5381363b4527",
        "filename": "build_msvc/bitcoin_config.h",
        "status": "removed",
        "additions": 0,
        "deletions": 338,
        "changes": 338,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/bitcoin_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/bitcoin_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin_config.h?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,338 +0,0 @@\n-// Copyright (c) 2018-2020 The Bitcoin Core developers\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#ifndef BITCOIN_BITCOIN_CONFIG_H\n-#define BITCOIN_BITCOIN_CONFIG_H\n-\n-/* Define if building universal (internal helper macro) */\n-/* #undef AC_APPLE_UNIVERSAL_BUILD */\n-\n-/* Version Build */\n-#define CLIENT_VERSION_BUILD 0\n-\n-/* Version is release */\n-#define CLIENT_VERSION_IS_RELEASE false\n-\n-/* Major version */\n-#define CLIENT_VERSION_MAJOR 0\n-\n-/* Minor version */\n-#define CLIENT_VERSION_MINOR 20\n-\n-/* Build revision */\n-#define CLIENT_VERSION_REVISION 99\n-\n-/* Copyright holder(s) before %s replacement */\n-#define COPYRIGHT_HOLDERS \"The %s developers\"\n-\n-/* Copyright holder(s) */\n-#define COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\"\n-\n-/* Replacement for %s in copyright holders string */\n-#define COPYRIGHT_HOLDERS_SUBSTITUTION \"Bitcoin Core\"\n-\n-/* Copyright year */\n-#define COPYRIGHT_YEAR 2019\n-\n-/* Define to 1 to enable wallet functions */\n-#define ENABLE_WALLET 1\n-\n-/* Define to 1 to enable ZMQ functions */\n-#define ENABLE_ZMQ 1\n-\n-/* define if the Boost library is available */\n-#define HAVE_BOOST /**/\n-\n-/* define if the Boost::Filesystem library is available */\n-#define HAVE_BOOST_FILESYSTEM /**/\n-\n-/* define if the Boost::Process library is available */\n-#define HAVE_BOOST_PROCESS /**/\n-\n-/* define if the Boost::System library is available */\n-#define HAVE_BOOST_SYSTEM /**/\n-\n-/* define if the Boost::Thread library is available */\n-#define HAVE_BOOST_THREAD /**/\n-\n-/* define if the Boost::Unit_Test_Framework library is available */\n-#define HAVE_BOOST_UNIT_TEST_FRAMEWORK /**/\n-\n-/* Define to 1 if you have the <byteswap.h> header file. */\n-/* #undef HAVE_BYTESWAP_H */\n-\n-/* Define this symbol if the consensus lib has been built */\n-#define HAVE_CONSENSUS_LIB 1\n-\n-/* define if the compiler supports basic C++11 syntax */\n-#define HAVE_CXX11 1\n-\n-/* Define to 1 if you have the declaration of `be16toh', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_BE16TOH 0\n-\n-/* Define to 1 if you have the declaration of `be32toh', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_BE32TOH 0\n-\n-/* Define to 1 if you have the declaration of `be64toh', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_BE64TOH 0\n-\n-/* Define to 1 if you have the declaration of `bswap_16', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_BSWAP_16 0\n-\n-/* Define to 1 if you have the declaration of `bswap_32', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_BSWAP_32 0\n-\n-/* Define to 1 if you have the declaration of `bswap_64', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_BSWAP_64 0\n-\n-/* Define to 1 if you have the declaration of `daemon', and to 0 if you don't.\n-   */\n-#define HAVE_DECL_DAEMON 0\n-\n-/* Define to 1 if you have the declaration of `htobe16', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_HTOBE16 0\n-\n-/* Define to 1 if you have the declaration of `htobe32', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_HTOBE32 0\n-\n-/* Define to 1 if you have the declaration of `htobe64', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_HTOBE64 0\n-\n-/* Define to 1 if you have the declaration of `htole16', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_HTOLE16 0\n-\n-/* Define to 1 if you have the declaration of `htole32', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_HTOLE32 0\n-\n-/* Define to 1 if you have the declaration of `htole64', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_HTOLE64 0\n-\n-/* Define to 1 if you have the declaration of `le16toh', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_LE16TOH 0\n-\n-/* Define to 1 if you have the declaration of `le32toh', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_LE32TOH 0\n-\n-/* Define to 1 if you have the declaration of `le64toh', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_LE64TOH 0\n-\n-/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_STRERROR_R 0\n-\n-/* Define to 1 if you have the declaration of `strnlen', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_STRNLEN 1\n-\n-/* Define to 1 if you have the <dlfcn.h> header file. */\n-/* #undef HAVE_DLFCN_H */\n-\n-/* Define to 1 if you have the <endian.h> header file. */\n-/* #undef HAVE_ENDIAN_H */\n-\n-/* Define to 1 if the system has the `dllexport' function attribute */\n-#define HAVE_FUNC_ATTRIBUTE_DLLEXPORT 1\n-\n-/* Define to 1 if the system has the `dllimport' function attribute */\n-#define HAVE_FUNC_ATTRIBUTE_DLLIMPORT 1\n-\n-/* Define to 1 if the system has the `visibility' function attribute */\n-#define HAVE_FUNC_ATTRIBUTE_VISIBILITY 1\n-\n-/* Define this symbol if the BSD getentropy system call is available */\n-/* #undef HAVE_GETENTROPY */\n-\n-/* Define this symbol if the BSD getentropy system call is available with\n-   sys/random.h */\n-/* #undef HAVE_GETENTROPY_RAND */\n-\n-/* Define to 1 if you have the <inttypes.h> header file. */\n-#define HAVE_INTTYPES_H 1\n-\n-/* Define this symbol if you have malloc_info */\n-/* #undef HAVE_MALLOC_INFO */\n-\n-/* Define this symbol if you have mallopt with M_ARENA_MAX */\n-/* #undef HAVE_MALLOPT_ARENA_MAX */\n-\n-/* Define to 1 if you have the <memory.h> header file. */\n-#define HAVE_MEMORY_H 1\n-\n-/* Define to 1 if you have the <miniupnpc/miniupnpc.h> header file. */\n-#define HAVE_MINIUPNPC_MINIUPNPC_H 1\n-\n-/* Define to 1 if you have the <miniupnpc/miniwget.h> header file. */\n-#define HAVE_MINIUPNPC_MINIWGET_H 1\n-\n-/* Define to 1 if you have the <miniupnpc/upnpcommands.h> header file. */\n-#define HAVE_MINIUPNPC_UPNPCOMMANDS_H 1\n-\n-/* Define to 1 if you have the <miniupnpc/upnperrors.h> header file. */\n-#define HAVE_MINIUPNPC_UPNPERRORS_H 1\n-\n-/* Define this symbol if you have MSG_DONTWAIT */\n-/* #undef HAVE_MSG_DONTWAIT */\n-\n-/* Define this symbol if you have MSG_NOSIGNAL */\n-/* #undef HAVE_MSG_NOSIGNAL */\n-\n-/* Define if you have POSIX threads libraries and header files. */\n-//#define HAVE_PTHREAD 1\n-\n-/* Have PTHREAD_PRIO_INHERIT. */\n-//#define HAVE_PTHREAD_PRIO_INHERIT 1\n-\n-/* Define to 1 if you have the <stdint.h> header file. */\n-#define HAVE_STDINT_H 1\n-\n-/* Define to 1 if you have the <stdio.h> header file. */\n-#define HAVE_STDIO_H 1\n-\n-/* Define to 1 if you have the <stdlib.h> header file. */\n-#define HAVE_STDLIB_H 1\n-\n-/* Define to 1 if you have the `strerror_r' function. */\n-/* #undef HAVE_STRERROR_R */\n-\n-/* Define to 1 if you have the <strings.h> header file. */\n-#define HAVE_STRINGS_H 1\n-\n-/* Define to 1 if you have the <string.h> header file. */\n-#define HAVE_STRING_H 1\n-\n-/* Define this symbol if the BSD sysctl(KERN_ARND) is available */\n-/* #undef HAVE_SYSCTL_ARND */\n-\n-/* Define to 1 if you have the <sys/endian.h> header file. */\n-/* #undef HAVE_SYS_ENDIAN_H */\n-\n-/* Define this symbol if the Linux getrandom system call is available */\n-/* #undef HAVE_SYS_GETRANDOM */\n-\n-/* Define to 1 if you have the <sys/prctl.h> header file. */\n-/* #undef HAVE_SYS_PRCTL_H */\n-\n-/* Define to 1 if you have the <sys/select.h> header file. */\n-/* #undef HAVE_SYS_SELECT_H */\n-\n-/* Define to 1 if you have the <sys/stat.h> header file. */\n-#define HAVE_SYS_STAT_H 1\n-\n-/* Define to 1 if you have the <sys/types.h> header file. */\n-#define HAVE_SYS_TYPES_H 1\n-\n-/* Define to 1 if you have the <unistd.h> header file. */\n-//#define HAVE_UNISTD_H 1\n-\n-/* Define if the visibility attribute is supported. */\n-#define HAVE_VISIBILITY_ATTRIBUTE 1\n-\n-/* Define to the sub-directory where libtool stores uninstalled libraries. */\n-#define LT_OBJDIR \".libs/\"\n-\n-/* Define to the address where bug reports for this package should be sent. */\n-#define PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\"\n-\n-/* Define to the full name of this package. */\n-#define PACKAGE_NAME \"Bitcoin Core\"\n-\n-/* Define to the full name and version of this package. */\n-#define PACKAGE_STRING \"Bitcoin Core 0.19.99\"\n-\n-/* Define to the one symbol short name of this package. */\n-#define PACKAGE_TARNAME \"bitcoin\"\n-\n-/* Define to the home page for this package. */\n-#define PACKAGE_URL \"https://bitcoincore.org/\"\n-\n-/* Define to the version of this package. */\n-#define PACKAGE_VERSION \"0.19.99\"\n-\n-/* Define to necessary symbol if this constant uses a non-standard name on\n-   your system. */\n-/* #undef PTHREAD_CREATE_JOINABLE */\n-\n-/* Define this symbol if the qt platform is cocoa */\n-/* #undef QT_QPA_PLATFORM_COCOA */\n-\n-/* Define this symbol if the minimal qt platform exists */\n-#define QT_QPA_PLATFORM_MINIMAL 1\n-\n-/* Define this symbol if the qt platform is windows */\n-#define QT_QPA_PLATFORM_WINDOWS 1\n-\n-/* Define this symbol if the qt platform is xcb */\n-/* #undef QT_QPA_PLATFORM_XCB */\n-\n-/* Define this symbol if qt plugins are static */\n-#define QT_STATICPLUGIN 1\n-\n-/* Define to 1 if you have the ANSI C header files. */\n-#define STDC_HEADERS 1\n-\n-/* Define to 1 if strerror_r returns char *. */\n-/* #undef STRERROR_R_CHAR_P */\n-\n-/* Define this symbol to build in assembly routines */\n-//#define USE_ASM 1\n-\n-/* Define if dbus support should be compiled in */\n-/* #undef USE_DBUS */\n-\n-/* Define if QR support should be compiled in */\n-//#define USE_QRCODE 1\n-\n-/* UPnP support not compiled if undefined, otherwise value (0 or 1) determines\n-   default state */\n-//#define USE_UPNP 0\n-\n-/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most\n-   significant byte first (like Motorola and SPARC, unlike Intel). */\n-#if defined AC_APPLE_UNIVERSAL_BUILD\n-# if defined __BIG_ENDIAN__\n-#  define WORDS_BIGENDIAN 1\n-# endif\n-#else\n-# ifndef WORDS_BIGENDIAN\n-/* #  undef WORDS_BIGENDIAN */\n-# endif\n-#endif\n-\n-/* Enable large inode numbers on Mac OS X 10.5.  */\n-#ifndef _DARWIN_USE_64_BIT_INODE\n-# define _DARWIN_USE_64_BIT_INODE 1\n-#endif\n-\n-/* Number of bits in a file offset, on hosts where this is settable. */\n-#define _FILE_OFFSET_BITS 64\n-\n-/* Define for large files, on AIX-style hosts. */\n-/* #undef _LARGE_FILES */\n-\n-/* Windows Universal Platform constraints */\n-#if !defined(WINAPI_FAMILY) || (WINAPI_FAMILY == WINAPI_FAMILY_DESKTOP_APP)\n-/* Either a desktop application without API restrictions, or and older system\n-   before these macros were defined. */\n-\n-/* ::wsystem is available */\n-#define HAVE_SYSTEM 1\n-\n-#endif // !WINAPI_FAMILY || WINAPI_FAMILY_DESKTOP_APP\n-\n-#endif //BITCOIN_BITCOIN_CONFIG_H"
      },
      {
        "sha": "ae24cb100e68fc465bd612517d47ed8a96c6bfe2",
        "filename": "build_msvc/bitcoind/bitcoind.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 75,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/bitcoind/bitcoind.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/bitcoind/bitcoind.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoind/bitcoind.vcxproj?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,75 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{D4513DDF-6013-44DC-ADCC-12EAF6D1F038}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>Application</ConfigurationType>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\bitcoind.cpp\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n-      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n-      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n-      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n-      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n-      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n-      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n-      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n-      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n-      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n-      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n-    </ProjectReference>\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Label=\"ReplaceInFile\" Project=\"..\\msbuild\\tasks\\replaceinfile.targets\" />\n-  <PropertyGroup>\n-    <ConfigIniIn>..\\..\\test\\config.ini.in</ConfigIniIn>\n-    <ConfigIniOut>..\\..\\test\\config.ini</ConfigIniOut>\n-  </PropertyGroup>\n-  <Target Name=\"AfterBuild\">\n-    <Copy SourceFiles=\"$(ConfigIniIn)\" DestinationFiles=\"$(ConfigIniOut)\" ></Copy>\n-    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n-                   Replace=\"@PACKAGE_NAME@\" By=\"Bitcoin Core\"></ReplaceInFile>\n-    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n-                   Replace=\"@abs_top_srcdir@\" By=\"..\\..\" ToFullPath=\"true\"></ReplaceInFile>\n-    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n-                   Replace=\"@abs_top_builddir@\" By=\"..\\..\" ToFullPath=\"true\"></ReplaceInFile>\n-    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n-                   Replace=\"@EXEEXT@\" By=\".exe\"></ReplaceInFile>\n-    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n-                  Replace=\"@ENABLE_WALLET_TRUE@\" By=\"\"></ReplaceInFile>\n-    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n-                  Replace=\"@BUILD_BITCOIN_CLI_TRUE@\" By=\"\"></ReplaceInFile>\n-    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n-                  Replace=\"@BUILD_BITCOIND_TRUE@\" By=\"\"></ReplaceInFile>\n-    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n-                  Replace=\"@ENABLE_FUZZ_TRUE@\" By=\"\"></ReplaceInFile>\n-    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n-                  Replace=\"@ENABLE_ZMQ_TRUE@\" By=\"\"></ReplaceInFile>\n-  </Target>\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "ed227519ae10181a24145d33e131358e5c49a477",
        "filename": "build_msvc/common.init.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 135,
        "changes": 135,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/common.init.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/common.init.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.init.vcxproj?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,135 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-<Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n-\n-  <PropertyGroup Label=\"Globals\">\n-    <VCProjectVersion>16.0</VCProjectVersion>\n-    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n-    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n-    <UseNativeEnvironment>true</UseNativeEnvironment>\n-   </PropertyGroup>\n-\n-   <PropertyGroup Label=\"Vcpkg\">\n-    <VcpkgEnabled>true</VcpkgEnabled>\n-    <VcpkgEnableManifest>true</VcpkgEnableManifest>\n-    <VcpkgManifestInstall>true</VcpkgManifestInstall>\n-    <VcpkgUseStatic>true</VcpkgUseStatic>\n-    <VcpkgAutoLink>true</VcpkgAutoLink>\n-    <VcpkgConfiguration>$(Configuration)</VcpkgConfiguration>\n-  </PropertyGroup>\n-\n-  <PropertyGroup Condition=\"'$(WindowsTargetPlatformVersion)'=='' and !Exists('$(WindowsSdkDir)\\DesignTime\\CommonConfiguration\\Neutral\\Windows.props')\">\n-     <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' == ''\">$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v10.0@ProductVersion)</WindowsTargetPlatformVersion_10>\n-     <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' == ''\">$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Microsoft SDKs\\Windows\\v10.0@ProductVersion)</WindowsTargetPlatformVersion_10>\n-     <!-- Sometimes the version in the registry has to .0 suffix, and sometimes it doesn't. Check and add it -->\n-     <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' != '' and !$(WindowsTargetPlatformVersion_10.EndsWith('.0'))\">$(WindowsTargetPlatformVersion_10).0</WindowsTargetPlatformVersion_10>\n-     <WindowsTargetPlatformVersion>$(WindowsTargetPlatformVersion_10)</WindowsTargetPlatformVersion>\n-   </PropertyGroup>\n-\n-  <ItemGroup Label=\"ProjectConfigurations\">\n-    <ProjectConfiguration Include=\"Release|x64\">\n-      <Configuration>Release</Configuration>\n-      <Platform>x64</Platform>\n-    </ProjectConfiguration>\n-    <ProjectConfiguration Include=\"Debug|x64\">\n-      <Configuration>Debug</Configuration>\n-      <Platform>x64</Platform>\n-    </ProjectConfiguration>\n-    <ProjectConfiguration Include=\"Release|Win32\">\n-      <Configuration>Release</Configuration>\n-      <Platform>Win32</Platform>\n-    </ProjectConfiguration>\n-    <ProjectConfiguration Include=\"Debug|Win32\">\n-      <Configuration>Debug</Configuration>\n-      <Platform>Win32</Platform>\n-    </ProjectConfiguration>\n-  </ItemGroup>\n-\n-  <PropertyGroup Condition=\"'$(Configuration)'=='Debug'\" Label=\"Configuration\">\n-    <LinkIncremental>true</LinkIncremental>\n-    <WholeProgramOptimization>false</WholeProgramOptimization>\n-    <UseDebugLibraries>true</UseDebugLibraries>\n-    <PlatformToolset>v142</PlatformToolset>\n-    <CharacterSet>Unicode</CharacterSet>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\$(ProjectName)\\</OutDir>\n-    <IntDir>$(Platform)\\$(Configuration)\\$(ProjectName)\\</IntDir>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)'=='Release'\" Label=\"Configuration\">\n-    <LinkIncremental>false</LinkIncremental>\n-    <WholeProgramOptimization>true</WholeProgramOptimization>\n-    <UseDebugLibraries>false</UseDebugLibraries>\n-    <PlatformToolset>v142</PlatformToolset>\n-    <CharacterSet>Unicode</CharacterSet>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\$(ProjectName)\\</OutDir>\n-    <IntDir>$(Platform)\\$(Configuration)\\$(ProjectName)\\</IntDir>\n-  </PropertyGroup>\n-\n-<ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n-    <ClCompile>\n-      <Optimization>MaxSpeed</Optimization>\n-      <FunctionLevelLinking>true</FunctionLevelLinking>\n-      <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <SDLCheck>true</SDLCheck>\n-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n-    </ClCompile>\n-    <Link>\n-      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n-      <OptimizeReferences>true</OptimizeReferences>\n-    </Link>\n-  </ItemDefinitionGroup>\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n-    <ClCompile>\n-      <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n-      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n-      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>\n-    </ClCompile>\n-  </ItemDefinitionGroup>\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n-    <ClCompile>\n-      <Optimization>MaxSpeed</Optimization>\n-      <FunctionLevelLinking>true</FunctionLevelLinking>\n-      <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <SDLCheck>true</SDLCheck>\n-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n-    </ClCompile>\n-    <Link>\n-      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n-      <OptimizeReferences>true</OptimizeReferences>\n-    </Link>\n-  </ItemDefinitionGroup>\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n-    <ClCompile>\n-      <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n-      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n-      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>\n-    </ClCompile>\n-  </ItemDefinitionGroup>\n-\n-  <ItemDefinitionGroup>\n-    <ClCompile>\n-      <WarningLevel>Level3</WarningLevel>\n-      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n-      <AdditionalOptions>/utf-8 /std:c++17 %(AdditionalOptions)</AdditionalOptions>\n-      <DisableSpecificWarnings>4018;4221;4244;4267;4334;4715;4805;4834</DisableSpecificWarnings>\n-      <TreatWarningAsError>true</TreatWarningAsError>\n-      <PreprocessorDefinitions>_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING;_SILENCE_CXX17_OLD_ALLOCATOR_MEMBERS_DEPRECATION_WARNING;ZMQ_STATIC;NOMINMAX;WIN32;HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;_CONSOLE;_WIN32_WINNT=0x0601;_WIN32_IE=0x0501;WIN32_LEAN_AND_MEAN;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;..\\..\\src\\secp256k1\\include;..\\..\\src\\leveldb\\include;..\\..\\src\\leveldb\\helpers\\memenv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-    </ClCompile>\n-    <Link>\n-      <SubSystem>Console</SubSystem>\n-      <GenerateDebugInformation>true</GenerateDebugInformation>\n-      <AdditionalDependencies>Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n-    </Link>\n-    <Lib>\n-      <AdditionalOptions>/ignore:4221</AdditionalOptions>\n-    </Lib>\n-  </ItemDefinitionGroup>\n-  <Import Project=\"common.init.vcxproj.user\" Condition=\"Exists('common.init.vcxproj.user')\" />\n-</Project>"
      },
      {
        "sha": "42150a23103773a96de2f25f86de7ccb589e821e",
        "filename": "build_msvc/common.qt.init.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/common.qt.init.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/common.qt.init.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.qt.init.vcxproj?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-\n-  <PropertyGroup Label=\"QtGlobals\">\n-    <QtBaseDir>C:\\Qt5.9.8_x64_static_vs2019</QtBaseDir>\n-    <QtPluginsLibraryDir>$(QtBaseDir)\\plugins</QtPluginsLibraryDir>\n-    <QtLibraryDir>$(QtBaseDir)\\lib</QtLibraryDir>\n-    <QtIncludeDir>$(QtBaseDir)\\include</QtIncludeDir>\n-    <QtIncludes>$(QtIncludeDir);$(QtIncludeDir)\\QtNetwork;$(QtIncludeDir)\\QtCore;$(QtIncludeDir)\\QtWidgets;$(QtIncludeDir)\\QtGui;</QtIncludes>\n-    <GeneratedFilesOutDir>.\\QtGeneratedFiles\\qt</GeneratedFilesOutDir>\n-    <QtToolsDir>$(QtBaseDir)\\bin</QtToolsDir>\n-    <QtReleaseLibraries>$(QtPluginsLibraryDir)\\platforms\\qminimal.lib;$(QtPluginsLibraryDir)\\platforms\\qwindows.lib;$(QtLibraryDir)\\qtfreetype.lib;$(QtLibraryDir)\\qtharfbuzz.lib;$(QtLibraryDir)\\qtlibpng.lib;$(QtLibraryDir)\\qtpcre2.lib;$(QtLibraryDir)\\Qt5AccessibilitySupport.lib;$(QtLibraryDir)\\Qt5Core.lib;$(QtLibraryDir)\\Qt5Concurrent.lib;$(QtLibraryDir)\\Qt5EventDispatcherSupport.lib;$(QtLibraryDir)\\Qt5FontDatabaseSupport.lib;$(QtLibraryDir)\\Qt5Gui.lib;$(QtLibraryDir)\\Qt5Network.lib;$(QtLibraryDir)\\Qt5PlatformCompositorSupport.lib;$(QtLibraryDir)\\Qt5ThemeSupport.lib;$(QtLibraryDir)\\Qt5Widgets.lib;$(QtLibraryDir)\\Qt5WinExtras.lib;$(QtLibraryDir)\\qtmain.lib;userenv.lib;netapi32.lib;imm32.lib;Dwmapi.lib;version.lib;winmm.lib;UxTheme.lib</QtReleaseLibraries>\n-    <QtDebugLibraries>$(QtPluginsLibraryDir)\\platforms\\qwindowsd.lib;$(QtPluginsLibraryDir)\\platforms\\qminimald.lib;$(QtLibraryDir)\\*d.lib;crypt32.lib;userenv.lib;netapi32.lib;imm32.lib;Dwmapi.lib;version.lib;winmm.lib;UxTheme.lib</QtDebugLibraries>\n-  </PropertyGroup>\n-\n-</Project>"
      },
      {
        "sha": "4bbcc3767f63b23225a70f672764947637d9666c",
        "filename": "build_msvc/common.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/common.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/common.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.vcxproj?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,12 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-<PropertyGroup><BuildDependsOn>$(BuildDependsOn);CopyBuildArtifacts</BuildDependsOn></PropertyGroup>\n-  <Target Name=\"CopyBuildArtifacts\" Condition=\"'$(ConfigurationType)' != 'StaticLibrary'\">\n-    <ItemGroup>\n-      <BuildArtifacts Include=\"$(OutDir)$(TargetName)$(TargetExt)\"></BuildArtifacts>\n-      <BuildArtifacts Include=\"$(OutDir)$(TargetName).pdb\"></BuildArtifacts>\n-    </ItemGroup>\n-    <Copy SourceFiles=\"@(BuildArtifacts)\" SkipUnchangedFiles=\"true\" DestinationFolder=\"..\\..\\src\\\" Condition=\"'$(OutDir)' != ''\"></Copy>\n-  </Target>\n-  <Import Project=\"common.vcxproj.user\" Condition=\"Exists('common.vcxproj.user')\" />\n-</Project>"
      },
      {
        "sha": "620df72a2f76480b7645befdb8e889bf8c779046",
        "filename": "build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{0667528C-D734-4009-ADF9-C0D6C4A5A5A6}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup>\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-@SOURCE_FILES@\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "b47d62b29587ee85536232e599c1c9c4a1429b9a",
        "filename": "build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{7C87E378-DF58-482E-AA2F-1BC129BC19CE}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-@SOURCE_FILES@\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "32cb75bf871c180dafb4a0b5c0fbd4a0722fa18f",
        "filename": "build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{6190199C-6CF4-4DAD-BFBD-93FA72A760C1}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-@SOURCE_FILES@\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "6a3c9f1dc125b9e44fb27b11f4bdab81f12dd5fc",
        "filename": "build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 232,
        "changes": 232,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,232 +0,0 @@\n-\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <Import Project=\"..\\common.qt.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}</ProjectGuid>\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\qt\\addressbookpage.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\addresstablemodel.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\askpassphrasedialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\bantablemodel.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\bitcoin.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinaddressvalidator.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinamountfield.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\bitcoingui.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinstrings.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinunits.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\clientmodel.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\coincontroldialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\coincontroltreewidget.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\createwalletdialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\csvmodelwriter.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\editaddressdialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\guiutil.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\intro.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\modaloverlay.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\networkstyle.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\notificator.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\openuridialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\optionsdialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\optionsmodel.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\overviewpage.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\paymentserver.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\peertablemodel.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\platformstyle.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\psbtoperationsdialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\qrimagewidget.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\qvalidatedlineedit.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\qvaluecombobox.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\receivecoinsdialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\receiverequestdialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\recentrequeststablemodel.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\rpcconsole.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\sendcoinsdialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\sendcoinsentry.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\signverifymessagedialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\splashscreen.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\trafficgraphwidget.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\transactiondesc.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\transactiondescdialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\transactionfilterproxy.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\transactionrecord.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\transactiontablemodel.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\transactionview.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\utilitydialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\walletcontroller.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\walletframe.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\walletmodel.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\walletmodeltransaction.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\walletview.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\winshutdownmonitor.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addressbookpage.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addresstablemodel.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_askpassphrasedialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bantablemodel.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoin.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinaddressvalidator.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinamountfield.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoingui.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinunits.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_clientmodel.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_coincontroldialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_coincontroltreewidget.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_createwalletdialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_csvmodelwriter.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_editaddressdialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_guiutil.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_intro.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_modaloverlay.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_networkstyle.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_notificator.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_openuridialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_optionsdialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_optionsmodel.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_overviewpage.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_paymentserver.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_peertablemodel.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_platformstyle.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_psbtoperationsdialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qrimagewidget.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qvalidatedlineedit.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qvaluecombobox.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_receivecoinsdialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_receiverequestdialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_recentrequeststablemodel.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_rpcconsole.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_sendcoinsdialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_sendcoinsentry.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_signverifymessagedialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_splashscreen.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_trafficgraphwidget.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiondesc.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiondescdialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionfilterproxy.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionrecord.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiontablemodel.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionview.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_utilitydialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletcontroller.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletframe.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletmodel.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletmodeltransaction.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletview.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_winshutdownmonitor.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\rcc\\qrc_bitcoin.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\rcc\\qrc_bitcoin_locale.cpp\" />\n-  </ItemGroup>\n-\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n-    <ClCompile>\n-      <PreprocessorDefinitions>_AMD64_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-    </ClCompile>\n-  </ItemDefinitionGroup>\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n-    <ClCompile>\n-      <PreprocessorDefinitions>_AMD64_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-    </ClCompile>\n-  </ItemDefinitionGroup>\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n-    <ClCompile>\n-      <PreprocessorDefinitions>_X86_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-    </ClCompile>\n-  </ItemDefinitionGroup>\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n-    <ClCompile>\n-      <PreprocessorDefinitions>_X86_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-    </ClCompile>\n-  </ItemDefinitionGroup>\n-\n-  <ItemGroup>\n-    <QT_MOC Include=\"..\\..\\src\\qt\\bitcoinamountfield.cpp\" />\n-    <QT_MOC Include=\"..\\..\\src\\qt\\intro.cpp\" />\n-    <QT_MOC Include=\"..\\..\\src\\qt\\overviewpage.cpp\" />\n-    <QT_MOC Include=\"..\\..\\src\\qt\\rpcconsole.cpp\" />\n-    <MocHeaderFiles Include=\"..\\..\\src\\qt\\*.h\" />\n-    <ResourceTemplates Include=\"..\\..\\src\\qt\\*.qrc\" />\n-    <UiFormFiles Include=\"..\\..\\src\\qt\\forms\\*.ui\" />\n-    <TranslationFiles Include=\"..\\..\\src\\qt\\locale\\*.ts\" />\n-  </ItemGroup>\n-\n-  <Target Name=\"moccode\" Inputs=\"@(QT_MOC)\" Outputs=\"@(QT_MOC->'$(GeneratedFilesOutDir)\\%(Filename).moc')\">\n-    <PropertyGroup>\n-      <ErrorText>There was an error executing the libbitcoin_qt moc code include generation task.</ErrorText>\n-    </PropertyGroup>\n-    <MakeDir Directories=\"$(GeneratedFilesOutDir)\" />\n-    <Exec Command=\"echo Performing libbitcoin_qt moc code include generation task, output path $(GeneratedFilesOutDir).\" />\n-    <Exec Command=\"echo $(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(QT_MOC.Identity)&quot; -o $(GeneratedFilesOutDir)\\%(Filename).moc.\" />\n-    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(QT_MOC.Identity)&quot; -o $(GeneratedFilesOutDir)\\%(Filename).moc\" />\n-  </Target>\n-\n-  <Target Name=\"mocheader\" Inputs=\"@(MocHeaderFiles)\" Outputs=\"@(MocHeaderFiles->'$(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp')\">\n-    <PropertyGroup>\n-      <ErrorText>There was an error executing the libbitcoin_qt moc header generation task.</ErrorText>\n-    </PropertyGroup>\n-    <Exec Command=\"echo Performing libbitcoin_qt moc header generation task, output path $(GeneratedFilesOutDir)\\moc.\" />\n-    <Exec Command=\"echo $(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocHeaderFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp.\" />\n-    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\moc\\\" />\n-    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocHeaderFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp\" />\n-  </Target>\n-\n-  <Target Name=\"forms\" Inputs=\"@(UiFormFiles)\" Outputs=\"@(UiFormFiles->'$(GeneratedFilesOutDir)\\forms\\ui_%(Filename).h')\">\n-    <PropertyGroup>\n-      <ErrorText>There was an error executing the libbitcoin_qt forms header generation task.</ErrorText>\n-    </PropertyGroup>\n-    <Exec Command=\"echo Performing libbitcoin_qt forms header generation task, output path $(GeneratedFilesOutDir)\\forms.\" />\n-    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\forms\\\" />\n-    <Exec Command=\"$(QtToolsDir)\\uic.exe &quot;%(UiFormFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\forms\\ui_%(Filename).h\" />\n-  </Target>\n-\n-  <Target Name=\"translation\" Inputs=\"@(TranslationFiles)\" Outputs=\"@(TranslationFiles->'..\\..\\src\\qt\\locale\\%(Filename).qm')\">\n-    <PropertyGroup>\n-      <ErrorText>There was an error executing the libbitcoin_qt translation file generation task.</ErrorText>\n-    </PropertyGroup>\n-    <Exec Command=\"echo Performing libbitcoin_qt translation file generation task.\" />\n-    <Exec Command=\"$(QtToolsDir)\\lrelease.exe &quot;%(TranslationFiles.Identity)&quot; -qm ..\\..\\src\\qt\\locale\\%(Filename).qm\" />\n-  </Target>\n-\n-  <Target Name=\"resource\" Inputs=\"@(ResourceTemplates)\" Outputs=\"@(ResourceTemplates->'$(GeneratedFilesOutDir)\\rcc\\qrc_%(Filename).cpp')\" DependsOnTargets=\"translation\">\n-    <PropertyGroup>\n-      <ErrorText>There was an error executing the libbitcoin_qt resource code generation task.</ErrorText>\n-    </PropertyGroup>\n-    <Exec Command=\"echo Performing libbitcoin_qt resource code generation task, output path $(GeneratedFilesOutDir)\\rcc.\" />\n-    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\rcc\\\" />\n-    <Exec Command=\"$(QtToolsDir)\\rcc.exe --verbose --name %(Filename) &quot;%(ResourceTemplates.Identity)&quot; -o $(GeneratedFilesOutDir)\\rcc\\qrc_%(Filename).cpp\" />\n-  </Target>\n-\n-  <Target Name=\"qtclean\">\n-    <Exec Command=\"echo Clean libbitcoin_qt generated files from $(GeneratedFilesOutDir).\" />\n-    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\forms;$(GeneratedFilesOutDir)\\moc;$(GeneratedFilesOutDir)\\rcc;\" />\n-    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\" />\n-  </Target>\n-\n-  <PropertyGroup>\n-    <BuildDependsOn>\n-        moccode;\n-        mocheader;\n-        forms;\n-        translation;\n-        resource;\n-        $(BuildDependsOn);\n-    </BuildDependsOn>\n-  </PropertyGroup>\n-  <PropertyGroup>\n-    <CleanDependsOn>\n-        qtclean;\n-        $(CleanDependsOn);\n-    </CleanDependsOn>\n-  </PropertyGroup>\n-\n-</Project>"
      },
      {
        "sha": "58e90dbaeb438623922423bfd1890d16e84543cc",
        "filename": "build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,19 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{460FEE33-1FE1-483F-B3BF-931FF8E969A5}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-    <ItemGroup>\n-@SOURCE_FILES@\n-    <ClCompile Include=\"..\\..\\src\\wallet\\init.cpp\">\n-      <ObjectFileName>$(IntDir)wallet_init.obj</ObjectFileName>\n-    </ClCompile>\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "6ec40461c2adcd99965486308e490ed09ff8de03",
        "filename": "build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "status": "removed",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,17 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\util\\url.cpp\" />\n-@SOURCE_FILES@\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "9c8279c72abad60972a59d19cd663765e590cd01",
        "filename": "build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{93B86837-B543-48A5-A89B-7C87ABB77DF2}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-@SOURCE_FILES@\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "1a6b7b6b92670f31d4ae6ad79685744e85358b9f",
        "filename": "build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-@SOURCE_FILES@\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "e86eea81e6567b0306577ddc761a66b0221f2442",
        "filename": "build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{792D487F-F14C-49FC-A9DE-3FC150F31C3F}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-@SOURCE_FILES@\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "4cb0bdc90218add3a0cbfb365e15a7ba8d955e5c",
        "filename": "build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,37 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{2B384FA8-9EE1-4544-93CB-0D733C25E8CE}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\arith_uint256.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\consensus\\merkle.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\consensus\\tx_check.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\aes.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\chacha20.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\hmac_sha256.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\hmac_sha512.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\ripemd160.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\sha1.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\sha256.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\sha256_sse4.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\sha512.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\hash.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\primitives\\block.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\primitives\\transaction.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\pubkey.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\script\\bitcoinconsensus.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\script\\interpreter.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\script\\script.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\script\\script_error.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\uint256.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\util\\strencodings.cpp\" />\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "1610ae7d8661f421df97c103ae57bf80e9399371",
        "filename": "build_msvc/libleveldb/libleveldb.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 61,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libleveldb/libleveldb.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libleveldb/libleveldb.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libleveldb/libleveldb.vcxproj?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,61 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{18430FEF-6B61-4C53-B396-718E02850F1B}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\builder.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\c.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\dbformat.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\db_impl.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\db_iter.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\dumpfile.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\filename.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\log_reader.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\log_writer.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\memtable.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\repair.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\table_cache.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\version_edit.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\version_set.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\write_batch.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\helpers\\memenv\\memenv.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\block.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\block_builder.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\filter_block.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\format.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\iterator.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\merger.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\table.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\table_builder.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\two_level_iterator.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\arena.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\bloom.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\cache.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\coding.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\comparator.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\crc32c.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\env.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\env_windows.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\filter_policy.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\hash.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\histogram.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\logging.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\options.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\status.cc\" />\n-  </ItemGroup>\n-  <ItemDefinitionGroup>\n-     <ClCompile>\n-       <PreprocessorDefinitions>HAVE_CRC32C=0;HAVE_SNAPPY=0;__STDC_LIMIT_MACROS;LEVELDB_IS_BIG_ENDIAN=0;_UNICODE;UNICODE;_CRT_NONSTDC_NO_DEPRECATE;LEVELDB_PLATFORM_WINDOWS;LEVELDB_ATOMIC_PRESENT;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-       <DisableSpecificWarnings>4244;4267;4312;4722;</DisableSpecificWarnings>\n-       <AdditionalIncludeDirectories>..\\..\\src\\leveldb;..\\..\\src\\leveldb\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-     </ClCompile>\n-  </ItemDefinitionGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "c42918d6e17737ad8a473a5d597e4c162108e42f",
        "filename": "build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libsecp256k1/libsecp256k1.vcxproj?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,22 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\secp256k1\\src\\secp256k1.c\" />\n-  </ItemGroup>\n-    <ItemDefinitionGroup>\n-    <ClCompile>\n-      <PreprocessorDefinitions>ENABLE_MODULE_ECDH;ENABLE_MODULE_RECOVERY;ENABLE_MODULE_EXTRAKEYS;ENABLE_MODULE_SCHNORRSIG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-       <AdditionalIncludeDirectories>..\\..\\src\\secp256k1;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-     </ClCompile>\n-  </ItemDefinitionGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "5978b9a0d96f0c107da6c2beae79dae4c7536749",
        "filename": "build_msvc/libsecp256k1_config.h",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libsecp256k1_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libsecp256k1_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libsecp256k1_config.h?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,32 +0,0 @@\n-/**********************************************************************\n- * Copyright (c) 2013, 2014 Pieter Wuille                             *\n- * Distributed under the MIT software license, see the accompanying   *\n- * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n- **********************************************************************/\n-\n-#ifndef BITCOIN_LIBSECP256K1_CONFIG_H\n-#define BITCOIN_LIBSECP256K1_CONFIG_H\n-\n-#undef USE_ASM_X86_64\n-#undef USE_ENDOMORPHISM\n-#undef USE_FIELD_10X26\n-#undef USE_FIELD_5X52\n-#undef USE_FIELD_INV_BUILTIN\n-#undef USE_FIELD_INV_NUM\n-#undef USE_NUM_GMP\n-#undef USE_NUM_NONE\n-#undef USE_SCALAR_4X64\n-#undef USE_SCALAR_8X32\n-#undef USE_SCALAR_INV_BUILTIN\n-#undef USE_SCALAR_INV_NUM\n-\n-#define USE_NUM_NONE 1\n-#define USE_FIELD_INV_BUILTIN 1\n-#define USE_SCALAR_INV_BUILTIN 1\n-#define USE_FIELD_10X26 1\n-#define USE_SCALAR_8X32 1\n-\n-#define ECMULT_GEN_PREC_BITS 4\n-#define ECMULT_WINDOW_SIZE 15\n-\n-#endif /* BITCOIN_LIBSECP256K1_CONFIG_H */"
      },
      {
        "sha": "b5e844010e9197706dc0d75582fe2d3983bebfb5",
        "filename": "build_msvc/libtest_util/libtest_util.vcxproj.in",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libtest_util/libtest_util.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libtest_util/libtest_util.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libtest_util/libtest_util.vcxproj.in?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{868474FD-35F6-4400-8EED-30A33E7521D4}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-@SOURCE_FILES@\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "0f13a57241350d9bb8a37def99f0d5b2f91ad589",
        "filename": "build_msvc/libunivalue/libunivalue.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libunivalue/libunivalue.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/libunivalue/libunivalue.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libunivalue/libunivalue.vcxproj?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,19 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{5724BA7D-A09A-4BA8-800B-C4C1561B3D69}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue_get.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue_read.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue_write.cpp\" />\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "12868a987418158684c5aa5dd6eceef6b7116ba3",
        "filename": "build_msvc/msbuild/tasks/hexdump.targets",
        "status": "removed",
        "additions": 0,
        "deletions": 53,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/msbuild/tasks/hexdump.targets",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/msbuild/tasks/hexdump.targets",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msbuild/tasks/hexdump.targets?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,53 +0,0 @@\n-<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <UsingTask\n-    TaskName=\"HeaderFromHexdump\"\n-    TaskFactory=\"CodeTaskFactory\"\n-    AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll\" >\n-    <ParameterGroup>\n-        <RawFilePath Required=\"true\" />\n-        <HeaderFilePath Required=\"true\" />\n-        <SourceHeader Required=\"true\" />\n-        <SourceFooter Required=\"true\" />\n-    </ParameterGroup>\n-    <Task>\n-      <Using Namespace=\"System\"/>\n-      <Using Namespace=\"System.IO\"/>\n-      <Code Type=\"Fragment\" Language=\"cs\">\n-<![CDATA[\n-Log.LogMessage(\"msbuild inline hexdump task for \" + RawFilePath + \".\");\n-if(File.Exists(RawFilePath) == false) {\n-    Log.LogError(\"hexdump task could not locate \" + RawFilePath + \".\");\n-}\n-else {\n-    FileInfo inFileInfo = new FileInfo(RawFilePath);\n-    FileInfo outFileInfo = new FileInfo(HeaderFilePath);\n-\n-    if (outFileInfo.Exists == false || inFileInfo.LastWriteTime > outFileInfo.LastWriteTime)\n-    {\n-      using (Stream inStm = File.OpenRead(RawFilePath))\n-      {\n-          using (StreamWriter sw = new StreamWriter(HeaderFilePath))\n-          {\n-              sw.WriteLine(SourceHeader);\n-              int count = 0;\n-              int rawChar = inStm.ReadByte();\n-              while(rawChar != -1)\n-              {\n-                  sw.Write(\"0x{0:x2}, \", rawChar);\n-                  count++;\n-                  if(count % 8 == 0)\n-                  {\n-                      sw.WriteLine();\n-                  }\n-                  rawChar = inStm.ReadByte();\n-              }\n-              sw.WriteLine(SourceFooter);\n-          }\n-      }\n-   }\n-}\n-]]>\n-      </Code>\n-    </Task>\n-  </UsingTask>\n-</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "2ccb8b30e053f425e2b590a2ae5ee6d51523a957",
        "filename": "build_msvc/msbuild/tasks/replaceinfile.targets",
        "status": "removed",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/msbuild/tasks/replaceinfile.targets",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/msbuild/tasks/replaceinfile.targets",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msbuild/tasks/replaceinfile.targets?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,35 +0,0 @@\n-<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <UsingTask\n-    TaskName=\"ReplaceInFile\"\n-    TaskFactory=\"CodeTaskFactory\"\n-    AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll\" >\n-    <ParameterGroup>\n-        <FilePath Required=\"true\" />\n-        <Replace Required=\"true\" />\n-        <By Required=\"false\" />\n-        <ToFullPath Required=\"false\" />\n-    </ParameterGroup>\n-    <Task>\n-      <Using Namespace=\"System\"/>\n-      <Using Namespace=\"System.IO\"/>\n-      <Code Type=\"Fragment\" Language=\"cs\">\n-<![CDATA[\n-if(File.Exists(FilePath) == false) {\n-    Log.LogError(\"replaceinfile task could not locate \" + FilePath + \".\");\n-}\n-else {\n-    var data = File.ReadAllText(FilePath);\n-    var by = By;\n-    if (ToFullPath == \"true\")\n-    {\n-       by = Path.GetFullPath(by);\n-    }\n-    data = data.Replace(Replace, by);\n-    Log.LogMessage(\"Replace '\" + Replace + \"' by '\" + by + \"' in \" + FilePath);\n-    File.WriteAllText(FilePath, data, new System.Text.UTF8Encoding(false));\n-}\n-]]>\n-      </Code>\n-    </Task>\n-  </UsingTask>\n-</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "d99b17d38127bec2623a42552f461979cee61531",
        "filename": "build_msvc/msvc-autogen.py",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/msvc-autogen.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/msvc-autogen.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msvc-autogen.py?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,86 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2016-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-import os\n-import re\n-import argparse\n-from shutil import copyfile\n-\n-SOURCE_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'src'))\n-DEFAULT_PLATFORM_TOOLSET = R'v141'\n-\n-libs = [\n-    'libbitcoin_cli',\n-    'libbitcoin_common',\n-    'libbitcoin_crypto',\n-    'libbitcoin_server',\n-    'libbitcoin_util',\n-    'libbitcoin_wallet_tool',\n-    'libbitcoin_wallet',\n-    'libbitcoin_zmq',\n-    'bench_bitcoin',\n-    'libtest_util',\n-]\n-\n-ignore_list = [\n-]\n-\n-lib_sources = {}\n-\n-\n-def parse_makefile(makefile):\n-    with open(makefile, 'r', encoding='utf-8') as file:\n-        current_lib = ''\n-        for line in file.read().splitlines():\n-            if current_lib:\n-                source = line.split()[0]\n-                if source.endswith('.cpp') and not source.startswith('$') and source not in ignore_list:\n-                    source_filename = source.replace('/', '\\\\')\n-                    object_filename = source.replace('/', '_')[:-4] + \".obj\"\n-                    lib_sources[current_lib].append((source_filename, object_filename))\n-                if not line.endswith('\\\\'):\n-                    current_lib = ''\n-                continue\n-            for lib in libs:\n-                _lib = lib.replace('-', '_')\n-                if re.search(_lib + '.*_SOURCES \\\\= \\\\\\\\', line):\n-                    current_lib = lib\n-                    lib_sources[current_lib] = []\n-                    break\n-\n-def set_common_properties(toolset):\n-    with open(os.path.join(SOURCE_DIR, '../build_msvc/common.init.vcxproj'), 'r', encoding='utf-8') as rfile:\n-        s = rfile.read()\n-        s = re.sub('<PlatformToolset>.*?</PlatformToolset>', '<PlatformToolset>'+toolset+'</PlatformToolset>', s)\n-    with open(os.path.join(SOURCE_DIR, '../build_msvc/common.init.vcxproj'), 'w', encoding='utf-8',newline='\\n') as wfile:\n-        wfile.write(s)\n-\n-def main():\n-    parser = argparse.ArgumentParser(description='Bitcoin-core msbuild configuration initialiser.')\n-    parser.add_argument('-toolset', nargs='?',help='Optionally sets the msbuild platform toolset, e.g. v142 for Visual Studio 2019.'\n-         ' default is %s.'%DEFAULT_PLATFORM_TOOLSET)\n-    args = parser.parse_args()\n-    if args.toolset:\n-        set_common_properties(args.toolset)\n-\n-    for makefile_name in os.listdir(SOURCE_DIR):\n-        if 'Makefile' in makefile_name:\n-            parse_makefile(os.path.join(SOURCE_DIR, makefile_name))\n-    for key, value in lib_sources.items():\n-        vcxproj_filename = os.path.abspath(os.path.join(os.path.dirname(__file__), key, key + '.vcxproj'))\n-        content = ''\n-        for source_filename, object_filename in value:\n-            content += '    <ClCompile Include=\"..\\\\..\\\\src\\\\' + source_filename + '\">\\n'\n-            content += '      <ObjectFileName>$(IntDir)' + object_filename + '</ObjectFileName>\\n'\n-            content += '    </ClCompile>\\n'\n-        with open(vcxproj_filename + '.in', 'r', encoding='utf-8') as vcxproj_in_file:\n-            with open(vcxproj_filename, 'w', encoding='utf-8') as vcxproj_file:\n-                vcxproj_file.write(vcxproj_in_file.read().replace(\n-                    '@SOURCE_FILES@\\n', content))\n-    copyfile(os.path.join(SOURCE_DIR,'../build_msvc/bitcoin_config.h'), os.path.join(SOURCE_DIR, 'config/bitcoin-config.h'))\n-    copyfile(os.path.join(SOURCE_DIR,'../build_msvc/libsecp256k1_config.h'), os.path.join(SOURCE_DIR, 'secp256k1/src/libsecp256k1-config.h'))\n-\n-if __name__ == '__main__':\n-    main()"
      },
      {
        "sha": "2095c0c3213513510eb6106852943fc991d8e2b1",
        "filename": "build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 122,
        "changes": 122,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,122 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <Import Project=\"..\\common.qt.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{51201D5E-D939-4854-AE9D-008F03FF518E}</ProjectGuid>\n-    <ConfigurationType>Application</ConfigurationType>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\test\\util\\setup_common.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\test\\addressbooktests.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\test\\apptests.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\test\\compattests.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\test\\rpcnestedtests.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\test\\test_main.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\test\\uritests.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\test\\util.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\test\\wallettests.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\wallet\\test\\wallet_test_fixture.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addressbooktests.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_apptests.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_compattests.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_rpcnestedtests.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_uritests.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_wallettests.cpp\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n-      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n-      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n-      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n-      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_qt\\libbitcoin_qt.vcxproj\">\n-      <Project>{2b4abff8-d1fd-4845-88c9-1f3c0a6512bf}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n-      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n-      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n-      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n-      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n-      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n-      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n-      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n-    </ProjectReference>\n-  </ItemGroup>\n-\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Release'\">\n-    <ClCompile>\n-      <AdditionalIncludeDirectories>..\\libbitcoin_qt\\$(GeneratedFilesOutDir)\\..\\;$(QtIncludeDir)\\QtTest;$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-    </ClCompile>\n-    <Link>\n-      <AdditionalDependencies>$(QtLibraryDir)\\Qt5Test.lib;$(QtReleaseLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n-\t  <AdditionalOptions>/ignore:4206</AdditionalOptions>\n-    </Link>\n-  </ItemDefinitionGroup>\n-\n-    <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Debug'\">\n-    <ClCompile>\n-      <AdditionalIncludeDirectories>..\\libbitcoin_qt\\$(GeneratedFilesOutDir)\\..\\;$(QtIncludeDir)\\QtTest;$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-    </ClCompile>\n-    <Link>\n-      <AdditionalDependencies>$(QtDebugLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n-\t  <AdditionalOptions>/ignore:4206</AdditionalOptions>\n-    </Link>\n-  </ItemDefinitionGroup>\n-  <ItemGroup>\n-    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\addressbooktests.h\" />\n-    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\apptests.h\" />\n-    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\compattests.h\" />\n-    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\rpcnestedtests.h\" />\n-    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\uritests.h\" />\n-    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\wallettests.h\" />\n-  </ItemGroup>\n-  <Target Name=\"moccode\" Inputs=\"@(MocTestFiles)\" Outputs=\"@(MocTestFiles->'$(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp')\">\n-    <PropertyGroup>\n-      <ErrorText>There was an error executing the test_bitcoin-qt moc code generation task.</ErrorText>\n-    </PropertyGroup>\n-    <Exec Command=\"echo Performing test_bitcoin-qt moc generation task, output path $(GeneratedFilesOutDir)\\moc.\" />\n-    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\moc\\\" />\n-    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocTestFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp\" />\n-  </Target>\n-  <Target Name=\"QtTestCleanGeneratedFiles\">\n-    <Exec Command=\"echo Clean test_bitcoin-qt generated files from $(GeneratedFilesOutDir).\" />\n-    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\moc\\*\" />\n-    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\moc\" />\n-  </Target>\n-  <PropertyGroup>\n-    <BuildDependsOn>\n-       moccode;\n-       $(BuildDependsOn);\n-    </BuildDependsOn>\n-  </PropertyGroup>\n-  <PropertyGroup>\n-    <CleanDependsOn>\n-        QtTestCleanGeneratedFiles;\n-        $(CleanDependsOn);\n-    </CleanDependsOn>\n-  </PropertyGroup>\n-</Project>"
      },
      {
        "sha": "5c4b777d5164bbc3354b26f262310e9a385a99cd",
        "filename": "build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 73,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin/test_bitcoin.vcxproj?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,73 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{A56B73DB-D46D-4882-8374-1FE3FFA08F07}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>Application</ConfigurationType>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\test\\*_properties.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\test\\*_tests.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\test\\gen\\*_gen.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\test\\main.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\test\\util\\*.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_fixture.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_tests.cpp\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n-      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n-      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n-      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n-      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n-      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n-      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n-      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n-      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libtest_util\\libtest_util.vcxproj\">\n-      <Project>{1e065f03-3566-47d0-8fa9-daa72b084e7d}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n-      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n-      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n-      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n-    </ProjectReference>\n-  </ItemGroup>\n-  <Target Name=\"RawBenchHeaderGen\" BeforeTargets=\"PrepareForBuild\">\n-    <PropertyGroup>\n-      <ErrorText>There was an error executing the JSON test header generation task.</ErrorText>\n-    </PropertyGroup>\n-    <ItemGroup>\n-      <JsonTestFile Include=\"..\\..\\src\\test\\data\\*.json\" />\n-      <RawTestFile Include=\"..\\..\\src\\test\\data\\*.raw\" />\n-    </ItemGroup>\n-    <HeaderFromHexdump RawFilePath=\"%(RawTestFile.FullPath)\" HeaderFilePath=\"%(RawTestFile.FullPath).h\" SourceHeader=\"static unsigned const char %(RawTestFile.Filename)_raw[] = {\" SourceFooter=\"};\" />\n-    <HeaderFromHexdump RawFilePath=\"%(JsonTestFile.FullPath)\" HeaderFilePath=\"%(JsonTestFile.FullPath).h\" SourceHeader=\"namespace json_tests{ static unsigned const char %(JsonTestFile.Filename)[] = {\" SourceFooter=\"};}\" />\n-  </Target>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Label=\"hexdumpTarget\" Project=\"..\\msbuild\\tasks\\hexdump.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "5fdd97dc783e587ab68c49fd5ee06a53df2ec88f",
        "filename": "build_msvc/testconsensus/testconsensus.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 54,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/testconsensus/testconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/testconsensus/testconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/testconsensus/testconsensus.cpp?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,54 +0,0 @@\n-// Copyright (c) 2018-2019 The Bitcoin Core developers\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#include <iostream>\n-\n-// bitcoin includes.\n-#include <..\\src\\script\\bitcoinconsensus.h>\n-#include <..\\src\\primitives\\transaction.h>\n-#include <..\\src\\script\\script.h>\n-#include <..\\src\\streams.h>\n-#include <..\\src\\version.h>\n-\n-CMutableTransaction BuildSpendingTransaction(const CScript& scriptSig, const CScriptWitness& scriptWitness, int nValue = 0)\n-{\n-    CMutableTransaction txSpend;\n-    txSpend.nVersion = 1;\n-    txSpend.nLockTime = 0;\n-    txSpend.vin.resize(1);\n-    txSpend.vout.resize(1);\n-    txSpend.vin[0].scriptWitness = scriptWitness;\n-    txSpend.vin[0].prevout.hash = uint256();\n-    txSpend.vin[0].prevout.n = 0;\n-    txSpend.vin[0].scriptSig = scriptSig;\n-    txSpend.vin[0].nSequence = CTxIn::SEQUENCE_FINAL;\n-    txSpend.vout[0].scriptPubKey = CScript();\n-    txSpend.vout[0].nValue = nValue;\n-\n-    return txSpend;\n-}\n-\n-int main()\n-{\n-    std::cout << \"bitcoinconsensus version: \" << bitcoinconsensus_version() << std::endl;\n-\n-    CScript pubKeyScript;\n-    pubKeyScript << OP_1 << OP_0 << OP_1;\n-\n-    int amount = 0; // 600000000;\n-\n-    CScript scriptSig;\n-    CScriptWitness scriptWitness;\n-    CTransaction vanillaSpendTx = BuildSpendingTransaction(scriptSig, scriptWitness, amount);\n-    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n-    stream << vanillaSpendTx;\n-\n-    bitcoinconsensus_error err;\n-    auto op0Result = bitcoinconsensus_verify_script_with_amount(pubKeyScript.data(), pubKeyScript.size(), amount, (const unsigned char*)&stream[0], stream.size(), 0, bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL, &err);\n-    std::cout << \"Op0 result: \" << op0Result << \", error code \" << err << std::endl;\n-\n-    getchar();\n-\n-    return 0;\n-}"
      },
      {
        "sha": "776c40920abdd43ca179132ad31c77dd3b2685a3",
        "filename": "build_msvc/testconsensus/testconsensus.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/testconsensus/testconsensus.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/testconsensus/testconsensus.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/testconsensus/testconsensus.vcxproj?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,28 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{E78473E9-B850-456C-9120-276301E04C06}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>Application</ConfigurationType>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"testconsensus.cpp\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n-      <Project>{2B384FA8-9EE1-4544-93CB-0D733C25E8CE}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n-      <Project>{B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n-      <Project>{BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}</Project>\n-    </ProjectReference>\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "dfd3929c4410b92364a6f314295ddbaab7912bf7",
        "filename": "build_msvc/vcpkg.json",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/vcpkg.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/build_msvc/vcpkg.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/vcpkg.json?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,20 +0,0 @@\n-{\n-  \"name\": \"bitcoin-core\",\n-  \"version-string\": \"1\",\n-  \"dependencies\": [\n-    \"berkeleydb\",\n-    \"boost-filesystem\",\n-    \"boost-multi-index\",\n-    \"boost-process\",\n-    \"boost-signals2\",\n-    \"boost-test\",\n-    \"boost-thread\",\n-    \"sqlite3\",\n-    \"double-conversion\",\n-    {\n-      \"name\": \"libevent\",\n-      \"features\": [\"thread\"]\n-    },\n-    \"zeromq\"\n-  ]\n-}"
      },
      {
        "sha": "3c5f04c39e348d407718c7fce8cd4c69ab6cf0db",
        "filename": "ci/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/README.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,65 +0,0 @@\n-## CI Scripts\n-\n-This directory contains scripts for each build step in each build stage.\n-\n-### Running a Stage Locally\n-\n-Be aware that the tests will be built and run in-place, so please run at your own risk.\n-If the repository is not a fresh git clone, you might have to clean files from previous builds or test runs first.\n-\n-The ci needs to perform various sysadmin tasks such as installing packages or writing to the user's home directory.\n-While most of the actions are done inside a docker container, this is not possible for all. Thus, cache directories,\n-such as the depends cache, previous release binaries, or ccache, are mounted as read-write into the docker container. While it should be fine to run\n-the ci system locally on you development box, the ci scripts can generally be assumed to have received less review and\n-testing compared to other parts of the codebase. If you want to keep the work tree clean, you might want to run the ci\n-system in a virtual machine with a Linux operating system of your choice.\n-\n-To allow for a wide range of tested environments, but also ensure reproducibility to some extent, the test stage\n-requires `docker` to be installed. To install all requirements on Ubuntu, run\n-\n-```\n-sudo apt install docker.io bash\n-```\n-\n-To run the default test stage,\n-\n-```\n-./ci/test_run_all.sh\n-```\n-\n-To run the test stage with a specific configuration,\n-\n-```\n-FILE_ENV=\"./ci/test/00_setup_env_arm.sh\" ./ci/test_run_all.sh\n-```\n-\n-### Configurations\n-\n-The test files (`FILE_ENV`) are constructed to test a wide range of\n-configurations, rather than a single pass/fail. This helps to catch build\n-failures and logic errors that present on platforms other than the ones the\n-author has tested.\n-\n-Some builders use the dependency-generator in `./depends`, rather than using\n-the system package manager to install build dependencies. This guarantees that\n-the tester is using the same versions as the release builds, which also use\n-`./depends`.\n-\n-If no `FILE_ENV` has been specified or values are left out, `00_setup_env.sh`\n-is used as the default configuration with fallback values.\n-\n-It is also possible to force a specific configuration without modifying the\n-file. For example,\n-\n-```\n-MAKEJOBS=\"-j1\" FILE_ENV=\"./ci/test/00_setup_env_arm.sh\" ./ci/test_run_all.sh\n-```\n-\n-The files starting with `0n` (`n` greater than 0) are the scripts that are run\n-in order.\n-\n-### Cache\n-\n-In order to avoid rebuilding all dependencies for each build, the binaries are\n-cached and re-used when possible. Changes in the dependency-generator will\n-trigger cache-invalidation and rebuilds as necessary."
      },
      {
        "sha": "fae424051db6fbab7cfef56d701a77b4c06b24b6",
        "filename": "ci/lint/04_install.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/lint/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/lint/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/04_install.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,20 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-\n-travis_retry sudo apt update && sudo apt install -y clang-format-9\n-sudo update-alternatives --install /usr/bin/clang-format      clang-format      $(which clang-format-9     ) 100\n-sudo update-alternatives --install /usr/bin/clang-format-diff clang-format-diff $(which clang-format-diff-9) 100\n-\n-travis_retry pip3 install codespell==1.17.1\n-travis_retry pip3 install flake8==3.8.3\n-travis_retry pip3 install yq\n-travis_retry pip3 install mypy==0.781\n-\n-SHELLCHECK_VERSION=v0.7.1\n-curl -sL \"https://github.com/koalaman/shellcheck/releases/download/${SHELLCHECK_VERSION}/shellcheck-${SHELLCHECK_VERSION}.linux.x86_64.tar.xz\" | tar --xz -xf - --directory /tmp/\n-export PATH=\"/tmp/shellcheck-${SHELLCHECK_VERSION}:${PATH}\""
      },
      {
        "sha": "2987812c8e64bab1648a3dc04492b1d338cdf047",
        "filename": "ci/lint/05_before_script.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/lint/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/lint/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/05_before_script.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,9 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-\n-git fetch --unshallow"
      },
      {
        "sha": "dc0f9b923bb14a66f6d83c52f5f0aa2eabdf392d",
        "filename": "ci/lint/06_script.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/lint/06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/lint/06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/06_script.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,30 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-\n-if [ \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then\n-  # TRAVIS_BRANCH will be present in a Travis environment. For builds triggered\n-  # by a pull request this is the name of the branch targeted by the pull request.\n-  # https://docs.travis-ci.com/user/environment-variables/\n-  COMMIT_RANGE=\"$TRAVIS_BRANCH..HEAD\"\n-  test/lint/commit-script-check.sh $COMMIT_RANGE\n-fi\n-\n-test/lint/git-subtree-check.sh src/crypto/ctaes\n-test/lint/git-subtree-check.sh src/secp256k1\n-test/lint/git-subtree-check.sh src/univalue\n-test/lint/git-subtree-check.sh src/leveldb\n-test/lint/git-subtree-check.sh src/crc32c\n-test/lint/check-doc.py\n-test/lint/check-rpc-mappings.py .\n-test/lint/lint-all.sh\n-\n-if [ \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" ] && [ \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then\n-    git log --merges --before=\"2 days ago\" -1 --format='%H' > ./contrib/verify-commits/trusted-sha512-root-commit\n-    travis_retry gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys $(<contrib/verify-commits/trusted-keys) &&\n-    ./contrib/verify-commits/verify-commits.py --clean-merge=2;\n-fi"
      },
      {
        "sha": "1b03c652dbbf5b51f8c05e85090ad6b3ce4a1a85",
        "filename": "ci/retry/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 123,
        "changes": 123,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/retry/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/retry/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/retry/README.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,123 +0,0 @@\n-retry - The command line retry tool\n-------------------------------------------\n-\n-Retry any shell command with exponential backoff or constant delay.\n-\n-### Instructions\n-\n-Install:\n-\n-retry is a shell script, so drop it somewhere and make sure it's added to your $PATH. Or you can use the following one-liner:\n-\n-```sh\n-sudo sh -c \"curl https://raw.githubusercontent.com/kadwanev/retry/master/retry -o /usr/local/bin/retry && chmod +x /usr/local/bin/retry\"\n-```\n-\n-If you're on OS X, retry is also on Homebrew:\n-\n-```\n-brew pull 27283\n-brew install retry\n-```\n-Not popular enough for homebrew-core. Please star this project to help.\n-\n-### Usage\n-\n-Help:\n-\n-`retry -?`\n-\n-    Usage: retry [options] -- execute command\n-        -h, -?, --help\n-        -v, --verbose                    Verbose output\n-        -t, --tries=#                    Set max retries: Default 10\n-        -s, --sleep=secs                 Constant sleep amount (seconds)\n-        -m, --min=secs                   Exponential Backoff: minimum sleep amount (seconds): Default 0.3\n-        -x, --max=secs                   Exponential Backoff: maximum sleep amount (seconds): Default 60\n-        -f, --fail=\"script +cmds\"        Fail Script: run in case of final failure\n-\n-### Examples\n-\n-No problem:\n-\n-`retry echo u work good`\n-\n-    u work good\n-\n-Test functionality:\n-\n-`retry 'echo \"y u no work\"; false'`\n-\n-    y u no work\n-    Before retry #1: sleeping 0.3 seconds\n-    y u no work\n-    Before retry #2: sleeping 0.6 seconds\n-    y u no work\n-    Before retry #3: sleeping 1.2 seconds\n-    y u no work\n-    Before retry #4: sleeping 2.4 seconds\n-    y u no work\n-    Before retry #5: sleeping 4.8 seconds\n-    y u no work\n-    Before retry #6: sleeping 9.6 seconds\n-    y u no work\n-    Before retry #7: sleeping 19.2 seconds\n-    y u no work\n-    Before retry #8: sleeping 38.4 seconds\n-    y u no work\n-    Before retry #9: sleeping 60.0 seconds\n-    y u no work\n-    Before retry #10: sleeping 60.0 seconds\n-    y u no work\n-    etc..\n-\n-Limit retries:\n-\n-`retry -t 4 'echo \"y u no work\"; false'`\n-\n-    y u no work\n-    Before retry #1: sleeping 0.3 seconds\n-    y u no work\n-    Before retry #2: sleeping 0.6 seconds\n-    y u no work\n-    Before retry #3: sleeping 1.2 seconds\n-    y u no work\n-    Before retry #4: sleeping 2.4 seconds\n-    y u no work\n-    Retries exhausted\n-\n-Bad command:\n-\n-`retry poop`\n-\n-    bash: poop: command not found\n-\n-Fail command:\n-\n-`retry -t 3 -f 'echo \"oh poopsickles\"' 'echo \"y u no work\"; false'`\n-\n-    y u no work\n-    Before retry #1: sleeping 0.3 seconds\n-    y u no work\n-    Before retry #2: sleeping 0.6 seconds\n-    y u no work\n-    Before retry #3: sleeping 1.2 seconds\n-    y u no work\n-    Retries exhausted, running fail script\n-    oh poopsickles\n-\n-Last attempt passed:\n-\n-`retry -t 3 -- 'if [ $RETRY_ATTEMPT -eq 3 ]; then echo Passed at attempt $RETRY_ATTEMPT; true; else echo Failed at attempt $RETRY_ATTEMPT; false; fi;'`\n-\n-    Failed at attempt 0\n-    Before retry #1: sleeping 0.3 seconds\n-    Failed at attempt 1\n-    Before retry #2: sleeping 0.6 seconds\n-    Failed at attempt 2\n-    Before retry #3: sleeping 1.2 seconds\n-    Passed at attempt 3\n-\n-### License\n-\n-Apache 2.0 - go nuts"
      },
      {
        "sha": "3c06519dbdfebececdfe030cc60cab72d62658a2",
        "filename": "ci/retry/retry",
        "status": "removed",
        "additions": 0,
        "deletions": 163,
        "changes": 163,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/retry/retry",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/retry/retry",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/retry/retry?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,163 +0,0 @@\n-#!/usr/bin/env bash\n-\n-GETOPT_BIN=$IN_GETOPT_BIN\n-GETOPT_BIN=${GETOPT_BIN:-getopt}\n-\n-__sleep_amount() {\n-  if [ -n \"$constant_sleep\" ]; then\n-    sleep_time=$constant_sleep\n-  else\n-    #TODO: check for awk\n-    #TODO: check if user would rather use one of the other possible dependencies: python, ruby, bc, dc\n-    sleep_time=`awk \"BEGIN {t = $min_sleep * $(( (1<<($attempts -1)) )); print (t > $max_sleep ? $max_sleep : t)}\"`\n-  fi\n-}\n-\n-__log_out() {\n-  echo \"$1\" 1>&2\n-}\n-\n-# Parameters: max_tries min_sleep max_sleep constant_sleep fail_script EXECUTION_COMMAND\n-retry()\n-{\n-  local max_tries=\"$1\"; shift\n-  local min_sleep=\"$1\"; shift\n-  local max_sleep=\"$1\"; shift\n-  local constant_sleep=\"$1\"; shift\n-  local fail_script=\"$1\"; shift\n-  if [ -n \"$VERBOSE\" ]; then\n-    __log_out \"Retry Parameters: max_tries=$max_tries min_sleep=$min_sleep max_sleep=$max_sleep constant_sleep=$constant_sleep\"\n-    if [ -n \"$fail_script\" ]; then __log_out \"Fail script: $fail_script\"; fi\n-    __log_out \"\"\n-    __log_out \"Execution Command: $*\"\n-    __log_out \"\"\n-  fi\n-\n-  local attempts=0\n-  local return_code=1\n-\n-\n-  while [[ $return_code -ne 0 && $attempts -le $max_tries ]]; do\n-    if [ $attempts -gt 0 ]; then\n-      __sleep_amount\n-      __log_out \"Before retry #$attempts: sleeping $sleep_time seconds\"\n-      sleep $sleep_time\n-    fi\n-\n-    P=\"$1\"\n-    for param in \"${@:2}\"; do P=\"$P '$param'\"; done\n-    #TODO: replace single quotes in each arg with '\"'\"' ?\n-    export RETRY_ATTEMPT=$attempts\n-    bash -c \"$P\"\n-    return_code=$?\n-    #__log_out \"Process returned $return_code on attempt $attempts\"\n-    if [ $return_code -eq 127 ]; then\n-      # command not found\n-      exit $return_code\n-    elif [ $return_code -ne 0 ]; then\n-      attempts=$[$attempts +1]\n-    fi\n-  done\n-\n-  if [ $attempts -gt $max_tries ]; then\n-    if [ -n \"$fail_script\" ]; then\n-      __log_out \"Retries exhausted, running fail script\"\n-      eval $fail_script\n-    else\n-      __log_out \"Retries exhausted\"\n-    fi\n-  fi\n-\n-  exit $return_code\n-}\n-\n-# If we're being sourced, don't worry about such things\n-if [ \"$BASH_SOURCE\" == \"$0\" ]; then\n-  # Prints the help text\n-  help()\n-  {\n-    local retry=$(basename $0)\n-    cat <<EOF\n-Usage: $retry [options] -- execute command\n-    -h, -?, --help\n-    -v, --verbose                    Verbose output\n-    -t, --tries=#                    Set max retries: Default 10\n-    -s, --sleep=secs                 Constant sleep amount (seconds)\n-    -m, --min=secs                   Exponential Backoff: minimum sleep amount (seconds): Default 0.3\n-    -x, --max=secs                   Exponential Backoff: maximum sleep amount (seconds): Default 60\n-    -f, --fail=\"script +cmds\"        Fail Script: run in case of final failure\n-EOF\n-  }\n-\n-  # show help for no arguments if stdin is a terminal\n-  if { [ -z \"$1\" ] && [ -t 0 ] ; } || [ \"$1\" == '-h' ] || [ \"$1\" == '-?' ] || [ \"$1\" == '--help' ]\n-  then\n-    help\n-    exit 0\n-  fi\n-\n-  $GETOPT_BIN --test > /dev/null\n-  if [[ $? -ne 4 ]]; then\n-      echo \"I\u2019m sorry, 'getopt --test' failed in this environment. Please load GNU getopt.\"\n-      exit 1\n-  fi\n-\n-  OPTIONS=vt:s:m:x:f:\n-  LONGOPTIONS=verbose,tries:,sleep:,min:,max:,fail:\n-\n-  PARSED=$($GETOPT_BIN --options=\"$OPTIONS\" --longoptions=\"$LONGOPTIONS\" --name \"$0\" -- \"$@\")\n-  if [[ $? -ne 0 ]]; then\n-    # e.g. $? == 1\n-    #  then getopt has complained about wrong arguments to stdout\n-    exit 2\n-  fi\n-  # read getopt\u2019s output this way to handle the quoting right:\n-  eval set -- \"$PARSED\"\n-\n-  max_tries=10\n-  min_sleep=0.3\n-  max_sleep=60.0\n-  constant_sleep=\n-  fail_script=\n-\n-  # now enjoy the options in order and nicely split until we see --\n-  while true; do\n-      case \"$1\" in\n-          -v|--verbose)\n-              VERBOSE=true\n-              shift\n-              ;;\n-          -t|--tries)\n-              max_tries=\"$2\"\n-              shift 2\n-              ;;\n-          -s|--sleep)\n-              constant_sleep=\"$2\"\n-              shift 2\n-              ;;\n-          -m|--min)\n-              min_sleep=\"$2\"\n-              shift 2\n-              ;;\n-          -x|--max)\n-              max_sleep=\"$2\"\n-              shift 2\n-              ;;\n-          -f|--fail)\n-              fail_script=\"$2\"\n-              shift 2\n-              ;;\n-          --)\n-              shift\n-              break\n-              ;;\n-          *)\n-              echo \"Programming error\"\n-              exit 3\n-              ;;\n-      esac\n-  done\n-\n-  retry \"$max_tries\" \"$min_sleep\" \"$max_sleep\" \"$constant_sleep\" \"$fail_script\" \"$@\"\n-\n-fi"
      },
      {
        "sha": "702e88186252621e5b8787ef8d89788556173c26",
        "filename": "ci/test/00_setup_env.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 72,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,72 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-# The root dir.\n-# The ci system copies this folder.\n-# This is where the depends build is done.\n-BASE_ROOT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\"/../../ >/dev/null 2>&1 && pwd )\n-export BASE_ROOT_DIR\n-\n-echo \"Setting specific values in env\"\n-if [ -n \"${FILE_ENV}\" ]; then\n-  set -o errexit;\n-  # shellcheck disable=SC1090\n-  source \"${FILE_ENV}\"\n-fi\n-\n-echo \"Fallback to default values in env (if not yet set)\"\n-# The number of parallel jobs to pass down to make and test_runner.py\n-export MAKEJOBS=${MAKEJOBS:--j4}\n-# A folder for the ci system to put temporary files (ccache, datadirs for tests, ...)\n-# This folder only exists on the ci host.\n-export BASE_SCRATCH_DIR=${BASE_SCRATCH_DIR:-$BASE_ROOT_DIR/ci/scratch}\n-# What host to compile for. See also ./depends/README.md\n-# Tests that need cross-compilation export the appropriate HOST.\n-# Tests that run natively guess the host\n-export HOST=${HOST:-$(\"$BASE_ROOT_DIR/depends/config.guess\")}\n-# Whether to prefer BusyBox over GNU utilities\n-export USE_BUSY_BOX=${USE_BUSY_BOX:-false}\n-\n-export RUN_UNIT_TESTS=${RUN_UNIT_TESTS:-true}\n-export RUN_FUNCTIONAL_TESTS=${RUN_FUNCTIONAL_TESTS:-true}\n-export RUN_SECURITY_TESTS=${RUN_SECURITY_TESTS:-false}\n-# By how much to scale the test_runner timeouts (option --timeout-factor).\n-# This is needed because some ci machines have slow CPU or disk, so sanitizers\n-# might be slow or a reindex might be waiting on disk IO.\n-export TEST_RUNNER_TIMEOUT_FACTOR=${TEST_RUNNER_TIMEOUT_FACTOR:-4}\n-export TEST_RUNNER_ENV=${TEST_RUNNER_ENV:-}\n-export RUN_FUZZ_TESTS=${RUN_FUZZ_TESTS:-false}\n-export EXPECTED_TESTS_DURATION_IN_SECONDS=${EXPECTED_TESTS_DURATION_IN_SECONDS:-1000}\n-\n-export CONTAINER_NAME=${CONTAINER_NAME:-ci_unnamed}\n-export DOCKER_NAME_TAG=${DOCKER_NAME_TAG:-ubuntu:18.04}\n-# Randomize test order.\n-# See https://www.boost.org/doc/libs/1_71_0/libs/test/doc/html/boost_test/utf_reference/rt_param_reference/random.html\n-export BOOST_TEST_RANDOM=${BOOST_TEST_RANDOM:-1}\n-# See man 7 debconf\n-export DEBIAN_FRONTEND=noninteractive\n-export CCACHE_SIZE=${CCACHE_SIZE:-100M}\n-export CCACHE_TEMPDIR=${CCACHE_TEMPDIR:-/tmp/.ccache-temp}\n-export CCACHE_COMPRESS=${CCACHE_COMPRESS:-1}\n-# The cache dir.\n-# This folder exists on the ci host and ci guest. Changes are propagated back and forth.\n-export CCACHE_DIR=${CCACHE_DIR:-$BASE_SCRATCH_DIR/.ccache}\n-# The depends dir.\n-# This folder exists on the ci host and ci guest. Changes are propagated back and forth.\n-export DEPENDS_DIR=${DEPENDS_DIR:-$BASE_ROOT_DIR/depends}\n-# Folder where the build result is put (bin and lib).\n-export BASE_OUTDIR=${BASE_OUTDIR:-$BASE_SCRATCH_DIR/out/$HOST}\n-# Folder where the build is done (dist and out-of-tree build).\n-export BASE_BUILD_DIR=${BASE_BUILD_DIR:-$BASE_SCRATCH_DIR/build}\n-export PREVIOUS_RELEASES_DIR=${PREVIOUS_RELEASES_DIR:-$BASE_ROOT_DIR/releases/$HOST}\n-export SDK_URL=${SDK_URL:-https://bitcoincore.org/depends-sources/sdks}\n-export DOCKER_PACKAGES=${DOCKER_PACKAGES:-build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3 rsync git procps}\n-export GOAL=${GOAL:-install}\n-export DIR_QA_ASSETS=${DIR_QA_ASSETS:-${BASE_SCRATCH_DIR}/qa-assets}\n-export PATH=${BASE_ROOT_DIR}/ci/retry:$PATH\n-export CI_RETRY_EXE=${CI_RETRY_EXE:-\"retry --\"}"
      },
      {
        "sha": "610e55c4c3e4b9840d0d0b6631f94c669e313fd7",
        "filename": "ci/test/00_setup_env_arm.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_arm.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_arm.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_arm.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,28 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export HOST=arm-linux-gnueabihf\n-# The host arch is unknown, so we run the tests through qemu.\n-# If the host is arm and wants to run the tests natively, it can set QEMU_USER_CMD to the empty string.\n-if [ -z ${QEMU_USER_CMD+x} ]; then export QEMU_USER_CMD=\"${QEMU_USER_CMD:-\"qemu-arm -L /usr/arm-linux-gnueabihf/\"}\"; fi\n-export DPKG_ADD_ARCH=\"armhf\"\n-export PACKAGES=\"python3-zmq g++-arm-linux-gnueabihf busybox libc6:armhf libstdc++6:armhf libfontconfig1:armhf libxcb1:armhf\"\n-if [ -n \"$QEMU_USER_CMD\" ]; then\n-  # Likely cross-compiling, so install the needed gcc and qemu-user\n-  export PACKAGES=\"$PACKAGES qemu-user\"\n-fi\n-export CONTAINER_NAME=ci_arm_linux\n-# Use debian to avoid 404 apt errors when cross compiling\n-export DOCKER_NAME_TAG=\"debian:buster\"\n-export USE_BUSY_BOX=true\n-export RUN_UNIT_TESTS=true\n-export RUN_FUNCTIONAL_TESTS=false\n-export GOAL=\"install\"\n-# -Wno-psabi is to disable ABI warnings: \"note: parameter passing for argument of type ... changed in GCC 7.1\"\n-# This could be removed once the ABI change warning does not show up by default\n-export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi --enable-werror --with-boost-process\""
      },
      {
        "sha": "e58003ab19e33ae2da6454f95ba1ddd277b11b3d",
        "filename": "ci/test/00_setup_env_i686_centos.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_i686_centos.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_i686_centos.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_i686_centos.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,15 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export HOST=i686-pc-linux-gnu\n-export CONTAINER_NAME=ci_i686_centos_7\n-export DOCKER_NAME_TAG=centos:7\n-export DOCKER_PACKAGES=\"gcc-c++ glibc-devel.x86_64 libstdc++-devel.x86_64 glibc-devel.i686 libstdc++-devel.i686 ccache libtool make git python3 python36-zmq which patch lbzip2 dash\"\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-reduce-exports --with-boost-process\"\n-export CONFIG_SHELL=\"/bin/dash\""
      },
      {
        "sha": "b62f1603f42ec34c8d3aee6e3cb6f16a27785693",
        "filename": "ci/test/00_setup_env_mac.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_mac.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_mac.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,17 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export CONTAINER_NAME=ci_macos_cross\n-export HOST=x86_64-apple-darwin16\n-export PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev python3-setuptools\"\n-export XCODE_VERSION=11.3.1\n-export XCODE_BUILD_ID=11C505\n-export RUN_UNIT_TESTS=false\n-export RUN_FUNCTIONAL_TESTS=false\n-export GOAL=\"deploy\"\n-export BITCOIN_CONFIG=\"--with-gui --enable-reduce-exports --enable-werror --with-boost-process\""
      },
      {
        "sha": "5fb127b7627978c24d67aefd9ab8350f077c6cc6",
        "filename": "ci/test/00_setup_env_mac_host.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_mac_host.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_mac_host.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac_host.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,22 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export HOST=x86_64-apple-darwin16\n-export DOCKER_NAME_TAG=ubuntu:18.04  # Check that bionic can cross-compile to macos (bionic is used in the gitian build as well)\n-export PIP_PACKAGES=\"zmq\"\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--with-gui --enable-reduce-exports --enable-werror --with-boost-process\"\n-export NO_DEPENDS=1\n-export OSX_SDK=\"\"\n-export CCACHE_SIZE=300M\n-\n-export RUN_SECURITY_TESTS=\"true\"\n-if [ \"$TRAVIS_REPO_SLUG\" != \"bitcoin/bitcoin\" ]; then\n-  export RUN_FUNCTIONAL_TESTS=\"false\"\n-  export EXPECTED_TESTS_DURATION_IN_SECONDS=200\n-fi"
      },
      {
        "sha": "191b8049b02e746035dd5b3eb525d8dbb120684c",
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,14 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export CONTAINER_NAME=ci_native_asan\n-export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev libsqlite3-dev\"\n-export DOCKER_NAME_TAG=ubuntu:20.04\n-export NO_DEPENDS=1\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=address,integer,undefined CC=clang CXX=clang++ --with-boost-process\""
      },
      {
        "sha": "a32de4a6b52667a301618861b438f3f8ecb86592",
        "filename": "ci/test/00_setup_env_native_fuzz.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_native_fuzz.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_native_fuzz.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,18 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n-export CONTAINER_NAME=ci_native_fuzz\n-export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev\"\n-export NO_DEPENDS=1\n-export RUN_UNIT_TESTS=false\n-export RUN_FUNCTIONAL_TESTS=false\n-export RUN_FUZZ_TESTS=true\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=clang CXX=clang++ --with-boost-process\"\n-export CCACHE_SIZE=200M"
      },
      {
        "sha": "e06a40eb23b20f97859363b29f5a20b7cc30594a",
        "filename": "ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz_with_valgrind.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,19 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n-export CONTAINER_NAME=ci_native_fuzz_valgrind\n-export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev valgrind\"\n-export NO_DEPENDS=1\n-export RUN_UNIT_TESTS=false\n-export RUN_FUNCTIONAL_TESTS=false\n-export RUN_FUZZ_TESTS=true\n-export FUZZ_TESTS_CONFIG=\"--valgrind\"\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer CC=clang CXX=clang++\"\n-export CCACHE_SIZE=200M"
      },
      {
        "sha": "b88ee2b50fb195f8ea6a7684dacb7e780c535ac4",
        "filename": "ci/test/00_setup_env_native_msan.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_native_msan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_native_msan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_msan.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,23 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n-LIBCXX_DIR=\"${BASE_ROOT_DIR}/ci/scratch/msan/build/\"\n-export MSAN_FLAGS=\"-fsanitize=memory -fsanitize-memory-track-origins=2 -fno-omit-frame-pointer -g -O1 -fno-optimize-sibling-calls\"\n-LIBCXX_FLAGS=\"-nostdinc++ -stdlib=libc++ -L${LIBCXX_DIR}lib -lc++abi -I${LIBCXX_DIR}include -I${LIBCXX_DIR}include/c++/v1 -lpthread -Wl,-rpath,${LIBCXX_DIR}lib -Wno-unused-command-line-argument\"\n-export MSAN_AND_LIBCXX_FLAGS=\"${MSAN_FLAGS} ${LIBCXX_FLAGS}\"\n-export BDB_PREFIX=\"${BASE_ROOT_DIR}/db4\"\n-\n-export CONTAINER_NAME=\"ci_native_msan\"\n-export PACKAGES=\"clang-9 llvm-9 cmake\"\n-export DEP_OPTS=\"NO_BDB=1 NO_QT=1 CC='clang' CXX='clang++' CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}' boost_cxxflags='-std=c++11 -fvisibility=hidden -fPIC ${MSAN_AND_LIBCXX_FLAGS}' zeromq_cxxflags='-std=c++11 ${MSAN_AND_LIBCXX_FLAGS}'\"\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-wallet --with-sanitizers=memory --with-asm=no --prefix=${BASE_ROOT_DIR}/depends/x86_64-pc-linux-gnu/ CC=clang CXX=clang++ CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}' BDB_LIBS='-L${BDB_PREFIX}/lib -ldb_cxx-4.8' BDB_CFLAGS='-I${BDB_PREFIX}/include'\"\n-export USE_MEMORY_SANITIZER=\"true\"\n-export RUN_FUNCTIONAL_TESTS=\"false\"\n-export CCACHE_SIZE=250M"
      },
      {
        "sha": "522a5d9fc28e6f9e0c38f4b8209d06cf668ab776",
        "filename": "ci/test/00_setup_env_native_multiprocess.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_native_multiprocess.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_native_multiprocess.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_multiprocess.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,15 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export CONTAINER_NAME=ci_native_multiprocess\n-export DOCKER_NAME_TAG=ubuntu:20.04\n-export PACKAGES=\"cmake python3\"\n-export DEP_OPTS=\"MULTIPROCESS=1\"\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--with-boost-process\"\n-export TEST_RUNNER_ENV=\"BITCOIND=bitcoin-node\""
      },
      {
        "sha": "0a09bfe23007569c2c5059915509d71302e4eed5",
        "filename": "ci/test/00_setup_env_native_nowallet.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_native_nowallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_native_nowallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_nowallet.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,14 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export CONTAINER_NAME=ci_native_nowallet\n-export DOCKER_NAME_TAG=ubuntu:16.04  # Use xenial to have one config run the tests in python3.5, see doc/dependencies.md\n-export PACKAGES=\"python3-zmq clang-3.8 llvm-3.8\"  # Use clang-3.8 to test C++11 compatibility, see doc/dependencies.md\n-export DEP_OPTS=\"NO_WALLET=1\"\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CC=clang-3.8 CXX=clang++-3.8 --with-boost-process\""
      },
      {
        "sha": "866866229992a9ecd4fe9f47b9c1ead04ef00f5d",
        "filename": "ci/test/00_setup_env_native_qt5.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_native_qt5.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_native_qt5.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_qt5.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,19 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export CONTAINER_NAME=ci_native_qt5\n-export DOCKER_NAME_TAG=ubuntu:18.04  # Check that bionic can compile our c++17 and run our functional tests in python3\n-export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libdbus-1-dev libharfbuzz-dev\"\n-export DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n-export TEST_RUNNER_EXTRA=\"--previous-releases --coverage --extended --exclude feature_dbcrash\"  # Run extended tests so that coverage does not fail, but exclude the very slow dbcrash\n-export RUN_SECURITY_TESTS=\"true\"\n-export RUN_UNIT_TESTS_SEQUENTIAL=\"true\"\n-export RUN_UNIT_TESTS=\"false\"\n-export GOAL=\"install\"\n-export PREVIOUS_RELEASES_TO_DOWNLOAD=\"v0.15.2 v0.16.3 v0.17.2 v0.18.1 v0.19.1\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-libs=no --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-c++17 --enable-debug CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\" --with-boost-process\""
      },
      {
        "sha": "b14a46562c58c2bbf5c4eaf7abd65338ca1c008d",
        "filename": "ci/test/00_setup_env_native_tsan.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_native_tsan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_native_tsan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_tsan.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,15 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export CONTAINER_NAME=ci_native_tsan\n-export DOCKER_NAME_TAG=ubuntu:20.04\n-export PACKAGES=\"clang llvm libc++abi-dev libc++-dev python3-zmq\"\n-export DEP_OPTS=\"CC=clang CXX='clang++ -stdlib=libc++'\"\n-export TEST_RUNNER_EXTRA=\"--exclude feature_block\"  # Low memory on Travis machines, exclude feature_block.\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-gui=no CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' CXXFLAGS='-g' --with-sanitizers=thread CC=clang CXX='clang++ -stdlib=libc++' --with-boost-process\""
      },
      {
        "sha": "bfaea13a2505530afa14df5a2ebb55c954b2576d",
        "filename": "ci/test/00_setup_env_native_valgrind.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_native_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_native_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_valgrind.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,15 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export CONTAINER_NAME=ci_native_valgrind\n-export PACKAGES=\"valgrind clang llvm python3-zmq libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libsqlite3-dev\"\n-export USE_VALGRIND=1\n-export NO_DEPENDS=1\n-export TEST_RUNNER_EXTRA=\"--exclude rpc_bind\"  # Excluded for now, see https://github.com/bitcoin/bitcoin/issues/17765#issuecomment-602068547\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=no CC=clang CXX=clang++\"  # TODO enable GUI"
      },
      {
        "sha": "accbd07e22b9c25b6480627be17ed6fb17b90d58",
        "filename": "ci/test/00_setup_env_s390x.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_s390x.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_s390x.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_s390x.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,26 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export HOST=s390x-linux-gnu\n-# The host arch is unknown, so we run the tests through qemu.\n-# If the host is s390x and wants to run the tests natively, it can set QEMU_USER_CMD to the empty string.\n-if [ -z ${QEMU_USER_CMD+x} ]; then export QEMU_USER_CMD=\"${QEMU_USER_CMD:-\"qemu-s390x\"}\"; fi\n-export PACKAGES=\"python3-zmq\"\n-if [ -n \"$QEMU_USER_CMD\" ]; then\n-  # Likely cross-compiling, so install the needed gcc and qemu-user\n-  export DPKG_ADD_ARCH=\"s390x\"\n-  export PACKAGES=\"$PACKAGES g++-s390x-linux-gnu qemu-user libc6:s390x libstdc++6:s390x libfontconfig1:s390x libxcb1:s390x\"\n-fi\n-# Use debian to avoid 404 apt errors\n-export CONTAINER_NAME=ci_s390x\n-export DOCKER_NAME_TAG=\"debian:buster\"\n-export RUN_UNIT_TESTS=true\n-export TEST_RUNNER_ENV=\"LC_ALL=C\"\n-export RUN_FUNCTIONAL_TESTS=true\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-reduce-exports --with-incompatible-bdb --with-boost-process\""
      },
      {
        "sha": "2b351dff6d92f9631b9d64cc4da97b33ad2369d7",
        "filename": "ci/test/00_setup_env_win64.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_win64.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/00_setup_env_win64.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_win64.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,16 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export CONTAINER_NAME=ci_win64\n-export DOCKER_NAME_TAG=ubuntu:18.04  # Check that bionic can cross-compile to win64 (bionic is used in the gitian build as well)\n-export HOST=x86_64-w64-mingw32\n-export PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64\"\n-export RUN_FUNCTIONAL_TESTS=false\n-export RUN_SECURITY_TESTS=\"true\"\n-export GOAL=\"deploy\"\n-export BITCOIN_CONFIG=\"--enable-reduce-exports --disable-gui-tests --without-boost-process\""
      },
      {
        "sha": "80806aab75ba6819b8d77a6857bdc40350eeffc9",
        "filename": "ci/test/03_before_install.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/03_before_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/03_before_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/03_before_install.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,22 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-BEGIN_FOLD () {\n-  echo \"\"\n-  CURRENT_FOLD_NAME=$1\n-  echo \"travis_fold:start:${CURRENT_FOLD_NAME}\"\n-}\n-\n-END_FOLD () {\n-  RET=$?\n-  echo \"travis_fold:end:${CURRENT_FOLD_NAME}\"\n-  if [ $RET != 0 ]; then\n-    echo \"${CURRENT_FOLD_NAME} failed with status code ${RET}\"\n-  fi\n-}\n-"
      },
      {
        "sha": "632bccf574bd5f4a2cfa56aca30c821b9208ca0e",
        "filename": "ci/test/04_install.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 115,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,115 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-if [[ $DOCKER_NAME_TAG == centos* ]]; then\n-  export LC_ALL=en_US.utf8\n-fi\n-if [[ $QEMU_USER_CMD == qemu-s390* ]]; then\n-  export LC_ALL=C\n-fi\n-\n-if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n-  ${CI_RETRY_EXE} pip3 install $PIP_PACKAGES\n-fi\n-\n-# Create folders that are mounted into the docker\n-mkdir -p \"${CCACHE_DIR}\"\n-mkdir -p \"${PREVIOUS_RELEASES_DIR}\"\n-\n-export ASAN_OPTIONS=\"detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1\"\n-export LSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/lsan\"\n-export TSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/tsan:halt_on_error=1:log_path=${BASE_SCRATCH_DIR}/sanitizer-output/tsan\"\n-export UBSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1:report_error_type=1\"\n-env | grep -E '^(BITCOIN_CONFIG|BASE_|QEMU_|CCACHE_|LC_ALL|BOOST_TEST_RANDOM|DEBIAN_FRONTEND|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS|PREVIOUS_RELEASES_DIR)' | tee /tmp/env\n-if [[ $HOST = *-mingw32 ]]; then\n-  DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"\n-elif [[ $BITCOIN_CONFIG = *--with-sanitizers=*address* ]]; then # If ran with (ASan + LSan), Docker needs access to ptrace (https://github.com/google/sanitizers/issues/764)\n-  DOCKER_ADMIN=\"--cap-add SYS_PTRACE\"\n-fi\n-\n-export P_CI_DIR=\"$PWD\"\n-\n-if [ -z \"$DANGER_RUN_CI_ON_HOST\" ]; then\n-  echo \"Creating $DOCKER_NAME_TAG container to run in\"\n-  ${CI_RETRY_EXE} docker pull \"$DOCKER_NAME_TAG\"\n-\n-  DOCKER_ID=$(docker run $DOCKER_ADMIN -idt \\\n-                  --mount type=bind,src=$BASE_ROOT_DIR,dst=/ro_base,readonly \\\n-                  --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR \\\n-                  --mount type=bind,src=$DEPENDS_DIR,dst=$DEPENDS_DIR \\\n-                  --mount type=bind,src=$PREVIOUS_RELEASES_DIR,dst=$PREVIOUS_RELEASES_DIR \\\n-                  -w $BASE_ROOT_DIR \\\n-                  --env-file /tmp/env \\\n-                  --name $CONTAINER_NAME \\\n-                  $DOCKER_NAME_TAG)\n-  export DOCKER_CI_CMD_PREFIX=\"docker exec $DOCKER_ID\"\n-else\n-  echo \"Running on host system without docker wrapper\"\n-fi\n-\n-DOCKER_EXEC () {\n-  $DOCKER_CI_CMD_PREFIX bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd $P_CI_DIR && $*\"\n-}\n-export -f DOCKER_EXEC\n-\n-if [ -n \"$DPKG_ADD_ARCH\" ]; then\n-  DOCKER_EXEC dpkg --add-architecture \"$DPKG_ADD_ARCH\"\n-fi\n-\n-if [[ $DOCKER_NAME_TAG == centos* ]]; then\n-  ${CI_RETRY_EXE} DOCKER_EXEC yum -y install epel-release\n-  ${CI_RETRY_EXE} DOCKER_EXEC yum -y install $DOCKER_PACKAGES $PACKAGES\n-elif [ \"$CI_USE_APT_INSTALL\" != \"no\" ]; then\n-  ${CI_RETRY_EXE} DOCKER_EXEC apt-get update\n-  ${CI_RETRY_EXE} DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -y $PACKAGES $DOCKER_PACKAGES\n-fi\n-\n-if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n-  top -l 1 -s 0 | awk ' /PhysMem/ {print}'\n-  echo \"Number of CPUs: $(sysctl -n hw.logicalcpu)\"\n-else\n-  DOCKER_EXEC free -m -h\n-  DOCKER_EXEC echo \"Number of CPUs \\(nproc\\):\" \\$\\(nproc\\)\n-  DOCKER_EXEC echo $(lscpu | grep Endian)\n-  DOCKER_EXEC echo \"Free disk space:\"\n-  DOCKER_EXEC df -h\n-fi\n-\n-if [ ! -d ${DIR_QA_ASSETS} ]; then\n-  DOCKER_EXEC git clone --depth=1 https://github.com/bitcoin-core/qa-assets ${DIR_QA_ASSETS}\n-fi\n-export DIR_FUZZ_IN=${DIR_QA_ASSETS}/fuzz_seed_corpus/\n-export DIR_UNIT_TEST_DATA=${DIR_QA_ASSETS}/unit_test_data/\n-\n-DOCKER_EXEC mkdir -p \"${BASE_SCRATCH_DIR}/sanitizer-output/\"\n-\n-if [[ ${USE_MEMORY_SANITIZER} == \"true\" ]]; then\n-  DOCKER_EXEC \"update-alternatives --install /usr/bin/clang++ clang++ \\$(which clang++-9) 100\"\n-  DOCKER_EXEC \"update-alternatives --install /usr/bin/clang clang \\$(which clang-9) 100\"\n-  DOCKER_EXEC \"mkdir -p ${BASE_SCRATCH_DIR}/msan/build/\"\n-  DOCKER_EXEC \"git clone --depth=1 https://github.com/llvm/llvm-project -b llvmorg-10.0.0 ${BASE_SCRATCH_DIR}/msan/llvm-project\"\n-  DOCKER_EXEC \"cd ${BASE_SCRATCH_DIR}/msan/build/ && cmake -DLLVM_ENABLE_PROJECTS='libcxx;libcxxabi' -DCMAKE_BUILD_TYPE=Release -DLLVM_USE_SANITIZER=Memory -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DLLVM_TARGETS_TO_BUILD=X86 ../llvm-project/llvm/\"\n-  DOCKER_EXEC \"cd ${BASE_SCRATCH_DIR}/msan/build/ && make $MAKEJOBS cxx\"\n-fi\n-\n-if [ -z \"$DANGER_RUN_CI_ON_HOST\" ]; then\n-  echo \"Create $BASE_ROOT_DIR\"\n-  DOCKER_EXEC rsync -a /ro_base/ $BASE_ROOT_DIR\n-fi\n-\n-if [ \"$USE_BUSY_BOX\" = \"true\" ]; then\n-  echo \"Setup to use BusyBox utils\"\n-  DOCKER_EXEC mkdir -p $BASE_SCRATCH_DIR/bins/\n-  # tar excluded for now because it requires passing in the exact archive type in ./depends (fixed in later BusyBox version)\n-  # find excluded for now because it does not recognize the -delete option in ./depends (fixed in later BusyBox version)\n-  # ar excluded for now because it does not recognize the -q option in ./depends (unknown if fixed)\n-  # shellcheck disable=SC1010\n-  DOCKER_EXEC for util in \\$\\(busybox --list \\| grep -v \"^ar$\" \\| grep -v \"^tar$\" \\| grep -v \"^find$\"\\)\\; do ln -s \\$\\(command -v busybox\\) $BASE_SCRATCH_DIR/bins/\\$util\\; done\n-  # Print BusyBox version\n-  DOCKER_EXEC patch --help\n-fi"
      },
      {
        "sha": "8ce839fc0464d34cae076ebdb717be11a870330e",
        "filename": "ci/test/05_before_script.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 53,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/05_before_script.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,53 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-# Make sure default datadir does not exist and is never read by creating a dummy file\n-if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n-  echo > $HOME/Library/Application\\ Support/Bitcoin\n-else\n-  DOCKER_EXEC echo \\> \\$HOME/.bitcoin\n-fi\n-\n-DOCKER_EXEC mkdir -p ${DEPENDS_DIR}/SDKs ${DEPENDS_DIR}/sdk-sources\n-\n-OSX_SDK_BASENAME=\"Xcode-${XCODE_VERSION}-${XCODE_BUILD_ID}-extracted-SDK-with-libcxx-headers.tar.gz\"\n-OSX_SDK_PATH=\"${DEPENDS_DIR}/sdk-sources/${OSX_SDK_BASENAME}\"\n-\n-if [ -n \"$XCODE_VERSION\" ] && [ ! -f \"$OSX_SDK_PATH\" ]; then\n-  curl --location --fail \"${SDK_URL}/${OSX_SDK_BASENAME}\" -o \"$OSX_SDK_PATH\"\n-fi\n-\n-if [[ ${USE_MEMORY_SANITIZER} == \"true\" ]]; then\n-  # Use BDB compiled using install_db4.sh script to work around linking issue when using BDB\n-  # from depends. See https://github.com/bitcoin/bitcoin/pull/18288#discussion_r433189350 for\n-  # details.\n-  DOCKER_EXEC \"contrib/install_db4.sh \\$(pwd) --enable-umrw CC=clang CXX=clang++ CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}'\"\n-fi\n-\n-if [ -n \"$XCODE_VERSION\" ] && [ -f \"$OSX_SDK_PATH\" ]; then\n-  DOCKER_EXEC tar -C \"${DEPENDS_DIR}/SDKs\" -xf \"$OSX_SDK_PATH\"\n-fi\n-if [[ $HOST = *-mingw32 ]]; then\n-  DOCKER_EXEC update-alternatives --set $HOST-g++ \\$\\(which $HOST-g++-posix\\)\n-fi\n-if [ -z \"$NO_DEPENDS\" ]; then\n-  if [[ $DOCKER_NAME_TAG == centos* ]]; then\n-    # CentOS has problems building the depends if the config shell is not explicitly set\n-    # (i.e. for libevent a Makefile with an empty SHELL variable is generated, leading to\n-    #  an error as the first command is executed)\n-    SHELL_OPTS=\"CONFIG_SHELL=/bin/bash\"\n-  else\n-    SHELL_OPTS=\"CONFIG_SHELL=\"\n-  fi\n-  DOCKER_EXEC $SHELL_OPTS make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n-fi\n-if [ -n \"$PREVIOUS_RELEASES_TO_DOWNLOAD\" ]; then\n-  BEGIN_FOLD previous-versions\n-  DOCKER_EXEC test/get_previous_releases.py -b -t \"$PREVIOUS_RELEASES_DIR\" \"${PREVIOUS_RELEASES_TO_DOWNLOAD}\"\n-  END_FOLD\n-fi"
      },
      {
        "sha": "17d765b862d36f32f2dd3a295bfd8592d865016a",
        "filename": "ci/test/06_script_a.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 56,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/06_script_a.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/06_script_a.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_a.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,56 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$DEPENDS_DIR/$HOST --bindir=$BASE_OUTDIR/bin --libdir=$BASE_OUTDIR/lib\"\n-DOCKER_EXEC \"ccache --zero-stats --max-size=$CCACHE_SIZE\"\n-\n-BEGIN_FOLD autogen\n-if [ -n \"$CONFIG_SHELL\" ]; then\n-  DOCKER_EXEC \"$CONFIG_SHELL\" -c \"./autogen.sh\"\n-else\n-  DOCKER_EXEC ./autogen.sh\n-fi\n-END_FOLD\n-\n-DOCKER_EXEC mkdir -p \"${BASE_BUILD_DIR}\"\n-export P_CI_DIR=\"${BASE_BUILD_DIR}\"\n-\n-BEGIN_FOLD configure\n-DOCKER_EXEC \"${BASE_ROOT_DIR}/configure\" --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( (DOCKER_EXEC cat config.log) && false)\n-END_FOLD\n-\n-BEGIN_FOLD distdir\n-DOCKER_EXEC make distdir VERSION=$HOST\n-END_FOLD\n-\n-export P_CI_DIR=\"${BASE_BUILD_DIR}/bitcoin-$HOST\"\n-\n-BEGIN_FOLD configure\n-DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( (DOCKER_EXEC cat config.log) && false)\n-END_FOLD\n-\n-set -o errtrace\n-trap 'DOCKER_EXEC \"cat ${BASE_SCRATCH_DIR}/sanitizer-output/* 2> /dev/null\"' ERR\n-\n-if [[ ${USE_MEMORY_SANITIZER} == \"true\" ]]; then\n-  # MemorySanitizer (MSAN) does not support tracking memory initialization done by\n-  # using the Linux getrandom syscall. Avoid using getrandom by undefining\n-  # HAVE_SYS_GETRANDOM. See https://github.com/google/sanitizers/issues/852 for\n-  # details.\n-  DOCKER_EXEC 'grep -v HAVE_SYS_GETRANDOM src/config/bitcoin-config.h > src/config/bitcoin-config.h.tmp && mv src/config/bitcoin-config.h.tmp src/config/bitcoin-config.h'\n-fi\n-\n-BEGIN_FOLD build\n-DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && DOCKER_EXEC make $GOAL V=1 ; false )\n-END_FOLD\n-\n-BEGIN_FOLD cache_stats\n-DOCKER_EXEC \"ccache --version | head -n 1 && ccache --show-stats\"\n-DOCKER_EXEC du -sh \"${DEPENDS_DIR}\"/*/\n-DOCKER_EXEC du -sh \"${PREVIOUS_RELEASES_DIR}\"\n-END_FOLD"
      },
      {
        "sha": "87e9f31d0f46d914363db264b5685f8d8b663364",
        "filename": "ci/test/06_script_b.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/06_script_b.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/06_script_b.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_b.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,52 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-if [ -n \"$QEMU_USER_CMD\" ]; then\n-  BEGIN_FOLD wrap-qemu\n-  # Generate all binaries, so that they can be wrapped\n-  DOCKER_EXEC make $MAKEJOBS -C src/secp256k1 VERBOSE=1\n-  DOCKER_EXEC make $MAKEJOBS -C src/univalue VERBOSE=1\n-  DOCKER_EXEC \"${BASE_ROOT_DIR}/ci/test/wrap-qemu.sh\"\n-  END_FOLD\n-fi\n-\n-if [ -n \"$USE_VALGRIND\" ]; then\n-  BEGIN_FOLD wrap-valgrind\n-  DOCKER_EXEC \"${BASE_ROOT_DIR}/ci/test/wrap-valgrind.sh\"\n-  END_FOLD\n-fi\n-\n-if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n-  BEGIN_FOLD unit-tests\n-  DOCKER_EXEC ${TEST_RUNNER_ENV} DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA} LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib make $MAKEJOBS check VERBOSE=1\n-  END_FOLD\n-fi\n-\n-if [ \"$RUN_UNIT_TESTS_SEQUENTIAL\" = \"true\" ]; then\n-  BEGIN_FOLD unit-tests-seq\n-  DOCKER_EXEC ${TEST_RUNNER_ENV} DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA} LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib \"${BASE_BUILD_DIR}/bitcoin-*/src/test/test_bitcoin*\" --catch_system_errors=no -l test_suite\n-  END_FOLD\n-fi\n-\n-if [ \"$RUN_FUNCTIONAL_TESTS\" = \"true\" ]; then\n-  BEGIN_FOLD functional-tests\n-  DOCKER_EXEC LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib ${TEST_RUNNER_ENV} test/functional/test_runner.py --ci $MAKEJOBS --tmpdirprefix \"${BASE_SCRATCH_DIR}/test_runner/\" --ansi --combinedlogslen=4000 --timeout-factor=${TEST_RUNNER_TIMEOUT_FACTOR} ${TEST_RUNNER_EXTRA} --quiet --failfast\n-  END_FOLD\n-fi\n-\n-if [ \"$RUN_SECURITY_TESTS\" = \"true\" ]; then\n-  BEGIN_FOLD security-tests\n-  DOCKER_EXEC make test-security-check\n-  END_FOLD\n-fi\n-\n-if [ \"$RUN_FUZZ_TESTS\" = \"true\" ]; then\n-  BEGIN_FOLD fuzz-tests\n-  DOCKER_EXEC LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib test/fuzz/test_runner.py ${FUZZ_TESTS_CONFIG} $MAKEJOBS -l DEBUG ${DIR_FUZZ_IN}\n-  END_FOLD\n-fi"
      },
      {
        "sha": "be7d7fcc1fe19e32e4cf54a14849fbddb14b29cf",
        "filename": "ci/test/wrap-qemu.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/wrap-qemu.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/wrap-qemu.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/wrap-qemu.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,18 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-for b_name in {\"${BASE_OUTDIR}/bin\"/*,src/secp256k1/*tests,src/univalue/{no_nul,test_json,unitester,object}}; do\n-    # shellcheck disable=SC2044\n-    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename $b_name)); do\n-      echo \"Wrap $b ...\"\n-      mv \"$b\" \"${b}_orig\"\n-      echo '#!/usr/bin/env bash' > \"$b\"\n-      echo \"$QEMU_USER_CMD \\\"${b}_orig\\\" \\\"\\$@\\\"\" >> \"$b\"\n-      chmod +x \"$b\"\n-    done\n-done"
      },
      {
        "sha": "6b3e6eb7e7412f1f4d1fe5de4bdfb0eeb97a1fba",
        "filename": "ci/test/wrap-valgrind.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/wrap-valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test/wrap-valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/wrap-valgrind.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,18 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-for b_name in \"${BASE_OUTDIR}/bin\"/*; do\n-    # shellcheck disable=SC2044\n-    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename $b_name)); do\n-      echo \"Wrap $b ...\"\n-      mv \"$b\" \"${b}_orig\"\n-      echo '#!/usr/bin/env bash' > \"$b\"\n-      echo \"valgrind --gen-suppressions=all --quiet --error-exitcode=1 --suppressions=${BASE_ROOT_DIR}/contrib/valgrind.supp \\\"${b}_orig\\\" \\\"\\$@\\\"\" >> \"$b\"\n-      chmod +x \"$b\"\n-    done\n-done"
      },
      {
        "sha": "a1d4bd19524daefccee252ec22fbcdd780c2c3d1",
        "filename": "ci/test_run_all.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test_run_all.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/ci/test_run_all.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test_run_all.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,14 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-set -o errexit; source ./ci/test/00_setup_env.sh\n-set -o errexit; source ./ci/test/03_before_install.sh\n-set -o errexit; source ./ci/test/04_install.sh\n-set -o errexit; source ./ci/test/05_before_script.sh\n-set -o errexit; source ./ci/test/06_script_a.sh\n-set -o errexit; source ./ci/test/06_script_b.sh"
      },
      {
        "sha": "9a16b7c8806ee40bae93de32aef67cb553a2b123",
        "filename": "configure.ac",
        "status": "removed",
        "additions": 0,
        "deletions": 1776,
        "changes": 1776,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,1776 +0,0 @@\n-AC_PREREQ([2.69])\n-define(_CLIENT_VERSION_MAJOR, 0)\n-define(_CLIENT_VERSION_MINOR, 20)\n-define(_CLIENT_VERSION_REVISION, 99)\n-define(_CLIENT_VERSION_BUILD, 0)\n-define(_CLIENT_VERSION_RC, 0)\n-define(_CLIENT_VERSION_IS_RELEASE, false)\n-define(_COPYRIGHT_YEAR, 2020)\n-define(_COPYRIGHT_HOLDERS,[The %s developers])\n-define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\n-AC_INIT([Bitcoin Core],m4_join([.], _CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MINOR, _CLIENT_VERSION_REVISION, m4_if(_CLIENT_VERSION_BUILD, [0], [], _CLIENT_VERSION_BUILD))m4_if(_CLIENT_VERSION_RC, [0], [], [rc]_CLIENT_VERSION_RC),[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n-AC_CONFIG_SRCDIR([src/validation.cpp])\n-AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n-AC_CONFIG_AUX_DIR([build-aux])\n-AC_CONFIG_MACRO_DIR([build-aux/m4])\n-\n-m4_ifndef([PKG_PROG_PKG_CONFIG], [AC_MSG_ERROR([PKG_PROG_PKG_CONFIG macro not found. Please install pkg-config and re-run autogen.sh])])\n-PKG_PROG_PKG_CONFIG\n-if test \"x$PKG_CONFIG\" = x; then\n-  AC_MSG_ERROR([pkg-config not found])\n-fi\n-\n-BITCOIN_DAEMON_NAME=bitcoind\n-BITCOIN_GUI_NAME=bitcoin-qt\n-BITCOIN_CLI_NAME=bitcoin-cli\n-BITCOIN_TX_NAME=bitcoin-tx\n-BITCOIN_WALLET_TOOL_NAME=bitcoin-wallet\n-\n-dnl Unless the user specified ARFLAGS, force it to be cr\n-AC_ARG_VAR(ARFLAGS, [Flags for the archiver, defaults to <cr> if not set])\n-if test \"x${ARFLAGS+set}\" != \"xset\"; then\n-  ARFLAGS=\"cr\"\n-fi\n-\n-AC_CANONICAL_HOST\n-\n-AH_TOP([#ifndef BITCOIN_CONFIG_H])\n-AH_TOP([#define BITCOIN_CONFIG_H])\n-AH_BOTTOM([#endif //BITCOIN_CONFIG_H])\n-\n-dnl faketime breaks configure and is only needed for make. Disable it here.\n-unset FAKETIME\n-\n-dnl Automake init set-up and checks\n-AM_INIT_AUTOMAKE([1.13 no-define subdir-objects foreign])\n-\n-dnl faketime messes with timestamps and causes configure to be re-run.\n-dnl --disable-maintainer-mode can be used to bypass this.\n-AM_MAINTAINER_MODE([enable])\n-\n-dnl make the compilation flags quiet unless V=1 is used\n-AM_SILENT_RULES([yes])\n-\n-dnl Compiler checks (here before libtool).\n-if test \"x${CXXFLAGS+set}\" = \"xset\"; then\n-  CXXFLAGS_overridden=yes\n-else\n-  CXXFLAGS_overridden=no\n-fi\n-AC_PROG_CXX\n-\n-dnl By default, libtool for mingw refuses to link static libs into a dll for\n-dnl fear of mixing pic/non-pic objects, and import/export complications. Since\n-dnl we have those under control, re-enable that functionality.\n-case $host in\n-  *mingw*)\n-     lt_cv_deplibs_check_method=\"pass_all\"\n-  ;;\n-esac\n-\n-AC_ARG_ENABLE([c++17],\n-  [AS_HELP_STRING([--enable-c++17],\n-  [enable compilation in c++17 mode (disabled by default)])],\n-  [use_cxx17=$enableval],\n-  [use_cxx17=no])\n-\n-dnl Require C++11 or C++17 compiler (no GNU extensions)\n-if test \"x$use_cxx17\" = xyes -o \"x$enable_fuzz\" = xyes ; then\n-  AX_CXX_COMPILE_STDCXX([17], [noext], [mandatory])\n-else\n-  AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory])\n-fi\n-\n-dnl Check if -latomic is required for <std::atomic>\n-CHECK_ATOMIC\n-\n-dnl Unless the user specified OBJCXX, force it to be the same as CXX. This ensures\n-dnl that we get the same -std flags for both.\n-m4_ifdef([AC_PROG_OBJCXX],[\n-if test \"x${OBJCXX+set}\" = \"x\"; then\n-  OBJCXX=\"${CXX}\"\n-fi\n-AC_PROG_OBJCXX\n-])\n-\n-dnl Since libtool 1.5.2 (released 2004-01-25), on Linux libtool no longer\n-dnl sets RPATH for any directories in the dynamic linker search path.\n-dnl See more: https://wiki.debian.org/RpathIssue\n-LT_PREREQ([1.5.2])\n-dnl Libtool init checks.\n-LT_INIT([pic-only])\n-\n-dnl Check/return PATH for base programs.\n-AC_PATH_TOOL(AR, ar)\n-AC_PATH_TOOL(RANLIB, ranlib)\n-AC_PATH_TOOL(STRIP, strip)\n-AC_PATH_TOOL(GCOV, gcov)\n-AC_PATH_TOOL(LLVM_COV, llvm-cov)\n-AC_PATH_PROG(LCOV, lcov)\n-dnl Python 3.5 is specified in .python-version and should be used if available, see doc/dependencies.md\n-AC_PATH_PROGS([PYTHON], [python3.5 python3.6 python3.7 python3.8 python3 python])\n-AC_PATH_PROG(GENHTML, genhtml)\n-AC_PATH_PROG([GIT], [git])\n-AC_PATH_PROG(CCACHE,ccache)\n-AC_PATH_PROG(XGETTEXT,xgettext)\n-AC_PATH_PROG(HEXDUMP,hexdump)\n-AC_PATH_TOOL(READELF, readelf)\n-AC_PATH_TOOL(CPPFILT, c++filt)\n-AC_PATH_TOOL(OBJCOPY, objcopy)\n-AC_PATH_PROG(DOXYGEN, doxygen)\n-AM_CONDITIONAL([HAVE_DOXYGEN], [test -n \"$DOXYGEN\"])\n-\n-AC_ARG_VAR(PYTHONPATH, Augments the default search path for python module files)\n-\n-AC_ARG_ENABLE([wallet],\n-  [AS_HELP_STRING([--disable-wallet],\n-  [disable wallet (enabled by default)])],\n-  [enable_wallet=$enableval],\n-  [enable_wallet=yes])\n-\n-AC_ARG_WITH([sqlite],\n-  [AS_HELP_STRING([--with-sqlite=yes|no|auto],\n-  [enable sqlite wallet support (default: auto, i.e., enabled if wallet is enabled and sqlite is found)])],\n-  [use_sqlite=$withval],\n-  [use_sqlite=auto])\n-\n-AC_ARG_WITH([miniupnpc],\n-  [AS_HELP_STRING([--with-miniupnpc],\n-  [enable UPNP (default is yes if libminiupnpc is found)])],\n-  [use_upnp=$withval],\n-  [use_upnp=auto])\n-\n-AC_ARG_ENABLE([upnp-default],\n-  [AS_HELP_STRING([--enable-upnp-default],\n-  [if UPNP is enabled, turn it on at startup (default is no)])],\n-  [use_upnp_default=$enableval],\n-  [use_upnp_default=no])\n-\n-AC_ARG_ENABLE(tests,\n-    AS_HELP_STRING([--disable-tests],[do not compile tests (default is to compile)]),\n-    [use_tests=$enableval],\n-    [use_tests=yes])\n-\n-AC_ARG_ENABLE(gui-tests,\n-    AS_HELP_STRING([--disable-gui-tests],[do not compile GUI tests (default is to compile if GUI and tests enabled)]),\n-    [use_gui_tests=$enableval],\n-    [use_gui_tests=$use_tests])\n-\n-AC_ARG_ENABLE(bench,\n-    AS_HELP_STRING([--disable-bench],[do not compile benchmarks (default is to compile)]),\n-    [use_bench=$enableval],\n-    [use_bench=yes])\n-\n-AC_ARG_ENABLE([extended-functional-tests],\n-    AS_HELP_STRING([--enable-extended-functional-tests],[enable expensive functional tests when using lcov (default no)]),\n-    [use_extended_functional_tests=$enableval],\n-    [use_extended_functional_tests=no])\n-\n-AC_ARG_ENABLE([fuzz],\n-    AS_HELP_STRING([--enable-fuzz],\n-    [enable building of fuzz targets (default no). enabling this will disable all other targets]),\n-    [enable_fuzz=$enableval],\n-    [enable_fuzz=no])\n-\n-AC_ARG_WITH([qrencode],\n-  [AS_HELP_STRING([--with-qrencode],\n-  [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n-  [use_qr=$withval],\n-  [use_qr=auto])\n-\n-AC_ARG_ENABLE([hardening],\n-  [AS_HELP_STRING([--disable-hardening],\n-  [do not attempt to harden the resulting executables (default is to harden when possible)])],\n-  [use_hardening=$enableval],\n-  [use_hardening=auto])\n-\n-AC_ARG_ENABLE([reduce-exports],\n-  [AS_HELP_STRING([--enable-reduce-exports],\n-  [attempt to reduce exported symbols in the resulting executables (default is no)])],\n-  [use_reduce_exports=$enableval],\n-  [use_reduce_exports=no])\n-\n-AC_ARG_ENABLE([ccache],\n-  [AS_HELP_STRING([--disable-ccache],\n-  [do not use ccache for building (default is to use if found)])],\n-  [use_ccache=$enableval],\n-  [use_ccache=auto])\n-\n-dnl Suppress warnings from external headers (e.g. Boost, Qt).\n-dnl May be useful if warnings from external headers clutter the build output\n-dnl too much, so that it becomes difficult to spot Bitcoin Core warnings\n-dnl or if they cause a build failure with --enable-werror.\n-AC_ARG_ENABLE([suppress-external-warnings],\n-  [AS_HELP_STRING([--enable-suppress-external-warnings],\n-                  [Suppress warnings from external headers (default is no)])],\n-  [suppress_external_warnings=$enableval],\n-  [suppress_external_warnings=no])\n-\n-AC_ARG_ENABLE([lcov],\n-  [AS_HELP_STRING([--enable-lcov],\n-  [enable lcov testing (default is no)])],\n-  [use_lcov=$enableval],\n-  [use_lcov=no])\n-\n-AC_ARG_ENABLE([lcov-branch-coverage],\n-  [AS_HELP_STRING([--enable-lcov-branch-coverage],\n-  [enable lcov testing branch coverage (default is no)])],\n-  [use_lcov_branch=yes],\n-  [use_lcov_branch=no])\n-\n-AC_ARG_ENABLE([glibc-back-compat],\n-  [AS_HELP_STRING([--enable-glibc-back-compat],\n-  [enable backwards compatibility with glibc])],\n-  [use_glibc_compat=$enableval],\n-  [use_glibc_compat=no])\n-\n-AC_ARG_ENABLE([threadlocal],\n-  [AS_HELP_STRING([--enable-threadlocal],\n-  [enable features that depend on the c++ thread_local keyword (currently just thread names in debug logs). (default is to enabled if there is platform support and glibc-back-compat is not enabled)])],\n-  [use_thread_local=$enableval],\n-  [use_thread_local=auto])\n-\n-AC_ARG_ENABLE([asm],\n-  [AS_HELP_STRING([--disable-asm],\n-  [disable assembly routines (enabled by default)])],\n-  [use_asm=$enableval],\n-  [use_asm=yes])\n-\n-if test \"x$use_asm\" = xyes; then\n-  AC_DEFINE(USE_ASM, 1, [Define this symbol to build in assembly routines])\n-fi\n-\n-AC_ARG_WITH([system-univalue],\n-  [AS_HELP_STRING([--with-system-univalue],\n-  [Build with system UniValue (default is no)])],\n-  [system_univalue=$withval],\n-  [system_univalue=no]\n-)\n-AC_ARG_ENABLE([zmq],\n-  [AS_HELP_STRING([--disable-zmq],\n-  [disable ZMQ notifications])],\n-  [use_zmq=$enableval],\n-  [use_zmq=yes])\n-\n-AC_ARG_WITH([libmultiprocess],\n-  [AS_HELP_STRING([--with-libmultiprocess=yes|no|auto],\n-  [Build with libmultiprocess library. (default: auto, i.e. detect with pkg-config)])],\n-  [with_libmultiprocess=$withval],\n-  [with_libmultiprocess=auto])\n-\n-AC_ARG_WITH([mpgen],\n-  [AS_HELP_STRING([--with-mpgen=yes|no|auto|PREFIX],\n-  [Build with libmultiprocess codegen tool. Useful to specify different libmultiprocess host system library and build system codegen tool prefixes when cross-compiling (default is host system libmultiprocess prefix)])],\n-  [with_mpgen=$withval],\n-  [with_mpgen=auto])\n-\n-AC_ARG_ENABLE([multiprocess],\n-  [AS_HELP_STRING([--enable-multiprocess],\n-  [build multiprocess bitcoin-node, bitcoin-wallet, and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental (default is no)])],\n-  [enable_multiprocess=$enableval],\n-  [enable_multiprocess=no])\n-\n-AC_ARG_ENABLE(man,\n-    [AS_HELP_STRING([--disable-man],\n-                    [do not install man pages (default is to install)])],,\n-    enable_man=yes)\n-AM_CONDITIONAL(ENABLE_MAN, test \"$enable_man\" != no)\n-\n-dnl Enable debug\n-AC_ARG_ENABLE([debug],\n-    [AS_HELP_STRING([--enable-debug],\n-                    [use compiler flags and macros suited for debugging (default is no)])],\n-    [enable_debug=$enableval],\n-    [enable_debug=no])\n-\n-dnl Enable different -fsanitize options\n-AC_ARG_WITH([sanitizers],\n-    [AS_HELP_STRING([--with-sanitizers],\n-                    [comma separated list of extra sanitizers to build with (default is none enabled)])],\n-    [use_sanitizers=$withval])\n-\n-dnl Enable gprof profiling\n-AC_ARG_ENABLE([gprof],\n-    [AS_HELP_STRING([--enable-gprof],\n-                    [use gprof profiling compiler flags (default is no)])],\n-    [enable_gprof=$enableval],\n-    [enable_gprof=no])\n-\n-dnl Pass compiler & linker flags that make builds deterministic\n-AC_ARG_ENABLE([determinism],\n-    [AS_HELP_STRING([--enable-determinism],\n-                    [Enable compilation flags that make builds deterministic (default is no)])],\n-    [enable_determinism=$enableval],\n-    [enable_determinism=no])\n-\n-dnl Turn warnings into errors\n-AC_ARG_ENABLE([werror],\n-    [AS_HELP_STRING([--enable-werror],\n-                    [Treat certain compiler warnings as errors (default is no)])],\n-    [enable_werror=$enableval],\n-    [enable_werror=no])\n-\n-AC_LANG_PUSH([C++])\n-\n-dnl Check for a flag to turn compiler warnings into errors. This is helpful for checks which may\n-dnl appear to succeed because by default they merely emit warnings when they fail.\n-dnl\n-dnl Note that this is not necessarily a check to see if -Werror is supported, but rather to see if\n-dnl a compile with -Werror can succeed. This is important because the compiler may already be\n-dnl warning about something unrelated, for example about some path issue. If that is the case,\n-dnl -Werror cannot be used because all of those warnings would be turned into errors.\n-AX_CHECK_COMPILE_FLAG([-Werror],[CXXFLAG_WERROR=\"-Werror\"],[CXXFLAG_WERROR=\"\"])\n-\n-dnl Check for a flag to turn linker warnings into errors. When flags are passed to linkers via the\n-dnl compiler driver using a -Wl,-foo flag, linker warnings may be swallowed rather than bubbling up.\n-dnl See note above, the same applies here as well.\n-dnl\n-dnl LDFLAG_WERROR Should only be used when testing -Wl,*\n-case $host in\n- *darwin*)\n-    AX_CHECK_LINK_FLAG([-Wl,-fatal_warnings],[LDFLAG_WERROR=\"-Wl,-fatal_warnings\"],[LDFLAG_WERROR=\"\"])\n-    ;;\n-  *)\n-    AX_CHECK_LINK_FLAG([-Wl,--fatal-warnings],[LDFLAG_WERROR=\"-Wl,--fatal-warnings\"],[LDFLAG_WERROR=\"\"])\n-    ;;\n-esac\n-\n-if test \"x$enable_debug\" = xyes; then\n-  dnl Clear default -g -O2 flags\n-  if test \"x$CXXFLAGS_overridden\" = xno; then\n-\tCXXFLAGS=\"\"\n-  fi\n-\n-  dnl Disable all optimizations\n-  AX_CHECK_COMPILE_FLAG([-O0], [[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -O0\"]],,[[$CXXFLAG_WERROR]])\n-\n-  dnl Prefer -g3, fall back to -g if that is unavailable.\n-  AX_CHECK_COMPILE_FLAG(\n-    [-g3],\n-    [[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -g3\"]],\n-    [AX_CHECK_COMPILE_FLAG([-g],[[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -g\"]],,[[$CXXFLAG_WERROR]])],\n-    [[$CXXFLAG_WERROR]])\n-\n-  AX_CHECK_PREPROC_FLAG([-DDEBUG],[[DEBUG_CPPFLAGS=\"$DEBUG_CPPFLAGS -DDEBUG\"]],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_PREPROC_FLAG([-DDEBUG_LOCKORDER],[[DEBUG_CPPFLAGS=\"$DEBUG_CPPFLAGS -DDEBUG_LOCKORDER\"]],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-ftrapv],[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -ftrapv\"],,[[$CXXFLAG_WERROR]])\n-fi\n-\n-if test x$use_sanitizers != x; then\n-  dnl First check if the compiler accepts flags. If an incompatible pair like\n-  dnl -fsanitize=address,thread is used here, this check will fail. This will also\n-  dnl fail if a bad argument is passed, e.g. -fsanitize=undfeined\n-  AX_CHECK_COMPILE_FLAG(\n-    [[-fsanitize=$use_sanitizers]],\n-    [[SANITIZER_CXXFLAGS=-fsanitize=$use_sanitizers]],\n-    [AC_MSG_ERROR([compiler did not accept requested flags])])\n-\n-  dnl Some compilers (e.g. GCC) require additional libraries like libasan,\n-  dnl libtsan, libubsan, etc. Make sure linking still works with the sanitize\n-  dnl flag. This is a separate check so we can give a better error message when\n-  dnl the sanitize flags are supported by the compiler but the actual sanitizer\n-  dnl libs are missing.\n-  AX_CHECK_LINK_FLAG(\n-    [[-fsanitize=$use_sanitizers]],\n-    [[SANITIZER_LDFLAGS=-fsanitize=$use_sanitizers]],\n-    [AC_MSG_ERROR([linker did not accept requested flags, you are missing required libraries])],\n-    [],\n-    [AC_LANG_PROGRAM([[\n-    #include <cstdint>\n-    #include <cstddef>\n-    extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) { return 0; }\n-    __attribute__((weak)) // allow for libFuzzer linking\n-    ]],[[]])])\n-fi\n-\n-ERROR_CXXFLAGS=\n-if test \"x$enable_werror\" = \"xyes\"; then\n-  if test \"x$CXXFLAG_WERROR\" = \"x\"; then\n-    AC_MSG_ERROR(\"enable-werror set but -Werror is not usable\")\n-  fi\n-  AX_CHECK_COMPILE_FLAG([-Werror=gnu],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=gnu\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=vla\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=shadow-field],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=shadow-field\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=switch],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=switch\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=thread-safety],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=range-loop-analysis],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=range-loop-analysis\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=unused-variable],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=unused-variable\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=date-time],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=date-time\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=return-type],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=return-type\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=conditional-uninitialized],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=conditional-uninitialized\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=sign-compare],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=sign-compare\"],,[[$CXXFLAG_WERROR]])\n-  dnl -Wsuggest-override is broken with GCC before 9.2\n-  dnl https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78010\n-  AX_CHECK_COMPILE_FLAG([-Werror=suggest-override],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=suggest-override\"],,[[$CXXFLAG_WERROR]],\n-                        [AC_LANG_SOURCE([[struct A { virtual void f(); }; struct B : A { void f() final; };]])])\n-  AX_CHECK_COMPILE_FLAG([-Werror=unreachable-code-loop-increment],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=unreachable-code-loop-increment\"],,[[$CXXFLAG_WERROR]])\n-fi\n-\n-if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n-  AX_CHECK_COMPILE_FLAG([-Wall],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wall\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wextra],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wgnu],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wgnu\"],,[[$CXXFLAG_WERROR]])\n-  dnl some compilers will ignore -Wformat-security without -Wformat, so just combine the two here.\n-  AX_CHECK_COMPILE_FLAG([-Wformat -Wformat-security],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wformat -Wformat-security\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wvla],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wvla\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wshadow-field],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wshadow-field\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wswitch],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wswitch\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wthread-safety],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wthread-safety\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wrange-loop-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wrange-loop-analysis\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wredundant-decls],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wredundant-decls\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wunused-variable],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunused-variable\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wdate-time],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wdate-time\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wconditional-uninitialized],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wconditional-uninitialized\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wsign-compare],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wsign-compare\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wduplicated-branches],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wduplicated-branches\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wduplicated-cond],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wduplicated-cond\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wlogical-op],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wlogical-op\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Woverloaded-virtual],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Woverloaded-virtual\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wsuggest-override],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wsuggest-override\"],,[[$CXXFLAG_WERROR]],\n-                        [AC_LANG_SOURCE([[struct A { virtual void f(); }; struct B : A { void f() final; };]])])\n-  AX_CHECK_COMPILE_FLAG([-Wunreachable-code-loop-increment],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunreachable-code-loop-increment\"],,[[$CXXFLAG_WERROR]])\n-\n-  dnl Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n-  dnl unknown options if any other warning is produced. Test the -Wfoo case, and\n-  dnl set the -Wno-foo case if it works.\n-  AX_CHECK_COMPILE_FLAG([-Wunused-parameter],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-parameter\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wself-assign],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-register\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-implicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wdeprecated-copy],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-copy\"],,[[$CXXFLAG_WERROR]])\n-fi\n-\n-dnl Don't allow extended (non-ASCII) symbols in identifiers. This is easier for code review.\n-AX_CHECK_COMPILE_FLAG([-fno-extended-identifiers],[[CXXFLAGS=\"$CXXFLAGS -fno-extended-identifiers\"]],,[[$CXXFLAG_WERROR]])\n-\n-enable_sse42=no\n-enable_sse41=no\n-enable_avx2=no\n-enable_shani=no\n-\n-if test \"x$use_asm\" = \"xyes\"; then\n-\n-dnl Check for optional instruction set support. Enabling these does _not_ imply that all code will\n-dnl be compiled with them, rather that specific objects/libs may use them after checking for runtime\n-dnl compatibility.\n-\n-dnl x86\n-AX_CHECK_COMPILE_FLAG([-msse4.2],[[SSE42_CXXFLAGS=\"-msse4.2\"]],,[[$CXXFLAG_WERROR]])\n-AX_CHECK_COMPILE_FLAG([-msse4.1],[[SSE41_CXXFLAGS=\"-msse4.1\"]],,[[$CXXFLAG_WERROR]])\n-AX_CHECK_COMPILE_FLAG([-mavx -mavx2],[[AVX2_CXXFLAGS=\"-mavx -mavx2\"]],,[[$CXXFLAG_WERROR]])\n-AX_CHECK_COMPILE_FLAG([-msse4 -msha],[[SHANI_CXXFLAGS=\"-msse4 -msha\"]],,[[$CXXFLAG_WERROR]])\n-\n-TEMP_CXXFLAGS=\"$CXXFLAGS\"\n-CXXFLAGS=\"$CXXFLAGS $SSE42_CXXFLAGS\"\n-AC_MSG_CHECKING(for SSE4.2 intrinsics)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    #include <stdint.h>\n-    #if defined(_MSC_VER)\n-    #include <intrin.h>\n-    #elif defined(__GNUC__) && defined(__SSE4_2__)\n-    #include <nmmintrin.h>\n-    #endif\n-  ]],[[\n-    uint64_t l = 0;\n-    l = _mm_crc32_u8(l, 0);\n-    l = _mm_crc32_u32(l, 0);\n-    l = _mm_crc32_u64(l, 0);\n-    return l;\n-  ]])],\n- [ AC_MSG_RESULT(yes); enable_sse42=yes],\n- [ AC_MSG_RESULT(no)]\n-)\n-CXXFLAGS=\"$TEMP_CXXFLAGS\"\n-\n-TEMP_CXXFLAGS=\"$CXXFLAGS\"\n-CXXFLAGS=\"$CXXFLAGS $SSE41_CXXFLAGS\"\n-AC_MSG_CHECKING(for SSE4.1 intrinsics)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    #include <stdint.h>\n-    #include <immintrin.h>\n-  ]],[[\n-    __m128i l = _mm_set1_epi32(0);\n-    return _mm_extract_epi32(l, 3);\n-  ]])],\n- [ AC_MSG_RESULT(yes); enable_sse41=yes; AC_DEFINE(ENABLE_SSE41, 1, [Define this symbol to build code that uses SSE4.1 intrinsics]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-CXXFLAGS=\"$TEMP_CXXFLAGS\"\n-\n-TEMP_CXXFLAGS=\"$CXXFLAGS\"\n-CXXFLAGS=\"$CXXFLAGS $AVX2_CXXFLAGS\"\n-AC_MSG_CHECKING(for AVX2 intrinsics)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    #include <stdint.h>\n-    #include <immintrin.h>\n-  ]],[[\n-    __m256i l = _mm256_set1_epi32(0);\n-    return _mm256_extract_epi32(l, 7);\n-  ]])],\n- [ AC_MSG_RESULT(yes); enable_avx2=yes; AC_DEFINE(ENABLE_AVX2, 1, [Define this symbol to build code that uses AVX2 intrinsics]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-CXXFLAGS=\"$TEMP_CXXFLAGS\"\n-\n-TEMP_CXXFLAGS=\"$CXXFLAGS\"\n-CXXFLAGS=\"$CXXFLAGS $SHANI_CXXFLAGS\"\n-AC_MSG_CHECKING(for SHA-NI intrinsics)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    #include <stdint.h>\n-    #include <immintrin.h>\n-  ]],[[\n-    __m128i i = _mm_set1_epi32(0);\n-    __m128i j = _mm_set1_epi32(1);\n-    __m128i k = _mm_set1_epi32(2);\n-    return _mm_extract_epi32(_mm_sha256rnds2_epu32(i, i, k), 0);\n-  ]])],\n- [ AC_MSG_RESULT(yes); enable_shani=yes; AC_DEFINE(ENABLE_SHANI, 1, [Define this symbol to build code that uses SHA-NI intrinsics]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-CXXFLAGS=\"$TEMP_CXXFLAGS\"\n-\n-# ARM\n-AX_CHECK_COMPILE_FLAG([-march=armv8-a+crc+crypto],[[ARM_CRC_CXXFLAGS=\"-march=armv8-a+crc+crypto\"]],,[[$CXXFLAG_WERROR]])\n-\n-TEMP_CXXFLAGS=\"$CXXFLAGS\"\n-CXXFLAGS=\"$CXXFLAGS $ARM_CRC_CXXFLAGS\"\n-AC_MSG_CHECKING(for ARM CRC32 intrinsics)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    #include <arm_acle.h>\n-    #include <arm_neon.h>\n-  ]],[[\n-    __crc32cb(0, 0); __crc32ch(0, 0); __crc32cw(0, 0); __crc32cd(0, 0);\n-    vmull_p64(0, 0);\n-  ]])],\n- [ AC_MSG_RESULT(yes); enable_arm_crc=yes; ],\n- [ AC_MSG_RESULT(no)]\n-)\n-CXXFLAGS=\"$TEMP_CXXFLAGS\"\n-\n-fi\n-\n-CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n-\n-AC_ARG_WITH([utils],\n-  [AS_HELP_STRING([--with-utils],\n-  [build bitcoin-cli bitcoin-tx bitcoin-wallet (default=yes)])],\n-  [build_bitcoin_utils=$withval],\n-  [build_bitcoin_utils=yes])\n-\n-AC_ARG_ENABLE([util-cli],\n-  [AS_HELP_STRING([--enable-util-cli],\n-  [build bitcoin-cli])],\n-  [build_bitcoin_cli=$enableval],\n-  [build_bitcoin_cli=$build_bitcoin_utils])\n-\n-AC_ARG_ENABLE([util-tx],\n-  [AS_HELP_STRING([--enable-util-tx],\n-  [build bitcoin-tx])],\n-  [build_bitcoin_tx=$enableval],\n-  [build_bitcoin_tx=$build_bitcoin_utils])\n-\n-AC_ARG_ENABLE([util-wallet],\n-  [AS_HELP_STRING([--enable-util-wallet],\n-  [build bitcoin-wallet])],\n-  [build_bitcoin_wallet=$enableval],\n-  [build_bitcoin_wallet=$build_bitcoin_utils])\n-\n-AC_ARG_WITH([libs],\n-  [AS_HELP_STRING([--with-libs],\n-  [build libraries (default=yes)])],\n-  [build_bitcoin_libs=$withval],\n-  [build_bitcoin_libs=yes])\n-\n-AC_ARG_WITH([daemon],\n-  [AS_HELP_STRING([--with-daemon],\n-  [build bitcoind daemon (default=yes)])],\n-  [build_bitcoind=$withval],\n-  [build_bitcoind=yes])\n-\n-case $host in\n-  *mingw*)\n-     TARGET_OS=windows\n-     AC_CHECK_LIB([kernel32], [GetModuleFileNameA],, AC_MSG_ERROR(libkernel32 missing))\n-     AC_CHECK_LIB([user32],   [main],, AC_MSG_ERROR(libuser32 missing))\n-     AC_CHECK_LIB([gdi32],    [main],, AC_MSG_ERROR(libgdi32 missing))\n-     AC_CHECK_LIB([comdlg32], [main],, AC_MSG_ERROR(libcomdlg32 missing))\n-     AC_CHECK_LIB([winmm],    [main],, AC_MSG_ERROR(libwinmm missing))\n-     AC_CHECK_LIB([shell32],  [SHGetSpecialFolderPathW],, AC_MSG_ERROR(libshell32 missing))\n-     AC_CHECK_LIB([comctl32], [main],, AC_MSG_ERROR(libcomctl32 missing))\n-     AC_CHECK_LIB([ole32],    [CoCreateInstance],, AC_MSG_ERROR(libole32 missing))\n-     AC_CHECK_LIB([oleaut32], [main],, AC_MSG_ERROR(liboleaut32 missing))\n-     AC_CHECK_LIB([uuid],     [main],, AC_MSG_ERROR(libuuid missing))\n-     AC_CHECK_LIB([advapi32], [CryptAcquireContextW],, AC_MSG_ERROR(libadvapi32 missing))\n-     AC_CHECK_LIB([ws2_32],   [WSAStartup],, AC_MSG_ERROR(libws2_32 missing))\n-     AC_CHECK_LIB([shlwapi],  [PathRemoveFileSpecW],, AC_MSG_ERROR(libshlwapi missing))\n-     AC_CHECK_LIB([iphlpapi], [GetAdaptersAddresses],, AC_MSG_ERROR(libiphlpapi missing))\n-\n-     dnl -static is interpreted by libtool, where it has a different meaning.\n-     dnl In libtool-speak, it's -all-static.\n-     AX_CHECK_LINK_FLAG([[-static]],[LIBTOOL_APP_LDFLAGS=\"$LIBTOOL_APP_LDFLAGS -all-static\"])\n-\n-     AC_PATH_PROG([MAKENSIS], [makensis], none)\n-     if test x$MAKENSIS = xnone; then\n-       AC_MSG_WARN(\"makensis not found. Cannot create installer.\")\n-     fi\n-\n-     AC_PATH_TOOL(WINDRES, windres, none)\n-     if test x$WINDRES = xnone; then\n-       AC_MSG_ERROR(\"windres not found\")\n-     fi\n-\n-     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -D_WIN32_WINNT=0x0601 -D_WIN32_IE=0x0501 -DWIN32_LEAN_AND_MEAN\"\n-\n-     dnl libtool insists upon adding -nostdlib and a list of objects/libs to link against.\n-     dnl That breaks our ability to build dll's with static libgcc/libstdc++/libssp. Override\n-     dnl its command here, with the predeps/postdeps removed, and -static inserted. Postdeps are\n-     dnl also overridden to prevent their insertion later.\n-     dnl This should only affect dll's.\n-     archive_cmds_CXX=\"\\$CC -shared \\$libobjs \\$deplibs \\$compiler_flags -static -o \\$output_objdir/\\$soname \\${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker \\$lib\"\n-     postdeps_CXX=\n-\n-     dnl We require Windows 7 (NT 6.1) or later\n-     AX_CHECK_LINK_FLAG([[-Wl,--major-subsystem-version -Wl,6 -Wl,--minor-subsystem-version -Wl,1]],[LDFLAGS=\"$LDFLAGS -Wl,--major-subsystem-version -Wl,6 -Wl,--minor-subsystem-version -Wl,1\"],,[[$LDFLAG_WERROR]])\n-     ;;\n-  *darwin*)\n-     TARGET_OS=darwin\n-     if  test x$cross_compiling != xyes; then\n-       BUILD_OS=darwin\n-       AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n-       AC_CHECK_PROG([BREW],brew, brew)\n-       if test x$BREW = xbrew; then\n-         dnl These Homebrew packages may be keg-only, meaning that they won't be found\n-         dnl in expected paths because they may conflict with system files. Ask\n-         dnl Homebrew where each one is located, then adjust paths accordingly.\n-         dnl It's safe to add these paths even if the functionality is disabled by\n-         dnl the user (--without-wallet or --without-gui for example).\n-\n-         bdb_prefix=$($BREW --prefix berkeley-db4 2>/dev/null)\n-         qt5_prefix=$($BREW --prefix qt5 2>/dev/null)\n-         if test x$bdb_prefix != x && test \"x$BDB_CFLAGS\" = \"x\" && test \"x$BDB_LIBS\" = \"x\"; then\n-           dnl This must precede the call to BITCOIN_FIND_BDB48 below.\n-           BDB_CFLAGS=\"-I$bdb_prefix/include\"\n-           BDB_LIBS=\"-L$bdb_prefix/lib -ldb_cxx-4.8\"\n-         fi\n-         if test x$qt5_prefix != x; then\n-           PKG_CONFIG_PATH=\"$qt5_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n-           export PKG_CONFIG_PATH\n-         fi\n-       fi\n-     else\n-       case $build_os in\n-         *darwin*)\n-           BUILD_OS=darwin\n-           ;;\n-         *)\n-           AC_PATH_TOOL([DSYMUTIL], [dsymutil], dsymutil)\n-           AC_PATH_TOOL([INSTALLNAMETOOL], [install_name_tool], install_name_tool)\n-           AC_PATH_TOOL([OTOOL], [otool], otool)\n-           AC_PATH_PROGS([GENISOIMAGE], [genisoimage mkisofs],genisoimage)\n-           AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n-           AC_PATH_PROGS([IMAGEMAGICK_CONVERT], [convert],convert)\n-           AC_PATH_PROGS([TIFFCP], [tiffcp],tiffcp)\n-\n-           dnl libtool will try to strip the static lib, which is a problem for\n-           dnl cross-builds because strip attempts to call a hard-coded ld,\n-           dnl which may not exist in the path. Stripping the .a is not\n-           dnl necessary, so just disable it.\n-           old_striplib=\n-           ;;\n-       esac\n-     fi\n-\n-     AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"],, [[$LDFLAG_WERROR]])\n-     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX -DOBJC_OLD_DISPATCH_PROTOTYPES=0\"\n-     OBJCXXFLAGS=\"$CXXFLAGS\"\n-     ;;\n-   *android*)\n-     dnl make sure android stays above linux for hosts like *linux-android*\n-     TARGET_OS=android\n-     ;;\n-   *linux*)\n-     TARGET_OS=linux\n-     ;;\n-esac\n-\n-if test x$use_extended_functional_tests != xno; then\n-  AC_SUBST(EXTENDED_FUNCTIONAL_TESTS, --extended)\n-fi\n-\n-if test x$use_lcov = xyes; then\n-  if test x$LCOV = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but lcov not found\")\n-  fi\n-  if test x$PYTHON = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but python not found\")\n-  fi\n-  if test x$GENHTML = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but genhtml not found\")\n-  fi\n-\n-  AC_MSG_CHECKING([whether compiler is Clang])\n-  AC_PREPROC_IFELSE([AC_LANG_SOURCE([[\n-      #if defined(__clang__) && defined(__llvm__)\n-      // Compiler is Clang\n-      #else\n-      #  error Compiler is not Clang\n-      #endif\n-    ]])],[\n-      AC_MSG_RESULT([yes])\n-      if test x$LLVM_COV = x; then\n-        AC_MSG_ERROR([lcov testing requested but llvm-cov not found])\n-      fi\n-      COV_TOOL=\"$LLVM_COV gcov\"\n-    ],[\n-      AC_MSG_RESULT([no])\n-      if test x$GCOV = x; then\n-        AC_MSG_ERROR([lcov testing requested but gcov not found])\n-      fi\n-      COV_TOOL=\"$GCOV\"\n-  ])\n-  AC_SUBST(COV_TOOL)\n-  AC_SUBST(COV_TOOL_WRAPPER, \"cov_tool_wrapper.sh\")\n-  LCOV=\"$LCOV --gcov-tool $(pwd)/$COV_TOOL_WRAPPER\"\n-\n-  AX_CHECK_LINK_FLAG([[--coverage]], [LDFLAGS=\"$LDFLAGS --coverage\"],\n-    [AC_MSG_ERROR(\"lcov testing requested but --coverage linker flag does not work\")])\n-  AX_CHECK_COMPILE_FLAG([--coverage],[CXXFLAGS=\"$CXXFLAGS --coverage\"],\n-    [AC_MSG_ERROR(\"lcov testing requested but --coverage flag does not work\")])\n-  CXXFLAGS=\"$CXXFLAGS -Og\"\n-fi\n-\n-if test x$use_lcov_branch != xno; then\n-  AC_SUBST(LCOV_OPTS, \"$LCOV_OPTS --rc lcov_branch_coverage=1\")\n-fi\n-\n-dnl Check for endianness\n-AC_C_BIGENDIAN\n-\n-dnl Check for pthread compile/link requirements\n-AX_PTHREAD\n-\n-dnl The following macro will add the necessary defines to bitcoin-config.h, but\n-dnl they also need to be passed down to any subprojects. Pull the results out of\n-dnl the cache and add them to CPPFLAGS.\n-AC_SYS_LARGEFILE\n-dnl detect POSIX or GNU variant of strerror_r\n-AC_FUNC_STRERROR_R\n-\n-if test x$ac_cv_sys_file_offset_bits != x &&\n-   test x$ac_cv_sys_file_offset_bits != xno &&\n-   test x$ac_cv_sys_file_offset_bits != xunknown; then\n-  CPPFLAGS=\"$CPPFLAGS -D_FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits\"\n-fi\n-\n-if test x$ac_cv_sys_large_files != x &&\n-   test x$ac_cv_sys_large_files != xno &&\n-   test x$ac_cv_sys_large_files != xunknown; then\n-  CPPFLAGS=\"$CPPFLAGS -D_LARGE_FILES=$ac_cv_sys_large_files\"\n-fi\n-\n-AX_GCC_FUNC_ATTRIBUTE([visibility])\n-AX_GCC_FUNC_ATTRIBUTE([dllexport])\n-AX_GCC_FUNC_ATTRIBUTE([dllimport])\n-\n-if test x$use_glibc_compat != xno; then\n-  AX_CHECK_LINK_FLAG([[-Wl,--wrap=__divmoddi4]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=__divmoddi4\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,--wrap=log2f]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=log2f\"])\n-else\n-  AC_SEARCH_LIBS([clock_gettime],[rt])\n-fi\n-\n-if test \"x$enable_gprof\" = xyes; then\n-    dnl -pg is incompatible with -pie. Since hardening and profiling together doesn't make sense,\n-    dnl we simply make them mutually exclusive here. Additionally, hardened toolchains may force\n-    dnl -pie by default, in which case it needs to be turned off with -no-pie.\n-\n-    if test x$use_hardening = xyes; then\n-        AC_MSG_ERROR(gprof profiling is not compatible with hardening. Reconfigure with --disable-hardening or --disable-gprof)\n-    fi\n-    use_hardening=no\n-    AX_CHECK_COMPILE_FLAG([-pg],[GPROF_CXXFLAGS=\"-pg\"],\n-        [AC_MSG_ERROR(gprof profiling requested but not available)], [[$CXXFLAG_WERROR]])\n-\n-    AX_CHECK_LINK_FLAG([[-no-pie]], [GPROF_LDFLAGS=\"-no-pie\"])\n-    AX_CHECK_LINK_FLAG([[-pg]],[GPROF_LDFLAGS=\"$GPROF_LDFLAGS -pg\"],\n-        [AC_MSG_ERROR(gprof profiling requested but not available)], [[$GPROF_LDFLAGS]])\n-fi\n-\n-if test x$TARGET_OS != xwindows; then\n-  dnl All windows code is PIC, forcing it on just adds useless compile warnings\n-  AX_CHECK_COMPILE_FLAG([-fPIC],[PIC_FLAGS=\"-fPIC\"])\n-fi\n-\n-dnl All versions of gcc that we commonly use for building are subject to bug\n-dnl https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n-dnl -fstack-reuse=none for all gcc builds. (Only gcc understands this flag)\n-AX_CHECK_COMPILE_FLAG([-fstack-reuse=none],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-reuse=none\"])\n-if test x$use_hardening != xno; then\n-  use_hardening=yes\n-  AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n-  AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n-\n-  AX_CHECK_COMPILE_FLAG([-fcf-protection=full],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fcf-protection=full\"])\n-\n-  dnl stack-clash-protection does not work properly when building for Windows.\n-  dnl We use the test case from https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90458\n-  dnl to determine if it can be enabled.\n-  AX_CHECK_COMPILE_FLAG([-fstack-clash-protection],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-clash-protection\"],[],[\"-O0\"],\n-    [AC_LANG_SOURCE([[class D {public: unsigned char buf[32768];}; int main() {D d; return 0;}]])])\n-\n-  dnl When enable_debug is yes, all optimizations are disabled.\n-  dnl However, FORTIFY_SOURCE requires that there is some level of optimization, otherwise it does nothing and just creates a compiler warning.\n-  dnl Since FORTIFY_SOURCE is a no-op without optimizations, do not enable it when enable_debug is yes.\n-  if test x$enable_debug != xyes; then\n-    AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n-      AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n-        HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n-      ])\n-      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n-    ])\n-  fi\n-\n-  AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"],, [[$LDFLAG_WERROR]])\n-  AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"],, [[$LDFLAG_WERROR]])\n-  AX_CHECK_LINK_FLAG([[-Wl,--high-entropy-va]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--high-entropy-va\"],, [[$LDFLAG_WERROR]])\n-  AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"],, [[$LDFLAG_WERROR]])\n-  AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"],, [[$LDFLAG_WERROR]])\n-  AX_CHECK_LINK_FLAG([[-Wl,-z,separate-code]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,separate-code\"],, [[$LDFLAG_WERROR]])\n-  AX_CHECK_LINK_FLAG([[-fPIE -pie]], [PIE_FLAGS=\"-fPIE\"; HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"],, [[$CXXFLAG_WERROR]])\n-\n-  case $host in\n-    *mingw*)\n-       AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(libssp missing))\n-    ;;\n-  esac\n-fi\n-\n-dnl These flags are specific to ld64, and may cause issues with other linkers.\n-dnl For example: GNU ld will interpret -dead_strip as -de and then try and use\n-dnl \"ad_strip\" as the symbol for the entry point.\n-if test x$TARGET_OS = xdarwin; then\n-  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"],, [[$LDFLAG_WERROR]])\n-  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip_dylibs]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip_dylibs\"],, [[$LDFLAG_WERROR]])\n-  AX_CHECK_LINK_FLAG([[-Wl,-bind_at_load]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-bind_at_load\"],, [[$LDFLAG_WERROR]])\n-fi\n-\n-if test x$enable_determinism = xyes; then\n-  if test x$TARGET_OS = xwindows; then\n-    AX_CHECK_LINK_FLAG([[-Wl,--no-insert-timestamp]], [LDFLAGS=\"$LDFLAGS -Wl,--no-insert-timestamp\"],, [[$LDFLAG_WERROR]])\n-  fi\n-fi\n-\n-AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h sys/sysctl.h vm/vm_param.h sys/vmmeter.h sys/resources.h])\n-\n-AC_CHECK_DECLS([getifaddrs, freeifaddrs],,,\n-    [#include <sys/types.h>\n-    #include <ifaddrs.h>]\n-)\n-AC_CHECK_DECLS([strnlen])\n-\n-dnl Check for daemon(3), unrelated to --with-daemon (although used by it)\n-AC_CHECK_DECLS([daemon])\n-\n-AC_CHECK_DECLS([le16toh, le32toh, le64toh, htole16, htole32, htole64, be16toh, be32toh, be64toh, htobe16, htobe32, htobe64],,,\n-\t\t[#if HAVE_ENDIAN_H\n-                 #include <endian.h>\n-                 #elif HAVE_SYS_ENDIAN_H\n-                 #include <sys/endian.h>\n-                 #endif])\n-\n-AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,\n-\t\t[#if HAVE_BYTESWAP_H\n-                 #include <byteswap.h>\n-                 #endif])\n-\n-AC_MSG_CHECKING(for __builtin_clzl)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[ ]], [[\n- (void) __builtin_clzl(0);\n-  ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_BUILTIN_CLZL, 1, [Define this symbol if you have __builtin_clzl])],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING(for __builtin_clzll)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[ ]], [[\n-  (void) __builtin_clzll(0);\n-  ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_BUILTIN_CLZLL, 1, [Define this symbol if you have __builtin_clzll])],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-dnl Check for malloc_info (for memory statistics information in getmemoryinfo)\n-AC_MSG_CHECKING(for getmemoryinfo)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n- [[ int f = malloc_info(0, NULL); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOC_INFO, 1,[Define this symbol if you have malloc_info]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-dnl Check for mallopt(M_ARENA_MAX) (to set glibc arenas)\n-AC_MSG_CHECKING(for mallopt M_ARENA_MAX)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n- [[ mallopt(M_ARENA_MAX, 1); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOPT_ARENA_MAX, 1,[Define this symbol if you have mallopt with M_ARENA_MAX]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-dnl Check for posix_fallocate\n-AC_MSG_CHECKING(for posix_fallocate)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-                   // same as in src/util/system.cpp\n-                   #ifdef __linux__\n-                   #ifdef _POSIX_C_SOURCE\n-                   #undef _POSIX_C_SOURCE\n-                   #endif\n-                   #define _POSIX_C_SOURCE 200112L\n-                   #endif // __linux__\n-                   #include <fcntl.h>]],\n-                   [[ int f = posix_fallocate(0, 0, 0); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_POSIX_FALLOCATE, 1,[Define this symbol if you have posix_fallocate]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING([for visibility attribute])\n-AC_LINK_IFELSE([AC_LANG_SOURCE([\n-  int foo_def( void ) __attribute__((visibility(\"default\")));\n-  int main(){}\n-  ])],\n-  [\n-    AC_DEFINE(HAVE_VISIBILITY_ATTRIBUTE,1,[Define if the visibility attribute is supported.])\n-    AC_MSG_RESULT(yes)\n-  ],\n-  [\n-    AC_MSG_RESULT(no)\n-    if test x$use_reduce_exports = xyes; then\n-      AC_MSG_ERROR([Cannot find a working visibility attribute. Use --disable-reduce-exports.])\n-    fi\n-  ]\n-)\n-\n-dnl thread_local is currently disabled when building with glibc back compat.\n-dnl Our minimum supported glibc is 2.17, however support for thread_local\n-dnl did not arrive in glibc until 2.18.\n-if test \"x$use_thread_local\" = xyes || { test \"x$use_thread_local\" = xauto && test \"x$use_glibc_compat\" = xno; }; then\n-  TEMP_LDFLAGS=\"$LDFLAGS\"\n-  LDFLAGS=\"$TEMP_LDFLAGS $PTHREAD_CFLAGS\"\n-  AC_MSG_CHECKING([for thread_local support])\n-  AC_LINK_IFELSE([AC_LANG_SOURCE([\n-    #include <thread>\n-    static thread_local int foo = 0;\n-    static void run_thread() { foo++;}\n-    int main(){\n-    for(int i = 0; i < 10; i++) { std::thread(run_thread).detach();}\n-    return foo;\n-    }\n-    ])],\n-    [\n-     case $host in\n-       *mingw*)\n-          dnl mingw32's implementation of thread_local has also been shown to behave\n-          dnl erroneously under concurrent usage; see:\n-          dnl https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n-          AC_MSG_RESULT(no)\n-          ;;\n-        *freebsd*)\n-          dnl FreeBSD's implementation of thread_local is also buggy (per\n-          dnl https://groups.google.com/d/msg/bsdmailinglist/22ncTZAbDp4/Dii_pII5AwAJ)\n-          AC_MSG_RESULT(no)\n-          ;;\n-        *)\n-          AC_DEFINE(HAVE_THREAD_LOCAL,1,[Define if thread_local is supported.])\n-          AC_MSG_RESULT(yes)\n-          ;;\n-      esac\n-    ],\n-    [\n-      AC_MSG_RESULT(no)\n-    ]\n-  )\n-  LDFLAGS=\"$TEMP_LDFLAGS\"\n-fi\n-\n-dnl check for gmtime_r(), fallback to gmtime_s() if that is unavailable\n-dnl fail if neither are available.\n-AC_MSG_CHECKING(for gmtime_r)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <ctime>]],\n-  [[ gmtime_r((const time_t *) nullptr, (struct tm *) nullptr); ]])],\n-  [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GMTIME_R, 1, [Define this symbol if gmtime_r is available]) ],\n-  [ AC_MSG_RESULT(no);\n-    AC_MSG_CHECKING(for gmtime_s);\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <ctime>]],\n-       [[ gmtime_s((struct tm *) nullptr, (const time_t *) nullptr); ]])],\n-       [ AC_MSG_RESULT(yes)],\n-       [ AC_MSG_RESULT(no); AC_MSG_ERROR(Both gmtime_r and gmtime_s are unavailable) ]\n-    )\n-  ]\n-)\n-\n-dnl Check for different ways of gathering OS randomness\n-AC_MSG_CHECKING(for Linux getrandom syscall)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n-  #include <sys/syscall.h>\n-  #include <linux/random.h>]],\n- [[ syscall(SYS_getrandom, nullptr, 32, 0); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYS_GETRANDOM, 1,[Define this symbol if the Linux getrandom system call is available]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING(for getentropy)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],\n- [[ getentropy(nullptr, 32) ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY, 1,[Define this symbol if the BSD getentropy system call is available]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING(for getentropy via random.h)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n- #include <sys/random.h>]],\n- [[ getentropy(nullptr, 32) ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY_RAND, 1,[Define this symbol if the BSD getentropy system call is available with sys/random.h]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING(for sysctl)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n-  #include <sys/sysctl.h>]],\n- [[ #ifdef __linux__\n-    #error \"Don't use sysctl on Linux, it's deprecated even when it works\"\n-    #endif\n-    sysctl(nullptr, 2, nullptr, nullptr, nullptr, 0); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYSCTL, 1,[Define this symbol if the BSD sysctl() is available]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING(for sysctl KERN_ARND)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n-  #include <sys/sysctl.h>]],\n- [[ #ifdef __linux__\n-    #error \"Don't use sysctl on Linux, it's deprecated even when it works\"\n-    #endif\n-    static int name[2] = {CTL_KERN, KERN_ARND};\n-    sysctl(name, 2, nullptr, nullptr, nullptr, 0); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYSCTL_ARND, 1,[Define this symbol if the BSD sysctl(KERN_ARND) is available]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING(for if type char equals int8_t)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdint.h>\n-  #include <type_traits>]],\n- [[ static_assert(std::is_same<int8_t, char>::value, \"\"); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(CHAR_EQUALS_INT8, 1,[Define this symbol if type char equals int8_t]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING(for fdatasync)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],\n- [[ fdatasync(0); ]])],\n- [ AC_MSG_RESULT(yes); HAVE_FDATASYNC=1 ],\n- [ AC_MSG_RESULT(no); HAVE_FDATASYNC=0 ]\n-)\n-AC_DEFINE_UNQUOTED([HAVE_FDATASYNC], [$HAVE_FDATASYNC], [Define to 1 if fdatasync is available.])\n-\n-AC_MSG_CHECKING(for F_FULLFSYNC)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <fcntl.h>]],\n- [[ fcntl(0, F_FULLFSYNC, 0); ]])],\n- [ AC_MSG_RESULT(yes); HAVE_FULLFSYNC=1 ],\n- [ AC_MSG_RESULT(no); HAVE_FULLFSYNC=0 ]\n-)\n-\n-AC_MSG_CHECKING(for O_CLOEXEC)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <fcntl.h>]],\n- [[ open(\"\", O_CLOEXEC); ]])],\n- [ AC_MSG_RESULT(yes); HAVE_O_CLOEXEC=1 ],\n- [ AC_MSG_RESULT(no); HAVE_O_CLOEXEC=0 ]\n-)\n-\n-dnl crc32c platform checks\n-AC_MSG_CHECKING(for __builtin_prefetch)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[ ]], [[\n-  char data = 0;\n-  const char* address = &data;\n-  __builtin_prefetch(address, 0, 0);\n-  ]])],\n- [ AC_MSG_RESULT(yes); HAVE_BUILTIN_PREFETCH=1 ],\n- [ AC_MSG_RESULT(no); HAVE_BUILTIN_PREFETCH=0 ]\n-)\n-\n-AC_MSG_CHECKING(for _mm_prefetch)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <xmmintrin.h>]], [[\n-  char data = 0;\n-  const char* address = &data;\n-  _mm_prefetch(address, _MM_HINT_NTA);\n-  ]])],\n- [ AC_MSG_RESULT(yes); HAVE_MM_PREFETCH=1 ],\n- [ AC_MSG_RESULT(no); HAVE_MM_PREFETCH=0 ]\n-)\n-\n-AC_MSG_CHECKING(for strong getauxval support in the system headers)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    #include <arm_acle.h>\n-    #include <arm_neon.h>\n-    #include <sys/auxv.h>\n-  ]], [[\n-    getauxval(AT_HWCAP);\n-  ]])],\n- [ AC_MSG_RESULT(yes); HAVE_STRONG_GETAUXVAL=1 ],\n- [ AC_MSG_RESULT(no); HAVE_STRONG_GETAUXVAL=0 ]\n-)\n-\n-AC_MSG_CHECKING(for weak getauxval support in the compiler)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    unsigned long getauxval(unsigned long type) __attribute__((weak));\n-    #define AT_HWCAP 16\n-  ]], [[\n-    getauxval(AT_HWCAP);\n-  ]])],\n- [ AC_MSG_RESULT(yes); HAVE_WEAK_GETAUXVAL=1 ],\n- [ AC_MSG_RESULT(no); HAVE_WEAK_GETAUXVAL=0 ]\n-)\n-\n-dnl Check for reduced exports\n-if test x$use_reduce_exports = xyes; then\n-  AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n-  [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])\n-fi\n-\n-AC_MSG_CHECKING([for std::system])\n-AC_LINK_IFELSE(\n-    [ AC_LANG_PROGRAM(\n-        [[ #include <cstdlib> ]],\n-        [[ int nErr = std::system(\"\"); ]]\n-    )],\n-    [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_STD__SYSTEM, 1, Define to 1 if std::system is available.)],\n-    [ AC_MSG_RESULT(no) ]\n-)\n-\n-AC_MSG_CHECKING([for ::_wsystem])\n-AC_LINK_IFELSE(\n-    [ AC_LANG_PROGRAM(\n-        [[ ]],\n-        [[ int nErr = ::_wsystem(\"\"); ]]\n-    )],\n-    [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_WSYSTEM, 1, Define to 1 if ::wsystem is available.)],\n-    [ AC_MSG_RESULT(no) ]\n-)\n-\n-AC_DEFINE([HAVE_SYSTEM], [HAVE_STD__SYSTEM || HAVE_WSYSTEM], [std::system or ::wsystem])\n-\n-LEVELDB_CPPFLAGS=\n-LIBLEVELDB=\n-LIBMEMENV=\n-AM_CONDITIONAL([EMBEDDED_LEVELDB],[true])\n-AC_SUBST(LEVELDB_CPPFLAGS)\n-AC_SUBST(LIBLEVELDB)\n-AC_SUBST(LIBMEMENV)\n-\n-dnl SUPPRESSED_CPPFLAGS=SUPPRESS_WARNINGS([$SOME_CPPFLAGS])\n-dnl Replace -I with -isystem in $SOME_CPPFLAGS to suppress warnings from\n-dnl headers from its include directories and return the result.\n-dnl See -isystem documentation:\n-dnl https://gcc.gnu.org/onlinedocs/gcc/Directory-Options.html\n-dnl https://clang.llvm.org/docs/ClangCommandLineReference.html#cmdoption-clang-isystem-directory\n-dnl Do not change \"-I/usr/include\" to \"-isystem /usr/include\" because that\n-dnl is not necessary (/usr/include is already a system directory) and because\n-dnl it would break GCC's #include_next.\n-AC_DEFUN([SUPPRESS_WARNINGS],\n-         [$(echo $1 |${SED} -E -e 's/(^| )-I/\\1-isystem /g' -e 's;-isystem /usr/include([/ ]|$);-I/usr/include\\1;g')])\n-\n-dnl enable-fuzz should disable all other targets\n-if test \"x$enable_fuzz\" = \"xyes\"; then\n-  AC_MSG_WARN(enable-fuzz will disable all other targets)\n-  build_bitcoin_utils=no\n-  build_bitcoin_cli=no\n-  build_bitcoin_tx=no\n-  build_bitcoin_wallet=no\n-  build_bitcoind=no\n-  build_bitcoin_libs=no\n-  bitcoin_enable_qt=no\n-  bitcoin_enable_qt_test=no\n-  bitcoin_enable_qt_dbus=no\n-  enable_wallet=no\n-  use_bench=no\n-  use_upnp=no\n-  use_zmq=no\n-\n-  AC_MSG_CHECKING([whether main function is needed])\n-  AX_CHECK_LINK_FLAG(\n-    [[-fsanitize=$use_sanitizers]],\n-    [AC_MSG_RESULT([no])],\n-    [AC_MSG_RESULT([yes])\n-     CPPFLAGS=\"$CPPFLAGS -DPROVIDE_MAIN_FUNCTION\"],\n-    [],\n-    [AC_LANG_PROGRAM([[\n-      #include <cstdint>\n-      #include <cstddef>\n-      extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) { return 0; }\n-      /* unterminated comment to remove the main function ...\n-    ]],[[]])])\n-else\n-  BITCOIN_QT_INIT\n-\n-  dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n-  BITCOIN_QT_CONFIGURE([5.5.1])\n-\n-  dnl Keep a copy of the original $QT_INCLUDES and use it when invoking qt's moc\n-  QT_INCLUDES_UNSUPPRESSED=$QT_INCLUDES\n-  if test x$suppress_external_warnings != xno ; then\n-    QT_INCLUDES=SUPPRESS_WARNINGS($QT_INCLUDES)\n-    QT_DBUS_INCLUDES=SUPPRESS_WARNINGS($QT_DBUS_INCLUDES)\n-    QT_TEST_INCLUDES=SUPPRESS_WARNINGS($QT_TEST_INCLUDES)\n-  fi\n-fi\n-\n-if test x$enable_wallet != xno; then\n-    dnl Check for libdb_cxx only if wallet enabled\n-    BITCOIN_FIND_BDB48\n-    if test x$suppress_external_warnings != xno ; then\n-        BDB_CPPFLAGS=SUPPRESS_WARNINGS($BDB_CPPFLAGS)\n-    fi\n-\n-    dnl Check for sqlite3\n-    if test \"x$use_sqlite\" != \"xno\"; then\n-      PKG_CHECK_MODULES([SQLITE], [sqlite3 >= 3.7.17], [have_sqlite=yes], [have_sqlite=no])\n-    fi\n-    AC_MSG_CHECKING([whether to build wallet with support for sqlite])\n-    if test \"x$use_sqlite\" = \"xno\"; then\n-      use_sqlite=no\n-    elif test \"x$have_sqlite\" = \"xno\"; then\n-      if test \"x$use_sqlite\" = \"xyes\"; then\n-        AC_MSG_ERROR([sqlite support requested but cannot be built. Use --without-sqlite])\n-      fi\n-      use_sqlite=no\n-    else\n-      if test x$use_sqlite != xno; then\n-        AC_DEFINE([USE_SQLITE],[1],[Define if sqlite support should be compiled in])\n-        use_sqlite=yes\n-      fi\n-    fi\n-    AC_MSG_RESULT([$use_sqlite])\n-fi\n-\n-dnl Check for libminiupnpc (optional)\n-if test x$use_upnp != xno; then\n-  AC_CHECK_HEADERS(\n-    [miniupnpc/miniwget.h miniupnpc/miniupnpc.h miniupnpc/upnpcommands.h miniupnpc/upnperrors.h],\n-    [AC_CHECK_LIB([miniupnpc], [upnpDiscover], [MINIUPNPC_LIBS=-lminiupnpc], [have_miniupnpc=no])],\n-    [have_miniupnpc=no]\n-  )\n-dnl The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n-dnl with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n-if test x$have_miniupnpc != xno; then\n-  AC_MSG_CHECKING([whether miniUPnPc API version is supported])\n-  AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[\n-      @%:@include <miniupnpc/miniupnpc.h>\n-    ]], [[\n-      #if MINIUPNPC_API_VERSION >= 10\n-      // Everything is okay\n-      #else\n-      #  error miniUPnPc API version is too old\n-      #endif\n-    ]])],[\n-      AC_MSG_RESULT(yes)\n-    ],[\n-    AC_MSG_RESULT(no)\n-    AC_MSG_WARN([miniUPnPc API version < 10 is unsupported, disabling UPnP support.])\n-    have_miniupnpc=no\n-  ])\n-fi\n-fi\n-\n-if test x$build_bitcoin_wallet$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononononono; then\n-    use_boost=no\n-else\n-    use_boost=yes\n-fi\n-\n-if test x$use_boost = xyes; then\n-\n-dnl Minimum required Boost version\n-define(MINIMUM_REQUIRED_BOOST, 1.58.0)\n-\n-dnl Check for Boost libs\n-AX_BOOST_BASE([MINIMUM_REQUIRED_BOOST])\n-if test x$want_boost = xno; then\n-    AC_MSG_ERROR([[only libbitcoinconsensus can be built without boost]])\n-fi\n-AX_BOOST_SYSTEM\n-AX_BOOST_FILESYSTEM\n-AX_BOOST_THREAD\n-\n-dnl Opt-in to boost-process\n-AS_IF([ test x$with_boost_process != x ], [ AX_BOOST_PROCESS ], [ ax_cv_boost_process=no ] )\n-\n-if test x$suppress_external_warnings != xno; then\n-    BOOST_CPPFLAGS=SUPPRESS_WARNINGS($BOOST_CPPFLAGS)\n-fi\n-\n-dnl Boost 1.56 through 1.62 allow using std::atomic instead of its own atomic\n-dnl counter implementations. In 1.63 and later the std::atomic approach is default.\n-m4_pattern_allow(DBOOST_AC_USE_STD_ATOMIC) dnl otherwise it's treated like a macro\n-BOOST_CPPFLAGS=\"-DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC $BOOST_CPPFLAGS\"\n-\n-BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_THREAD_LIB\"\n-fi\n-\n-if test x$use_reduce_exports = xyes; then\n-    CXXFLAGS=\"$CXXFLAGS $RE_CXXFLAGS\"\n-    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"],, [[$LDFLAG_WERROR]])\n-fi\n-\n-if test x$use_tests = xyes; then\n-\n-  if test x$HEXDUMP = x; then\n-    AC_MSG_ERROR(hexdump is required for tests)\n-  fi\n-\n-  if test x$use_boost = xyes; then\n-\n-  AX_BOOST_UNIT_TEST_FRAMEWORK\n-\n-  dnl Determine if -DBOOST_TEST_DYN_LINK is needed\n-  AC_MSG_CHECKING([for dynamic linked boost test])\n-  TEMP_LIBS=\"$LIBS\"\n-  LIBS=\"$LIBS $BOOST_LDFLAGS $BOOST_UNIT_TEST_FRAMEWORK_LIB\"\n-  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-  CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-  AC_LINK_IFELSE([AC_LANG_SOURCE([\n-       #define BOOST_TEST_DYN_LINK\n-       #define BOOST_TEST_MAIN\n-        #include <boost/test/unit_test.hpp>\n-\n-       ])],\n-    [AC_MSG_RESULT(yes)]\n-    [TESTDEFS=\"$TESTDEFS -DBOOST_TEST_DYN_LINK\"],\n-    [AC_MSG_RESULT(no)])\n-  LIBS=\"$TEMP_LIBS\"\n-  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-\n-  fi\n-fi\n-\n-dnl libevent check\n-\n-if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench != xnonononono; then\n-  PKG_CHECK_MODULES([EVENT], [libevent >= 2.0.21], [use_libevent=yes], [AC_MSG_ERROR([libevent version 2.0.21 or greater not found.])])\n-  if test x$TARGET_OS != xwindows; then\n-    PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads >= 2.0.21],, [AC_MSG_ERROR([libevent_pthreads version 2.0.21 or greater not found.])])\n-  fi\n-fi\n-\n-dnl QR Code encoding library check\n-\n-if test \"x$use_qr\" != xno; then\n-  BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n-fi\n-\n-dnl ZMQ check\n-\n-if test \"x$use_zmq\" = xyes; then\n-  PKG_CHECK_MODULES([ZMQ], [libzmq >= 4],\n-    AC_DEFINE([ENABLE_ZMQ], [1], [Define to 1 to enable ZMQ functions]),\n-    [AC_DEFINE([ENABLE_ZMQ], [0], [Define to 1 to enable ZMQ functions])\n-    AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])\n-    use_zmq=no])\n-else\n-  AC_DEFINE_UNQUOTED([ENABLE_ZMQ], [0], [Define to 1 to enable ZMQ functions])\n-fi\n-\n-if test \"x$use_zmq\" = xyes; then\n-  dnl Assume libzmq was built for static linking\n-  case $host in\n-    *mingw*)\n-      ZMQ_CFLAGS=\"$ZMQ_CFLAGS -DZMQ_STATIC\"\n-    ;;\n-  esac\n-fi\n-\n-dnl univalue check\n-\n-need_bundled_univalue=yes\n-if test x$build_bitcoin_wallet$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononononono; then\n-  need_bundled_univalue=no\n-else\n-  if test x$system_univalue != xno; then\n-    PKG_CHECK_MODULES([UNIVALUE], [libunivalue >= 1.0.4], [found_univalue=yes], [found_univalue=no])\n-    if test x$found_univalue = xyes; then\n-      system_univalue=yes\n-      need_bundled_univalue=no\n-    elif test x$system_univalue = xyes; then\n-      AC_MSG_ERROR([univalue not found])\n-    else\n-      system_univalue=no\n-    fi\n-  fi\n-\n-  if test x$need_bundled_univalue = xyes; then\n-    UNIVALUE_CFLAGS='-I$(srcdir)/univalue/include'\n-    UNIVALUE_LIBS='univalue/libunivalue.la'\n-  fi\n-fi\n-\n-AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$need_bundled_univalue = xyes])\n-AC_SUBST(UNIVALUE_CFLAGS)\n-AC_SUBST(UNIVALUE_LIBS)\n-\n-dnl libmultiprocess library check\n-\n-libmultiprocess_found=no\n-if test \"x$with_libmultiprocess\" = xyes || test \"x$with_libmultiprocess\" = xauto; then\n-  m4_ifdef([PKG_CHECK_MODULES], [PKG_CHECK_MODULES([LIBMULTIPROCESS], [libmultiprocess], [\n-     libmultiprocess_found=yes;\n-     libmultiprocess_prefix=`$PKG_CONFIG --variable=prefix libmultiprocess`;\n-  ], [true])])\n-elif test \"x$with_libmultiprocess\" != xno; then\n-  AC_MSG_ERROR([--with-libmultiprocess=$with_libmultiprocess value is not yes, auto, or no])\n-fi\n-AC_SUBST(LIBMULTIPROCESS_CFLAGS)\n-AC_SUBST(LIBMULTIPROCESS_LIBS)\n-\n-dnl Enable multiprocess check\n-\n-if test \"x$enable_multiprocess\" = xyes; then\n-  if test \"x$libmultiprocess_found\" != xyes; then\n-    AC_MSG_ERROR([--enable-multiprocess=yes option specified but libmultiprocess library was not found. May need to install libmultiprocess library, or specify install path with PKG_CONFIG_PATH environment variable. Running 'pkg-config --debug libmultiprocess' may be helpful for debugging.])\n-  fi\n-  build_multiprocess=yes\n-elif test \"x$enable_multiprocess\" = xauto; then\n-  build_multiprocess=$libmultiprocess_found\n-else\n-  build_multiprocess=no\n-fi\n-\n-AM_CONDITIONAL([BUILD_MULTIPROCESS],[test \"x$build_multiprocess\" = xyes])\n-AM_CONDITIONAL([BUILD_BITCOIN_NODE], [test \"x$build_multiprocess\" = xyes])\n-AM_CONDITIONAL([BUILD_BITCOIN_GUI], [test \"x$build_multiprocess\" = xyes])\n-\n-dnl codegen tools check\n-\n-if test x$build_multiprocess != xno; then\n-  if test \"x$with_mpgen\" = xyes || test \"x$with_mpgen\" = xauto; then\n-    MPGEN_PREFIX=\"$libmultiprocess_prefix\"\n-  elif test \"x$with_mpgen\" != xno; then\n-    MPGEN_PREFIX=\"$with_mpgen\";\n-  fi\n-  AC_SUBST(MPGEN_PREFIX)\n-fi\n-\n-AC_MSG_CHECKING([whether to build bitcoind])\n-AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n-AC_MSG_RESULT($build_bitcoind)\n-\n-AC_MSG_CHECKING([whether to build bitcoin-cli])\n-AM_CONDITIONAL([BUILD_BITCOIN_CLI], [test x$build_bitcoin_cli = xyes])\n-AC_MSG_RESULT($build_bitcoin_cli)\n-\n-AC_MSG_CHECKING([whether to build bitcoin-tx])\n-AM_CONDITIONAL([BUILD_BITCOIN_TX], [test x$build_bitcoin_tx = xyes])\n-AC_MSG_RESULT($build_bitcoin_tx)\n-\n-AC_MSG_CHECKING([whether to build bitcoin-wallet])\n-AM_CONDITIONAL([BUILD_BITCOIN_WALLET], [test x$build_bitcoin_wallet = xyes])\n-AC_MSG_RESULT($build_bitcoin_wallet)\n-\n-AC_MSG_CHECKING([whether to build libraries])\n-AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])\n-if test x$build_bitcoin_libs = xyes; then\n-  AC_DEFINE(HAVE_CONSENSUS_LIB, 1, [Define this symbol if the consensus lib has been built])\n-  AC_CONFIG_FILES([libbitcoinconsensus.pc:libbitcoinconsensus.pc.in])\n-fi\n-AC_MSG_RESULT($build_bitcoin_libs)\n-\n-AC_LANG_POP\n-\n-if test \"x$use_ccache\" != \"xno\"; then\n-  AC_MSG_CHECKING(if ccache should be used)\n-  if test x$CCACHE = x; then\n-    if test \"x$use_ccache\" = \"xyes\"; then\n-      AC_MSG_ERROR([ccache not found.]);\n-    else\n-      use_ccache=no\n-    fi\n-  else\n-    use_ccache=yes\n-    CC=\"$ac_cv_path_CCACHE $CC\"\n-    CXX=\"$ac_cv_path_CCACHE $CXX\"\n-  fi\n-  AC_MSG_RESULT($use_ccache)\n-fi\n-\n-dnl enable wallet\n-AC_MSG_CHECKING([if wallet should be enabled])\n-if test x$enable_wallet != xno; then\n-  AC_MSG_RESULT(yes)\n-  AC_DEFINE_UNQUOTED([ENABLE_WALLET],[1],[Define to 1 to enable wallet functions])\n-\n-else\n-  AC_MSG_RESULT(no)\n-fi\n-\n-dnl enable upnp support\n-AC_MSG_CHECKING([whether to build with support for UPnP])\n-if test x$have_miniupnpc = xno; then\n-  if test x$use_upnp = xyes; then\n-     AC_MSG_ERROR(\"UPnP requested but cannot be built. Use --without-miniupnpc.\")\n-  fi\n-  AC_MSG_RESULT(no)\n-  use_upnp=no\n-else\n-  if test x$use_upnp != xno; then\n-    AC_MSG_RESULT(yes)\n-    AC_MSG_CHECKING([whether to build with UPnP enabled by default])\n-    use_upnp=yes\n-    upnp_setting=0\n-    if test x$use_upnp_default != xno; then\n-      use_upnp_default=yes\n-      upnp_setting=1\n-    fi\n-    AC_MSG_RESULT($use_upnp_default)\n-    AC_DEFINE_UNQUOTED([USE_UPNP],[$upnp_setting],[UPnP support not compiled if undefined, otherwise value (0 or 1) determines default state])\n-    if test x$TARGET_OS = xwindows; then\n-      MINIUPNPC_CPPFLAGS=\"-DSTATICLIB -DMINIUPNP_STATICLIB\"\n-    fi\n-  else\n-    AC_MSG_RESULT(no)\n-  fi\n-fi\n-\n-dnl these are only used when qt is enabled\n-BUILD_TEST_QT=\"\"\n-if test x$bitcoin_enable_qt != xno; then\n-  dnl enable dbus support\n-  AC_MSG_CHECKING([whether to build GUI with support for D-Bus])\n-  if test x$bitcoin_enable_qt_dbus != xno; then\n-    AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n-  fi\n-  AC_MSG_RESULT($bitcoin_enable_qt_dbus)\n-\n-  dnl enable qr support\n-  AC_MSG_CHECKING([whether to build GUI with support for QR codes])\n-  if test x$have_qrencode = xno; then\n-    if test x$use_qr = xyes; then\n-      AC_MSG_ERROR([QR support requested but cannot be built. Use --without-qrencode])\n-    fi\n-    use_qr=no\n-  else\n-    if test x$use_qr != xno; then\n-      AC_DEFINE([USE_QRCODE],[1],[Define if QR support should be compiled in])\n-      use_qr=yes\n-    fi\n-  fi\n-  AC_MSG_RESULT([$use_qr])\n-\n-  if test x$XGETTEXT = x; then\n-    AC_MSG_WARN(\"xgettext is required to update qt translations\")\n-  fi\n-\n-  AC_MSG_CHECKING([whether to build test_bitcoin-qt])\n-  if test x$use_gui_tests$bitcoin_enable_qt_test = xyesyes; then\n-    AC_MSG_RESULT([yes])\n-    BUILD_TEST_QT=\"yes\"\n-  else\n-    AC_MSG_RESULT([no])\n-  fi\n-fi\n-\n-AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n-\n-AC_MSG_CHECKING([whether to build test_bitcoin])\n-if test x$use_tests = xyes; then\n-  AC_MSG_RESULT([yes])\n-  BUILD_TEST=\"yes\"\n-else\n-  AC_MSG_RESULT([no])\n-  BUILD_TEST=\"\"\n-fi\n-\n-AC_MSG_CHECKING([whether to reduce exports])\n-if test x$use_reduce_exports = xyes; then\n-  AC_MSG_RESULT([yes])\n-else\n-  AC_MSG_RESULT([no])\n-fi\n-\n-if test x$build_bitcoin_wallet$build_bitcoin_cli$build_bitcoin_tx$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_bench$use_tests = xnononononononono; then\n-  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui --enable-bench or --enable-tests])\n-fi\n-\n-AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\n-AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\n-AM_CONDITIONAL([TARGET_LINUX], [test x$TARGET_OS = xlinux])\n-AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n-AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\n-AM_CONDITIONAL([USE_SQLITE], [test \"x$use_sqlite\" = \"xyes\"])\n-AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\n-AM_CONDITIONAL([ENABLE_FUZZ],[test x$enable_fuzz = xyes])\n-AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n-AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\n-AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n-AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n-AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n-AM_CONDITIONAL([USE_LIBEVENT],[test x$use_libevent = xyes])\n-AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n-AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\n-AM_CONDITIONAL([ENABLE_SSE42],[test x$enable_sse42 = xyes])\n-AM_CONDITIONAL([ENABLE_SSE41],[test x$enable_sse41 = xyes])\n-AM_CONDITIONAL([ENABLE_AVX2],[test x$enable_avx2 = xyes])\n-AM_CONDITIONAL([ENABLE_SHANI],[test x$enable_shani = xyes])\n-AM_CONDITIONAL([ENABLE_ARM_CRC],[test x$enable_arm_crc = xyes])\n-AM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])\n-AM_CONDITIONAL([WORDS_BIGENDIAN],[test x$ac_cv_c_bigendian = xyes])\n-\n-AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n-AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n-AC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])\n-AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\n-AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\n-AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Copyright year])\n-AC_DEFINE(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\", [Copyright holder(s) before %s replacement])\n-AC_DEFINE(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\", [Replacement for %s in copyright holders string])\n-define(_COPYRIGHT_HOLDERS_FINAL, [patsubst(_COPYRIGHT_HOLDERS, [%s], [_COPYRIGHT_HOLDERS_SUBSTITUTION])])\n-AC_DEFINE(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\", [Copyright holder(s)])\n-AC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)\n-AC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)\n-AC_SUBST(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION)\n-AC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)\n-AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n-AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n-AC_SUBST(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\")\n-AC_SUBST(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\")\n-AC_SUBST(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\")\n-AC_SUBST(BITCOIN_DAEMON_NAME)\n-AC_SUBST(BITCOIN_GUI_NAME)\n-AC_SUBST(BITCOIN_CLI_NAME)\n-AC_SUBST(BITCOIN_TX_NAME)\n-AC_SUBST(BITCOIN_WALLET_TOOL_NAME)\n-\n-AC_SUBST(RELDFLAGS)\n-AC_SUBST(DEBUG_CPPFLAGS)\n-AC_SUBST(WARN_CXXFLAGS)\n-AC_SUBST(NOWARN_CXXFLAGS)\n-AC_SUBST(DEBUG_CXXFLAGS)\n-AC_SUBST(COMPAT_LDFLAGS)\n-AC_SUBST(ERROR_CXXFLAGS)\n-AC_SUBST(GPROF_CXXFLAGS)\n-AC_SUBST(GPROF_LDFLAGS)\n-AC_SUBST(HARDENED_CXXFLAGS)\n-AC_SUBST(HARDENED_CPPFLAGS)\n-AC_SUBST(HARDENED_LDFLAGS)\n-AC_SUBST(PIC_FLAGS)\n-AC_SUBST(PIE_FLAGS)\n-AC_SUBST(SANITIZER_CXXFLAGS)\n-AC_SUBST(SANITIZER_LDFLAGS)\n-AC_SUBST(SSE42_CXXFLAGS)\n-AC_SUBST(SSE41_CXXFLAGS)\n-AC_SUBST(AVX2_CXXFLAGS)\n-AC_SUBST(SHANI_CXXFLAGS)\n-AC_SUBST(ARM_CRC_CXXFLAGS)\n-AC_SUBST(LIBTOOL_APP_LDFLAGS)\n-AC_SUBST(USE_SQLITE)\n-AC_SUBST(USE_UPNP)\n-AC_SUBST(USE_QRCODE)\n-AC_SUBST(BOOST_LIBS)\n-AC_SUBST(SQLITE_LIBS)\n-AC_SUBST(TESTDEFS)\n-AC_SUBST(MINIUPNPC_CPPFLAGS)\n-AC_SUBST(MINIUPNPC_LIBS)\n-AC_SUBST(EVENT_LIBS)\n-AC_SUBST(EVENT_PTHREADS_LIBS)\n-AC_SUBST(ZMQ_LIBS)\n-AC_SUBST(QR_LIBS)\n-AC_SUBST(HAVE_GMTIME_R)\n-AC_SUBST(HAVE_FDATASYNC)\n-AC_SUBST(HAVE_FULLFSYNC)\n-AC_SUBST(HAVE_O_CLOEXEC)\n-AC_SUBST(HAVE_BUILTIN_PREFETCH)\n-AC_SUBST(HAVE_MM_PREFETCH)\n-AC_SUBST(HAVE_STRONG_GETAUXVAL)\n-AC_SUBST(HAVE_WEAK_GETAUXVAL)\n-AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/config.ini])\n-AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n-AM_COND_IF([HAVE_DOXYGEN], [AC_CONFIG_FILES([doc/Doxyfile])])\n-AC_CONFIG_LINKS([contrib/devtools/security-check.py:contrib/devtools/security-check.py])\n-AC_CONFIG_LINKS([contrib/devtools/test-security-check.py:contrib/devtools/test-security-check.py])\n-AC_CONFIG_LINKS([contrib/filter-lcov.py:contrib/filter-lcov.py])\n-AC_CONFIG_LINKS([test/functional/test_runner.py:test/functional/test_runner.py])\n-AC_CONFIG_LINKS([test/fuzz/test_runner.py:test/fuzz/test_runner.py])\n-AC_CONFIG_LINKS([test/util/bitcoin-util-test.py:test/util/bitcoin-util-test.py])\n-AC_CONFIG_LINKS([test/util/rpcauth-test.py:test/util/rpcauth-test.py])\n-\n-dnl boost's m4 checks do something really nasty: they export these vars. As a\n-dnl result, they leak into secp256k1's configure and crazy things happen.\n-dnl Until this is fixed upstream and we've synced, we'll just un-export them.\n-CPPFLAGS_TEMP=\"$CPPFLAGS\"\n-unset CPPFLAGS\n-CPPFLAGS=\"$CPPFLAGS_TEMP\"\n-\n-LDFLAGS_TEMP=\"$LDFLAGS\"\n-unset LDFLAGS\n-LDFLAGS=\"$LDFLAGS_TEMP\"\n-\n-LIBS_TEMP=\"$LIBS\"\n-unset LIBS\n-LIBS=\"$LIBS_TEMP\"\n-\n-PKGCONFIG_PATH_TEMP=\"$PKG_CONFIG_PATH\"\n-unset PKG_CONFIG_PATH\n-PKG_CONFIG_PATH=\"$PKGCONFIG_PATH_TEMP\"\n-\n-PKGCONFIG_LIBDIR_TEMP=\"$PKG_CONFIG_LIBDIR\"\n-unset PKG_CONFIG_LIBDIR\n-PKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\n-\n-if test x$need_bundled_univalue = xyes; then\n-  AC_CONFIG_SUBDIRS([src/univalue])\n-fi\n-\n-ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --enable-benchmark=no --with-bignum=no --enable-module-recovery --enable-module-schnorrsig --enable-experimental\"\n-AC_CONFIG_SUBDIRS([src/secp256k1])\n-\n-AC_OUTPUT\n-\n-dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\n-case ${OS} in\n-   *Windows*)\n-     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  test/config.ini > test/config-2.ini\n-     mv test/config-2.ini test/config.ini\n-   ;;\n-esac\n-\n-echo\n-echo \"Options used to compile and link:\"\n-echo \"  boost process = $ax_cv_boost_process\"\n-echo \"  multiprocess  = $build_multiprocess\"\n-echo \"  with wallet   = $enable_wallet\"\n-if test \"x$enable_wallet\" != \"xno\"; then\n-    echo \"    with sqlite = $use_sqlite\"\n-fi\n-echo \"  with gui / qt = $bitcoin_enable_qt\"\n-if test x$bitcoin_enable_qt != xno; then\n-    echo \"    with qr     = $use_qr\"\n-fi\n-echo \"  with zmq      = $use_zmq\"\n-echo \"  with test     = $use_tests\"\n-if test x$use_tests != xno; then\n-    echo \"    with fuzz   = $enable_fuzz\"\n-fi\n-echo \"  with bench    = $use_bench\"\n-echo \"  with upnp     = $use_upnp\"\n-echo \"  use asm       = $use_asm\"\n-echo \"  sanitizers    = $use_sanitizers\"\n-echo \"  debug enabled = $enable_debug\"\n-echo \"  gprof enabled = $enable_gprof\"\n-echo \"  werror        = $enable_werror\"\n-echo\n-echo \"  target os     = $TARGET_OS\"\n-echo \"  build os      = $build_os\"\n-echo\n-echo \"  CC            = $CC\"\n-echo \"  CFLAGS        = $PTHREAD_CFLAGS $CFLAGS\"\n-echo \"  CPPFLAGS      = $DEBUG_CPPFLAGS $HARDENED_CPPFLAGS $CPPFLAGS\"\n-echo \"  CXX           = $CXX\"\n-echo \"  CXXFLAGS      = $DEBUG_CXXFLAGS $HARDENED_CXXFLAGS $WARN_CXXFLAGS $NOWARN_CXXFLAGS $ERROR_CXXFLAGS $GPROF_CXXFLAGS $CXXFLAGS\"\n-echo \"  LDFLAGS       = $PTHREAD_LIBS $HARDENED_LDFLAGS $GPROF_LDFLAGS $LDFLAGS\"\n-echo \"  ARFLAGS       = $ARFLAGS\"\n-echo"
      },
      {
        "sha": "361975baa4915b26e4e65fecaf359d230a411450",
        "filename": "contrib/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 48,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,48 +0,0 @@\n-Repository Tools\n----------------------\n-\n-### [Developer tools](/contrib/devtools) ###\n-Specific tools for developers working on this repository.\n-Additional tools, including the `github-merge.py` script, are available in the [maintainer-tools](https://github.com/bitcoin-core/bitcoin-maintainer-tools) repository.\n-\n-### [Verify-Commits](/contrib/verify-commits) ###\n-Tool to verify that every merge commit was signed by a developer using the `github-merge.py` script.\n-\n-### [Linearize](/contrib/linearize) ###\n-Construct a linear, no-fork, best version of the blockchain.\n-\n-### [Qos](/contrib/qos) ###\n-\n-A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Bitcoin network. This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n-\n-### [Seeds](/contrib/seeds) ###\n-Utility to generate the pnSeed[] array that is compiled into the client.\n-\n-Build Tools and Keys\n----------------------\n-\n-### Packaging ###\n-The [Debian](/contrib/debian) subfolder contains the copyright file.\n-\n-All other packaging related files can be found in the [bitcoin-core/packaging](https://github.com/bitcoin-core/packaging) repository.\n-\n-### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n-Files used during the gitian build process. For more information about gitian, see the [the Bitcoin Core documentation repository](https://github.com/bitcoin-core/docs).\n-\n-### [Gitian-keys](/contrib/gitian-keys)\n-PGP keys used for signing Bitcoin Core [Gitian release](/doc/release-process.md) results.\n-\n-### [MacDeploy](/contrib/macdeploy) ###\n-Scripts and notes for Mac builds.\n-\n-### [Gitian-build](/contrib/gitian-build.py) ###\n-Script for running full Gitian builds.\n-\n-Test and Verify Tools\n----------------------\n-\n-### [TestGen](/contrib/testgen) ###\n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n-\n-### [Verify Binaries](/contrib/verifybinaries) ###\n-This script attempts to download and verify the signature file SHA256SUMS.asc from bitcoin.org."
      },
      {
        "sha": "ddea58a05cc1a9f0031b53b0d58f8c3801b32492",
        "filename": "contrib/bitcoin-cli.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 141,
        "changes": 141,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/bitcoin-cli.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/bitcoin-cli.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-cli.bash-completion?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,141 +0,0 @@\n-# bash programmable completion for bitcoin-cli(1)\n-# Copyright (c) 2012-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# call $bitcoin-cli for RPC\n-_bitcoin_rpc() {\n-    # determine already specified args necessary for RPC\n-    local rpcargs=()\n-    for i in ${COMP_LINE}; do\n-        case \"$i\" in\n-            -conf=*|-datadir=*|-regtest|-rpc*|-testnet)\n-                rpcargs=( \"${rpcargs[@]}\" \"$i\" )\n-                ;;\n-        esac\n-    done\n-    $bitcoin_cli \"${rpcargs[@]}\" \"$@\"\n-}\n-\n-_bitcoin_cli() {\n-    local cur prev words=() cword\n-    local bitcoin_cli\n-\n-    # save and use original argument to invoke bitcoin-cli for -help, help and RPC\n-    # as bitcoin-cli might not be in $PATH\n-    bitcoin_cli=\"$1\"\n-\n-    COMPREPLY=()\n-    _get_comp_words_by_ref -n = cur prev words cword\n-\n-    if ((cword > 5)); then\n-        case ${words[cword-5]} in\n-            sendtoaddress)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    if ((cword > 4)); then\n-        case ${words[cword-4]} in\n-            importaddress|listtransactions|setban)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            signrawtransactionwithkey|signrawtransactionwithwallet)\n-                COMPREPLY=( $( compgen -W \"ALL NONE SINGLE ALL|ANYONECANPAY NONE|ANYONECANPAY SINGLE|ANYONECANPAY\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    if ((cword > 3)); then\n-        case ${words[cword-3]} in\n-            addmultisigaddress)\n-                return 0\n-                ;;\n-            getbalance|gettxout|importaddress|importpubkey|importprivkey|listreceivedbyaddress|listsinceblock)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    if ((cword > 2)); then\n-        case ${words[cword-2]} in\n-            addnode)\n-                COMPREPLY=( $( compgen -W \"add remove onetry\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            setban)\n-                COMPREPLY=( $( compgen -W \"add remove\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            fundrawtransaction|getblock|getblockheader|getmempoolancestors|getmempooldescendants|getrawtransaction|gettransaction|listreceivedbyaddress|sendrawtransaction)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    case \"$prev\" in\n-        backupwallet|dumpwallet|importwallet)\n-            _filedir\n-            return 0\n-            ;;\n-        getaddednodeinfo|getrawmempool|lockunspent)\n-            COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-            return 0\n-            ;;\n-        getbalance|getnewaddress|listtransactions|sendmany)\n-            return 0\n-            ;;\n-    esac\n-\n-    case \"$cur\" in\n-        -conf=*)\n-            cur=\"${cur#*=}\"\n-            _filedir\n-            return 0\n-            ;;\n-        -datadir=*)\n-            cur=\"${cur#*=}\"\n-            _filedir -d\n-            return 0\n-            ;;\n-        -*=*)\t# prevent nonsense completions\n-            return 0\n-            ;;\n-        *)\n-            local helpopts commands\n-\n-            # only parse -help if senseful\n-            if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n-                helpopts=$($bitcoin_cli -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n-            fi\n-\n-            # only parse help if senseful\n-            if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n-                commands=$(_bitcoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n-            fi\n-\n-            COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n-\n-            # Prevent space if an argument is desired\n-            if [[ $COMPREPLY == *= ]]; then\n-                compopt -o nospace\n-            fi\n-            return 0\n-            ;;\n-    esac\n-} &&\n-complete -F _bitcoin_cli bitcoin-cli\n-\n-# Local variables:\n-# mode: shell-script\n-# sh-basic-offset: 4\n-# sh-indent-comment: t\n-# indent-tabs-mode: nil\n-# End:\n-# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "0e4eeee0a7ad9ebc49c30d30c285ccd41a752771",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,22 +0,0 @@\n-FORMS += \\\n-    ../src/qt/forms/aboutdialog.ui \\\n-    ../src/qt/forms/addressbookpage.ui \\\n-    ../src/qt/forms/askpassphrasedialog.ui \\\n-    ../src/qt/forms/coincontroldialog.ui \\\n-    ../src/qt/forms/editaddressdialog.ui \\\n-    ../src/qt/forms/helpmessagedialog.ui \\\n-    ../src/qt/forms/intro.ui \\\n-    ../src/qt/forms/openuridialog.ui \\\n-    ../src/qt/forms/optionsdialog.ui \\\n-    ../src/qt/forms/overviewpage.ui \\\n-    ../src/qt/forms/receivecoinsdialog.ui \\\n-    ../src/qt/forms/receiverequestdialog.ui \\\n-    ../src/qt/forms/debugwindow.ui \\\n-    ../src/qt/forms/sendcoinsdialog.ui \\\n-    ../src/qt/forms/sendcoinsentry.ui \\\n-    ../src/qt/forms/signverifymessagedialog.ui \\\n-    ../src/qt/forms/transactiondescdialog.ui \\\n-    ../src/qt/forms/createwalletdialog.ui\n-\n-RESOURCES += \\\n-    ../src/qt/bitcoin.qrc"
      },
      {
        "sha": "a83d2979ed3a8f11edea358937e8d5d359d58b4c",
        "filename": "contrib/bitcoin-tx.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 57,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/bitcoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/bitcoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-tx.bash-completion?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,57 +0,0 @@\n-# bash programmable completion for bitcoin-tx(1)\n-# Copyright (c) 2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-_bitcoin_tx() {\n-    local cur prev words=() cword\n-    local bitcoin_tx\n-\n-    # save and use original argument to invoke bitcoin-tx for -help\n-    # it might not be in $PATH\n-    bitcoin_tx=\"$1\"\n-\n-    COMPREPLY=()\n-    _get_comp_words_by_ref -n =: cur prev words cword\n-\n-    case \"$cur\" in\n-        load=*:*)\n-            cur=\"${cur#load=*:}\"\n-            _filedir\n-            return 0\n-            ;;\n-        *=*)\t# prevent attempts to complete other arguments\n-            return 0\n-            ;;\n-    esac\n-\n-    if [[ \"$cword\" == 1 || ( \"$prev\" != \"-create\" && \"$prev\" == -* ) ]]; then\n-        # only options (or an uncompletable hex-string) allowed\n-        # parse bitcoin-tx -help for options\n-        local helpopts\n-        helpopts=$($bitcoin_tx -help | sed -e '/^  -/ p' -e d )\n-        COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n-    else\n-        # only commands are allowed\n-        # parse -help for commands\n-        local helpcmds\n-        helpcmds=$($bitcoin_tx -help | sed -e '1,/Commands:/d' -e 's/=.*/=/' -e '/^  [a-z]/ p' -e d )\n-        COMPREPLY=( $( compgen -W \"$helpcmds\" -- \"$cur\" ) )\n-    fi\n-\n-    # Prevent space if an argument is desired\n-    if [[ $COMPREPLY == *= ]]; then\n-        compopt -o nospace\n-    fi\n-\n-    return 0\n-} &&\n-complete -F _bitcoin_tx bitcoin-tx\n-\n-# Local variables:\n-# mode: shell-script\n-# sh-basic-offset: 4\n-# sh-indent-comment: t\n-# indent-tabs-mode: nil\n-# End:\n-# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "ec1d9512d4759e79ff284ceb09ae0ee16bbdb653",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 56,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,56 +0,0 @@\n-# bash programmable completion for bitcoind(1) and bitcoin-qt(1)\n-# Copyright (c) 2012-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-_bitcoind() {\n-    local cur prev words=() cword\n-    local bitcoind\n-\n-    # save and use original argument to invoke bitcoind for -help\n-    # it might not be in $PATH\n-    bitcoind=\"$1\"\n-\n-    COMPREPLY=()\n-    _get_comp_words_by_ref -n = cur prev words cword\n-\n-    case \"$cur\" in\n-        -conf=*|-pid=*|-loadblock=*|-rpccookiefile=*|-wallet=*)\n-            cur=\"${cur#*=}\"\n-            _filedir\n-            return 0\n-            ;;\n-        -datadir=*)\n-            cur=\"${cur#*=}\"\n-            _filedir -d\n-            return 0\n-            ;;\n-        -*=*)\t# prevent nonsense completions\n-            return 0\n-            ;;\n-        *)\n-\n-            # only parse -help if sensible\n-            if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n-                local helpopts\n-                helpopts=$($bitcoind -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n-                COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n-            fi\n-\n-            # Prevent space if an argument is desired\n-            if [[ $COMPREPLY == *= ]]; then\n-                compopt -o nospace\n-            fi\n-            return 0\n-            ;;\n-    esac\n-} &&\n-complete -F _bitcoind bitcoind bitcoin-qt\n-\n-# Local variables:\n-# mode: shell-script\n-# sh-basic-offset: 4\n-# sh-indent-comment: t\n-# indent-tabs-mode: nil\n-# End:\n-# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "581fe712e96c2cab4839c6bdc49a1b5cdc7bb6e7",
        "filename": "contrib/debian/copyright",
        "status": "removed",
        "additions": 0,
        "deletions": 146,
        "changes": 146,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,146 +0,0 @@\n-Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\n-Upstream-Name: Bitcoin\n-Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n- irc://#bitcoin@freenode.net\n-Source: https://github.com/bitcoin/bitcoin\n-\n-Files: *\n-Copyright: 2009-2020, Bitcoin Core Developers\n-License: Expat\n-Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n-         as well as the numerous contributors to the project.\n-\n-Files: debian/*\n-Copyright: 2010-2011, Jonas Smedegaard <dr@jones.dk>\n-           2011, Matt Corallo <matt@bluematt.me>\n-License: GPL-2+\n-\n-Files: src/secp256k1/build-aux/m4/ax_jni_include_dir.m4\n-Copyright: 2008 Don Anderson <dda@sleepycat.com>\n-License: GNU-All-permissive-License\n-\n-Files: src/secp256k1/build-aux/m4/ax_prog_cc_for_build.m4\n-Copyright: 2008 Paolo Bonzini <bonzini@gnu.org>\n-License: GNU-All-permissive-License\n-\n-Files: src/qt/res/icons/add.png\n-       src/qt/res/icons/address-book.png\n-       src/qt/res/icons/chevron.png\n-       src/qt/res/icons/edit.png\n-       src/qt/res/icons/editcopy.png\n-       src/qt/res/icons/editpaste.png\n-       src/qt/res/icons/export.png\n-       src/qt/res/icons/eye.png\n-       src/qt/res/icons/history.png\n-       src/qt/res/icons/lock_*.png\n-       src/qt/res/icons/overview.png\n-       src/qt/res/icons/receive.png\n-       src/qt/res/icons/remove.png\n-       src/qt/res/icons/send.png\n-       src/qt/res/icons/synced.png\n-       src/qt/res/icons/transaction*.png\n-       src/qt/res/icons/tx_output.png\n-       src/qt/res/icons/warning.png\n-Copyright: Stephen Hutchings (and more)\n-           http://typicons.com\n-License: Expat\n-Comment: Site: https://github.com/stephenhutchings/typicons.font\n-\n-Files: src/qt/res/icons/connect*.png\n-       src/qt/res/src/connect-*.svg\n-       src/qt/res/icons/network_disabled.png\n-       src/qt/res/src/network_disabled.svg\n-Copyright: Marco Falke\n-           Luke Dashjr\n-License: Expat\n-Comment: Inspired by Stephen Hutchings' Typicons\n-\n-Files: src/qt/res/icons/tx_mined.png\n-       src/qt/res/src/mine.svg\n-       src/qt/res/icons/fontbigger.png\n-       src/qt/res/icons/fontsmaller.png\n-       src/qt/res/icons/hd_disabled.png\n-       src/qt/res/src/hd_disabled.svg\n-       src/qt/res/icons/hd_enabled.png\n-       src/qt/res/src/hd_enabled.svg\n-Copyright: Jonas Schnelli\n-License: Expat\n-\n-Files: src/qt/res/icons/clock*.png\n-       src/qt/res/icons/eye_*.png\n-       src/qt/res/icons/tx_in*.png\n-       src/qt/res/src/clock_*.svg\n-       src/qt/res/src/tx_*.svg\n-Copyright: Stephen Hutchings, Jonas Schnelli\n-License: Expat\n-Comment: Modifications of Stephen Hutchings' Typicons\n-\n-Files: src/qt/res/icons/bitcoin.*\n-       share/pixmaps/bitcoin*\n-       src/qt/res/src/bitcoin.svg\n-Copyright: Bitboy, Jonas Schnelli\n-License: public-domain\n-Comment: Site: https://bitcointalk.org/?topic=1756.0\n-\n-Files: src/qt/res/icons/proxy.png\n-       src/qt/res/src/proxy.svg\n-Copyright: Cristian Mircea Messel\n-License: public-domain\n-\n-\n-License: Expat\n- Permission is hereby granted, free of charge, to any person obtaining a\n- copy of this software and associated documentation files (the\n- \"Software\"), to deal in the Software without restriction, including\n- without limitation the rights to use, copy, modify, merge, publish,\n- distribute, sublicense, and/or sell copies of the Software, and to\n- permit persons to whom the Software is furnished to do so, subject to\n- the following conditions:\n- .\n- The above copyright notice and this permission notice shall be included\n- in all copies or substantial portions of the Software.\n- .\n- THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n- OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n- MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n- IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n- CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n- TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n- SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n-\n-License: GNU-All-permissive-License\n- Copying and distribution of this file, with or without modification, are\n- permitted in any medium without royalty provided the copyright notice\n- and this notice are preserved. This file is offered as-is, without any\n- warranty.\n-\n-License: GPL-2+\n- This program is free software; you can redistribute it and/or modify it\n- under the terms of the GNU General Public License as published by the\n- Free Software Foundation; either version 2, or (at your option) any\n- later version.\n- .\n- This program is distributed in the hope that it will be useful, but\n- WITHOUT ANY WARRANTY; without even the implied warranty of\n- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n- General Public License for more details.\n-Comment:\n- On Debian systems the GNU General Public License (GPL) version 2 is\n- located in '/usr/share/common-licenses/GPL-2'.\n- .\n- You should have received a copy of the GNU General Public License along\n- with this program.  If not, see <http://www.gnu.org/licenses/>.\n-\n-License: GPL-3+\n- Permission is granted to copy, distribute and/or modify this document\n- under the terms of the GNU General Public License, Version 3 or any\n- later version published by the Free Software Foundation.\n-Comment:\n- On Debian systems the GNU General Public License (GPL) version 3 is\n- located in '/usr/share/common-licenses/GPL-3'.\n- .\n- You should have received a copy of the GNU General Public License along\n- with this program.  If not, see <http://www.gnu.org/licenses/>.\n-\n-License: public-domain\n- This work is in the public domain."
      },
      {
        "sha": "bdff7a84b098bd430d9e3b3ec8c58106da7bb680",
        "filename": "contrib/devtools/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 130,
        "changes": 130,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,130 +0,0 @@\n-Contents\n-========\n-This directory contains tools for developers working on this repository.\n-\n-clang-format-diff.py\n-===================\n-\n-A script to format unified git diffs according to [.clang-format](../../src/.clang-format).\n-\n-Requires `clang-format`, installed e.g. via `brew install clang-format` on macOS.\n-\n-For instance, to format the last commit with 0 lines of context,\n-the script should be called from the git root folder as follows.\n-\n-```\n-git diff -U0 HEAD~1.. | ./contrib/devtools/clang-format-diff.py -p1 -i -v\n-```\n-\n-copyright\\_header.py\n-====================\n-\n-Provides utilities for managing copyright headers of `The Bitcoin Core\n-developers` in repository source files. It has three subcommands:\n-\n-```\n-$ ./copyright_header.py report <base_directory> [verbose]\n-$ ./copyright_header.py update <base_directory>\n-$ ./copyright_header.py insert <file>\n-```\n-Running these subcommands without arguments displays a usage string.\n-\n-copyright\\_header.py report \\<base\\_directory\\> [verbose]\n----------------------------------------------------------\n-\n-Produces a report of all copyright header notices found inside the source files\n-of a repository. Useful to quickly visualize the state of the headers.\n-Specifying `verbose` will list the full filenames of files of each category.\n-\n-copyright\\_header.py update \\<base\\_directory\\> [verbose]\n----------------------------------------------------------\n-Updates all the copyright headers of `The Bitcoin Core developers` which were\n-changed in a year more recent than is listed. For example:\n-```\n-// Copyright (c) <firstYear>-<lastYear> The Bitcoin Core developers\n-```\n-will be updated to:\n-```\n-// Copyright (c) <firstYear>-<lastModifiedYear> The Bitcoin Core developers\n-```\n-where `<lastModifiedYear>` is obtained from the `git log` history.\n-\n-This subcommand also handles copyright headers that have only a single year. In\n-those cases:\n-```\n-// Copyright (c) <year> The Bitcoin Core developers\n-```\n-will be updated to:\n-```\n-// Copyright (c) <year>-<lastModifiedYear> The Bitcoin Core developers\n-```\n-where the update is appropriate.\n-\n-copyright\\_header.py insert \\<file\\>\n-------------------------------------\n-Inserts a copyright header for `The Bitcoin Core developers` at the top of the\n-file in either Python or C++ style as determined by the file extension. If the\n-file is a Python file and it has  `#!` starting the first line, the header is\n-inserted in the line below it.\n-\n-The copyright dates will be set to be `<year_introduced>-<current_year>` where\n-`<year_introduced>` is according to the `git log` history. If\n-`<year_introduced>` is equal to `<current_year>`, it will be set as a single\n-year rather than two hyphenated years.\n-\n-If the file already has a copyright for `The Bitcoin Core developers`, the\n-script will exit.\n-\n-gen-manpages.sh\n-===============\n-\n-A small script to automatically create manpages in ../../doc/man by running the release binaries with the -help option.\n-This requires help2man which can be found at: https://www.gnu.org/software/help2man/\n-\n-With in-tree builds this tool can be run from any directory within the\n-repostitory. To use this tool with out-of-tree builds set `BUILDDIR`. For\n-example:\n-\n-```bash\n-BUILDDIR=$PWD/build contrib/devtools/gen-manpages.sh\n-```\n-\n-security-check.py and test-security-check.py\n-============================================\n-\n-Perform basic security checks on a series of executables.\n-\n-symbol-check.py\n-===============\n-\n-A script to check that the executables produced by gitian only contain\n-certain symbols and are only linked against allowed libraries.\n-\n-For Linux this means checking for allowed gcc, glibc and libstdc++ version symbols.\n-This makes sure they are still compatible with the minimum supported distribution versions.\n-\n-For macOS and Windows we check that the executables are only linked against libraries we allow.\n-\n-Example usage after a gitian build:\n-\n-    find ../gitian-builder/build -type f -executable | xargs python3 contrib/devtools/symbol-check.py\n-\n-If no errors occur the return value will be 0 and the output will be empty.\n-\n-If there are any errors the return value will be 1 and output like this will be printed:\n-\n-    .../64/test_bitcoin: symbol memcpy from unsupported version GLIBC_2.14\n-    .../64/test_bitcoin: symbol __fdelt_chk from unsupported version GLIBC_2.15\n-    .../64/test_bitcoin: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15\n-    .../64/test_bitcoin: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n-\n-circular-dependencies.py\n-========================\n-\n-Run this script from the root of the source tree (`src/`) to find circular dependencies in the source code.\n-This looks only at which files include other files, treating the `.cpp` and `.h` file as one unit.\n-\n-Example usage:\n-\n-    cd .../src\n-    ../contrib/devtools/circular-dependencies.py {*,*/*,*/*/*}.{h,cpp}"
      },
      {
        "sha": "bc5f09a3e260f6f02d6ea72e90b21a53e003ff0e",
        "filename": "contrib/devtools/circular-dependencies.py",
        "status": "removed",
        "additions": 0,
        "deletions": 91,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/circular-dependencies.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/circular-dependencies.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/circular-dependencies.py?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,91 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-import sys\n-import re\n-\n-MAPPING = {\n-    'core_read.cpp': 'core_io.cpp',\n-    'core_write.cpp': 'core_io.cpp',\n-}\n-\n-# Directories with header-based modules, where the assumption that .cpp files\n-# define functions and variables declared in corresponding .h files is\n-# incorrect.\n-HEADER_MODULE_PATHS = [\n-    'interfaces/'\n-]\n-\n-def module_name(path):\n-    if path in MAPPING:\n-        path = MAPPING[path]\n-    if any(path.startswith(dirpath) for dirpath in HEADER_MODULE_PATHS):\n-        return path\n-    if path.endswith(\".h\"):\n-        return path[:-2]\n-    if path.endswith(\".c\"):\n-        return path[:-2]\n-    if path.endswith(\".cpp\"):\n-        return path[:-4]\n-    return None\n-\n-files = dict()\n-deps = dict()\n-\n-RE = re.compile(\"^#include <(.*)>\")\n-\n-# Iterate over files, and create list of modules\n-for arg in sys.argv[1:]:\n-    module = module_name(arg)\n-    if module is None:\n-        print(\"Ignoring file %s (does not constitute module)\\n\" % arg)\n-    else:\n-        files[arg] = module\n-        deps[module] = set()\n-\n-# Iterate again, and build list of direct dependencies for each module\n-# TODO: implement support for multiple include directories\n-for arg in sorted(files.keys()):\n-    module = files[arg]\n-    with open(arg, 'r', encoding=\"utf8\") as f:\n-        for line in f:\n-            match = RE.match(line)\n-            if match:\n-                include = match.group(1)\n-                included_module = module_name(include)\n-                if included_module is not None and included_module in deps and included_module != module:\n-                    deps[module].add(included_module)\n-\n-# Loop to find the shortest (remaining) circular dependency\n-have_cycle = False\n-while True:\n-    shortest_cycle = None\n-    for module in sorted(deps.keys()):\n-        # Build the transitive closure of dependencies of module\n-        closure = dict()\n-        for dep in deps[module]:\n-            closure[dep] = []\n-        while True:\n-            old_size = len(closure)\n-            old_closure_keys = sorted(closure.keys())\n-            for src in old_closure_keys:\n-                for dep in deps[src]:\n-                    if dep not in closure:\n-                        closure[dep] = closure[src] + [src]\n-            if len(closure) == old_size:\n-                break\n-        # If module is in its own transitive closure, it's a circular dependency; check if it is the shortest\n-        if module in closure and (shortest_cycle is None or len(closure[module]) + 1 < len(shortest_cycle)):\n-            shortest_cycle = [module] + closure[module]\n-    if shortest_cycle is None:\n-        break\n-    # We have the shortest circular dependency; report it\n-    module = shortest_cycle[0]\n-    print(\"Circular dependency: %s\" % (\" -> \".join(shortest_cycle + [module])))\n-    # And then break the dependency to avoid repeating in other cycles\n-    deps[shortest_cycle[-1]] = deps[shortest_cycle[-1]] - set([module])\n-    have_cycle = True\n-\n-sys.exit(1 if have_cycle else 0)"
      },
      {
        "sha": "98eee67f4300853629cc61baaaed13008819038c",
        "filename": "contrib/devtools/clang-format-diff.py",
        "status": "removed",
        "additions": 0,
        "deletions": 166,
        "changes": 166,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/clang-format-diff.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/clang-format-diff.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format-diff.py?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,166 +0,0 @@\n-#!/usr/bin/env python3\n-#\n-#===- clang-format-diff.py - ClangFormat Diff Reformatter ----*- python -*--===#\n-#\n-#                     The LLVM Compiler Infrastructure\n-#\n-# This file is distributed under the University of Illinois Open Source\n-# License.\n-#\n-#           ============================================================\n-#\n-# University of Illinois/NCSA\n-# Open Source License\n-#\n-# Copyright (c) 2007-2015 University of Illinois at Urbana-Champaign.\n-# All rights reserved.\n-#\n-# Developed by:\n-#\n-#     LLVM Team\n-#\n-#     University of Illinois at Urbana-Champaign\n-#\n-#     http://llvm.org\n-#\n-# Permission is hereby granted, free of charge, to any person obtaining a copy of\n-# this software and associated documentation files (the \"Software\"), to deal with\n-# the Software without restriction, including without limitation the rights to\n-# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n-# of the Software, and to permit persons to whom the Software is furnished to do\n-# so, subject to the following conditions:\n-#\n-#     * Redistributions of source code must retain the above copyright notice,\n-#       this list of conditions and the following disclaimers.\n-#\n-#     * Redistributions in binary form must reproduce the above copyright notice,\n-#       this list of conditions and the following disclaimers in the\n-#       documentation and/or other materials provided with the distribution.\n-#\n-#     * Neither the names of the LLVM Team, University of Illinois at\n-#       Urbana-Champaign, nor the names of its contributors may be used to\n-#       endorse or promote products derived from this Software without specific\n-#       prior written permission.\n-#\n-# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n-# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n-# CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\n-# SOFTWARE.\n-#\n-#           ============================================================\n-#\n-#===------------------------------------------------------------------------===#\n-\n-r\"\"\"\n-ClangFormat Diff Reformatter\n-============================\n-\n-This script reads input from a unified diff and reformats all the changed\n-lines. This is useful to reformat all the lines touched by a specific patch.\n-Example usage for git/svn users:\n-\n-  git diff -U0 HEAD^ | clang-format-diff.py -p1 -i\n-  svn diff --diff-cmd=diff -x-U0 | clang-format-diff.py -i\n-\n-\"\"\"\n-\n-import argparse\n-import difflib\n-import io\n-import re\n-import subprocess\n-import sys\n-\n-\n-# Change this to the full path if clang-format is not on the path.\n-binary = 'clang-format'\n-\n-\n-def main():\n-  parser = argparse.ArgumentParser(description=\n-                                   'Reformat changed lines in diff. Without -i '\n-                                   'option just output the diff that would be '\n-                                   'introduced.')\n-  parser.add_argument('-i', action='store_true', default=False,\n-                      help='apply edits to files instead of displaying a diff')\n-  parser.add_argument('-p', metavar='NUM', default=0,\n-                      help='strip the smallest prefix containing P slashes')\n-  parser.add_argument('-regex', metavar='PATTERN', default=None,\n-                      help='custom pattern selecting file paths to reformat '\n-                      '(case sensitive, overrides -iregex)')\n-  parser.add_argument('-iregex', metavar='PATTERN', default=\n-                      r'.*\\.(cpp|cc|c\\+\\+|cxx|c|cl|h|hpp|m|mm|inc|js|ts|proto'\n-                      r'|protodevel|java)',\n-                      help='custom pattern selecting file paths to reformat '\n-                      '(case insensitive, overridden by -regex)')\n-  parser.add_argument('-sort-includes', action='store_true', default=False,\n-                      help='let clang-format sort include blocks')\n-  parser.add_argument('-v', '--verbose', action='store_true',\n-                      help='be more verbose, ineffective without -i')\n-  args = parser.parse_args()\n-\n-  # Extract changed lines for each file.\n-  filename = None\n-  lines_by_file = {}\n-  for line in sys.stdin:\n-    match = re.search(r'^\\+\\+\\+\\ (.*?/){%s}(\\S*)' % args.p, line)\n-    if match:\n-      filename = match.group(2)\n-    if filename is None:\n-      continue\n-\n-    if args.regex is not None:\n-      if not re.match('^%s$' % args.regex, filename):\n-        continue\n-    else:\n-      if not re.match('^%s$' % args.iregex, filename, re.IGNORECASE):\n-        continue\n-\n-    match = re.search(r'^@@.*\\+(\\d+)(,(\\d+))?', line)\n-    if match:\n-      start_line = int(match.group(1))\n-      line_count = 1\n-      if match.group(3):\n-        line_count = int(match.group(3))\n-      if line_count == 0:\n-        continue\n-      end_line = start_line + line_count - 1\n-      lines_by_file.setdefault(filename, []).extend(\n-          ['-lines', str(start_line) + ':' + str(end_line)])\n-\n-  # Reformat files containing changes in place.\n-  for filename, lines in lines_by_file.items():\n-    if args.i and args.verbose:\n-      print('Formatting {}'.format(filename))\n-    command = [binary, filename]\n-    if args.i:\n-      command.append('-i')\n-    if args.sort_includes:\n-      command.append('-sort-includes')\n-    command.extend(lines)\n-    command.extend(['-style=file', '-fallback-style=none'])\n-    p = subprocess.Popen(command,\n-                         stdout=subprocess.PIPE,\n-                         stderr=None,\n-                         stdin=subprocess.PIPE,\n-                         universal_newlines=True)\n-    stdout, stderr = p.communicate()\n-    if p.returncode != 0:\n-      sys.exit(p.returncode)\n-\n-    if not args.i:\n-      with open(filename, encoding=\"utf8\") as f:\n-        code = f.readlines()\n-      formatted_code = io.StringIO(stdout).readlines()\n-      diff = difflib.unified_diff(code, formatted_code,\n-                                  filename, filename,\n-                                  '(before formatting)', '(after formatting)')\n-      diff_string = ''.join(diff)\n-      if len(diff_string) > 0:\n-        sys.stdout.write(diff_string)\n-\n-if __name__ == '__main__':\n-  main()"
      },
      {
        "sha": "9a555c70bb490add4f055da0f58e9100a396584f",
        "filename": "contrib/devtools/copyright_header.py",
        "status": "removed",
        "additions": 0,
        "deletions": 606,
        "changes": 606,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/copyright_header.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/copyright_header.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/copyright_header.py?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,606 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2016-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-import re\n-import fnmatch\n-import sys\n-import subprocess\n-import datetime\n-import os\n-\n-################################################################################\n-# file filtering\n-################################################################################\n-\n-EXCLUDE = [\n-    # auto generated:\n-    'src/qt/bitcoinstrings.cpp',\n-    'src/chainparamsseeds.h',\n-    # other external copyrights:\n-    'src/reverse_iterator.h',\n-    'src/test/fuzz/FuzzedDataProvider.h',\n-    'src/tinyformat.h',\n-    'src/bench/nanobench.h',\n-    'test/functional/test_framework/bignum.py',\n-    # python init:\n-    '*__init__.py',\n-]\n-EXCLUDE_COMPILED = re.compile('|'.join([fnmatch.translate(m) for m in EXCLUDE]))\n-\n-EXCLUDE_DIRS = [\n-    # git subtrees\n-    \"src/crypto/ctaes/\",\n-    \"src/leveldb/\",\n-    \"src/secp256k1/\",\n-    \"src/univalue/\",\n-    \"src/crc32c/\",\n-]\n-\n-INCLUDE = ['*.h', '*.cpp', '*.cc', '*.c', '*.mm', '*.py', '*.sh', '*.bash-completion']\n-INCLUDE_COMPILED = re.compile('|'.join([fnmatch.translate(m) for m in INCLUDE]))\n-\n-def applies_to_file(filename):\n-    for excluded_dir in EXCLUDE_DIRS:\n-        if filename.startswith(excluded_dir):\n-            return False\n-    return ((EXCLUDE_COMPILED.match(filename) is None) and\n-            (INCLUDE_COMPILED.match(filename) is not None))\n-\n-################################################################################\n-# obtain list of files in repo according to INCLUDE and EXCLUDE\n-################################################################################\n-\n-GIT_LS_CMD = 'git ls-files --full-name'.split(' ')\n-GIT_TOPLEVEL_CMD = 'git rev-parse --show-toplevel'.split(' ')\n-\n-def call_git_ls(base_directory):\n-    out = subprocess.check_output([*GIT_LS_CMD, base_directory])\n-    return [f for f in out.decode(\"utf-8\").split('\\n') if f != '']\n-\n-def call_git_toplevel():\n-    \"Returns the absolute path to the project root\"\n-    return subprocess.check_output(GIT_TOPLEVEL_CMD).strip().decode(\"utf-8\")\n-\n-def get_filenames_to_examine(base_directory):\n-    \"Returns an array of absolute paths to any project files in the base_directory that pass the include/exclude filters\"\n-    root = call_git_toplevel()\n-    filenames = call_git_ls(base_directory)\n-    return sorted([os.path.join(root, filename) for filename in filenames if\n-                   applies_to_file(filename)])\n-\n-################################################################################\n-# define and compile regexes for the patterns we are looking for\n-################################################################################\n-\n-\n-COPYRIGHT_WITH_C = r'Copyright \\(c\\)'\n-COPYRIGHT_WITHOUT_C = 'Copyright'\n-ANY_COPYRIGHT_STYLE = '(%s|%s)' % (COPYRIGHT_WITH_C, COPYRIGHT_WITHOUT_C)\n-\n-YEAR = \"20[0-9][0-9]\"\n-YEAR_RANGE = '(%s)(-%s)?' % (YEAR, YEAR)\n-YEAR_LIST = '(%s)(, %s)+' % (YEAR, YEAR)\n-ANY_YEAR_STYLE = '(%s|%s)' % (YEAR_RANGE, YEAR_LIST)\n-ANY_COPYRIGHT_STYLE_OR_YEAR_STYLE = (\"%s %s\" % (ANY_COPYRIGHT_STYLE,\n-                                                ANY_YEAR_STYLE))\n-\n-ANY_COPYRIGHT_COMPILED = re.compile(ANY_COPYRIGHT_STYLE_OR_YEAR_STYLE)\n-\n-def compile_copyright_regex(copyright_style, year_style, name):\n-    return re.compile(r'%s %s,? %s( +\\*)?\\n' % (copyright_style, year_style, name))\n-\n-EXPECTED_HOLDER_NAMES = [\n-    r\"Satoshi Nakamoto\",\n-    r\"The Bitcoin Core developers\",\n-    r\"BitPay Inc\\.\",\n-    r\"University of Illinois at Urbana-Champaign\\.\",\n-    r\"Pieter Wuille\",\n-    r\"Wladimir J\\. van der Laan\",\n-    r\"Jeff Garzik\",\n-    r\"Jan-Klaas Kollhof\",\n-    r\"ArtForz -- public domain half-a-node\",\n-    r\"Intel Corporation ?\",\n-    r\"The Zcash developers\",\n-    r\"Jeremy Rubin\",\n-]\n-\n-DOMINANT_STYLE_COMPILED = {}\n-YEAR_LIST_STYLE_COMPILED = {}\n-WITHOUT_C_STYLE_COMPILED = {}\n-\n-for holder_name in EXPECTED_HOLDER_NAMES:\n-    DOMINANT_STYLE_COMPILED[holder_name] = (\n-        compile_copyright_regex(COPYRIGHT_WITH_C, YEAR_RANGE, holder_name))\n-    YEAR_LIST_STYLE_COMPILED[holder_name] = (\n-        compile_copyright_regex(COPYRIGHT_WITH_C, YEAR_LIST, holder_name))\n-    WITHOUT_C_STYLE_COMPILED[holder_name] = (\n-        compile_copyright_regex(COPYRIGHT_WITHOUT_C, ANY_YEAR_STYLE,\n-                                holder_name))\n-\n-################################################################################\n-# search file contents for copyright message of particular category\n-################################################################################\n-\n-def get_count_of_copyrights_of_any_style_any_holder(contents):\n-    return len(ANY_COPYRIGHT_COMPILED.findall(contents))\n-\n-def file_has_dominant_style_copyright_for_holder(contents, holder_name):\n-    match = DOMINANT_STYLE_COMPILED[holder_name].search(contents)\n-    return match is not None\n-\n-def file_has_year_list_style_copyright_for_holder(contents, holder_name):\n-    match = YEAR_LIST_STYLE_COMPILED[holder_name].search(contents)\n-    return match is not None\n-\n-def file_has_without_c_style_copyright_for_holder(contents, holder_name):\n-    match = WITHOUT_C_STYLE_COMPILED[holder_name].search(contents)\n-    return match is not None\n-\n-################################################################################\n-# get file info\n-################################################################################\n-\n-def read_file(filename):\n-    return open(filename, 'r', encoding=\"utf8\").read()\n-\n-def gather_file_info(filename):\n-    info = {}\n-    info['filename'] = filename\n-    c = read_file(filename)\n-    info['contents'] = c\n-\n-    info['all_copyrights'] = get_count_of_copyrights_of_any_style_any_holder(c)\n-\n-    info['classified_copyrights'] = 0\n-    info['dominant_style'] = {}\n-    info['year_list_style'] = {}\n-    info['without_c_style'] = {}\n-    for holder_name in EXPECTED_HOLDER_NAMES:\n-        has_dominant_style = (\n-            file_has_dominant_style_copyright_for_holder(c, holder_name))\n-        has_year_list_style = (\n-            file_has_year_list_style_copyright_for_holder(c, holder_name))\n-        has_without_c_style = (\n-            file_has_without_c_style_copyright_for_holder(c, holder_name))\n-        info['dominant_style'][holder_name] = has_dominant_style\n-        info['year_list_style'][holder_name] = has_year_list_style\n-        info['without_c_style'][holder_name] = has_without_c_style\n-        if has_dominant_style or has_year_list_style or has_without_c_style:\n-            info['classified_copyrights'] = info['classified_copyrights'] + 1\n-    return info\n-\n-################################################################################\n-# report execution\n-################################################################################\n-\n-SEPARATOR = '-'.join(['' for _ in range(80)])\n-\n-def print_filenames(filenames, verbose):\n-    if not verbose:\n-        return\n-    for filename in filenames:\n-        print(\"\\t%s\" % filename)\n-\n-def print_report(file_infos, verbose):\n-    print(SEPARATOR)\n-    examined = [i['filename'] for i in file_infos]\n-    print(\"%d files examined according to INCLUDE and EXCLUDE fnmatch rules\" %\n-          len(examined))\n-    print_filenames(examined, verbose)\n-\n-    print(SEPARATOR)\n-    print('')\n-    zero_copyrights = [i['filename'] for i in file_infos if\n-                       i['all_copyrights'] == 0]\n-    print(\"%4d with zero copyrights\" % len(zero_copyrights))\n-    print_filenames(zero_copyrights, verbose)\n-    one_copyright = [i['filename'] for i in file_infos if\n-                     i['all_copyrights'] == 1]\n-    print(\"%4d with one copyright\" % len(one_copyright))\n-    print_filenames(one_copyright, verbose)\n-    two_copyrights = [i['filename'] for i in file_infos if\n-                      i['all_copyrights'] == 2]\n-    print(\"%4d with two copyrights\" % len(two_copyrights))\n-    print_filenames(two_copyrights, verbose)\n-    three_copyrights = [i['filename'] for i in file_infos if\n-                        i['all_copyrights'] == 3]\n-    print(\"%4d with three copyrights\" % len(three_copyrights))\n-    print_filenames(three_copyrights, verbose)\n-    four_or_more_copyrights = [i['filename'] for i in file_infos if\n-                               i['all_copyrights'] >= 4]\n-    print(\"%4d with four or more copyrights\" % len(four_or_more_copyrights))\n-    print_filenames(four_or_more_copyrights, verbose)\n-    print('')\n-    print(SEPARATOR)\n-    print('Copyrights with dominant style:\\ne.g. \"Copyright (c)\" and '\n-          '\"<year>\" or \"<startYear>-<endYear>\":\\n')\n-    for holder_name in EXPECTED_HOLDER_NAMES:\n-        dominant_style = [i['filename'] for i in file_infos if\n-                          i['dominant_style'][holder_name]]\n-        if len(dominant_style) > 0:\n-            print(\"%4d with '%s'\" % (len(dominant_style),\n-                                     holder_name.replace('\\n', '\\\\n')))\n-            print_filenames(dominant_style, verbose)\n-    print('')\n-    print(SEPARATOR)\n-    print('Copyrights with year list style:\\ne.g. \"Copyright (c)\" and '\n-          '\"<year1>, <year2>, ...\":\\n')\n-    for holder_name in EXPECTED_HOLDER_NAMES:\n-        year_list_style = [i['filename'] for i in file_infos if\n-                           i['year_list_style'][holder_name]]\n-        if len(year_list_style) > 0:\n-            print(\"%4d with '%s'\" % (len(year_list_style),\n-                                     holder_name.replace('\\n', '\\\\n')))\n-            print_filenames(year_list_style, verbose)\n-    print('')\n-    print(SEPARATOR)\n-    print('Copyrights with no \"(c)\" style:\\ne.g. \"Copyright\" and \"<year>\" or '\n-          '\"<startYear>-<endYear>\":\\n')\n-    for holder_name in EXPECTED_HOLDER_NAMES:\n-        without_c_style = [i['filename'] for i in file_infos if\n-                           i['without_c_style'][holder_name]]\n-        if len(without_c_style) > 0:\n-            print(\"%4d with '%s'\" % (len(without_c_style),\n-                                     holder_name.replace('\\n', '\\\\n')))\n-            print_filenames(without_c_style, verbose)\n-\n-    print('')\n-    print(SEPARATOR)\n-\n-    unclassified_copyrights = [i['filename'] for i in file_infos if\n-                               i['classified_copyrights'] < i['all_copyrights']]\n-    print(\"%d with unexpected copyright holder names\" %\n-          len(unclassified_copyrights))\n-    print_filenames(unclassified_copyrights, verbose)\n-    print(SEPARATOR)\n-\n-def exec_report(base_directory, verbose):\n-    filenames = get_filenames_to_examine(base_directory)\n-    file_infos = [gather_file_info(f) for f in filenames]\n-    print_report(file_infos, verbose)\n-\n-################################################################################\n-# report cmd\n-################################################################################\n-\n-REPORT_USAGE = \"\"\"\n-Produces a report of all copyright header notices found inside the source files\n-of a repository.\n-\n-Usage:\n-    $ ./copyright_header.py report <base_directory> [verbose]\n-\n-Arguments:\n-    <base_directory> - The base directory of a bitcoin source code repository.\n-    [verbose] - Includes a list of every file of each subcategory in the report.\n-\"\"\"\n-\n-def report_cmd(argv):\n-    if len(argv) == 2:\n-        sys.exit(REPORT_USAGE)\n-\n-    base_directory = argv[2]\n-    if not os.path.exists(base_directory):\n-        sys.exit(\"*** bad <base_directory>: %s\" % base_directory)\n-\n-    if len(argv) == 3:\n-        verbose = False\n-    elif argv[3] == 'verbose':\n-        verbose = True\n-    else:\n-        sys.exit(\"*** unknown argument: %s\" % argv[2])\n-\n-    exec_report(base_directory, verbose)\n-\n-################################################################################\n-# query git for year of last change\n-################################################################################\n-\n-GIT_LOG_CMD = \"git log --pretty=format:%%ai %s\"\n-\n-def call_git_log(filename):\n-    out = subprocess.check_output((GIT_LOG_CMD % filename).split(' '))\n-    return out.decode(\"utf-8\").split('\\n')\n-\n-def get_git_change_years(filename):\n-    git_log_lines = call_git_log(filename)\n-    if len(git_log_lines) == 0:\n-        return [datetime.date.today().year]\n-    # timestamp is in ISO 8601 format. e.g. \"2016-09-05 14:25:32 -0600\"\n-    return [line.split(' ')[0].split('-')[0] for line in git_log_lines]\n-\n-def get_most_recent_git_change_year(filename):\n-    return max(get_git_change_years(filename))\n-\n-################################################################################\n-# read and write to file\n-################################################################################\n-\n-def read_file_lines(filename):\n-    f = open(filename, 'r', encoding=\"utf8\")\n-    file_lines = f.readlines()\n-    f.close()\n-    return file_lines\n-\n-def write_file_lines(filename, file_lines):\n-    f = open(filename, 'w', encoding=\"utf8\")\n-    f.write(''.join(file_lines))\n-    f.close()\n-\n-################################################################################\n-# update header years execution\n-################################################################################\n-\n-COPYRIGHT = r'Copyright \\(c\\)'\n-YEAR = \"20[0-9][0-9]\"\n-YEAR_RANGE = '(%s)(-%s)?' % (YEAR, YEAR)\n-HOLDER = 'The Bitcoin Core developers'\n-UPDATEABLE_LINE_COMPILED = re.compile(' '.join([COPYRIGHT, YEAR_RANGE, HOLDER]))\n-\n-def get_updatable_copyright_line(file_lines):\n-    index = 0\n-    for line in file_lines:\n-        if UPDATEABLE_LINE_COMPILED.search(line) is not None:\n-            return index, line\n-        index = index + 1\n-    return None, None\n-\n-def parse_year_range(year_range):\n-    year_split = year_range.split('-')\n-    start_year = year_split[0]\n-    if len(year_split) == 1:\n-        return start_year, start_year\n-    return start_year, year_split[1]\n-\n-def year_range_to_str(start_year, end_year):\n-    if start_year == end_year:\n-        return start_year\n-    return \"%s-%s\" % (start_year, end_year)\n-\n-def create_updated_copyright_line(line, last_git_change_year):\n-    copyright_splitter = 'Copyright (c) '\n-    copyright_split = line.split(copyright_splitter)\n-    # Preserve characters on line that are ahead of the start of the copyright\n-    # notice - they are part of the comment block and vary from file-to-file.\n-    before_copyright = copyright_split[0]\n-    after_copyright = copyright_split[1]\n-\n-    space_split = after_copyright.split(' ')\n-    year_range = space_split[0]\n-    start_year, end_year = parse_year_range(year_range)\n-    if end_year == last_git_change_year:\n-        return line\n-    return (before_copyright + copyright_splitter +\n-            year_range_to_str(start_year, last_git_change_year) + ' ' +\n-            ' '.join(space_split[1:]))\n-\n-def update_updatable_copyright(filename):\n-    file_lines = read_file_lines(filename)\n-    index, line = get_updatable_copyright_line(file_lines)\n-    if not line:\n-        print_file_action_message(filename, \"No updatable copyright.\")\n-        return\n-    last_git_change_year = get_most_recent_git_change_year(filename)\n-    new_line = create_updated_copyright_line(line, last_git_change_year)\n-    if line == new_line:\n-        print_file_action_message(filename, \"Copyright up-to-date.\")\n-        return\n-    file_lines[index] = new_line\n-    write_file_lines(filename, file_lines)\n-    print_file_action_message(filename,\n-                              \"Copyright updated! -> %s\" % last_git_change_year)\n-\n-def exec_update_header_year(base_directory):\n-    for filename in get_filenames_to_examine(base_directory):\n-        update_updatable_copyright(filename)\n-\n-################################################################################\n-# update cmd\n-################################################################################\n-\n-UPDATE_USAGE = \"\"\"\n-Updates all the copyright headers of \"The Bitcoin Core developers\" which were\n-changed in a year more recent than is listed. For example:\n-\n-// Copyright (c) <firstYear>-<lastYear> The Bitcoin Core developers\n-\n-will be updated to:\n-\n-// Copyright (c) <firstYear>-<lastModifiedYear> The Bitcoin Core developers\n-\n-where <lastModifiedYear> is obtained from the 'git log' history.\n-\n-This subcommand also handles copyright headers that have only a single year. In those cases:\n-\n-// Copyright (c) <year> The Bitcoin Core developers\n-\n-will be updated to:\n-\n-// Copyright (c) <year>-<lastModifiedYear> The Bitcoin Core developers\n-\n-where the update is appropriate.\n-\n-Usage:\n-    $ ./copyright_header.py update <base_directory>\n-\n-Arguments:\n-    <base_directory> - The base directory of a bitcoin source code repository.\n-\"\"\"\n-\n-def print_file_action_message(filename, action):\n-    print(\"%-52s %s\" % (filename, action))\n-\n-def update_cmd(argv):\n-    if len(argv) != 3:\n-        sys.exit(UPDATE_USAGE)\n-\n-    base_directory = argv[2]\n-    if not os.path.exists(base_directory):\n-        sys.exit(\"*** bad base_directory: %s\" % base_directory)\n-    exec_update_header_year(base_directory)\n-\n-################################################################################\n-# inserted copyright header format\n-################################################################################\n-\n-def get_header_lines(header, start_year, end_year):\n-    lines = header.split('\\n')[1:-1]\n-    lines[0] = lines[0] % year_range_to_str(start_year, end_year)\n-    return [line + '\\n' for line in lines]\n-\n-CPP_HEADER = '''\n-// Copyright (c) %s The Bitcoin Core developers\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-\n-def get_cpp_header_lines_to_insert(start_year, end_year):\n-    return reversed(get_header_lines(CPP_HEADER, start_year, end_year))\n-\n-SCRIPT_HEADER = '''\n-# Copyright (c) %s The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-\n-def get_script_header_lines_to_insert(start_year, end_year):\n-    return reversed(get_header_lines(SCRIPT_HEADER, start_year, end_year))\n-\n-################################################################################\n-# query git for year of last change\n-################################################################################\n-\n-def get_git_change_year_range(filename):\n-    years = get_git_change_years(filename)\n-    return min(years), max(years)\n-\n-################################################################################\n-# check for existing core copyright\n-################################################################################\n-\n-def file_already_has_core_copyright(file_lines):\n-    index, _ = get_updatable_copyright_line(file_lines)\n-    return index is not None\n-\n-################################################################################\n-# insert header execution\n-################################################################################\n-\n-def file_has_hashbang(file_lines):\n-    if len(file_lines) < 1:\n-        return False\n-    if len(file_lines[0]) <= 2:\n-        return False\n-    return file_lines[0][:2] == '#!'\n-\n-def insert_script_header(filename, file_lines, start_year, end_year):\n-    if file_has_hashbang(file_lines):\n-        insert_idx = 1\n-    else:\n-        insert_idx = 0\n-    header_lines = get_script_header_lines_to_insert(start_year, end_year)\n-    for line in header_lines:\n-        file_lines.insert(insert_idx, line)\n-    write_file_lines(filename, file_lines)\n-\n-def insert_cpp_header(filename, file_lines, start_year, end_year):\n-    file_lines.insert(0, '\\n')\n-    header_lines = get_cpp_header_lines_to_insert(start_year, end_year)\n-    for line in header_lines:\n-        file_lines.insert(0, line)\n-    write_file_lines(filename, file_lines)\n-\n-def exec_insert_header(filename, style):\n-    file_lines = read_file_lines(filename)\n-    if file_already_has_core_copyright(file_lines):\n-        sys.exit('*** %s already has a copyright by The Bitcoin Core developers'\n-                 % (filename))\n-    start_year, end_year = get_git_change_year_range(filename)\n-    if style in ['python', 'shell']:\n-        insert_script_header(filename, file_lines, start_year, end_year)\n-    else:\n-        insert_cpp_header(filename, file_lines, start_year, end_year)\n-\n-################################################################################\n-# insert cmd\n-################################################################################\n-\n-INSERT_USAGE = \"\"\"\n-Inserts a copyright header for \"The Bitcoin Core developers\" at the top of the\n-file in either Python or C++ style as determined by the file extension. If the\n-file is a Python file and it has a '#!' starting the first line, the header is\n-inserted in the line below it.\n-\n-The copyright dates will be set to be:\n-\n-\"<year_introduced>-<current_year>\"\n-\n-where <year_introduced> is according to the 'git log' history. If\n-<year_introduced> is equal to <current_year>, the date will be set to be:\n-\n-\"<current_year>\"\n-\n-If the file already has a copyright for \"The Bitcoin Core developers\", the\n-script will exit.\n-\n-Usage:\n-    $ ./copyright_header.py insert <file>\n-\n-Arguments:\n-    <file> - A source file in the bitcoin repository.\n-\"\"\"\n-\n-def insert_cmd(argv):\n-    if len(argv) != 3:\n-        sys.exit(INSERT_USAGE)\n-\n-    filename = argv[2]\n-    if not os.path.isfile(filename):\n-        sys.exit(\"*** bad filename: %s\" % filename)\n-    _, extension = os.path.splitext(filename)\n-    if extension not in ['.h', '.cpp', '.cc', '.c', '.py', '.sh']:\n-        sys.exit(\"*** cannot insert for file extension %s\" % extension)\n-\n-    if extension == '.py':\n-        style = 'python'\n-    elif extension == '.sh':\n-        style = 'shell'\n-    else:\n-        style = 'cpp'\n-    exec_insert_header(filename, style)\n-\n-################################################################################\n-# UI\n-################################################################################\n-\n-USAGE = \"\"\"\n-copyright_header.py - utilities for managing copyright headers of 'The Bitcoin\n-Core developers' in repository source files.\n-\n-Usage:\n-    $ ./copyright_header <subcommand>\n-\n-Subcommands:\n-    report\n-    update\n-    insert\n-\n-To see subcommand usage, run them without arguments.\n-\"\"\"\n-\n-SUBCOMMANDS = ['report', 'update', 'insert']\n-\n-if __name__ == \"__main__\":\n-    if len(sys.argv) == 1:\n-        sys.exit(USAGE)\n-    subcommand = sys.argv[1]\n-    if subcommand not in SUBCOMMANDS:\n-        sys.exit(USAGE)\n-    if subcommand == 'report':\n-        report_cmd(sys.argv)\n-    elif subcommand == 'update':\n-        update_cmd(sys.argv)\n-    elif subcommand == 'insert':\n-        insert_cmd(sys.argv)"
      },
      {
        "sha": "aa65953d838585aff4f33081b30c1cdb984b2e15",
        "filename": "contrib/devtools/gen-manpages.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 36,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/gen-manpages.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/gen-manpages.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/gen-manpages.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,36 +0,0 @@\n-#!/usr/bin/env bash\n-# Copyright (c) 2016-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-TOPDIR=${TOPDIR:-$(git rev-parse --show-toplevel)}\n-BUILDDIR=${BUILDDIR:-$TOPDIR}\n-\n-BINDIR=${BINDIR:-$BUILDDIR/src}\n-MANDIR=${MANDIR:-$TOPDIR/doc/man}\n-\n-BITCOIND=${BITCOIND:-$BINDIR/bitcoind}\n-BITCOINCLI=${BITCOINCLI:-$BINDIR/bitcoin-cli}\n-BITCOINTX=${BITCOINTX:-$BINDIR/bitcoin-tx}\n-WALLET_TOOL=${WALLET_TOOL:-$BINDIR/bitcoin-wallet}\n-BITCOINQT=${BITCOINQT:-$BINDIR/qt/bitcoin-qt}\n-\n-[ ! -x $BITCOIND ] && echo \"$BITCOIND not found or not executable.\" && exit 1\n-\n-# The autodetected version git tag can screw up manpage output a little bit\n-read -r -a BTCVER <<< \"$($BITCOINCLI --version | head -n1 | awk -F'[ -]' '{ print $6, $7 }')\"\n-\n-# Create a footer file with copyright content.\n-# This gets autodetected fine for bitcoind if --version-string is not set,\n-# but has different outcomes for bitcoin-qt and bitcoin-cli.\n-echo \"[COPYRIGHT]\" > footer.h2m\n-$BITCOIND --version | sed -n '1!p' >> footer.h2m\n-\n-for cmd in $BITCOIND $BITCOINCLI $BITCOINTX $WALLET_TOOL $BITCOINQT; do\n-  cmdname=\"${cmd##*/}\"\n-  help2man -N --version-string=${BTCVER[0]} --include=footer.h2m -o ${MANDIR}/${cmdname}.1 ${cmd}\n-  sed -i \"s/\\\\\\-${BTCVER[1]}//g\" ${MANDIR}/${cmdname}.1\n-done\n-\n-rm -f footer.h2m"
      },
      {
        "sha": "dc74de91980a4cce82b01c915be9e9c8a7d3c62e",
        "filename": "contrib/devtools/security-check.py",
        "status": "removed",
        "additions": 0,
        "deletions": 357,
        "changes": 357,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,357 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Perform basic security checks on a series of executables.\n-Exit status will be 0 if successful, and the program will be silent.\n-Otherwise the exit status will be 1 and it will log which executables failed which checks.\n-Needs `readelf` (for ELF), `objdump` (for PE) and `otool` (for MACHO).\n-'''\n-import subprocess\n-import sys\n-import os\n-\n-from typing import List, Optional\n-\n-READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n-OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n-OTOOL_CMD = os.getenv('OTOOL', '/usr/bin/otool')\n-\n-def run_command(command) -> str:\n-    p = subprocess.run(command, stdout=subprocess.PIPE, check=True, universal_newlines=True)\n-    return p.stdout\n-\n-def check_ELF_PIE(executable) -> bool:\n-    '''\n-    Check for position independent executable (PIE), allowing for address space randomization.\n-    '''\n-    stdout = run_command([READELF_CMD, '-h', '-W', executable])\n-\n-    ok = False\n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        if len(line)>=2 and tokens[0] == 'Type:' and tokens[1] == 'DYN':\n-            ok = True\n-    return ok\n-\n-def get_ELF_program_headers(executable):\n-    '''Return type and flags for ELF program headers'''\n-    stdout = run_command([READELF_CMD, '-l', '-W', executable])\n-\n-    in_headers = False\n-    headers = []\n-    for line in stdout.splitlines():\n-        if line.startswith('Program Headers:'):\n-            in_headers = True\n-            count = 0\n-        if line == '':\n-            in_headers = False\n-        if in_headers:\n-            if count == 1: # header line\n-                header = [x.strip() for x in line.split()]\n-                ofs_typ = header.index('Type')\n-                ofs_flags = header.index('Flg')\n-                # assert readelf output is what we expect\n-                if ofs_typ == -1 or ofs_flags == -1:\n-                    raise ValueError('Cannot parse elfread -lW output')\n-            elif count > 1:\n-                splitline = [x.strip() for x in line.split()]\n-                typ = splitline[ofs_typ]\n-                if not typ.startswith('[R'): # skip [Requesting ...]\n-                    splitline = [x.strip() for x in line.split()]\n-                    flags = splitline[ofs_flags]\n-                    # check for 'R', ' E'\n-                    if splitline[ofs_flags + 1] is 'E':\n-                        flags += ' E'\n-                    headers.append((typ, flags, []))\n-            count += 1\n-\n-        if line.startswith(' Section to Segment mapping:'):\n-            in_mapping = True\n-            count = 0\n-        if line == '':\n-            in_mapping = False\n-        if in_mapping:\n-            if count == 1: # header line\n-                ofs_segment = line.find('Segment')\n-                ofs_sections = line.find('Sections...')\n-                if ofs_segment == -1 or ofs_sections == -1:\n-                    raise ValueError('Cannot parse elfread -lW output')\n-            elif count > 1:\n-                segment = int(line[ofs_segment:ofs_sections].strip())\n-                sections = line[ofs_sections:].strip().split()\n-                headers[segment][2].extend(sections)\n-            count += 1\n-    return headers\n-\n-def check_ELF_NX(executable) -> bool:\n-    '''\n-    Check that no sections are writable and executable (including the stack)\n-    '''\n-    have_wx = False\n-    have_gnu_stack = False\n-    for (typ, flags, _) in get_ELF_program_headers(executable):\n-        if typ == 'GNU_STACK':\n-            have_gnu_stack = True\n-        if 'W' in flags and 'E' in flags: # section is both writable and executable\n-            have_wx = True\n-    return have_gnu_stack and not have_wx\n-\n-def check_ELF_RELRO(executable) -> bool:\n-    '''\n-    Check for read-only relocations.\n-    GNU_RELRO program header must exist\n-    Dynamic section must have BIND_NOW flag\n-    '''\n-    have_gnu_relro = False\n-    for (typ, flags, _) in get_ELF_program_headers(executable):\n-        # Note: not checking flags == 'R': here as linkers set the permission differently\n-        # This does not affect security: the permission flags of the GNU_RELRO program\n-        # header are ignored, the PT_LOAD header determines the effective permissions.\n-        # However, the dynamic linker need to write to this area so these are RW.\n-        # Glibc itself takes care of mprotecting this area R after relocations are finished.\n-        # See also https://marc.info/?l=binutils&m=1498883354122353\n-        if typ == 'GNU_RELRO':\n-            have_gnu_relro = True\n-\n-    have_bindnow = False\n-    stdout = run_command([READELF_CMD, '-d', '-W', executable])\n-\n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        if len(tokens)>1 and tokens[1] == '(BIND_NOW)' or (len(tokens)>2 and tokens[1] == '(FLAGS)' and 'BIND_NOW' in tokens[2:]):\n-            have_bindnow = True\n-    return have_gnu_relro and have_bindnow\n-\n-def check_ELF_Canary(executable) -> bool:\n-    '''\n-    Check for use of stack canary\n-    '''\n-    stdout = run_command([READELF_CMD, '--dyn-syms', '-W', executable])\n-\n-    ok = False\n-    for line in stdout.splitlines():\n-        if '__stack_chk_fail' in line:\n-            ok = True\n-    return ok\n-\n-def check_ELF_separate_code(executable):\n-    '''\n-    Check that sections are appropriately separated in virtual memory,\n-    based on their permissions. This checks for missing -Wl,-z,separate-code\n-    and potentially other problems.\n-    '''\n-    EXPECTED_FLAGS = {\n-        # Read + execute\n-        '.init': 'R E',\n-        '.plt': 'R E',\n-        '.plt.got': 'R E',\n-        '.plt.sec': 'R E',\n-        '.text': 'R E',\n-        '.fini': 'R E',\n-        # Read-only data\n-        '.interp': 'R',\n-        '.note.gnu.property': 'R',\n-        '.note.gnu.build-id': 'R',\n-        '.note.ABI-tag': 'R',\n-        '.gnu.hash': 'R',\n-        '.dynsym': 'R',\n-        '.dynstr': 'R',\n-        '.gnu.version': 'R',\n-        '.gnu.version_r': 'R',\n-        '.rela.dyn': 'R',\n-        '.rela.plt': 'R',\n-        '.rodata': 'R',\n-        '.eh_frame_hdr': 'R',\n-        '.eh_frame': 'R',\n-        '.qtmetadata': 'R',\n-        '.gcc_except_table': 'R',\n-        '.stapsdt.base': 'R',\n-        # Writable data\n-        '.init_array': 'RW',\n-        '.fini_array': 'RW',\n-        '.dynamic': 'RW',\n-        '.got': 'RW',\n-        '.data': 'RW',\n-        '.bss': 'RW',\n-    }\n-    # For all LOAD program headers get mapping to the list of sections,\n-    # and for each section, remember the flags of the associated program header.\n-    flags_per_section = {}\n-    for (typ, flags, sections) in get_ELF_program_headers(executable):\n-        if typ == 'LOAD':\n-            for section in sections:\n-                assert(section not in flags_per_section)\n-                flags_per_section[section] = flags\n-    # Spot-check ELF LOAD program header flags per section\n-    # If these sections exist, check them against the expected R/W/E flags\n-    for (section, flags) in flags_per_section.items():\n-        if section in EXPECTED_FLAGS:\n-            if EXPECTED_FLAGS[section] != flags:\n-                return False\n-    return True\n-\n-def get_PE_dll_characteristics(executable) -> int:\n-    '''Get PE DllCharacteristics bits'''\n-    stdout = run_command([OBJDUMP_CMD, '-x',  executable])\n-\n-    bits = 0\n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        if len(tokens)>=2 and tokens[0] == 'DllCharacteristics':\n-            bits = int(tokens[1],16)\n-    return bits\n-\n-IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA = 0x0020\n-IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE    = 0x0040\n-IMAGE_DLL_CHARACTERISTICS_NX_COMPAT       = 0x0100\n-\n-def check_PE_DYNAMIC_BASE(executable) -> bool:\n-    '''PIE: DllCharacteristics bit 0x40 signifies dynamicbase (ASLR)'''\n-    bits = get_PE_dll_characteristics(executable)\n-    return (bits & IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE) == IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE\n-\n-# Must support high-entropy 64-bit address space layout randomization\n-# in addition to DYNAMIC_BASE to have secure ASLR.\n-def check_PE_HIGH_ENTROPY_VA(executable) -> bool:\n-    '''PIE: DllCharacteristics bit 0x20 signifies high-entropy ASLR'''\n-    bits = get_PE_dll_characteristics(executable)\n-    return (bits & IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA) == IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA\n-\n-def check_PE_RELOC_SECTION(executable) -> bool:\n-    '''Check for a reloc section. This is required for functional ASLR.'''\n-    stdout = run_command([OBJDUMP_CMD, '-h',  executable])\n-\n-    for line in stdout.splitlines():\n-        if '.reloc' in line:\n-            return True\n-    return False\n-\n-def check_PE_NX(executable) -> bool:\n-    '''NX: DllCharacteristics bit 0x100 signifies nxcompat (DEP)'''\n-    bits = get_PE_dll_characteristics(executable)\n-    return (bits & IMAGE_DLL_CHARACTERISTICS_NX_COMPAT) == IMAGE_DLL_CHARACTERISTICS_NX_COMPAT\n-\n-def get_MACHO_executable_flags(executable) -> List[str]:\n-    stdout = run_command([OTOOL_CMD, '-vh', executable])\n-\n-    flags = []\n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        # filter first two header lines\n-        if 'magic' in tokens or 'Mach' in tokens:\n-            continue\n-        # filter ncmds and sizeofcmds values\n-        flags += [t for t in tokens if not t.isdigit()]\n-    return flags\n-\n-def check_MACHO_PIE(executable) -> bool:\n-    '''\n-    Check for position independent executable (PIE), allowing for address space randomization.\n-    '''\n-    flags = get_MACHO_executable_flags(executable)\n-    if 'PIE' in flags:\n-        return True\n-    return False\n-\n-def check_MACHO_NOUNDEFS(executable) -> bool:\n-    '''\n-    Check for no undefined references.\n-    '''\n-    flags = get_MACHO_executable_flags(executable)\n-    if 'NOUNDEFS' in flags:\n-        return True\n-    return False\n-\n-def check_MACHO_NX(executable) -> bool:\n-    '''\n-    Check for no stack execution\n-    '''\n-    flags = get_MACHO_executable_flags(executable)\n-    if 'ALLOW_STACK_EXECUTION' in flags:\n-        return False\n-    return True\n-\n-def check_MACHO_LAZY_BINDINGS(executable) -> bool:\n-    '''\n-    Check for no lazy bindings.\n-    We don't use or check for MH_BINDATLOAD. See #18295.\n-    '''\n-    stdout = run_command([OTOOL_CMD, '-l', executable])\n-\n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        if 'lazy_bind_off' in tokens or 'lazy_bind_size' in tokens:\n-            if tokens[1] != '0':\n-                return False\n-    return True\n-\n-def check_MACHO_Canary(executable) -> bool:\n-    '''\n-    Check for use of stack canary\n-    '''\n-    stdout = run_command([OTOOL_CMD, '-Iv', executable])\n-\n-    ok = False\n-    for line in stdout.splitlines():\n-        if '___stack_chk_fail' in line:\n-            ok = True\n-    return ok\n-\n-CHECKS = {\n-'ELF': [\n-    ('PIE', check_ELF_PIE),\n-    ('NX', check_ELF_NX),\n-    ('RELRO', check_ELF_RELRO),\n-    ('Canary', check_ELF_Canary),\n-    ('separate_code', check_ELF_separate_code),\n-],\n-'PE': [\n-    ('DYNAMIC_BASE', check_PE_DYNAMIC_BASE),\n-    ('HIGH_ENTROPY_VA', check_PE_HIGH_ENTROPY_VA),\n-    ('NX', check_PE_NX),\n-    ('RELOC_SECTION', check_PE_RELOC_SECTION)\n-],\n-'MACHO': [\n-    ('PIE', check_MACHO_PIE),\n-    ('NOUNDEFS', check_MACHO_NOUNDEFS),\n-    ('NX', check_MACHO_NX),\n-    ('LAZY_BINDINGS', check_MACHO_LAZY_BINDINGS),\n-    ('Canary', check_MACHO_Canary)\n-]\n-}\n-\n-def identify_executable(executable) -> Optional[str]:\n-    with open(filename, 'rb') as f:\n-        magic = f.read(4)\n-    if magic.startswith(b'MZ'):\n-        return 'PE'\n-    elif magic.startswith(b'\\x7fELF'):\n-        return 'ELF'\n-    elif magic.startswith(b'\\xcf\\xfa'):\n-        return 'MACHO'\n-    return None\n-\n-if __name__ == '__main__':\n-    retval = 0\n-    for filename in sys.argv[1:]:\n-        try:\n-            etype = identify_executable(filename)\n-            if etype is None:\n-                print('%s: unknown format' % filename)\n-                retval = 1\n-                continue\n-\n-            failed = []\n-            for (name, func) in CHECKS[etype]:\n-                if not func(filename):\n-                    failed.append(name)\n-            if failed:\n-                print('%s: failed %s' % (filename, ' '.join(failed)))\n-                retval = 1\n-        except IOError:\n-            print('%s: cannot open' % filename)\n-            retval = 1\n-    sys.exit(retval)\n-"
      },
      {
        "sha": "92b72b1446cf6bacf92723b6a8da8786c0802557",
        "filename": "contrib/devtools/split-debug.sh.in",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/split-debug.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/split-debug.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/split-debug.sh.in?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,10 +0,0 @@\n-#!/bin/sh\n-set -e\n-if [ $# -ne 3 ];\n-    then echo \"usage: $0 <input> <stripped-binary> <debug-binary>\"\n-fi\n-\n-@OBJCOPY@ --enable-deterministic-archives -p --only-keep-debug $1 $3\n-@OBJCOPY@ --enable-deterministic-archives -p --strip-debug $1 $2\n-@STRIP@ --enable-deterministic-archives -p -s $2\n-@OBJCOPY@ --enable-deterministic-archives -p --add-gnu-debuglink=$3 $2"
      },
      {
        "sha": "6949cb7ced89eda0be2b24dc4de9123ae7403fb1",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "removed",
        "additions": 0,
        "deletions": 306,
        "changes": 306,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,306 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2014 Wladimir J. van der Laan\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-A script to check that the executables produced by gitian only contain\n-certain symbols and are only linked against allowed libraries.\n-\n-Example usage:\n-\n-    find ../gitian-builder/build -type f -executable | xargs python3 contrib/devtools/symbol-check.py\n-'''\n-import subprocess\n-import re\n-import sys\n-import os\n-from typing import List, Optional, Tuple\n-\n-# Debian 8 (Jessie) EOL: 2020. https://wiki.debian.org/DebianReleases#Production_Releases\n-#\n-# - g++ version 4.9.2 (https://packages.debian.org/search?suite=jessie&arch=any&searchon=names&keywords=g%2B%2B)\n-# - libc version 2.19 (https://packages.debian.org/search?suite=jessie&arch=any&searchon=names&keywords=libc6)\n-#\n-# Ubuntu 16.04 (Xenial) EOL: 2024. https://wiki.ubuntu.com/Releases\n-#\n-# - g++ version 5.3.1 (https://packages.ubuntu.com/search?keywords=g%2B%2B&searchon=names&suite=xenial&section=all)\n-# - libc version 2.23.0 (https://packages.ubuntu.com/search?keywords=libc6&searchon=names&suite=xenial&section=all)\n-#\n-# CentOS 7 EOL: 2024. https://wiki.centos.org/FAQ/General\n-#\n-# - g++ version 4.8.5 (http://mirror.centos.org/centos/7/os/x86_64/Packages/)\n-# - libc version 2.17 (http://mirror.centos.org/centos/7/os/x86_64/Packages/)\n-#\n-# Taking the minimum of these as our target.\n-#\n-# According to GNU ABI document (https://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n-#   GCC 4.8.5: GCC_4.8.0\n-#   (glibc)    GLIBC_2_17\n-#\n-MAX_VERSIONS = {\n-'GCC':       (4,8,0),\n-'GLIBC':     (2,17),\n-'LIBATOMIC': (1,0)\n-}\n-# See here for a description of _IO_stdin_used:\n-# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=634261#109\n-\n-# Ignore symbols that are exported as part of every executable\n-IGNORE_EXPORTS = {\n-'_edata', '_end', '__end__', '_init', '__bss_start', '__bss_start__', '_bss_end__', '__bss_end__', '_fini', '_IO_stdin_used', 'stdin', 'stdout', 'stderr',\n-'environ', '_environ', '__environ',\n-}\n-READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n-CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n-OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n-OTOOL_CMD = os.getenv('OTOOL', '/usr/bin/otool')\n-\n-# Allowed NEEDED libraries\n-ELF_ALLOWED_LIBRARIES = {\n-# bitcoind and bitcoin-qt\n-'libgcc_s.so.1', # GCC base support\n-'libc.so.6', # C library\n-'libpthread.so.0', # threading\n-'libm.so.6', # math library\n-'librt.so.1', # real-time (clock)\n-'libatomic.so.1',\n-'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n-'ld-linux.so.2', # 32-bit dynamic linker\n-'ld-linux-aarch64.so.1', # 64-bit ARM dynamic linker\n-'ld-linux-armhf.so.3', # 32-bit ARM dynamic linker\n-'ld-linux-riscv64-lp64d.so.1', # 64-bit RISC-V dynamic linker\n-# bitcoin-qt only\n-'libxcb.so.1', # part of X11\n-'libfontconfig.so.1', # font support\n-'libfreetype.so.6', # font parsing\n-'libdl.so.2' # programming interface to dynamic linker\n-}\n-ARCH_MIN_GLIBC_VER = {\n-'80386':  (2,1),\n-'X86-64': (2,2,5),\n-'ARM':    (2,4),\n-'AArch64':(2,17),\n-'RISC-V': (2,27)\n-}\n-\n-MACHO_ALLOWED_LIBRARIES = {\n-# bitcoind and bitcoin-qt\n-'libc++.1.dylib', # C++ Standard Library\n-'libSystem.B.dylib', # libc, libm, libpthread, libinfo\n-# bitcoin-qt only\n-'AppKit', # user interface\n-'ApplicationServices', # common application tasks.\n-'Carbon', # deprecated c back-compat API\n-'CoreFoundation', # low level func, data types\n-'CoreGraphics', # 2D rendering\n-'CoreServices', # operating system services\n-'CoreText', # interface for laying out text and handling fonts.\n-'Foundation', # base layer functionality for apps/frameworks\n-'ImageIO', # read and write image file formats.\n-'IOKit', # user-space access to hardware devices and drivers.\n-'libobjc.A.dylib', # Objective-C runtime library\n-}\n-\n-PE_ALLOWED_LIBRARIES = {\n-'ADVAPI32.dll', # security & registry\n-'IPHLPAPI.DLL', # IP helper API\n-'KERNEL32.dll', # win32 base APIs\n-'msvcrt.dll', # C standard library for MSVC\n-'SHELL32.dll', # shell API\n-'USER32.dll', # user interface\n-'WS2_32.dll', # sockets\n-# bitcoin-qt only\n-'dwmapi.dll', # desktop window manager\n-'GDI32.dll', # graphics device interface\n-'IMM32.dll', # input method editor\n-'ole32.dll', # component object model\n-'OLEAUT32.dll', # OLE Automation API\n-'SHLWAPI.dll', # light weight shell API\n-'UxTheme.dll',\n-'VERSION.dll', # version checking\n-'WINMM.dll', # WinMM audio API\n-}\n-\n-class CPPFilt(object):\n-    '''\n-    Demangle C++ symbol names.\n-\n-    Use a pipe to the 'c++filt' command.\n-    '''\n-    def __init__(self):\n-        self.proc = subprocess.Popen(CPPFILT_CMD, stdin=subprocess.PIPE, stdout=subprocess.PIPE, universal_newlines=True)\n-\n-    def __call__(self, mangled):\n-        self.proc.stdin.write(mangled + '\\n')\n-        self.proc.stdin.flush()\n-        return self.proc.stdout.readline().rstrip()\n-\n-    def close(self):\n-        self.proc.stdin.close()\n-        self.proc.stdout.close()\n-        self.proc.wait()\n-\n-def read_symbols(executable, imports=True) -> List[Tuple[str, str, str]]:\n-    '''\n-    Parse an ELF executable and return a list of (symbol,version, arch) tuples\n-    for dynamic, imported symbols.\n-    '''\n-    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', '-h', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Could not read symbols for {}: {}'.format(executable, stderr.strip()))\n-    syms = []\n-    for line in stdout.splitlines():\n-        line = line.split()\n-        if 'Machine:' in line:\n-            arch = line[-1]\n-        if len(line)>7 and re.match('[0-9]+:$', line[0]):\n-            (sym, _, version) = line[7].partition('@')\n-            is_import = line[6] == 'UND'\n-            if version.startswith('@'):\n-                version = version[1:]\n-            if is_import == imports:\n-                syms.append((sym, version, arch))\n-    return syms\n-\n-def check_version(max_versions, version, arch) -> bool:\n-    if '_' in version:\n-        (lib, _, ver) = version.rpartition('_')\n-    else:\n-        lib = version\n-        ver = '0'\n-    ver = tuple([int(x) for x in ver.split('.')])\n-    if not lib in max_versions:\n-        return False\n-    return ver <= max_versions[lib] or lib == 'GLIBC' and ver <= ARCH_MIN_GLIBC_VER[arch]\n-\n-def elf_read_libraries(filename) -> List[str]:\n-    p = subprocess.Popen([READELF_CMD, '-d', '-W', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    libraries = []\n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        if len(tokens)>2 and tokens[1] == '(NEEDED)':\n-            match = re.match(r'^Shared library: \\[(.*)\\]$', ' '.join(tokens[2:]))\n-            if match:\n-                libraries.append(match.group(1))\n-            else:\n-                raise ValueError('Unparseable (NEEDED) specification')\n-    return libraries\n-\n-def check_imported_symbols(filename) -> bool:\n-    cppfilt = CPPFilt()\n-    ok = True\n-    for sym, version, arch in read_symbols(filename, True):\n-        if version and not check_version(MAX_VERSIONS, version, arch):\n-            print('{}: symbol {} from unsupported version {}'.format(filename, cppfilt(sym), version))\n-            ok = False\n-    return ok\n-\n-def check_exported_symbols(filename) -> bool:\n-    cppfilt = CPPFilt()\n-    ok = True\n-    for sym,version,arch in read_symbols(filename, False):\n-        if arch == 'RISC-V' or sym in IGNORE_EXPORTS:\n-            continue\n-        print('{}: export of symbol {} not allowed'.format(filename, cppfilt(sym)))\n-        ok = False\n-    return ok\n-\n-def check_ELF_libraries(filename) -> bool:\n-    ok = True\n-    for library_name in elf_read_libraries(filename):\n-        if library_name not in ELF_ALLOWED_LIBRARIES:\n-            print('{}: NEEDED library {} is not allowed'.format(filename, library_name))\n-            ok = False\n-    return ok\n-\n-def macho_read_libraries(filename) -> List[str]:\n-    p = subprocess.Popen([OTOOL_CMD, '-L', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    libraries = []\n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        if len(tokens) == 1: # skip executable name\n-            continue\n-        libraries.append(tokens[0].split('/')[-1])\n-    return libraries\n-\n-def check_MACHO_libraries(filename) -> bool:\n-    ok = True\n-    for dylib in macho_read_libraries(filename):\n-        if dylib not in MACHO_ALLOWED_LIBRARIES:\n-            print('{} is not in ALLOWED_LIBRARIES!'.format(dylib))\n-            ok = False\n-    return ok\n-\n-def pe_read_libraries(filename) -> List[str]:\n-    p = subprocess.Popen([OBJDUMP_CMD, '-x', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    libraries = []\n-    for line in stdout.splitlines():\n-        if 'DLL Name:' in line:\n-            tokens = line.split(': ')\n-            libraries.append(tokens[1])\n-    return libraries\n-\n-def check_PE_libraries(filename) -> bool:\n-    ok = True\n-    for dylib in pe_read_libraries(filename):\n-        if dylib not in PE_ALLOWED_LIBRARIES:\n-            print('{} is not in ALLOWED_LIBRARIES!'.format(dylib))\n-            ok = False\n-    return ok\n-\n-CHECKS = {\n-'ELF': [\n-    ('IMPORTED_SYMBOLS', check_imported_symbols),\n-    ('EXPORTED_SYMBOLS', check_exported_symbols),\n-    ('LIBRARY_DEPENDENCIES', check_ELF_libraries)\n-],\n-'MACHO': [\n-    ('DYNAMIC_LIBRARIES', check_MACHO_libraries)\n-],\n-'PE' : [\n-    ('DYNAMIC_LIBRARIES', check_PE_libraries)\n-]\n-}\n-\n-def identify_executable(executable) -> Optional[str]:\n-    with open(filename, 'rb') as f:\n-        magic = f.read(4)\n-    if magic.startswith(b'MZ'):\n-        return 'PE'\n-    elif magic.startswith(b'\\x7fELF'):\n-        return 'ELF'\n-    elif magic.startswith(b'\\xcf\\xfa'):\n-        return 'MACHO'\n-    return None\n-\n-if __name__ == '__main__':\n-    retval = 0\n-    for filename in sys.argv[1:]:\n-        try:\n-            etype = identify_executable(filename)\n-            if etype is None:\n-                print('{}: unknown format'.format(filename))\n-                retval = 1\n-                continue\n-\n-            failed = []\n-            for (name, func) in CHECKS[etype]:\n-                if not func(filename):\n-                    failed.append(name)\n-            if failed:\n-                print('{}: failed {}'.format(filename, ' '.join(failed)))\n-                retval = 1\n-        except IOError:\n-            print('{}: cannot open'.format(filename))\n-            retval = 1\n-    sys.exit(retval)"
      },
      {
        "sha": "ec2d8866534214c86ebbf112232984ea55e85b0b",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "removed",
        "additions": 0,
        "deletions": 85,
        "changes": 85,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,85 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Test script for security-check.py\n-'''\n-import subprocess\n-import unittest\n-\n-def write_testcode(filename):\n-    with open(filename, 'w', encoding=\"utf8\") as f:\n-        f.write('''\n-    #include <stdio.h>\n-    int main()\n-    {\n-        printf(\"the quick brown fox jumps over the lazy god\\\\n\");\n-        return 0;\n-    }\n-    ''')\n-\n-def call_security_check(cc, source, executable, options):\n-    subprocess.run([cc,source,'-o',executable] + options, check=True)\n-    p = subprocess.run(['./contrib/devtools/security-check.py',executable], stdout=subprocess.PIPE, universal_newlines=True)\n-    return (p.returncode, p.stdout.rstrip())\n-\n-class TestSecurityChecks(unittest.TestCase):\n-    def test_ELF(self):\n-        source = 'test1.c'\n-        executable = 'test1'\n-        cc = 'gcc'\n-        write_testcode(source)\n-\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-zexecstack','-fno-stack-protector','-Wl,-znorelro','-no-pie','-fno-PIE', '-Wl,-z,separate-code']),\n-                (1, executable+': failed PIE NX RELRO Canary'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fno-stack-protector','-Wl,-znorelro','-no-pie','-fno-PIE', '-Wl,-z,separate-code']),\n-                (1, executable+': failed PIE RELRO Canary'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-no-pie','-fno-PIE', '-Wl,-z,separate-code']),\n-                (1, executable+': failed PIE RELRO'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-pie','-fPIE', '-Wl,-z,separate-code']),\n-                (1, executable+': failed RELRO'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE', '-Wl,-z,noseparate-code']),\n-                (1, executable+': failed separate_code'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE', '-Wl,-z,separate-code']),\n-                (0, ''))\n-\n-    def test_PE(self):\n-        source = 'test1.c'\n-        executable = 'test1.exe'\n-        cc = 'x86_64-w64-mingw32-gcc'\n-        write_testcode(source)\n-\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--no-nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n-            (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA NX RELOC_SECTION'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n-            (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA RELOC_SECTION'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n-            (1, executable+': failed HIGH_ENTROPY_VA RELOC_SECTION'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--high-entropy-va','-no-pie','-fno-PIE']),\n-            (1, executable+': failed RELOC_SECTION'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--high-entropy-va','-pie','-fPIE']),\n-            (0, ''))\n-\n-    def test_MACHO(self):\n-        source = 'test1.c'\n-        executable = 'test1'\n-        cc = 'clang'\n-        write_testcode(source)\n-\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-flat_namespace','-Wl,-allow_stack_execute','-fno-stack-protector']),\n-            (1, executable+': failed PIE NOUNDEFS NX LAZY_BINDINGS Canary'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-flat_namespace','-Wl,-allow_stack_execute','-fstack-protector-all']),\n-            (1, executable+': failed PIE NOUNDEFS NX LAZY_BINDINGS'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-flat_namespace','-fstack-protector-all']),\n-            (1, executable+': failed PIE NOUNDEFS LAZY_BINDINGS'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-fstack-protector-all']),\n-            (1, executable+': failed PIE LAZY_BINDINGS'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-bind_at_load','-fstack-protector-all']),\n-            (1, executable+': failed PIE'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-pie','-Wl,-bind_at_load','-fstack-protector-all']),\n-            (0, ''))\n-\n-if __name__ == '__main__':\n-    unittest.main()\n-"
      },
      {
        "sha": "8501c72f04a552bf7cb699890e92c874be43de05",
        "filename": "contrib/devtools/test_deterministic_coverage.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 151,
        "changes": 151,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/test_deterministic_coverage.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/test_deterministic_coverage.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test_deterministic_coverage.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,151 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# Test for deterministic coverage across unit test runs.\n-\n-export LC_ALL=C\n-\n-# Use GCOV_EXECUTABLE=\"gcov\" if compiling with gcc.\n-# Use GCOV_EXECUTABLE=\"llvm-cov gcov\" if compiling with clang.\n-GCOV_EXECUTABLE=\"gcov\"\n-\n-# Disable tests known to cause non-deterministic behaviour and document the source or point of non-determinism.\n-NON_DETERMINISTIC_TESTS=(\n-    \"blockfilter_index_tests/blockfilter_index_initial_sync\"  # src/checkqueue.h: In CCheckQueue::Loop(): while (queue.empty()) { ... }\n-    \"coinselector_tests/knapsack_solver_test\"                 # coinselector_tests.cpp: if (equal_sets(setCoinsRet, setCoinsRet2))\n-    \"fs_tests/fsbridge_fstream\"                               # deterministic test failure?\n-    \"miner_tests/CreateNewBlock_validity\"                     # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"scheduler_tests/manythreads\"                             # scheduler.cpp: CScheduler::serviceQueue()\n-    \"scheduler_tests/singlethreadedscheduler_ordered\"         # scheduler.cpp: CScheduler::serviceQueue()\n-    \"txvalidationcache_tests/checkinputs_test\"                # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"txvalidationcache_tests/tx_mempool_block_doublespend\"    # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"txindex_tests/txindex_initial_sync\"                      # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"txvalidation_tests/tx_mempool_reject_coinbase\"           # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"validation_block_tests/processnewblock_signals_ordering\" # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"wallet_tests/coin_mark_dirty_immature_credit\"            # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"wallet_tests/dummy_input_size_test\"                      # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"wallet_tests/importmulti_rescan\"                         # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"wallet_tests/importwallet_rescan\"                        # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"wallet_tests/ListCoins\"                                  # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"wallet_tests/scan_for_wallet_transactions\"               # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"wallet_tests/wallet_disableprivkeys\"                     # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-)\n-\n-TEST_BITCOIN_BINARY=\"src/test/test_bitcoin\"\n-\n-print_usage() {\n-    echo \"Usage: $0 [custom test filter (default: all but known non-deterministic tests)] [number of test runs (default: 2)]\"\n-}\n-\n-N_TEST_RUNS=2\n-BOOST_TEST_RUN_FILTERS=\"\"\n-if [[ $# != 0 ]]; then\n-    if [[ $1 == \"--help\" ]]; then\n-        print_usage\n-        exit\n-    fi\n-    PARSED_ARGUMENTS=0\n-    if [[ $1 =~ [a-z] ]]; then\n-        BOOST_TEST_RUN_FILTERS=$1\n-        PARSED_ARGUMENTS=$((PARSED_ARGUMENTS + 1))\n-        shift\n-    fi\n-    if [[ $1 =~ ^[0-9]+$ ]]; then\n-        N_TEST_RUNS=$1\n-        PARSED_ARGUMENTS=$((PARSED_ARGUMENTS + 1))\n-        shift\n-    fi\n-    if [[ ${PARSED_ARGUMENTS} == 0 || $# -gt 2 || ${N_TEST_RUNS} -lt 2 ]]; then\n-        print_usage\n-        exit\n-    fi\n-fi\n-if [[ ${BOOST_TEST_RUN_FILTERS} == \"\" ]]; then\n-    BOOST_TEST_RUN_FILTERS=\"$(IFS=\":\"; echo \"!${NON_DETERMINISTIC_TESTS[*]}\" | sed 's/:/:!/g')\"\n-else\n-    echo \"Using Boost test filter: ${BOOST_TEST_RUN_FILTERS}\"\n-    echo\n-fi\n-\n-if ! command -v gcov > /dev/null; then\n-    echo \"Error: gcov not installed. Exiting.\"\n-    exit 1\n-fi\n-\n-if ! command -v gcovr > /dev/null; then\n-    echo \"Error: gcovr not installed. Exiting.\"\n-    exit 1\n-fi\n-\n-if [[ ! -e ${TEST_BITCOIN_BINARY} ]]; then\n-    echo \"Error: Executable ${TEST_BITCOIN_BINARY} not found. Run \\\"./configure --enable-lcov\\\" and compile.\"\n-    exit 1\n-fi\n-\n-get_file_suffix_count() {\n-    find src/ -type f -name \"*.$1\" | wc -l\n-}\n-\n-if [[ $(get_file_suffix_count gcno) == 0 ]]; then\n-    echo \"Error: Could not find any *.gcno files. The *.gcno files are generated by the compiler. Run \\\"./configure --enable-lcov\\\" and re-compile.\"\n-    exit 1\n-fi\n-\n-get_covr_filename() {\n-    echo \"gcovr.run-$1.txt\"\n-}\n-\n-TEST_RUN_ID=0\n-while [[ ${TEST_RUN_ID} -lt ${N_TEST_RUNS} ]]; do\n-    TEST_RUN_ID=$((TEST_RUN_ID + 1))\n-    echo \"[$(date +\"%Y-%m-%d %H:%M:%S\")] Measuring coverage, run #${TEST_RUN_ID} of ${N_TEST_RUNS}\"\n-    find src/ -type f -name \"*.gcda\" -exec rm {} \\;\n-    if [[ $(get_file_suffix_count gcda) != 0 ]]; then\n-        echo \"Error: Stale *.gcda files found. Exiting.\"\n-        exit 1\n-    fi\n-    TEST_OUTPUT_TEMPFILE=$(mktemp)\n-    if ! BOOST_TEST_RUN_FILTERS=\"${BOOST_TEST_RUN_FILTERS}\" ${TEST_BITCOIN_BINARY} > \"${TEST_OUTPUT_TEMPFILE}\" 2>&1; then\n-        cat \"${TEST_OUTPUT_TEMPFILE}\"\n-        rm \"${TEST_OUTPUT_TEMPFILE}\"\n-        exit 1\n-    fi\n-    rm \"${TEST_OUTPUT_TEMPFILE}\"\n-    if [[ $(get_file_suffix_count gcda) == 0 ]]; then\n-        echo \"Error: Running the test suite did not create any *.gcda files. The gcda files are generated when the instrumented test programs are executed. Run \\\"./configure --enable-lcov\\\" and re-compile.\"\n-        exit 1\n-    fi\n-    GCOVR_TEMPFILE=$(mktemp)\n-    if ! gcovr --gcov-executable \"${GCOV_EXECUTABLE}\" -r src/ > \"${GCOVR_TEMPFILE}\"; then\n-        echo \"Error: gcovr failed. Output written to ${GCOVR_TEMPFILE}. Exiting.\"\n-        exit 1\n-    fi\n-    GCOVR_FILENAME=$(get_covr_filename ${TEST_RUN_ID})\n-    mv \"${GCOVR_TEMPFILE}\" \"${GCOVR_FILENAME}\"\n-    if grep -E \"^TOTAL *0 *0 \" \"${GCOVR_FILENAME}\"; then\n-        echo \"Error: Spurious gcovr output. Make sure the correct GCOV_EXECUTABLE variable is set in $0 (\\\"gcov\\\" for gcc, \\\"llvm-cov gcov\\\" for clang).\"\n-        exit 1\n-    fi\n-    if [[ ${TEST_RUN_ID} != 1 ]]; then\n-        COVERAGE_DIFF=$(diff -u \"$(get_covr_filename 1)\" \"${GCOVR_FILENAME}\")\n-        if [[ ${COVERAGE_DIFF} != \"\" ]]; then\n-            echo\n-            echo \"The line coverage is non-deterministic between runs. Exiting.\"\n-            echo\n-            echo \"The test suite must be deterministic in the sense that the set of lines executed at least\"\n-            echo \"once must be identical between runs. This is a necessary condition for meaningful\"\n-            echo \"coverage measuring.\"\n-            echo\n-            echo \"${COVERAGE_DIFF}\"\n-            exit 1\n-        fi\n-        rm \"${GCOVR_FILENAME}\"\n-    fi\n-done\n-\n-echo\n-echo \"Coverage test passed: Deterministic coverage across ${N_TEST_RUNS} runs.\"\n-exit"
      },
      {
        "sha": "dee25ff67b61e3b798cf56f53657536e496cfef8",
        "filename": "contrib/devtools/utxo_snapshot.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 44,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/utxo_snapshot.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/devtools/utxo_snapshot.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/utxo_snapshot.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,44 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-export LC_ALL=C\n-\n-set -ueo pipefail\n-\n-if (( $# < 3 )); then\n-  echo 'Usage: utxo_snapshot.sh <generate-at-height> <snapshot-out-path> <bitcoin-cli-call ...>'\n-  echo\n-  echo \"  if <snapshot-out-path> is '-', don't produce a snapshot file but instead print the \"\n-  echo \"  expected assumeutxo hash\"\n-  echo\n-  echo 'Examples:'\n-  echo\n-  echo \"  ./contrib/devtools/utxo_snapshot.sh 570000 utxo.dat ./src/bitcoin-cli -datadir=\\$(pwd)/testdata\"\n-  echo '  ./contrib/devtools/utxo_snapshot.sh 570000 - ./src/bitcoin-cli'\n-  exit 1\n-fi\n-\n-GENERATE_AT_HEIGHT=\"${1}\"; shift;\n-OUTPUT_PATH=\"${1}\"; shift;\n-# Most of the calls we make take a while to run, so pad with a lengthy timeout.\n-BITCOIN_CLI_CALL=\"${*} -rpcclienttimeout=9999999\"\n-\n-# Block we'll invalidate/reconsider to rewind/fast-forward the chain.\n-PIVOT_BLOCKHASH=$($BITCOIN_CLI_CALL getblockhash $(( GENERATE_AT_HEIGHT + 1 )) )\n-\n-(>&2 echo \"Rewinding chain back to height ${GENERATE_AT_HEIGHT} (by invalidating ${PIVOT_BLOCKHASH}); this may take a while\")\n-${BITCOIN_CLI_CALL} invalidateblock \"${PIVOT_BLOCKHASH}\"\n-\n-if [[ \"${OUTPUT_PATH}\" = \"-\" ]]; then\n-  (>&2 echo \"Generating txoutset info...\")\n-  ${BITCOIN_CLI_CALL} gettxoutsetinfo | grep hash_serialized_2 | sed 's/^.*: \"\\(.\\+\\)\\+\",/\\1/g'\n-else\n-  (>&2 echo \"Generating UTXO snapshot...\")\n-  ${BITCOIN_CLI_CALL} dumptxoutset \"${OUTPUT_PATH}\"\n-fi\n-\n-(>&2 echo \"Restoring chain to original height; this may take a while\")\n-${BITCOIN_CLI_CALL} reconsiderblock \"${PIVOT_BLOCKHASH}\""
      },
      {
        "sha": "e005cb96da62302ba6f099dcad1bcd13ee19e814",
        "filename": "contrib/filter-lcov.py",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/filter-lcov.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/filter-lcov.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/filter-lcov.py?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,28 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2017-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-import argparse\n-\n-parser = argparse.ArgumentParser(description='Remove the coverage data from a tracefile for all files matching the pattern.')\n-parser.add_argument('--pattern', '-p', action='append', help='the pattern of files to remove', required=True)\n-parser.add_argument('tracefile', help='the tracefile to remove the coverage data from')\n-parser.add_argument('outfile', help='filename for the output to be written to')\n-\n-args = parser.parse_args()\n-tracefile = args.tracefile\n-pattern = args.pattern\n-outfile = args.outfile\n-\n-in_remove = False\n-with open(tracefile, 'r', encoding=\"utf8\") as f:\n-    with open(outfile, 'w', encoding=\"utf8\") as wf:\n-        for line in f:\n-            for p in pattern:\n-                if line.startswith(\"SF:\") and p in line:\n-                    in_remove = True\n-            if not in_remove:\n-                wf.write(line)\n-            if line == 'end_of_record\\n':\n-                in_remove = False"
      },
      {
        "sha": "d498c9e2c821ededa6eff14b9b8b78df07f270e5",
        "filename": "contrib/gitian-build.py",
        "status": "removed",
        "additions": 0,
        "deletions": 262,
        "changes": 262,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/gitian-build.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/gitian-build.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.py?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,262 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-import argparse\n-import os\n-import subprocess\n-import sys\n-\n-def setup():\n-    global args, workdir\n-    programs = ['ruby', 'git', 'make', 'wget', 'curl']\n-    if args.kvm:\n-        programs += ['apt-cacher-ng', 'python-vm-builder', 'qemu-kvm', 'qemu-utils']\n-    elif args.docker and not os.path.isfile('/lib/systemd/system/docker.service'):\n-        dockers = ['docker.io', 'docker-ce']\n-        for i in dockers:\n-            return_code = subprocess.call(['sudo', 'apt-get', 'install', '-qq', i])\n-            if return_code == 0:\n-                break\n-        if return_code != 0:\n-            print('Cannot find any way to install Docker.', file=sys.stderr)\n-            sys.exit(1)\n-    else:\n-        programs += ['apt-cacher-ng', 'lxc', 'debootstrap']\n-    subprocess.check_call(['sudo', 'apt-get', 'install', '-qq'] + programs)\n-    if not os.path.isdir('gitian.sigs'):\n-        subprocess.check_call(['git', 'clone', 'https://github.com/bitcoin-core/gitian.sigs.git'])\n-    if not os.path.isdir('bitcoin-detached-sigs'):\n-        subprocess.check_call(['git', 'clone', 'https://github.com/bitcoin-core/bitcoin-detached-sigs.git'])\n-    if not os.path.isdir('gitian-builder'):\n-        subprocess.check_call(['git', 'clone', 'https://github.com/devrandom/gitian-builder.git'])\n-    if not os.path.isdir('bitcoin'):\n-        subprocess.check_call(['git', 'clone', 'https://github.com/bitcoin/bitcoin.git'])\n-    os.chdir('gitian-builder')\n-    make_image_prog = ['bin/make-base-vm', '--suite', 'bionic', '--arch', 'amd64']\n-    if args.docker:\n-        make_image_prog += ['--docker']\n-    elif not args.kvm:\n-        make_image_prog += ['--lxc']\n-    subprocess.check_call(make_image_prog)\n-    os.chdir(workdir)\n-    if args.is_bionic and not args.kvm and not args.docker:\n-        subprocess.check_call(['sudo', 'sed', '-i', 's/lxcbr0/br0/', '/etc/default/lxc-net'])\n-        print('Reboot is required')\n-        sys.exit(0)\n-\n-def build():\n-    global args, workdir\n-\n-    os.makedirs('bitcoin-binaries/' + args.version, exist_ok=True)\n-    print('\\nBuilding Dependencies\\n')\n-    os.chdir('gitian-builder')\n-    os.makedirs('inputs', exist_ok=True)\n-\n-    subprocess.check_call(['wget', '-O', 'inputs/osslsigncode-2.0.tar.gz', 'https://github.com/mtrojnar/osslsigncode/archive/2.0.tar.gz'])\n-    subprocess.check_call([\"echo '5a60e0a4b3e0b4d655317b2f12a810211c50242138322b16e7e01c6fbb89d92f inputs/osslsigncode-2.0.tar.gz' | sha256sum -c\"], shell=True)\n-    subprocess.check_call(['make', '-C', '../bitcoin/depends', 'download', 'SOURCES_PATH=' + os.getcwd() + '/cache/common'])\n-\n-    if args.linux:\n-        print('\\nCompiling ' + args.version + ' Linux')\n-        subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'bitcoin='+args.commit, '--url', 'bitcoin='+args.url, '../bitcoin/contrib/gitian-descriptors/gitian-linux.yml'])\n-        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-linux', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-linux.yml'])\n-        subprocess.check_call('mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/'+args.version, shell=True)\n-\n-    if args.windows:\n-        print('\\nCompiling ' + args.version + ' Windows')\n-        subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'bitcoin='+args.commit, '--url', 'bitcoin='+args.url, '../bitcoin/contrib/gitian-descriptors/gitian-win.yml'])\n-        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-win-unsigned', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-win.yml'])\n-        subprocess.check_call('mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/', shell=True)\n-        subprocess.check_call('mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/'+args.version, shell=True)\n-\n-    if args.macos:\n-        print('\\nCompiling ' + args.version + ' MacOS')\n-        subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'bitcoin='+args.commit, '--url', 'bitcoin='+args.url, '../bitcoin/contrib/gitian-descriptors/gitian-osx.yml'])\n-        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-osx-unsigned', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-osx.yml'])\n-        subprocess.check_call('mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/', shell=True)\n-        subprocess.check_call('mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/'+args.version, shell=True)\n-\n-    os.chdir(workdir)\n-\n-    if args.commit_files:\n-        print('\\nCommitting '+args.version+' Unsigned Sigs\\n')\n-        os.chdir('gitian.sigs')\n-        subprocess.check_call(['git', 'add', args.version+'-linux/'+args.signer])\n-        subprocess.check_call(['git', 'add', args.version+'-win-unsigned/'+args.signer])\n-        subprocess.check_call(['git', 'add', args.version+'-osx-unsigned/'+args.signer])\n-        subprocess.check_call(['git', 'commit', '-m', 'Add '+args.version+' unsigned sigs for '+args.signer])\n-        os.chdir(workdir)\n-\n-def sign():\n-    global args, workdir\n-    os.chdir('gitian-builder')\n-\n-    if args.windows:\n-        print('\\nSigning ' + args.version + ' Windows')\n-        subprocess.check_call('cp inputs/bitcoin-' + args.version + '-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz', shell=True)\n-        subprocess.check_call(['bin/gbuild', '--skip-image', '--upgrade', '--commit', 'signature='+args.commit, '../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml'])\n-        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-win-signed', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml'])\n-        subprocess.check_call('mv build/out/bitcoin-*win64-setup.exe ../bitcoin-binaries/'+args.version, shell=True)\n-\n-    if args.macos:\n-        print('\\nSigning ' + args.version + ' MacOS')\n-        subprocess.check_call('cp inputs/bitcoin-' + args.version + '-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz', shell=True)\n-        subprocess.check_call(['bin/gbuild', '--skip-image', '--upgrade', '--commit', 'signature='+args.commit, '../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml'])\n-        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-osx-signed', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml'])\n-        subprocess.check_call('mv build/out/bitcoin-osx-signed.dmg ../bitcoin-binaries/'+args.version+'/bitcoin-'+args.version+'-osx.dmg', shell=True)\n-\n-    os.chdir(workdir)\n-\n-    if args.commit_files:\n-        print('\\nCommitting '+args.version+' Signed Sigs\\n')\n-        os.chdir('gitian.sigs')\n-        subprocess.check_call(['git', 'add', args.version+'-win-signed/'+args.signer])\n-        subprocess.check_call(['git', 'add', args.version+'-osx-signed/'+args.signer])\n-        subprocess.check_call(['git', 'commit', '-a', '-m', 'Add '+args.version+' signed binary sigs for '+args.signer])\n-        os.chdir(workdir)\n-\n-def verify():\n-    global args, workdir\n-    rc = 0\n-    os.chdir('gitian-builder')\n-\n-    print('\\nVerifying v'+args.version+' Linux\\n')\n-    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-linux', '../bitcoin/contrib/gitian-descriptors/gitian-linux.yml']):\n-        print('Verifying v'+args.version+' Linux FAILED\\n')\n-        rc = 1\n-\n-    print('\\nVerifying v'+args.version+' Windows\\n')\n-    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-win-unsigned', '../bitcoin/contrib/gitian-descriptors/gitian-win.yml']):\n-        print('Verifying v'+args.version+' Windows FAILED\\n')\n-        rc = 1\n-\n-    print('\\nVerifying v'+args.version+' MacOS\\n')\n-    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-osx-unsigned', '../bitcoin/contrib/gitian-descriptors/gitian-osx.yml']):\n-        print('Verifying v'+args.version+' MacOS FAILED\\n')\n-        rc = 1\n-\n-    print('\\nVerifying v'+args.version+' Signed Windows\\n')\n-    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-win-signed', '../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml']):\n-        print('Verifying v'+args.version+' Signed Windows FAILED\\n')\n-        rc = 1\n-\n-    print('\\nVerifying v'+args.version+' Signed MacOS\\n')\n-    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-osx-signed', '../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml']):\n-        print('Verifying v'+args.version+' Signed MacOS FAILED\\n')\n-        rc = 1\n-\n-    os.chdir(workdir)\n-    return rc\n-\n-def main():\n-    global args, workdir\n-\n-    parser = argparse.ArgumentParser(description='Script for running full Gitian builds.')\n-    parser.add_argument('-c', '--commit', action='store_true', dest='commit', help='Indicate that the version argument is for a commit or branch')\n-    parser.add_argument('-p', '--pull', action='store_true', dest='pull', help='Indicate that the version argument is the number of a github repository pull request')\n-    parser.add_argument('-u', '--url', dest='url', default='https://github.com/bitcoin/bitcoin', help='Specify the URL of the repository. Default is %(default)s')\n-    parser.add_argument('-v', '--verify', action='store_true', dest='verify', help='Verify the Gitian build')\n-    parser.add_argument('-b', '--build', action='store_true', dest='build', help='Do a Gitian build')\n-    parser.add_argument('-s', '--sign', action='store_true', dest='sign', help='Make signed binaries for Windows and MacOS')\n-    parser.add_argument('-B', '--buildsign', action='store_true', dest='buildsign', help='Build both signed and unsigned binaries')\n-    parser.add_argument('-o', '--os', dest='os', default='lwm', help='Specify which Operating Systems the build is for. Default is %(default)s. l for Linux, w for Windows, m for MacOS')\n-    parser.add_argument('-j', '--jobs', dest='jobs', default='2', help='Number of processes to use. Default %(default)s')\n-    parser.add_argument('-m', '--memory', dest='memory', default='2000', help='Memory to allocate in MiB. Default %(default)s')\n-    parser.add_argument('-k', '--kvm', action='store_true', dest='kvm', help='Use KVM instead of LXC')\n-    parser.add_argument('-d', '--docker', action='store_true', dest='docker', help='Use Docker instead of LXC')\n-    parser.add_argument('-S', '--setup', action='store_true', dest='setup', help='Set up the Gitian building environment. Only works on Debian-based systems (Ubuntu, Debian)')\n-    parser.add_argument('-D', '--detach-sign', action='store_true', dest='detach_sign', help='Create the assert file for detached signing. Will not commit anything.')\n-    parser.add_argument('-n', '--no-commit', action='store_false', dest='commit_files', help='Do not commit anything to git')\n-    parser.add_argument('signer', nargs='?', help='GPG signer to sign each build assert file')\n-    parser.add_argument('version', nargs='?', help='Version number, commit, or branch to build. If building a commit or branch, the -c option must be specified')\n-\n-    args = parser.parse_args()\n-    workdir = os.getcwd()\n-\n-    args.is_bionic = b'bionic' in subprocess.check_output(['lsb_release', '-cs'])\n-\n-    if args.kvm and args.docker:\n-        raise Exception('Error: cannot have both kvm and docker')\n-\n-    # Ensure no more than one environment variable for gitian-builder (USE_LXC, USE_VBOX, USE_DOCKER) is set as they\n-    # can interfere (e.g., USE_LXC being set shadows USE_DOCKER; for details see gitian-builder/libexec/make-clean-vm).\n-    os.environ['USE_LXC'] = ''\n-    os.environ['USE_VBOX'] = ''\n-    os.environ['USE_DOCKER'] = ''\n-    if args.docker:\n-        os.environ['USE_DOCKER'] = '1'\n-    elif not args.kvm:\n-        os.environ['USE_LXC'] = '1'\n-        if 'GITIAN_HOST_IP' not in os.environ.keys():\n-            os.environ['GITIAN_HOST_IP'] = '10.0.3.1'\n-        if 'LXC_GUEST_IP' not in os.environ.keys():\n-            os.environ['LXC_GUEST_IP'] = '10.0.3.5'\n-\n-    if args.setup:\n-        setup()\n-\n-    if args.buildsign:\n-        args.build = True\n-        args.sign = True\n-\n-    if not args.build and not args.sign and not args.verify:\n-        sys.exit(0)\n-\n-    args.linux = 'l' in args.os\n-    args.windows = 'w' in args.os\n-    args.macos = 'm' in args.os\n-\n-    # Disable for MacOS if no SDK found\n-    if args.macos and not os.path.isfile('gitian-builder/inputs/Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz'):\n-        print('Cannot build for MacOS, SDK does not exist. Will build for other OSes')\n-        args.macos = False\n-\n-    args.sign_prog = 'true' if args.detach_sign else 'gpg --detach-sign'\n-\n-    script_name = os.path.basename(sys.argv[0])\n-    if not args.signer:\n-        print(script_name+': Missing signer')\n-        print('Try '+script_name+' --help for more information')\n-        sys.exit(1)\n-    if not args.version:\n-        print(script_name+': Missing version')\n-        print('Try '+script_name+' --help for more information')\n-        sys.exit(1)\n-\n-    # Add leading 'v' for tags\n-    if args.commit and args.pull:\n-        raise Exception('Cannot have both commit and pull')\n-    args.commit = ('' if args.commit else 'v') + args.version\n-\n-    os.chdir('bitcoin')\n-    if args.pull:\n-        subprocess.check_call(['git', 'fetch', args.url, 'refs/pull/'+args.version+'/merge'])\n-        os.chdir('../gitian-builder/inputs/bitcoin')\n-        subprocess.check_call(['git', 'fetch', args.url, 'refs/pull/'+args.version+'/merge'])\n-        args.commit = subprocess.check_output(['git', 'show', '-s', '--format=%H', 'FETCH_HEAD'], universal_newlines=True, encoding='utf8').strip()\n-        args.version = 'pull-' + args.version\n-    print(args.commit)\n-    subprocess.check_call(['git', 'fetch'])\n-    subprocess.check_call(['git', 'checkout', args.commit])\n-    os.chdir(workdir)\n-\n-    os.chdir('gitian-builder')\n-    subprocess.check_call(['git', 'pull'])\n-    os.chdir(workdir)\n-\n-    if args.build:\n-        build()\n-\n-    if args.sign:\n-        sign()\n-\n-    if args.verify:\n-        os.chdir('gitian.sigs')\n-        subprocess.check_call(['git', 'pull'])\n-        os.chdir(workdir)\n-        sys.exit(verify())\n-\n-if __name__ == '__main__':\n-    main()"
      },
      {
        "sha": "a2ca768aaa70b285d1e7b8654c1094533e6c1190",
        "filename": "contrib/gitian-descriptors/assign_DISTNAME",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/gitian-descriptors/assign_DISTNAME",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/gitian-descriptors/assign_DISTNAME",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/assign_DISTNAME?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,12 +0,0 @@\n-# Copyright (c) 2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# A helper script to be sourced into the gitian descriptors\n-\n-if RECENT_TAG=\"$(git describe --exact-match HEAD)\"; then\n-    VERSION=\"${RECENT_TAG#v}\"\n-else\n-    VERSION=\"$(git rev-parse --short=12 HEAD)\"\n-fi\n-DISTNAME=\"bitcoin-${VERSION}\""
      },
      {
        "sha": "65f9a2e5c91d3b61599e3d6fb492389cd672da3d",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 151,
        "changes": 151,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,151 +0,0 @@\n----\n-name: \"bitcoin-core-linux-0.21\"\n-enable_cache: true\n-distro: \"ubuntu\"\n-suites:\n-- \"bionic\"\n-architectures:\n-- \"amd64\"\n-packages:\n-# Common dependencies.\n-- \"autoconf\"\n-- \"automake\"\n-- \"binutils\"\n-- \"bsdmainutils\"\n-- \"ca-certificates\"\n-- \"curl\"\n-- \"faketime\"\n-- \"git\"\n-- \"libtool\"\n-- \"patch\"\n-- \"pkg-config\"\n-- \"python3\"\n-# Cross compilation HOSTS:\n-#  - arm-linux-gnueabihf\n-- \"binutils-arm-linux-gnueabihf\"\n-- \"g++-8-arm-linux-gnueabihf\"\n-#  - aarch64-linux-gnu\n-- \"binutils-aarch64-linux-gnu\"\n-- \"g++-8-aarch64-linux-gnu\"\n-#  - riscv64-linux-gnu\n-- \"binutils-riscv64-linux-gnu\"\n-- \"g++-8-riscv64-linux-gnu\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n-files: []\n-script: |\n-  set -e -o pipefail\n-\n-  WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu\"\n-  CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests\"\n-  FAKETIME_HOST_PROGS=\"gcc g++\"\n-  FAKETIME_PROGS=\"date ar ranlib nm\"\n-  HOST_CFLAGS=\"-O2 -g\"\n-  HOST_CXXFLAGS=\"-O2 -g\"\n-  HOST_LDFLAGS_BASE=\"-static-libstdc++ -Wl,-O2\"\n-\n-  export QT_RCC_TEST=1\n-  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n-  export TZ=\"UTC\"\n-  export BUILD_DIR=\"$PWD\"\n-  mkdir -p ${WRAP_DIR}\n-  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n-    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n-    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n-    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n-  fi\n-\n-  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n-  function create_global_faketime_wrappers {\n-  for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n-    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n-    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n-    chmod +x ${WRAP_DIR}/${prog}\n-  done\n-  }\n-\n-  function create_per-host_faketime_wrappers {\n-  for i in $HOSTS; do\n-    for prog in ${FAKETIME_HOST_PROGS}; do\n-        if which ${i}-${prog}-8\n-        then\n-            echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n-            echo \"REAL=\\`which -a ${i}-${prog}-8 | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-            echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n-            echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-            echo \"\\$REAL \\\"\\$@\\\"\" >> $WRAP_DIR/${i}-${prog}\n-            chmod +x ${WRAP_DIR}/${i}-${prog}\n-        fi\n-    done\n-  done\n-  }\n-\n-  # Faketime for depends so intermediate results are comparable\n-  export PATH_orig=${PATH}\n-  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n-  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  cd bitcoin\n-  BASEPREFIX=\"${PWD}/depends\"\n-  # Build dependencies for each host\n-  for i in $HOSTS; do\n-    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n-  done\n-\n-  # Faketime for binaries\n-  export PATH=${PATH_orig}\n-  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  # Define DISTNAME variable.\n-  # shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n-  source contrib/gitian-descriptors/assign_DISTNAME\n-\n-  GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n-\n-  # Create the source tarball\n-  mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n-  git archive --output=\"$GIT_ARCHIVE\" HEAD\n-\n-  ORIGPATH=\"$PATH\"\n-  # Extract the git archive into a dir for each host and build\n-  for i in ${HOSTS}; do\n-    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n-    if [ \"${i}\" = \"riscv64-linux-gnu\" ]; then\n-      # Workaround for https://bugs.launchpad.net/ubuntu/+source/gcc-8-cross-ports/+bug/1853740\n-      # TODO: remove this when no longer needed\n-      HOST_LDFLAGS=\"${HOST_LDFLAGS_BASE} -Wl,-z,noexecstack\"\n-    else\n-      HOST_LDFLAGS=\"${HOST_LDFLAGS_BASE}\"\n-    fi\n-    mkdir -p distsrc-${i}\n-    cd distsrc-${i}\n-    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n-    mkdir -p ${INSTALLPATH}\n-    tar -xf $GIT_ARCHIVE\n-\n-    ./autogen.sh\n-    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\" LDFLAGS=\"${HOST_LDFLAGS}\"\n-    make ${MAKEOPTS}\n-    make ${MAKEOPTS} -C src check-security\n-    make ${MAKEOPTS} -C src check-symbols\n-    make install DESTDIR=${INSTALLPATH}\n-    cd installed\n-    find . -name \"lib*.la\" -delete\n-    find . -name \"lib*.a\" -delete\n-    rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME}/bin -type f -executable -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n-    find ${DISTNAME}/lib -type f -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n-    cp ../README.md ${DISTNAME}/\n-    find ${DISTNAME} -not -name \"*.dbg\" | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n-    find ${DISTNAME} -name \"*.dbg\" | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}-debug.tar.gz\n-    cd ../../\n-    rm -rf distsrc-${i}\n-  done"
      },
      {
        "sha": "a4f3219c2291e8164c92d5ba1eedb7a346b1bdb4",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 40,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,40 +0,0 @@\n----\n-name: \"bitcoin-dmg-signer\"\n-distro: \"ubuntu\"\n-suites:\n-- \"bionic\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"faketime\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n-  \"dir\": \"signature\"\n-files:\n-- \"bitcoin-osx-unsigned.tar.gz\"\n-script: |\n-  set -e -o pipefail\n-\n-  WRAP_DIR=$HOME/wrapped\n-  mkdir -p ${WRAP_DIR}\n-  export PATH=\"$PWD\":$PATH\n-  FAKETIME_PROGS=\"dmg genisoimage\"\n-\n-  # Create global faketime wrappers\n-  for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n-    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n-    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n-    chmod +x ${WRAP_DIR}/${prog}\n-  done\n-\n-  UNSIGNED=bitcoin-osx-unsigned.tar.gz\n-  SIGNED=bitcoin-osx-signed.dmg\n-\n-  tar -xf ${UNSIGNED}\n-  OSX_VOLNAME=\"$(cat osx_volname)\"\n-  ./detached-sig-apply.sh ${UNSIGNED} signature/osx\n-  ${WRAP_DIR}/genisoimage -no-cache-inodes -D -l -probe -V \"${OSX_VOLNAME}\" -no-pad -r -dir-mode 0755 -apple -o uncompressed.dmg signed-app\n-  ${WRAP_DIR}/dmg dmg uncompressed.dmg ${OUTDIR}/${SIGNED}"
      },
      {
        "sha": "e0aaafc15ad4005d47becfe03a506ed436867b95",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 159,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,159 +0,0 @@\n----\n-name: \"bitcoin-core-osx-0.21\"\n-enable_cache: true\n-distro: \"ubuntu\"\n-suites:\n-- \"bionic\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"ca-certificates\"\n-- \"curl\"\n-- \"g++\"\n-- \"git\"\n-- \"pkg-config\"\n-- \"autoconf\"\n-- \"librsvg2-bin\"\n-- \"libtiff-tools\"\n-- \"libtool\"\n-- \"automake\"\n-- \"faketime\"\n-- \"bsdmainutils\"\n-- \"cmake\"\n-- \"imagemagick\"\n-- \"libcap-dev\"\n-- \"libz-dev\"\n-- \"libbz2-dev\"\n-- \"python3\"\n-- \"python3-dev\"\n-- \"python3-setuptools\"\n-- \"fonts-tuffy\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n-files:\n-- \"Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz\"\n-script: |\n-  set -e -o pipefail\n-\n-  WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"x86_64-apple-darwin16\"\n-  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests GENISOIMAGE=$WRAP_DIR/genisoimage\"\n-  FAKETIME_HOST_PROGS=\"\"\n-  FAKETIME_PROGS=\"ar ranlib date dmg genisoimage\"\n-\n-  export QT_RCC_TEST=1\n-  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n-  export TZ=\"UTC\"\n-  export BUILD_DIR=\"$PWD\"\n-  mkdir -p ${WRAP_DIR}\n-  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n-    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n-    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n-    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n-  fi\n-\n-  export ZERO_AR_DATE=1\n-\n-  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n-  function create_global_faketime_wrappers {\n-  for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n-    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n-    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n-    chmod +x ${WRAP_DIR}/${prog}\n-  done\n-  }\n-\n-  function create_per-host_faketime_wrappers {\n-  for i in $HOSTS; do\n-    for prog in ${FAKETIME_HOST_PROGS}; do\n-        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n-        chmod +x ${WRAP_DIR}/${i}-${prog}\n-    done\n-  done\n-  }\n-\n-  # Faketime for depends so intermediate results are comparable\n-  export PATH_orig=${PATH}\n-  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n-  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  cd bitcoin\n-  BASEPREFIX=\"${PWD}/depends\"\n-\n-  mkdir -p ${BASEPREFIX}/SDKs\n-  tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz\n-\n-  # Build dependencies for each host\n-  for i in $HOSTS; do\n-    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n-  done\n-\n-  # Faketime for binaries\n-  export PATH=${PATH_orig}\n-  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  # Define DISTNAME variable.\n-  # shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n-  source contrib/gitian-descriptors/assign_DISTNAME\n-\n-  GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n-\n-  # Create the source tarball\n-  mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n-  git archive --output=\"$GIT_ARCHIVE\" HEAD\n-\n-  ORIGPATH=\"$PATH\"\n-  # Extract the git archive into a dir for each host and build\n-  for i in ${HOSTS}; do\n-    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n-    mkdir -p distsrc-${i}\n-    cd distsrc-${i}\n-    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n-    mkdir -p ${INSTALLPATH}\n-    tar -xf $GIT_ARCHIVE\n-\n-    ./autogen.sh\n-    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n-    make ${MAKEOPTS}\n-    make ${MAKEOPTS} -C src check-security\n-    make ${MAKEOPTS} -C src check-symbols\n-    make install-strip DESTDIR=${INSTALLPATH}\n-\n-    make osx_volname\n-    make deploydir\n-    OSX_VOLNAME=\"$(cat osx_volname)\"\n-    mkdir -p unsigned-app-${i}\n-    cp osx_volname unsigned-app-${i}/\n-    cp contrib/macdeploy/detached-sig-apply.sh unsigned-app-${i}\n-    cp contrib/macdeploy/detached-sig-create.sh unsigned-app-${i}\n-    cp ${BASEPREFIX}/${i}/native/bin/dmg ${BASEPREFIX}/${i}/native/bin/genisoimage unsigned-app-${i}\n-    cp ${BASEPREFIX}/${i}/native/bin/${i}-codesign_allocate unsigned-app-${i}/codesign_allocate\n-    cp ${BASEPREFIX}/${i}/native/bin/${i}-pagestuff unsigned-app-${i}/pagestuff\n-    mv dist unsigned-app-${i}\n-    pushd unsigned-app-${i}\n-    find . | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-osx-unsigned.tar.gz\n-    popd\n-\n-    make deploy\n-    ${WRAP_DIR}/dmg dmg \"${OSX_VOLNAME}.dmg\" ${OUTDIR}/${DISTNAME}-osx-unsigned.dmg\n-\n-    cd installed\n-    find . -name \"lib*.la\" -delete\n-    find . -name \"lib*.a\" -delete\n-    rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME} | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n-    cd ../../\n-  done\n-\n-  mv ${OUTDIR}/${DISTNAME}-x86_64-*.tar.gz ${OUTDIR}/${DISTNAME}-osx64.tar.gz"
      },
      {
        "sha": "6bcd126662f3a1e04aa38735f1bcd758d7001fbb",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 42,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,42 +0,0 @@\n----\n-name: \"bitcoin-win-signer\"\n-distro: \"ubuntu\"\n-suites:\n-- \"bionic\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"libssl-dev\"\n-- \"autoconf\"\n-- \"automake\"\n-- \"libtool\"\n-- \"pkg-config\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n-  \"dir\": \"signature\"\n-files:\n-- \"osslsigncode-2.0.tar.gz\"\n-- \"bitcoin-win-unsigned.tar.gz\"\n-script: |\n-  set -e -o pipefail\n-\n-  BUILD_DIR=\"$PWD\"\n-  SIGDIR=${BUILD_DIR}/signature/win\n-  UNSIGNED_DIR=${BUILD_DIR}/unsigned\n-\n-  echo \"5a60e0a4b3e0b4d655317b2f12a810211c50242138322b16e7e01c6fbb89d92f  osslsigncode-2.0.tar.gz\" | sha256sum -c\n-\n-  mkdir -p ${UNSIGNED_DIR}\n-  tar -C ${UNSIGNED_DIR} -xf bitcoin-win-unsigned.tar.gz\n-\n-  tar xf osslsigncode-2.0.tar.gz\n-  cd osslsigncode-2.0\n-\n-  ./autogen.sh\n-  ./configure --without-gsf --without-curl --disable-dependency-tracking\n-  make\n-  find ${UNSIGNED_DIR} -name \"*-unsigned.exe\" | while read i; do\n-    INFILE=\"$(basename \"${i}\")\"\n-    OUTFILE=\"${INFILE/-unsigned}\"\n-    ./osslsigncode attach-signature -in \"${i}\" -out \"${OUTDIR}/${OUTFILE}\" -sigin \"${SIGDIR}/${INFILE}.pem\"\n-  done"
      },
      {
        "sha": "5f671b95ce3df0f77418dba9c556dbd897333025",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 156,
        "changes": 156,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,156 +0,0 @@\n----\n-name: \"bitcoin-core-win-0.21\"\n-enable_cache: true\n-distro: \"ubuntu\"\n-suites:\n-- \"bionic\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"curl\"\n-- \"g++\"\n-- \"git\"\n-- \"pkg-config\"\n-- \"autoconf\"\n-- \"libtool\"\n-- \"automake\"\n-- \"faketime\"\n-- \"bsdmainutils\"\n-- \"mingw-w64\"\n-- \"g++-mingw-w64\"\n-- \"nsis\"\n-- \"zip\"\n-- \"ca-certificates\"\n-- \"python3\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n-files: []\n-script: |\n-  set -e -o pipefail\n-\n-  WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"x86_64-w64-mingw32\"\n-  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n-  FAKETIME_HOST_PROGS=\"ar ranlib nm windres strip objcopy\"\n-  FAKETIME_PROGS=\"date makensis zip\"\n-  HOST_CFLAGS=\"-O2 -g -fno-ident\"\n-  HOST_CXXFLAGS=\"-O2 -g -fno-ident\"\n-\n-  export QT_RCC_TEST=1\n-  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n-  export TZ=\"UTC\"\n-  export BUILD_DIR=\"$PWD\"\n-  mkdir -p ${WRAP_DIR}\n-  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n-    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n-    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n-    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n-  fi\n-\n-  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n-  function create_global_faketime_wrappers {\n-  for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n-    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n-    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n-    chmod +x ${WRAP_DIR}/${prog}\n-  done\n-  }\n-\n-  function create_per-host_faketime_wrappers {\n-  for i in $HOSTS; do\n-    for prog in ${FAKETIME_HOST_PROGS}; do\n-        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n-        chmod +x ${WRAP_DIR}/${i}-${prog}\n-    done\n-  done\n-  }\n-\n-  function create_per-host_compiler_wrapper {\n-  # -posix variant is required for c++11 threading.\n-  for i in $HOSTS; do\n-    for prog in gcc g++; do\n-        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog}-posix | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\\"\\$@\\\"\" >> $WRAP_DIR/${i}-${prog}\n-        chmod +x ${WRAP_DIR}/${i}-${prog}\n-    done\n-  done\n-  }\n-\n-  # Faketime for depends so intermediate results are comparable\n-  export PATH_orig=${PATH}\n-  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n-  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n-  create_per-host_compiler_wrapper \"2000-01-01 12:00:00\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  cd bitcoin\n-  BASEPREFIX=\"${PWD}/depends\"\n-  # Build dependencies for each host\n-  for i in $HOSTS; do\n-    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n-  done\n-\n-  # Faketime for binaries\n-  export PATH=${PATH_orig}\n-  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  create_per-host_compiler_wrapper \"${REFERENCE_DATETIME}\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  # Define DISTNAME variable.\n-  # shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n-  source contrib/gitian-descriptors/assign_DISTNAME\n-\n-  GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n-\n-  # Create the source tarball\n-  mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n-  git archive --output=\"$GIT_ARCHIVE\" HEAD\n-\n-  ORIGPATH=\"$PATH\"\n-  # Extract the git archive into a dir for each host and build\n-  for i in ${HOSTS}; do\n-    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n-    mkdir -p distsrc-${i}\n-    cd distsrc-${i}\n-    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n-    mkdir -p ${INSTALLPATH}\n-    tar -xf $GIT_ARCHIVE\n-\n-    ./autogen.sh\n-    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\"\n-    make ${MAKEOPTS}\n-    make ${MAKEOPTS} -C src check-security\n-    make ${MAKEOPTS} -C src check-symbols\n-    make deploy BITCOIN_WIN_INSTALLER=\"${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe\"\n-    make install DESTDIR=${INSTALLPATH}\n-    cd installed\n-    mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/\n-    find . -name \"lib*.la\" -delete\n-    find . -name \"lib*.a\" -delete\n-    rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME}/bin -type f -executable -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n-    find ${DISTNAME}/lib -type f -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n-    cp ../doc/README_windows.txt ${DISTNAME}/readme.txt\n-    find ${DISTNAME} -not -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i//x86_64-w64-mingw32/win64}.zip\n-    find ${DISTNAME} -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i//x86_64-w64-mingw32/win64}-debug.zip\n-    cd ../../\n-    rm -rf distsrc-${i}\n-  done\n-\n-  cp -rf contrib/windeploy $BUILD_DIR\n-  cd $BUILD_DIR/windeploy\n-  mkdir unsigned\n-  cp ${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe unsigned/\n-  find . | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz"
      },
      {
        "sha": "ffe4fb144b1ae07c7c9bbdcdaea2694978eb18b2",
        "filename": "contrib/gitian-keys/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/gitian-keys/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/gitian-keys/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/README.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,27 +0,0 @@\n-## PGP keys of Gitian builders and Developers\n-\n-The file `keys.txt` contains fingerprints of the public keys of Gitian builders\n-and active developers.\n-\n-The associated keys are mainly used to sign git commits or the build results\n-of Gitian builds.\n-\n-The most recent version of each pgp key can be found on most pgp key servers.\n-\n-Fetch the latest version from the key server to see if any key was revoked in\n-the meantime.\n-To fetch the latest version of all pgp keys in your gpg homedir,\n-\n-```sh\n-gpg --refresh-keys\n-```\n-\n-To fetch keys of Gitian builders and active developers, feed the list of\n-fingerprints of the primary keys into gpg:\n-\n-```sh\n-while read fingerprint keyholder_name; do gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys ${fingerprint}; done < ./keys.txt\n-```\n-\n-Add your key to the list if you provided Gitian signatures for two major or\n-minor releases of Bitcoin Core."
      },
      {
        "sha": "0a2c1302c82f8e13cfe48ec36ff5bd0c9e07f3e6",
        "filename": "contrib/gitian-keys/keys.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 36,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/gitian-keys/keys.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/gitian-keys/keys.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/keys.txt?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,36 +0,0 @@\n-9D3CC86A72F8494342EA5FD10A41BDC3F4FAFF1C Aaron Clauson (sipsorcery)\n-617C90010B3BD370B0AC7D424BB42E31C79111B8 Akira Takizawa\n-E944AE667CF960B1004BC32FCA662BE18B877A60 Andreas Schildbach\n-152812300785C96444D3334D17565732E08E5E41 Andrew Chow\n-912FD3228387123DC97E0E57D5566241A0295FA9 BtcDrak\n-C519EBCF3B926298946783EFF6430754120EC2F4 Christian Decker (cdecker)\n-F20F56EF6A067F70E8A5C99FFF95FAA971697405 centaur\n-C060A6635913D98A3587D7DB1C2491FFEB0EF770 Cory Fields\n-BF6273FAEF7CC0BA1F562E50989F6B3048A116B5 Dev Random\n-6D3170C1DC2C6FD0AEEBCA6743811D1A26623924 Douglas Roark\n-9A1689B60D1B3CCE9262307A2F40A9BF167FBA47 Erik Mossberg (erkmos)\n-D35176BE9264832E4ACA8986BF0792FBE95DC863 fivepiece\n-01CDF4627A3B88AAE4A571C87588242FBE38D3A8 Gavin Andresen\n-D1DBF2C4B96F2DEBF4C16654410108112E7EA81F Hennadii Stepanov (hebasto)\n-D3CC177286005BB8FF673294C5242A1AB3936517 jl2012\n-82921A4B88FD454B7EB8CE3C796C4109063D4EAF Jon Atack\n-32EE5C4C3FA15CCADB46ABE529D4BCB6416F53EC Jonas Schnelli\n-4B4E840451149DD7FB0D633477DFAB5C3108B9A8 Jorge Timon\n-C42AFF7C61B3E44A1454CD3557AF762DB3353322 Karl-Johan Alm (kallewoof)\n-E463A93F5F3117EEDE6C7316BD02942421F4889F Luke Dashjr\n-B8B3F1C0E58C15DB6A81D30C3648A882F4316B9B Marco Falke\n-07DF3E57A548CCFB7530709189BBB8663E2E65CE Matt Corallo (BlueMatt)\n-CA03882CB1FC067B5D3ACFE4D300116E1C875A3D MeshCollider\n-E777299FC265DD04793070EB944D35F9AC3DB76A Michael Ford\n-9692B91BBF0E8D34DFD33B1882C5C009628ECF0C Michagogo\n-77E72E69DA7EE0A148C06B21B34821D4944DE5F7 Nils Schneider\n-D62A803E27E7F43486035ADBBCD04D8E9CCCAC2A Paul Rabahy\n-37EC7D7B0A217CDB4B4E007E7FAB114267E4FA04 Peter Todd\n-D762373D24904A3E42F33B08B9A408E71DAAC974 Pieter Wuille (Location: Leuven, Belgium)\n-133EAC179436F14A5CF1B794860FEB804E669320 Pieter Wuille\n-A8FC55F3B04BA3146F3492E79303B33A305224CB Sebastian Kung (TheCharlatan)\n-ED9BDF7AD6A55E232E84524257FF9BDBCC301009 Sjors Provoost\n-9EDAFF80E080659604F4A76B2EBB056FD847F8A7 Stephan Oeste (Emzy)\n-AEC1884398647C47413C1C3FB1179EB7347DC10D Warren Togami\n-79D00BAC68B56D422F945A8F8E3A8F3247DBCBBF Willy Ko\n-71A3B16735405025D447E8F274810B012346C9A6 Wladimir J. van der Laan"
      },
      {
        "sha": "dffcf99607ae2bb997296ad1e16e124d5da70f4b",
        "filename": "contrib/guix/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 230,
        "changes": 230,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/guix/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/guix/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/README.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,230 +0,0 @@\n-# Bootstrappable Bitcoin Core Builds\n-\n-This directory contains the files necessary to perform bootstrappable Bitcoin\n-Core builds.\n-\n-[Bootstrappability][b17e] furthers our binary security guarantees by allowing us\n-to _audit and reproduce_ our toolchain instead of blindly _trusting_ binary\n-downloads.\n-\n-We achieve bootstrappability by using Guix as a functional package manager.\n-\n-## Requirements\n-\n-Conservatively, a x86_64 machine with:\n-\n-- 4GB of free disk space on the partition that /gnu/store will reside in\n-- 24GB of free disk space on the partition that the Bitcoin Core git repository\n-  resides in\n-\n-> Note: these requirements are slightly less onerous than those of Gitian builds\n-\n-## Setup\n-\n-### Installing Guix\n-\n-If you're just testing this out, you can use the\n-[Dockerfile][fanquake/guix-docker] for convenience. It automatically speeds up\n-your builds by [using substitutes](#speeding-up-builds-with-substitute-servers).\n-If you don't want this behaviour, refer to the [next\n-section](#choosing-your-security-model).\n-\n-Otherwise, follow the [Guix installation guide][guix/bin-install].\n-\n-> Note: For those who like to keep their filesystems clean, Guix is designed to\n-> be very standalone and _will not_ conflict with your system's package\n-> manager/existing setup. It _only_ touches `/var/guix`, `/gnu`, and\n-> `~/.config/guix`.\n-\n-### Choosing your security model\n-\n-Guix allows us to achieve better binary security by using our CPU time to build\n-everything from scratch. However, it doesn't sacrifice user choice in pursuit of\n-this: users can decide whether or not to bootstrap and to use substitutes.\n-\n-After installation, you may want to consider [adding substitute\n-servers](#speeding-up-builds-with-substitute-servers) to speed up your build if\n-that fits your security model (say, if you're just testing that this works).\n-This is skippable if you're using the [Dockerfile][fanquake/guix-docker].\n-\n-If you prefer not to use any substitutes, make sure to set\n-`ADDITIONAL_GUIX_ENVIRONMENT_FLAGS` like the following snippet. The first build\n-will take a while, but the resulting packages will be cached for future builds.\n-\n-```sh\n-export ADDITIONAL_GUIX_ENVIRONMENT_FLAGS='--no-substitutes'\n-```\n-\n-Likewise, to perform a bootstrapped build (takes even longer):\n-\n-```sh\n-export ADDITIONAL_GUIX_ENVIRONMENT_FLAGS='--bootstrap --no-substitutes'\n-```\n-\n-### Using a version of Guix with `guix time-machine` capabilities\n-\n-> Note: This entire section can be skipped if you are already using a version of\n-> Guix that has [the `guix time-machine` command][guix/time-machine].\n-\n-Once Guix is installed, if it doesn't have the `guix time-machine` command, pull\n-the latest `guix`.\n-\n-```sh\n-guix pull --max-jobs=4 # change number of jobs accordingly\n-```\n-\n-Make sure that you are using your current profile. (You are prompted to do this\n-at the end of the `guix pull`)\n-\n-```bash\n-export PATH=\"${HOME}/.config/guix/current/bin${PATH:+:}$PATH\"\n-```\n-\n-## Usage\n-\n-### As a Development Environment\n-\n-For a Bitcoin Core depends development environment, simply invoke\n-\n-```sh\n-guix environment --manifest=contrib/guix/manifest.scm\n-```\n-\n-And you'll land back in your shell with all the build dependencies required for\n-a `depends` build injected into your environment.\n-\n-### As a Tool for Deterministic Builds\n-\n-From the top of a clean Bitcoin Core repository:\n-\n-```sh\n-./contrib/guix/guix-build.sh\n-```\n-\n-After the build finishes successfully (check the status code please), compare\n-hashes:\n-\n-```sh\n-find output/ -type f -print0 | sort -z | xargs -r0 sha256sum\n-```\n-\n-#### Recognized environment variables\n-\n-* _**HOSTS**_\n-\n-  Override the space-separated list of platform triples for which to perform a\n-  bootstrappable build. _(defaults to \"x86\\_64-linux-gnu\n-  arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu\")_\n-\n-  > Windows and OS X platform triplet support are WIP.\n-\n-* _**SOURCES_PATH**_\n-\n-  Set the depends tree download cache for sources. This is passed through to the\n-  depends tree. Setting this to the same directory across multiple builds of the\n-  depends tree can eliminate unnecessary redownloading of package sources.\n-\n-* _**MAX_JOBS**_\n-\n-  Override the maximum number of jobs to run simultaneously, you might want to\n-  do so on a memory-limited machine. This may be passed to `make` as in `make\n-  --jobs=\"$MAX_JOBS\"` or `xargs` as in `xargs -P\"$MAX_JOBS\"`. _(defaults to the\n-  value of `nproc` outside the container)_\n-\n-* _**SOURCE_DATE_EPOCH**_\n-\n-  Override the reference UNIX timestamp used for bit-for-bit reproducibility,\n-  the variable name conforms to [standard][r12e/source-date-epoch]. _(defaults\n-  to the output of `$(git log --format=%at -1)`)_\n-\n-* _**V**_\n-\n-  If non-empty, will pass `V=1` to all `make` invocations, making `make` output\n-  verbose.\n-\n-  Note that any given value is ignored. The variable is only checked for\n-  emptiness. More concretely, this means that `V=` (setting `V` to the empty\n-  string) is interpreted the same way as not setting `V` at all, and that `V=0`\n-  has the same effect as `V=1`.\n-\n-* _**ADDITIONAL_GUIX_ENVIRONMENT_FLAGS**_\n-\n-  Additional flags to be passed to `guix environment`. For a fully-bootstrapped\n-  build, set this to `--bootstrap --no-substitutes` (refer to the [security\n-  model section](#choosing-your-security-model) for more details). Note that a\n-  fully-bootstrapped build will take quite a long time on the first run.\n-\n-## Tips and Tricks\n-\n-### Speeding up builds with substitute servers\n-\n-_This whole section is automatically done in the convenience\n-[Dockerfiles][fanquake/guix-docker]_\n-\n-For those who are used to life in the fast _(and trustful)_ lane, you can use\n-[substitute servers][guix/substitutes] to enable binary downloads of packages.\n-\n-> For those who only want to use substitutes from the official Guix build farm\n-> and have authorized the build farm's signing key during Guix's installation,\n-> you don't need to do anything.\n-\n-#### Authorize the signing keys\n-\n-For the official Guix build farm at https://ci.guix.gnu.org, run as root:\n-\n-```\n-guix archive --authorize < ~root/.config/guix/current/share/guix/ci.guix.gnu.org.pub\n-```\n-\n-For dongcarl's substitute server at https://guix.carldong.io, run as root:\n-\n-```sh\n-wget -qO- 'https://guix.carldong.io/signing-key.pub' | guix archive --authorize\n-```\n-\n-#### Use the substitute servers\n-\n-The official Guix build farm at https://ci.guix.gnu.org is automatically used\n-unless the `--no-substitutes` flag is supplied.\n-\n-This can be overridden for all `guix` invocations by passing the\n-`--substitute-urls` option to your invocation of `guix-daemon`. This can also be\n-overridden on a call-by-call basis by passing the same `--substitute-urls`\n-option to client tools such at `guix environment`.\n-\n-To use dongcarl's substitute server for Bitcoin Core builds after having\n-[authorized his signing key](#authorize-the-signing-keys):\n-\n-```\n-export ADDITIONAL_GUIX_ENVIRONMENT_FLAGS='--substitute-urls=\"https://guix.carldong.io https://ci.guix.gnu.org\"'\n-```\n-\n-## FAQ\n-\n-### How can I trust the binary installation?\n-\n-As mentioned at the bottom of [this manual page][guix/bin-install]:\n-\n-> The binary installation tarballs can be (re)produced and verified simply by\n-> running the following command in the Guix source tree:\n->\n->     make guix-binary.x86_64-linux.tar.xz\n-\n-### When will Guix be packaged in debian?\n-\n-Vagrant Cascadian has been making good progress on this\n-[here][debian/guix-package]. We have all the pieces needed to put up an APT\n-repository and will likely put one up soon.\n-\n-[b17e]: http://bootstrappable.org/\n-[r12e/source-date-epoch]: https://reproducible-builds.org/docs/source-date-epoch/\n-\n-[guix/install.sh]: https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n-[guix/bin-install]: https://www.gnu.org/software/guix/manual/en/html_node/Binary-Installation.html\n-[guix/env-setup]: https://www.gnu.org/software/guix/manual/en/html_node/Build-Environment-Setup.html\n-[guix/substitutes]: https://www.gnu.org/software/guix/manual/en/html_node/Substitutes.html\n-[guix/substitute-server-auth]: https://www.gnu.org/software/guix/manual/en/html_node/Substitute-Server-Authorization.html\n-[guix/time-machine]: https://guix.gnu.org/manual/en/html_node/Invoking-guix-time_002dmachine.html\n-\n-[debian/guix-package]: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=850644\n-[fanquake/guix-docker]: https://github.com/fanquake/core-review/tree/master/guix"
      },
      {
        "sha": "11d2c8b86727eb2a757bc94e532a0d4cc83c45c6",
        "filename": "contrib/guix/guix-build.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 119,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/guix/guix-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/guix/guix-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/guix-build.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,119 +0,0 @@\n-#!/usr/bin/env bash\n-export LC_ALL=C\n-set -e -o pipefail\n-\n-# Determine the maximum number of jobs to run simultaneously (overridable by\n-# environment)\n-MAX_JOBS=\"${MAX_JOBS:-$(nproc)}\"\n-\n-# Download the depends sources now as we won't have internet access in the build\n-# container\n-make -C \"${PWD}/depends\" -j\"$MAX_JOBS\" download ${V:+V=1} ${SOURCES_PATH:+SOURCES_PATH=\"$SOURCES_PATH\"}\n-\n-# Determine the reference time used for determinism (overridable by environment)\n-SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:-$(git log --format=%at -1)}\"\n-\n-# Execute \"$@\" in a pinned, possibly older version of Guix, for reproducibility\n-# across time.\n-time-machine() {\n-    guix time-machine --url=https://github.com/dongcarl/guix.git \\\n-                      --commit=b066c25026f21fb57677aa34692a5034338e7ee3 \\\n-                      -- \"$@\"\n-}\n-\n-# Function to be called when building for host ${1} and the user interrupts the\n-# build\n-int_trap() {\n-cat << EOF\n-** INT received while building ${1}, you may want to clean up the relevant\n-   output, deploy, and distsrc-* directories before rebuilding\n-\n-Hint: To blow everything away, you may want to use:\n-\n-  $ git clean -xdff --exclude='/depends/SDKs/*'\n-\n-Specifically, this will remove all files without an entry in the index,\n-excluding the SDK directory. Practically speaking, this means that all ignored\n-and untracked files and directories will be wiped, allowing you to start anew.\n-EOF\n-}\n-\n-# Deterministically build Bitcoin Core for HOSTs (overridable by environment)\n-# shellcheck disable=SC2153\n-for host in ${HOSTS=x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu x86_64-w64-mingw32}; do\n-\n-    # Display proper warning when the user interrupts the build\n-    trap 'int_trap ${host}' INT\n-\n-    (\n-        # Required for 'contrib/guix/manifest.scm' to output the right manifest\n-        # for the particular $HOST we're building for\n-        export HOST=\"$host\"\n-\n-        # Run the build script 'contrib/guix/libexec/build.sh' in the build\n-        # container specified by 'contrib/guix/manifest.scm'.\n-        #\n-        # Explanation of `guix environment` flags:\n-        #\n-        #   --container        run command within an isolated container\n-        #\n-        #     Running in an isolated container minimizes build-time differences\n-        #     between machines and improves reproducibility\n-        #\n-        #   --pure             unset existing environment variables\n-        #\n-        #     Same rationale as --container\n-        #\n-        #   --no-cwd           do not share current working directory with an\n-        #                      isolated container\n-        #\n-        #     When --container is specified, the default behavior is to share\n-        #     the current working directory with the isolated container at the\n-        #     same exact path (e.g. mapping '/home/satoshi/bitcoin/' to\n-        #     '/home/satoshi/bitcoin/'). This means that the $PWD inside the\n-        #     container becomes a source of irreproducibility. --no-cwd disables\n-        #     this behaviour.\n-        #\n-        #   --share=SPEC       for containers, share writable host file system\n-        #                      according to SPEC\n-        #\n-        #   --share=\"$PWD\"=/bitcoin\n-        #\n-        #                     maps our current working directory to /bitcoin\n-        #                     inside the isolated container, which we later cd\n-        #                     into.\n-        #\n-        #     While we don't want to map our current working directory to the\n-        #     same exact path (as this introduces irreproducibility), we do want\n-        #     it to be at a _fixed_ path _somewhere_ inside the isolated\n-        #     container so that we have something to build. '/bitcoin' was\n-        #     chosen arbitrarily.\n-        #\n-        #   ${SOURCES_PATH:+--share=\"$SOURCES_PATH\"}\n-        #\n-        #                     make the downloaded depends sources path available\n-        #                     inside the isolated container\n-        #\n-        #     The isolated container has no network access as it's in a\n-        #     different network namespace from the main machine, so we have to\n-        #     make the downloaded depends sources available to it. The sources\n-        #     should have been downloaded prior to this invocation.\n-        #\n-        # shellcheck disable=SC2086\n-        time-machine environment --manifest=\"${PWD}/contrib/guix/manifest.scm\" \\\n-                                 --container \\\n-                                 --pure \\\n-                                 --no-cwd \\\n-                                 --share=\"$PWD\"=/bitcoin \\\n-                                 --expose=\"$(git rev-parse --git-common-dir)\" \\\n-                                 ${SOURCES_PATH:+--share=\"$SOURCES_PATH\"} \\\n-                                 ${ADDITIONAL_GUIX_ENVIRONMENT_FLAGS} \\\n-                                 -- env HOST=\"$host\" \\\n-                                        MAX_JOBS=\"$MAX_JOBS\" \\\n-                                        SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:?unable to determine value}\" \\\n-                                        ${V:+V=1} \\\n-                                        ${SOURCES_PATH:+SOURCES_PATH=\"$SOURCES_PATH\"} \\\n-                                      bash -c \"cd /bitcoin && bash contrib/guix/libexec/build.sh\"\n-    )\n-\n-done"
      },
      {
        "sha": "5be3baeefab425c62417106499b672eb0d5696f7",
        "filename": "contrib/guix/libexec/build.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 321,
        "changes": 321,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/guix/libexec/build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/guix/libexec/build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/libexec/build.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,321 +0,0 @@\n-#!/usr/bin/env bash\n-export LC_ALL=C\n-set -e -o pipefail\n-export TZ=UTC\n-\n-if [ -n \"$V\" ]; then\n-    # Print both unexpanded (-v) and expanded (-x) forms of commands as they are\n-    # read from this file.\n-    set -vx\n-    # Set VERBOSE for CMake-based builds\n-    export VERBOSE=\"$V\"\n-fi\n-\n-# Check that environment variables assumed to be set by the environment are set\n-echo \"Building for platform triple ${HOST:?not set} with reference timestamp ${SOURCE_DATE_EPOCH:?not set}...\"\n-echo \"At most ${MAX_JOBS:?not set} jobs will run at once...\"\n-\n-#####################\n-# Environment Setup #\n-#####################\n-\n-# The depends folder also serves as a base-prefix for depends packages for\n-# $HOSTs after successfully building.\n-BASEPREFIX=\"${PWD}/depends\"\n-\n-# Setup an output directory for our build\n-OUTDIR=\"${OUTDIR:-${PWD}/output}\"\n-[ -e \"$OUTDIR\" ] || mkdir -p \"$OUTDIR\"\n-\n-# Setup the directory where our Bitcoin Core build for HOST will occur\n-DISTSRC=\"${DISTSRC:-${PWD}/distsrc-${HOST}}\"\n-if [ -e \"$DISTSRC\" ]; then\n-    echo \"DISTSRC directory '${DISTSRC}' exists, probably because of previous builds... Aborting...\"\n-    exit 1\n-else\n-    mkdir -p \"$DISTSRC\"\n-fi\n-\n-# Given a package name and an output name, return the path of that output in our\n-# current guix environment\n-store_path() {\n-    grep --extended-regexp \"/[^-]{32}-${1}-[^-]+${2:+-${2}}\" \"${GUIX_ENVIRONMENT}/manifest\" \\\n-        | head --lines=1 \\\n-        | sed --expression='s|^[[:space:]]*\"||' \\\n-              --expression='s|\"[[:space:]]*$||'\n-}\n-\n-# Set environment variables to point Guix's cross-toolchain to the right\n-# includes/libs for $HOST\n-case \"$HOST\" in\n-    *mingw*)\n-        # Determine output paths to use in CROSS_* environment variables\n-        CROSS_GLIBC=\"$(store_path \"mingw-w64-x86_64-winpthreads\")\"\n-        CROSS_GCC=\"$(store_path \"gcc-cross-${HOST}\")\"\n-        CROSS_GCC_LIBS=( \"${CROSS_GCC}/lib/gcc/${HOST}\"/* ) # This expands to an array of directories...\n-        CROSS_GCC_LIB=\"${CROSS_GCC_LIBS[0]}\" # ...we just want the first one (there should only be one)\n-\n-        NATIVE_GCC=\"$(store_path gcc-glibc-2.27-toolchain)\"\n-        export LIBRARY_PATH=\"${NATIVE_GCC}/lib:${NATIVE_GCC}/lib64\"\n-        export CPATH=\"${NATIVE_GCC}/include\"\n-\n-        export CROSS_C_INCLUDE_PATH=\"${CROSS_GCC_LIB}/include:${CROSS_GCC_LIB}/include-fixed:${CROSS_GLIBC}/include\"\n-        export CROSS_CPLUS_INCLUDE_PATH=\"${CROSS_GCC}/include/c++:${CROSS_GCC}/include/c++/${HOST}:${CROSS_GCC}/include/c++/backward:${CROSS_C_INCLUDE_PATH}\"\n-        export CROSS_LIBRARY_PATH=\"${CROSS_GCC}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_GCC_LIB}:${CROSS_GLIBC}/lib\"\n-        ;;\n-    *linux*)\n-        CROSS_GLIBC=\"$(store_path \"glibc-cross-${HOST}\")\"\n-        CROSS_GLIBC_STATIC=\"$(store_path \"glibc-cross-${HOST}\" static)\"\n-        CROSS_KERNEL=\"$(store_path \"linux-libre-headers-cross-${HOST}\")\"\n-        CROSS_GCC=\"$(store_path \"gcc-cross-${HOST}\")\"\n-        CROSS_GCC_LIBS=( \"${CROSS_GCC}/lib/gcc/${HOST}\"/* ) # This expands to an array of directories...\n-        CROSS_GCC_LIB=\"${CROSS_GCC_LIBS[0]}\" # ...we just want the first one (there should only be one)\n-\n-        # NOTE: CROSS_C_INCLUDE_PATH is missing ${CROSS_GCC_LIB}/include-fixed, because\n-        # the limits.h in it is missing a '#include_next <limits.h>'\n-        export CROSS_C_INCLUDE_PATH=\"${CROSS_GCC_LIB}/include:${CROSS_GLIBC}/include:${CROSS_KERNEL}/include\"\n-        export CROSS_CPLUS_INCLUDE_PATH=\"${CROSS_GCC}/include/c++:${CROSS_GCC}/include/c++/${HOST}:${CROSS_GCC}/include/c++/backward:${CROSS_C_INCLUDE_PATH}\"\n-        export CROSS_LIBRARY_PATH=\"${CROSS_GCC}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_GCC_LIB}:${CROSS_GLIBC}/lib:${CROSS_GLIBC_STATIC}/lib\"\n-        ;;\n-    *)\n-        exit 1 ;;\n-esac\n-\n-# Sanity check CROSS_*_PATH directories\n-IFS=':' read -ra PATHS <<< \"${CROSS_C_INCLUDE_PATH}:${CROSS_CPLUS_INCLUDE_PATH}:${CROSS_LIBRARY_PATH}\"\n-for p in \"${PATHS[@]}\"; do\n-    if [ ! -d \"$p\" ]; then\n-        echo \"'$p' doesn't exist or isn't a directory... Aborting...\"\n-        exit 1\n-    fi\n-done\n-\n-# Disable Guix ld auto-rpath behavior\n-export GUIX_LD_WRAPPER_DISABLE_RPATH=yes\n-\n-# Make /usr/bin if it doesn't exist\n-[ -e /usr/bin ] || mkdir -p /usr/bin\n-\n-# Symlink file and env to a conventional path\n-[ -e /usr/bin/file ] || ln -s --no-dereference \"$(command -v file)\" /usr/bin/file\n-[ -e /usr/bin/env ]  || ln -s --no-dereference \"$(command -v env)\"  /usr/bin/env\n-\n-# Determine the correct value for -Wl,--dynamic-linker for the current $HOST\n-case \"$HOST\" in\n-    *linux*)\n-        glibc_dynamic_linker=$(\n-            case \"$HOST\" in\n-                i686-linux-gnu)      echo /lib/ld-linux.so.2 ;;\n-                x86_64-linux-gnu)    echo /lib64/ld-linux-x86-64.so.2 ;;\n-                arm-linux-gnueabihf) echo /lib/ld-linux-armhf.so.3 ;;\n-                aarch64-linux-gnu)   echo /lib/ld-linux-aarch64.so.1 ;;\n-                riscv64-linux-gnu)   echo /lib/ld-linux-riscv64-lp64d.so.1 ;;\n-                *)                   exit 1 ;;\n-            esac\n-        )\n-        ;;\n-esac\n-\n-# Environment variables for determinism\n-export QT_RCC_TEST=1\n-export QT_RCC_SOURCE_DATE_OVERRIDE=1\n-export TAR_OPTIONS=\"--owner=0 --group=0 --numeric-owner --mtime='@${SOURCE_DATE_EPOCH}' --sort=name\"\n-export TZ=\"UTC\"\n-\n-####################\n-# Depends Building #\n-####################\n-\n-# Build the depends tree, overriding variables that assume multilib gcc\n-make -C depends --jobs=\"$MAX_JOBS\" HOST=\"$HOST\" \\\n-                                   ${V:+V=1} \\\n-                                   ${SOURCES_PATH+SOURCES_PATH=\"$SOURCES_PATH\"} \\\n-                                   i686_linux_CC=i686-linux-gnu-gcc \\\n-                                   i686_linux_CXX=i686-linux-gnu-g++ \\\n-                                   i686_linux_AR=i686-linux-gnu-ar \\\n-                                   i686_linux_RANLIB=i686-linux-gnu-ranlib \\\n-                                   i686_linux_NM=i686-linux-gnu-nm \\\n-                                   i686_linux_STRIP=i686-linux-gnu-strip \\\n-                                   x86_64_linux_CC=x86_64-linux-gnu-gcc \\\n-                                   x86_64_linux_CXX=x86_64-linux-gnu-g++ \\\n-                                   x86_64_linux_AR=x86_64-linux-gnu-ar \\\n-                                   x86_64_linux_RANLIB=x86_64-linux-gnu-ranlib \\\n-                                   x86_64_linux_NM=x86_64-linux-gnu-nm \\\n-                                   x86_64_linux_STRIP=x86_64-linux-gnu-strip \\\n-                                   qt_config_opts_i686_linux='-platform linux-g++ -xplatform bitcoin-linux-g++'\n-\n-\n-###########################\n-# Source Tarball Building #\n-###########################\n-\n-# Define DISTNAME variable.\n-# shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n-source contrib/gitian-descriptors/assign_DISTNAME\n-\n-GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n-\n-# Create the source tarball if not already there\n-if [ ! -e \"$GIT_ARCHIVE\" ]; then\n-    mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n-    git archive --output=\"$GIT_ARCHIVE\" HEAD\n-fi\n-\n-###########################\n-# Binary Tarball Building #\n-###########################\n-\n-# CONFIGFLAGS\n-CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n-case \"$HOST\" in\n-    *linux*) CONFIGFLAGS+=\" --enable-glibc-back-compat\" ;;\n-esac\n-\n-# CFLAGS\n-HOST_CFLAGS=\"-O2 -g\"\n-case \"$HOST\" in\n-    *linux*)  HOST_CFLAGS+=\" -ffile-prefix-map=${PWD}=.\" ;;\n-    *mingw*)  HOST_CFLAGS+=\" -fno-ident\" ;;\n-esac\n-\n-# CXXFLAGS\n-HOST_CXXFLAGS=\"$HOST_CFLAGS\"\n-\n-# LDFLAGS\n-case \"$HOST\" in\n-    *linux*)  HOST_LDFLAGS=\"-Wl,--as-needed -Wl,--dynamic-linker=$glibc_dynamic_linker -static-libstdc++ -Wl,-O2\" ;;\n-    *mingw*)  HOST_LDFLAGS=\"-Wl,--no-insert-timestamp\" ;;\n-esac\n-\n-# Make $HOST-specific native binaries from depends available in $PATH\n-export PATH=\"${BASEPREFIX}/${HOST}/native/bin:${PATH}\"\n-(\n-    cd \"$DISTSRC\"\n-\n-    # Extract the source tarball\n-    tar -xf \"${GIT_ARCHIVE}\"\n-\n-    ./autogen.sh\n-\n-    # Configure this DISTSRC for $HOST\n-    # shellcheck disable=SC2086\n-    env CONFIG_SITE=\"${BASEPREFIX}/${HOST}/share/config.site\" \\\n-        ./configure --prefix=/ \\\n-                    --disable-ccache \\\n-                    --disable-maintainer-mode \\\n-                    --disable-dependency-tracking \\\n-                    ${CONFIGFLAGS} \\\n-                    CFLAGS=\"${HOST_CFLAGS}\" \\\n-                    CXXFLAGS=\"${HOST_CXXFLAGS}\" \\\n-                    ${HOST_LDFLAGS:+LDFLAGS=\"${HOST_LDFLAGS}\"}\n-\n-    sed -i.old 's/-lstdc++ //g' config.status libtool src/univalue/config.status src/univalue/libtool\n-\n-    # Build Bitcoin Core\n-    make --jobs=\"$MAX_JOBS\" ${V:+V=1}\n-\n-    # Perform basic ELF security checks on a series of executables.\n-    make -C src --jobs=1 check-security ${V:+V=1}\n-\n-    case \"$HOST\" in\n-        *linux*|*mingw*)\n-            # Check that executables only contain allowed gcc, glibc and libstdc++\n-            # version symbols for Linux distro back-compatibility.\n-            make -C src --jobs=1 check-symbols  ${V:+V=1}\n-            ;;\n-    esac\n-\n-    # Make the os-specific installers\n-    case \"$HOST\" in\n-        *mingw*)\n-            make deploy ${V:+V=1} BITCOIN_WIN_INSTALLER=\"${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe\"\n-            ;;\n-    esac\n-\n-    # Setup the directory where our Bitcoin Core build for HOST will be\n-    # installed. This directory will also later serve as the input for our\n-    # binary tarballs.\n-    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n-    mkdir -p \"${INSTALLPATH}\"\n-    # Install built Bitcoin Core to $INSTALLPATH\n-    make install DESTDIR=\"${INSTALLPATH}\" ${V:+V=1}\n-\n-    (\n-        cd installed\n-\n-        case \"$HOST\" in\n-            *mingw*)\n-                mv --target-directory=\"$DISTNAME\"/lib/ \"$DISTNAME\"/bin/*.dll\n-                ;;\n-        esac\n-\n-        # Prune libtool and object archives\n-        find . -name \"lib*.la\" -delete\n-        find . -name \"lib*.a\" -delete\n-\n-        # Prune pkg-config files\n-        rm -r \"${DISTNAME}/lib/pkgconfig\"\n-\n-        # Split binaries and libraries from their debug symbols\n-        {\n-            find \"${DISTNAME}/bin\" -type f -executable -print0\n-            find \"${DISTNAME}/lib\" -type f -print0\n-        } | xargs -0 -n1 -P\"$MAX_JOBS\" -I{} \"${DISTSRC}/contrib/devtools/split-debug.sh\" {} {} {}.dbg\n-\n-        case \"$HOST\" in\n-            *mingw*)\n-                cp \"${DISTSRC}/doc/README_windows.txt\" \"${DISTNAME}/readme.txt\"\n-                ;;\n-            *linux*)\n-                cp \"${DISTSRC}/README.md\" \"${DISTNAME}/\"\n-                ;;\n-        esac\n-\n-        # Finally, deterministically produce {non-,}debug binary tarballs ready\n-        # for release\n-        case \"$HOST\" in\n-            *mingw*)\n-                find \"${DISTNAME}\" -not -name \"*.dbg\" -print0 \\\n-                    | xargs -0r touch --no-dereference --date=\"@${SOURCE_DATE_EPOCH}\"\n-                find \"${DISTNAME}\" -not -name \"*.dbg\" \\\n-                    | sort \\\n-                    | zip -X@ \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-w64-mingw32/win64}.zip\" \\\n-                    || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-w64-mingw32/win64}.zip\" && exit 1 )\n-                find \"${DISTNAME}\" -name \"*.dbg\" -print0 \\\n-                    | xargs -0r touch --no-dereference --date=\"@${SOURCE_DATE_EPOCH}\"\n-                find \"${DISTNAME}\" -name \"*.dbg\" \\\n-                    | sort \\\n-                    | zip -X@ \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-w64-mingw32/win64}-debug.zip\" \\\n-                    || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-w64-mingw32/win64}-debug.zip\" && exit 1 )\n-                ;;\n-            *linux*)\n-                find \"${DISTNAME}\" -not -name \"*.dbg\" -print0 \\\n-                    | sort --zero-terminated \\\n-                    | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n-                    | gzip -9n > \"${OUTDIR}/${DISTNAME}-${HOST}.tar.gz\" \\\n-                    || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST}.tar.gz\" && exit 1 )\n-                find \"${DISTNAME}\" -name \"*.dbg\" -print0 \\\n-                    | sort --zero-terminated \\\n-                    | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n-                    | gzip -9n > \"${OUTDIR}/${DISTNAME}-${HOST}-debug.tar.gz\" \\\n-                    || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST}-debug.tar.gz\" && exit 1 )\n-                ;;\n-        esac\n-    )\n-)\n-\n-case \"$HOST\" in\n-    *mingw*)\n-        cp -rf --target-directory=. contrib/windeploy\n-        (\n-            cd ./windeploy\n-            mkdir unsigned\n-            cp --target-directory=unsigned/ \"${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe\"\n-            find . -print0 \\\n-                | sort --zero-terminated \\\n-                | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n-                | gzip -9n > \"${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\" \\\n-                || ( rm -f \"${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\" && exit 1 )\n-        )\n-        ;;\n-esac"
      },
      {
        "sha": "5e011ea1848982e5ce5e2073ff28443b15d4f39c",
        "filename": "contrib/guix/manifest.scm",
        "status": "removed",
        "additions": 0,
        "deletions": 198,
        "changes": 198,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/guix/manifest.scm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/guix/manifest.scm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/manifest.scm?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,198 +0,0 @@\n-(use-modules (gnu)\n-             (gnu packages)\n-             (gnu packages autotools)\n-             (gnu packages base)\n-             (gnu packages bash)\n-             (gnu packages check)\n-             (gnu packages commencement)\n-             (gnu packages compression)\n-             (gnu packages cross-base)\n-             (gnu packages file)\n-             (gnu packages gawk)\n-             (gnu packages gcc)\n-             (gnu packages installers)\n-             (gnu packages linux)\n-             (gnu packages mingw)\n-             (gnu packages perl)\n-             (gnu packages pkg-config)\n-             (gnu packages python)\n-             (gnu packages shells)\n-             (gnu packages version-control)\n-             (guix build-system gnu)\n-             (guix build-system trivial)\n-             (guix gexp)\n-             (guix packages)\n-             (guix profiles)\n-             (guix utils))\n-\n-(define (make-ssp-fixed-gcc xgcc)\n-  \"Given a XGCC package, return a modified package that uses the SSP function\n-from glibc instead of from libssp.so. Our `symbol-check' script will complain if\n-we link against libssp.so, and thus will ensure that this works properly.\n-\n-Taken from:\n-http://www.linuxfromscratch.org/hlfs/view/development/chapter05/gcc-pass1.html\"\n-  (package\n-   (inherit xgcc)\n-   (arguments\n-    (substitute-keyword-arguments (package-arguments xgcc)\n-      ((#:make-flags flags)\n-       `(cons \"gcc_cv_libc_provides_ssp=yes\" ,flags))))))\n-\n-(define (make-gcc-rpath-link xgcc)\n-  \"Given a XGCC package, return a modified package that replace each instance of\n--rpath in the default system spec that's inserted by Guix with -rpath-link\"\n-  (package\n-   (inherit xgcc)\n-   (arguments\n-    (substitute-keyword-arguments (package-arguments xgcc)\n-      ((#:phases phases)\n-       `(modify-phases ,phases\n-          (add-after 'pre-configure 'replace-rpath-with-rpath-link\n-            (lambda _\n-              (substitute* (cons \"gcc/config/rs6000/sysv4.h\"\n-                                 (find-files \"gcc/config\"\n-                                             \"^gnu-user.*\\\\.h$\"))\n-                ((\"-rpath=\") \"-rpath-link=\"))\n-              #t))))))))\n-\n-(define (make-cross-toolchain target\n-                              base-gcc-for-libc\n-                              base-kernel-headers\n-                              base-libc\n-                              base-gcc)\n-  \"Create a cross-compilation toolchain package for TARGET\"\n-  (let* ((xbinutils (cross-binutils target))\n-         ;; 1. Build a cross-compiling gcc without targeting any libc, derived\n-         ;; from BASE-GCC-FOR-LIBC\n-         (xgcc-sans-libc (cross-gcc target\n-                                    #:xgcc base-gcc-for-libc\n-                                    #:xbinutils xbinutils))\n-         ;; 2. Build cross-compiled kernel headers with XGCC-SANS-LIBC, derived\n-         ;; from BASE-KERNEL-HEADERS\n-         (xkernel (cross-kernel-headers target\n-                                        base-kernel-headers\n-                                        xgcc-sans-libc\n-                                        xbinutils))\n-         ;; 3. Build a cross-compiled libc with XGCC-SANS-LIBC and XKERNEL,\n-         ;; derived from BASE-LIBC\n-         (xlibc (cross-libc target\n-                            base-libc\n-                            xgcc-sans-libc\n-                            xbinutils\n-                            xkernel))\n-         ;; 4. Build a cross-compiling gcc targeting XLIBC, derived from\n-         ;; BASE-GCC\n-         (xgcc (cross-gcc target\n-                          #:xgcc base-gcc\n-                          #:xbinutils xbinutils\n-                          #:libc xlibc)))\n-    ;; Define a meta-package that propagates the resulting XBINUTILS, XLIBC, and\n-    ;; XGCC\n-    (package\n-      (name (string-append target \"-toolchain\"))\n-      (version (package-version xgcc))\n-      (source #f)\n-      (build-system trivial-build-system)\n-      (arguments '(#:builder (begin (mkdir %output) #t)))\n-      (propagated-inputs\n-       `((\"binutils\" ,xbinutils)\n-         (\"libc\" ,xlibc)\n-         (\"libc:static\" ,xlibc \"static\")\n-         (\"gcc\" ,xgcc)))\n-      (synopsis (string-append \"Complete GCC tool chain for \" target))\n-      (description (string-append \"This package provides a complete GCC tool\n-chain for \" target \" development.\"))\n-      (home-page (package-home-page xgcc))\n-      (license (package-license xgcc)))))\n-\n-(define* (make-bitcoin-cross-toolchain target\n-                                  #:key\n-                                  (base-gcc-for-libc gcc-5)\n-                                  (base-kernel-headers linux-libre-headers-4.19)\n-                                  (base-libc glibc-2.27)\n-                                  (base-gcc (make-gcc-rpath-link gcc-9)))\n-  \"Convenience wrapper around MAKE-CROSS-TOOLCHAIN with default values\n-desirable for building Bitcoin Core release binaries.\"\n-  (make-cross-toolchain target\n-                   base-gcc-for-libc\n-                   base-kernel-headers\n-                   base-libc\n-                   base-gcc))\n-\n-(define (make-gcc-with-pthreads gcc)\n-  (package-with-extra-configure-variable gcc \"--enable-threads\" \"posix\"))\n-\n-(define (make-mingw-pthreads-cross-toolchain target)\n-  \"Create a cross-compilation toolchain package for TARGET\"\n-  (let* ((xbinutils (cross-binutils target))\n-         (pthreads-xlibc mingw-w64-x86_64-winpthreads)\n-         (pthreads-xgcc (make-gcc-with-pthreads\n-                         (cross-gcc target\n-                                    #:xgcc (make-ssp-fixed-gcc gcc-9)\n-                                    #:xbinutils xbinutils\n-                                    #:libc pthreads-xlibc))))\n-    ;; Define a meta-package that propagates the resulting XBINUTILS, XLIBC, and\n-    ;; XGCC\n-    (package\n-      (name (string-append target \"-posix-toolchain\"))\n-      (version (package-version pthreads-xgcc))\n-      (source #f)\n-      (build-system trivial-build-system)\n-      (arguments '(#:builder (begin (mkdir %output) #t)))\n-      (propagated-inputs\n-       `((\"binutils\" ,xbinutils)\n-         (\"libc\" ,pthreads-xlibc)\n-         (\"gcc\" ,pthreads-xgcc)))\n-      (synopsis (string-append \"Complete GCC tool chain for \" target))\n-      (description (string-append \"This package provides a complete GCC tool\n-chain for \" target \" development.\"))\n-      (home-page (package-home-page pthreads-xgcc))\n-      (license (package-license pthreads-xgcc)))))\n-\n-\n-(packages->manifest\n- (append\n-  (list ;; The Basics\n-        bash-minimal\n-        which\n-        coreutils\n-        util-linux\n-        ;; File(system) inspection\n-        file\n-        grep\n-        diffutils\n-        findutils\n-        ;; File transformation\n-        patch\n-        gawk\n-        sed\n-        ;; Compression and archiving\n-        tar\n-        bzip2\n-        gzip\n-        xz\n-        zlib\n-        ;; Build tools\n-        gnu-make\n-        libtool\n-        autoconf\n-        automake\n-        pkg-config\n-        ;; Scripting\n-        perl\n-        python-3.7\n-        ;; Git\n-        git\n-        ;; Native gcc 9 toolchain targeting glibc 2.27\n-        (make-gcc-toolchain gcc-9 glibc-2.27))\n-  (let ((target (getenv \"HOST\")))\n-    (cond ((string-suffix? \"-mingw32\" target)\n-           ;; Windows\n-           (list zip (make-mingw-pthreads-cross-toolchain \"x86_64-w64-mingw32\") nsis-x86_64))\n-          ((string-contains target \"riscv64-linux-\")\n-           (list (make-bitcoin-cross-toolchain \"riscv64-linux-gnu\"\n-                                               #:base-gcc-for-libc gcc-7)))\n-          ((string-contains target \"-linux-\")\n-           (list (make-bitcoin-cross-toolchain target)))\n-          (else '())))))"
      },
      {
        "sha": "306a37f75ab7018b0ce015064a7ae0159fd6e015",
        "filename": "contrib/init/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,12 +0,0 @@\n-Sample configuration files for:\n-```\n-SystemD: bitcoind.service\n-Upstart: bitcoind.conf\n-OpenRC:  bitcoind.openrc\n-         bitcoind.openrcconf\n-CentOS:  bitcoind.init\n-macOS:   org.bitcoin.bitcoind.plist\n-```\n-have been made available to assist packagers in creating node packages here.\n-\n-See doc/init.md for more information."
      },
      {
        "sha": "dde1bd0c4d16b7eede11a741b72777a47e0962c7",
        "filename": "contrib/init/bitcoind.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/init/bitcoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/init/bitcoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.conf?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,65 +0,0 @@\n-description \"Bitcoin Core Daemon\"\n-\n-start on runlevel [2345]\n-stop on starting rc RUNLEVEL=[016]\n-\n-env BITCOIND_BIN=\"/usr/bin/bitcoind\"\n-env BITCOIND_USER=\"bitcoin\"\n-env BITCOIND_GROUP=\"bitcoin\"\n-env BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n-# upstart can't handle variables constructed with other variables\n-env BITCOIND_PIDFILE=\"/var/run/bitcoind/bitcoind.pid\"\n-env BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n-env BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n-\n-expect fork\n-\n-respawn\n-respawn limit 5 120\n-kill timeout 600\n-\n-pre-start script\n-    # this will catch non-existent config files\n-    # bitcoind will check and exit with this very warning, but it can do so\n-    # long after forking, leaving upstart to think everything started fine.\n-    # since this is a commonly encountered case on install, just check and\n-    # warn here.\n-    if ! grep -qs '^rpcpassword=' \"$BITCOIND_CONFIGFILE\" ; then\n-        echo \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n-        echo \"The setting must appear in $BITCOIND_CONFIGFILE\"\n-        echo\n-        echo \"This password is security critical to securing wallets \"\n-        echo \"and must not be the same as the rpcuser setting.\"\n-        echo \"You can generate a suitable random password using the following \"\n-        echo \"command from the shell:\"\n-        echo\n-        echo \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n-        echo\n-        echo \"It is recommended that you also set alertnotify so you are \"\n-        echo \"notified of problems:\"\n-        echo\n-        echo \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n-            \"admin@foo.com\"\n-        echo\n-        exit 1\n-    fi\n-\n-    mkdir -p \"$BITCOIND_PIDDIR\"\n-    chmod 0755 \"$BITCOIND_PIDDIR\"\n-    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_PIDDIR\"\n-    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_CONFIGFILE\"\n-    chmod 0660 \"$BITCOIND_CONFIGFILE\"\n-end script\n-\n-exec start-stop-daemon \\\n-    --start \\\n-    --pidfile \"$BITCOIND_PIDFILE\" \\\n-    --chuid $BITCOIND_USER:$BITCOIND_GROUP \\\n-    --exec \"$BITCOIND_BIN\" \\\n-    -- \\\n-    -pid=\"$BITCOIND_PIDFILE\" \\\n-    -conf=\"$BITCOIND_CONFIGFILE\" \\\n-    -datadir=\"$BITCOIND_DATADIR\" \\\n-    -disablewallet \\\n-    -daemon\n-"
      },
      {
        "sha": "19e1f76d094ce4a17f883fca9bd2b8d12d0f6e8c",
        "filename": "contrib/init/bitcoind.init",
        "status": "removed",
        "additions": 0,
        "deletions": 67,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/init/bitcoind.init",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/init/bitcoind.init",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.init?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,67 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-#  bitcoind The bitcoin core server.\n-#\n-#\n-# chkconfig: 345 80 20\n-# description: bitcoind\n-# processname: bitcoind\n-#\n-\n-# Source function library.\n-. /etc/init.d/functions\n-\n-# you can override defaults in /etc/sysconfig/bitcoind, see below\n-if [ -f /etc/sysconfig/bitcoind ]; then\n-        . /etc/sysconfig/bitcoind\n-fi\n-\n-RETVAL=0\n-\n-prog=bitcoind\n-# you can override the lockfile via BITCOIND_LOCKFILE in /etc/sysconfig/bitcoind\n-lockfile=${BITCOIND_LOCKFILE-/var/lock/subsys/bitcoind}\n-\n-# bitcoind defaults to /usr/bin/bitcoind, override with BITCOIND_BIN\n-bitcoind=${BITCOIND_BIN-/usr/bin/bitcoind}\n-\n-# bitcoind opts default to -disablewallet, override with BITCOIND_OPTS\n-bitcoind_opts=${BITCOIND_OPTS--disablewallet}\n-\n-start() {\n-    echo -n $\"Starting $prog: \"\n-    daemon $DAEMONOPTS $bitcoind $bitcoind_opts\n-    RETVAL=$?\n-    echo\n-    [ $RETVAL -eq 0 ] && touch $lockfile\n-    return $RETVAL\n-}\n-\n-stop() {\n-    echo -n $\"Stopping $prog: \"\n-    killproc $prog -t600\n-    RETVAL=$?\n-    echo\n-    [ $RETVAL -eq 0 ] && rm -f $lockfile\n-    return $RETVAL\n-}\n-\n-case \"$1\" in\n-    start)\n-        start\n-        ;;\n-    stop)\n-        stop\n-        ;;\n-    status)\n-        status $prog\n-        ;;\n-    restart)\n-        stop\n-        start\n-        ;;\n-    *)\n-        echo \"Usage: service $prog {start|stop|status|restart}\"\n-        exit 1\n-        ;;\n-esac"
      },
      {
        "sha": "86222295dbe052a5c6455e80dcf830161dccc05f",
        "filename": "contrib/init/bitcoind.openrc",
        "status": "removed",
        "additions": 0,
        "deletions": 92,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/init/bitcoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/init/bitcoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrc?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,92 +0,0 @@\n-#!/sbin/openrc-run\n-\n-# backward compatibility for existing gentoo layout \n-#\n-if [ -d \"/var/lib/bitcoin/.bitcoin\" ]; then\n-\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoin/.bitcoin\"\n-else\n-\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoind\"\n-fi\n-\n-BITCOIND_CONFIGFILE=${BITCOIND_CONFIGFILE:-/etc/bitcoin/bitcoin.conf}\n-BITCOIND_PIDDIR=${BITCOIND_PIDDIR:-/var/run/bitcoind}\n-BITCOIND_PIDFILE=${BITCOIND_PIDFILE:-${BITCOIND_PIDDIR}/bitcoind.pid}\n-BITCOIND_DATADIR=${BITCOIND_DATADIR:-${BITCOIND_DEFAULT_DATADIR}}\n-BITCOIND_USER=${BITCOIND_USER:-${BITCOIN_USER:-bitcoin}}\n-BITCOIND_GROUP=${BITCOIND_GROUP:-bitcoin}\n-BITCOIND_BIN=${BITCOIND_BIN:-/usr/bin/bitcoind}\n-BITCOIND_NICE=${BITCOIND_NICE:-${NICELEVEL:-0}}\n-BITCOIND_OPTS=\"${BITCOIND_OPTS:-${BITCOIN_OPTS}}\"\n-\n-name=\"Bitcoin Core Daemon\"\n-description=\"Bitcoin cryptocurrency P2P network daemon\"\n-\n-command=\"/usr/bin/bitcoind\"\n-command_args=\"-pid=\\\"${BITCOIND_PIDFILE}\\\" \\\n-\t\t-conf=\\\"${BITCOIND_CONFIGFILE}\\\" \\\n-\t\t-datadir=\\\"${BITCOIND_DATADIR}\\\" \\\n-\t\t-daemon \\\n-\t\t${BITCOIND_OPTS}\"\n-\n-required_files=\"${BITCOIND_CONFIGFILE}\"\n-start_stop_daemon_args=\"-u ${BITCOIND_USER} \\\n-\t\t\t-N ${BITCOIND_NICE} -w 2000\"\n-pidfile=\"${BITCOIND_PIDFILE}\"\n-\n-# The retry schedule to use when stopping the daemon. Could be either\n-# a timeout in seconds or multiple signal/timeout pairs (like\n-# \"SIGKILL/180 SIGTERM/300\")\n-retry=\"${BITCOIND_SIGTERM_TIMEOUT}\"\n-\n-depend() {\n-\tneed localmount net\n-}\n-\n-# verify\n-# 1) that the datadir exists and is writable (or create it)\n-# 2) that a directory for the pid exists and is writable\n-# 3) ownership and permissions on the config file\n-start_pre() {\n-\tcheckpath \\\n-\t-d \\\n-\t--mode 0750 \\\n-\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n-\t\"${BITCOIND_DATADIR}\"\n-\n-\tcheckpath \\\n-\t-d \\\n-\t--mode 0755 \\\n-\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n-\t\"${BITCOIND_PIDDIR}\"\n-\n-\tcheckpath -f \\\n-\t-o ${BITCOIND_USER}:${BITCOIND_GROUP} \\\n-\t-m 0660 \\\n-\t${BITCOIND_CONFIGFILE}\n-\n-\tcheckconfig || return 1\n-}\n-\n-checkconfig()\n-{\n-\tif ! grep -qs '^rpcpassword=' \"${BITCOIND_CONFIGFILE}\" ; then\n-\t\teerror \"\"\n-\t\teerror \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n-\t\teerror \"The setting must appear in ${BITCOIND_CONFIGFILE}\"\n-\t\teerror \"\"\n-\t\teerror \"This password is security critical to securing wallets \"\n-\t\teerror \"and must not be the same as the rpcuser setting.\"\n-\t\teerror \"You can generate a suitable random password using the following \"\n-\t\teerror \"command from the shell:\"\n-\t\teerror \"\"\n-\t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n-\t\teerror \"\"\n-\t\teerror \"It is recommended that you also set alertnotify so you are \"\n-\t\teerror \"notified of problems:\"\n-\t\teerror \"\"\n-\t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n-\t\t\t\"admin@foo.com\"\n-\t\teerror \"\"\n-\t\treturn 1\n-\tfi\n-}"
      },
      {
        "sha": "c8a22a08d92419a16f251d1c2b357ca371f68fe5",
        "filename": "contrib/init/bitcoind.openrcconf",
        "status": "removed",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/init/bitcoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/init/bitcoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrcconf?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,33 +0,0 @@\n-# /etc/conf.d/bitcoind: config file for /etc/init.d/bitcoind\n-\n-# Config file location\n-#BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n-\n-# What directory to write pidfile to?  (created and owned by $BITCOIND_USER)\n-#BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n-\n-# What filename to give the pidfile\n-#BITCOIND_PIDFILE=\"${BITCOIND_PIDDIR}/bitcoind.pid\"\n-\n-# Where to write bitcoind data (be mindful that the blockchain is large)\n-#BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n-\n-# User and group to own bitcoind process\n-#BITCOIND_USER=\"bitcoin\"\n-#BITCOIND_GROUP=\"bitcoin\"\n-\n-# Path to bitcoind executable\n-#BITCOIND_BIN=\"/usr/bin/bitcoind\"\n-\n-# Nice value to run bitcoind under\n-#BITCOIND_NICE=0\n-\n-# Additional options (avoid -conf and -datadir, use flags above)\n-#BITCOIND_OPTS=\"\"\n-\n-# The timeout in seconds OpenRC will wait for bitcoind to terminate\n-# after a SIGTERM has been raised.\n-# Note that this will be mapped as argument to start-stop-daemon's\n-# '--retry' option, which means you can specify a retry schedule\n-# here. For more information see man 8 start-stop-daemon.\n-BITCOIND_SIGTERM_TIMEOUT=600"
      },
      {
        "sha": "8b308644b10611ae4e558e08aa003a3a2e1ad370",
        "filename": "contrib/init/bitcoind.service",
        "status": "removed",
        "additions": 0,
        "deletions": 77,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/init/bitcoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/init/bitcoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.service?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,77 +0,0 @@\n-# It is not recommended to modify this file in-place, because it will\n-# be overwritten during package upgrades. If you want to add further\n-# options or overwrite existing ones then use\n-# $ systemctl edit bitcoind.service\n-# See \"man systemd.service\" for details.\n-\n-# Note that almost all daemon options could be specified in\n-# /etc/bitcoin/bitcoin.conf, but keep in mind those explicitly\n-# specified as arguments in ExecStart= will override those in the\n-# config file.\n-\n-[Unit]\n-Description=Bitcoin daemon\n-After=network.target\n-\n-[Service]\n-ExecStart=/usr/bin/bitcoind -daemon \\\n-                            -pid=/run/bitcoind/bitcoind.pid \\\n-                            -conf=/etc/bitcoin/bitcoin.conf \\\n-                            -datadir=/var/lib/bitcoind\n-\n-# Make sure the config directory is readable by the service user\n-PermissionsStartOnly=true\n-ExecStartPre=/bin/chgrp bitcoin /etc/bitcoin\n-\n-# Process management\n-####################\n-\n-Type=forking\n-PIDFile=/run/bitcoind/bitcoind.pid\n-Restart=on-failure\n-TimeoutStopSec=600\n-\n-# Directory creation and permissions\n-####################################\n-\n-# Run as bitcoin:bitcoin\n-User=bitcoin\n-Group=bitcoin\n-\n-# /run/bitcoind\n-RuntimeDirectory=bitcoind\n-RuntimeDirectoryMode=0710\n-\n-# /etc/bitcoin\n-ConfigurationDirectory=bitcoin\n-ConfigurationDirectoryMode=0710\n-\n-# /var/lib/bitcoind\n-StateDirectory=bitcoind\n-StateDirectoryMode=0710\n-\n-# Hardening measures\n-####################\n-\n-# Provide a private /tmp and /var/tmp.\n-PrivateTmp=true\n-\n-# Mount /usr, /boot/ and /etc read-only for the process.\n-ProtectSystem=full\n-\n-# Deny access to /home, /root and /run/user\n-ProtectHome=true\n-\n-# Disallow the process and all of its children to gain\n-# new privileges through execve().\n-NoNewPrivileges=true\n-\n-# Use a new /dev namespace only populated with API pseudo devices\n-# such as /dev/null, /dev/zero and /dev/random.\n-PrivateDevices=true\n-\n-# Deny the creation of writable and executable memory mappings.\n-MemoryDenyWriteExecute=true\n-\n-[Install]\n-WantedBy=multi-user.target"
      },
      {
        "sha": "e9130a21ded67cbb3a9811f2a27a6affe46d3634",
        "filename": "contrib/install_db4.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 106,
        "changes": 106,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/install_db4.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/install_db4.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/install_db4.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,106 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2017-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# Install libdb4.8 (Berkeley DB).\n-\n-export LC_ALL=C\n-set -e\n-\n-if [ -z \"${1}\" ]; then\n-  echo \"Usage: $0 <base-dir> [<extra-bdb-configure-flag> ...]\"\n-  echo\n-  echo \"Must specify a single argument: the directory in which db4 will be built.\"\n-  echo \"This is probably \\`pwd\\` if you're at the root of the bitcoin repository.\"\n-  exit 1\n-fi\n-\n-expand_path() {\n-  cd \"${1}\" && pwd -P\n-}\n-\n-BDB_PREFIX=\"$(expand_path ${1})/db4\"; shift;\n-BDB_VERSION='db-4.8.30.NC'\n-BDB_HASH='12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef'\n-BDB_URL=\"https://download.oracle.com/berkeley-db/${BDB_VERSION}.tar.gz\"\n-\n-check_exists() {\n-  command -v \"$1\" >/dev/null\n-}\n-\n-sha256_check() {\n-  # Args: <sha256_hash> <filename>\n-  #\n-  if check_exists sha256sum; then\n-    echo \"${1}  ${2}\" | sha256sum -c\n-  elif check_exists sha256; then\n-    if [ \"$(uname)\" = \"FreeBSD\" ]; then\n-      sha256 -c \"${1}\" \"${2}\"\n-    else\n-      echo \"${1}  ${2}\" | sha256 -c\n-    fi\n-  else\n-    echo \"${1}  ${2}\" | shasum -a 256 -c\n-  fi\n-}\n-\n-http_get() {\n-  # Args: <url> <filename> <sha256_hash>\n-  #\n-  # It's acceptable that we don't require SSL here because we manually verify\n-  # content hashes below.\n-  #\n-  if [ -f \"${2}\" ]; then\n-    echo \"File ${2} already exists; not downloading again\"\n-  elif check_exists curl; then\n-    curl --insecure --retry 5 \"${1}\" -o \"${2}\"\n-  else\n-    wget --no-check-certificate \"${1}\" -O \"${2}\"\n-  fi\n-\n-  sha256_check \"${3}\" \"${2}\"\n-}\n-\n-mkdir -p \"${BDB_PREFIX}\"\n-http_get \"${BDB_URL}\" \"${BDB_VERSION}.tar.gz\" \"${BDB_HASH}\"\n-tar -xzvf ${BDB_VERSION}.tar.gz -C \"$BDB_PREFIX\"\n-cd \"${BDB_PREFIX}/${BDB_VERSION}/\"\n-\n-# Apply a patch necessary when building with clang and c++11 (see https://community.oracle.com/thread/3952592)\n-CLANG_CXX11_PATCH_URL='https://gist.githubusercontent.com/LnL7/5153b251fd525fe15de69b67e63a6075/raw/7778e9364679093a32dec2908656738e16b6bdcb/clang.patch'\n-CLANG_CXX11_PATCH_HASH='7a9a47b03fd5fb93a16ef42235fa9512db9b0829cfc3bdf90edd3ec1f44d637c'\n-http_get \"${CLANG_CXX11_PATCH_URL}\" clang.patch \"${CLANG_CXX11_PATCH_HASH}\"\n-patch -p2 < clang.patch\n-\n-# The packaged config.guess and config.sub are ancient (2009) and can cause build issues.\n-# Replace them with modern versions.\n-# See https://github.com/bitcoin/bitcoin/issues/16064\n-CONFIG_GUESS_URL='https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=55eaf3e779455c4e5cc9f82efb5278be8f8f900b'\n-CONFIG_GUESS_HASH='2d1ff7bca773d2ec3c6217118129220fa72d8adda67c7d2bf79994b3129232c1'\n-CONFIG_SUB_URL='https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=55eaf3e779455c4e5cc9f82efb5278be8f8f900b'\n-CONFIG_SUB_HASH='3a4befde9bcdf0fdb2763fc1bfa74e8696df94e1ad7aac8042d133c8ff1d2e32'\n-\n-rm -f \"dist/config.guess\"\n-rm -f \"dist/config.sub\"\n-\n-http_get \"${CONFIG_GUESS_URL}\" dist/config.guess \"${CONFIG_GUESS_HASH}\"\n-http_get \"${CONFIG_SUB_URL}\" dist/config.sub \"${CONFIG_SUB_HASH}\"\n-\n-cd build_unix/\n-\n-\"${BDB_PREFIX}/${BDB_VERSION}/dist/configure\" \\\n-  --enable-cxx --disable-shared --disable-replication --with-pic --prefix=\"${BDB_PREFIX}\" \\\n-  \"${@}\"\n-\n-make install\n-\n-echo\n-echo \"db4 build complete.\"\n-echo\n-# shellcheck disable=SC2016\n-echo 'When compiling bitcoind, run `./configure` in the following way:'\n-echo\n-echo \"  export BDB_PREFIX='${BDB_PREFIX}'\"\n-# shellcheck disable=SC2016\n-echo '  ./configure BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" ...'"
      },
      {
        "sha": "25a1c7351a297c751d630acd3f97fff6091710c8",
        "filename": "contrib/linearize/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 54,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,54 +0,0 @@\n-# Linearize\n-Construct a linear, no-fork, best version of the Bitcoin blockchain.\n-\n-## Step 1: Download hash list\n-\n-    $ ./linearize-hashes.py linearize.cfg > hashlist.txt\n-\n-Required configuration file settings for linearize-hashes:\n-* RPC: `datadir` (Required if `rpcuser` and `rpcpassword` are not specified)\n-* RPC: `rpcuser`, `rpcpassword` (Required if `datadir` is not specified)\n-\n-Optional config file setting for linearize-hashes:\n-* RPC: `host`  (Default: `127.0.0.1`)\n-* RPC: `port`  (Default: `8332`)\n-* Blockchain: `min_height`, `max_height`\n-* `rev_hash_bytes`: If true, the written block hash list will be\n-byte-reversed. (In other words, the hash returned by getblockhash will have its\n-bytes reversed.) False by default. Intended for generation of\n-standalone hash lists but safe to use with linearize-data.py, which will output\n-the same data no matter which byte format is chosen.\n-\n-The `linearize-hashes` script requires a connection, local or remote, to a\n-JSON-RPC server. Running `bitcoind` or `bitcoin-qt -server` will be sufficient.\n-\n-## Step 2: Copy local block data\n-\n-    $ ./linearize-data.py linearize.cfg\n-\n-Required configuration file settings:\n-* `output_file`: The file that will contain the final blockchain.\n-      or\n-* `output`: Output directory for linearized `blocks/blkNNNNN.dat` output.\n-\n-Optional config file setting for linearize-data:\n-* `debug_output`: Some printouts may not always be desired. If true, such output\n-will be printed.\n-* `file_timestamp`: Set each file's last-accessed and last-modified times,\n-respectively, to the current time and to the timestamp of the most recent block\n-written to the script's blockchain.\n-* `genesis`: The hash of the genesis block in the blockchain.\n-* `input`: bitcoind blocks/ directory containing blkNNNNN.dat\n-* `hashlist`: text file containing list of block hashes created by\n-linearize-hashes.py.\n-* `max_out_sz`: Maximum size for files created by the `output_file` option.\n-(Default: `1000*1000*1000 bytes`)\n-* `netmagic`: Network magic number.\n-* `out_of_order_cache_sz`: If out-of-order blocks are being read, the block can\n-be written to a cache so that the blockchain doesn't have to be sought again.\n-This option specifies the cache size. (Default: `100*1000*1000 bytes`)\n-* `rev_hash_bytes`: If true, the block hash list written by linearize-hashes.py\n-will be byte-reversed when read by linearize-data.py. See the linearize-hashes\n-entry for more information.\n-* `split_timestamp`: Split blockchain files when a new month is first seen, in\n-addition to reaching a maximum file size (`max_out_sz`)."
      },
      {
        "sha": "5f566261ca6746f15edcf2cf41fb7c46525fa79e",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "removed",
        "additions": 0,
        "deletions": 63,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,63 +0,0 @@\n-# bitcoind RPC settings (linearize-hashes)\n-rpcuser=someuser\n-rpcpassword=somepassword\n-#datadir=~/.bitcoin\n-host=127.0.0.1\n-\n-#mainnet default\n-port=8332\n-\n-#testnet default\n-#port=18332\n-\n-#regtest default\n-#port=18443\n-\n-#signet default\n-#port=38332\n-\n-# bootstrap.dat hashlist settings (linearize-hashes)\n-max_height=313000\n-\n-# bootstrap.dat input/output settings (linearize-data)\n-\n-# mainnet\n-netmagic=f9beb4d9\n-genesis=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n-input=/home/example/.bitcoin/blocks\n-\n-# testnet\n-#netmagic=0b110907\n-#genesis=000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\n-#input=/home/example/.bitcoin/testnet3/blocks\n-\n-# regtest\n-#netmagic=fabfb5da\n-#genesis=0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\n-#input=/home/example/.bitcoin/regtest/blocks\n-\n-# signet\n-#netmagic=0a03cf40\n-#genesis=00000008819873e925422c1ff0f99f7cc9bbb232af63a077a480a3633bee1ef6\n-#input=/home/example/.bitcoin/signet/blocks\n-\n-# \"output\" option causes blockchain files to be written to the given location,\n-# with \"output_file\" ignored. If not used, \"output_file\" is used instead.\n-# output=/home/example/blockchain_directory\n-output_file=/home/example/Downloads/bootstrap.dat\n-hashlist=hashlist.txt\n-\n-# Maximum size in bytes of out-of-order blocks cache in memory\n-out_of_order_cache_sz = 100000000\n-\n-# Do we want the reverse the hash bytes coming from getblockhash?\n-rev_hash_bytes = False\n-\n-# On a new month, do we want to set the access and modify times of the new\n-# blockchain file?\n-file_timestamp = 0\n-# Do we want to split the blockchain files given a new month or specific height?\n-split_timestamp = 0\n-\n-# Do we want debug printouts?\n-debug_output = False"
      },
      {
        "sha": "73f54cd4885e0168a900cc3e4663d1790fe1021a",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "removed",
        "additions": 0,
        "deletions": 350,
        "changes": 350,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,350 +0,0 @@\n-#!/usr/bin/env python3\n-#\n-# linearize-data.py: Construct a linear, no-fork version of the chain.\n-#\n-# Copyright (c) 2013-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-\n-import struct\n-import re\n-import os\n-import os.path\n-import sys\n-import hashlib\n-import datetime\n-import time\n-import glob\n-from collections import namedtuple\n-from binascii import unhexlify\n-\n-settings = {}\n-\n-def hex_switchEndian(s):\n-    \"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n-    pairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n-    return b''.join(pairList[::-1]).decode()\n-\n-def uint32(x):\n-    return x & 0xffffffff\n-\n-def bytereverse(x):\n-    return uint32(( ((x) << 24) | (((x) << 8) & 0x00ff0000) |\n-               (((x) >> 8) & 0x0000ff00) | ((x) >> 24) ))\n-\n-def bufreverse(in_buf):\n-    out_words = []\n-    for i in range(0, len(in_buf), 4):\n-        word = struct.unpack('@I', in_buf[i:i+4])[0]\n-        out_words.append(struct.pack('@I', bytereverse(word)))\n-    return b''.join(out_words)\n-\n-def wordreverse(in_buf):\n-    out_words = []\n-    for i in range(0, len(in_buf), 4):\n-        out_words.append(in_buf[i:i+4])\n-    out_words.reverse()\n-    return b''.join(out_words)\n-\n-def calc_hdr_hash(blk_hdr):\n-    hash1 = hashlib.sha256()\n-    hash1.update(blk_hdr)\n-    hash1_o = hash1.digest()\n-\n-    hash2 = hashlib.sha256()\n-    hash2.update(hash1_o)\n-    hash2_o = hash2.digest()\n-\n-    return hash2_o\n-\n-def calc_hash_str(blk_hdr):\n-    hash = calc_hdr_hash(blk_hdr)\n-    hash = bufreverse(hash)\n-    hash = wordreverse(hash)\n-    hash_str = hash.hex()\n-    return hash_str\n-\n-def get_blk_dt(blk_hdr):\n-    members = struct.unpack(\"<I\", blk_hdr[68:68+4])\n-    nTime = members[0]\n-    dt = datetime.datetime.fromtimestamp(nTime)\n-    dt_ym = datetime.datetime(dt.year, dt.month, 1)\n-    return (dt_ym, nTime)\n-\n-# When getting the list of block hashes, undo any byte reversals.\n-def get_block_hashes(settings):\n-    blkindex = []\n-    f = open(settings['hashlist'], \"r\", encoding=\"utf8\")\n-    for line in f:\n-        line = line.rstrip()\n-        if settings['rev_hash_bytes'] == 'true':\n-            line = hex_switchEndian(line)\n-        blkindex.append(line)\n-\n-    print(\"Read \" + str(len(blkindex)) + \" hashes\")\n-\n-    return blkindex\n-\n-# The block map shouldn't give or receive byte-reversed hashes.\n-def mkblockmap(blkindex):\n-    blkmap = {}\n-    for height,hash in enumerate(blkindex):\n-        blkmap[hash] = height\n-    return blkmap\n-\n-# This gets the first block file ID that exists from the input block\n-# file directory.\n-def getFirstBlockFileId(block_dir_path):\n-    # First, this sets up a pattern to search for block files, for\n-    # example 'blkNNNNN.dat'.\n-    blkFilePattern = os.path.join(block_dir_path, \"blk[0-9][0-9][0-9][0-9][0-9].dat\")\n-\n-    # This search is done with glob\n-    blkFnList = glob.glob(blkFilePattern)\n-\n-    if len(blkFnList) == 0:\n-        print(\"blocks not pruned - starting at 0\")\n-        return 0\n-    # We then get the lexicographic minimum, which should be the first\n-    # block file name.\n-    firstBlkFilePath = min(blkFnList)\n-    firstBlkFn = os.path.basename(firstBlkFilePath)\n-\n-    # now, the string should be ['b','l','k','N','N','N','N','N','.','d','a','t']\n-    # So get the ID by choosing:              3   4   5   6   7\n-    # The ID is not necessarily 0 if this is a pruned node.\n-    blkId = int(firstBlkFn[3:8])\n-    return blkId\n-\n-# Block header and extent on disk\n-BlockExtent = namedtuple('BlockExtent', ['fn', 'offset', 'inhdr', 'blkhdr', 'size'])\n-\n-class BlockDataCopier:\n-    def __init__(self, settings, blkindex, blkmap):\n-        self.settings = settings\n-        self.blkindex = blkindex\n-        self.blkmap = blkmap\n-\n-        # Get first occurring block file id - for pruned nodes this\n-        # will not necessarily be 0\n-        self.inFn = getFirstBlockFileId(self.settings['input'])\n-        self.inF = None\n-        self.outFn = 0\n-        self.outsz = 0\n-        self.outF = None\n-        self.outFname = None\n-        self.blkCountIn = 0\n-        self.blkCountOut = 0\n-\n-        self.lastDate = datetime.datetime(2000, 1, 1)\n-        self.highTS = 1408893517 - 315360000\n-        self.timestampSplit = False\n-        self.fileOutput = True\n-        self.setFileTime = False\n-        self.maxOutSz = settings['max_out_sz']\n-        if 'output' in settings:\n-            self.fileOutput = False\n-        if settings['file_timestamp'] != 0:\n-            self.setFileTime = True\n-        if settings['split_timestamp'] != 0:\n-            self.timestampSplit = True\n-        # Extents and cache for out-of-order blocks\n-        self.blockExtents = {}\n-        self.outOfOrderData = {}\n-        self.outOfOrderSize = 0 # running total size for items in outOfOrderData\n-\n-    def writeBlock(self, inhdr, blk_hdr, rawblock):\n-        blockSizeOnDisk = len(inhdr) + len(blk_hdr) + len(rawblock)\n-        if not self.fileOutput and ((self.outsz + blockSizeOnDisk) > self.maxOutSz):\n-            self.outF.close()\n-            if self.setFileTime:\n-                os.utime(self.outFname, (int(time.time()), self.highTS))\n-            self.outF = None\n-            self.outFname = None\n-            self.outFn = self.outFn + 1\n-            self.outsz = 0\n-\n-        (blkDate, blkTS) = get_blk_dt(blk_hdr)\n-        if self.timestampSplit and (blkDate > self.lastDate):\n-            print(\"New month \" + blkDate.strftime(\"%Y-%m\") + \" @ \" + self.hash_str)\n-            self.lastDate = blkDate\n-            if self.outF:\n-                self.outF.close()\n-                if self.setFileTime:\n-                    os.utime(self.outFname, (int(time.time()), self.highTS))\n-                self.outF = None\n-                self.outFname = None\n-                self.outFn = self.outFn + 1\n-                self.outsz = 0\n-\n-        if not self.outF:\n-            if self.fileOutput:\n-                self.outFname = self.settings['output_file']\n-            else:\n-                self.outFname = os.path.join(self.settings['output'], \"blk%05d.dat\" % self.outFn)\n-            print(\"Output file \" + self.outFname)\n-            self.outF = open(self.outFname, \"wb\")\n-\n-        self.outF.write(inhdr)\n-        self.outF.write(blk_hdr)\n-        self.outF.write(rawblock)\n-        self.outsz = self.outsz + len(inhdr) + len(blk_hdr) + len(rawblock)\n-\n-        self.blkCountOut = self.blkCountOut + 1\n-        if blkTS > self.highTS:\n-            self.highTS = blkTS\n-\n-        if (self.blkCountOut % 1000) == 0:\n-            print('%i blocks scanned, %i blocks written (of %i, %.1f%% complete)' %\n-                    (self.blkCountIn, self.blkCountOut, len(self.blkindex), 100.0 * self.blkCountOut / len(self.blkindex)))\n-\n-    def inFileName(self, fn):\n-        return os.path.join(self.settings['input'], \"blk%05d.dat\" % fn)\n-\n-    def fetchBlock(self, extent):\n-        '''Fetch block contents from disk given extents'''\n-        with open(self.inFileName(extent.fn), \"rb\") as f:\n-            f.seek(extent.offset)\n-            return f.read(extent.size)\n-\n-    def copyOneBlock(self):\n-        '''Find the next block to be written in the input, and copy it to the output.'''\n-        extent = self.blockExtents.pop(self.blkCountOut)\n-        if self.blkCountOut in self.outOfOrderData:\n-            # If the data is cached, use it from memory and remove from the cache\n-            rawblock = self.outOfOrderData.pop(self.blkCountOut)\n-            self.outOfOrderSize -= len(rawblock)\n-        else: # Otherwise look up data on disk\n-            rawblock = self.fetchBlock(extent)\n-\n-        self.writeBlock(extent.inhdr, extent.blkhdr, rawblock)\n-\n-    def run(self):\n-        while self.blkCountOut < len(self.blkindex):\n-            if not self.inF:\n-                fname = self.inFileName(self.inFn)\n-                print(\"Input file \" + fname)\n-                try:\n-                    self.inF = open(fname, \"rb\")\n-                except IOError:\n-                    print(\"Premature end of block data\")\n-                    return\n-\n-            inhdr = self.inF.read(8)\n-            if (not inhdr or (inhdr[0] == \"\\0\")):\n-                self.inF.close()\n-                self.inF = None\n-                self.inFn = self.inFn + 1\n-                continue\n-\n-            inMagic = inhdr[:4]\n-            if (inMagic != self.settings['netmagic']):\n-                # Seek backwards 7 bytes (skipping the first byte in the previous search)\n-                # and continue searching from the new position if the magic bytes are not\n-                # found.\n-                self.inF.seek(-7, os.SEEK_CUR)\n-                continue\n-            inLenLE = inhdr[4:]\n-            su = struct.unpack(\"<I\", inLenLE)\n-            inLen = su[0] - 80 # length without header\n-            blk_hdr = self.inF.read(80)\n-            inExtent = BlockExtent(self.inFn, self.inF.tell(), inhdr, blk_hdr, inLen)\n-\n-            self.hash_str = calc_hash_str(blk_hdr)\n-            if not self.hash_str in blkmap:\n-                # Because blocks can be written to files out-of-order as of 0.10, the script\n-                # may encounter blocks it doesn't know about. Treat as debug output.\n-                if settings['debug_output'] == 'true':\n-                    print(\"Skipping unknown block \" + self.hash_str)\n-                self.inF.seek(inLen, os.SEEK_CUR)\n-                continue\n-\n-            blkHeight = self.blkmap[self.hash_str]\n-            self.blkCountIn += 1\n-\n-            if self.blkCountOut == blkHeight:\n-                # If in-order block, just copy\n-                rawblock = self.inF.read(inLen)\n-                self.writeBlock(inhdr, blk_hdr, rawblock)\n-\n-                # See if we can catch up to prior out-of-order blocks\n-                while self.blkCountOut in self.blockExtents:\n-                    self.copyOneBlock()\n-\n-            else: # If out-of-order, skip over block data for now\n-                self.blockExtents[blkHeight] = inExtent\n-                if self.outOfOrderSize < self.settings['out_of_order_cache_sz']:\n-                    # If there is space in the cache, read the data\n-                    # Reading the data in file sequence instead of seeking and fetching it later is preferred,\n-                    # but we don't want to fill up memory\n-                    self.outOfOrderData[blkHeight] = self.inF.read(inLen)\n-                    self.outOfOrderSize += inLen\n-                else: # If no space in cache, seek forward\n-                    self.inF.seek(inLen, os.SEEK_CUR)\n-\n-        print(\"Done (%i blocks written)\" % (self.blkCountOut))\n-\n-if __name__ == '__main__':\n-    if len(sys.argv) != 2:\n-        print(\"Usage: linearize-data.py CONFIG-FILE\")\n-        sys.exit(1)\n-\n-    f = open(sys.argv[1], encoding=\"utf8\")\n-    for line in f:\n-        # skip comment lines\n-        m = re.search(r'^\\s*#', line)\n-        if m:\n-            continue\n-\n-        # parse key=value lines\n-        m = re.search(r'^(\\w+)\\s*=\\s*(\\S.*)$', line)\n-        if m is None:\n-            continue\n-        settings[m.group(1)] = m.group(2)\n-    f.close()\n-\n-    # Force hash byte format setting to be lowercase to make comparisons easier.\n-    # Also place upfront in case any settings need to know about it.\n-    if 'rev_hash_bytes' not in settings:\n-        settings['rev_hash_bytes'] = 'false'\n-    settings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n-\n-    if 'netmagic' not in settings:\n-        settings['netmagic'] = 'f9beb4d9'\n-    if 'genesis' not in settings:\n-        settings['genesis'] = '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f'\n-    if 'input' not in settings:\n-        settings['input'] = 'input'\n-    if 'hashlist' not in settings:\n-        settings['hashlist'] = 'hashlist.txt'\n-    if 'file_timestamp' not in settings:\n-        settings['file_timestamp'] = 0\n-    if 'split_timestamp' not in settings:\n-        settings['split_timestamp'] = 0\n-    if 'max_out_sz' not in settings:\n-        settings['max_out_sz'] = 1000 * 1000 * 1000\n-    if 'out_of_order_cache_sz' not in settings:\n-        settings['out_of_order_cache_sz'] = 100 * 1000 * 1000\n-    if 'debug_output' not in settings:\n-        settings['debug_output'] = 'false'\n-\n-    settings['max_out_sz'] = int(settings['max_out_sz'])\n-    settings['split_timestamp'] = int(settings['split_timestamp'])\n-    settings['file_timestamp'] = int(settings['file_timestamp'])\n-    settings['netmagic'] = unhexlify(settings['netmagic'].encode('utf-8'))\n-    settings['out_of_order_cache_sz'] = int(settings['out_of_order_cache_sz'])\n-    settings['debug_output'] = settings['debug_output'].lower()\n-\n-    if 'output_file' not in settings and 'output' not in settings:\n-        print(\"Missing output file / directory\")\n-        sys.exit(1)\n-\n-    blkindex = get_block_hashes(settings)\n-    blkmap = mkblockmap(blkindex)\n-\n-    # Block hash map won't be byte-reversed. Neither should the genesis hash.\n-    if not settings['genesis'] in blkmap:\n-        print(\"Genesis block not found in hashlist\")\n-    else:\n-        BlockDataCopier(settings, blkindex, blkmap).run()"
      },
      {
        "sha": "fed6e665b8c934e26729f5cfe192f95f27870754",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "removed",
        "additions": 0,
        "deletions": 152,
        "changes": 152,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,152 +0,0 @@\n-#!/usr/bin/env python3\n-#\n-# linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n-#\n-# Copyright (c) 2013-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-\n-from http.client import HTTPConnection\n-import json\n-import re\n-import base64\n-import sys\n-import os\n-import os.path\n-\n-settings = {}\n-\n-def hex_switchEndian(s):\n-    \"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n-    pairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n-    return b''.join(pairList[::-1]).decode()\n-\n-class BitcoinRPC:\n-    def __init__(self, host, port, username, password):\n-        authpair = \"%s:%s\" % (username, password)\n-        authpair = authpair.encode('utf-8')\n-        self.authhdr = b\"Basic \" + base64.b64encode(authpair)\n-        self.conn = HTTPConnection(host, port=port, timeout=30)\n-\n-    def execute(self, obj):\n-        try:\n-            self.conn.request('POST', '/', json.dumps(obj),\n-                { 'Authorization' : self.authhdr,\n-                  'Content-type' : 'application/json' })\n-        except ConnectionRefusedError:\n-            print('RPC connection refused. Check RPC settings and the server status.',\n-                  file=sys.stderr)\n-            return None\n-\n-        resp = self.conn.getresponse()\n-        if resp is None:\n-            print(\"JSON-RPC: no response\", file=sys.stderr)\n-            return None\n-\n-        body = resp.read().decode('utf-8')\n-        resp_obj = json.loads(body)\n-        return resp_obj\n-\n-    @staticmethod\n-    def build_request(idx, method, params):\n-        obj = { 'version' : '1.1',\n-            'method' : method,\n-            'id' : idx }\n-        if params is None:\n-            obj['params'] = []\n-        else:\n-            obj['params'] = params\n-        return obj\n-\n-    @staticmethod\n-    def response_is_error(resp_obj):\n-        return 'error' in resp_obj and resp_obj['error'] is not None\n-\n-def get_block_hashes(settings, max_blocks_per_call=10000):\n-    rpc = BitcoinRPC(settings['host'], settings['port'],\n-             settings['rpcuser'], settings['rpcpassword'])\n-\n-    height = settings['min_height']\n-    while height < settings['max_height']+1:\n-        num_blocks = min(settings['max_height']+1-height, max_blocks_per_call)\n-        batch = []\n-        for x in range(num_blocks):\n-            batch.append(rpc.build_request(x, 'getblockhash', [height + x]))\n-\n-        reply = rpc.execute(batch)\n-        if reply is None:\n-            print('Cannot continue. Program will halt.')\n-            return None\n-\n-        for x,resp_obj in enumerate(reply):\n-            if rpc.response_is_error(resp_obj):\n-                print('JSON-RPC: error at height', height+x, ': ', resp_obj['error'], file=sys.stderr)\n-                sys.exit(1)\n-            assert(resp_obj['id'] == x) # assume replies are in-sequence\n-            if settings['rev_hash_bytes'] == 'true':\n-                resp_obj['result'] = hex_switchEndian(resp_obj['result'])\n-            print(resp_obj['result'])\n-\n-        height += num_blocks\n-\n-def get_rpc_cookie():\n-    # Open the cookie file\n-    with open(os.path.join(os.path.expanduser(settings['datadir']), '.cookie'), 'r', encoding=\"ascii\") as f:\n-        combined = f.readline()\n-        combined_split = combined.split(\":\")\n-        settings['rpcuser'] = combined_split[0]\n-        settings['rpcpassword'] = combined_split[1]\n-\n-if __name__ == '__main__':\n-    if len(sys.argv) != 2:\n-        print(\"Usage: linearize-hashes.py CONFIG-FILE\")\n-        sys.exit(1)\n-\n-    f = open(sys.argv[1], encoding=\"utf8\")\n-    for line in f:\n-        # skip comment lines\n-        m = re.search(r'^\\s*#', line)\n-        if m:\n-            continue\n-\n-        # parse key=value lines\n-        m = re.search(r'^(\\w+)\\s*=\\s*(\\S.*)$', line)\n-        if m is None:\n-            continue\n-        settings[m.group(1)] = m.group(2)\n-    f.close()\n-\n-    if 'host' not in settings:\n-        settings['host'] = '127.0.0.1'\n-    if 'port' not in settings:\n-        settings['port'] = 8332\n-    if 'min_height' not in settings:\n-        settings['min_height'] = 0\n-    if 'max_height' not in settings:\n-        settings['max_height'] = 313000\n-    if 'rev_hash_bytes' not in settings:\n-        settings['rev_hash_bytes'] = 'false'\n-\n-    use_userpass = True\n-    use_datadir = False\n-    if 'rpcuser' not in settings or 'rpcpassword' not in settings:\n-        use_userpass = False\n-    if 'datadir' in settings and not use_userpass:\n-        use_datadir = True\n-    if not use_userpass and not use_datadir:\n-        print(\"Missing datadir or username and/or password in cfg file\", file=sys.stderr)\n-        sys.exit(1)\n-\n-    settings['port'] = int(settings['port'])\n-    settings['min_height'] = int(settings['min_height'])\n-    settings['max_height'] = int(settings['max_height'])\n-\n-    # Force hash byte format setting to be lowercase to make comparisons easier.\n-    settings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n-\n-    # Get the rpc user and pass from the cookie if the datadir is set\n-    if use_datadir:\n-        get_rpc_cookie()\n-\n-    get_block_hashes(settings)"
      },
      {
        "sha": "94a9ed024d3859793618152ea559a168bbcbb5e2",
        "filename": "contrib/macdeploy/LICENSE",
        "status": "removed",
        "additions": 0,
        "deletions": 674,
        "changes": 674,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/macdeploy/LICENSE",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/macdeploy/LICENSE",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/LICENSE?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,674 +0,0 @@\n-                    GNU GENERAL PUBLIC LICENSE\n-                       Version 3, 29 June 2007\n-\n- Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n- Everyone is permitted to copy and distribute verbatim copies\n- of this license document, but changing it is not allowed.\n-\n-                            Preamble\n-\n-  The GNU General Public License is a free, copyleft license for\n-software and other kinds of works.\n-\n-  The licenses for most software and other practical works are designed\n-to take away your freedom to share and change the works.  By contrast,\n-the GNU General Public License is intended to guarantee your freedom to\n-share and change all versions of a program--to make sure it remains free\n-software for all its users.  We, the Free Software Foundation, use the\n-GNU General Public License for most of our software; it applies also to\n-any other work released this way by its authors.  You can apply it to\n-your programs, too.\n-\n-  When we speak of free software, we are referring to freedom, not\n-price.  Our General Public Licenses are designed to make sure that you\n-have the freedom to distribute copies of free software (and charge for\n-them if you wish), that you receive source code or can get it if you\n-want it, that you can change the software or use pieces of it in new\n-free programs, and that you know you can do these things.\n-\n-  To protect your rights, we need to prevent others from denying you\n-these rights or asking you to surrender the rights.  Therefore, you have\n-certain responsibilities if you distribute copies of the software, or if\n-you modify it: responsibilities to respect the freedom of others.\n-\n-  For example, if you distribute copies of such a program, whether\n-gratis or for a fee, you must pass on to the recipients the same\n-freedoms that you received.  You must make sure that they, too, receive\n-or can get the source code.  And you must show them these terms so they\n-know their rights.\n-\n-  Developers that use the GNU GPL protect your rights with two steps:\n-(1) assert copyright on the software, and (2) offer you this License\n-giving you legal permission to copy, distribute and/or modify it.\n-\n-  For the developers' and authors' protection, the GPL clearly explains\n-that there is no warranty for this free software.  For both users' and\n-authors' sake, the GPL requires that modified versions be marked as\n-changed, so that their problems will not be attributed erroneously to\n-authors of previous versions.\n-\n-  Some devices are designed to deny users access to install or run\n-modified versions of the software inside them, although the manufacturer\n-can do so.  This is fundamentally incompatible with the aim of\n-protecting users' freedom to change the software.  The systematic\n-pattern of such abuse occurs in the area of products for individuals to\n-use, which is precisely where it is most unacceptable.  Therefore, we\n-have designed this version of the GPL to prohibit the practice for those\n-products.  If such problems arise substantially in other domains, we\n-stand ready to extend this provision to those domains in future versions\n-of the GPL, as needed to protect the freedom of users.\n-\n-  Finally, every program is threatened constantly by software patents.\n-States should not allow patents to restrict development and use of\n-software on general-purpose computers, but in those that do, we wish to\n-avoid the special danger that patents applied to a free program could\n-make it effectively proprietary.  To prevent this, the GPL assures that\n-patents cannot be used to render the program non-free.\n-\n-  The precise terms and conditions for copying, distribution and\n-modification follow.\n-\n-                       TERMS AND CONDITIONS\n-\n-  0. Definitions.\n-\n-  \"This License\" refers to version 3 of the GNU General Public License.\n-\n-  \"Copyright\" also means copyright-like laws that apply to other kinds of\n-works, such as semiconductor masks.\n-\n-  \"The Program\" refers to any copyrightable work licensed under this\n-License.  Each licensee is addressed as \"you\".  \"Licensees\" and\n-\"recipients\" may be individuals or organizations.\n-\n-  To \"modify\" a work means to copy from or adapt all or part of the work\n-in a fashion requiring copyright permission, other than the making of an\n-exact copy.  The resulting work is called a \"modified version\" of the\n-earlier work or a work \"based on\" the earlier work.\n-\n-  A \"covered work\" means either the unmodified Program or a work based\n-on the Program.\n-\n-  To \"propagate\" a work means to do anything with it that, without\n-permission, would make you directly or secondarily liable for\n-infringement under applicable copyright law, except executing it on a\n-computer or modifying a private copy.  Propagation includes copying,\n-distribution (with or without modification), making available to the\n-public, and in some countries other activities as well.\n-\n-  To \"convey\" a work means any kind of propagation that enables other\n-parties to make or receive copies.  Mere interaction with a user through\n-a computer network, with no transfer of a copy, is not conveying.\n-\n-  An interactive user interface displays \"Appropriate Legal Notices\"\n-to the extent that it includes a convenient and prominently visible\n-feature that (1) displays an appropriate copyright notice, and (2)\n-tells the user that there is no warranty for the work (except to the\n-extent that warranties are provided), that licensees may convey the\n-work under this License, and how to view a copy of this License.  If\n-the interface presents a list of user commands or options, such as a\n-menu, a prominent item in the list meets this criterion.\n-\n-  1. Source Code.\n-\n-  The \"source code\" for a work means the preferred form of the work\n-for making modifications to it.  \"Object code\" means any non-source\n-form of a work.\n-\n-  A \"Standard Interface\" means an interface that either is an official\n-standard defined by a recognized standards body, or, in the case of\n-interfaces specified for a particular programming language, one that\n-is widely used among developers working in that language.\n-\n-  The \"System Libraries\" of an executable work include anything, other\n-than the work as a whole, that (a) is included in the normal form of\n-packaging a Major Component, but which is not part of that Major\n-Component, and (b) serves only to enable use of the work with that\n-Major Component, or to implement a Standard Interface for which an\n-implementation is available to the public in source code form.  A\n-\"Major Component\", in this context, means a major essential component\n-(kernel, window system, and so on) of the specific operating system\n-(if any) on which the executable work runs, or a compiler used to\n-produce the work, or an object code interpreter used to run it.\n-\n-  The \"Corresponding Source\" for a work in object code form means all\n-the source code needed to generate, install, and (for an executable\n-work) run the object code and to modify the work, including scripts to\n-control those activities.  However, it does not include the work's\n-System Libraries, or general-purpose tools or generally available free\n-programs which are used unmodified in performing those activities but\n-which are not part of the work.  For example, Corresponding Source\n-includes interface definition files associated with source files for\n-the work, and the source code for shared libraries and dynamically\n-linked subprograms that the work is specifically designed to require,\n-such as by intimate data communication or control flow between those\n-subprograms and other parts of the work.\n-\n-  The Corresponding Source need not include anything that users\n-can regenerate automatically from other parts of the Corresponding\n-Source.\n-\n-  The Corresponding Source for a work in source code form is that\n-same work.\n-\n-  2. Basic Permissions.\n-\n-  All rights granted under this License are granted for the term of\n-copyright on the Program, and are irrevocable provided the stated\n-conditions are met.  This License explicitly affirms your unlimited\n-permission to run the unmodified Program.  The output from running a\n-covered work is covered by this License only if the output, given its\n-content, constitutes a covered work.  This License acknowledges your\n-rights of fair use or other equivalent, as provided by copyright law.\n-\n-  You may make, run and propagate covered works that you do not\n-convey, without conditions so long as your license otherwise remains\n-in force.  You may convey covered works to others for the sole purpose\n-of having them make modifications exclusively for you, or provide you\n-with facilities for running those works, provided that you comply with\n-the terms of this License in conveying all material for which you do\n-not control copyright.  Those thus making or running the covered works\n-for you must do so exclusively on your behalf, under your direction\n-and control, on terms that prohibit them from making any copies of\n-your copyrighted material outside their relationship with you.\n-\n-  Conveying under any other circumstances is permitted solely under\n-the conditions stated below.  Sublicensing is not allowed; section 10\n-makes it unnecessary.\n-\n-  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n-\n-  No covered work shall be deemed part of an effective technological\n-measure under any applicable law fulfilling obligations under article\n-11 of the WIPO copyright treaty adopted on 20 December 1996, or\n-similar laws prohibiting or restricting circumvention of such\n-measures.\n-\n-  When you convey a covered work, you waive any legal power to forbid\n-circumvention of technological measures to the extent such circumvention\n-is effected by exercising rights under this License with respect to\n-the covered work, and you disclaim any intention to limit operation or\n-modification of the work as a means of enforcing, against the work's\n-users, your or third parties' legal rights to forbid circumvention of\n-technological measures.\n-\n-  4. Conveying Verbatim Copies.\n-\n-  You may convey verbatim copies of the Program's source code as you\n-receive it, in any medium, provided that you conspicuously and\n-appropriately publish on each copy an appropriate copyright notice;\n-keep intact all notices stating that this License and any\n-non-permissive terms added in accord with section 7 apply to the code;\n-keep intact all notices of the absence of any warranty; and give all\n-recipients a copy of this License along with the Program.\n-\n-  You may charge any price or no price for each copy that you convey,\n-and you may offer support or warranty protection for a fee.\n-\n-  5. Conveying Modified Source Versions.\n-\n-  You may convey a work based on the Program, or the modifications to\n-produce it from the Program, in the form of source code under the\n-terms of section 4, provided that you also meet all of these conditions:\n-\n-    a) The work must carry prominent notices stating that you modified\n-    it, and giving a relevant date.\n-\n-    b) The work must carry prominent notices stating that it is\n-    released under this License and any conditions added under section\n-    7.  This requirement modifies the requirement in section 4 to\n-    \"keep intact all notices\".\n-\n-    c) You must license the entire work, as a whole, under this\n-    License to anyone who comes into possession of a copy.  This\n-    License will therefore apply, along with any applicable section 7\n-    additional terms, to the whole of the work, and all its parts,\n-    regardless of how they are packaged.  This License gives no\n-    permission to license the work in any other way, but it does not\n-    invalidate such permission if you have separately received it.\n-\n-    d) If the work has interactive user interfaces, each must display\n-    Appropriate Legal Notices; however, if the Program has interactive\n-    interfaces that do not display Appropriate Legal Notices, your\n-    work need not make them do so.\n-\n-  A compilation of a covered work with other separate and independent\n-works, which are not by their nature extensions of the covered work,\n-and which are not combined with it such as to form a larger program,\n-in or on a volume of a storage or distribution medium, is called an\n-\"aggregate\" if the compilation and its resulting copyright are not\n-used to limit the access or legal rights of the compilation's users\n-beyond what the individual works permit.  Inclusion of a covered work\n-in an aggregate does not cause this License to apply to the other\n-parts of the aggregate.\n-\n-  6. Conveying Non-Source Forms.\n-\n-  You may convey a covered work in object code form under the terms\n-of sections 4 and 5, provided that you also convey the\n-machine-readable Corresponding Source under the terms of this License,\n-in one of these ways:\n-\n-    a) Convey the object code in, or embodied in, a physical product\n-    (including a physical distribution medium), accompanied by the\n-    Corresponding Source fixed on a durable physical medium\n-    customarily used for software interchange.\n-\n-    b) Convey the object code in, or embodied in, a physical product\n-    (including a physical distribution medium), accompanied by a\n-    written offer, valid for at least three years and valid for as\n-    long as you offer spare parts or customer support for that product\n-    model, to give anyone who possesses the object code either (1) a\n-    copy of the Corresponding Source for all the software in the\n-    product that is covered by this License, on a durable physical\n-    medium customarily used for software interchange, for a price no\n-    more than your reasonable cost of physically performing this\n-    conveying of source, or (2) access to copy the\n-    Corresponding Source from a network server at no charge.\n-\n-    c) Convey individual copies of the object code with a copy of the\n-    written offer to provide the Corresponding Source.  This\n-    alternative is allowed only occasionally and noncommercially, and\n-    only if you received the object code with such an offer, in accord\n-    with subsection 6b.\n-\n-    d) Convey the object code by offering access from a designated\n-    place (gratis or for a charge), and offer equivalent access to the\n-    Corresponding Source in the same way through the same place at no\n-    further charge.  You need not require recipients to copy the\n-    Corresponding Source along with the object code.  If the place to\n-    copy the object code is a network server, the Corresponding Source\n-    may be on a different server (operated by you or a third party)\n-    that supports equivalent copying facilities, provided you maintain\n-    clear directions next to the object code saying where to find the\n-    Corresponding Source.  Regardless of what server hosts the\n-    Corresponding Source, you remain obligated to ensure that it is\n-    available for as long as needed to satisfy these requirements.\n-\n-    e) Convey the object code using peer-to-peer transmission, provided\n-    you inform other peers where the object code and Corresponding\n-    Source of the work are being offered to the general public at no\n-    charge under subsection 6d.\n-\n-  A separable portion of the object code, whose source code is excluded\n-from the Corresponding Source as a System Library, need not be\n-included in conveying the object code work.\n-\n-  A \"User Product\" is either (1) a \"consumer product\", which means any\n-tangible personal property which is normally used for personal, family,\n-or household purposes, or (2) anything designed or sold for incorporation\n-into a dwelling.  In determining whether a product is a consumer product,\n-doubtful cases shall be resolved in favor of coverage.  For a particular\n-product received by a particular user, \"normally used\" refers to a\n-typical or common use of that class of product, regardless of the status\n-of the particular user or of the way in which the particular user\n-actually uses, or expects or is expected to use, the product.  A product\n-is a consumer product regardless of whether the product has substantial\n-commercial, industrial or non-consumer uses, unless such uses represent\n-the only significant mode of use of the product.\n-\n-  \"Installation Information\" for a User Product means any methods,\n-procedures, authorization keys, or other information required to install\n-and execute modified versions of a covered work in that User Product from\n-a modified version of its Corresponding Source.  The information must\n-suffice to ensure that the continued functioning of the modified object\n-code is in no case prevented or interfered with solely because\n-modification has been made.\n-\n-  If you convey an object code work under this section in, or with, or\n-specifically for use in, a User Product, and the conveying occurs as\n-part of a transaction in which the right of possession and use of the\n-User Product is transferred to the recipient in perpetuity or for a\n-fixed term (regardless of how the transaction is characterized), the\n-Corresponding Source conveyed under this section must be accompanied\n-by the Installation Information.  But this requirement does not apply\n-if neither you nor any third party retains the ability to install\n-modified object code on the User Product (for example, the work has\n-been installed in ROM).\n-\n-  The requirement to provide Installation Information does not include a\n-requirement to continue to provide support service, warranty, or updates\n-for a work that has been modified or installed by the recipient, or for\n-the User Product in which it has been modified or installed.  Access to a\n-network may be denied when the modification itself materially and\n-adversely affects the operation of the network or violates the rules and\n-protocols for communication across the network.\n-\n-  Corresponding Source conveyed, and Installation Information provided,\n-in accord with this section must be in a format that is publicly\n-documented (and with an implementation available to the public in\n-source code form), and must require no special password or key for\n-unpacking, reading or copying.\n-\n-  7. Additional Terms.\n-\n-  \"Additional permissions\" are terms that supplement the terms of this\n-License by making exceptions from one or more of its conditions.\n-Additional permissions that are applicable to the entire Program shall\n-be treated as though they were included in this License, to the extent\n-that they are valid under applicable law.  If additional permissions\n-apply only to part of the Program, that part may be used separately\n-under those permissions, but the entire Program remains governed by\n-this License without regard to the additional permissions.\n-\n-  When you convey a copy of a covered work, you may at your option\n-remove any additional permissions from that copy, or from any part of\n-it.  (Additional permissions may be written to require their own\n-removal in certain cases when you modify the work.)  You may place\n-additional permissions on material, added by you to a covered work,\n-for which you have or can give appropriate copyright permission.\n-\n-  Notwithstanding any other provision of this License, for material you\n-add to a covered work, you may (if authorized by the copyright holders of\n-that material) supplement the terms of this License with terms:\n-\n-    a) Disclaiming warranty or limiting liability differently from the\n-    terms of sections 15 and 16 of this License; or\n-\n-    b) Requiring preservation of specified reasonable legal notices or\n-    author attributions in that material or in the Appropriate Legal\n-    Notices displayed by works containing it; or\n-\n-    c) Prohibiting misrepresentation of the origin of that material, or\n-    requiring that modified versions of such material be marked in\n-    reasonable ways as different from the original version; or\n-\n-    d) Limiting the use for publicity purposes of names of licensors or\n-    authors of the material; or\n-\n-    e) Declining to grant rights under trademark law for use of some\n-    trade names, trademarks, or service marks; or\n-\n-    f) Requiring indemnification of licensors and authors of that\n-    material by anyone who conveys the material (or modified versions of\n-    it) with contractual assumptions of liability to the recipient, for\n-    any liability that these contractual assumptions directly impose on\n-    those licensors and authors.\n-\n-  All other non-permissive additional terms are considered \"further\n-restrictions\" within the meaning of section 10.  If the Program as you\n-received it, or any part of it, contains a notice stating that it is\n-governed by this License along with a term that is a further\n-restriction, you may remove that term.  If a license document contains\n-a further restriction but permits relicensing or conveying under this\n-License, you may add to a covered work material governed by the terms\n-of that license document, provided that the further restriction does\n-not survive such relicensing or conveying.\n-\n-  If you add terms to a covered work in accord with this section, you\n-must place, in the relevant source files, a statement of the\n-additional terms that apply to those files, or a notice indicating\n-where to find the applicable terms.\n-\n-  Additional terms, permissive or non-permissive, may be stated in the\n-form of a separately written license, or stated as exceptions;\n-the above requirements apply either way.\n-\n-  8. Termination.\n-\n-  You may not propagate or modify a covered work except as expressly\n-provided under this License.  Any attempt otherwise to propagate or\n-modify it is void, and will automatically terminate your rights under\n-this License (including any patent licenses granted under the third\n-paragraph of section 11).\n-\n-  However, if you cease all violation of this License, then your\n-license from a particular copyright holder is reinstated (a)\n-provisionally, unless and until the copyright holder explicitly and\n-finally terminates your license, and (b) permanently, if the copyright\n-holder fails to notify you of the violation by some reasonable means\n-prior to 60 days after the cessation.\n-\n-  Moreover, your license from a particular copyright holder is\n-reinstated permanently if the copyright holder notifies you of the\n-violation by some reasonable means, this is the first time you have\n-received notice of violation of this License (for any work) from that\n-copyright holder, and you cure the violation prior to 30 days after\n-your receipt of the notice.\n-\n-  Termination of your rights under this section does not terminate the\n-licenses of parties who have received copies or rights from you under\n-this License.  If your rights have been terminated and not permanently\n-reinstated, you do not qualify to receive new licenses for the same\n-material under section 10.\n-\n-  9. Acceptance Not Required for Having Copies.\n-\n-  You are not required to accept this License in order to receive or\n-run a copy of the Program.  Ancillary propagation of a covered work\n-occurring solely as a consequence of using peer-to-peer transmission\n-to receive a copy likewise does not require acceptance.  However,\n-nothing other than this License grants you permission to propagate or\n-modify any covered work.  These actions infringe copyright if you do\n-not accept this License.  Therefore, by modifying or propagating a\n-covered work, you indicate your acceptance of this License to do so.\n-\n-  10. Automatic Licensing of Downstream Recipients.\n-\n-  Each time you convey a covered work, the recipient automatically\n-receives a license from the original licensors, to run, modify and\n-propagate that work, subject to this License.  You are not responsible\n-for enforcing compliance by third parties with this License.\n-\n-  An \"entity transaction\" is a transaction transferring control of an\n-organization, or substantially all assets of one, or subdividing an\n-organization, or merging organizations.  If propagation of a covered\n-work results from an entity transaction, each party to that\n-transaction who receives a copy of the work also receives whatever\n-licenses to the work the party's predecessor in interest had or could\n-give under the previous paragraph, plus a right to possession of the\n-Corresponding Source of the work from the predecessor in interest, if\n-the predecessor has it or can get it with reasonable efforts.\n-\n-  You may not impose any further restrictions on the exercise of the\n-rights granted or affirmed under this License.  For example, you may\n-not impose a license fee, royalty, or other charge for exercise of\n-rights granted under this License, and you may not initiate litigation\n-(including a cross-claim or counterclaim in a lawsuit) alleging that\n-any patent claim is infringed by making, using, selling, offering for\n-sale, or importing the Program or any portion of it.\n-\n-  11. Patents.\n-\n-  A \"contributor\" is a copyright holder who authorizes use under this\n-License of the Program or a work on which the Program is based.  The\n-work thus licensed is called the contributor's \"contributor version\".\n-\n-  A contributor's \"essential patent claims\" are all patent claims\n-owned or controlled by the contributor, whether already acquired or\n-hereafter acquired, that would be infringed by some manner, permitted\n-by this License, of making, using, or selling its contributor version,\n-but do not include claims that would be infringed only as a\n-consequence of further modification of the contributor version.  For\n-purposes of this definition, \"control\" includes the right to grant\n-patent sublicenses in a manner consistent with the requirements of\n-this License.\n-\n-  Each contributor grants you a non-exclusive, worldwide, royalty-free\n-patent license under the contributor's essential patent claims, to\n-make, use, sell, offer for sale, import and otherwise run, modify and\n-propagate the contents of its contributor version.\n-\n-  In the following three paragraphs, a \"patent license\" is any express\n-agreement or commitment, however denominated, not to enforce a patent\n-(such as an express permission to practice a patent or covenant not to\n-sue for patent infringement).  To \"grant\" such a patent license to a\n-party means to make such an agreement or commitment not to enforce a\n-patent against the party.\n-\n-  If you convey a covered work, knowingly relying on a patent license,\n-and the Corresponding Source of the work is not available for anyone\n-to copy, free of charge and under the terms of this License, through a\n-publicly available network server or other readily accessible means,\n-then you must either (1) cause the Corresponding Source to be so\n-available, or (2) arrange to deprive yourself of the benefit of the\n-patent license for this particular work, or (3) arrange, in a manner\n-consistent with the requirements of this License, to extend the patent\n-license to downstream recipients.  \"Knowingly relying\" means you have\n-actual knowledge that, but for the patent license, your conveying the\n-covered work in a country, or your recipient's use of the covered work\n-in a country, would infringe one or more identifiable patents in that\n-country that you have reason to believe are valid.\n-\n-  If, pursuant to or in connection with a single transaction or\n-arrangement, you convey, or propagate by procuring conveyance of, a\n-covered work, and grant a patent license to some of the parties\n-receiving the covered work authorizing them to use, propagate, modify\n-or convey a specific copy of the covered work, then the patent license\n-you grant is automatically extended to all recipients of the covered\n-work and works based on it.\n-\n-  A patent license is \"discriminatory\" if it does not include within\n-the scope of its coverage, prohibits the exercise of, or is\n-conditioned on the non-exercise of one or more of the rights that are\n-specifically granted under this License.  You may not convey a covered\n-work if you are a party to an arrangement with a third party that is\n-in the business of distributing software, under which you make payment\n-to the third party based on the extent of your activity of conveying\n-the work, and under which the third party grants, to any of the\n-parties who would receive the covered work from you, a discriminatory\n-patent license (a) in connection with copies of the covered work\n-conveyed by you (or copies made from those copies), or (b) primarily\n-for and in connection with specific products or compilations that\n-contain the covered work, unless you entered into that arrangement,\n-or that patent license was granted, prior to 28 March 2007.\n-\n-  Nothing in this License shall be construed as excluding or limiting\n-any implied license or other defenses to infringement that may\n-otherwise be available to you under applicable patent law.\n-\n-  12. No Surrender of Others' Freedom.\n-\n-  If conditions are imposed on you (whether by court order, agreement or\n-otherwise) that contradict the conditions of this License, they do not\n-excuse you from the conditions of this License.  If you cannot convey a\n-covered work so as to satisfy simultaneously your obligations under this\n-License and any other pertinent obligations, then as a consequence you may\n-not convey it at all.  For example, if you agree to terms that obligate you\n-to collect a royalty for further conveying from those to whom you convey\n-the Program, the only way you could satisfy both those terms and this\n-License would be to refrain entirely from conveying the Program.\n-\n-  13. Use with the GNU Affero General Public License.\n-\n-  Notwithstanding any other provision of this License, you have\n-permission to link or combine any covered work with a work licensed\n-under version 3 of the GNU Affero General Public License into a single\n-combined work, and to convey the resulting work.  The terms of this\n-License will continue to apply to the part which is the covered work,\n-but the special requirements of the GNU Affero General Public License,\n-section 13, concerning interaction through a network will apply to the\n-combination as such.\n-\n-  14. Revised Versions of this License.\n-\n-  The Free Software Foundation may publish revised and/or new versions of\n-the GNU General Public License from time to time.  Such new versions will\n-be similar in spirit to the present version, but may differ in detail to\n-address new problems or concerns.\n-\n-  Each version is given a distinguishing version number.  If the\n-Program specifies that a certain numbered version of the GNU General\n-Public License \"or any later version\" applies to it, you have the\n-option of following the terms and conditions either of that numbered\n-version or of any later version published by the Free Software\n-Foundation.  If the Program does not specify a version number of the\n-GNU General Public License, you may choose any version ever published\n-by the Free Software Foundation.\n-\n-  If the Program specifies that a proxy can decide which future\n-versions of the GNU General Public License can be used, that proxy's\n-public statement of acceptance of a version permanently authorizes you\n-to choose that version for the Program.\n-\n-  Later license versions may give you additional or different\n-permissions.  However, no additional obligations are imposed on any\n-author or copyright holder as a result of your choosing to follow a\n-later version.\n-\n-  15. Disclaimer of Warranty.\n-\n-  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\n-APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\n-HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\n-OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\n-THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n-PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\n-IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\n-ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n-\n-  16. Limitation of Liability.\n-\n-  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\n-WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\n-THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\n-GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\n-USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\n-DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\n-PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\n-EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\n-SUCH DAMAGES.\n-\n-  17. Interpretation of Sections 15 and 16.\n-\n-  If the disclaimer of warranty and limitation of liability provided\n-above cannot be given local legal effect according to their terms,\n-reviewing courts shall apply local law that most closely approximates\n-an absolute waiver of all civil liability in connection with the\n-Program, unless a warranty or assumption of liability accompanies a\n-copy of the Program in return for a fee.\n-\n-                     END OF TERMS AND CONDITIONS\n-\n-            How to Apply These Terms to Your New Programs\n-\n-  If you develop a new program, and you want it to be of the greatest\n-possible use to the public, the best way to achieve this is to make it\n-free software which everyone can redistribute and change under these terms.\n-\n-  To do so, attach the following notices to the program.  It is safest\n-to attach them to the start of each source file to most effectively\n-state the exclusion of warranty; and each file should have at least\n-the \"copyright\" line and a pointer to where the full notice is found.\n-\n-    <one line to give the program's name and a brief idea of what it does.>\n-    Copyright (C) <year>  <name of author>\n-\n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation, either version 3 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-\n-Also add information on how to contact you by electronic and paper mail.\n-\n-  If the program does terminal interaction, make it output a short\n-notice like this when it starts in an interactive mode:\n-\n-    <program>  Copyright (C) <year>  <name of author>\n-    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n-    This is free software, and you are welcome to redistribute it\n-    under certain conditions; type `show c' for details.\n-\n-The hypothetical commands `show w' and `show c' should show the appropriate\n-parts of the General Public License.  Of course, your program's commands\n-might be different; for a GUI interface, you would use an \"about box\".\n-\n-  You should also get your employer (if you work as a programmer) or school,\n-if any, to sign a \"copyright disclaimer\" for the program, if necessary.\n-For more information on this, and how to apply and follow the GNU GPL, see\n-<http://www.gnu.org/licenses/>.\n-\n-  The GNU General Public License does not permit incorporating your program\n-into proprietary programs.  If your program is a subroutine library, you\n-may consider it more useful to permit linking proprietary applications with\n-the library.  If this is what you want to do, use the GNU Lesser General\n-Public License instead of this License.  But first, please read\n-<http://www.gnu.org/philosophy/why-not-lgpl.html>."
      },
      {
        "sha": "fe677e3a1f89aa961079b8b711f933b8f9009e4f",
        "filename": "contrib/macdeploy/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 128,
        "changes": 128,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,128 +0,0 @@\n-# MacOS Deployment\n-\n-The `macdeployqtplus` script should not be run manually. Instead, after building as usual:\n-\n-```bash\n-make deploy\n-```\n-\n-During the deployment process, the disk image window will pop up briefly\n-when the fancy settings are applied. This is normal, please do not interfere,\n-the process will unmount the DMG and cleanup before finishing.\n-\n-When complete, it will have produced `Bitcoin-Qt.dmg`.\n-\n-## SDK Extraction\n-\n-### Step 1: Obtaining `Xcode.app`\n-\n-Our current macOS SDK\n-(`Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz`) can be\n-extracted from\n-[Xcode_11.3.1.xip](https://download.developer.apple.com/Developer_Tools/Xcode_11.3.1/Xcode_11.3.1.xip).\n-An Apple ID is needed to download this.\n-\n-After Xcode version 7.x, Apple started shipping the `Xcode.app` in a `.xip`\n-archive. This makes the SDK less-trivial to extract on non-macOS machines. One\n-approach (tested on Debian Buster) is outlined below:\n-\n-```bash\n-# Install/clone tools needed for extracting Xcode.app\n-apt install cpio\n-git clone https://github.com/bitcoin-core/apple-sdk-tools.git\n-\n-# Unpack Xcode_11.3.1.xip and place the resulting Xcode.app in your current\n-# working directory\n-python3 apple-sdk-tools/extract_xcode.py -f Xcode_11.3.1.xip | cpio -d -i\n-```\n-\n-On macOS the process is more straightforward:\n-\n-```bash\n-xip -x Xcode_11.3.1.xip\n-```\n-\n-### Step 2: Generating `Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz` from `Xcode.app`\n-\n-To generate `Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz`, run\n-the script [`gen-sdk`](./gen-sdk) with the path to `Xcode.app` (extracted in the\n-previous stage) as the first argument.\n-\n-```bash\n-# Generate a Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz from\n-# the supplied Xcode.app\n-./contrib/macdeploy/gen-sdk '/path/to/Xcode.app'\n-```\n-\n-## Deterministic macOS DMG Notes\n-Working macOS DMGs are created in Linux by combining a recent `clang`, the Apple\n-`binutils` (`ld`, `ar`, etc) and DMG authoring tools.\n-\n-Apple uses `clang` extensively for development and has upstreamed the necessary\n-functionality so that a vanilla clang can take advantage. It supports the use of `-F`,\n-`-target`, `-mmacosx-version-min`, and `--sysroot`, which are all necessary when\n-building for macOS.\n-\n-Apple's version of `binutils` (called `cctools`) contains lots of functionality missing in the\n-FSF's `binutils`. In addition to extra linker options for frameworks and sysroots, several\n-other tools are needed as well such as `install_name_tool`, `lipo`, and `nmedit`. These\n-do not build under Linux, so they have been patched to do so. The work here was used as\n-a starting point: [mingwandroid/toolchain4](https://github.com/mingwandroid/toolchain4).\n-\n-In order to build a working toolchain, the following source packages are needed from\n-Apple: `cctools`, `dyld`, and `ld64`.\n-\n-These tools inject timestamps by default, which produce non-deterministic binaries. The\n-`ZERO_AR_DATE` environment variable is used to disable that.\n-\n-This version of `cctools` has been patched to use the current version of `clang`'s headers\n-and its `libLTO.so` rather than those from `llvmgcc`, as it was originally done in `toolchain4`.\n-\n-To complicate things further, all builds must target an Apple SDK. These SDKs are free to\n-download, but not redistributable. To obtain it, register for an Apple Developer Account,\n-then download [Xcode_11.3.1](https://download.developer.apple.com/Developer_Tools/Xcode_11.3.1/Xcode_11.3.1.xip).\n-\n-This file is many gigabytes in size, but most (but not all) of what we need is\n-contained only in a single directory:\n-\n-```bash\n-Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk\n-```\n-\n-See the SDK Extraction notes above for how to obtain it.\n-\n-The Gitian descriptors build 2 sets of files: Linux tools, then Apple binaries which are\n-created using these tools. The build process has been designed to avoid including the\n-SDK's files in Gitian's outputs. All interim tarballs are fully deterministic and may be freely\n-redistributed.\n-\n-`genisoimage` is used to create the initial DMG. It is not deterministic as-is, so it has been\n-patched. A system `genisoimage` will work fine, but it will not be deterministic because\n-the file-order will change between invocations. The patch can be seen here: [cdrkit-deterministic.patch](https://github.com/bitcoin/bitcoin/blob/master/depends/patches/native_cdrkit/cdrkit-deterministic.patch).\n-No effort was made to fix this cleanly, so it likely leaks memory badly, however it's only used for\n-a single invocation, so that's no real concern.\n-\n-`genisoimage` cannot compress DMGs, so afterwards, the DMG tool from the\n-`libdmg-hfsplus` project is used to compress it. There are several bugs in this tool and its\n-maintainer has seemingly abandoned the project.\n-\n-The DMG tool has the ability to create DMGs from scratch as well, but this functionality is\n-broken. Only the compression feature is currently used. Ideally, the creation could be fixed\n-and `genisoimage` would no longer be necessary.\n-\n-Background images and other features can be added to DMG files by inserting a\n-`.DS_Store` before creation. This is generated by the script `contrib/macdeploy/custom_dsstore.py`.\n-\n-As of OS X 10.9 Mavericks, using an Apple-blessed key to sign binaries is a requirement in\n-order to satisfy the new Gatekeeper requirements. Because this private key cannot be\n-shared, we'll have to be a bit creative in order for the build process to remain somewhat\n-deterministic. Here's how it works:\n-\n-- Builders use Gitian to create an unsigned release. This outputs an unsigned DMG which\n-  users may choose to bless and run. It also outputs an unsigned app structure in the form\n-  of a tarball, which also contains all of the tools that have been previously (deterministically)\n-  built in order to create a final DMG.\n-- The Apple keyholder uses this unsigned app to create a detached signature, using the\n-  script that is also included there. Detached signatures are available from this [repository](https://github.com/bitcoin-core/bitcoin-detached-sigs).\n-- Builders feed the unsigned app + detached signature back into Gitian. It uses the\n-  pre-built tools to recombine the pieces into a deterministic DMG."
      },
      {
        "sha": "9c330af45142e011e78b4b86874ac4b3457ed457",
        "filename": "contrib/macdeploy/background.svg",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/macdeploy/background.svg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/macdeploy/background.svg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.svg?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,34 +0,0 @@\n-<?xml version=\"1.0\" standalone=\"no\"?>\n-<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 20010904//EN\"\n- \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">\n-<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1000pt\" height=\"640pt\" viewBox=\"0 0 1000 640\" preserveAspectRatio=\"xMidYMid meet\">\n-\t<!-- kate: space-indent off;\n-\tCopyright (c) 2015 The Bitcoin Core developers\n-\tDistributed under the MIT software license, see the accompanying\n-\tfile COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\t-->\n-\t<style type=\"text/css\"><![CDATA[\n-\t\ttext {\n-\t\t\tfont-family: \"Tuffy\";\n-\t\t\tfont-size: 86px;\n-\t\t\tfill: gray;\n-\t\t\ttext-anchor: middle;\n-\t\t}\n-\t]]></style>\n-\t<defs>\n-\t\t<linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n-\t\t\t<stop offset=\"0%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n-\t\t\t<stop offset=\"33%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n-\t\t\t<stop offset=\"80%\" style=\"stop-color:rgb(205,205,205);stop-opacity:1\" />\n-\t\t\t<stop offset=\"100%\" style=\"stop-color:rgb(204,204,204);stop-opacity:1\" />\n-\t\t</linearGradient>\n-\t</defs>\n-\t<rect width=\"1000\" height=\"640\" style=\"fill:url(#gradient);stroke-width:0\" />\n-\t<g transform=\"translate(500,0) scale(0.9, 1)\">\n-\t\t<text x=\"0\" y=\"114\">PACKAGE_NAME</text>\n-\t</g>\n-\t<g transform=\"translate(0.000000,640.000000) scale(0.100000,-0.100000)\"\n-\tfill=\"#000000\" stroke=\"none\">\n-\t\t<path d=\"M4995 3705 c-24 -23 -25 -29 -25 -165 l0 -140 -306 0 -306 0 -29 -29 c-29 -29 -29 -31 -29 -141 0 -110 0 -112 29 -141 l29 -29 306 0 306 0 0 -140 c0 -136 1 -142 25 -165 16 -17 35 -25 57 -25 29 0 72 32 306 226 180 149 274 233 278 250 13 53 -2 70 -278 299 -235 194 -277 225 -306 225 -22 0 -41 -8 -57 -25z\" fixlter=\"url(#glow)\"/>\n-\t</g>\n-</svg>"
      },
      {
        "sha": "dc1c1882dd5a21a5358c6f3a65e7c70e22e295a1",
        "filename": "contrib/macdeploy/custom_dsstore.py",
        "status": "removed",
        "additions": 0,
        "deletions": 59,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/macdeploy/custom_dsstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/macdeploy/custom_dsstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/custom_dsstore.py?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,59 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2013-2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-import biplist\n-from ds_store import DSStore\n-from mac_alias import Alias\n-import sys\n-\n-output_file = sys.argv[1]\n-package_name_ns = sys.argv[2]\n-\n-ds = DSStore.open(output_file, 'w+')\n-ds['.']['bwsp'] = {\n-    'ShowStatusBar': False,\n-    'WindowBounds': '{{300, 280}, {500, 343}}',\n-    'ContainerShowSidebar': False,\n-    'SidebarWidth': 0,\n-    'ShowTabView': False,\n-    'PreviewPaneVisibility': False,\n-    'ShowToolbar': False,\n-    'ShowSidebar': False,\n-    'ShowPathbar': True\n-}\n-\n-icvp = {\n-    'gridOffsetX': 0.0,\n-    'textSize': 12.0,\n-    'viewOptionsVersion': 1,\n-    'backgroundImageAlias': b'\\x00\\x00\\x00\\x00\\x02\\x1e\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd1\\x94\\\\\\xb0H+\\x00\\x05\\x00\\x00\\x00\\x98\\x0fbackground.tiff\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x99\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x00\\x00\\r\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b.background\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x98\\x00\\x0e\\x00 \\x00\\x0f\\x00b\\x00a\\x00c\\x00k\\x00g\\x00r\\x00o\\x00u\\x00n\\x00d\\x00.\\x00t\\x00i\\x00f\\x00f\\x00\\x0f\\x00\\x02\\x00\\x00\\x00\\x12\\x00\\x1c/.background/background.tiff\\x00\\x14\\x01\\x06\\x00\\x00\\x00\\x00\\x01\\x06\\x00\\x02\\x00\\x00\\x0cMacintosh HD\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xce\\x97\\xab\\xc3H+\\x00\\x00\\x01\\x88[\\x88\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02u\\xab\\x8d\\xd1\\x94\\\\\\xb0devrddsk\\xff\\xff\\xff\\xff\\x00\\x00\\t \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07bitcoin\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xce\\x97\\xab\\xc3\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x01\\x00\\x14\\x01\\x88[\\x88\\x00\\x16\\xa9\\t\\x00\\x08\\xfaR\\x00\\x08\\xfaQ\\x00\\x02d\\x8e\\x00\\x0e\\x00\\x02\\x00\\x00\\x00\\x0f\\x00\\x1a\\x00\\x0c\\x00M\\x00a\\x00c\\x00i\\x00n\\x00t\\x00o\\x00s\\x00h\\x00 \\x00H\\x00D\\x00\\x13\\x00\\x01/\\x00\\x00\\x15\\x00\\x02\\x00\\x14\\xff\\xff\\x00\\x00\\xff\\xff\\x00\\x00',\n-    'backgroundColorBlue': 1.0,\n-    'iconSize': 96.0,\n-    'backgroundColorGreen': 1.0,\n-    'arrangeBy': 'none',\n-    'showIconPreview': True,\n-    'gridSpacing': 100.0,\n-    'gridOffsetY': 0.0,\n-    'showItemInfo': False,\n-    'labelOnBottom': True,\n-    'backgroundType': 2,\n-    'backgroundColorRed': 1.0\n-}\n-alias = Alias.from_bytes(icvp['backgroundImageAlias'])\n-alias.volume.name = package_name_ns\n-alias.volume.posix_path = '/Volumes/' + package_name_ns\n-alias.volume.disk_image_alias.target.filename = package_name_ns + '.temp.dmg'\n-alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00bitcoinuser:\\x00Documents:\\x00bitcoin:\\x00bitcoin:\\x00' + package_name_ns + '.temp.dmg'\n-alias.volume.disk_image_alias.target.posix_path = 'Users/bitcoinuser/Documents/bitcoin/bitcoin/' + package_name_ns + '.temp.dmg'\n-alias.target.carbon_path = package_name_ns + ':.background:\\x00background.tiff'\n-icvp['backgroundImageAlias'] = biplist.Data(alias.to_bytes())\n-ds['.']['icvp'] = icvp\n-\n-ds['.']['vSrn'] = ('long', 1)\n-\n-ds['Applications']['Iloc'] = (370, 156)\n-ds['Bitcoin-Qt.app']['Iloc'] = (128, 156)\n-\n-ds.flush()\n-ds.close()"
      },
      {
        "sha": "5c5a85d3fe1861a4e5d3300faa04480f17846975",
        "filename": "contrib/macdeploy/detached-sig-apply.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 57,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/macdeploy/detached-sig-apply.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/macdeploy/detached-sig-apply.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-apply.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,57 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2014-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-set -e\n-\n-UNSIGNED=\"$1\"\n-SIGNATURE=\"$2\"\n-ARCH=x86_64\n-ROOTDIR=dist\n-TEMPDIR=signed.temp\n-OUTDIR=signed-app\n-\n-if [ -z \"$UNSIGNED\" ]; then\n-  echo \"usage: $0 <unsigned app> <signature>\"\n-  exit 1\n-fi\n-\n-if [ -z \"$SIGNATURE\" ]; then\n-  echo \"usage: $0 <unsigned app> <signature>\"\n-  exit 1\n-fi\n-\n-rm -rf ${TEMPDIR} && mkdir -p ${TEMPDIR}\n-tar -C ${TEMPDIR} -xf ${UNSIGNED}\n-cp -rf \"${SIGNATURE}\"/* ${TEMPDIR}\n-\n-if [ -z \"${PAGESTUFF}\" ]; then\n-  PAGESTUFF=${TEMPDIR}/pagestuff\n-fi\n-\n-if [ -z \"${CODESIGN_ALLOCATE}\" ]; then\n-  CODESIGN_ALLOCATE=${TEMPDIR}/codesign_allocate\n-fi\n-\n-find ${TEMPDIR} -name \"*.sign\" | while read i; do\n-  SIZE=$(stat -c %s \"${i}\")\n-  TARGET_FILE=\"$(echo \"${i}\" | sed 's/\\.sign$//')\"\n-\n-  echo \"Allocating space for the signature of size ${SIZE} in ${TARGET_FILE}\"\n-  ${CODESIGN_ALLOCATE} -i \"${TARGET_FILE}\" -a ${ARCH} ${SIZE} -o \"${i}.tmp\"\n-\n-  OFFSET=$(${PAGESTUFF} \"${i}.tmp\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g')\n-  if [ -z ${QUIET} ]; then\n-    echo \"Attaching signature at offset ${OFFSET}\"\n-  fi\n-\n-  dd if=\"$i\" of=\"${i}.tmp\" bs=1 seek=${OFFSET} count=${SIZE} 2>/dev/null\n-  mv \"${i}.tmp\" \"${TARGET_FILE}\"\n-  rm \"${i}\"\n-  echo \"Success.\"\n-done\n-mv ${TEMPDIR}/${ROOTDIR} ${OUTDIR}\n-rm -rf ${TEMPDIR}\n-echo \"Signed: ${OUTDIR}\""
      },
      {
        "sha": "31a97f0a24c7238a3c4c53d79e0fe34a783d2a6d",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,52 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2014-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-set -e\n-\n-ROOTDIR=dist\n-BUNDLE=\"${ROOTDIR}/Bitcoin-Qt.app\"\n-CODESIGN=codesign\n-TEMPDIR=sign.temp\n-TEMPLIST=${TEMPDIR}/signatures.txt\n-OUT=signature-osx.tar.gz\n-OUTROOT=osx\n-\n-if [ -z \"$1\" ]; then\n-  echo \"usage: $0 <codesign args>\"\n-  echo \"example: $0 -s MyIdentity\"\n-  exit 1\n-fi\n-\n-rm -rf ${TEMPDIR} ${TEMPLIST}\n-mkdir -p ${TEMPDIR}\n-\n-${CODESIGN} -f --file-list ${TEMPLIST} \"$@\" \"${BUNDLE}\"\n-\n-grep -v CodeResources < \"${TEMPLIST}\" | while read i; do\n-  TARGETFILE=\"${BUNDLE}/$(echo \"${i}\" | sed \"s|.*${BUNDLE}/||\")\"\n-  SIZE=$(pagestuff \"$i\" -p | tail -2 | grep size | sed 's/[^0-9]*//g')\n-  OFFSET=$(pagestuff \"$i\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g')\n-  SIGNFILE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}.sign\"\n-  DIRNAME=\"$(dirname \"${SIGNFILE}\")\"\n-  mkdir -p \"${DIRNAME}\"\n-  echo \"Adding detached signature for: ${TARGETFILE}. Size: ${SIZE}. Offset: ${OFFSET}\"\n-  dd if=\"$i\" of=\"${SIGNFILE}\" bs=1 skip=${OFFSET} count=${SIZE} 2>/dev/null\n-done\n-\n-grep CodeResources < \"${TEMPLIST}\" | while read i; do\n-  TARGETFILE=\"${BUNDLE}/$(echo \"${i}\" | sed \"s|.*${BUNDLE}/||\")\"\n-  RESOURCE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}\"\n-  DIRNAME=\"$(dirname \"${RESOURCE}\")\"\n-  mkdir -p \"${DIRNAME}\"\n-  echo \"Adding resource for: \\\"${TARGETFILE}\\\"\"\n-  cp \"${i}\" \"${RESOURCE}\"\n-done\n-\n-rm ${TEMPLIST}\n-\n-tar -C \"${TEMPDIR}\" -czf \"${OUT}\" .\n-rm -rf \"${TEMPDIR}\"\n-echo \"Created ${OUT}\""
      },
      {
        "sha": "3c7bdf4217c5c9ae13aa9dd3cff55cdb9f0e4577",
        "filename": "contrib/macdeploy/extract-osx-sdk.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/macdeploy/extract-osx-sdk.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/macdeploy/extract-osx-sdk.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/extract-osx-sdk.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,34 +0,0 @@\n-#!/usr/bin/env bash\n-# Copyright (c) 2016-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-set -e\n-\n-INPUTFILE=\"Xcode_7.3.1.dmg\"\n-HFSFILENAME=\"5.hfs\"\n-SDKDIR=\"Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk\"\n-\n-7z x \"${INPUTFILE}\" \"${HFSFILENAME}\"\n-SDKNAME=\"$(basename \"${SDKDIR}\")\"\n-SDKDIRINODE=$(ifind -n \"${SDKDIR}\" \"${HFSFILENAME}\")\n-fls \"${HFSFILENAME}\" -rpF ${SDKDIRINODE} |\n- while read type inode filename; do\n-\tinode=\"${inode::-1}\"\n-\tif [ \"${filename:0:14}\" = \"usr/share/man/\" ]; then\n-\t\tcontinue\n-\tfi\n-\tfilename=\"${SDKNAME}/$filename\"\n-\techo \"Extracting $filename ...\"\n-\tmkdir -p \"$(dirname \"$filename\")\"\n-\tif [ \"$type\" = \"l/l\" ]; then\n-\t\tln -s \"$(icat \"${HFSFILENAME}\" $inode)\" \"$filename\"\n-\telse\n-\t\ticat \"${HFSFILENAME}\" $inode >\"$filename\"\n-\tfi\n-done\n-echo \"Building ${SDKNAME}.tar.gz ...\"\n-MTIME=\"$(istat \"${HFSFILENAME}\" \"${SDKDIRINODE}\" | perl -nle 'm/Content Modified:\\s+(.*?)\\s\\(/ && print $1')\"\n-find \"${SDKNAME}\" | sort | tar --no-recursion --mtime=\"${MTIME}\" --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > \"${SDKNAME}.tar.gz\"\n-echo 'All done!'"
      },
      {
        "sha": "457d8f5e645c8e9a6f1a55edf410599db065feed",
        "filename": "contrib/macdeploy/gen-sdk",
        "status": "removed",
        "additions": 0,
        "deletions": 94,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/macdeploy/gen-sdk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/macdeploy/gen-sdk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/gen-sdk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,94 +0,0 @@\n-#!/usr/bin/env python3\n-import argparse\n-import plistlib\n-import pathlib\n-import sys\n-import tarfile\n-import gzip\n-import os\n-import contextlib\n-\n-@contextlib.contextmanager\n-def cd(path):\n-    \"\"\"Context manager that restores PWD even if an exception was raised.\"\"\"\n-    old_pwd = os.getcwd()\n-    os.chdir(str(path))\n-    try:\n-        yield\n-    finally:\n-        os.chdir(old_pwd)\n-\n-def run():\n-    parser = argparse.ArgumentParser(\n-        description=__doc__, formatter_class=argparse.RawTextHelpFormatter)\n-\n-    parser.add_argument('xcode_app', metavar='XCODEAPP', nargs=1)\n-    parser.add_argument(\"-o\", metavar='OUTSDKTGZ', nargs=1, dest='out_sdktgz', required=False)\n-\n-    args = parser.parse_args()\n-\n-    xcode_app = pathlib.Path(args.xcode_app[0]).resolve()\n-    assert xcode_app.is_dir(), \"The supplied Xcode.app path '{}' either does not exist or is not a directory\".format(xcode_app)\n-\n-    xcode_app_plist = xcode_app.joinpath(\"Contents/version.plist\")\n-    with xcode_app_plist.open('rb') as fp:\n-        pl = plistlib.load(fp)\n-        xcode_version = pl['CFBundleShortVersionString']\n-        xcode_build_id = pl['ProductBuildVersion']\n-    print(\"Found Xcode (version: {xcode_version}, build id: {xcode_build_id})\".format(xcode_version=xcode_version, xcode_build_id=xcode_build_id))\n-\n-    sdk_dir = xcode_app.joinpath(\"Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk\")\n-    sdk_plist = sdk_dir.joinpath(\"System/Library/CoreServices/SystemVersion.plist\")\n-    with sdk_plist.open('rb') as fp:\n-        pl = plistlib.load(fp)\n-        sdk_version = pl['ProductVersion']\n-        sdk_build_id = pl['ProductBuildVersion']\n-    print(\"Found MacOSX SDK (version: {sdk_version}, build id: {sdk_build_id})\".format(sdk_version=sdk_version, sdk_build_id=sdk_build_id))\n-\n-    out_name = \"Xcode-{xcode_version}-{xcode_build_id}-extracted-SDK-with-libcxx-headers\".format(xcode_version=xcode_version, xcode_build_id=xcode_build_id)\n-\n-    xcode_libcxx_dir = xcode_app.joinpath(\"Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1\")\n-    assert xcode_libcxx_dir.is_dir()\n-\n-    if args.out_sdktgz:\n-        out_sdktgz_path = pathlib.Path(args.out_sdktgz_path)\n-    else:\n-        # Construct our own out_sdktgz if not specified on the command line\n-        out_sdktgz_path = pathlib.Path(\"./{}.tar.gz\".format(out_name))\n-\n-    def tarfp_add_with_base_change(tarfp, dir_to_add, alt_base_dir):\n-        \"\"\"Add all files in dir_to_add to tarfp, but prepent MEMBERPREFIX to the files'\n-        names\n-\n-        e.g. if the only file under /root/bazdir is /root/bazdir/qux, invoking:\n-\n-            tarfp_add_with_base_change(tarfp, \"foo/bar\", \"/root/bazdir\")\n-\n-        would result in the following members being added to tarfp:\n-\n-            foo/bar/             -> corresponding to /root/bazdir\n-            foo/bar/qux          -> corresponding to /root/bazdir/qux\n-\n-        \"\"\"\n-        def change_tarinfo_base(tarinfo):\n-            if tarinfo.name and tarinfo.name.startswith(\"./\"):\n-                tarinfo.name = str(pathlib.Path(alt_base_dir, tarinfo.name))\n-            if tarinfo.linkname and tarinfo.linkname.startswith(\"./\"):\n-                tarinfo.linkname = str(pathlib.Path(alt_base_dir, tarinfo.linkname))\n-            return tarinfo\n-        with cd(dir_to_add):\n-            tarfp.add(\".\", recursive=True, filter=change_tarinfo_base)\n-\n-    print(\"Creating output .tar.gz file...\")\n-    with out_sdktgz_path.open(\"wb\") as fp:\n-        with gzip.GzipFile(fileobj=fp, compresslevel=9, mtime=0) as gzf:\n-            with tarfile.open(mode=\"w\", fileobj=gzf) as tarfp:\n-                print(\"Adding MacOSX SDK {} files...\".format(sdk_version))\n-                tarfp_add_with_base_change(tarfp, sdk_dir, out_name)\n-                print(\"Adding libc++ headers...\")\n-                tarfp_add_with_base_change(tarfp, xcode_libcxx_dir, \"{}/usr/include/c++/v1\".format(out_name))\n-    print(\"Done! Find the resulting gzipped tarball at:\")\n-    print(out_sdktgz_path.resolve())\n-\n-if __name__ == '__main__':\n-    run()"
      },
      {
        "sha": "524104398be6ea96e05f7506a6c493a686fa998d",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "removed",
        "additions": 0,
        "deletions": 909,
        "changes": 909,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,909 +0,0 @@\n-#!/usr/bin/env python3\n-#\n-# Copyright (C) 2011  Patrick \"p2k\" Schneider <me@p2k-network.org>\n-#\n-# This program is free software: you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation, either version 3 of the License, or\n-# (at your option) any later version.\n-#\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-#\n-\n-import subprocess, sys, re, os, shutil, stat, os.path, time\n-from string import Template\n-from argparse import ArgumentParser\n-from typing import List, Optional\n-\n-# This is ported from the original macdeployqt with modifications\n-\n-class FrameworkInfo(object):\n-    def __init__(self):\n-        self.frameworkDirectory = \"\"\n-        self.frameworkName = \"\"\n-        self.frameworkPath = \"\"\n-        self.binaryDirectory = \"\"\n-        self.binaryName = \"\"\n-        self.binaryPath = \"\"\n-        self.version = \"\"\n-        self.installName = \"\"\n-        self.deployedInstallName = \"\"\n-        self.sourceFilePath = \"\"\n-        self.destinationDirectory = \"\"\n-        self.sourceResourcesDirectory = \"\"\n-        self.sourceVersionContentsDirectory = \"\"\n-        self.sourceContentsDirectory = \"\"\n-        self.destinationResourcesDirectory = \"\"\n-        self.destinationVersionContentsDirectory = \"\"\n-    \n-    def __eq__(self, other):\n-        if self.__class__ == other.__class__:\n-            return self.__dict__ == other.__dict__\n-        else:\n-            return False\n-    \n-    def __str__(self):\n-        return \"\"\" Framework name: {}\n- Framework directory: {}\n- Framework path: {}\n- Binary name: {}\n- Binary directory: {}\n- Binary path: {}\n- Version: {}\n- Install name: {}\n- Deployed install name: {}\n- Source file Path: {}\n- Deployed Directory (relative to bundle): {}\n-\"\"\".format(self.frameworkName,\n-       self.frameworkDirectory,\n-       self.frameworkPath,\n-       self.binaryName,\n-       self.binaryDirectory,\n-       self.binaryPath,\n-       self.version,\n-       self.installName,\n-       self.deployedInstallName,\n-       self.sourceFilePath,\n-       self.destinationDirectory)\n-    \n-    def isDylib(self):\n-        return self.frameworkName.endswith(\".dylib\")\n-    \n-    def isQtFramework(self):\n-        if self.isDylib():\n-            return self.frameworkName.startswith(\"libQt\")\n-        else:\n-            return self.frameworkName.startswith(\"Qt\")\n-    \n-    reOLine = re.compile(r'^(.+) \\(compatibility version [0-9.]+, current version [0-9.]+\\)$')\n-    bundleFrameworkDirectory = \"Contents/Frameworks\"\n-    bundleBinaryDirectory = \"Contents/MacOS\"\n-    \n-    @classmethod\n-    def fromOtoolLibraryLine(cls, line: str) -> Optional['FrameworkInfo']:\n-        # Note: line must be trimmed\n-        if line == \"\":\n-            return None\n-        \n-        # Don't deploy system libraries (exception for libQtuitools and libQtlucene).\n-        if line.startswith(\"/System/Library/\") or line.startswith(\"@executable_path\") or (line.startswith(\"/usr/lib/\") and \"libQt\" not in line):\n-            return None\n-        \n-        m = cls.reOLine.match(line)\n-        if m is None:\n-            raise RuntimeError(\"otool line could not be parsed: \" + line)\n-        \n-        path = m.group(1)\n-        \n-        info = cls()\n-        info.sourceFilePath = path\n-        info.installName = path\n-        \n-        if path.endswith(\".dylib\"):\n-            dirname, filename = os.path.split(path)\n-            info.frameworkName = filename\n-            info.frameworkDirectory = dirname\n-            info.frameworkPath = path\n-            \n-            info.binaryDirectory = dirname\n-            info.binaryName = filename\n-            info.binaryPath = path\n-            info.version = \"-\"\n-            \n-            info.installName = path\n-            info.deployedInstallName = \"@executable_path/../Frameworks/\" + info.binaryName\n-            info.sourceFilePath = path\n-            info.destinationDirectory = cls.bundleFrameworkDirectory\n-        else:\n-            parts = path.split(\"/\")\n-            i = 0\n-            # Search for the .framework directory\n-            for part in parts:\n-                if part.endswith(\".framework\"):\n-                    break\n-                i += 1\n-            if i == len(parts):\n-                raise RuntimeError(\"Could not find .framework or .dylib in otool line: \" + line)\n-            \n-            info.frameworkName = parts[i]\n-            info.frameworkDirectory = \"/\".join(parts[:i])\n-            info.frameworkPath = os.path.join(info.frameworkDirectory, info.frameworkName)\n-            \n-            info.binaryName = parts[i+3]\n-            info.binaryDirectory = \"/\".join(parts[i+1:i+3])\n-            info.binaryPath = os.path.join(info.binaryDirectory, info.binaryName)\n-            info.version = parts[i+2]\n-            \n-            info.deployedInstallName = \"@executable_path/../Frameworks/\" + os.path.join(info.frameworkName, info.binaryPath)\n-            info.destinationDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, info.binaryDirectory)\n-            \n-            info.sourceResourcesDirectory = os.path.join(info.frameworkPath, \"Resources\")\n-            info.sourceContentsDirectory = os.path.join(info.frameworkPath, \"Contents\")\n-            info.sourceVersionContentsDirectory = os.path.join(info.frameworkPath, \"Versions\", info.version, \"Contents\")\n-            info.destinationResourcesDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Resources\")\n-            info.destinationVersionContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Versions\", info.version, \"Contents\")\n-        \n-        return info\n-\n-class ApplicationBundleInfo(object):\n-    def __init__(self, path: str):\n-        self.path = path\n-        appName = \"Bitcoin-Qt\"\n-        self.binaryPath = os.path.join(path, \"Contents\", \"MacOS\", appName)\n-        if not os.path.exists(self.binaryPath):\n-            raise RuntimeError(\"Could not find bundle binary for \" + path)\n-        self.resourcesPath = os.path.join(path, \"Contents\", \"Resources\")\n-        self.pluginPath = os.path.join(path, \"Contents\", \"PlugIns\")\n-\n-class DeploymentInfo(object):\n-    def __init__(self):\n-        self.qtPath = None\n-        self.pluginPath = None\n-        self.deployedFrameworks = []\n-    \n-    def detectQtPath(self, frameworkDirectory: str):\n-        parentDir = os.path.dirname(frameworkDirectory)\n-        if os.path.exists(os.path.join(parentDir, \"translations\")):\n-            # Classic layout, e.g. \"/usr/local/Trolltech/Qt-4.x.x\"\n-            self.qtPath = parentDir\n-        else:\n-            self.qtPath = os.getenv(\"QTDIR\", None)\n-\n-        if self.qtPath is not None:\n-            pluginPath = os.path.join(self.qtPath, \"plugins\")\n-            if os.path.exists(pluginPath):\n-                self.pluginPath = pluginPath\n-    \n-    def usesFramework(self, name: str) -> bool:\n-        nameDot = \"{}.\".format(name)\n-        libNameDot = \"lib{}.\".format(name)\n-        for framework in self.deployedFrameworks:\n-            if framework.endswith(\".framework\"):\n-                if framework.startswith(nameDot):\n-                    return True\n-            elif framework.endswith(\".dylib\"):\n-                if framework.startswith(libNameDot):\n-                    return True\n-        return False\n-\n-def getFrameworks(binaryPath: str, verbose: int) -> List[FrameworkInfo]:\n-    if verbose >= 3:\n-        print(\"Inspecting with otool: \" + binaryPath)\n-    otoolbin=os.getenv(\"OTOOL\", \"otool\")\n-    otool = subprocess.Popen([otoolbin, \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)\n-    o_stdout, o_stderr = otool.communicate()\n-    if otool.returncode != 0:\n-        if verbose >= 1:\n-            sys.stderr.write(o_stderr)\n-            sys.stderr.flush()\n-            raise RuntimeError(\"otool failed with return code {}\".format(otool.returncode))\n-\n-    otoolLines = o_stdout.split(\"\\n\")\n-    otoolLines.pop(0) # First line is the inspected binary\n-    if \".framework\" in binaryPath or binaryPath.endswith(\".dylib\"):\n-        otoolLines.pop(0) # Frameworks and dylibs list themselves as a dependency.\n-    \n-    libraries = []\n-    for line in otoolLines:\n-        line = line.replace(\"@loader_path\", os.path.dirname(binaryPath))\n-        info = FrameworkInfo.fromOtoolLibraryLine(line.strip())\n-        if info is not None:\n-            if verbose >= 3:\n-                print(\"Found framework:\")\n-                print(info)\n-            libraries.append(info)\n-    \n-    return libraries\n-\n-def runInstallNameTool(action: str, *args):\n-    installnametoolbin=os.getenv(\"INSTALLNAMETOOL\", \"install_name_tool\")\n-    subprocess.check_call([installnametoolbin, \"-\"+action] + list(args))\n-\n-def changeInstallName(oldName: str, newName: str, binaryPath: str, verbose: int):\n-    if verbose >= 3:\n-        print(\"Using install_name_tool:\")\n-        print(\" in\", binaryPath)\n-        print(\" change reference\", oldName)\n-        print(\" to\", newName)\n-    runInstallNameTool(\"change\", oldName, newName, binaryPath)\n-\n-def changeIdentification(id: str, binaryPath: str, verbose: int):\n-    if verbose >= 3:\n-        print(\"Using install_name_tool:\")\n-        print(\" change identification in\", binaryPath)\n-        print(\" to\", id)\n-    runInstallNameTool(\"id\", id, binaryPath)\n-\n-def runStrip(binaryPath: str, verbose: int):\n-    stripbin=os.getenv(\"STRIP\", \"strip\")\n-    if verbose >= 3:\n-        print(\"Using strip:\")\n-        print(\" stripped\", binaryPath)\n-    subprocess.check_call([stripbin, \"-x\", binaryPath])\n-\n-def copyFramework(framework: FrameworkInfo, path: str, verbose: int) -> Optional[str]:\n-    if framework.sourceFilePath.startswith(\"Qt\"):\n-        #standard place for Nokia Qt installer's frameworks\n-        fromPath = \"/Library/Frameworks/\" + framework.sourceFilePath\n-    else:\n-        fromPath = framework.sourceFilePath\n-    toDir = os.path.join(path, framework.destinationDirectory)\n-    toPath = os.path.join(toDir, framework.binaryName)\n-    \n-    if not os.path.exists(fromPath):\n-        raise RuntimeError(\"No file at \" + fromPath)\n-    \n-    if os.path.exists(toPath):\n-        return None # Already there\n-    \n-    if not os.path.exists(toDir):\n-        os.makedirs(toDir)\n-    \n-    shutil.copy2(fromPath, toPath)\n-    if verbose >= 3:\n-        print(\"Copied:\", fromPath)\n-        print(\" to:\", toPath)\n-\n-    permissions = os.stat(toPath)\n-    if not permissions.st_mode & stat.S_IWRITE:\n-      os.chmod(toPath, permissions.st_mode | stat.S_IWRITE)\n-\n-    if not framework.isDylib(): # Copy resources for real frameworks\n-\n-        linkfrom = os.path.join(path, \"Contents\",\"Frameworks\", framework.frameworkName, \"Versions\", \"Current\")\n-        linkto = framework.version\n-        if not os.path.exists(linkfrom):\n-            os.symlink(linkto, linkfrom)\n-            if verbose >= 2:\n-                print(\"Linked:\", linkfrom, \"->\", linkto)\n-        fromResourcesDir = framework.sourceResourcesDirectory\n-        if os.path.exists(fromResourcesDir):\n-            toResourcesDir = os.path.join(path, framework.destinationResourcesDirectory)\n-            shutil.copytree(fromResourcesDir, toResourcesDir, symlinks=True)\n-            if verbose >= 3:\n-                print(\"Copied resources:\", fromResourcesDir)\n-                print(\" to:\", toResourcesDir)\n-        fromContentsDir = framework.sourceVersionContentsDirectory\n-        if not os.path.exists(fromContentsDir):\n-            fromContentsDir = framework.sourceContentsDirectory\n-        if os.path.exists(fromContentsDir):\n-            toContentsDir = os.path.join(path, framework.destinationVersionContentsDirectory)\n-            shutil.copytree(fromContentsDir, toContentsDir, symlinks=True)\n-            if verbose >= 3:\n-                print(\"Copied Contents:\", fromContentsDir)\n-                print(\" to:\", toContentsDir)\n-    elif framework.frameworkName.startswith(\"libQtGui\"): # Copy qt_menu.nib (applies to non-framework layout)\n-        qtMenuNibSourcePath = os.path.join(framework.frameworkDirectory, \"Resources\", \"qt_menu.nib\")\n-        qtMenuNibDestinationPath = os.path.join(path, \"Contents\", \"Resources\", \"qt_menu.nib\")\n-        if os.path.exists(qtMenuNibSourcePath) and not os.path.exists(qtMenuNibDestinationPath):\n-            shutil.copytree(qtMenuNibSourcePath, qtMenuNibDestinationPath, symlinks=True)\n-            if verbose >= 3:\n-                print(\"Copied for libQtGui:\", qtMenuNibSourcePath)\n-                print(\" to:\", qtMenuNibDestinationPath)\n-    \n-    return toPath\n-\n-def deployFrameworks(frameworks: List[FrameworkInfo], bundlePath: str, binaryPath: str, strip: bool, verbose: int, deploymentInfo: Optional[DeploymentInfo] = None) -> DeploymentInfo:\n-    if deploymentInfo is None:\n-        deploymentInfo = DeploymentInfo()\n-    \n-    while len(frameworks) > 0:\n-        framework = frameworks.pop(0)\n-        deploymentInfo.deployedFrameworks.append(framework.frameworkName)\n-        \n-        if verbose >= 2:\n-            print(\"Processing\", framework.frameworkName, \"...\")\n-        \n-        # Get the Qt path from one of the Qt frameworks\n-        if deploymentInfo.qtPath is None and framework.isQtFramework():\n-            deploymentInfo.detectQtPath(framework.frameworkDirectory)\n-        \n-        if framework.installName.startswith(\"@executable_path\") or framework.installName.startswith(bundlePath):\n-            if verbose >= 2:\n-                print(framework.frameworkName, \"already deployed, skipping.\")\n-            continue\n-        \n-        # install_name_tool the new id into the binary\n-        changeInstallName(framework.installName, framework.deployedInstallName, binaryPath, verbose)\n-        \n-        # Copy framework to app bundle.\n-        deployedBinaryPath = copyFramework(framework, bundlePath, verbose)\n-        # Skip the rest if already was deployed.\n-        if deployedBinaryPath is None:\n-            continue\n-        \n-        if strip:\n-            runStrip(deployedBinaryPath, verbose)\n-        \n-        # install_name_tool it a new id.\n-        changeIdentification(framework.deployedInstallName, deployedBinaryPath, verbose)\n-        # Check for framework dependencies\n-        dependencies = getFrameworks(deployedBinaryPath, verbose)\n-        \n-        for dependency in dependencies:\n-            changeInstallName(dependency.installName, dependency.deployedInstallName, deployedBinaryPath, verbose)\n-            \n-            # Deploy framework if necessary.\n-            if dependency.frameworkName not in deploymentInfo.deployedFrameworks and dependency not in frameworks:\n-                frameworks.append(dependency)\n-    \n-    return deploymentInfo\n-\n-def deployFrameworksForAppBundle(applicationBundle: ApplicationBundleInfo, strip: bool, verbose: int) -> DeploymentInfo:\n-    frameworks = getFrameworks(applicationBundle.binaryPath, verbose)\n-    if len(frameworks) == 0 and verbose >= 1:\n-        print(\"Warning: Could not find any external frameworks to deploy in {}.\".format(applicationBundle.path))\n-        return DeploymentInfo()\n-    else:\n-        return deployFrameworks(frameworks, applicationBundle.path, applicationBundle.binaryPath, strip, verbose)\n-\n-def deployPlugins(appBundleInfo: ApplicationBundleInfo, deploymentInfo: DeploymentInfo, strip: bool, verbose: int):\n-    # Lookup available plugins, exclude unneeded\n-    plugins = []\n-    if deploymentInfo.pluginPath is None:\n-        return\n-    for dirpath, dirnames, filenames in os.walk(deploymentInfo.pluginPath):\n-        pluginDirectory = os.path.relpath(dirpath, deploymentInfo.pluginPath)\n-        if pluginDirectory == \"designer\":\n-            # Skip designer plugins\n-            continue\n-        elif pluginDirectory == \"printsupport\":\n-            # Skip printsupport plugins\n-            continue\n-        elif pluginDirectory == \"imageformats\":\n-            # Skip imageformats plugins\n-            continue\n-        elif pluginDirectory == \"sqldrivers\":\n-            # Deploy the sql plugins only if QtSql is in use\n-            if not deploymentInfo.usesFramework(\"QtSql\"):\n-                continue\n-        elif pluginDirectory == \"script\":\n-            # Deploy the script plugins only if QtScript is in use\n-            if not deploymentInfo.usesFramework(\"QtScript\"):\n-                continue\n-        elif pluginDirectory == \"qmltooling\" or pluginDirectory == \"qml1tooling\":\n-            # Deploy the qml plugins only if QtDeclarative is in use\n-            if not deploymentInfo.usesFramework(\"QtDeclarative\"):\n-                continue\n-        elif pluginDirectory == \"bearer\":\n-            # Deploy the bearer plugins only if QtNetwork is in use\n-            if not deploymentInfo.usesFramework(\"QtNetwork\"):\n-                continue\n-        elif pluginDirectory == \"position\":\n-            # Deploy the position plugins only if QtPositioning is in use\n-            if not deploymentInfo.usesFramework(\"QtPositioning\"):\n-                continue\n-        elif pluginDirectory == \"sensors\" or pluginDirectory == \"sensorgestures\":\n-            # Deploy the sensor plugins only if QtSensors is in use\n-            if not deploymentInfo.usesFramework(\"QtSensors\"):\n-                continue\n-        elif pluginDirectory == \"audio\" or pluginDirectory == \"playlistformats\":\n-            # Deploy the audio plugins only if QtMultimedia is in use\n-            if not deploymentInfo.usesFramework(\"QtMultimedia\"):\n-                continue\n-        elif pluginDirectory == \"mediaservice\":\n-            # Deploy the mediaservice plugins only if QtMultimediaWidgets is in use\n-            if not deploymentInfo.usesFramework(\"QtMultimediaWidgets\"):\n-                continue\n-        elif pluginDirectory == \"canbus\":\n-            # Deploy the canbus plugins only if QtSerialBus is in use\n-            if not deploymentInfo.usesFramework(\"QtSerialBus\"):\n-                continue\n-        elif pluginDirectory == \"webview\":\n-            # Deploy the webview plugins only if QtWebView is in use\n-            if not deploymentInfo.usesFramework(\"QtWebView\"):\n-                continue\n-        elif pluginDirectory == \"gamepads\":\n-            # Deploy the webview plugins only if QtGamepad is in use\n-            if not deploymentInfo.usesFramework(\"QtGamepad\"):\n-                continue\n-        elif pluginDirectory == \"geoservices\":\n-            # Deploy the webview plugins only if QtLocation is in use\n-            if not deploymentInfo.usesFramework(\"QtLocation\"):\n-                continue\n-        elif pluginDirectory == \"texttospeech\":\n-            # Deploy the texttospeech plugins only if QtTextToSpeech is in use\n-            if not deploymentInfo.usesFramework(\"QtTextToSpeech\"):\n-                continue\n-        elif pluginDirectory == \"virtualkeyboard\":\n-            # Deploy the virtualkeyboard plugins only if QtVirtualKeyboard is in use\n-            if not deploymentInfo.usesFramework(\"QtVirtualKeyboard\"):\n-                continue\n-        elif pluginDirectory == \"sceneparsers\":\n-            # Deploy the virtualkeyboard plugins only if Qt3DCore is in use\n-            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n-                continue\n-        elif pluginDirectory == \"renderplugins\":\n-            # Deploy the renderplugins plugins only if Qt3DCore is in use\n-            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n-                continue\n-        elif pluginDirectory == \"geometryloaders\":\n-            # Deploy the geometryloaders plugins only if Qt3DCore is in use\n-            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n-                continue\n-\n-        for pluginName in filenames:\n-            pluginPath = os.path.join(pluginDirectory, pluginName)\n-            if pluginName.endswith(\"_debug.dylib\"):\n-                # Skip debug plugins\n-                continue\n-            elif pluginPath == \"imageformats/libqsvg.dylib\" or pluginPath == \"iconengines/libqsvgicon.dylib\":\n-                # Deploy the svg plugins only if QtSvg is in use\n-                if not deploymentInfo.usesFramework(\"QtSvg\"):\n-                    continue\n-            elif pluginPath == \"accessible/libqtaccessiblecompatwidgets.dylib\":\n-                # Deploy accessibility for Qt3Support only if the Qt3Support is in use\n-                if not deploymentInfo.usesFramework(\"Qt3Support\"):\n-                    continue\n-            elif pluginPath == \"graphicssystems/libqglgraphicssystem.dylib\":\n-                # Deploy the opengl graphicssystem plugin only if QtOpenGL is in use\n-                if not deploymentInfo.usesFramework(\"QtOpenGL\"):\n-                    continue\n-            elif pluginPath == \"accessible/libqtaccessiblequick.dylib\":\n-                # Deploy the accessible qtquick plugin only if QtQuick is in use\n-                if not deploymentInfo.usesFramework(\"QtQuick\"):\n-                    continue\n-            elif pluginPath == \"platforminputcontexts/libqtvirtualkeyboardplugin.dylib\":\n-                # Deploy the virtualkeyboardplugin plugin only if QtVirtualKeyboard is in use\n-                if not deploymentInfo.usesFramework(\"QtVirtualKeyboard\"):\n-                    continue\n-\n-            plugins.append((pluginDirectory, pluginName))\n-    \n-    for pluginDirectory, pluginName in plugins:\n-        if verbose >= 2:\n-            print(\"Processing plugin\", os.path.join(pluginDirectory, pluginName), \"...\")\n-        \n-        sourcePath = os.path.join(deploymentInfo.pluginPath, pluginDirectory, pluginName)\n-        destinationDirectory = os.path.join(appBundleInfo.pluginPath, pluginDirectory)\n-        if not os.path.exists(destinationDirectory):\n-            os.makedirs(destinationDirectory)\n-        \n-        destinationPath = os.path.join(destinationDirectory, pluginName)\n-        shutil.copy2(sourcePath, destinationPath)\n-        if verbose >= 3:\n-            print(\"Copied:\", sourcePath)\n-            print(\" to:\", destinationPath)\n-        \n-        if strip:\n-            runStrip(destinationPath, verbose)\n-        \n-        dependencies = getFrameworks(destinationPath, verbose)\n-        \n-        for dependency in dependencies:\n-            changeInstallName(dependency.installName, dependency.deployedInstallName, destinationPath, verbose)\n-            \n-            # Deploy framework if necessary.\n-            if dependency.frameworkName not in deploymentInfo.deployedFrameworks:\n-                deployFrameworks([dependency], appBundleInfo.path, destinationPath, strip, verbose, deploymentInfo)\n-\n-qt_conf=\"\"\"[Paths]\n-Translations=Resources\n-Plugins=PlugIns\n-\"\"\"\n-\n-ap = ArgumentParser(description=\"\"\"Improved version of macdeployqt.\n-\n-Outputs a ready-to-deploy app in a folder \"dist\" and optionally wraps it in a .dmg file.\n-Note, that the \"dist\" folder will be deleted before deploying on each run.\n-\n-Optionally, Qt translation files (.qm) and additional resources can be added to the bundle.\n-\n-Also optionally signs the .app bundle; set the CODESIGNARGS environment variable to pass arguments\n-to the codesign tool.\n-E.g. CODESIGNARGS='--sign \"Developer ID Application: ...\" --keychain /encrypted/foo.keychain'\"\"\")\n-\n-ap.add_argument(\"app_bundle\", nargs=1, metavar=\"app-bundle\", help=\"application bundle to be deployed\")\n-ap.add_argument(\"-verbose\", type=int, nargs=1, default=[1], metavar=\"<0-3>\", help=\"0 = no output, 1 = error/warning (default), 2 = normal, 3 = debug\")\n-ap.add_argument(\"-no-plugins\", dest=\"plugins\", action=\"store_false\", default=True, help=\"skip plugin deployment\")\n-ap.add_argument(\"-no-strip\", dest=\"strip\", action=\"store_false\", default=True, help=\"don't run 'strip' on the binaries\")\n-ap.add_argument(\"-sign\", dest=\"sign\", action=\"store_true\", default=False, help=\"sign .app bundle with codesign tool\")\n-ap.add_argument(\"-dmg\", nargs=\"?\", const=\"\", metavar=\"basename\", help=\"create a .dmg disk image; if basename is not specified, a camel-cased version of the app name is used\")\n-ap.add_argument(\"-fancy\", nargs=1, metavar=\"plist\", default=[], help=\"make a fancy looking disk image using the given plist file with instructions; requires -dmg to work\")\n-ap.add_argument(\"-add-qt-tr\", nargs=1, metavar=\"languages\", default=[], help=\"add Qt translation files to the bundle's resources; the language list must be separated with commas, not with whitespace\")\n-ap.add_argument(\"-translations-dir\", nargs=1, metavar=\"path\", default=None, help=\"Path to Qt's translation files\")\n-ap.add_argument(\"-add-resources\", nargs=\"+\", metavar=\"path\", default=[], help=\"list of additional files or folders to be copied into the bundle's resources; must be the last argument\")\n-ap.add_argument(\"-volname\", nargs=1, metavar=\"volname\", default=[], help=\"custom volume name for dmg\")\n-\n-config = ap.parse_args()\n-\n-verbose = config.verbose[0]\n-\n-# ------------------------------------------------\n-\n-app_bundle = config.app_bundle[0]\n-\n-if not os.path.exists(app_bundle):\n-    if verbose >= 1:\n-        sys.stderr.write(\"Error: Could not find app bundle \\\"{}\\\"\\n\".format(app_bundle))\n-    sys.exit(1)\n-\n-app_bundle_name = os.path.splitext(os.path.basename(app_bundle))[0]\n-\n-# ------------------------------------------------\n-translations_dir = None\n-if config.translations_dir and config.translations_dir[0]:\n-    if os.path.exists(config.translations_dir[0]):\n-        translations_dir = config.translations_dir[0]\n-    else:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not find translation dir \\\"{}\\\"\\n\".format(translations_dir))\n-        sys.exit(1)\n-# ------------------------------------------------\n-\n-for p in config.add_resources:\n-    if verbose >= 3:\n-        print(\"Checking for \\\"%s\\\"...\" % p)\n-    if not os.path.exists(p):\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not find additional resource file \\\"{}\\\"\\n\".format(p))\n-        sys.exit(1)\n-\n-# ------------------------------------------------\n-\n-if len(config.fancy) == 1:\n-    if verbose >= 3:\n-        print(\"Fancy: Importing plistlib...\")\n-    try:\n-        import plistlib\n-    except ImportError:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not import plistlib which is required for fancy disk images.\\n\")\n-        sys.exit(1)\n-    \n-    p = config.fancy[0]\n-    if verbose >= 3:\n-        print(\"Fancy: Loading \\\"{}\\\"...\".format(p))\n-    if not os.path.exists(p):\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not find fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n-        sys.exit(1)\n-    \n-    try:\n-        with open(p, 'rb') as fp:\n-            fancy = plistlib.load(fp, fmt=plistlib.FMT_XML)\n-    except:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not parse fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n-        sys.exit(1)\n-    \n-    try:\n-        assert \"window_bounds\" not in fancy or (isinstance(fancy[\"window_bounds\"], list) and len(fancy[\"window_bounds\"]) == 4)\n-        assert \"background_picture\" not in fancy or isinstance(fancy[\"background_picture\"], str)\n-        assert \"icon_size\" not in fancy or isinstance(fancy[\"icon_size\"], int)\n-        assert \"applications_symlink\" not in fancy or isinstance(fancy[\"applications_symlink\"], bool)\n-        if \"items_position\" in fancy:\n-            assert isinstance(fancy[\"items_position\"], dict)\n-            for key, value in fancy[\"items_position\"].items():\n-                assert isinstance(value, list) and len(value) == 2 and isinstance(value[0], int) and isinstance(value[1], int)\n-    except:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Bad format of fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n-        sys.exit(1)\n-    \n-    if \"background_picture\" in fancy:\n-        bp = fancy[\"background_picture\"]\n-        if verbose >= 3:\n-            print(\"Fancy: Resolving background picture \\\"{}\\\"...\".format(bp))\n-        if not os.path.exists(bp):\n-            bp = os.path.join(os.path.dirname(p), bp)\n-            if not os.path.exists(bp):\n-                if verbose >= 1:\n-                    sys.stderr.write(\"Error: Could not find background picture at \\\"{}\\\" or \\\"{}\\\"\\n\".format(fancy[\"background_picture\"], bp))\n-                sys.exit(1)\n-            else:\n-                fancy[\"background_picture\"] = bp\n-else:\n-    fancy = None\n-\n-# ------------------------------------------------\n-\n-if os.path.exists(\"dist\"):\n-    if verbose >= 2:\n-        print(\"+ Removing old dist folder +\")\n-    \n-    shutil.rmtree(\"dist\")\n-\n-# ------------------------------------------------\n-\n-if len(config.volname) == 1:\n-    volname = config.volname[0]\n-else:\n-    volname = app_bundle_name\n-\n-# ------------------------------------------------\n-\n-target = os.path.join(\"dist\", \"Bitcoin-Qt.app\")\n-\n-if verbose >= 2:\n-    print(\"+ Copying source bundle +\")\n-if verbose >= 3:\n-    print(app_bundle, \"->\", target)\n-\n-os.mkdir(\"dist\")\n-shutil.copytree(app_bundle, target, symlinks=True)\n-\n-applicationBundle = ApplicationBundleInfo(target)\n-\n-# ------------------------------------------------\n-\n-if verbose >= 2:\n-    print(\"+ Deploying frameworks +\")\n-\n-try:\n-    deploymentInfo = deployFrameworksForAppBundle(applicationBundle, config.strip, verbose)\n-    if deploymentInfo.qtPath is None:\n-        deploymentInfo.qtPath = os.getenv(\"QTDIR\", None)\n-        if deploymentInfo.qtPath is None:\n-            if verbose >= 1:\n-                sys.stderr.write(\"Warning: Could not detect Qt's path, skipping plugin deployment!\\n\")\n-            config.plugins = False\n-except RuntimeError as e:\n-    if verbose >= 1:\n-        sys.stderr.write(\"Error: {}\\n\".format(str(e)))\n-    sys.exit(1)\n-\n-# ------------------------------------------------\n-\n-if config.plugins:\n-    if verbose >= 2:\n-        print(\"+ Deploying plugins +\")\n-    \n-    try:\n-        deployPlugins(applicationBundle, deploymentInfo, config.strip, verbose)\n-    except RuntimeError as e:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: {}\\n\".format(str(e)))\n-        sys.exit(1)\n-\n-# ------------------------------------------------\n-\n-if len(config.add_qt_tr) == 0:\n-    add_qt_tr = []\n-else:\n-    if translations_dir is not None:\n-        qt_tr_dir = translations_dir\n-    else:\n-        if deploymentInfo.qtPath is not None:\n-            qt_tr_dir = os.path.join(deploymentInfo.qtPath, \"translations\")\n-        else:\n-            sys.stderr.write(\"Error: Could not find Qt translation path\\n\")\n-            sys.exit(1)\n-    add_qt_tr = [\"qt_{}.qm\".format(lng) for lng in config.add_qt_tr[0].split(\",\")]\n-    for lng_file in add_qt_tr:\n-        p = os.path.join(qt_tr_dir, lng_file)\n-        if verbose >= 3:\n-            print(\"Checking for \\\"{}\\\"...\".format(p))\n-        if not os.path.exists(p):\n-            if verbose >= 1:\n-                sys.stderr.write(\"Error: Could not find Qt translation file \\\"{}\\\"\\n\".format(lng_file))\n-                sys.exit(1)\n-\n-# ------------------------------------------------\n-\n-if verbose >= 2:\n-    print(\"+ Installing qt.conf +\")\n-\n-with open(os.path.join(applicationBundle.resourcesPath, \"qt.conf\"), \"wb\") as f:\n-    f.write(qt_conf.encode())\n-\n-# ------------------------------------------------\n-\n-if len(add_qt_tr) > 0 and verbose >= 2:\n-    print(\"+ Adding Qt translations +\")\n-\n-for lng_file in add_qt_tr:\n-    if verbose >= 3:\n-        print(os.path.join(qt_tr_dir, lng_file), \"->\", os.path.join(applicationBundle.resourcesPath, lng_file))\n-    shutil.copy2(os.path.join(qt_tr_dir, lng_file), os.path.join(applicationBundle.resourcesPath, lng_file))\n-\n-# ------------------------------------------------\n-\n-if len(config.add_resources) > 0 and verbose >= 2:\n-    print(\"+ Adding additional resources +\")\n-\n-for p in config.add_resources:\n-    t = os.path.join(applicationBundle.resourcesPath, os.path.basename(p))\n-    if verbose >= 3:\n-        print(p, \"->\", t)\n-    if os.path.isdir(p):\n-        shutil.copytree(p, t, symlinks=True)\n-    else:\n-        shutil.copy2(p, t)\n-\n-# ------------------------------------------------\n-\n-if config.sign and 'CODESIGNARGS' not in os.environ:\n-    print(\"You must set the CODESIGNARGS environment variable. Skipping signing.\")\n-elif config.sign:\n-    if verbose >= 1:\n-        print(\"Code-signing app bundle {}\".format(target))\n-    subprocess.check_call(\"codesign --force {} {}\".format(os.environ['CODESIGNARGS'], target), shell=True)\n-\n-# ------------------------------------------------\n-\n-if config.dmg is not None:\n-\n-    def runHDIUtil(verb: str, image_basename: str, **kwargs) -> int:\n-        hdiutil_args = [\"hdiutil\", verb, image_basename + \".dmg\"]\n-        if \"capture_stdout\" in kwargs:\n-            del kwargs[\"capture_stdout\"]\n-            run = subprocess.check_output\n-        else:\n-            if verbose < 2:\n-                hdiutil_args.append(\"-quiet\")\n-            elif verbose >= 3:\n-                hdiutil_args.append(\"-verbose\")\n-            run = subprocess.check_call\n-        \n-        for key, value in kwargs.items():\n-            hdiutil_args.append(\"-\" + key)\n-            if value is not True:\n-                hdiutil_args.append(str(value))\n-        \n-        return run(hdiutil_args, universal_newlines=True)\n-    \n-    if verbose >= 2:\n-        if fancy is None:\n-            print(\"+ Creating .dmg disk image +\")\n-        else:\n-            print(\"+ Preparing .dmg disk image +\")\n-    \n-    if config.dmg != \"\":\n-        dmg_name = config.dmg\n-    else:\n-        spl = app_bundle_name.split(\" \")\n-        dmg_name = spl[0] + \"\".join(p.capitalize() for p in spl[1:])\n-    \n-    if fancy is None:\n-        try:\n-            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=volname, ov=True)\n-        except subprocess.CalledProcessError as e:\n-            sys.exit(e.returncode)\n-    else:\n-        if verbose >= 3:\n-            print(\"Determining size of \\\"dist\\\"...\")\n-        size = 0\n-        for path, dirs, files in os.walk(\"dist\"):\n-            for file in files:\n-                size += os.path.getsize(os.path.join(path, file))\n-        size += int(size * 0.15)\n-        \n-        if verbose >= 3:\n-            print(\"Creating temp image for modification...\")\n-        try:\n-            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=volname, ov=True)\n-        except subprocess.CalledProcessError as e:\n-            sys.exit(e.returncode)\n-        \n-        if verbose >= 3:\n-            print(\"Attaching temp image...\")\n-        try:\n-            output = runHDIUtil(\"attach\", dmg_name + \".temp\", readwrite=True, noverify=True, noautoopen=True, capture_stdout=True)\n-        except subprocess.CalledProcessError as e:\n-            sys.exit(e.returncode)\n-\n-        m = re.search(r\"/Volumes/(.+$)\", output)\n-        disk_root = m.group(0)\n-        disk_name = m.group(1)\n-        \n-        if verbose >= 2:\n-            print(\"+ Applying fancy settings +\")\n-        \n-        if \"background_picture\" in fancy:\n-            bg_path = os.path.join(disk_root, \".background\", os.path.basename(fancy[\"background_picture\"]))\n-            os.mkdir(os.path.dirname(bg_path))\n-            if verbose >= 3:\n-                print(fancy[\"background_picture\"], \"->\", bg_path)\n-            shutil.copy2(fancy[\"background_picture\"], bg_path)\n-        else:\n-            bg_path = None\n-        \n-        if fancy.get(\"applications_symlink\", False):\n-            os.symlink(\"/Applications\", os.path.join(disk_root, \"Applications\"))\n-        \n-        # The Python appscript package broke with OSX 10.8 and isn't being fixed.\n-        # So we now build up an AppleScript string and use the osascript command\n-        # to make the .dmg file pretty:\n-        appscript = Template( \"\"\"\n-        on run argv\n-           tell application \"Finder\"\n-             tell disk \"$disk\"\n-                   open\n-                   set current view of container window to icon view\n-                   set toolbar visible of container window to false\n-                   set statusbar visible of container window to false\n-                   set the bounds of container window to {$window_bounds}\n-                   set theViewOptions to the icon view options of container window\n-                   set arrangement of theViewOptions to not arranged\n-                   set icon size of theViewOptions to $icon_size\n-                   $background_commands\n-                   $items_positions\n-                   close -- close/reopen works around a bug...\n-                   open\n-                   update without registering applications\n-                   delay 5\n-                   eject\n-             end tell\n-           end tell\n-        end run\n-        \"\"\")\n-\n-        itemscript = Template('set position of item \"${item}\" of container window to {${position}}')\n-        items_positions = []\n-        if \"items_position\" in fancy:\n-            for name, position in fancy[\"items_position\"].items():\n-                params = { \"item\" : name, \"position\" : \",\".join([str(p) for p in position]) }\n-                items_positions.append(itemscript.substitute(params))\n-\n-        params = {\n-            \"disk\" : volname,\n-            \"window_bounds\" : \"300,300,800,620\",\n-            \"icon_size\" : \"96\",\n-            \"background_commands\" : \"\",\n-            \"items_positions\" : \"\\n                   \".join(items_positions)\n-            }\n-        if \"window_bounds\" in fancy:\n-            params[\"window_bounds\"] = \",\".join([str(p) for p in fancy[\"window_bounds\"]])\n-        if \"icon_size\" in fancy:\n-            params[\"icon_size\"] = str(fancy[\"icon_size\"])\n-        if bg_path is not None:\n-            # Set background file, then call SetFile to make it invisible.\n-            # (note: making it invisible first makes set background picture fail)\n-            bgscript = Template(\"\"\"set background picture of theViewOptions to file \".background:$bgpic\"\n-                   do shell script \"SetFile -a V /Volumes/$disk/.background/$bgpic\" \"\"\")\n-            params[\"background_commands\"] = bgscript.substitute({\"bgpic\" : os.path.basename(bg_path), \"disk\" : params[\"disk\"]})\n-\n-        s = appscript.substitute(params)\n-        if verbose >= 2:\n-            print(\"Running AppleScript:\")\n-            print(s)\n-\n-        p = subprocess.Popen(['osascript', '-'], stdin=subprocess.PIPE)\n-        p.communicate(input=s.encode('utf-8'))\n-        if p.returncode:\n-            print(\"Error running osascript.\")\n-\n-        if verbose >= 2:\n-            print(\"+ Finalizing .dmg disk image +\")\n-            time.sleep(5)\n-        \n-        try:\n-            runHDIUtil(\"convert\", dmg_name + \".temp\", format=\"UDBZ\", o=dmg_name + \".dmg\", ov=True)\n-        except subprocess.CalledProcessError as e:\n-            sys.exit(e.returncode)\n-        \n-        os.unlink(dmg_name + \".temp.dmg\")\n-\n-# ------------------------------------------------\n-\n-if verbose >= 2:\n-    print(\"+ Done +\")\n-\n-sys.exit(0)"
      },
      {
        "sha": "0ded87c58f4ee721058f914682a283f9f9a69787",
        "filename": "contrib/qos/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/qos/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/qos/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/README.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,5 +0,0 @@\n-### QoS (Quality of service) ###\n-\n-This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Bitcoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN.\n-\n-This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it."
      },
      {
        "sha": "8408545a218e4faa4a3fb41951a3afab21ba199a",
        "filename": "contrib/qos/tc.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 62,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,62 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2017-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-#network interface on which to limit traffic\n-IF=\"eth0\"\n-#limit of the network interface in question\n-LINKCEIL=\"1gbit\"\n-#limit outbound Bitcoin protocol traffic to this rate\n-LIMIT=\"160kbit\"\n-#defines the IPv4 address space for which you wish to disable rate limiting\n-LOCALNET_V4=\"192.168.0.0/16\"\n-#defines the IPv6 address space for which you wish to disable rate limiting\n-LOCALNET_V6=\"fe80::/10\"\n-\n-#delete existing rules\n-tc qdisc del dev ${IF} root\n-\n-#add root class\n-tc qdisc add dev ${IF} root handle 1: htb default 10\n-\n-#add parent class\n-tc class add dev ${IF} parent 1: classid 1:1 htb rate ${LINKCEIL} ceil ${LINKCEIL}\n-\n-#add our two classes. one unlimited, another limited\n-tc class add dev ${IF} parent 1:1 classid 1:10 htb rate ${LINKCEIL} ceil ${LINKCEIL} prio 0\n-tc class add dev ${IF} parent 1:1 classid 1:11 htb rate ${LIMIT} ceil ${LIMIT} prio 1\n-\n-#add handles to our classes so packets marked with <x> go into the class with \"... handle <x> fw ...\"\n-tc filter add dev ${IF} parent 1: protocol ip prio 1 handle 1 fw classid 1:10\n-tc filter add dev ${IF} parent 1: protocol ip prio 2 handle 2 fw classid 1:11\n-\n-if [ -n \"${LOCALNET_V6}\" ] ; then\n-\t# v6 cannot have the same priority value as v4\n-\ttc filter add dev ${IF} parent 1: protocol ipv6 prio 3 handle 1 fw classid 1:10\n-\ttc filter add dev ${IF} parent 1: protocol ipv6 prio 4 handle 2 fw classid 1:11\n-fi\n-\n-#delete any existing rules\n-#disable for now\n-#ret=0\n-#while [ $ret -eq 0 ]; do\n-#\tiptables -t mangle -D OUTPUT 1\n-#\tret=$?\n-#done\n-\n-#limit outgoing traffic to and from port 8333. but not when dealing with a host on the local network\n-#\t(defined by $LOCALNET_V4 and $LOCALNET_V6)\n-#\t--set-mark marks packages matching these criteria with the number \"2\" (v4)\n-#\t--set-mark marks packages matching these criteria with the number \"4\" (v6)\n-#\tthese packets are filtered by the tc filter with \"handle 2\"\n-#\tthis filter sends the packages into the 1:11 class, and this class is limited to ${LIMIT}\n-iptables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n-iptables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n-\n-if [ -n \"${LOCALNET_V6}\" ] ; then\n-\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n-\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n-fi"
      },
      {
        "sha": "e4a39d609343699cc54dee0d85e105fbce7088a4",
        "filename": "contrib/seeds/.gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/seeds/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/seeds/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/.gitignore?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1 +0,0 @@\n-seeds_main.txt"
      },
      {
        "sha": "502c20d0d678c59eafbb976d7a1b2537be0217b6",
        "filename": "contrib/seeds/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,21 +0,0 @@\n-# Seeds\n-\n-Utility to generate the seeds.txt list that is compiled into the client\n-(see [src/chainparamsseeds.h](/src/chainparamsseeds.h) and other utilities in [contrib/seeds](/contrib/seeds)).\n-\n-Be sure to update `PATTERN_AGENT` in `makeseeds.py` to include the current version,\n-and remove old versions as necessary (at a minimum when GetDesirableServiceFlags\n-changes its default return value, as those are the services which seeds are added\n-to addrman with).\n-\n-The seeds compiled into the release are created from sipa's DNS seed data, like this:\n-\n-    curl -s http://bitcoin.sipa.be/seeds.txt.gz | gzip -dc > seeds_main.txt\n-    python3 makeseeds.py < seeds_main.txt > nodes_main.txt\n-    python3 generate-seeds.py . > ../../src/chainparamsseeds.h\n-\n-## Dependencies\n-\n-Ubuntu:\n-\n-    sudo apt-get install python3-dnspython"
      },
      {
        "sha": "7630a7a4fa2550396e8e6ee5421a90f640b7be0a",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "removed",
        "additions": 0,
        "deletions": 138,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,138 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2014-2017 Wladimir J. van der Laan\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Script to generate list of seed nodes for chainparams.cpp.\n-\n-This script expects two text files in the directory that is passed as an\n-argument:\n-\n-    nodes_main.txt\n-    nodes_test.txt\n-\n-These files must consist of lines in the format\n-\n-    <ip>\n-    <ip>:<port>\n-    [<ipv6>]\n-    [<ipv6>]:<port>\n-    <onion>.onion\n-    0xDDBBCCAA (IPv4 little-endian old pnSeeds format)\n-\n-The output will be two data structures with the peers in binary format:\n-\n-   static SeedSpec6 pnSeed6_main[]={\n-   ...\n-   }\n-   static SeedSpec6 pnSeed6_test[]={\n-   ...\n-   }\n-\n-These should be pasted into `src/chainparamsseeds.h`.\n-'''\n-\n-from base64 import b32decode\n-from binascii import a2b_hex\n-import sys\n-import os\n-import re\n-\n-# ipv4 in ipv6 prefix\n-pchIPv4 = bytearray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff])\n-# tor-specific ipv6 prefix\n-pchOnionCat = bytearray([0xFD,0x87,0xD8,0x7E,0xEB,0x43])\n-\n-def name_to_ipv6(addr):\n-    if len(addr)>6 and addr.endswith('.onion'):\n-        vchAddr = b32decode(addr[0:-6], True)\n-        if len(vchAddr) != 16-len(pchOnionCat):\n-            raise ValueError('Invalid onion %s' % vchAddr)\n-        return pchOnionCat + vchAddr\n-    elif '.' in addr: # IPv4\n-        return pchIPv4 + bytearray((int(x) for x in addr.split('.')))\n-    elif ':' in addr: # IPv6\n-        sub = [[], []] # prefix, suffix\n-        x = 0\n-        addr = addr.split(':')\n-        for i,comp in enumerate(addr):\n-            if comp == '':\n-                if i == 0 or i == (len(addr)-1): # skip empty component at beginning or end\n-                    continue\n-                x += 1 # :: skips to suffix\n-                assert(x < 2)\n-            else: # two bytes per component\n-                val = int(comp, 16)\n-                sub[x].append(val >> 8)\n-                sub[x].append(val & 0xff)\n-        nullbytes = 16 - len(sub[0]) - len(sub[1])\n-        assert((x == 0 and nullbytes == 0) or (x == 1 and nullbytes > 0))\n-        return bytearray(sub[0] + ([0] * nullbytes) + sub[1])\n-    elif addr.startswith('0x'): # IPv4-in-little-endian\n-        return pchIPv4 + bytearray(reversed(a2b_hex(addr[2:])))\n-    else:\n-        raise ValueError('Could not parse address %s' % addr)\n-\n-def parse_spec(s, defaultport):\n-    match = re.match(r'\\[([0-9a-fA-F:]+)\\](?::([0-9]+))?$', s)\n-    if match: # ipv6\n-        host = match.group(1)\n-        port = match.group(2)\n-    elif s.count(':') > 1: # ipv6, no port\n-        host = s\n-        port = ''\n-    else:\n-        (host,_,port) = s.partition(':')\n-\n-    if not port:\n-        port = defaultport\n-    else:\n-        port = int(port)\n-\n-    host = name_to_ipv6(host)\n-\n-    return (host,port)\n-\n-def process_nodes(g, f, structname, defaultport):\n-    g.write('static SeedSpec6 %s[] = {\\n' % structname)\n-    first = True\n-    for line in f:\n-        comment = line.find('#')\n-        if comment != -1:\n-            line = line[0:comment]\n-        line = line.strip()\n-        if not line:\n-            continue\n-        if not first:\n-            g.write(',\\n')\n-        first = False\n-\n-        (host,port) = parse_spec(line, defaultport)\n-        hoststr = ','.join(('0x%02x' % b) for b in host)\n-        g.write('    {{%s}, %i}' % (hoststr, port))\n-    g.write('\\n};\\n')\n-\n-def main():\n-    if len(sys.argv)<2:\n-        print(('Usage: %s <path_to_nodes_txt>' % sys.argv[0]), file=sys.stderr)\n-        sys.exit(1)\n-    g = sys.stdout\n-    indir = sys.argv[1]\n-    g.write('#ifndef BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-    g.write('#define BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-    g.write('/**\\n')\n-    g.write(' * List of fixed seed nodes for the bitcoin network\\n')\n-    g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n-    g.write(' *\\n')\n-    g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n-    g.write(' * IPv4 as well as onion addresses are wrapped inside an IPv6 address accordingly.\\n')\n-    g.write(' */\\n')\n-    with open(os.path.join(indir,'nodes_main.txt'), 'r', encoding=\"utf8\") as f:\n-        process_nodes(g, f, 'pnSeed6_main', 8333)\n-    g.write('\\n')\n-    with open(os.path.join(indir,'nodes_test.txt'), 'r', encoding=\"utf8\") as f:\n-        process_nodes(g, f, 'pnSeed6_test', 18333)\n-    g.write('#endif // BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-\n-if __name__ == '__main__':\n-    main()"
      },
      {
        "sha": "6d9d49ad2fc1640a2644313cfc81da0d2ed4596b",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "removed",
        "additions": 0,
        "deletions": 228,
        "changes": 228,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,228 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2013-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# Generate seeds.txt from Pieter's DNS seeder\n-#\n-\n-import re\n-import sys\n-import dns.resolver\n-import collections\n-\n-NSEEDS=512\n-\n-MAX_SEEDS_PER_ASN=2\n-\n-MIN_BLOCKS = 337600\n-\n-# These are hosts that have been observed to be behaving strangely (e.g.\n-# aggressively connecting to every node).\n-with open(\"suspicious_hosts.txt\", mode=\"r\", encoding=\"utf-8\") as f:\n-    SUSPICIOUS_HOSTS = {s.strip() for s in f if s.strip()}\n-\n-\n-PATTERN_IPV4 = re.compile(r\"^((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})):(\\d+)$\")\n-PATTERN_IPV6 = re.compile(r\"^\\[([0-9a-z:]+)\\]:(\\d+)$\")\n-PATTERN_ONION = re.compile(r\"^([abcdefghijklmnopqrstuvwxyz234567]{16}\\.onion):(\\d+)$\")\n-PATTERN_AGENT = re.compile(\n-    r\"^/Satoshi:(\"\n-    r\"0.14.(0|1|2|3|99)|\"\n-    r\"0.15.(0|1|2|99)|\"\n-    r\"0.16.(0|1|2|3|99)|\"\n-    r\"0.17.(0|0.1|1|2|99)|\"\n-    r\"0.18.(0|1|99)|\"\n-    r\"0.19.(0|1|99)|\"\n-    r\"0.20.(0|1|99)|\"\n-    r\"0.21.99\"\n-    r\")\")\n-\n-def parseline(line):\n-    sline = line.split()\n-    if len(sline) < 11:\n-       return None\n-    m = PATTERN_IPV4.match(sline[0])\n-    sortkey = None\n-    ip = None\n-    if m is None:\n-        m = PATTERN_IPV6.match(sline[0])\n-        if m is None:\n-            m = PATTERN_ONION.match(sline[0])\n-            if m is None:\n-                return None\n-            else:\n-                net = 'onion'\n-                ipstr = sortkey = m.group(1)\n-                port = int(m.group(2))\n-        else:\n-            net = 'ipv6'\n-            if m.group(1) in ['::']: # Not interested in localhost\n-                return None\n-            ipstr = m.group(1)\n-            sortkey = ipstr # XXX parse IPv6 into number, could use name_to_ipv6 from generate-seeds\n-            port = int(m.group(2))\n-    else:\n-        # Do IPv4 sanity check\n-        ip = 0\n-        for i in range(0,4):\n-            if int(m.group(i+2)) < 0 or int(m.group(i+2)) > 255:\n-                return None\n-            ip = ip + (int(m.group(i+2)) << (8*(3-i)))\n-        if ip == 0:\n-            return None\n-        net = 'ipv4'\n-        sortkey = ip\n-        ipstr = m.group(1)\n-        port = int(m.group(6))\n-    # Skip bad results.\n-    if sline[1] == 0:\n-        return None\n-    # Extract uptime %.\n-    uptime30 = float(sline[7][:-1])\n-    # Extract Unix timestamp of last success.\n-    lastsuccess = int(sline[2])\n-    # Extract protocol version.\n-    version = int(sline[10])\n-    # Extract user agent.\n-    agent = sline[11][1:-1]\n-    # Extract service flags.\n-    service = int(sline[9], 16)\n-    # Extract blocks.\n-    blocks = int(sline[8])\n-    # Construct result.\n-    return {\n-        'net': net,\n-        'ip': ipstr,\n-        'port': port,\n-        'ipnum': ip,\n-        'uptime': uptime30,\n-        'lastsuccess': lastsuccess,\n-        'version': version,\n-        'agent': agent,\n-        'service': service,\n-        'blocks': blocks,\n-        'sortkey': sortkey,\n-    }\n-\n-def dedup(ips):\n-    '''deduplicate by address,port'''\n-    d = {}\n-    for ip in ips:\n-        d[ip['ip'],ip['port']] = ip\n-    return list(d.values())\n-\n-def filtermultiport(ips):\n-    '''Filter out hosts with more nodes per IP'''\n-    hist = collections.defaultdict(list)\n-    for ip in ips:\n-        hist[ip['sortkey']].append(ip)\n-    return [value[0] for (key,value) in list(hist.items()) if len(value)==1]\n-\n-def lookup_asn(net, ip):\n-    '''\n-    Look up the asn for an IP (4 or 6) address by querying cymru.com, or None\n-    if it could not be found.\n-    '''\n-    try:\n-        if net == 'ipv4':\n-            ipaddr = ip\n-            prefix = '.origin'\n-        else:                  # http://www.team-cymru.com/IP-ASN-mapping.html\n-            res = str()                         # 2001:4860:b002:23::68\n-            for nb in ip.split(':')[:4]:  # pick the first 4 nibbles\n-                for c in nb.zfill(4):           # right padded with '0'\n-                    res += c + '.'              # 2001 4860 b002 0023\n-            ipaddr = res.rstrip('.')            # 2.0.0.1.4.8.6.0.b.0.0.2.0.0.2.3\n-            prefix = '.origin6'\n-\n-        asn = int([x.to_text() for x in dns.resolver.query('.'.join(\n-                   reversed(ipaddr.split('.'))) + prefix + '.asn.cymru.com',\n-                   'TXT').response.answer][0].split('\\\"')[1].split(' ')[0])\n-        return asn\n-    except Exception:\n-        sys.stderr.write('ERR: Could not resolve ASN for \"' + ip + '\"\\n')\n-        return None\n-\n-# Based on Greg Maxwell's seed_filter.py\n-def filterbyasn(ips, max_per_asn, max_per_net):\n-    # Sift out ips by type\n-    ips_ipv46 = [ip for ip in ips if ip['net'] in ['ipv4', 'ipv6']]\n-    ips_onion = [ip for ip in ips if ip['net'] == 'onion']\n-\n-    # Filter IPv46 by ASN, and limit to max_per_net per network\n-    result = []\n-    net_count = collections.defaultdict(int)\n-    asn_count = collections.defaultdict(int)\n-    for ip in ips_ipv46:\n-        if net_count[ip['net']] == max_per_net:\n-            continue\n-        asn = lookup_asn(ip['net'], ip['ip'])\n-        if asn is None or asn_count[asn] == max_per_asn:\n-            continue\n-        asn_count[asn] += 1\n-        net_count[ip['net']] += 1\n-        result.append(ip)\n-\n-    # Add back Onions (up to max_per_net)\n-    result.extend(ips_onion[0:max_per_net])\n-    return result\n-\n-def ip_stats(ips):\n-    hist = collections.defaultdict(int)\n-    for ip in ips:\n-        if ip is not None:\n-            hist[ip['net']] += 1\n-\n-    return '%6d %6d %6d' % (hist['ipv4'], hist['ipv6'], hist['onion'])\n-\n-def main():\n-    lines = sys.stdin.readlines()\n-    ips = [parseline(line) for line in lines]\n-\n-    print('\\x1b[7m  IPv4   IPv6  Onion Pass                                               \\x1b[0m', file=sys.stderr)\n-    print('%s Initial' % (ip_stats(ips)), file=sys.stderr)\n-    # Skip entries with invalid address.\n-    ips = [ip for ip in ips if ip is not None]\n-    print('%s Skip entries with invalid address' % (ip_stats(ips)), file=sys.stderr)\n-    # Skip duplicates (in case multiple seeds files were concatenated)\n-    ips = dedup(ips)\n-    print('%s After removing duplicates' % (ip_stats(ips)), file=sys.stderr)\n-    # Skip entries from suspicious hosts.\n-    ips = [ip for ip in ips if ip['ip'] not in SUSPICIOUS_HOSTS]\n-    print('%s Skip entries from suspicious hosts' % (ip_stats(ips)), file=sys.stderr)\n-    # Enforce minimal number of blocks.\n-    ips = [ip for ip in ips if ip['blocks'] >= MIN_BLOCKS]\n-    print('%s Enforce minimal number of blocks' % (ip_stats(ips)), file=sys.stderr)\n-    # Require service bit 1.\n-    ips = [ip for ip in ips if (ip['service'] & 1) == 1]\n-    print('%s Require service bit 1' % (ip_stats(ips)), file=sys.stderr)\n-    # Require at least 50% 30-day uptime for clearnet, 10% for onion.\n-    req_uptime = {\n-        'ipv4': 50,\n-        'ipv6': 50,\n-        'onion': 10,\n-    }\n-    ips = [ip for ip in ips if ip['uptime'] > req_uptime[ip['net']]]\n-    print('%s Require minimum uptime' % (ip_stats(ips)), file=sys.stderr)\n-    # Require a known and recent user agent.\n-    ips = [ip for ip in ips if PATTERN_AGENT.match(ip['agent'])]\n-    print('%s Require a known and recent user agent' % (ip_stats(ips)), file=sys.stderr)\n-    # Sort by availability (and use last success as tie breaker)\n-    ips.sort(key=lambda x: (x['uptime'], x['lastsuccess'], x['ip']), reverse=True)\n-    # Filter out hosts with multiple bitcoin ports, these are likely abusive\n-    ips = filtermultiport(ips)\n-    print('%s Filter out hosts with multiple bitcoin ports' % (ip_stats(ips)), file=sys.stderr)\n-    # Look up ASNs and limit results, both per ASN and globally.\n-    ips = filterbyasn(ips, MAX_SEEDS_PER_ASN, NSEEDS)\n-    print('%s Look up ASNs and limit results per ASN and per net' % (ip_stats(ips)), file=sys.stderr)\n-    # Sort the results by IP address (for deterministic output).\n-    ips.sort(key=lambda x: (x['net'], x['sortkey']))\n-    for ip in ips:\n-        if ip['net'] == 'ipv6':\n-            print('[%s]:%i' % (ip['ip'], ip['port']))\n-        else:\n-            print('%s:%i' % (ip['ip'], ip['port']))\n-\n-if __name__ == '__main__':\n-    main()"
      },
      {
        "sha": "7b97436013871abb6a41ab02f1916cbec4df54c7",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 1164,
        "changes": 1164,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,1164 +0,0 @@\n-2.39.173.126:8333\n-3.14.168.201:48333\n-4.36.112.44:8333\n-5.8.18.31:8333\n-5.14.200.167:8333\n-5.56.20.2:8333\n-5.102.146.99:8333\n-5.103.137.146:9333\n-5.128.87.126:8333\n-5.133.65.82:8333\n-5.187.55.242:8333\n-5.188.62.24:8333\n-5.188.62.33:8333\n-5.199.133.193:8333\n-8.38.89.152:8333\n-13.231.20.249:8333\n-18.27.79.17:8333\n-20.184.15.116:8433\n-23.28.205.97:8333\n-23.106.252.230:8333\n-23.175.0.202:8333\n-23.175.0.212:8333\n-23.241.250.252:8333\n-23.245.24.154:8333\n-24.86.184.66:8333\n-24.116.246.9:8333\n-24.141.34.166:8333\n-24.155.196.246:8333\n-24.157.130.222:8333\n-24.188.176.255:8333\n-24.237.70.53:8333\n-27.124.4.67:8333\n-31.17.70.80:8333\n-31.21.8.32:8333\n-31.45.118.10:8333\n-31.132.17.56:8333\n-31.134.121.223:8333\n-32.214.183.114:8333\n-35.137.236.32:8333\n-35.185.145.105:8333\n-35.209.51.212:8333\n-35.245.175.76:8333\n-37.116.95.41:8333\n-37.143.9.107:8333\n-37.143.116.43:8333\n-37.191.244.149:8333\n-37.211.78.253:8333\n-37.221.209.222:24333\n-37.228.92.110:8333\n-43.225.62.107:8333\n-43.225.157.152:8333\n-45.36.184.6:8333\n-45.48.168.16:8333\n-45.85.85.8:8333\n-45.85.85.9:8333\n-45.129.180.214:8333\n-45.149.78.128:8333\n-45.151.125.218:8333\n-45.154.255.46:8333\n-45.155.157.239:8333\n-46.28.132.34:8333\n-46.28.204.21:8333\n-46.32.50.98:8333\n-46.59.13.35:8333\n-46.128.40.173:8333\n-46.128.140.193:8333\n-46.146.248.89:8333\n-46.166.162.45:20001\n-46.188.15.6:8333\n-46.229.165.142:8333\n-46.229.238.187:8333\n-46.249.83.82:8333\n-46.254.217.169:8333\n-47.74.191.34:8333\n-47.115.53.163:8333\n-47.187.26.135:8333\n-47.222.103.234:8333\n-47.253.5.99:8333\n-49.232.82.76:8333\n-49.247.215.43:8333\n-50.2.13.166:8333\n-50.34.39.72:8333\n-50.45.232.189:8333\n-50.68.104.92:8333\n-51.68.36.57:8333\n-51.154.60.34:8333\n-52.169.238.66:8333\n-54.197.30.223:8333\n-54.227.66.57:8333\n-58.158.0.86:8333\n-58.171.135.242:8333\n-58.229.208.158:8333\n-60.244.109.19:8333\n-62.38.75.208:8333\n-62.74.143.11:8333\n-62.80.227.49:8333\n-62.152.58.16:9421\n-62.210.167.199:8333\n-62.234.188.160:8333\n-62.251.54.163:8333\n-63.227.116.162:8333\n-65.19.155.82:8333\n-65.95.49.102:8333\n-66.18.172.21:8333\n-66.240.237.155:8333\n-67.210.228.203:8333\n-69.30.215.42:8333\n-69.59.18.206:8333\n-69.64.33.71:8333\n-69.119.193.9:8333\n-69.209.23.72:8333\n-70.123.125.237:8333\n-70.185.56.136:8333\n-71.38.90.235:8333\n-72.12.73.70:8333\n-72.53.134.182:8333\n-72.225.7.80:8333\n-72.234.182.39:8333\n-72.250.184.57:8333\n-73.83.103.79:8333\n-74.118.137.119:8333\n-74.133.100.74:8333\n-74.215.219.214:8333\n-74.220.255.190:8333\n-75.158.39.231:8333\n-77.53.53.196:8333\n-77.70.16.245:8333\n-77.105.87.97:8333\n-77.120.113.69:8433\n-77.120.122.22:8433\n-77.166.83.167:8333\n-77.247.178.130:8333\n-78.27.139.13:8333\n-78.63.28.146:8333\n-78.83.103.4:8333\n-78.141.123.99:8333\n-79.77.33.131:8333\n-79.77.133.30:8333\n-79.101.1.25:8333\n-79.117.192.229:8333\n-79.133.228.55:8333\n-79.146.21.163:8333\n-80.89.203.172:8001\n-80.93.213.246:8333\n-80.192.98.110:8334\n-80.229.28.60:8333\n-80.232.247.210:8333\n-80.242.39.76:8333\n-80.253.94.252:8333\n-81.0.198.25:8333\n-81.7.13.84:8333\n-81.117.225.245:8333\n-81.135.137.225:8333\n-81.171.22.143:8333\n-81.191.233.134:8333\n-81.232.78.75:8333\n-81.242.91.23:8333\n-82.29.58.109:8333\n-82.136.99.22:8333\n-82.149.97.25:17567\n-82.165.19.48:8333\n-82.194.153.233:8333\n-82.197.215.125:8333\n-82.199.102.10:8333\n-82.200.205.30:8333\n-82.202.68.231:8333\n-82.221.128.31:8333\n-82.228.6.131:8333\n-83.85.139.94:8333\n-83.99.245.20:8333\n-83.137.41.10:8333\n-83.174.209.87:8333\n-83.217.8.31:44420\n-84.38.3.249:8333\n-84.38.185.122:8333\n-84.92.92.247:8333\n-84.192.16.234:8333\n-84.194.158.124:8333\n-84.212.145.24:8333\n-84.212.244.95:8333\n-84.216.51.36:8333\n-84.255.249.163:8333\n-85.25.255.147:8333\n-85.70.156.209:8333\n-85.145.142.46:8333\n-85.170.233.95:8333\n-85.184.138.108:8333\n-85.190.0.5:8333\n-85.191.200.51:8333\n-85.192.191.6:18500\n-85.194.238.131:8333\n-85.195.54.110:8333\n-85.214.161.252:8333\n-85.214.185.51:8333\n-85.241.106.203:8333\n-85.246.168.252:8333\n-86.56.238.247:8333\n-87.61.90.230:8333\n-87.79.68.86:8333\n-87.79.94.221:8333\n-87.120.8.5:20008\n-87.246.46.132:8333\n-87.247.111.222:8333\n-88.84.222.252:8333\n-88.86.243.241:8333\n-88.87.93.52:1691\n-88.119.197.200:8333\n-88.129.253.94:8333\n-88.147.244.250:8333\n-88.208.3.195:8333\n-88.212.44.33:8333\n-88.214.57.95:8333\n-89.106.199.38:8333\n-89.108.126.228:8333\n-89.115.120.43:8333\n-89.133.68.65:8333\n-89.190.19.162:8333\n-89.248.172.10:8333\n-90.146.153.21:8333\n-90.182.165.18:8333\n-91.106.188.229:8333\n-91.193.237.116:8333\n-91.204.99.178:8333\n-91.204.149.5:8333\n-91.214.70.63:8333\n-91.228.152.236:8333\n-92.12.154.115:8333\n-92.249.143.44:8333\n-93.12.66.98:8333\n-93.46.54.4:8333\n-93.115.20.130:8333\n-93.123.180.164:8333\n-93.189.145.169:8333\n-93.241.228.102:8333\n-94.19.7.55:8333\n-94.19.128.204:8333\n-94.52.112.227:8333\n-94.154.96.130:8333\n-94.156.174.201:8333\n-94.158.246.183:8333\n-94.177.171.73:8333\n-94.199.178.233:8100\n-94.237.125.30:8333\n-94.247.134.77:8333\n-95.48.228.45:8333\n-95.69.249.63:8333\n-95.82.146.70:8333\n-95.83.73.31:8333\n-95.84.164.43:8333\n-95.87.226.56:8333\n-95.110.234.93:8333\n-95.163.71.126:8333\n-95.164.65.194:8333\n-95.174.66.211:8333\n-95.211.174.137:8333\n-95.216.11.156:8433\n-96.47.114.108:8333\n-97.84.232.105:8333\n-97.99.205.241:8333\n-98.25.193.114:8333\n-99.115.25.13:8333\n-101.32.19.184:8333\n-101.100.174.240:8333\n-102.132.245.16:8333\n-103.14.244.190:8333\n-103.76.48.5:8333\n-103.84.84.250:8335\n-103.99.168.150:8333\n-103.109.101.216:8333\n-103.122.247.102:8333\n-103.129.13.45:8333\n-103.198.192.14:20008\n-103.224.119.99:8333\n-103.231.191.7:8333\n-103.235.230.196:8333\n-104.171.242.155:8333\n-104.238.220.199:8333\n-106.163.158.127:8333\n-107.150.41.179:8333\n-107.159.93.103:8333\n-108.183.77.12:8333\n-109.9.175.65:8333\n-109.99.63.159:8333\n-109.110.81.90:8333\n-109.123.213.130:8333\n-109.134.232.81:8333\n-109.169.20.168:8333\n-109.199.241.148:8333\n-109.229.210.6:8333\n-109.236.105.40:8333\n-109.248.206.13:8333\n-111.42.74.65:8333\n-111.90.140.179:8333\n-112.215.205.236:8333\n-113.52.135.125:8333\n-114.23.246.137:8333\n-115.47.141.250:8885\n-115.70.110.4:8333\n-116.34.189.55:8333\n-118.103.126.140:28333\n-118.189.187.219:8333\n-119.3.208.236:8333\n-119.8.47.225:8333\n-119.17.151.61:8333\n-120.25.24.30:8333\n-120.241.34.10:8333\n-121.98.205.100:8333\n-122.112.148.153:8339\n-122.116.42.140:8333\n-124.217.235.180:8333\n-125.236.215.133:8333\n-129.13.189.212:8333\n-130.185.77.105:8333\n-131.188.40.191:8333\n-131.193.220.15:8333\n-135.23.124.239:8333\n-136.33.185.32:8333\n-136.56.170.96:8333\n-137.226.34.46:8333\n-138.229.26.42:8333\n-139.9.249.234:8333\n-141.101.8.36:8333\n-143.176.224.104:8333\n-144.2.69.224:8333\n-144.34.161.65:18333\n-144.91.116.44:8333\n-144.137.29.181:8333\n-148.66.50.50:8335\n-148.72.150.231:8333\n-148.170.212.44:8333\n-149.167.99.190:8333\n-154.92.16.191:8333\n-154.221.27.21:8333\n-156.19.19.90:8333\n-156.241.5.190:8333\n-157.13.61.76:8333\n-157.13.61.80:8333\n-157.230.166.98:14391\n-158.75.203.2:8333\n-158.181.125.150:8333\n-158.181.226.33:8333\n-159.100.242.254:8333\n-159.100.248.234:8333\n-159.138.87.18:8333\n-160.16.0.30:8333\n-162.0.227.54:8333\n-162.0.227.56:8333\n-162.62.18.226:8333\n-162.209.1.233:8333\n-162.243.175.86:8333\n-162.244.80.208:8333\n-162.250.188.87:8333\n-162.250.189.53:8333\n-163.158.202.112:8333\n-163.158.243.230:8333\n-165.73.62.31:8333\n-166.62.82.103:32771\n-166.70.94.106:8333\n-167.86.90.239:8333\n-169.44.34.203:8333\n-172.93.101.73:8333\n-172.105.7.47:8333\n-173.23.103.30:8000\n-173.53.79.6:8333\n-173.70.12.86:8333\n-173.89.28.137:8333\n-173.176.184.54:8333\n-173.208.128.10:8333\n-173.254.204.69:8333\n-173.255.204.124:8333\n-174.94.155.224:8333\n-174.114.102.41:8333\n-174.114.124.12:8333\n-176.10.227.59:8333\n-176.31.224.214:8333\n-176.74.136.237:8333\n-176.99.2.207:8333\n-176.106.191.2:8333\n-176.160.228.9:8333\n-176.191.182.3:8333\n-176.212.185.153:8333\n-176.241.137.183:8333\n-177.38.215.73:8333\n-178.16.222.146:8333\n-178.132.2.246:8333\n-178.143.191.171:8333\n-178.148.172.209:8333\n-178.148.226.180:8333\n-178.150.96.46:8333\n-178.182.227.50:8333\n-178.236.137.63:8333\n-178.255.42.126:8333\n-180.150.52.37:8333\n-181.39.32.99:8333\n-181.48.77.26:8333\n-181.52.223.52:8333\n-181.238.51.152:8333\n-183.88.223.208:8333\n-183.110.220.210:30301\n-184.95.58.166:8336\n-184.164.147.82:41333\n-184.171.208.109:8333\n-185.25.48.39:8333\n-185.25.48.184:8333\n-185.64.116.15:8333\n-185.80.219.132:8333\n-185.85.3.140:8333\n-185.95.219.53:8333\n-185.108.244.41:8333\n-185.134.233.121:8333\n-185.145.128.21:8333\n-185.148.3.227:8333\n-185.153.196.240:8333\n-185.158.114.184:8333\n-185.165.168.196:8333\n-185.181.230.74:8333\n-185.185.26.141:8111\n-185.186.208.162:8333\n-185.189.132.178:57780\n-185.211.59.50:8333\n-185.233.148.146:8333\n-185.238.129.113:8333\n-185.249.199.106:8333\n-185.251.161.54:8333\n-187.189.153.136:8333\n-188.37.24.190:8333\n-188.42.40.234:18333\n-188.61.46.36:8333\n-188.68.45.143:8333\n-188.127.229.105:8333\n-188.134.6.84:8333\n-188.134.8.36:8333\n-188.214.129.65:20012\n-188.230.168.114:8333\n-189.34.14.93:8333\n-189.207.46.32:8333\n-190.211.204.68:8333\n-191.209.21.188:8333\n-192.3.11.20:8333\n-192.3.185.210:8333\n-192.65.170.15:8333\n-192.65.170.50:8333\n-192.146.137.18:8333\n-192.157.202.178:8333\n-192.227.80.83:8333\n-193.10.203.23:8334\n-193.25.6.206:8333\n-193.42.110.30:8333\n-193.58.196.212:8333\n-193.106.28.8:8333\n-193.189.190.123:8333\n-193.194.163.35:8333\n-193.194.163.53:8333\n-194.14.246.205:8333\n-194.36.91.253:8333\n-194.126.113.135:8333\n-194.135.135.69:8333\n-195.56.63.4:8333\n-195.56.63.5:8333\n-195.67.139.54:8333\n-195.135.194.8:8333\n-195.202.169.149:8333\n-195.206.105.42:8333\n-195.209.249.164:8333\n-198.1.231.6:8333\n-198.200.43.215:8333\n-199.182.184.204:8333\n-199.247.7.208:8333\n-199.247.249.188:8333\n-200.7.252.118:8333\n-200.20.186.254:8333\n-200.83.166.136:8333\n-202.55.87.45:8333\n-202.79.167.65:8333\n-202.108.211.135:8333\n-202.169.102.73:8333\n-203.130.48.117:8885\n-203.132.95.10:8333\n-203.151.166.123:8333\n-204.93.113.108:8333\n-204.111.241.195:8333\n-206.124.149.66:8333\n-207.115.102.98:8333\n-207.229.46.150:8333\n-208.76.252.198:8333\n-208.100.13.56:8333\n-208.100.178.175:8333\n-208.110.99.105:8333\n-209.6.210.179:8333\n-209.133.220.74:8333\n-209.141.57.57:8333\n-211.27.147.67:8333\n-212.34.225.118:8333\n-212.89.173.216:8333\n-212.99.226.36:9020\n-212.237.96.98:8333\n-213.89.131.53:8333\n-216.38.129.164:8333\n-216.134.165.55:8333\n-216.146.251.8:8333\n-216.189.190.95:8333\n-216.226.128.189:8333\n-216.236.164.82:8333\n-217.19.216.210:8333\n-217.26.32.10:8333\n-217.64.47.138:8333\n-217.64.133.220:8333\n-217.92.55.246:8333\n-218.31.113.245:8333\n-218.255.242.114:8333\n-220.133.39.61:8333\n-223.16.30.175:8333\n-[2001:19f0:6001:306f:ec4:7aff:fe8f:66ec]:8333\n-[2001:1bc0:cc::a001]:8333\n-[2001:1c02:2f18:d00:b62e:99ff:fe49:d492]:8333\n-[2001:4100:0:64::93]:8333\n-[2001:4100:0:64:dcaf:afff:fe00:6707]:8333\n-[2001:470:a:c13::2]:8333\n-[2001:4801:7819:74:b745:b9d5:ff10:a61a]:8333\n-[2001:4ba0:fffa:5d::93]:8333\n-[2001:610:1908:ff01:f816:3eff:fe33:2e32]:8333\n-[2001:638:a000:4140::ffff:191]:8333\n-[2001:648:2800:131:4b1f:f6fc:20f7:f99f]:8333\n-[2001:678:7dc:8::2]:8333\n-[2001:678:cc8::1:10:88]:20008\n-[2001:67c:1220:80c::93e5:dd2]:8333\n-[2001:67c:1220:80c:e5dc:ad0c:9289:c28f]:8333\n-[2001:67c:16dc:1201:5054:ff:fe17:4dac]:8333\n-[2001:67c:2354:2::22]:8333\n-[2001:67c:26b4:12:7ae3:b5ff:fe04:6f9c]:8333\n-[2001:67c:2f0::20:fa]:8333\n-[2001:718:801:311:5054:ff:fe19:c483]:8333\n-[2001:8d8:87c:7c00::99:3c1]:8333\n-[2001:8f1:1404:3700:8e49:715a:2e09:b634]:9444\n-[2001:b07:5d29:99a5:194b:3874:d65e:a90d]:8333\n-[2001:ba8:1f1:f0fe::2]:8333\n-[2001:bc8:1200:0:dac4:97ff:fe2a:3554]:20008\n-[2001:da8:100d:22:10fa:d85f:10f2:21fd]:8333\n-[2001:da8:8001:7a39:f035:7d:b99f:eb79]:8333\n-[2001:e42:103:100::30]:8333\n-[2400:2412:103:c900:825:8f20:eaff:65c2]:8333\n-[2400:4052:e20:4f00:69fe:bb33:7b1c:a1ca]:8333\n-[2401:1800:7800:105:be76:4eff:fe1c:b35]:8333\n-[2401:3900:2:1::2]:8333\n-[2401:b140::44:150]:8333\n-[2401:d002:4402:0:8f28:591a:6ea0:c683]:8333\n-[2403:6200:8821:3d68:195b:87e9:6819:d5c8]:8333\n-[2405:6580:2140:3a00:c28c:983:364b:5d70]:8333\n-[2405:9800:b911:a18a:58eb:cd3c:9d82:ea4a]:8333\n-[2405:aa00:2::40]:8333\n-[2409:10:ca20:1df0:224:e8ff:fe1f:60d9]:8333\n-[2409:8a1e:a9af:3660:1c5a:5b6b:8a2d:9848]:8333\n-[2409:8a1e:a9af:3660:404:39ba:88f2:e8df]:8333\n-[240b:10:9141:400:49b4:3a2e:1e5:84c]:8333\n-[240d:1a:759:6000:a7b1:451a:8874:e1ac]:8333\n-[240d:1a:759:6000:ddab:3141:4da0:8878]:8333\n-[2600:8805:2400:14e:12dd:b1ff:fef2:3013]:8333\n-[2601:602:8d80:b63:dc3e:24ff:fe92:5eb]:8333\n-[2602:ffb6:4:2798:f816:3eff:fe2f:5441]:8333\n-[2602:ffb6:4:739e:f816:3eff:fe00:c2b3]:8333\n-[2602:ffb8::208:72:57:200]:8333\n-[2604:1380:4111:9300::1]:8333\n-[2604:4300:a:2e:21b:21ff:fe11:392]:8333\n-[2604:4500::2e06]:8112\n-[2604:5500:706a:4000:fc79:b9bb:1d7:c325]:8333\n-[2604:5500:c134:4000::3fc]:32797\n-[2604:6800:5e11:162:5c8f:d2ff:fe26:146f]:8333\n-[2605:4d00::50]:8333\n-[2605:6400:20:13bf:df1d:181c:83bb:22e8]:8333\n-[2605:ae00:203::203]:8333\n-[2605:c000:2a0a:1::102]:8333\n-[2607:f2c0:f00e:300::54]:8333\n-[2607:f2f8:ad40:bc1::1]:8333\n-[2607:f470:8:1048:ae1f:6bff:fe70:7240]:8333\n-[2607:ff28:800f:97:225:90ff:fe75:1110]:8333\n-[2620:11c:5001:1118:d267:e5ff:fee9:e673]:8333\n-[2620:6e:a000:2001::6]:8333\n-[2804:14d:4c93:9809:9769:da80:1832:3480]:8333\n-[2a00:1328:e101:c00::163]:8333\n-[2a00:1398:4:2a03:215:5dff:fed6:1033]:8333\n-[2a00:13a0:3015:1:85:14:79:26]:8333\n-[2a00:1630:14::101]:8333\n-[2a00:1768:2001:27::ef6a]:8333\n-[2a00:1828:a004:2::666]:8333\n-[2a00:1838:36:17::38cb]:8333\n-[2a00:1838:36:7d::d3c6]:8333\n-[2a00:1c10:2:709:58f7:e0ff:fe24:a0ba]:22220\n-[2a00:1c10:2:709::217]:22220\n-[2a00:1f40:5001:100::31]:8333\n-[2a00:6020:1395:1400:baf7:2d43:60b3:198b]:8333\n-[2a00:7c80:0:10b::3faf]:8333\n-[2a00:8a60:e012:a00::21]:8333\n-[2a00:ab00:603:84::3]:8333\n-[2a00:bbe0:cc:0:62a4:4cff:fe23:7510]:8333\n-[2a00:ca8:a1f:3025:f949:e442:c940:13e8]:8333\n-[2a00:d2a0:a:3d00:1cdf:38bb:a7d6:c251]:8333\n-[2a00:d880:11::20e]:8333\n-[2a00:ec0:7207:9100:5f8f:25dd:2574:3982]:8333\n-[2a00:f820:433::36]:8333\n-[2a01:138:a017:b018::42]:8333\n-[2a01:430:17:1::ffff:1153]:8333\n-[2a01:490:16:301::2]:8333\n-[2a01:4b00:807c:1b00:cda1:c6a:2bad:2418]:8333\n-[2a01:4b00:80e7:5405::1]:8333\n-[2a01:4f8:192:4212::2]:8433\n-[2a01:7a0:2:137c::3]:8333\n-[2a01:7a7:2:1467:ec4:7aff:fee2:5690]:8333\n-[2a01:7c8:d002:10f:5054:ff:fe5c:dac7]:8333\n-[2a01:7c8:d002:318:5054:ff:febe:cbb1]:8333\n-[2a01:8740:1:ffc5::8c6a]:8333\n-[2a01:cb00:f98:ca00:5054:ff:fed4:763d]:8333\n-[2a01:cb14:cf6:bc00:21e5:f12e:32c8:145]:8333\n-[2a01:d0:0:1c::245]:8333\n-[2a01:d0:bef2::12]:8333\n-[2a01:e35:2e40:6830:211:32ff:fea6:de3d]:8333\n-[2a02:1205:c6aa:60c0:70d8:aaee:a82d:993c]:8333\n-[2a02:169:502::614]:8333\n-[2a02:180:1:1::5b8f:538c]:8333\n-[2a02:348:62:5ef7::1]:8333\n-[2a02:390:9000:0:218:7dff:fe10:be33]:8333\n-[2a02:7aa0:1619::adc:8de0]:8333\n-[2a02:7b40:b0df:8925::1]:8333\n-[2a02:7b40:b905:37db::1]:8333\n-[2a02:810d:8cbf:f3a8:96c6:91ff:fe17:ae1d]:8333\n-[2a02:8389:1c0:9680:201:2eff:fe82:b3cc]:8333\n-[2a02:a454:a516:1:517:928:7e0d:957c]:8333\n-[2a02:af8:fab0:804:151:236:34:161]:8333\n-[2a02:af8:fab0:808:85:234:145:132]:8333\n-[2a02:e00:fff0:1e2::a]:8333\n-[2a03:2260:3006:d:d307:5d1d:32ca:1fe8]:8333\n-[2a03:6000:870:0:46:23:87:218]:8333\n-[2a03:9da0:f6:1::2]:8333\n-[2a03:c980:db:47::]:8333\n-[2a03:e2c0:1ce::2]:8333\n-[2a04:3544:1000:1510:706c:abff:fe6c:501c]:8333\n-[2a04:52c0:101:383::2a87]:8333\n-[2a04:52c0:101:3fb::4c27]:8333\n-[2a04:ee41:83:50df:d908:f71d:2a86:b337]:8333\n-[2a05:6d40:b94e:d100:225:90ff:fe0d:cfc2]:8333\n-[2a05:e5c0:0:100:250:56ff:feb9:d6cb]:8333\n-[2a05:fc87:1:6::2]:8333\n-[2a05:fc87:4::8]:8333\n-[2a07:5741:0:115d::1]:8333\n-[2a07:a880:4601:1062:b4b4:bd2a:39d4:7acf]:51401\n-[2a07:abc4::1:946]:8333\n-[2a07:b400:1:34c::2:1002]:8333\n-[2a0a:8c41::b4]:8333\n-[2a0a:c801:1:7::183]:8333\n-[2a0b:ae40:3:4a0a::15]:8333\n-[2a0f:df00:0:254::46]:8333\n-[2c0f:f598:5:1:1001::1]:8333\n-[2c0f:fce8:0:400:b7c::1]:8333\n-226eupdnaouu4h2v.onion:8333\n-22h7b6f3caabqqsu.onion:8333\n-23wdfqkzttmenvki.onion:8333\n-23yi3frxymtwdgre.onion:8333\n-2ajon3moyf4i2hbb.onion:8333\n-2bfmlpk55hffpl6e.onion:8333\n-2ckmbf6sglwydeth.onion:8333\n-2hkusi5gcaautwqf.onion:8333\n-2ivhmlbxbgnkcykl.onion:8333\n-2mmxouhv6nebowkq.onion:8333\n-2qsnv6exnuuiar7z.onion:8333\n-2qudbhlnvqpli3sz.onion:8333\n-2ujxdfovfyjpmdto.onion:8333\n-2xdgeufrek3eumkw.onion:8333\n-2xdzsruhsej4tsiw.onion:8333\n-34ran2woq4easmss.onion:8333\n-36q7khhej2lxd3wf.onion:8333\n-373wjdspuo52utzq.onion:8333\n-376klet5xqbrg2jv.onion:8333\n-37kwd7fxop766l5k.onion:8333\n-3e5t7hq4alt5tovx.onion:8333\n-3gbxhebfhouuwgc3.onion:8333\n-3hgbjze2nbwyuewf.onion:8333\n-3iuuvrd2waha2cxo.onion:8333\n-3jtxujdaiwh6iltu.onion:8333\n-3l5eq2du7mvscj4a.onion:8333\n-3nofngnqlqeehn7o.onion:8333\n-3r44ddzjitznyahw.onion:8333\n-3vtbuwmton7vq5qz.onion:8333\n-46ohzttz4peki43g.onion:8333\n-47fl3ivl4v56jstr.onion:8333\n-47i6qrl2ijqcwlg6.onion:8333\n-47uupgzcnrwahoto.onion:8333\n-4c5cki37evofds6d.onion:8333\n-4eq36jrx7xuytfpc.onion:8333\n-4ewkdxvcg57adrni.onion:8333\n-4flvgibnm2nld3na.onion:8333\n-4iaontym47imawe4.onion:8333\n-4jxz37oou5ag763c.onion:8333\n-4mnkvj6ha73eqnbk.onion:8333\n-4nnuyxm5k5tlyjq3.onion:8333\n-4nz2yg4cnote3ej7.onion:8333\n-4pozwh6564ygzddk.onion:8333\n-4qgfb56rvpbmesx7.onion:8333\n-4rsax23taqzwmimj.onion:8333\n-4u5j5ay6rasowt4m.onion:8333\n-4vorvtoyegh4zbvr.onion:8333\n-52s4j5pldwlpzhtw.onion:8333\n-5abpiiqfvekoejro.onion:8333\n-5aydzxx6jyoz3nez.onion:8333\n-5cxzdsrtok5dgo4a.onion:8333\n-5eduikpudie3jyrf.onion:8333\n-5epeafkmya4fv5d5.onion:8333\n-5fyxlztic3t6notz.onion:8333\n-5hd6eyew5ybnq6gb.onion:8333\n-5jyfzhwksb6urrp2.onion:8333\n-5nooqgct567ig57v.onion:8333\n-5nsfm4nqqzzprjrp.onion:8333\n-5oqstxspzhlgjef6.onion:8333\n-5pzzmd4tfonrqzb2.onion:8333\n-5sckmx4yucbnp4io.onion:8333\n-5ue7worzbn6hon3e.onion:8333\n-5wxhx2tozpovf6z3.onion:8333\n-5xk3yun36e32e34i.onion:8333\n-5zght2g7vcsapi65.onion:8333\n-62dcdpvdolfzkdzl.onion:8333\n-63bko2mhixnn2b7d.onion:8333\n-67hjvfv6wictalm5.onion:8333\n-6g6ko4klkf5atldi.onion:8333\n-6k5zreexw4cadxi5.onion:8333\n-6kf5ayhlpenywgas.onion:8333\n-6maigxjvcet4pite.onion:8333\n-6ressv4dvplb5ihh.onion:8333\n-6rjex6gyuaui3c5e.onion:8333\n-6skgnf43pphdvjua.onion:8333\n-6stxaoduwisg5sqh.onion:8333\n-6xqy4ts6bo6u5dgm.onion:8333\n-7avnl3dqpgu23jva.onion:8333\n-7ff4wk266no23txn.onion:8333\n-7hipbuzfdcyzqkkg.onion:8333\n-7sjmlzrthjlpfydk.onion:8333\n-7tut3zt2akwrmw6x.onion:8333\n-7uhsjzj6nx3dfnxt.onion:8333\n-7wm4wso3wvatxnbt.onion:8333\n-7ykmzuybwd2ptzg4.onion:8333\n-a27bvhina4y23jxo.onion:8333\n-a53vtdm7uiet5vdl.onion:8333\n-a56572xjuofnt2dp.onion:8333\n-abp25knifdsnc2rv.onion:8333\n-aefx7ubzpal7clak.onion:8333\n-ai5r2diozoe7rrdz.onion:8333\n-aipupphit3enggpj.onion:8333\n-algpjjygd3gtnmpp.onion:8333\n-alihua7rhyc452hr.onion:8333\n-am3gyyfynxzwyxhx.onion:8333\n-ankozzfhl2r3uc6u.onion:8333\n-at3twjlbtc2lqnq5.onion:8333\n-avqobl72pmc64dyi.onion:8333\n-awmdz2fs3b5h5ut5.onion:8333\n-ayywpiy77butdjrj.onion:8333\n-b2i3pj7c24cvprs7.onion:8333\n-b4ilebyxcu6nttio.onion:8333\n-b4vvkbqipcmkwp4v.onion:8333\n-bddfqxps5ibd3ftw.onion:8333\n-be5bgcpo4ooux5qy.onion:8333\n-bgla4m6zetvtv7ls.onion:8333\n-bh32gzw3nyckzqut.onion:8333\n-bho4kodpehn7xr3x.onion:8333\n-bitcoin4rlfa4wqx.onion:8333\n-biw7s6jf6r2mf3cu.onion:8333\n-bk7yp6epnmcllq72.onion:8333\n-blcktrgve5vetjsk.onion:8333\n-blwbp7gfdffdsx4g.onion:8333\n-bnxn6qqc55gvn5op.onion:8333\n-bp7o22lvcjawelvv.onion:8333\n-bqqyqucgj4tchn64.onion:8333\n-bvdzmutcqf7gzzn5.onion:8333\n-c36zmegjkinftmtf.onion:8333\n-c4fn62gnltlgrptv.onion:8333\n-caael5yedviooqzk.onion:8333\n-caq54ablfbrnumdd.onion:8333\n-cernrmrk5zomzozn.onion:8333\n-chri6itgjaagof4t.onion:8333\n-cncwik3tnd2ejm5z.onion:8333\n-cuyjqoziemcmwaxl.onion:8333\n-cx7qa2gpqyp7pld5.onion:8333\n-czp7wgaus4gvio72.onion:8333\n-d2fn54rfyjdangi4.onion:8333\n-d2sk45u6ca64yeqh.onion:8333\n-d3aowmngvktsziae.onion:8333\n-d5iu4aiz3y2kgcgj.onion:8333\n-d6zbw2sxnxgj5sv3.onion:8333\n-db5rd5e46t7mgini.onion:8333\n-dci2gulorl44yj55.onion:8333\n-ddpth2mwt3rsvoog.onion:8333\n-dfrwza7fcecknnms.onion:8333\n-djwhjfj4rh3oz3yj.onion:8333\n-dkk5mmpe5jtjodk5.onion:8333\n-doj3zgmsbzurmqgp.onion:8333\n-dpce4f3rcqddzbx5.onion:8333\n-drwo3vnxch5ozfbo.onion:8333\n-duikkidxip3lyexn.onion:8333\n-duqdliptc22i6hf5.onion:8333\n-duyp4coh5d7nh3ud.onion:8333\n-duz5two3z7c55lxj.onion:8333\n-dvu6dlar6ezc6xen.onion:8333\n-dy6zqs46ycleayyp.onion:8333\n-dz2ydmj3yqrcm4r7.onion:8333\n-e2b2a5suvdawzxud.onion:8333\n-e33h57j2ewkkqsn5.onion:8333\n-e5kjiay7pzj5qpzv.onion:8333\n-e7iko42d2wzcmvy4.onion:8333\n-ea6boh4kotq56ws5.onion:8333\n-efdx6gc4s5ezyqeg.onion:8333\n-efrpuuic6ukeyqcs.onion:8333\n-egruc3bi3itru6gq.onion:8333\n-erc6tjs2ucyadl23.onion:8333\n-eue2n5sk5tktg5bv.onion:8333\n-ezkr7stq4w7ohjrt.onion:8333\n-f3nyyjba6kpxznhk.onion:8333\n-faq73vj4pcs73thu.onion:8333\n-fdvtlj3pscbxuh75.onion:8333\n-fgdpxov4nzxvhcpv.onion:8333\n-fisqq6vzk3m6t225.onion:8333\n-fkgp3qwegacrd2bj.onion:8333\n-fo3tdfwx27takqq5.onion:8333\n-fqkxtchwypispkpv.onion:8333\n-fqunuhlwvd7rq6d5.onion:8333\n-frwt5mscpyhiuwpe.onion:8333\n-fta4gfjiuv6f2le2.onion:8333\n-fuoy2ipuqrqwe5cf.onion:8333\n-fz6nsij6jiyuwlsc.onion:8333\n-g3vlnaaaog5sgui5.onion:8333\n-g44i6jwsutkwmspz.onion:8333\n-g55t65d5ckjixcnw.onion:8333\n-gajd6eyrl2qwkfmg.onion:8333\n-gblue3hr53p4grx7.onion:8333\n-gbpro5tzduiuff4v.onion:8333\n-gc4l3tql32qhfgmi.onion:8333\n-gcnlorvtpycuajc6.onion:8333\n-gdsib2nk2eeoidgc.onion:8333\n-ge5gm7c6w7yahpz7.onion:8333\n-gegcteeep4cwftl5.onion:8333\n-gfoyraudgv5qjdku.onion:8333\n-ggpbuypmxgi26lc6.onion:8333\n-ghqivye7cfckisnt.onion:8333\n-girakxomne5fby64.onion:8333\n-glz5gfk33tuug5ne.onion:8333\n-gplatxoyg5nxl5rj.onion:8333\n-gripl5xjwy2dcr6c.onion:8333\n-gthhzlmqci22nxru.onion:8333\n-gto2d64swosfmk6c.onion:8333\n-guaciney52mgcbp2.onion:8333\n-gwktgrmtwk6nv5sc.onion:8333\n-gwoxnokdcwc7hy4p.onion:8333\n-h333f4qnwe7mrymn.onion:8333\n-h6a32n4blbwwyn4d.onion:8333\n-hafwtrbooszoembm.onion:8333\n-hbwhgsb3eeinnr6t.onion:8333\n-hcv6foxh5mk7fhb5.onion:8333\n-hd6hktcl6wamzlzm.onion:8333\n-hda6msa4v4rt77gx.onion:8333\n-hdgnxkuqsd6wjwwx.onion:8333\n-hgh3azn3eesddvcg.onion:8333\n-hhyxu6bwkjefejoz.onion:8333\n-hizn6rmofsg3upmn.onion:8333\n-hjqxxsy2osemfvev.onion:8333\n-hkbp7mbgw6klls4s.onion:8333\n-hlojuwiwbkoj4kdz.onion:8333\n-hlzxsjr7ob3qzzqq.onion:8333\n-hniuzplezebyhv7a.onion:8333\n-hondewkj4s4rdcwf.onion:8333\n-hql5nv6vhceid3bn.onion:8333\n-hspjo7mqrre5gyxr.onion:8333\n-hu64s2mdr3x7yxka.onion:8333\n-hvwvq2swkqw3qvyo.onion:8333\n-hwo2biyndrrvpl6f.onion:8333\n-hzxj3dth3y2xt45o.onion:8333\n-i3ufxuw3t7cxfdpq.onion:8333\n-ia3n3q5u45gvpx7a.onion:8333\n-icfgs3fctckd4yeo.onion:8333\n-icpz6thqvdjcwlvb.onion:8333\n-if32zo5u4mhdunfd.onion:8333\n-ig4lguql6vxkbmmr.onion:8333\n-ihhcr7fhczqdac4y.onion:8333\n-ijm2tyxob7vkvazz.onion:8333\n-ip3puuqghumfz5ww.onion:8333\n-iq3ket72f3y2frpg.onion:8333\n-iqagt5co4dt7h6hf.onion:8333\n-iugw42ih6hprqr26.onion:8333\n-ivf774v4t7k63i6d.onion:8333\n-ivfacdf7cig2z2y2.onion:8333\n-ivsxdwku5og2zj4l.onion:8333\n-ixwgrhaklvu4g6o7.onion:8333\n-iz56moo6mkp3g7xo.onion:8333\n-j2cp5muw5j3lumcx.onion:8333\n-j2lrkrwugldwewws.onion:8333\n-j2qtmkd2dablssz4.onion:8333\n-j5e2yuan57v2h5el.onion:8333\n-j5jfrdthqt5g25xz.onion:8333\n-j5lk2uv2bspfqxfk.onion:8333\n-janvvzsmzcsj3fil.onion:8333\n-jenn2tmyl3xxarmq.onion:8333\n-jfoe5f2sczojfp32.onion:8333\n-jgcgi6k2pxooi5q3.onion:8333\n-jhana24s3dzkitzp.onion:8333\n-jitgulb24mvfqrdg.onion:8333\n-jjuvwbjfzljmn7t3.onion:8333\n-jlcfomgr5xfexaif.onion:8333\n-jlehs6ybb26qlnna.onion:8333\n-jljzz4tmbqrxq3q5.onion:8333\n-joc4oqceedkg77vf.onion:8333\n-jr5y6njubcbv6g37.onion:8333\n-jroaos6la4vieho4.onion:8333\n-jsmphgkay7iihbkr.onion:8333\n-jtksnokusbzms7wl.onion:8333\n-ju5duo3r6p6diznc.onion:8333\n-jw6zymxcnebahuuj.onion:8333\n-jxalvhf7w7wevqzw.onion:8333\n-jyzhe3ig44ickysb.onion:8333\n-jze6ukn4idrh44eo.onion:8333\n-k4glotlxnmttb6ct.onion:8333\n-k7uy3iwmvguzygd2.onion:8333\n-kl23ofag3ukb6hxl.onion:8333\n-kokt2qr6d4pmyb2d.onion:8333\n-kpalu3h5ydkoaivs.onion:8333\n-krdpbdvtqw5c5lee.onion:8333\n-kriw6kzjzarzgb3g.onion:8333\n-krp2thcmwrpsoue6.onion:8333\n-kvyvdwjwtae5mo77.onion:8333\n-kyrxri5rbr6ipurs.onion:8333\n-kz3oxg7745dxt62q.onion:8333\n-l3w5fcki2wbro2qb.onion:8333\n-l44bisuxhh7reb5q.onion:8333\n-l565g523emjebusj.onion:8333\n-l6w5kdeigwsgnf5t.onion:8333\n-l7a4emryfxkjgmmb.onion:8333\n-l7sloscjqqbifcsw.onion:8333\n-laafjqvtog7djfl2.onion:8333\n-lah676kxbgbgw3u2.onion:8333\n-lbq2a7pnpmviw2qo.onion:8333\n-lc4wnpql27vymi35.onion:8333\n-ldoffbfpk3j6c7y7.onion:8333\n-lehpmglkivobq2qo.onion:8333\n-lgewpjz7ie7daqqr.onion:8333\n-lgkvbvro67jomosw.onion:8333\n-liw5z4ngic6b7vnv.onion:8333\n-ljs7gwrmmza6q6ga.onion:8333\n-lmvax3e6awaxvhqi.onion:8333\n-lrz77dwf7yq4cgnt.onion:8333\n-lva54pnbq2nsmjyr.onion:8333\n-lxc2uphxyyxflhnf.onion:8333\n-lyjybdr4hmj3bqab.onion:8333\n-lz2zlnmyynwtgwf2.onion:8333\n-m6hcnpikimyh37yp.onion:8333\n-md635omjnrgheed3.onion:8333\n-mdb3oupwf4f2qyjb.onion:8333\n-me6d4esx7ohdnxne.onion:8333\n-mecfkik5ci47wckj.onion:8333\n-mfrvevn7w6rwsp4r.onion:8333\n-mimuutlew5srtduk.onion:8333\n-mnysk3izxvra3huv.onion:8333\n-mqu6gqtrhm6xzwwh.onion:8333\n-mwuc6vom4ngijtb3.onion:8333\n-mxdtrjhe2yfsx3pg.onion:8333\n-n4ibet4piscv22nj.onion:8333\n-n6d46vbzx43bevlb.onion:8333\n-n6t6kfgzlvozxhfm.onion:8333\n-n7rrochwerf2qxze.onion:8333\n-ncsdiqmnxhnnjbsz.onion:8333\n-nitxw3ilffngpumv.onion:8333\n-njlsvubildehluwr.onion:8333\n-njslfsivyyhixbsp.onion:8333\n-nkf5e6b7pl4jfd4a.onion:8333\n-nkppsb3t3ducje6m.onion:8333\n-nlfwyqksmeqe45zz.onion:8333\n-nlyjmpcmpaz5b4aa.onion:8333\n-nnmv7z65k65mcesr.onion:8333\n-nrrfwdmrm3imuebn.onion:8333\n-nrrmkgmulpgsbwlt.onion:8333\n-nw4h7leckut7eapv.onion:8333\n-nwky3wd3ihoidvb5.onion:8333\n-ny4kkemmmqv4lptm.onion:8333\n-o25wkcw7eorg2toi.onion:8333\n-o2gumvbkw6pm45cf.onion:8333\n-o4yjshdwlbshylqw.onion:8333\n-ofx4qgw6lppnvtgv.onion:8333\n-oketipl4gndqcaus.onion:8333\n-oq5q4qrqijr2kpun.onion:8333\n-oqw3mfoiobqcklxh.onion:8333\n-orsy2v63ecrmdj55.onion:8333\n-ot4tzmznyimmlszk.onion:8333\n-owk6c2jfthwkyahe.onion:8333\n-oy7ss3hm2okx4tun.onion:8333\n-p2pc6wbaepvdi6ce.onion:8333\n-p2x24gdhasmgcl5j.onion:8333\n-p6couujr2ndhllv3.onion:8333\n-pa7dw5bln5lqmu53.onion:8333\n-pasmchtoooj2kchd.onion:8333\n-pdapkkhk6pbcy2tj.onion:8333\n-peh5ajouuw6mw4sr.onion:8333\n-pkuuc5pwl5xygwhr.onion:8333\n-pq4wjl7vg7tsfycc.onion:8333\n-ptbwqhusps5qieql.onion:8333\n-ptwpbwyj5lnyew2f.onion:8333\n-pu7w3jfyrzp7sxsi.onion:8333\n-pwylbyvfuc62hhvx.onion:8333\n-q2fhnnyt5b2ayvce.onion:8333\n-q3i3apuionbazmfe.onion:8333\n-qd6fcpu3pvbf2y3x.onion:8333\n-qfewv3y7a3p4i3bd.onion:8333\n-qhytdttflhbc4rsh.onion:8333\n-qkn35rb3x2gxbwq4.onion:8333\n-qlvlexs7pwac2f4b.onion:8333\n-qogcqirtuta6rlxg.onion:8333\n-qrzqfxkhrmu5v5ro.onion:8333\n-qsyjasq46b2syiys.onion:8333\n-quu4b2zjbnr2ue4y.onion:8333\n-quycfj2wenz6bfyd.onion:8333\n-qvdy3cmocnlv5v7c.onion:8333\n-qvwhpqygan2xky5h.onion:8333\n-qyutwc26ullujafb.onion:8333\n-r45qg2d6iwfdhqwl.onion:8333\n-r4xudr6u4r5nyga4.onion:8333\n-r6apa5ssujxbwd34.onion:8333\n-r6z2gcsu37k3gaah.onion:8333\n-rbrjgfcca6v5b7yo.onion:8333\n-rcifxibawqt6rxzz.onion:8333\n-rdo3xctk3zkzjvln.onion:8333\n-rdvlepy6ghgpapzo.onion:8333\n-recs3a27chv2lg65.onion:8333\n-rfmbiy5vztvn6hyn.onion:8333\n-rli5lbje4k77inzw.onion:8333\n-roqwnmepcj453vfh.onion:8333\n-rpbnx54qniivrmh3.onion:8333\n-rsvvogqdlijp77hv.onion:8333\n-rwm5d4hg3hc77kdt.onion:8333\n-s3yelkvc5f5xeysw.onion:8333\n-s6rx52hitmpp4lge.onion:8333\n-sa6m3rvycipgemky.onion:8333\n-savebeesmkivmfbo.onion:8333\n-sbyjr5npk2mlmfw7.onion:8333\n-serwj42jme5xhhmw.onion:8333\n-sg4vmubv3djrzvuh.onion:8333\n-shsgksluz6jkgp6g.onion:8333\n-sjyzmwwu6diiit3r.onion:8333\n-sk3en3reudg3sdg5.onion:8333\n-skoifp4oj7l4osu5.onion:8333\n-sle2caplkln33e7y.onion:8333\n-smdd7q7gonajdmjq.onion:8333\n-spmhuxjb2cd7leun.onion:8333\n-srkgyv5edn2pa7il.onion:8333\n-sslnjjhnmwllysv4.onion:8333\n-su66ygras6rkdtnl.onion:8333\n-sundvmbjrtgdfahx.onion:8333\n-svd65k5jpal2p3lt.onion:8333\n-svua5hiqluw7o2sw.onion:8333\n-sxqjubmum4rmfgpu.onion:8333\n-t245vi742ti3tnka.onion:8333\n-t4fbovvgzpnimd2p.onion:8333\n-t4l4wv3erkhpde2p.onion:8333\n-t5qchwbr6u5v2agk.onion:8333\n-t7jlaj6ggyx7s5vy.onion:8333\n-ta6sjeqyb27f4n4a.onion:8333\n-tav7utpw4pfy7j6k.onion:8333\n-taxg5z2sxfm5c4d6.onion:8333\n-tekwvnbodbzrlufs.onion:8333\n-tg4uwrjmtr2jlbjy.onion:8333\n-th4cjvffjtw6vomu.onion:8333\n-th6fxymtwnfifqeu.onion:8333\n-thtchhl25u26nglq.onion:8333\n-tiiah7csuoklcvi6.onion:8333\n-tk63x5fk3337z3ud.onion:8333\n-tkgootat6cqn7vyy.onion:8333\n-tnj565wwqz5wpjvs.onion:8333\n-ts6qx37mmpu6nj5y.onion:8333\n-ttjisvxydgbtp56f.onion:8333\n-twn54v7ra2xjgd55.onion:8333\n-txem5meug24g2ezd.onion:8333\n-tyiunn36lmfcq5lr.onion:8333\n-tyv56xs6g6ndzqux.onion:8333\n-u47f3hxwq65sgs4o.onion:8333\n-u4r7fnholrdwwlni.onion:8333\n-u556ofb3myarafwn.onion:8333\n-u5q3gbz4qpz4wvlr.onion:8333\n-uakly3ydrevvpxwi.onion:8333\n-ug6hapi4qtekzc7v.onion:8333\n-ui553qotd6ron3rf.onion:8333\n-uir7f3wltoka6bbb.onion:8333\n-ukrjjhwodl44wmof.onion:8333\n-ul5gm2ixy7kqdfwg.onion:8333\n-undd7rsj4pen3wo4.onion:8333\n-uorwpzfehtykrg43.onion:8333\n-uovsp2yltnaojq6l.onion:8333\n-usazmdcs32ny24dy.onion:8333\n-usazs7glm7geyxkl.onion:8333\n-uss2kedg7qkwgdr5.onion:8333\n-utgyrvw75wv2nymi.onion:8333\n-uzwacms7kyzhehbl.onion:8333\n-v2kdcetvslmdfcwr.onion:8333\n-v5lhnzzv6nngfg5d.onion:8333\n-vc44gb4veppobrt3.onion:8333\n-vfwyhju43wxhzvux.onion:8333\n-vgujufk53lqyolio.onion:8333\n-vheejqq2v5dkb4xr.onion:8333\n-vj64edev4jnqfdsb.onion:8333\n-vmai5uigezr2khkj.onion:8333\n-vmuykd7sxbmi7w57.onion:8333\n-vomeacttinx3mpml.onion:8333\n-vpow2xofg3fwzsdq.onion:8333\n-vsawli4l5ifxdzaw.onion:8333\n-vunubqkfms7sifok.onion:8333\n-vuombnevwul4bqsb.onion:8333\n-vxcpvdng65aefz6t.onion:8333\n-vyxoizdzavp3obau.onion:8333\n-wbeon2ci7lfio6ay.onion:8333\n-wbwevew62mgsrrdz.onion:8333\n-wfaydlg6zyfzjcu5.onion:8333\n-wfz56s5lyn5dysez.onion:8333\n-wg3mq4ugyy2gx32b.onion:8333\n-whky54bctkf2n4p3.onion:8333\n-whmjanqoyzizzc4t.onion:8333\n-wlhou2wxgqyi3x3f.onion:8333\n-wlvkfrplfiioz22o.onion:8333\n-x3ngb3va7dovuenw.onion:8333\n-x57x62bmmnylvo7r.onion:8333\n-xgvm57mhgv564dka.onion:8333\n-xhs3glfwnwiumivn.onion:8333\n-xje5fwvyfdue2u6k.onion:8333\n-xlgubgyly2blvsg5.onion:8333\n-xnlu3tvakngy7tkp.onion:8333\n-xo5marilhuyo7but.onion:8333\n-xsaaxihdygnwxrix.onion:8333\n-xu5mlugdsmzfkvzh.onion:8333\n-xvrxqcptqvieedb2.onion:8333\n-xwzhrrygftq3q4w4.onion:8333\n-y4swmsaxdcos2bnu.onion:8333\n-y5tl4lqi365pplud.onion:8333\n-y5wzeqyaets5na6t.onion:8333\n-y73qk2mzkjkhoky7.onion:8333\n-y7oz3ydnvib4xhbb.onion:8333\n-yah7qgfqqrteoche.onion:8333\n-yba4brm555denlt7.onion:8333\n-ygeqkg4inplsace3.onion:8333\n-yjhnfu75lazbi34h.onion:8333\n-yjw7kqapxx5vggoj.onion:8333\n-ym7inmovbrna4gco.onion:8333\n-yq5cusnuokscy64z.onion:8333\n-yrcaioqrqrdwokqt.onion:8333\n-yrcr7pgjuazad254.onion:8333\n-yrksvon3tmvoohdv.onion:8333\n-ytpus4vx5w7j6wp2.onion:8333\n-ytqcigk2hhdl45ho.onion:8333\n-yxojl3xmjus3dik2.onion:8333\n-yzdqdsqx4fdung6w.onion:8333\n-z33nukt7ngik3cpe.onion:8333\n-z3ywbadw46ndnxgh.onion:8333\n-z6mbqq7llxlrn4kq.onion:8333\n-zb3lrcksn4rzhzje.onion:8333\n-ze7odp7pzarjplsr.onion:8333\n-zgbmhtbja4fy2373.onion:8333\n-zh7hvalcgvjpoaqm.onion:8333\n-ziztvxehmj5mehpg.onion:8333\n-zjii3yecdrmq73y3.onion:8333\n-zkrwmgjuvsza6ye2.onion:8333\n-zoz2aopwi3wfuqwg.onion:8333\n-ztdcfnh46773bivu.onion:8333\n-zuxhc6d3nwpgc4af.onion:8333\n-zuytrfevzjcpizli.onion:8333\n-zvq6dpt3i2ofdp3g.onion:8333\n-zwwm6ga7u2hqe2sd.onion:8333\n-zyqb4lenfspntj5m.onion:8333"
      },
      {
        "sha": "98365ee505ced2410cdc7ea841bf52198b405662",
        "filename": "contrib/seeds/nodes_test.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/seeds/nodes_test.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/seeds/nodes_test.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_test.txt?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,11 +0,0 @@\n-# List of fixed seed nodes for testnet\n-\n-# Onion nodes\n-thfsmmn2jbitcoin.onion\n-it2pj4f7657g3rhi.onion\n-nkf5e6b7pl4jfd4a.onion\n-4zhkir2ofl7orfom.onion\n-t6xj6wilh4ytvcs7.onion\n-i6y6ivorwakd7nw3.onion\n-ubqj4rsu3nqtxmtp.onion\n-"
      },
      {
        "sha": "13385cc816209d2c9fc2acf68343dce15e4dd201",
        "filename": "contrib/seeds/suspicious_hosts.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/seeds/suspicious_hosts.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/seeds/suspicious_hosts.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/suspicious_hosts.txt?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,16 +0,0 @@\n-130.211.129.106\n-148.251.238.178\n-176.9.46.6\n-178.63.107.226\n-54.173.72.127\n-54.174.10.182\n-54.183.64.54\n-54.194.231.211\n-54.66.214.167\n-54.66.220.137\n-54.67.33.14\n-54.77.251.214\n-54.94.195.96\n-54.94.200.247\n-83.81.130.26\n-88.198.17.7\n\\ No newline at end of file"
      },
      {
        "sha": "eaca473b400f0e57066d7f13062dc247dab7f41b",
        "filename": "contrib/testgen/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,8 +0,0 @@\n-### TestGen ###\n-\n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n-\n-Usage:\n-\n-    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py valid 50 > ../../src/test/data/key_io_valid.json\n-    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py invalid 50 > ../../src/test/data/key_io_invalid.json"
      },
      {
        "sha": "c7ebac50d4b7753f501aaf2af66fbba178eaac7c",
        "filename": "contrib/testgen/base58.py",
        "status": "removed",
        "additions": 0,
        "deletions": 115,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/testgen/base58.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/testgen/base58.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/base58.py?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d",
        "patch": "@@ -1,115 +0,0 @@\n-# Copyright (c) 2012-2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Bitcoin base58 encoding and decoding.\n-\n-Based on https://bitcointalk.org/index.php?topic=1026.0 (public domain)\n-'''\n-import hashlib\n-\n-# for compatibility with following code...\n-class SHA256:\n-    new = hashlib.sha256\n-\n-if str != bytes:\n-    # Python 3.x\n-    def ord(c):\n-        return c\n-    def chr(n):\n-        return bytes( (n,) )\n-\n-__b58chars = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n-__b58base = len(__b58chars)\n-b58chars = __b58chars\n-\n-def b58encode(v):\n-    \"\"\" encode v, which is a string of bytes, to base58.\n-    \"\"\"\n-    long_value = 0\n-    for (i, c) in enumerate(v[::-1]):\n-        if isinstance(c, str):\n-            c = ord(c)\n-        long_value += (256**i) * c\n-\n-    result = ''\n-    while long_value >= __b58base:\n-        div, mod = divmod(long_value, __b58base)\n-        result = __b58chars[mod] + result\n-        long_value = div\n-    result = __b58chars[long_value] + result\n-\n-    # Bitcoin does a little leading-zero-compression:\n-    # leading 0-bytes in the input become leading-1s\n-    nPad = 0\n-    for c in v:\n-        if c == 0:\n-            nPad += 1\n-        else:\n-            break\n-\n-    return (__b58chars[0]*nPad) + result\n-\n-def b58decode(v, length = None):\n-    \"\"\" decode v into a string of len bytes\n-    \"\"\"\n-    long_value = 0\n-    for i, c in enumerate(v[::-1]):\n-        pos = __b58chars.find(c)\n-        assert pos != -1\n-        long_value += pos * (__b58base**i)\n-\n-    result = bytes()\n-    while long_value >= 256:\n-        div, mod = divmod(long_value, 256)\n-        result = chr(mod) + result\n-        long_value = div\n-    result = chr(long_value) + result\n-\n-    nPad = 0\n-    for c in v:\n-        if c == __b58chars[0]:\n-            nPad += 1\n-            continue\n-        break\n-\n-    result = bytes(nPad) + result\n-    if length is not None and len(result) != length:\n-        return None\n-\n-    return result\n-\n-def checksum(v):\n-    \"\"\"Return 32-bit checksum based on SHA256\"\"\"\n-    return SHA256.new(SHA256.new(v).digest()).digest()[0:4]\n-\n-def b58encode_chk(v):\n-    \"\"\"b58encode a string, with 32-bit checksum\"\"\"\n-    return b58encode(v + checksum(v))\n-\n-def b58decode_chk(v):\n-    \"\"\"decode a base58 string, check and remove checksum\"\"\"\n-    result = b58decode(v)\n-    if result is None:\n-        return None\n-    if result[-4:] == checksum(result[:-4]):\n-        return result[:-4]\n-    else:\n-        return None\n-\n-def get_bcaddress_version(strAddress):\n-    \"\"\" Returns None if strAddress is invalid.  Otherwise returns integer version of address. \"\"\"\n-    addr = b58decode_chk(strAddress)\n-    if addr is None or len(addr)!=21:\n-        return None\n-    version = addr[0]\n-    return ord(version)\n-\n-if __name__ == '__main__':\n-    # Test case (from http://gitorious.org/bitcoin/python-base58.git)\n-    assert get_bcaddress_version('15VjRaDX9zpbA8LVnbrCAFzrVzN7ixHNsC') == 0\n-    _ohai = 'o hai'.encode('ascii')\n-    _tmp = b58encode(_ohai)\n-    assert _tmp == 'DYB3oMS'\n-    assert b58decode(_tmp, 5) == _ohai\n-    print(\"Tests passed\")"
      },
      {
        "sha": "49320d92e6dafc7a2c173ced1dd2f19ac5e5c481",
        "filename": "contrib/testgen/gen_key_io_test_vectors.py",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/testgen/gen_key_io_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/testgen/gen_key_io_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_key_io_test_vectors.py?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "ece02dc24e8f93f248102c3dd810ed6394792414",
        "filename": "contrib/valgrind.supp",
        "status": "removed",
        "additions": 0,
        "deletions": 185,
        "changes": 185,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/valgrind.supp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/valgrind.supp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/valgrind.supp?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "e95a57586ff1c34fef56f4d851934f0d881bbd8c",
        "filename": "contrib/verify-commits/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 57,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verify-commits/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verify-commits/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/README.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "c572806f2612e8c6cec07251e232e4d342ab3186",
        "filename": "contrib/verify-commits/allow-incorrect-sha512-commits",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verify-commits/allow-incorrect-sha512-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verify-commits/allow-incorrect-sha512-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-incorrect-sha512-commits?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "3abf82e529cbbbc766d0b7f7c4028d7721eb6755",
        "filename": "contrib/verify-commits/allow-revsig-commits",
        "status": "removed",
        "additions": 0,
        "deletions": 504,
        "changes": 504,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verify-commits/allow-revsig-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verify-commits/allow-revsig-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-revsig-commits?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "7aab274b9a848fce47a53acf71b54dfb1bf3db0e",
        "filename": "contrib/verify-commits/allow-unclean-merge-commits",
        "status": "removed",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verify-commits/allow-unclean-merge-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verify-commits/allow-unclean-merge-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-unclean-merge-commits?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "db5bfce208ef18e72d8643f83e773723ccd39116",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "78873dc0c38ebe6d800ab319c0cc21b9eeb641cd",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "c60f8ab695e9c0fb01feafb1c28074cb98ab122d",
        "filename": "contrib/verify-commits/trusted-git-root",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verify-commits/trusted-git-root",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verify-commits/trusted-git-root",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-git-root?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "27fede6277616c3cfe500c662636e5449e482b5b",
        "filename": "contrib/verify-commits/trusted-keys",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verify-commits/trusted-keys",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verify-commits/trusted-keys",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-keys?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "7d41f90ad70ef87caa0ce40bee269ff9d61d9c05",
        "filename": "contrib/verify-commits/trusted-sha512-root-commit",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verify-commits/trusted-sha512-root-commit",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verify-commits/trusted-sha512-root-commit",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-sha512-root-commit?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "7e46c6fd47733fc35d3194faf0399f96640ca2af",
        "filename": "contrib/verify-commits/verify-commits.py",
        "status": "removed",
        "additions": 0,
        "deletions": 165,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verify-commits/verify-commits.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verify-commits/verify-commits.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.py?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "4209fdb3644e558c029bacc9a02ad9823b120eb6",
        "filename": "contrib/verifybinaries/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 41,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verifybinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verifybinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/README.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "4296998631cff715d429c5b203c41b53f8e722e0",
        "filename": "contrib/verifybinaries/verify.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 177,
        "changes": 177,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verifybinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/verifybinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/verify.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "31720e72e7081d61a6905adbfeabdc8d15a517f6",
        "filename": "contrib/windeploy/detached-sig-create.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/windeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/windeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/detached-sig-create.sh?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "4023a5b638f89f9838990db0700ed9ec5a629e9b",
        "filename": "contrib/windeploy/win-codesign.cert",
        "status": "removed",
        "additions": 0,
        "deletions": 100,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/windeploy/win-codesign.cert",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/windeploy/win-codesign.cert",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/win-codesign.cert?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "8b8503331d2c23abc9514f204bab1771de39b179",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "removed",
        "additions": 0,
        "deletions": 90,
        "changes": 90,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "19c506ce5447d4b9099f741fd33f800d101bcf6d",
        "filename": "depends/.gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/.gitignore?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "1ad21f6821bba036d92208aae32310ae1a1f62bd",
        "filename": "depends/Makefile",
        "status": "removed",
        "additions": 0,
        "deletions": 253,
        "changes": 253,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "5225a6d5c41ef1e1a46820660bcc54aa583ad9e7",
        "filename": "depends/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 153,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "f4103fc1f27eebb9f85a913413d4ff755bab6ea9",
        "filename": "depends/builders/darwin.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/builders/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/builders/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/darwin.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "f097db65d603d596c5ceabeadfe32fa3a296a91d",
        "filename": "depends/builders/default.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/builders/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/builders/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/default.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "b03f42401047adf98bc997a7eece42c2c79a2c2c",
        "filename": "depends/builders/linux.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/builders/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/builders/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/linux.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "7f9ebbe31097dff5e381dceffadbf64502ab3d46",
        "filename": "depends/config.guess",
        "status": "removed",
        "additions": 0,
        "deletions": 1665,
        "changes": 1665,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "87a337930370eca23beee0e4c0456ab290db9f9b",
        "filename": "depends/config.site.in",
        "status": "removed",
        "additions": 0,
        "deletions": 104,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "a318a46868500fbeea993e693e32701041ffad1b",
        "filename": "depends/config.sub",
        "status": "removed",
        "additions": 0,
        "deletions": 1793,
        "changes": 1793,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "0a6f2e644219008dcb4cefe4d7a152e838e9b66d",
        "filename": "depends/description.md",
        "status": "removed",
        "additions": 0,
        "deletions": 53,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/description.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/description.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/description.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "58d882eb053ac571cd05547e951feaaca1854c74",
        "filename": "depends/funcs.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 268,
        "changes": 268,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/funcs.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/funcs.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/funcs.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "eabd84bbbe1020a67273bb27de30209fbefd8b88",
        "filename": "depends/hosts/android.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/hosts/android.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/hosts/android.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/android.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "6099fd4c716b80f4bcf92be048ea8fa328501401",
        "filename": "depends/hosts/darwin.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 50,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/hosts/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/hosts/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/darwin.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "258619a9d059086cb8fb25e4df37617088cc2e32",
        "filename": "depends/hosts/default.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 39,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/hosts/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/hosts/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/default.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "8ab448ce5fd458be142ece6ba7a001a76d8f9033",
        "filename": "depends/hosts/linux.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/hosts/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/hosts/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/linux.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "be5fec570c84cec02844d0faf63bb11b36e708c3",
        "filename": "depends/hosts/mingw32.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/hosts/mingw32.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/hosts/mingw32.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/mingw32.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "7ed20ea1297dcad84173c4ec085dee714f87f22f",
        "filename": "depends/packages.md",
        "status": "removed",
        "additions": 0,
        "deletions": 198,
        "changes": 198,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "5953341d9f774cb3abfbf6a6d8c0aa2b2a4a4536",
        "filename": "depends/packages/bdb.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/bdb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/bdb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/bdb.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "d8bce108b16a5863d600d19270f0f52807d60449",
        "filename": "depends/packages/boost.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 50,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "abeb26545f898e4dffdb18f1452d77197f37a35c",
        "filename": "depends/packages/capnp.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/capnp.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/capnp.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/capnp.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "902fe43be267919d8d71c44d9b6dea5cea9928d1",
        "filename": "depends/packages/expat.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/expat.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/expat.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/expat.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "0d5f94f380c569cb7d09d3541c42467ad59a1fb1",
        "filename": "depends/packages/fontconfig.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/fontconfig.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/fontconfig.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/fontconfig.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "a1584608e19f714ca190875aae124edd33a1456a",
        "filename": "depends/packages/freetype.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/freetype.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/freetype.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/freetype.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "4c55c2df04b5cd50f1af5ae63bab275d7c1284ac",
        "filename": "depends/packages/libXau.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/libXau.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/libXau.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXau.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "1cd5a1749ac88c79f8e667aeac40d23105772219",
        "filename": "depends/packages/libevent.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 39,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "3e5cf5f1603a66c0244667b909cbb0b9f6541376",
        "filename": "depends/packages/libmultiprocess.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/libmultiprocess.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/libmultiprocess.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libmultiprocess.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "2204b381958b8f0be875308764df849b62e9af40",
        "filename": "depends/packages/libxcb.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 49,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/libxcb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/libxcb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libxcb.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "49a584e462b36b09c5b2bcde7b69b1256daf5a2b",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "c3054cbd1a16e66d8ff592b27bdc7fc7a12c0f2c",
        "filename": "depends/packages/native_biplist.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/native_biplist.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/native_biplist.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_biplist.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "ed5a6deee2fdbfbd658ddff8d5aa5c129860bf6f",
        "filename": "depends/packages/native_capnp.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/native_capnp.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/native_capnp.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_capnp.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "d56b636695508699d998191f8220e47fe01df6d1",
        "filename": "depends/packages/native_cctools.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 116,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "7bdf2d7dfda9a221ff75e842ea887f35ca153f42",
        "filename": "depends/packages/native_cdrkit.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/native_cdrkit.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/native_cdrkit.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cdrkit.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "f99b689ecdc7406233dd36191a592be37aeed931",
        "filename": "depends/packages/native_ds_store.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/native_ds_store.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/native_ds_store.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ds_store.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "035b767188a6fc43f6a65c1ec6c1c7617879dd02",
        "filename": "depends/packages/native_libdmg-hfsplus.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/native_libdmg-hfsplus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/native_libdmg-hfsplus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libdmg-hfsplus.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "c50fdc3f6bae8e33cde4c361f28a4eacffd5e992",
        "filename": "depends/packages/native_libmultiprocess.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/native_libmultiprocess.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/native_libmultiprocess.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libmultiprocess.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "e60b99dccc98ce44512e0026a712bca1371f5855",
        "filename": "depends/packages/native_mac_alias.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/native_mac_alias.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/native_mac_alias.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_mac_alias.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "4627acb521879b5546bc3e26a6be4b2803257007",
        "filename": "depends/packages/packages.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "d1687883bcd5197372367e4a9a5f029594f9f273",
        "filename": "depends/packages/qrencode.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/qrencode.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/qrencode.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qrencode.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "083bc68d66c3bb1c2b881747d25ec1827a576077",
        "filename": "depends/packages/qt.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 264,
        "changes": 264,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "5b3a61b239c64b2cbf6c538d0548791c75915490",
        "filename": "depends/packages/sqlite.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/sqlite.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/sqlite.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/sqlite.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "01203a0718af93deff60d84fb337848e79ae661e",
        "filename": "depends/packages/xcb_proto.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/xcb_proto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/xcb_proto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xcb_proto.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "6bd867d02b20f4cf46da0b73baa5fd1fab68f6b9",
        "filename": "depends/packages/xproto.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/xproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/xproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xproto.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "c93aa1a74da831a4c33f1835fe4bdeb24441b845",
        "filename": "depends/packages/zeromq.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/zeromq.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/zeromq.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zeromq.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "acb02020a80b2424fe6080a0b64b8ac54d33df62",
        "filename": "depends/packages/zlib.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 31,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/zlib.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/packages/zlib.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zlib.mk?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "58f7ddc7d502cff2b6cad8a81df5e879e8a3360b",
        "filename": "depends/patches/bdb/clang_cxx_11.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 147,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/bdb/clang_cxx_11.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/bdb/clang_cxx_11.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/bdb/clang_cxx_11.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "722f7bb5ea4707de46a27c61f1b9e531d7bcf97d",
        "filename": "depends/patches/boost/unused_var_in_process.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/boost/unused_var_in_process.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/boost/unused_var_in_process.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/boost/unused_var_in_process.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "7401b83d840ff982d18a070e2a4ee2446e458d99",
        "filename": "depends/patches/fontconfig/gperf_header_regen.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/fontconfig/gperf_header_regen.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/fontconfig/gperf_header_regen.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/fontconfig/gperf_header_regen.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "9f69081890c33d7acd79ec569cc7122d84d316da",
        "filename": "depends/patches/fontconfig/remove_char_width_usage.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 62,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/fontconfig/remove_char_width_usage.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/fontconfig/remove_char_width_usage.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/fontconfig/remove_char_width_usage.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "a98cd90bd58a20072443a11a9c412b447e8e98a1",
        "filename": "depends/patches/libevent/0001-fix-windows-getaddrinfo.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/libevent/0001-fix-windows-getaddrinfo.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/libevent/0001-fix-windows-getaddrinfo.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/libevent/0001-fix-windows-getaddrinfo.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "a1cc9b50d1509379b121ba3f228821cced0485f9",
        "filename": "depends/patches/miniupnpc/dont_use_wingen.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/miniupnpc/dont_use_wingen.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/miniupnpc/dont_use_wingen.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/miniupnpc/dont_use_wingen.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "d6c58c102fb321794eeca68b85afd4207d9bdeca",
        "filename": "depends/patches/native_cctools/ld64_disable_threading.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/native_cctools/ld64_disable_threading.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/native_cctools/ld64_disable_threading.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_cctools/ld64_disable_threading.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "8ab0993dc4de142ab7766a500640be92540fe80f",
        "filename": "depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_cdrkit/cdrkit-deterministic.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "f346c8f2cff8b040cc534c32402ccf92229d8c05",
        "filename": "depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 45,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "a74e9cb09872b9abc82542e67772208413f7284e",
        "filename": "depends/patches/qt/dont_hardcode_pwd.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/dont_hardcode_pwd.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/dont_hardcode_pwd.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/dont_hardcode_pwd.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "f6b2c9fc8015a0eef744bda87ede8e230aa6b3a8",
        "filename": "depends/patches/qt/drop_lrelease_dependency.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/drop_lrelease_dependency.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/drop_lrelease_dependency.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/drop_lrelease_dependency.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "2f6ff00f40c253c95d5bc62e887b032eac22055e",
        "filename": "depends/patches/qt/fix_android_jni_static.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/fix_android_jni_static.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/fix_android_jni_static.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_android_jni_static.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "13bfff9776474028c5165f9e3d5e64bee3d576e5",
        "filename": "depends/patches/qt/fix_android_qmake_conf.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/fix_android_qmake_conf.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/fix_android_qmake_conf.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_android_qmake_conf.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "0d7dd647debca93eb5383ee72f6d4db573dabaac",
        "filename": "depends/patches/qt/fix_configure_mac.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 50,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/fix_configure_mac.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/fix_configure_mac.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_configure_mac.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "f868ca25775547188620644ae02881edeaa06a8d",
        "filename": "depends/patches/qt/fix_no_printer.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/fix_no_printer.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/fix_no_printer.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_no_printer.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "d37b6c777646c39bd09b4ee63e8c98047b49bab4",
        "filename": "depends/patches/qt/fix_powerpc_libpng.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/fix_powerpc_libpng.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/fix_powerpc_libpng.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_powerpc_libpng.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "8c722ffb46cb1d55dfc6a341b2f6dac3abe0f7a5",
        "filename": "depends/patches/qt/fix_qt_pkgconfig.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/fix_qt_pkgconfig.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/fix_qt_pkgconfig.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_qt_pkgconfig.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "c1b07fe23afdbd7a2f204811e2aad132bd2d9dff",
        "filename": "depends/patches/qt/fix_rcc_determinism.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/fix_rcc_determinism.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/fix_rcc_determinism.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_rcc_determinism.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "e7f29f01f9cd7f250b86bbd038175aa6a0fb35b0",
        "filename": "depends/patches/qt/fix_riscv64_arch.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/fix_riscv64_arch.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/fix_riscv64_arch.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_riscv64_arch.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "b0f1c98aa60c9d3442d7c596cd0fd39892a68176",
        "filename": "depends/patches/qt/freetype_back_compat.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/freetype_back_compat.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/freetype_back_compat.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/freetype_back_compat.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "4cd96df29ff307b012d5ae4c49cfff71948cca86",
        "filename": "depends/patches/qt/mac-qmake.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/mac-qmake.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/mac-qmake.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mac-qmake.conf?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "fe82c2c73cb09611da2be6ccbe274d4191bc1ad8",
        "filename": "depends/patches/qt/no-xlib.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 69,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/no-xlib.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/no-xlib.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/no-xlib.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "165abf3e2e7a6d7cdbe7b960ec15dbcfaf0a9dfd",
        "filename": "depends/patches/qt/xkb-default.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/xkb-default.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/qt/xkb-default.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/xkb-default.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "ddf91e6abfaba15442df4812af77379e7349019c",
        "filename": "depends/patches/zeromq/remove_libstd_link.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/zeromq/remove_libstd_link.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/depends/patches/zeromq/remove_libstd_link.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/zeromq/remove_libstd_link.patch?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "38498103bb1704a3f13979c1359649a786d50aef",
        "filename": "doc/.gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/.gitignore?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "2f7916821256f93fbc0ac2837c3afeb21828d2e1",
        "filename": "doc/Doxyfile.in",
        "status": "removed",
        "additions": 0,
        "deletions": 2461,
        "changes": 2461,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/Doxyfile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/Doxyfile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile.in?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "40d8e330e28cd74e377bd52e16de96cf44f5a76e",
        "filename": "doc/JSON-RPC-interface.md",
        "status": "removed",
        "additions": 0,
        "deletions": 129,
        "changes": 129,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/JSON-RPC-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/JSON-RPC-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/JSON-RPC-interface.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "19d8204d83eb7960ae0e91e04ca8404422e564df",
        "filename": "doc/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "6888383a9861eaef1b5b1eb86d8e13712b2be2b0",
        "filename": "doc/README_doxygen.md",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/README_doxygen.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/README_doxygen.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_doxygen.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "07d61b3bda13acb5ac4775db4d23a97586aed646",
        "filename": "doc/README_windows.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "842a3964df625f6bf16ffb84ec3a2b31fb4fbd6b",
        "filename": "doc/REST-interface.md",
        "status": "removed",
        "additions": 0,
        "deletions": 116,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "2dd930d6a4f97debef6dba19040f471f75250b6a",
        "filename": "doc/assets-attribution.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "b6cd86eafe6e7df2f81da7e0835239a40c476a24",
        "filename": "doc/benchmarking.md",
        "status": "removed",
        "additions": 0,
        "deletions": 50,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/benchmarking.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/benchmarking.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/benchmarking.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "8c20533c9bbaea4bcc18f8610713016454267a78",
        "filename": "doc/bips.md",
        "status": "removed",
        "additions": 0,
        "deletions": 48,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "f4a8edec75c5cf9a9bf04d010e5476698856d15c",
        "filename": "doc/bitcoin-conf.md",
        "status": "removed",
        "additions": 0,
        "deletions": 62,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/bitcoin-conf.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/bitcoin-conf.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bitcoin-conf.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "258be86edee2372033763742c513309761248f1b",
        "filename": "doc/bitcoin_logo_doxygen.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/bitcoin_logo_doxygen.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/bitcoin_logo_doxygen.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bitcoin_logo_doxygen.png?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "f48855a344fde73bb7b1cab23f74ce7c137dc264",
        "filename": "doc/build-freebsd.md",
        "status": "removed",
        "additions": 0,
        "deletions": 61,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/build-freebsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/build-freebsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-freebsd.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "47049a780edef5c5e1ef87813eff17eb0060d467",
        "filename": "doc/build-netbsd.md",
        "status": "removed",
        "additions": 0,
        "deletions": 81,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/build-netbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/build-netbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-netbsd.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "2b051c078c8748b9e2988457d724655a7d9f7665",
        "filename": "doc/build-openbsd.md",
        "status": "removed",
        "additions": 0,
        "deletions": 115,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "2a7d71eea6317116527c7d7845c701f7241cb68f",
        "filename": "doc/build-osx.md",
        "status": "removed",
        "additions": 0,
        "deletions": 116,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "ab83ceff3dcf86cbdf5a436d2891cc3642f6191a",
        "filename": "doc/build-unix.md",
        "status": "removed",
        "additions": 0,
        "deletions": 301,
        "changes": 301,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "28b6aceb3cc6208857e73aedd54efa472a094867",
        "filename": "doc/build-windows.md",
        "status": "removed",
        "additions": 0,
        "deletions": 137,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "d1bf4b3a87da9eb669ec5b17d51104b1a3a0f6b0",
        "filename": "doc/dependencies.md",
        "status": "removed",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "181ff77e5080abce1c4f3fb2116afdf8649590e2",
        "filename": "doc/descriptors.md",
        "status": "removed",
        "additions": 0,
        "deletions": 212,
        "changes": 212,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/descriptors.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/descriptors.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/descriptors.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "fa188dbcd603b6eef80d3855ee9aa44c5e4a37f3",
        "filename": "doc/developer-notes.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1309,
        "changes": 1309,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "55a5c28258c67704fb926e0ad71d448440babdaa",
        "filename": "doc/dnsseed-policy.md",
        "status": "removed",
        "additions": 0,
        "deletions": 54,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/dnsseed-policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/dnsseed-policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dnsseed-policy.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "545e8fc92c825af88d32528ee5307ae2eddc538c",
        "filename": "doc/files.md",
        "status": "removed",
        "additions": 0,
        "deletions": 125,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "c97b8d4d50812c3d60e4fe38b88fddcb4a0689a4",
        "filename": "doc/fuzzing.md",
        "status": "removed",
        "additions": 0,
        "deletions": 159,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/fuzzing.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/fuzzing.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/fuzzing.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "3a48f4a0b397770e44f51477df854f8298ce1b75",
        "filename": "doc/gitian-building.md",
        "status": "removed",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "99aa0a0def3d6b91511d53aee17f507ae1f813de",
        "filename": "doc/init.md",
        "status": "removed",
        "additions": 0,
        "deletions": 145,
        "changes": 145,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "edbc0911a16772d4a1b23645795f9f7b4185aecb",
        "filename": "doc/man/Makefile.am",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/man/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/man/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/Makefile.am?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "129651d8e9f2f0795ca484af84518feef4faf3ad",
        "filename": "doc/man/bitcoin-cli.1",
        "status": "removed",
        "additions": 0,
        "deletions": 115,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/man/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/man/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-cli.1?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "f68be21e8d9045094871c2025bc8f82526e49471",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "removed",
        "additions": 0,
        "deletions": 610,
        "changes": 610,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "b4c769889637e51971118e1e3c3dbcf2c9336283",
        "filename": "doc/man/bitcoin-tx.1",
        "status": "removed",
        "additions": 0,
        "deletions": 116,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/man/bitcoin-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/man/bitcoin-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-tx.1?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "aadea09a2b82382fd7f806262a6ef1d9f529da91",
        "filename": "doc/man/bitcoin-wallet.1",
        "status": "removed",
        "additions": 0,
        "deletions": 63,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/man/bitcoin-wallet.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/man/bitcoin-wallet.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-wallet.1?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "211ba10285d3dffb0580a6b1a438495bac19c566",
        "filename": "doc/man/bitcoind.1",
        "status": "removed",
        "additions": 0,
        "deletions": 583,
        "changes": 583,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "471d8561f7a27ff2aa20da9ca750b7a1a646bb72",
        "filename": "doc/multiprocess.md",
        "status": "removed",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/multiprocess.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/multiprocess.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/multiprocess.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "555f0afe3c7b28d0ed88fc0632aa266bbb087497",
        "filename": "doc/productivity.md",
        "status": "removed",
        "additions": 0,
        "deletions": 217,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/productivity.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/productivity.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/productivity.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "c411b31d5d967001f21f189f34cfd1200ddb155b",
        "filename": "doc/psbt.md",
        "status": "removed",
        "additions": 0,
        "deletions": 143,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/psbt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/psbt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/psbt.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "6e7a578ecc4e19bcce131626c8c1e868e678286e",
        "filename": "doc/reduce-memory.md",
        "status": "removed",
        "additions": 0,
        "deletions": 50,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/reduce-memory.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/reduce-memory.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-memory.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "86943b1f727cfff6e8fd3bc343a217ccd48be776",
        "filename": "doc/reduce-traffic.md",
        "status": "removed",
        "additions": 0,
        "deletions": 56,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/reduce-traffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/reduce-traffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-traffic.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "d3983b16899e29fd971a57cb845f27edefda98b0",
        "filename": "doc/release-notes.md",
        "status": "removed",
        "additions": 0,
        "deletions": 486,
        "changes": 486,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "986b8832ec1893a5cc061ea14ac609e7836fbb4f",
        "filename": "doc/release-notes/release-notes-0.10.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 762,
        "changes": 762,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/release-notes/release-notes-0.10.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/release-notes/release-notes-0.10.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.0.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "8f59f1f68c6905f9435b04bd029d3beef2a1f1e8",
        "filename": "doc/release-notes/release-notes-0.10.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 143,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/release-notes/release-notes-0.10.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/release-notes/release-notes-0.10.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.1.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "192ed69d299811b8b662f28905f73479266be820",
        "filename": "doc/release-notes/release-notes-0.10.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/release-notes/release-notes-0.10.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/release-notes/release-notes-0.10.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.2.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "8a110e562c45376daea69efcb0837dc879ada66a",
        "filename": "doc/release-notes/release-notes-0.10.3.md",
        "status": "removed",
        "additions": 0,
        "deletions": 165,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/release-notes/release-notes-0.10.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/release-notes/release-notes-0.10.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.3.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "38a2c1347d0b8afbfe0c0481cd90b9db06854328",
        "filename": "doc/release-notes/release-notes-0.10.4.md",
        "status": "removed",
        "additions": 0,
        "deletions": 172,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/release-notes/release-notes-0.10.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/release-notes/release-notes-0.10.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.4.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "28e49fb7ea64838f81a72424217e755a62e865c8",
        "filename": "doc/release-notes/release-notes-0.11.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 505,
        "changes": 505,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/release-notes/release-notes-0.11.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/release-notes/release-notes-0.11.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.0.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "799205691ed0f26322923693c2cbf523f0b6751e",
        "filename": "doc/release-notes/release-notes-0.11.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 172,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/release-notes/release-notes-0.11.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/release-notes/release-notes-0.11.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.1.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "2351b80656542c3eee9b27c1f3fae5d3a46179d3",
        "filename": "doc/release-notes/release-notes-0.11.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 217,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/release-notes/release-notes-0.11.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/release-notes/release-notes-0.11.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.2.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      },
      {
        "sha": "bc0d5ea3b0d91a326cc616e624a36ffd0a36e8b6",
        "filename": "doc/release-notes/release-notes-0.12.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 894,
        "changes": 894,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/release-notes/release-notes-0.12.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f45d738545d97760a8c955ca1209a6565fa5ed8d/doc/release-notes/release-notes-0.12.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.0.md?ref=f45d738545d97760a8c955ca1209a6565fa5ed8d"
      }
    ]
  },
  {
    "sha": "9fb528464689ebe5416025e571b8bcd3f0da00d1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZmI1Mjg0NjQ2ODllYmU1NDE2MDI1ZTU3MWI4YmNkM2YwZGEwMGQx",
    "commit": {
      "author": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:19:02Z"
      },
      "committer": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:19:02Z"
      },
      "message": ".gitignore fix",
      "tree": {
        "sha": "c6639e0984fe01953fcf7c7718b7bdf428268295",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c6639e0984fe01953fcf7c7718b7bdf428268295"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9fb528464689ebe5416025e571b8bcd3f0da00d1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fb528464689ebe5416025e571b8bcd3f0da00d1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9fb528464689ebe5416025e571b8bcd3f0da00d1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fb528464689ebe5416025e571b8bcd3f0da00d1/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "54e33660af1a251381d8cce5a7f50afbf067fcf1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54e33660af1a251381d8cce5a7f50afbf067fcf1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/54e33660af1a251381d8cce5a7f50afbf067fcf1"
      }
    ],
    "stats": {
      "total": 564351,
      "additions": 564351,
      "deletions": 0
    },
    "files": [
      {
        "sha": "eace0b712119afb911e9404be36737766a36e5cc",
        "filename": ".appveyor.yml",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/.appveyor.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/.appveyor.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.appveyor.yml?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,62 @@\n+version: '{branch}.{build}'\n+skip_tags: true\n+image: Visual Studio 2019\n+configuration: Release\n+platform: x64\n+clone_depth: 5\n+environment:\n+  PATH: 'C:\\Python37-x64;C:\\Python37-x64\\Scripts;%PATH%'\n+  PYTHONUTF8: 1\n+  QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/v1.6/Qt5.9.8_x64_static_vs2019.zip'\n+  QT_DOWNLOAD_HASH: '9a8c6eb20967873785057fdcd329a657c7f922b0af08c5fde105cc597dd37e21'\n+  QT_LOCAL_PATH: 'C:\\Qt5.9.8_x64_static_vs2019'\n+  VCPKG_INSTALL_PATH: 'C:\\tools\\vcpkg\\installed'\n+  VCPKG_COMMIT_ID: '40230b8e3f6368dcb398d649331be878ca1e9007'\n+install:\n+# Disable zmq test for now since python zmq library on Windows would cause Access violation sometimes.\n+# - cmd: pip install zmq\n+# Powershell block below is to install the c++ dependencies via vcpkg. The pseudo code is:\n+#    a. Checkout the vcpkg source (including port files) for the specific checkout and build the vcpkg binary,\n+#    b. Install the missing packages using the vcpkg manifest.\n+- ps: |\n+      cd c:\\tools\\vcpkg\n+      $env:GIT_REDIRECT_STDERR = '2>&1' # git is writing non-errors to STDERR when doing git pull. Send to STDOUT instead.\n+      git pull origin master > $null\n+      git -c advice.detachedHead=false checkout $env:VCPKG_COMMIT_ID\n+      .\\bootstrap-vcpkg.bat > $null\n+      cd \"$env:APPVEYOR_BUILD_FOLDER\"\n+before_build:\n+# Powershell block below is to download and extract the Qt static libraries. The pseudo code is:\n+#    a. Download the zip file with the prebuilt Qt static libraries.\n+#    b. Check that the downloaded file matches the expected hash.\n+#    c. Extract the zip file to the specific destination path expected by the msbuild projects.\n+- ps: |\n+      Write-Host \"Downloading Qt binaries.\";\n+      Invoke-WebRequest -Uri $env:QT_DOWNLOAD_URL -Out qtdownload.zip;\n+      Write-Host \"Qt binaries successfully downloaded, checking hash against $env:QT_DOWNLOAD_HASH...\";\n+      if((Get-FileHash qtdownload.zip).Hash -eq $env:QT_DOWNLOAD_HASH) {\n+        Expand-Archive qtdownload.zip -DestinationPath $env:QT_LOCAL_PATH;\n+        Write-Host \"Qt binary download matched the expected hash.\";\n+      }\n+      else {\n+        Write-Host \"ERROR: Qt binary download did not match the expected hash.\";\n+        Exit-AppveyorBuild;\n+      }\n+- cmd: python build_msvc\\msvc-autogen.py\n+build_script:\n+- cmd: msbuild /p:TrackFileAccess=false build_msvc\\bitcoin.sln /m /v:q /nologo\n+after_build:\n+#- 7z a bitcoin-%APPVEYOR_BUILD_VERSION%.zip %APPVEYOR_BUILD_FOLDER%\\build_msvc\\%platform%\\%configuration%\\*.exe\n+test_script:\n+- cmd: src\\test_bitcoin.exe -l test_suite\n+- cmd: src\\bench_bitcoin.exe > NUL\n+- ps:  python test\\util\\bitcoin-util-test.py\n+- cmd: python test\\util\\rpcauth-test.py\n+# Fee estimation test failing on appveyor with: WinError 10048] Only one usage of each socket address (protocol/network address/port) is normally permitted.\n+# functional tests disabled for now. See\n+# https://github.com/bitcoin/bitcoin/pull/18626#issuecomment-613396202\n+# https://github.com/bitcoin/bitcoin/issues/18623\n+# - cmd: python test\\functional\\test_runner.py --ci --quiet --combinedlogslen=4000 --failfast --exclude feature_fee_estimation\n+artifacts:\n+#- path: bitcoin-%APPVEYOR_BUILD_VERSION%.zip\n+deploy: off"
      },
      {
        "sha": "916f172a6af7a7828920c7342c5ff00df7140543",
        "filename": ".cirrus.yml",
        "status": "added",
        "additions": 121,
        "deletions": 0,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/.cirrus.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/.cirrus.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.cirrus.yml?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,121 @@\n+### Global defaults\n+\n+timeout_in: 120m  # https://cirrus-ci.org/faq/#instance-timed-out\n+container:\n+  # https://cirrus-ci.org/faq/#are-there-any-limits\n+  # Each project has 16 CPU in total, assign 2 to each container, so that 8 tasks run in parallel\n+  cpu: 2\n+  memory: 8G  # Set to 8GB to avoid OOM. https://cirrus-ci.org/guide/linux/#linux-containers\n+  kvm: true  # Use kvm to avoid spurious CI failures in the default virtualization cluster, see https://github.com/bitcoin/bitcoin/issues/20093\n+env:\n+  PACKAGE_MANAGER_INSTALL : \"apt-get update && apt-get install -y\"\n+  MAKEJOBS: \"-j4\"\n+  DANGER_RUN_CI_ON_HOST: \"1\"  # Containers will be discarded after the run, so there is no risk that the ci scripts modify the system\n+  TEST_RUNNER_PORT_MIN: \"14000\"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache\n+  CCACHE_SIZE: \"200M\"\n+  CCACHE_DIR: \"/tmp/ccache_dir\"\n+\n+### Global task template\n+\n+# https://cirrus-ci.org/guide/tips-and-tricks/#sharing-configuration-between-tasks\n+global_task_template: &GLOBAL_TASK_TEMPLATE\n+  skip: $CIRRUS_REPO_FULL_NAME == \"bitcoin-core/gui\" && $CIRRUS_PR == \"\"  # No need to run on the read-only mirror, unless it is a PR. https://cirrus-ci.org/guide/writing-tasks/#conditional-task-execution\n+  ccache_cache:\n+    folder: \"/tmp/ccache_dir\"\n+  depends_built_cache:\n+    folder: \"/tmp/cirrus-ci-build/depends/built\"\n+  depends_sdk_cache:\n+    folder: \"/tmp/cirrus-ci-build/depends/sdk-sources\"\n+  depends_releases_cache:\n+    folder: \"/tmp/cirrus-ci-build/releases\"\n+  merge_base_script:\n+    - bash -c \"$PACKAGE_MANAGER_INSTALL git\"\n+    - git fetch $CIRRUS_REPO_CLONE_URL $CIRRUS_BASE_BRANCH\n+    - git config --global user.email \"ci@ci.ci\"\n+    - git config --global user.name \"ci\"\n+    - git merge FETCH_HEAD  # Merge base to detect silent merge conflicts\n+  ci_script:\n+    - ./ci/test_run_all.sh\n+\n+#task:\n+#  name: \"Windows\"\n+#  windows_container:\n+#    image: cirrusci/windowsservercore:2019\n+#  env:\n+#    CIRRUS_SHELL: powershell\n+#    PATH: 'C:\\Python37;C:\\Python37\\Scripts;%PATH%'\n+#    PYTHONUTF8: 1\n+#    QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/v1.6/Qt5.9.8_x64_static_vs2019.zip'\n+#    QT_DOWNLOAD_HASH: '9a8c6eb20967873785057fdcd329a657c7f922b0af08c5fde105cc597dd37e21'\n+#    QT_LOCAL_PATH: 'C:\\Qt5.9.8_x64_static_vs2019'\n+#    VCPKG_INSTALL_PATH: 'C:\\tools\\vcpkg\\installed'\n+#    VCPKG_COMMIT_ID: 'ed0df8ecc4ed7e755ea03e18aaf285fd9b4b4a74'\n+#  install_script:\n+#    - choco install python --version=3.7.7 -y\n+\n+task:\n+  name: 'x86_64 Linux  [GOAL: install]  [bionic]  [C++17, previous releases, uses qt5 dev package and some depends packages] [unsigned char]'\n+  << : *GLOBAL_TASK_TEMPLATE\n+  container:\n+    image: ubuntu:bionic\n+  env:\n+    FILE_ENV: \"./ci/test/00_setup_env_native_qt5.sh\"\n+\n+task:\n+  name: 'x86_64 Linux  [GOAL: install]  [focal]  [depends, sanitizers: thread (TSan), no gui]'\n+  << : *GLOBAL_TASK_TEMPLATE\n+  container:\n+    image: ubuntu:focal\n+    cpu: 4  # Double CPU and Memory to avoid timeout\n+    memory: 16G\n+  env:\n+    MAKEJOBS: \"-j8\"\n+    FILE_ENV: \"./ci/test/00_setup_env_native_tsan.sh\"\n+\n+task:\n+  name: 'x86_64 Linux  [GOAL: install]  [focal]  [depends, sanitizers: memory (MSan)]'\n+  << : *GLOBAL_TASK_TEMPLATE\n+  container:\n+    image: ubuntu:focal\n+  env:\n+    FILE_ENV: \"./ci/test/00_setup_env_native_msan.sh\"\n+\n+task:\n+  name: 'x86_64 Linux  [GOAL: install]  [focal]  [no depends, only system libs, sanitizers: address/leak (ASan + LSan) + undefined (UBSan) + integer]'\n+  << : *GLOBAL_TASK_TEMPLATE\n+  container:\n+    image: ubuntu:focal\n+  env:\n+    FILE_ENV: \"./ci/test/00_setup_env_native_asan.sh\"\n+\n+task:\n+  name: 'x86_64 Linux  [GOAL: install]  [focal]  [no depends, only system libs, sanitizers: fuzzer,address,undefined]'\n+  << : *GLOBAL_TASK_TEMPLATE\n+  container:\n+    image: ubuntu:focal\n+  env:\n+    FILE_ENV: \"./ci/test/00_setup_env_native_fuzz.sh\"\n+\n+task:\n+  name: 'x86_64 Linux  [GOAL: install]  [focal]  [no depends, only system libs, fuzzers under valgrind]'\n+  << : *GLOBAL_TASK_TEMPLATE\n+  container:\n+    image: ubuntu:focal\n+  env:\n+    FILE_ENV: \"./ci/test/00_setup_env_native_fuzz_with_valgrind.sh\"\n+\n+task:\n+  name: 'x86_64 Linux [GOAL: install]  [focal]  [multiprocess]'\n+  << : *GLOBAL_TASK_TEMPLATE\n+  container:\n+    image: ubuntu:focal\n+  env:\n+    FILE_ENV: \"./ci/test/00_setup_env_native_multiprocess.sh\"\n+\n+task:\n+  name: 'macOS 10.12  [GOAL: deploy] [no functional tests]'\n+  << : *GLOBAL_TASK_TEMPLATE\n+  container:\n+    image: ubuntu:bionic\n+  env:\n+    FILE_ENV: \"./ci/test/00_setup_env_mac.sh\""
      },
      {
        "sha": "d44ac27eb9370e0b02b241ee28e67d0d71a947e8",
        "filename": ".fuzzbuzz.yml",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/.fuzzbuzz.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/.fuzzbuzz.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.fuzzbuzz.yml?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,16 @@\n+base: ubuntu:16.04\n+language: c++\n+engine: libFuzzer\n+environment:\n+  - CXXFLAGS=-fcoverage-mapping -fno-omit-frame-pointer -fprofile-instr-generate -gline-tables-only -O1\n+setup:\n+  - sudo apt-get update\n+  - sudo apt-get install -y autoconf bsdmainutils clang git libboost-all-dev libboost-program-options-dev libc++1 libc++abi1 libc++abi-dev libc++-dev libclang1 libclang-dev libdb5.3++ libevent-dev libllvm-ocaml-dev libomp5 libomp-dev libprotobuf-dev libqt5core5a libqt5dbus5 libqt5gui5 libssl-dev libtool llvm llvm-dev llvm-runtime pkg-config protobuf-compiler qttools5-dev qttools5-dev-tools software-properties-common\n+  - ./autogen.sh\n+  - CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+  - make\n+  - git clone https://github.com/bitcoin-core/qa-assets\n+auto_targets:\n+  find_targets_command: find src/test/fuzz/ -executable -type f ! -name \"*.cpp\" ! -name \"*.h\"\n+  base_corpus_dir: qa-assets/fuzz_seed_corpus/\n+  memory_limit: none"
      },
      {
        "sha": "c9cf4a7d9cd03ed588ba9882d26bfd1dd6800fe7",
        "filename": ".gitattributes",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/.gitattributes",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/.gitattributes",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitattributes?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1 @@\n+src/clientversion.cpp export-subst"
      },
      {
        "sha": "eedeeb4e54c58c80ca730dfcefe2c1f5da05c9e6",
        "filename": ".github/ISSUE_TEMPLATE.md",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/.github/ISSUE_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/.github/ISSUE_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,27 @@\n+<!-- This issue tracker is only for technical issues related to Bitcoin Core.\n+\n+General bitcoin questions and/or support requests are best directed to the Bitcoin StackExchange at https://bitcoin.stackexchange.com.\n+\n+For reporting security issues, please read instructions at https://bitcoincore.org/en/contact/.\n+\n+If the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue!\n+\n+Any report, issue or feature request related to the GUI should be reported at\n+https://github.com/bitcoin-core/gui/issues/\n+-->\n+\n+<!-- Describe the issue -->\n+<!--- What behavior did you expect? -->\n+\n+<!--- What was the actual behavior (provide screenshots if the issue is GUI-related)? -->\n+\n+<!--- How reliably can you reproduce the issue, what are the steps to do so? -->\n+\n+<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\n+\n+<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\n+\n+<!-- GUI-related issue? What is your operating system and its version? If Linux, what is your desktop environment and graphical shell? -->\n+\n+<!-- Any extra information that might be useful in the debugging process. -->\n+<!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->"
      },
      {
        "sha": "fb91208954ea9698d5610a85a1a9b3efb7311142",
        "filename": ".github/ISSUE_TEMPLATE/bug_report.md",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/.github/ISSUE_TEMPLATE/bug_report.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/.github/ISSUE_TEMPLATE/bug_report.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/bug_report.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,41 @@\n+---\n+name: Bug report\n+about: Create a report to help us improve (use this for suspected bugs only, if not sure, open a regular issue below)\n+title: ''\n+labels: Bug\n+assignees: ''\n+\n+---\n+\n+<!-- This issue tracker is only for technical issues related to Bitcoin Core.\n+\n+General bitcoin questions and/or support requests are best directed to the Bitcoin StackExchange at https://bitcoin.stackexchange.com.\n+\n+For reporting security issues, please read instructions at https://bitcoincore.org/en/contact/.\n+\n+If the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue! -->\n+\n+<!-- Describe the issue -->\n+\n+**Expected behavior**\n+\n+<!--- What behavior did you expect? -->\n+\n+**Actual behavior**\n+\n+<!--- What was the actual behavior (provide screenshots if the issue is GUI-related)? -->\n+\n+**To reproduce**\n+\n+<!--- How reliably can you reproduce the issue, what are the steps to do so? -->\n+\n+**System information**\n+\n+<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\n+\n+<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\n+\n+<!-- GUI-related issue? What is your operating system and its version? If Linux, what is your desktop environment and graphical shell? -->\n+\n+<!-- Any extra information that might be useful in the debugging process. -->\n+<!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->"
      },
      {
        "sha": "2d5685185ea3621cb9c7d83e62a628468cb9f786",
        "filename": ".github/ISSUE_TEMPLATE/feature_request.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/.github/ISSUE_TEMPLATE/feature_request.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/.github/ISSUE_TEMPLATE/feature_request.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/feature_request.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,20 @@\n+---\n+name: Feature request\n+about: Suggest an idea for this project\n+title: ''\n+labels: Feature\n+assignees: ''\n+\n+---\n+\n+**Is your feature request related to a problem? Please describe.**\n+<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\n+\n+**Describe the solution you'd like**\n+<!-- A clear and concise description of what you want to happen. -->\n+\n+**Describe alternatives you've considered**\n+<!-- A clear and concise description of any alternative solutions or features you've considered. -->\n+\n+**Additional context**\n+<!-- Add any other context or screenshots about the feature request here. -->"
      },
      {
        "sha": "d32e22d36079ab27228ab036aafe006d26b9c4ce",
        "filename": ".github/ISSUE_TEMPLATE/good_first_issue.md",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/.github/ISSUE_TEMPLATE/good_first_issue.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/.github/ISSUE_TEMPLATE/good_first_issue.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/good_first_issue.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,22 @@\n+---\n+name: Good first issue\n+about: '(Regular devs only): Suggest a new good first issue'\n+title: ''\n+labels: ''\n+assignees: ''\n+\n+---\n+\n+<!-- Needs the label \"good first issue\" assigned manually before or after opening -->\n+\n+<!-- A good first issue is an uncontroversial issue, that has a relatively unique and obvious solution -->\n+\n+<!-- Motivate the issue and explain the solution briefly -->\n+\n+#### Useful skills:\n+\n+<!-- (For example, \u201cC++11 std::thread\u201d, \u201cQt5 GUI and async GUI design\u201d or \u201cbasic understanding of Bitcoin mining and the Bitcoin Core RPC interface\u201d.) -->\n+\n+#### Want to work on this issue?\n+\n+For guidance on contributing, please read [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md) before opening your pull request."
      },
      {
        "sha": "37acc81e21e6c9e49a89623e016bb6df7002cba6",
        "filename": ".github/ISSUE_TEMPLATE/gui_issue.md",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/.github/ISSUE_TEMPLATE/gui_issue.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/.github/ISSUE_TEMPLATE/gui_issue.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/gui_issue.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,11 @@\n+---\n+name: An issue or feature request related to the GUI\n+about: Any report, issue or feature request related to the GUI should be reported at https://github.com/bitcoin-core/gui/issues/\n+title: Any report, issue or feature request related to the GUI should be reported at https://github.com/bitcoin-core/gui/issues/\n+labels: GUI\n+assignees: ''\n+\n+---\n+\n+Any report, issue or feature request related to the GUI should be reported at\n+https://github.com/bitcoin-core/gui/issues/"
      },
      {
        "sha": "ae92fc78f2d1cf342d4eb9439d9a0ff91d9092b4",
        "filename": ".github/PULL_REQUEST_TEMPLATE.md",
        "status": "added",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/.github/PULL_REQUEST_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/.github/PULL_REQUEST_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/PULL_REQUEST_TEMPLATE.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,43 @@\n+<!--\n+*** Please remove the following help text before submitting: ***\n+\n+Pull requests without a rationale and clear improvement may be closed\n+immediately.\n+\n+GUI-related pull requests should be opened against\n+https://github.com/bitcoin-core/gui\n+first. See CONTRIBUTING.md\n+-->\n+\n+<!--\n+Please provide clear motivation for your patch and explain how it improves\n+Bitcoin Core user experience or Bitcoin Core developer experience\n+significantly:\n+\n+* Any test improvements or new tests that improve coverage are always welcome.\n+* All other changes should have accompanying unit tests (see `src/test/`) or\n+  functional tests (see `test/`). Contributors should note which tests cover\n+  modified code. If no tests exist for a region of modified code, new tests\n+  should accompany the change.\n+* Bug fixes are most welcome when they come with steps to reproduce or an\n+  explanation of the potential issue as well as reasoning for the way the bug\n+  was fixed.\n+* Features are welcome, but might be rejected due to design or scope issues.\n+  If a feature is based on a lot of dependencies, contributors should first\n+  consider building the system outside of Bitcoin Core, if possible.\n+* Refactoring changes are only accepted if they are required for a feature or\n+  bug fix or otherwise improve developer experience significantly. For example,\n+  most \"code style\" refactoring changes require a thorough explanation why they\n+  are useful, what downsides they have and why they *significantly* improve\n+  developer experience or avoid serious programming bugs. Note that code style\n+  is often a subjective matter. Unless they are explicitly mentioned to be\n+  preferred in the [developer notes](/doc/developer-notes.md), stylistic code\n+  changes are usually rejected.\n+-->\n+\n+<!--\n+Bitcoin Core has a thorough review process and even the most trivial change\n+needs to pass a lot of eyes and requires non-zero or even substantial time\n+effort to review. There is a huge lack of active reviewers on the project, so\n+patches often sit for a long time.\n+-->"
      },
      {
        "sha": "5726b18928847149bfcbccbffda97c712392128c",
        "filename": ".gitignore",
        "status": "added",
        "additions": 150,
        "deletions": 0,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,150 @@\n+*.tar.gz\n+\n+*.exe\n+*.pdb\n+src/bitcoin\n+src/bitcoind\n+src/bitcoin-cli\n+src/bitcoin-gui\n+src/bitcoin-node\n+src/bitcoin-tx\n+src/bitcoin-wallet\n+src/test/fuzz/*\n+!src/test/fuzz/*.*\n+src/test/test_bitcoin\n+src/qt/test/test_bitcoin-qt\n+\n+# autoreconf\n+Makefile.in\n+aclocal.m4\n+autom4te.cache/\n+build-aux/config.guess\n+build-aux/config.sub\n+build-aux/depcomp\n+build-aux/install-sh\n+build-aux/ltmain.sh\n+build-aux/m4/libtool.m4\n+build-aux/m4/lt~obsolete.m4\n+build-aux/m4/ltoptions.m4\n+build-aux/m4/ltsugar.m4\n+build-aux/m4/ltversion.m4\n+build-aux/missing\n+build-aux/compile\n+build-aux/test-driver\n+config.cache\n+config.log\n+config.status\n+configure\n+libtool\n+src/config/bitcoin-config.h\n+src/config/bitcoin-config.h.in\n+src/config/stamp-h1\n+src/obj\n+share/setup.nsi\n+share/qt/Info.plist\n+\n+src/univalue/gen\n+\n+src/qt/*.moc\n+src/qt/moc_*.cpp\n+src/qt/forms/ui_*.h\n+\n+src/qt/test/moc*.cpp\n+\n+src/qt/bitcoin-qt.config\n+src/qt/bitcoin-qt.creator\n+src/qt/bitcoin-qt.creator.user\n+src/qt/bitcoin-qt.files\n+src/qt/bitcoin-qt.includes\n+\n+.deps\n+.dirstamp\n+.libs\n+.*.swp\n+*.*~*\n+*.bak\n+*.rej\n+*.orig\n+*.pyc\n+*.o\n+*.o-*\n+*.a\n+*.pb.cc\n+*.pb.h\n+*.dat\n+\n+*.log\n+*.trs\n+*.dmg\n+\n+*.json.h\n+*.raw.h\n+\n+# Only ignore unexpected patches\n+*.patch\n+!depends/patches/**/*.patch\n+\n+#libtool object files\n+*.lo\n+*.la\n+\n+# Compilation and Qt preprocessor part\n+*.qm\n+Makefile\n+!depends/Makefile\n+src/qt/bitcoin-qt\n+Bitcoin-Qt.app\n+background.tiff*\n+\n+# Qt Creator\n+Makefile.am.user\n+\n+# Unit-tests\n+Makefile.test\n+bitcoin-qt_test\n+\n+# Resources cpp\n+qrc_*.cpp\n+\n+# Mac specific\n+.DS_Store\n+build\n+\n+# Previous releases\n+releases\n+\n+#lcov\n+*.gcno\n+*.gcda\n+/*.info\n+test_bitcoin.coverage/\n+total.coverage/\n+fuzz.coverage/\n+coverage_percent.txt\n+/cov_tool_wrapper.sh\n+qa-assets/\n+\n+#build tests\n+linux-coverage-build\n+linux-build\n+win32-build\n+test/config.ini\n+test/cache/*\n+test/.mypy_cache/\n+\n+!src/leveldb*/Makefile\n+\n+/doc/doxygen/\n+\n+libbitcoinconsensus.pc\n+contrib/devtools/split-debug.sh\n+\n+# Output from running db4 installation\n+db4/\n+\n+# clang-check\n+*.plist\n+\n+osx_volname\n+dist/\n+*.background.tiff"
      },
      {
        "sha": "c49282585a030b902316d2b71a73b15b5840aaa2",
        "filename": ".python-version",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/.python-version",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/.python-version",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.python-version?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1 @@\n+3.5.6"
      },
      {
        "sha": "69d8c6aee417d6fd300990e3c34ae719f16406a2",
        "filename": ".style.yapf",
        "status": "added",
        "additions": 261,
        "deletions": 0,
        "changes": 261,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/.style.yapf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/.style.yapf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.style.yapf?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,261 @@\n+[style]\n+# Align closing bracket with visual indentation.\n+align_closing_bracket_with_visual_indent=True\n+\n+# Allow dictionary keys to exist on multiple lines. For example:\n+#\n+#   x = {\n+#       ('this is the first element of a tuple',\n+#        'this is the second element of a tuple'):\n+#            value,\n+#   }\n+allow_multiline_dictionary_keys=False\n+\n+# Allow lambdas to be formatted on more than one line.\n+allow_multiline_lambdas=False\n+\n+# Allow splits before the dictionary value.\n+allow_split_before_dict_value=True\n+\n+# Number of blank lines surrounding top-level function and class\n+# definitions.\n+blank_lines_around_top_level_definition=2\n+\n+# Insert a blank line before a class-level docstring.\n+blank_line_before_class_docstring=False\n+\n+# Insert a blank line before a module docstring.\n+blank_line_before_module_docstring=False\n+\n+# Insert a blank line before a 'def' or 'class' immediately nested\n+# within another 'def' or 'class'. For example:\n+#\n+#   class Foo:\n+#                      # <------ this blank line\n+#     def method():\n+#       ...\n+blank_line_before_nested_class_or_def=False\n+\n+# Do not split consecutive brackets. Only relevant when\n+# dedent_closing_brackets is set. For example:\n+#\n+#    call_func_that_takes_a_dict(\n+#        {\n+#            'key1': 'value1',\n+#            'key2': 'value2',\n+#        }\n+#    )\n+#\n+# would reformat to:\n+#\n+#    call_func_that_takes_a_dict({\n+#        'key1': 'value1',\n+#        'key2': 'value2',\n+#    })\n+coalesce_brackets=False\n+\n+# The column limit.\n+column_limit=160\n+\n+# The style for continuation alignment. Possible values are:\n+#\n+# - SPACE: Use spaces for continuation alignment. This is default behavior.\n+# - FIXED: Use fixed number (CONTINUATION_INDENT_WIDTH) of columns\n+#   (ie: CONTINUATION_INDENT_WIDTH/INDENT_WIDTH tabs) for continuation\n+#   alignment.\n+# - LESS: Slightly left if cannot vertically align continuation lines with\n+#   indent characters.\n+# - VALIGN-RIGHT: Vertically align continuation lines with indent\n+#   characters. Slightly right (one more indent character) if cannot\n+#   vertically align continuation lines with indent characters.\n+#\n+# For options FIXED, and VALIGN-RIGHT are only available when USE_TABS is\n+# enabled.\n+continuation_align_style=SPACE\n+\n+# Indent width used for line continuations.\n+continuation_indent_width=4\n+\n+# Put closing brackets on a separate line, dedented, if the bracketed\n+# expression can't fit in a single line. Applies to all kinds of brackets,\n+# including function definitions and calls. For example:\n+#\n+#   config = {\n+#       'key1': 'value1',\n+#       'key2': 'value2',\n+#   }        # <--- this bracket is dedented and on a separate line\n+#\n+#   time_series = self.remote_client.query_entity_counters(\n+#       entity='dev3246.region1',\n+#       key='dns.query_latency_tcp',\n+#       transform=Transformation.AVERAGE(window=timedelta(seconds=60)),\n+#       start_ts=now()-timedelta(days=3),\n+#       end_ts=now(),\n+#   )        # <--- this bracket is dedented and on a separate line\n+dedent_closing_brackets=False\n+\n+# Disable the heuristic which places each list element on a separate line\n+# if the list is comma-terminated.\n+disable_ending_comma_heuristic=False\n+\n+# Place each dictionary entry onto its own line.\n+each_dict_entry_on_separate_line=True\n+\n+# The regex for an i18n comment. The presence of this comment stops\n+# reformatting of that line, because the comments are required to be\n+# next to the string they translate.\n+i18n_comment=\n+\n+# The i18n function call names. The presence of this function stops\n+# reformattting on that line, because the string it has cannot be moved\n+# away from the i18n comment.\n+i18n_function_call=\n+\n+# Indent the dictionary value if it cannot fit on the same line as the\n+# dictionary key. For example:\n+#\n+#   config = {\n+#       'key1':\n+#           'value1',\n+#       'key2': value1 +\n+#               value2,\n+#   }\n+indent_dictionary_value=False\n+\n+# The number of columns to use for indentation.\n+indent_width=4\n+\n+# Join short lines into one line. E.g., single line 'if' statements.\n+join_multiple_lines=True\n+\n+# Do not include spaces around selected binary operators. For example:\n+#\n+#   1 + 2 * 3 - 4 / 5\n+#\n+# will be formatted as follows when configured with \"*,/\":\n+#\n+#   1 + 2*3 - 4/5\n+#\n+no_spaces_around_selected_binary_operators=\n+\n+# Use spaces around default or named assigns.\n+spaces_around_default_or_named_assign=False\n+\n+# Use spaces around the power operator.\n+spaces_around_power_operator=False\n+\n+# The number of spaces required before a trailing comment.\n+spaces_before_comment=2\n+\n+# Insert a space between the ending comma and closing bracket of a list,\n+# etc.\n+space_between_ending_comma_and_closing_bracket=True\n+\n+# Split before arguments\n+split_all_comma_separated_values=False\n+\n+# Split before arguments if the argument list is terminated by a\n+# comma.\n+split_arguments_when_comma_terminated=False\n+\n+# Set to True to prefer splitting before '&', '|' or '^' rather than\n+# after.\n+split_before_bitwise_operator=True\n+\n+# Split before the closing bracket if a list or dict literal doesn't fit on\n+# a single line.\n+split_before_closing_bracket=True\n+\n+# Split before a dictionary or set generator (comp_for). For example, note\n+# the split before the 'for':\n+#\n+#   foo = {\n+#       variable: 'Hello world, have a nice day!'\n+#       for variable in bar if variable != 42\n+#   }\n+split_before_dict_set_generator=True\n+\n+# Split before the '.' if we need to split a longer expression:\n+#\n+#   foo = ('This is a really long string: {}, {}, {}, {}'.format(a, b, c, d))\n+#\n+# would reformat to something like:\n+#\n+#   foo = ('This is a really long string: {}, {}, {}, {}'\n+#          .format(a, b, c, d))\n+split_before_dot=False\n+\n+# Split after the opening paren which surrounds an expression if it doesn't\n+# fit on a single line.\n+split_before_expression_after_opening_paren=False\n+\n+# If an argument / parameter list is going to be split, then split before\n+# the first argument.\n+split_before_first_argument=False\n+\n+# Set to True to prefer splitting before 'and' or 'or' rather than\n+# after.\n+split_before_logical_operator=True\n+\n+# Split named assignments onto individual lines.\n+split_before_named_assigns=True\n+\n+# Set to True to split list comprehensions and generators that have\n+# non-trivial expressions and multiple clauses before each of these\n+# clauses. For example:\n+#\n+#   result = [\n+#       a_long_var + 100 for a_long_var in xrange(1000)\n+#       if a_long_var % 10]\n+#\n+# would reformat to something like:\n+#\n+#   result = [\n+#       a_long_var + 100\n+#       for a_long_var in xrange(1000)\n+#       if a_long_var % 10]\n+split_complex_comprehension=False\n+\n+# The penalty for splitting right after the opening bracket.\n+split_penalty_after_opening_bracket=30\n+\n+# The penalty for splitting the line after a unary operator.\n+split_penalty_after_unary_operator=10000\n+\n+# The penalty for splitting right before an if expression.\n+split_penalty_before_if_expr=0\n+\n+# The penalty of splitting the line around the '&', '|', and '^'\n+# operators.\n+split_penalty_bitwise_operator=300\n+\n+# The penalty for splitting a list comprehension or generator\n+# expression.\n+split_penalty_comprehension=80\n+\n+# The penalty for characters over the column limit.\n+split_penalty_excess_character=7000\n+\n+# The penalty incurred by adding a line split to the unwrapped line. The\n+# more line splits added the higher the penalty.\n+split_penalty_for_added_line_split=30\n+\n+# The penalty of splitting a list of \"import as\" names. For example:\n+#\n+#   from a_very_long_or_indented_module_name_yada_yad import (long_argument_1,\n+#                                                             long_argument_2,\n+#                                                             long_argument_3)\n+#\n+# would reformat to something like:\n+#\n+#   from a_very_long_or_indented_module_name_yada_yad import (\n+#       long_argument_1, long_argument_2, long_argument_3)\n+split_penalty_import_names=0\n+\n+# The penalty of splitting the line around the 'and' and 'or'\n+# operators.\n+split_penalty_logical_operator=300\n+\n+# Use the Tab character for indentation.\n+use_tabs=False\n+"
      },
      {
        "sha": "55b34ae422d2fb828a70a0b518061c06333a725a",
        "filename": ".travis.yml",
        "status": "added",
        "additions": 109,
        "deletions": 0,
        "changes": 109,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,109 @@\n+# Travis caches can be manually removed if necessary. This is one of the very\n+# few manual operations that is possible with Travis, and it can be done by a\n+# Bitcoin Core GitHub member via the Travis web interface [0].\n+#\n+# Travis CI uploads the cache after the script phase of the build [1].\n+# However, the build is terminated without saving the cache if it takes over\n+# 50 minutes [2]. Thus, if we spent too much time in early build stages, fail\n+# with an error and save the cache.\n+#\n+# [0] https://travis-ci.org/bitcoin/bitcoin/caches\n+# [1] https://docs.travis-ci.com/user/caching/#build-phases\n+# [2] https://docs.travis-ci.com/user/customizing-the-build#build-timeouts\n+\n+version: ~> 1.0\n+\n+dist: bionic\n+os: linux\n+language: minimal\n+arch: amd64\n+cache:\n+  directories:\n+    - $TRAVIS_BUILD_DIR/depends/built\n+    - $TRAVIS_BUILD_DIR/depends/sdk-sources\n+    - $TRAVIS_BUILD_DIR/ci/scratch/.ccache\n+    - $TRAVIS_BUILD_DIR/releases/$HOST\n+stages:\n+  - lint\n+  - test\n+env:\n+  global:\n+    - CI_RETRY_EXE=\"travis_retry\"\n+    - CACHE_ERR_MSG=\"Error! Initial build successful, but not enough time remains to run later build stages and tests. See https://docs.travis-ci.com/user/customizing-the-build#build-timeouts . Please manually re-run this job by using the travis restart button. The next run should not time out because the build cache has been saved.\"\n+before_install:\n+  - set -o errexit; source ./ci/test/00_setup_env.sh\n+  - set -o errexit; source ./ci/test/03_before_install.sh\n+install:\n+  - set -o errexit; source ./ci/test/04_install.sh\n+before_script:\n+  # Temporary workaround for https://github.com/bitcoin/bitcoin/issues/16368\n+  - for i in {1..4}; do echo \"$(sleep 500)\" ; done &\n+  - set -o errexit; source ./ci/test/05_before_script.sh &> \"/dev/null\"\n+script:\n+  - export CONTINUE=1\n+  - if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long\n+  - if [ $TRAVIS_REPO_SLUG = \"bitcoin/bitcoin\" ]; then export CONTINUE=1; fi  # continue on repos with extended build time (90 minutes)\n+  - if [ $CONTINUE = \"1\" ]; then set -o errexit; source ./ci/test/06_script_a.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n+  - if [[ $SECONDS -gt 50*60-$EXPECTED_TESTS_DURATION_IN_SECONDS ]]; then export CONTINUE=0; fi\n+  - if [ $TRAVIS_REPO_SLUG = \"bitcoin/bitcoin\" ]; then export CONTINUE=1; fi  # continue on repos with extended build time (90 minutes)\n+  - if [ $CONTINUE = \"1\" ]; then set -o errexit; source ./ci/test/06_script_b.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n+after_script:\n+  - echo $TRAVIS_COMMIT_RANGE\n+jobs:\n+  include:\n+\n+    - stage: lint\n+      name: 'lint'\n+      env:\n+      cache: pip\n+      language: python\n+      python: '3.5' # Oldest supported version according to doc/dependencies.md\n+      install:\n+        - set -o errexit; source ./ci/lint/04_install.sh\n+      before_script:\n+        - set -o errexit; source ./ci/lint/05_before_script.sh\n+      script:\n+        - set -o errexit; source ./ci/lint/06_script.sh\n+\n+    - stage: test\n+      name: 'ARM  [GOAL: install]  [buster]  [unit tests, no functional tests]'\n+      arch: arm64  # Can disable QEMU_USER_CMD and run the tests natively without qemu\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_arm.sh\"\n+        QEMU_USER_CMD=\"\"\n+\n+    - stage: test\n+      name: 'Win64  [GOAL: deploy]  [unit tests, no gui, no boost::process, no functional tests]'\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_win64.sh\"\n+\n+    - stage: test\n+      name: '32-bit + dash  [GOAL: install]  [CentOS 7]  [gui]'\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_i686_centos.sh\"\n+\n+    - stage: test\n+      name: 'x86_64 Linux  [GOAL: install]  [xenial]  [no wallet]'\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_native_nowallet.sh\"\n+\n+    - stage: test\n+      name: 'macOS 10.14 native [GOAL: install] [GUI] [no depends]'\n+      os: osx\n+      # Use the most recent version:\n+      # Xcode 11.3.1, macOS 10.14, SDK 10.15\n+      # https://docs.travis-ci.com/user/reference/osx/#macos-version\n+      osx_image: xcode11.3\n+      addons:\n+        homebrew:\n+          packages:\n+          - berkeley-db4\n+          - miniupnpc\n+          - qrencode\n+          - sqlite\n+          - ccache\n+          - zeromq\n+      env: >-\n+        DANGER_RUN_CI_ON_HOST=true\n+        CI_USE_APT_INSTALL=no\n+        FILE_ENV=\"./ci/test/00_setup_env_mac_host.sh\""
      },
      {
        "sha": "86b517a6120ccf7036aef3e1bea936612cc5b3b0",
        "filename": ".tx/config",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,7 @@\n+[main]\n+host = https://www.transifex.com\n+\n+[bitcoin.qt-translation-021x]\n+file_filter = src/qt/locale/bitcoin_<lang>.ts\n+source_file = src/qt/locale/bitcoin_en.ts\n+source_lang = en"
      },
      {
        "sha": "24a80fb35d28a2427628d8dc35ff5ec0ac4fb4b1",
        "filename": "CODEOWNERS",
        "status": "added",
        "additions": 136,
        "deletions": 0,
        "changes": 136,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/CODEOWNERS",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/CODEOWNERS",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CODEOWNERS?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,136 @@\n+# ==============================================================================\n+#                          Bitcoin Core CODEOWNERS\n+# ==============================================================================\n+\n+# Configuration of code ownership and review approvals for the bitcoin/bitcoin\n+# repo.\n+\n+# Order is important; the last matching pattern takes the most precedence.\n+# More info on how this file works can be found at:\n+# https://help.github.com/articles/about-codeowners/\n+\n+# This file is called CODEOWNERS because it is a magic file for GitHub to\n+# automatically suggest reviewers. In this project's case, the names below\n+# should be thought of as code reviewers rather than owners. Regular\n+# contributors are free to add their names to specific directories or files\n+# provided that they are willing to provide a review when automatically\n+# assigned.\n+\n+# Absence from this list should not be interpreted as a discouragement to\n+# review a pull request. Peer review is always welcome and is a critical\n+# component of the progress of the codebase. Information on peer review\n+# guidelines can be found in the CONTRIBUTING.md doc.\n+\n+\n+# Maintainers\n+#   @laanwj\n+#   @sipa\n+#   @fanquake\n+#   @jonasschnelli\n+#   @marcofalke\n+#   @meshcollider\n+\n+# Docs\n+/doc/*[a-zA-Z-].md                          @harding\n+/doc/Doxyfile.in                            @fanquake\n+/doc/REST-interface.md                      @jonasschnelli\n+/doc/benchmarking.md                        @ariard\n+/doc/bitcoin-conf.md                        @hebasto\n+/doc/build-freebsd.md                       @fanquake\n+/doc/build-netbsd.md                        @fanquake\n+/doc/build-openbsd.md                       @laanwj\n+/doc/build-osx.md                           @fanquake\n+/doc/build-unix.md                          @laanwj\n+/doc/build-windows.md                       @sipsorcery\n+/doc/dependencies.md                        @fanquake\n+/doc/developer-notes.md                     @laanwj\n+/doc/files.md                               @hebasto\n+/doc/gitian-building.md                     @laanwj\n+/doc/reduce-memory.md                       @fanquake\n+/doc/reduce-traffic.md                      @jonasschnelli\n+/doc/release-process.md                     @laanwj\n+/doc/translation_strings_policy.md          @laanwj\n+\n+# Build aux\n+/build-aux/m4/bitcoin_qt.m4                 @hebasto\n+\n+# MSVC build system\n+/build_msvc/                                @sipsorcery\n+\n+# Settings\n+/src/util/settings.*                        @ryanofsky\n+\n+# Fuzzing\n+/src/test/fuzz/                             @practicalswift\n+/doc/fuzzing.md                             @practicalswift\n+\n+# Test framework\n+/test/functional/mempool_updatefromblock.py @hebasto\n+/test/functional/feature_asmap.py           @jonatack\n+/test/functional/interface_bitcoin_cli.py   @jonatack\n+/test/functional/tool_wallet.py             @jonatack\n+\n+# Translations\n+/src/util/translation.h                     @hebasto\n+\n+# Dev Tools\n+/contrib/devtools/security-check.py         @fanquake\n+/contrib/devtools/test-security-check.py    @fanquake\n+/contrib/devtools/symbol-check.py           @fanquake\n+\n+# Gitian/Guix\n+/contrib/gitian-build.py                    @hebasto\n+/contrib/guix/                              @dongcarl\n+\n+# Compatibility\n+/src/compat/glibc_*                         @fanquake\n+\n+# GUI\n+/src/qt/forms/                              @hebasto\n+\n+# Wallet\n+/src/wallet/                                @achow101\n+\n+# CLI\n+/src/bitcoin-cli.cpp                        @jonatack\n+\n+# Coinstats\n+/src/node/coinstats.*                       @fjahr\n+\n+# Index\n+/src/index/                                 @fjahr\n+\n+# Descriptors\n+*descriptor*                                @achow101 @sipa\n+\n+# Interfaces\n+/src/interfaces/                            @ryanofsky\n+\n+# DB\n+/src/txdb.*                                 @jamesob\n+/src/dbwrapper.*                            @jamesob\n+\n+# Scripts/Linter\n+*.sh                                        @practicalswift\n+/test/lint/                                 @practicalswift\n+/test/lint/lint-shell.sh                    @hebasto\n+\n+# Bech32\n+/src/bech32.*                               @sipa\n+/src/bench/bech32.*                         @sipa\n+\n+# PSBT\n+/src/psbt*                                  @achow101\n+/src/node/psbt*                             @achow101\n+/doc/psbt.md                                @achow101\n+\n+# P2P\n+/src/net_processing.*                       @sipa\n+/src/protocol.*                             @sipa\n+\n+# Consensus\n+/src/coins.*                                @sipa @jamesob\n+/src/script/script.*                        @sipa\n+/src/script/interpreter.*                   @sipa\n+/src/validation.*                           @sipa\n+/src/consensus/                             @sipa"
      },
      {
        "sha": "2e114743822562f45432d1f9f634eec70e49022a",
        "filename": "CONTRIBUTING.md",
        "status": "added",
        "additions": 436,
        "deletions": 0,
        "changes": 436,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,436 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is\n+welcome to contribute towards development in the form of peer review, testing\n+and patches. This document explains the practical process and guidelines for\n+contributing.\n+\n+First, in terms of structure, there is no particular concept of \"Bitcoin Core\n+developers\" in the sense of privileged people. Open source often naturally\n+revolves around a meritocracy where contributors earn trust from the developer\n+community over time. Nevertheless, some hierarchy is necessary for practical\n+purposes. As such, there are repository \"maintainers\" who are responsible for\n+merging pull requests, as well as a \"lead maintainer\" who is responsible for the\n+release cycle as well as overall merging, moderation and appointment of\n+maintainers.\n+\n+Getting Started\n+---------------\n+\n+New contributors are very welcome and needed.\n+\n+Reviewing and testing is highly valued and the most effective way you can contribute\n+as a new contributor. It also will teach you much more about the code and\n+process than opening pull requests. Please refer to the [peer review](#peer-review)\n+section below.\n+\n+Before you start contributing, familiarize yourself with the Bitcoin Core build\n+system and tests. Refer to the documentation in the repository on how to build\n+Bitcoin Core and how to run the unit tests, functional tests, and fuzz tests.\n+\n+There are many open issues of varying difficulty waiting to be fixed.\n+If you're looking for somewhere to start contributing, check out the\n+[good first issue](https://github.com/bitcoin/bitcoin/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22)\n+list or changes that are\n+[up for grabs](https://github.com/bitcoin/bitcoin/issues?utf8=%E2%9C%93&q=label%3A%22Up+for+grabs%22).\n+Some of them might no longer be applicable. So if you are interested, but\n+unsure, you might want to leave a comment on the issue first.\n+\n+You may also participate in the weekly\n+[Bitcoin Core PR Review Club](https://bitcoincore.reviews/) meeting.\n+\n+### Good First Issue Label\n+\n+The purpose of the `good first issue` label is to highlight which issues are\n+suitable for a new contributor without a deep understanding of the codebase.\n+\n+However, good first issues can be solved by anyone. If they remain unsolved\n+for a longer time, a frequent contributor might address them.\n+\n+You do not need to request permission to start working on an issue. However,\n+you are encouraged to leave a comment if you are planning to work on it. This\n+will help other contributors monitor which issues are actively being addressed\n+and is also an effective way to request assistance if and when you need it.\n+\n+Communication Channels\n+----------------------\n+\n+Most communication about Bitcoin Core development happens on IRC, in the\n+`#bitcoin-core-dev` channel on Freenode. The easiest way to participate on IRC is\n+with the web client, [webchat.freenode.net](https://webchat.freenode.net/). Chat\n+history logs can be found\n+on [http://www.erisian.com.au/bitcoin-core-dev/](http://www.erisian.com.au/bitcoin-core-dev/)\n+and [http://gnusha.org/bitcoin-core-dev/](http://gnusha.org/bitcoin-core-dev/).\n+\n+Discussion about codebase improvements happens in GitHub issues and pull\n+requests.\n+\n+The developer\n+[mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n+should be used to discuss complicated or controversial consensus or P2P protocol changes before working on\n+a patch set.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the \"contributor workflow\" where everyone\n+without exception contributes patch proposals using \"pull requests\" (PRs). This\n+facilitates social contribution, easy testing and peer review.\n+\n+To contribute a patch, the workflow is as follows:\n+\n+  1. Fork repository ([only for the first time](https://help.github.com/en/articles/fork-a-repo))\n+  1. Create topic branch\n+  1. Commit patches\n+\n+For GUI-related issues or pull requests, the https://github.com/bitcoin-core/gui repository should be used.\n+For all other issues and pull requests, the https://github.com/bitcoin/bitcoin node repository should be used.\n+\n+The master branch for all monotree repositories is identical.\n+\n+As a rule of thumb, everything that only modifies `src/qt` is a GUI-only pull\n+request. However:\n+\n+* For global refactoring or other transversal changes the node repository\n+  should be used.\n+* For GUI-related build system changes, the node repository should be used\n+  because the change needs review by the build systems reviewers.\n+* Changes in `src/interfaces` need to go to the node repository because they\n+  might affect other components like the wallet.\n+\n+For large GUI changes that include build system and interface changes, it is\n+recommended to first open a pull request against the GUI repository. When there\n+is agreement to proceed with the changes, a pull request with the build system\n+and interfaces changes can be submitted to the node repository.\n+\n+The project coding conventions in the [developer notes](doc/developer-notes.md)\n+must be followed.\n+\n+### Committing Patches\n+\n+In general, [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention)\n+and diffs should be easy to read. For this reason, do not mix any formatting\n+fixes or code moves with actual code changes.\n+\n+Make sure each individual commit is hygienic: that it builds successfully on its\n+own without warnings, errors, regressions, or test failures.\n+\n+Commit messages should be verbose by default consisting of a short subject line\n+(50 chars max), a blank line and detailed explanatory text as separate\n+paragraph(s), unless the title alone is self-explanatory (like \"Corrected typo\n+in init.cpp\") in which case a single title line is sufficient. Commit messages should be\n+helpful to people reading your code in the future, so explain the reasoning for\n+your decisions. Further explanation [here](https://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference. For\n+example: `refs #1234` or `fixes #4321`. Using the `fixes` or `closes` keywords\n+will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Commit messages should never contain any `@` mentions (usernames prefixed with \"@\").\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information\n+about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+### Creating the Pull Request\n+\n+The title of the pull request should be prefixed by the component or area that\n+the pull request affects. Valid areas as:\n+\n+  - `consensus` for changes to consensus critical code\n+  - `doc` for changes to the documentation\n+  - `qt` or `gui` for changes to bitcoin-qt\n+  - `log` for changes to log messages\n+  - `mining` for changes to the mining code\n+  - `net` or `p2p` for changes to the peer-to-peer network code\n+  - `refactor` for structural changes that do not change behavior\n+  - `rpc`, `rest` or `zmq` for changes to the RPC, REST or ZMQ APIs\n+  - `script` for changes to the scripts and tools\n+  - `test`, `qa` or `ci` for changes to the unit tests, QA tests or CI code\n+  - `util` or `lib` for changes to the utils or libraries\n+  - `wallet` for changes to the wallet code\n+  - `build` for changes to the GNU Autotools or reproducible builds\n+\n+Examples:\n+\n+    consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    net: Automatically create onion service, listen on Tor\n+    qt: Add feed bump button\n+    log: Fix typo in log message\n+\n+The body of the pull request should contain sufficient description of *what* the\n+patch does, and even more importantly, *why*, with justification and reasoning.\n+You should include references to any discussions (for example, other issues or\n+mailing list discussions).\n+\n+The description for a new pull request should not contain any `@` mentions. The\n+PR description will be included in the commit message when the PR is merged and\n+any users mentioned in the description will be annoyingly notified each time a\n+fork of Bitcoin Core copies the merge. Instead, make any username mentions in a\n+subsequent comment to the PR.\n+\n+### Translation changes\n+\n+Note that translations should not be submitted as pull requests. Please see\n+[Translation Process](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md)\n+for more information on helping with translations.\n+\n+### Work in Progress Changes and Requests for Comments\n+\n+If a pull request is not to be considered for merging (yet), please\n+prefix the title with [WIP] or use [Tasks Lists](https://help.github.com/articles/basic-writing-and-formatting-syntax/#task-lists)\n+in the body of the pull request to indicate tasks are pending.\n+\n+### Address Feedback\n+\n+At this stage, one should expect comments and review from other contributors. You\n+can add more commits to your pull request by committing them locally and pushing\n+to your fork until you have satisfied all feedback.\n+\n+Note: Code review is a burdensome but important part of the development process, and as such, certain types of pull requests are rejected. In general, if the **improvements** do not warrant the **review effort** required, the PR has a high chance of being rejected. It is up to the PR author to convince the reviewers that the changes warrant the review effort, and if reviewers are \"Concept NACK'ing\" the PR, the author may need to present arguments and/or do research backing their suggested changes.\n+\n+### Squashing Commits\n+\n+If your pull request contains fixup commits (commits that change the same line of code repeatedly) or too fine-grained\n+commits, you may be asked to [squash](https://git-scm.com/docs/git-rebase#_interactive_mode) your commits\n+before it will be merged. The basic squashing workflow is shown below.\n+\n+    git checkout your_branch_name\n+    git rebase -i HEAD~n\n+    # n is normally the number of commits in the pull request.\n+    # Set commits (except the one in the first line) from 'pick' to 'squash', save and quit.\n+    # On the next screen, edit/refine commit messages.\n+    # Save and quit.\n+    git push -f # (force push to GitHub)\n+\n+Please update the resulting commit message, if needed. It should read as a\n+coherent message. In most cases, this means not just listing the interim\n+commits.\n+\n+If you have problems with squashing or other git workflows, you can enable\n+\"Allow edits from maintainers\" in the right-hand sidebar of the GitHub web\n+interface and ask for help in the pull request.\n+\n+Please refrain from creating several pull requests for the same change.\n+Use the pull request that is already open (or was created earlier) to amend\n+changes. This preserves the discussion and review that happened earlier for\n+the respective change set.\n+\n+The length of time required for peer review is unpredictable and will vary from\n+pull request to pull request.\n+\n+### Rebasing Changes\n+\n+When a pull request conflicts with the target branch, you may be asked to rebase it on top of the current target branch.\n+The `git rebase` command will take care of rebuilding your commits on top of the new base.\n+\n+This project aims to have a clean git history, where code changes are only made in non-merge commits. This simplifies\n+auditability because merge commits can be assumed to not contain arbitrary code changes. Merge commits should be signed,\n+and the resulting git tree hash must be deterministic and reproducible. The script in\n+[/contrib/verify-commits](/contrib/verify-commits) checks that.\n+\n+After a rebase, reviewers are encouraged to sign off on the force push. This should be relatively straightforward with\n+the `git range-diff` tool explained in the [productivity\n+notes](/doc/productivity.md#diff-the-diffs-with-git-range-diff). To avoid needless review churn, maintainers will\n+generally merge pull requests that received the most review attention first.\n+\n+Pull Request Philosophy\n+-----------------------\n+\n+Patchsets should always be focused. For example, a pull request could add a\n+feature, fix a bug, or refactor code; but not a mixture. Please also avoid super\n+pull requests which attempt to do too much, are overly large, or overly complex\n+as this makes review difficult.\n+\n+\n+### Features\n+\n+When adding a new feature, thought must be given to the long term technical debt\n+and maintenance that feature may require after inclusion. Before proposing a new\n+feature that will require maintenance, please consider if you are willing to\n+maintain it (including bug fixing). If features get orphaned with no maintainer\n+in the future, they may be removed by the Repository Maintainer.\n+\n+\n+### Refactoring\n+\n+Refactoring is a necessary part of any software project's evolution. The\n+following guidelines cover refactoring pull requests for the project.\n+\n+There are three categories of refactoring: code-only moves, code style fixes, and\n+code refactoring. In general, refactoring pull requests should not mix these\n+three kinds of activities in order to make refactoring pull requests easy to\n+review and uncontroversial. In all cases, refactoring PRs must not change the\n+behaviour of code within the pull request (bugs must be preserved as is).\n+\n+Project maintainers aim for a quick turnaround on refactoring pull requests, so\n+where possible keep them short, uncomplex and easy to verify.\n+\n+Pull requests that refactor the code should not be made by new contributors. It\n+requires a certain level of experience to know where the code belongs to and to\n+understand the full ramification (including rebase effort of open pull requests).\n+\n+Trivial pull requests or pull requests that refactor the code with no clear\n+benefits may be immediately closed by the maintainers to reduce unnecessary\n+workload on reviewing.\n+\n+\n+\"Decision Making\" Process\n+-------------------------\n+\n+The following applies to code changes to the Bitcoin Core project (and related\n+projects such as libsecp256k1), and is not to be confused with overall Bitcoin\n+Network Protocol consensus changes.\n+\n+Whether a pull request is merged into Bitcoin Core rests with the project merge\n+maintainers and ultimately the project lead.\n+\n+Maintainers will take into consideration if a patch is in line with the general\n+principles of the project; meets the minimum standards for inclusion; and will\n+judge the general consensus of contributors.\n+\n+In general, all pull requests must:\n+\n+  - Have a clear use case, fix a demonstrable bug or serve the greater good of\n+    the project (for example refactoring for modularisation);\n+  - Be well peer-reviewed;\n+  - Have unit tests, functional tests, and fuzz tests, where appropriate;\n+  - Follow code style guidelines ([C++](doc/developer-notes.md), [functional tests](test/functional/README.md));\n+  - Not break the existing test suite;\n+  - Where bugs are fixed, where possible, there should be unit tests\n+    demonstrating the bug and also proving the fix. This helps prevent regression.\n+  - Change relevant comments and documentation when behaviour of code changes.\n+\n+Patches that change Bitcoin consensus rules are considerably more involved than\n+normal because they affect the entire ecosystem and so must be preceded by\n+extensive mailing list discussions and have a numbered BIP. While each case will\n+be different, one should be prepared to expend more time and effort than for\n+other kinds of patches because of increased peer review and consensus building\n+requirements.\n+\n+\n+### Peer Review\n+\n+Anyone may participate in peer review which is expressed by comments in the pull\n+request. Typically reviewers will review the code for obvious errors, as well as\n+test out the patch set and opine on the technical merits of the patch. Project\n+maintainers take into account the peer review when determining if there is\n+consensus to merge a pull request (remember that discussions may have been\n+spread out over GitHub, mailing list and IRC discussions).\n+\n+#### Conceptual Review\n+\n+A review can be a conceptual review, where the reviewer leaves a comment\n+ * `Concept (N)ACK`, meaning \"I do (not) agree with the general goal of this pull\n+   request\",\n+ * `Approach (N)ACK`, meaning `Concept ACK`, but \"I do (not) agree with the\n+   approach of this change\".\n+\n+A `NACK` needs to include a rationale why the change is not worthwhile.\n+NACKs without accompanying reasoning may be disregarded.\n+\n+#### Code Review\n+\n+After conceptual agreement on the change, code review can be provided. A review\n+begins with `ACK BRANCH_COMMIT`, where `BRANCH_COMMIT` is the top of the PR\n+branch, followed by a description of how the reviewer did the review. The\n+following language is used within pull request comments:\n+\n+  - \"I have tested the code\", involving change-specific manual testing in\n+    addition to running the unit, functional, or fuzz tests, and in case it is\n+    not obvious how the manual testing was done, it should be described;\n+  - \"I have not tested the code, but I have reviewed it and it looks\n+    OK, I agree it can be merged\";\n+  - A \"nit\" refers to a trivial, often non-blocking issue.\n+\n+Project maintainers reserve the right to weigh the opinions of peer reviewers\n+using common sense judgement and may also weigh based on merit. Reviewers that\n+have demonstrated a deeper commitment and understanding of the project over time\n+or who have clear domain expertise may naturally have more weight, as one would\n+expect in all walks of life.\n+\n+Where a patch set affects consensus-critical code, the bar will be much\n+higher in terms of discussion and peer review requirements, keeping in mind that\n+mistakes could be very costly to the wider community. This includes refactoring\n+of consensus-critical code.\n+\n+Where a patch set proposes to change the Bitcoin consensus, it must have been\n+discussed extensively on the mailing list and IRC, be accompanied by a widely\n+discussed BIP and have a generally widely perceived technical consensus of being\n+a worthwhile change based on the judgement of the maintainers.\n+\n+### Finding Reviewers\n+\n+As most reviewers are themselves developers with their own projects, the review\n+process can be quite lengthy, and some amount of patience is required. If you find\n+that you've been waiting for a pull request to be given attention for several\n+months, there may be a number of reasons for this, some of which you can do something\n+about:\n+\n+  - It may be because of a feature freeze due to an upcoming release. During this time,\n+    only bug fixes are taken into consideration. If your pull request is a new feature,\n+    it will not be prioritized until after the release. Wait for the release.\n+  - It may be because the changes you are suggesting do not appeal to people. Rather than\n+    nits and critique, which require effort and means they care enough to spend time on your\n+    contribution, thundering silence is a good sign of widespread (mild) dislike of a given change\n+    (because people don't assume *others* won't actually like the proposal). Don't take\n+    that personally, though! Instead, take another critical look at what you are suggesting\n+    and see if it: changes too much, is too broad, doesn't adhere to the\n+    [developer notes](doc/developer-notes.md), is dangerous or insecure, is messily written, etc.\n+    Identify and address any of the issues you find. Then ask e.g. on IRC if someone could give\n+    their opinion on the concept itself.\n+  - It may be because your code is too complex for all but a few people, and those people\n+    may not have realized your pull request even exists. A great way to find people who\n+    are qualified and care about the code you are touching is the\n+    [Git Blame feature](https://help.github.com/articles/tracing-changes-in-a-file/). Simply\n+    look up who last modified the code you are changing and see if you can find\n+    them and give them a nudge. Don't be incessant about the nudging, though.\n+  - Finally, if all else fails, ask on IRC or elsewhere for someone to give your pull request\n+    a look. If you think you've been waiting for an unreasonably long time (say,\n+    more than a month) for no particular reason (a few lines changed, etc.),\n+    this is totally fine. Try to return the favor when someone else is asking\n+    for feedback on their code, and the universe balances out.\n+  - Remember that the best thing you can do while waiting is give review to others!\n+\n+\n+Backporting\n+-----------\n+\n+Security and bug fixes can be backported from `master` to release\n+branches.\n+If the backport is non-trivial, it may be appropriate to open an\n+additional PR to backport the change, but only after the original PR\n+has been merged.\n+Otherwise, backports will be done in batches and\n+the maintainers will use the proper `Needs backport (...)` labels\n+when needed (the original author does not need to worry about it).\n+\n+A backport should contain the following metadata in the commit body:\n+\n+```\n+Github-Pull: #<PR number>\n+Rebased-From: <commit hash of the original commit>\n+```\n+\n+Have a look at [an example backport PR](\n+https://github.com/bitcoin/bitcoin/pull/16189).\n+\n+Also see the [backport.py script](\n+https://github.com/bitcoin-core/bitcoin-maintainer-tools#backport).\n+\n+Release Policy\n+--------------\n+\n+The project leader is the release manager for each Bitcoin Core release.\n+\n+Copyright\n+---------\n+\n+By contributing to this repository, you agree to license your work under the\n+MIT license unless specified otherwise in `contrib/debian/copyright` or at\n+the top of the file itself. Any work contributed where you are not the original\n+author must contain its license header with the original author(s) and source."
      },
      {
        "sha": "5ea3b90c531137d5feb363cdf28206cea091b314",
        "filename": "COPYING_",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/COPYING_",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/COPYING_",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING_?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,27 @@\n+The MIT License (MIT)\n+\n+<<<<<<< HEAD\n+Copyright (c) 2009-2020 The Bitcoin Core developers\n+Copyright (c) 2009-2020 Bitcoin Developers\n+=======\n+Copyright (c) 2009-2017 The Satoshi Bitcoin Core developers\n+Copyright (c) 2009-2017 Satoshi Bitcoin Developers\n+>>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n+\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in\n+all copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+THE SOFTWARE."
      },
      {
        "sha": "520a47d96078dfa80cec83d03146c9349d6369c1",
        "filename": "INSTALL.md_",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/INSTALL.md_",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/INSTALL.md_",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL.md_?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,5 @@\n+Building Bitcoin\n+================\n+\n+See doc/build-*.md for instructions on building the various\n+elements of the Bitcoin Core reference implementation of Bitcoin."
      },
      {
        "sha": "c8af4228f35c76aa18ce0b9eb9a90f4aa1cb1a72",
        "filename": "Makefile.am_",
        "status": "added",
        "additions": 362,
        "deletions": 0,
        "changes": 362,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/Makefile.am_",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/Makefile.am_",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am_?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,362 @@\n+# Copyright (c) 2013-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Pattern rule to print variables, e.g. make print-top_srcdir\n+print-%:\n+\t@echo $* = $($*)\n+\n+ACLOCAL_AMFLAGS = -I build-aux/m4\n+SUBDIRS = src\n+if ENABLE_MAN\n+SUBDIRS += doc/man\n+endif\n+.PHONY: deploy FORCE\n+\n+export PYTHONPATH\n+\n+if BUILD_BITCOIN_LIBS\n+pkgconfigdir = $(libdir)/pkgconfig\n+pkgconfig_DATA = libbitcoinconsensus.pc\n+endif\n+\n+BITCOIND_BIN=$(top_builddir)/src/$(BITCOIN_DAEMON_NAME)$(EXEEXT)\n+BITCOIN_QT_BIN=$(top_builddir)/src/qt/$(BITCOIN_GUI_NAME)$(EXEEXT)\n+BITCOIN_CLI_BIN=$(top_builddir)/src/$(BITCOIN_CLI_NAME)$(EXEEXT)\n+BITCOIN_TX_BIN=$(top_builddir)/src/$(BITCOIN_TX_NAME)$(EXEEXT)\n+BITCOIN_WALLET_BIN=$(top_builddir)/src/$(BITCOIN_WALLET_TOOL_NAME)$(EXEEXT)\n+BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win64-setup$(EXEEXT)\n+\n+empty :=\n+space := $(empty) $(empty)\n+\n+OSX_APP=Bitcoin-Qt.app\n+OSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))\n+OSX_DMG = $(OSX_VOLNAME).dmg\n+OSX_BACKGROUND_SVG=background.svg\n+OSX_BACKGROUND_IMAGE=background.tiff\n+OSX_BACKGROUND_IMAGE_DPIS=36 72\n+OSX_DSSTORE_GEN=$(top_srcdir)/contrib/macdeploy/custom_dsstore.py\n+OSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus\n+OSX_FANCY_PLIST=$(top_srcdir)/contrib/macdeploy/fancy.plist\n+OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n+OSX_PLIST=$(top_builddir)/share/qt/Info.plist #not installed\n+OSX_QT_TRANSLATIONS = ar,bg,ca,cs,da,de,es,fa,fi,fr,gd,gl,he,hu,it,ja,ko,lt,lv,pl,pt,ru,sk,sl,sv,uk,zh_CN,zh_TW\n+\n+DIST_CONTRIB = \\\n+\t       $(top_srcdir)/contrib/linearize/linearize-data.py \\\n+\t       $(top_srcdir)/contrib/linearize/linearize-hashes.py\n+\n+DIST_SHARE = \\\n+  $(top_srcdir)/share/genbuild.sh \\\n+  $(top_srcdir)/share/rpcauth\n+\n+BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n+           $(top_srcdir)/contrib/devtools/security-check.py\n+\n+WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n+  $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n+  $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n+  $(top_srcdir)/doc/README_windows.txt\n+\n+OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n+  $(top_srcdir)/contrib/macdeploy/$(OSX_BACKGROUND_SVG) \\\n+  $(OSX_DSSTORE_GEN) \\\n+  $(top_srcdir)/contrib/macdeploy/detached-sig-apply.sh \\\n+  $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n+\n+COVERAGE_INFO = $(COV_TOOL_WRAPPER) baseline.info \\\n+  test_bitcoin_filtered.info total_coverage.info \\\n+  baseline_filtered.info functional_test.info functional_test_filtered.info \\\n+  test_bitcoin_coverage.info test_bitcoin.info fuzz.info fuzz_filtered.info fuzz_coverage.info\n+\n+dist-hook:\n+\t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n+\n+$(BITCOIN_WIN_INSTALLER): all-recursive\n+\t$(MKDIR_P) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_TX_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_WALLET_BIN) $(top_builddir)/release\n+\t@test -f $(MAKENSIS) && echo 'OutFile \"$@\"' | cat $(top_builddir)/share/setup.nsi - | $(MAKENSIS) -V2 - || \\\n+\t  echo error: could not build $@\n+\t@echo built $@\n+\n+$(OSX_APP)/Contents/PkgInfo:\n+\t$(MKDIR_P) $(@D)\n+\t@echo \"APPL????\" > $@\n+\n+$(OSX_APP)/Contents/Resources/empty.lproj:\n+\t$(MKDIR_P) $(@D)\n+\t@touch $@\n+\n+$(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n+\t$(MKDIR_P) $(@D)\n+\t$(INSTALL_DATA) $< $@\n+\n+$(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n+\t$(MKDIR_P) $(@D)\n+\t$(INSTALL_DATA) $< $@\n+\n+$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: all-recursive\n+\t$(MKDIR_P) $(@D)\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $(BITCOIN_QT_BIN) $@\n+\n+$(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n+\t$(MKDIR_P) $(@D)\n+\techo '{\tCFBundleDisplayName = \"$(PACKAGE_NAME)\"; CFBundleName = \"$(PACKAGE_NAME)\"; }' > $@\n+\n+OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n+  $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n+  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n+\n+osx_volname:\n+\techo $(OSX_VOLNAME) >$@\n+\n+if BUILD_DARWIN\n+$(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING) $(OSX_BACKGROUND_IMAGE)\n+\t$(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2 -volname $(OSX_VOLNAME)\n+\n+$(OSX_BACKGROUND_IMAGE).png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n+\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 36 -p 36 -o $@\n+$(OSX_BACKGROUND_IMAGE)@2x.png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n+\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 72 -p 72 -o $@\n+$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE).png $(OSX_BACKGROUND_IMAGE)@2x.png\n+\ttiffutil -cathidpicheck $^ -out $@\n+\n+deploydir: $(OSX_DMG)\n+else\n+APP_DIST_DIR=$(top_builddir)/dist\n+APP_DIST_EXTRAS=$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE) $(APP_DIST_DIR)/.DS_Store $(APP_DIST_DIR)/Applications\n+\n+$(APP_DIST_DIR)/Applications:\n+\t@rm -f $@\n+\t@cd $(@D); $(LN_S) /Applications $(@F)\n+\n+$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n+\n+$(OSX_DMG): $(APP_DIST_EXTRAS)\n+\t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n+\n+dpi%.$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n+\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d $* -p $* | $(IMAGEMAGICK_CONVERT) - $@\n+OSX_BACKGROUND_IMAGE_DPIFILES := $(foreach dpi,$(OSX_BACKGROUND_IMAGE_DPIS),dpi$(dpi).$(OSX_BACKGROUND_IMAGE))\n+$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIFILES)\n+\t$(MKDIR_P) $(@D)\n+\t$(TIFFCP) -c none $(OSX_BACKGROUND_IMAGE_DPIFILES) $@\n+\n+$(APP_DIST_DIR)/.DS_Store: $(OSX_DSSTORE_GEN)\n+\t$(PYTHON) $< \"$@\" \"$(OSX_VOLNAME)\"\n+\n+$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n+\tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n+\n+deploydir: $(APP_DIST_EXTRAS)\n+endif\n+\n+if TARGET_DARWIN\n+appbundle: $(OSX_APP_BUILT)\n+deploy: $(OSX_DMG)\n+endif\n+if TARGET_WINDOWS\n+deploy: $(BITCOIN_WIN_INSTALLER)\n+endif\n+\n+$(BITCOIN_QT_BIN): FORCE\n+\t$(MAKE) -C src qt/$(@F)\n+\n+$(BITCOIND_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n+$(BITCOIN_CLI_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n+$(BITCOIN_TX_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n+$(BITCOIN_WALLET_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n+if USE_LCOV\n+LCOV_FILTER_PATTERN = \\\n+\t-p \"/usr/local/\" \\\n+\t-p \"/usr/include/\" \\\n+\t-p \"/usr/lib/\" \\\n+\t-p \"/usr/lib64/\" \\\n+\t-p \"src/leveldb/\" \\\n+\t-p \"src/crc32c/\" \\\n+\t-p \"src/bench/\" \\\n+\t-p \"src/univalue\" \\\n+\t-p \"src/crypto/ctaes\" \\\n+\t-p \"src/secp256k1\" \\\n+\t-p \"depends\"\n+\n+DIR_FUZZ_SEED_CORPUS ?= qa-assets/fuzz_seed_corpus\n+\n+$(COV_TOOL_WRAPPER):\n+\t@echo 'exec $(COV_TOOL) \"$$@\"' > $(COV_TOOL_WRAPPER)\n+\t@chmod +x $(COV_TOOL_WRAPPER)\n+\n+baseline.info: $(COV_TOOL_WRAPPER)\n+\t$(LCOV) -c -i -d $(abs_builddir)/src -o $@\n+\n+baseline_filtered.info: baseline.info\n+\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n+\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n+\n+fuzz.info: baseline_filtered.info\n+\t@TIMEOUT=15 test/fuzz/test_runner.py $(DIR_FUZZ_SEED_CORPUS) -l DEBUG\n+\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src --t fuzz-tests -o $@\n+\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n+\n+fuzz_filtered.info: fuzz.info\n+\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n+\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n+\n+test_bitcoin.info: baseline_filtered.info\n+\t$(MAKE) -C src/ check\n+\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src -t test_bitcoin -o $@\n+\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n+\n+test_bitcoin_filtered.info: test_bitcoin.info\n+\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n+\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n+\n+functional_test.info: test_bitcoin_filtered.info\n+\t@TIMEOUT=15 test/functional/test_runner.py $(EXTENDED_FUNCTIONAL_TESTS)\n+\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src --t functional-tests -o $@\n+\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n+\n+functional_test_filtered.info: functional_test.info\n+\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n+\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n+\n+fuzz_coverage.info: fuzz_filtered.info\n+\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a fuzz_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+\n+test_bitcoin_coverage.info: baseline_filtered.info test_bitcoin_filtered.info\n+\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n+\n+total_coverage.info: test_bitcoin_filtered.info functional_test_filtered.info\n+\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -a functional_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+\n+fuzz.coverage/.dirstamp: fuzz_coverage.info\n+\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n+\t@touch $@\n+\n+test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n+\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n+\t@touch $@\n+\n+total.coverage/.dirstamp: total_coverage.info\n+\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n+\t@touch $@\n+\n+cov_fuzz: fuzz.coverage/.dirstamp\n+\n+cov: test_bitcoin.coverage/.dirstamp total.coverage/.dirstamp\n+\n+endif\n+\n+dist_noinst_SCRIPTS = autogen.sh\n+\n+EXTRA_DIST = $(DIST_SHARE) $(DIST_CONTRIB) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n+\n+EXTRA_DIST += \\\n+    test/functional \\\n+    test/fuzz\n+\n+EXTRA_DIST += \\\n+    test/util/bitcoin-util-test.py \\\n+    test/util/data/bitcoin-util-test.json \\\n+    test/util/data/blanktxv1.hex \\\n+    test/util/data/blanktxv1.json \\\n+    test/util/data/blanktxv2.hex \\\n+    test/util/data/blanktxv2.json \\\n+    test/util/data/tt-delin1-out.hex \\\n+    test/util/data/tt-delin1-out.json \\\n+    test/util/data/tt-delout1-out.hex \\\n+    test/util/data/tt-delout1-out.json \\\n+    test/util/data/tt-locktime317000-out.hex \\\n+    test/util/data/tt-locktime317000-out.json \\\n+    test/util/data/tx394b54bb.hex \\\n+    test/util/data/txcreate1.hex \\\n+    test/util/data/txcreate1.json \\\n+    test/util/data/txcreate2.hex \\\n+    test/util/data/txcreate2.json \\\n+    test/util/data/txcreatedata1.hex \\\n+    test/util/data/txcreatedata1.json \\\n+    test/util/data/txcreatedata2.hex \\\n+    test/util/data/txcreatedata2.json \\\n+    test/util/data/txcreatedata_seq0.hex \\\n+    test/util/data/txcreatedata_seq0.json \\\n+    test/util/data/txcreatedata_seq1.hex \\\n+    test/util/data/txcreatedata_seq1.json \\\n+    test/util/data/txcreatemultisig1.hex \\\n+    test/util/data/txcreatemultisig1.json \\\n+    test/util/data/txcreatemultisig2.hex \\\n+    test/util/data/txcreatemultisig2.json \\\n+    test/util/data/txcreatemultisig3.hex \\\n+    test/util/data/txcreatemultisig3.json \\\n+    test/util/data/txcreatemultisig4.hex \\\n+    test/util/data/txcreatemultisig4.json \\\n+    test/util/data/txcreatemultisig5.json \\\n+    test/util/data/txcreateoutpubkey1.hex \\\n+    test/util/data/txcreateoutpubkey1.json \\\n+    test/util/data/txcreateoutpubkey2.hex \\\n+    test/util/data/txcreateoutpubkey2.json \\\n+    test/util/data/txcreateoutpubkey3.hex \\\n+    test/util/data/txcreateoutpubkey3.json \\\n+    test/util/data/txcreatescript1.hex \\\n+    test/util/data/txcreatescript1.json \\\n+    test/util/data/txcreatescript2.hex \\\n+    test/util/data/txcreatescript2.json \\\n+    test/util/data/txcreatescript3.hex \\\n+    test/util/data/txcreatescript3.json \\\n+    test/util/data/txcreatescript4.hex \\\n+    test/util/data/txcreatescript4.json \\\n+    test/util/data/txcreatescript5.hex \\\n+    test/util/data/txcreatescript6.hex \\\n+    test/util/data/txcreatesignv1.hex \\\n+    test/util/data/txcreatesignv1.json \\\n+    test/util/data/txcreatesignv2.hex \\\n+    test/util/rpcauth-test.py\n+\n+CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n+\n+.INTERMEDIATE: $(COVERAGE_INFO)\n+\n+DISTCHECK_CONFIGURE_FLAGS = --enable-man\n+\n+doc/doxygen/.stamp: doc/Doxyfile FORCE\n+\t$(MKDIR_P) $(@D)\n+\t$(DOXYGEN) $^\n+\t$(AM_V_at) touch $@\n+\n+if HAVE_DOXYGEN\n+docs: doc/doxygen/.stamp\n+else\n+docs:\n+\t@echo \"error: doxygen not found\"\n+endif\n+\n+clean-docs:\n+\trm -rf doc/doxygen\n+\n+clean-local: clean-docs\n+\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ fuzz.coverage/ test/tmp/ cache/ $(OSX_APP)\n+\trm -rf test/functional/__pycache__ test/functional/test_framework/__pycache__ test/cache share/rpcauth/__pycache__\n+\trm -rf osx_volname dist/ dpi36.background.tiff dpi72.background.tiff\n+\n+test-security-check:\n+if TARGET_DARWIN\n+\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_MACHO\n+endif\n+if TARGET_WINDOWS\n+\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_PE\n+endif\n+if TARGET_LINUX\n+\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_ELF\n+endif"
      },
      {
        "sha": "a41ef5cd1a2bbd75a8f0399bbaba0be1151aea30",
        "filename": "README.md",
        "status": "added",
        "additions": 95,
        "deletions": 0,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,95 @@\n+Satoshi Bitcoin 2 0 Core integration/staging tree\n+=====================================\n+\n+https://bitcoincore.org\n+\n+What is Satoshi Bitcoin?\n+----------------\n+\n+Satoshi Bitcoin is an experimental digital currency that enables instant payments to\n+anyone, anywhere in the world. Satoshi Bitcoin uses peer-to-peer technology to operate\n+with no central authority: managing transactions and issuing money are carried\n+out collectively by the network. Satoshi Bitcoin Core is the name of open source\n+software which enables the use of this currency.\n+\n+<<<<<<< HEAD\n+For more information, as well as an immediately usable, binary version of\n+the Bitcoin Core software, see https://bitcoincore.org/en/download/, or read the\n+=======\n+For more information, as well as an immediately useable, binary version of\n+the Satoshi Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n+>>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n+[original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n+\n+License\n+-------\n+\n+Satoshi Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n+information or see https://opensource.org/licenses/MIT.\n+\n+Development Process\n+-------------------\n+\n+The `master` branch is regularly built (see `doc/build-*.md` for instructions) and tested, but it is not guaranteed to be\n+completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n+<<<<<<< HEAD\n+regularly from release branches to indicate new official, stable release versions of Bitcoin Core.\n+=======\n+regularly to indicate new official, stable release versions of Satoshi Bitcoin Core.\n+\n+The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n+>>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n+\n+The https://github.com/bitcoin-core/gui repository is used exclusively for the\n+development of the GUI. Its master branch is identical in all monotree\n+repositories. Release branches and tags do not exist, so please do not fork\n+that repository unless it is for development reasons.\n+\n+The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md)\n+and useful hints for developers can be found in [doc/developer-notes.md](doc/developer-notes.md).\n+\n+Testing\n+-------\n+\n+Testing and code review is the bottleneck for development; we get more pull\n+requests than we can review and test on short notice. Please be patient and help out by testing\n+other people's pull requests, and remember this is a security-critical project where any mistake might cost people\n+lots of money.\n+\n+### Automated Testing\n+\n+Developers are strongly encouraged to write [unit tests](src/test/README.md) for new code, and to\n+submit new unit tests for old code. Unit tests can be compiled and run\n+(assuming they weren't disabled in configure) with: `make check`. Further details on running\n+and extending unit tests can be found in [/src/test/README.md](/src/test/README.md).\n+\n+There are also [regression and integration tests](/test), written\n+in Python, that are run automatically on the build server.\n+These tests can be run (if the [test dependencies](/test) are installed) with: `test/functional/test_runner.py`\n+\n+The Travis CI system makes sure that every pull request is built for Windows, Linux, and macOS, and that unit/sanity tests are run automatically.\n+\n+### Manual Quality Assurance (QA) Testing\n+\n+Changes should be tested by somebody other than the developer who wrote the\n+code. This is especially important for large or high-risk changes. It is useful\n+to add a test plan to the pull request description if testing the changes is\n+not straightforward.\n+\n+Translations\n+------------\n+\n+Changes to translations as well as new translations can be submitted to\n+<<<<<<< HEAD\n+[Bitcoin Core's Transifex page](https://www.transifex.com/bitcoin/bitcoin/).\n+=======\n+[Satoshi Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n+>>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n+\n+Translations are periodically pulled from Transifex and merged into the git repository. See the\n+[translation process](doc/translation_process.md) for details on how this works.\n+\n+**Important**: We do not accept translation changes as GitHub pull requests because the next\n+pull from Transifex would automatically overwrite them again.\n+\n+Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators)."
      },
      {
        "sha": "7ed96c7cea392323b4b50245087794f5cc7810f7",
        "filename": "SECURITY.md_",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/SECURITY.md_",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/SECURITY.md_",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/SECURITY.md_?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,20 @@\n+# Security Policy\n+\n+## Supported Versions\n+\n+See our website for versions of Bitcoin Core that are currently supported with\n+security updates: https://bitcoincore.org/en/lifecycle/#schedule\n+\n+## Reporting a Vulnerability\n+\n+To report security issues send an email to security@bitcoincore.org (not for support).\n+\n+The following keys may be used to communicate sensitive information to developers:\n+\n+| Name | Fingerprint |\n+|------|-------------|\n+| Wladimir van der Laan | 71A3 B167 3540 5025 D447  E8F2 7481 0B01 2346 C9A6 |\n+| Jonas Schnelli | 32EE 5C4C 3FA1 5CCA DB46  ABE5 29D4 BCB6 416F 53EC |\n+| Pieter Wuille | 133E AC17 9436 F14A 5CF1  B794 860F EB80 4E66 9320 |\n+\n+You can import a key by running the following command with that individual\u2019s fingerprint: `gpg --recv-keys \"<fingerprint>\"` Ensure that you put quotes around fingerprints containing spaces."
      },
      {
        "sha": "de16260b563279aea0ae038ecd4250964e8bd540",
        "filename": "autogen.sh",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,16 @@\n+#!/bin/sh\n+# Copyright (c) 2013-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+set -e\n+srcdir=\"$(dirname \"$0\")\"\n+cd \"$srcdir\"\n+if [ -z \"${LIBTOOLIZE}\" ] && GLIBTOOLIZE=\"$(command -v glibtoolize)\"; then\n+  LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n+  export LIBTOOLIZE\n+fi\n+command -v autoreconf >/dev/null || \\\n+  (echo \"configuration failed, please install autoconf first\" && exit 1)\n+autoreconf --install --force --warnings=all"
      },
      {
        "sha": "2ae33f71402aaf6a4c70212f3493354ecfb01ec8",
        "filename": "build-aux/m4/ax_boost_base.m4",
        "status": "added",
        "additions": 303,
        "deletions": 0,
        "changes": 303,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_base.m4?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,303 @@\n+# ===========================================================================\n+#      https://www.gnu.org/software/autoconf-archive/ax_boost_base.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_BASE([MINIMUM-VERSION], [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n+#\n+# DESCRIPTION\n+#\n+#   Test for the Boost C++ libraries of a particular version (or newer)\n+#\n+#   If no path to the installed boost library is given the macro searchs\n+#   under /usr, /usr/local, /opt and /opt/local and evaluates the\n+#   $BOOST_ROOT environment variable. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_CPPFLAGS) / AC_SUBST(BOOST_LDFLAGS)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Peter Adolphs\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 48\n+\n+# example boost program (need to pass version)\n+m4_define([_AX_BOOST_BASE_PROGRAM],\n+          [AC_LANG_PROGRAM([[\n+#include <boost/version.hpp>\n+]],[[\n+(void) ((void)sizeof(char[1 - 2*!!((BOOST_VERSION) < ($1))]));\n+]])])\n+\n+AC_DEFUN([AX_BOOST_BASE],\n+[\n+AC_ARG_WITH([boost],\n+  [AS_HELP_STRING([--with-boost@<:@=ARG@:>@],\n+    [use Boost library from a standard location (ARG=yes),\n+     from the specified location (ARG=<path>),\n+     or disable it (ARG=no)\n+     @<:@ARG=yes@:>@ ])],\n+    [\n+     AS_CASE([$withval],\n+       [no],[want_boost=\"no\";_AX_BOOST_BASE_boost_path=\"\"],\n+       [yes],[want_boost=\"yes\";_AX_BOOST_BASE_boost_path=\"\"],\n+       [want_boost=\"yes\";_AX_BOOST_BASE_boost_path=\"$withval\"])\n+    ],\n+    [want_boost=\"yes\"])\n+\n+\n+AC_ARG_WITH([boost-libdir],\n+  [AS_HELP_STRING([--with-boost-libdir=LIB_DIR],\n+    [Force given directory for boost libraries.\n+     Note that this will override library path detection,\n+     so use this parameter only if default library detection fails\n+     and you know exactly where your boost libraries are located.])],\n+  [\n+   AS_IF([test -d \"$withval\"],\n+         [_AX_BOOST_BASE_boost_lib_path=\"$withval\"],\n+    [AC_MSG_ERROR([--with-boost-libdir expected directory name])])\n+  ],\n+  [_AX_BOOST_BASE_boost_lib_path=\"\"])\n+\n+BOOST_LDFLAGS=\"\"\n+BOOST_CPPFLAGS=\"\"\n+AS_IF([test \"x$want_boost\" = \"xyes\"],\n+      [_AX_BOOST_BASE_RUNDETECT([$1],[$2],[$3])])\n+AC_SUBST(BOOST_CPPFLAGS)\n+AC_SUBST(BOOST_LDFLAGS)\n+])\n+\n+\n+# convert a version string in $2 to numeric and affect to polymorphic var $1\n+AC_DEFUN([_AX_BOOST_BASE_TONUMERICVERSION],[\n+  AS_IF([test \"x$2\" = \"x\"],[_AX_BOOST_BASE_TONUMERICVERSION_req=\"1.20.0\"],[_AX_BOOST_BASE_TONUMERICVERSION_req=\"$2\"])\n+  _AX_BOOST_BASE_TONUMERICVERSION_req_shorten=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n+  _AX_BOOST_BASE_TONUMERICVERSION_req_major=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '\\([[0-9]]*\\)'`\n+  AS_IF([test \"x$_AX_BOOST_BASE_TONUMERICVERSION_req_major\" = \"x\"],\n+        [AC_MSG_ERROR([You should at least specify libboost major version])])\n+  _AX_BOOST_BASE_TONUMERICVERSION_req_minor=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '[[0-9]]*\\.\\([[0-9]]*\\)'`\n+  AS_IF([test \"x$_AX_BOOST_BASE_TONUMERICVERSION_req_minor\" = \"x\"],\n+        [_AX_BOOST_BASE_TONUMERICVERSION_req_minor=\"0\"])\n+  _AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '[[0-9]]*\\.[[0-9]]*\\.\\([[0-9]]*\\)'`\n+  AS_IF([test \"X$_AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor\" = \"X\"],\n+        [_AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor=\"0\"])\n+  _AX_BOOST_BASE_TONUMERICVERSION_RET=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req_major \\* 100000 \\+  $_AX_BOOST_BASE_TONUMERICVERSION_req_minor \\* 100 \\+ $_AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor`\n+  AS_VAR_SET($1,$_AX_BOOST_BASE_TONUMERICVERSION_RET)\n+])\n+\n+dnl Run the detection of boost should be run only if $want_boost\n+AC_DEFUN([_AX_BOOST_BASE_RUNDETECT],[\n+    _AX_BOOST_BASE_TONUMERICVERSION(WANT_BOOST_VERSION,[$1])\n+    succeeded=no\n+\n+\n+    AC_REQUIRE([AC_CANONICAL_HOST])\n+    dnl On 64-bit systems check for system libraries in both lib64 and lib.\n+    dnl The former is specified by FHS, but e.g. Debian does not adhere to\n+    dnl this (as it rises problems for generic multi-arch support).\n+    dnl The last entry in the list is chosen by default when no libraries\n+    dnl are found, e.g. when only header-only libraries are installed!\n+    AS_CASE([${host_cpu}],\n+      [x86_64],[libsubdirs=\"lib64 libx32 lib lib64\"],\n+      [mips*64*],[libsubdirs=\"lib64 lib32 lib lib64\"],\n+      [ppc64|powerpc64|s390x|sparc64|aarch64|ppc64le|powerpc64le|riscv64],[libsubdirs=\"lib64 lib lib64\"],\n+      [libsubdirs=\"lib\"]\n+    )\n+\n+    dnl allow for real multi-arch paths e.g. /usr/lib/x86_64-linux-gnu. Give\n+    dnl them priority over the other paths since, if libs are found there, they\n+    dnl are almost assuredly the ones desired.\n+    AS_CASE([${host_cpu}],\n+      [i?86],[multiarch_libsubdir=\"lib/i386-${host_os}\"],\n+      [armv7l],[multiarch_libsubdir=\"lib/arm-${host_os}\"],\n+      [multiarch_libsubdir=\"lib/${host_cpu}-${host_os}\"]\n+    )\n+\n+    dnl first we check the system location for boost libraries\n+    dnl this location ist chosen if boost libraries are installed with the --layout=system option\n+    dnl or if you install boost with RPM\n+    AS_IF([test \"x$_AX_BOOST_BASE_boost_path\" != \"x\"],[\n+        AC_MSG_CHECKING([for boostlib >= $1 ($WANT_BOOST_VERSION) includes in \"$_AX_BOOST_BASE_boost_path/include\"])\n+         AS_IF([test -d \"$_AX_BOOST_BASE_boost_path/include\" && test -r \"$_AX_BOOST_BASE_boost_path/include\"],[\n+           AC_MSG_RESULT([yes])\n+           BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path/include\"\n+           for _AX_BOOST_BASE_boost_path_tmp in $multiarch_libsubdir $libsubdirs; do\n+                AC_MSG_CHECKING([for boostlib >= $1 ($WANT_BOOST_VERSION) lib path in \"$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\"])\n+                AS_IF([test -d \"$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\" && test -r \"$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\" ],[\n+                        AC_MSG_RESULT([yes])\n+                        BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\";\n+                        break;\n+                ],\n+      [AC_MSG_RESULT([no])])\n+           done],[\n+      AC_MSG_RESULT([no])])\n+    ],[\n+        if test X\"$cross_compiling\" = Xyes; then\n+            search_libsubdirs=$multiarch_libsubdir\n+        else\n+            search_libsubdirs=\"$multiarch_libsubdir $libsubdirs\"\n+        fi\n+        for _AX_BOOST_BASE_boost_path_tmp in /usr /usr/local /opt /opt/local ; do\n+            if test -d \"$_AX_BOOST_BASE_boost_path_tmp/include/boost\" && test -r \"$_AX_BOOST_BASE_boost_path_tmp/include/boost\" ; then\n+                for libsubdir in $search_libsubdirs ; do\n+                    if ls \"$_AX_BOOST_BASE_boost_path_tmp/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                done\n+                BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_path_tmp/$libsubdir\"\n+                BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path_tmp/include\"\n+                break;\n+            fi\n+        done\n+    ])\n+\n+    dnl overwrite ld flags if we have required special directory with\n+    dnl --with-boost-libdir parameter\n+    AS_IF([test \"x$_AX_BOOST_BASE_boost_lib_path\" != \"x\"],\n+          [BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_lib_path\"])\n+\n+    AC_MSG_CHECKING([for boostlib >= $1 ($WANT_BOOST_VERSION)])\n+    CPPFLAGS_SAVED=\"$CPPFLAGS\"\n+    CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+    export CPPFLAGS\n+\n+    LDFLAGS_SAVED=\"$LDFLAGS\"\n+    LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+    export LDFLAGS\n+\n+    AC_REQUIRE([AC_PROG_CXX])\n+    AC_LANG_PUSH(C++)\n+        AC_COMPILE_IFELSE([_AX_BOOST_BASE_PROGRAM($WANT_BOOST_VERSION)],[\n+        AC_MSG_RESULT(yes)\n+    succeeded=yes\n+    found_system=yes\n+        ],[\n+        ])\n+    AC_LANG_POP([C++])\n+\n+\n+\n+    dnl if we found no boost with system layout we search for boost libraries\n+    dnl built and installed without the --layout=system option or for a staged(not installed) version\n+    if test \"x$succeeded\" != \"xyes\" ; then\n+        CPPFLAGS=\"$CPPFLAGS_SAVED\"\n+        LDFLAGS=\"$LDFLAGS_SAVED\"\n+        BOOST_CPPFLAGS=\n+        if test -z \"$_AX_BOOST_BASE_boost_lib_path\" ; then\n+            BOOST_LDFLAGS=\n+        fi\n+        _version=0\n+        if test -n \"$_AX_BOOST_BASE_boost_path\" ; then\n+            if test -d \"$_AX_BOOST_BASE_boost_path\" && test -r \"$_AX_BOOST_BASE_boost_path\"; then\n+                for i in `ls -d $_AX_BOOST_BASE_boost_path/include/boost-* 2>/dev/null`; do\n+                    _version_tmp=`echo $i | sed \"s#$_AX_BOOST_BASE_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n+                    V_CHECK=`expr $_version_tmp \\> $_version`\n+                    if test \"x$V_CHECK\" = \"x1\" ; then\n+                        _version=$_version_tmp\n+                    fi\n+                    VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n+                    BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path/include/boost-$VERSION_UNDERSCORE\"\n+                done\n+                dnl if nothing found search for layout used in Windows distributions\n+                if test -z \"$BOOST_CPPFLAGS\"; then\n+                    if test -d \"$_AX_BOOST_BASE_boost_path/boost\" && test -r \"$_AX_BOOST_BASE_boost_path/boost\"; then\n+                        BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path\"\n+                    fi\n+                fi\n+                dnl if we found something and BOOST_LDFLAGS was unset before\n+                dnl (because \"$_AX_BOOST_BASE_boost_lib_path\" = \"\"), set it here.\n+                if test -n \"$BOOST_CPPFLAGS\" && test -z \"$BOOST_LDFLAGS\"; then\n+                    for libsubdir in $libsubdirs ; do\n+                        if ls \"$_AX_BOOST_BASE_boost_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                    done\n+                    BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_path/$libsubdir\"\n+                fi\n+            fi\n+        else\n+            if test \"x$cross_compiling\" != \"xyes\" ; then\n+                for _AX_BOOST_BASE_boost_path in /usr /usr/local /opt /opt/local ; do\n+                    if test -d \"$_AX_BOOST_BASE_boost_path\" && test -r \"$_AX_BOOST_BASE_boost_path\" ; then\n+                        for i in `ls -d $_AX_BOOST_BASE_boost_path/include/boost-* 2>/dev/null`; do\n+                            _version_tmp=`echo $i | sed \"s#$_AX_BOOST_BASE_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n+                            V_CHECK=`expr $_version_tmp \\> $_version`\n+                            if test \"x$V_CHECK\" = \"x1\" ; then\n+                                _version=$_version_tmp\n+                                best_path=$_AX_BOOST_BASE_boost_path\n+                            fi\n+                        done\n+                    fi\n+                done\n+\n+                VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n+                BOOST_CPPFLAGS=\"-I$best_path/include/boost-$VERSION_UNDERSCORE\"\n+                if test -z \"$_AX_BOOST_BASE_boost_lib_path\" ; then\n+                    for libsubdir in $libsubdirs ; do\n+                        if ls \"$best_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                    done\n+                    BOOST_LDFLAGS=\"-L$best_path/$libsubdir\"\n+                fi\n+            fi\n+\n+            if test -n \"$BOOST_ROOT\" ; then\n+                for libsubdir in $libsubdirs ; do\n+                    if ls \"$BOOST_ROOT/stage/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                done\n+                if test -d \"$BOOST_ROOT\" && test -r \"$BOOST_ROOT\" && test -d \"$BOOST_ROOT/stage/$libsubdir\" && test -r \"$BOOST_ROOT/stage/$libsubdir\"; then\n+                    version_dir=`expr //$BOOST_ROOT : '.*/\\(.*\\)'`\n+                    stage_version=`echo $version_dir | sed 's/boost_//' | sed 's/_/./g'`\n+                        stage_version_shorten=`expr $stage_version : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n+                    V_CHECK=`expr $stage_version_shorten \\>\\= $_version`\n+                    if test \"x$V_CHECK\" = \"x1\" && test -z \"$_AX_BOOST_BASE_boost_lib_path\" ; then\n+                        AC_MSG_NOTICE(We will use a staged boost library from $BOOST_ROOT)\n+                        BOOST_CPPFLAGS=\"-I$BOOST_ROOT\"\n+                        BOOST_LDFLAGS=\"-L$BOOST_ROOT/stage/$libsubdir\"\n+                    fi\n+                fi\n+            fi\n+        fi\n+\n+        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+        export CPPFLAGS\n+        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+        export LDFLAGS\n+\n+        AC_LANG_PUSH(C++)\n+            AC_COMPILE_IFELSE([_AX_BOOST_BASE_PROGRAM($WANT_BOOST_VERSION)],[\n+            AC_MSG_RESULT(yes)\n+        succeeded=yes\n+        found_system=yes\n+            ],[\n+            ])\n+        AC_LANG_POP([C++])\n+    fi\n+\n+    if test \"x$succeeded\" != \"xyes\" ; then\n+        if test \"x$_version\" = \"x0\" ; then\n+            AC_MSG_NOTICE([[We could not detect the boost libraries (version $1 or higher). If you have a staged boost library (still not installed) please specify \\$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])\n+        else\n+            AC_MSG_NOTICE([Your boost libraries seems to old (version $_version).])\n+        fi\n+        # execute ACTION-IF-NOT-FOUND (if present):\n+        ifelse([$3], , :, [$3])\n+    else\n+        AC_DEFINE(HAVE_BOOST,,[define if the Boost library is available])\n+        # execute ACTION-IF-FOUND (if present):\n+        ifelse([$2], , :, [$2])\n+    fi\n+\n+    CPPFLAGS=\"$CPPFLAGS_SAVED\"\n+    LDFLAGS=\"$LDFLAGS_SAVED\"\n+\n+])"
      },
      {
        "sha": "12f7bc5e2ebc18f70537f3d271802e107bfacdad",
        "filename": "build-aux/m4/ax_boost_filesystem.m4",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_boost_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_boost_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_filesystem.m4?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,118 @@\n+# ===========================================================================\n+#   https://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_FILESYSTEM\n+#\n+# DESCRIPTION\n+#\n+#   Test for Filesystem library from the Boost C++ libraries. The macro\n+#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n+#   available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_FILESYSTEM_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_FILESYSTEM\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Michael Tindal\n+#   Copyright (c) 2009 Roman Rybalko <libtorrent@romanr.info>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 28\n+\n+AC_DEFUN([AX_BOOST_FILESYSTEM],\n+[\n+\tAC_ARG_WITH([boost-filesystem],\n+\tAS_HELP_STRING([--with-boost-filesystem@<:@=special-lib@:>@],\n+                   [use the Filesystem library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-filesystem=boost_filesystem-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_filesystem_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_filesystem_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+\t\tLIBS_SAVED=$LIBS\n+\t\tLIBS=\"$LIBS $BOOST_SYSTEM_LIB\"\n+\t\texport LIBS\n+\n+        AC_CACHE_CHECK(whether the Boost::Filesystem library is available,\n+\t\t\t\t\t   ax_cv_boost_filesystem,\n+        [AC_LANG_PUSH([C++])\n+         AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/filesystem/path.hpp>]],\n+                                   [[using namespace boost::filesystem;\n+                                   path my_path( \"foo/bar/data.txt\" );\n+                                   return 0;]])],\n+\t\t\t\t\t       ax_cv_boost_filesystem=yes, ax_cv_boost_filesystem=no)\n+         AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_filesystem\" = \"xyes\"; then\n+\t\t\tAC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+            if test \"x$ax_boost_user_filesystem_lib\" = \"x\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/libboost_filesystem* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                 [link_filesystem=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_filesystem\" != \"xyes\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/boost_filesystem* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                 [link_filesystem=\"no\"])\n+\t\t\t\tdone\n+\t\t    fi\n+            else\n+               for ax_lib in $ax_boost_user_filesystem_lib boost_filesystem-$ax_boost_user_filesystem_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                   [link_filesystem=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the Boost::Filesystem library!)\n+            fi\n+\t\t\tif test \"x$link_filesystem\" != \"xyes\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\t\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\t\tLIBS=\"$LIBS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "5d20e67464fcde6ee00f2582607e59f0759115b8",
        "filename": "build-aux/m4/ax_boost_process.m4",
        "status": "added",
        "additions": 121,
        "deletions": 0,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_boost_process.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_boost_process.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_process.m4?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,121 @@\n+# ===========================================================================\n+#     https://www.gnu.org/software/autoconf-archive/ax_boost_process.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_PROCESS\n+#\n+# DESCRIPTION\n+#\n+#   Test for Process library from the Boost C++ libraries. The macro\n+#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n+#   available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_PROCESS_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_PROCESS\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2008 Michael Tindal\n+#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 2\n+\n+AC_DEFUN([AX_BOOST_PROCESS],\n+[\n+\tAC_ARG_WITH([boost-process],\n+\tAS_HELP_STRING([--with-boost-process@<:@=special-lib@:>@],\n+                   [use the Process library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-process=boost_process-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost_process=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost_process=\"yes\"\n+            ax_boost_user_process_lib=\"\"\n+        else\n+\t\t    want_boost_process=\"yes\"\n+\t\tax_boost_user_process_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost_process=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost_process\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Process library is available,\n+\t\t\t\t\t   ax_cv_boost_process,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\t\t\t CXXFLAGS=\n+\n+             AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/process.hpp>]],\n+                [[boost::process::child* child = new boost::process::child; delete child;]])],\n+                ax_cv_boost_process=yes, ax_cv_boost_process=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_process\" = \"xyes\"; then\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_PROCESS,,[define if the Boost::Process library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            if test \"x$ax_boost_user_process_lib\" = \"x\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/libboost_process* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_PROCESS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROCESS_LIB) link_process=\"yes\"; break],\n+                                 [link_process=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_process\" != \"xyes\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/boost_process* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_PROCESS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROCESS_LIB) link_process=\"yes\"; break],\n+                                 [link_process=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_process_lib boost_process-$ax_boost_user_process_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_PROCESS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROCESS_LIB) link_process=\"yes\"; break],\n+                                   [link_process=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the Boost::Process library!)\n+            fi\n+\t\t\tif test \"x$link_process\" = \"xno\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "323e2a676a8e0428008dd4563416ce141e278f33",
        "filename": "build-aux/m4/ax_boost_system.m4",
        "status": "added",
        "additions": 121,
        "deletions": 0,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_system.m4?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,121 @@\n+# ===========================================================================\n+#     https://www.gnu.org/software/autoconf-archive/ax_boost_system.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_SYSTEM\n+#\n+# DESCRIPTION\n+#\n+#   Test for System library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_SYSTEM_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_SYSTEM\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2008 Michael Tindal\n+#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 20\n+\n+AC_DEFUN([AX_BOOST_SYSTEM],\n+[\n+\tAC_ARG_WITH([boost-system],\n+\tAS_HELP_STRING([--with-boost-system@<:@=special-lib@:>@],\n+                   [use the System library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-system=boost_system-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_system_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_system_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::System library is available,\n+\t\t\t\t\t   ax_cv_boost_system,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\t\t\t CXXFLAGS=\n+\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/system/error_code.hpp>]],\n+\t\t\t\t    [[boost::system::error_category *a = 0;]])],\n+                   ax_cv_boost_system=yes, ax_cv_boost_system=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_system\" = \"xyes\"; then\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_SYSTEM,,[define if the Boost::System library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            if test \"x$ax_boost_user_system_lib\" = \"x\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/libboost_system* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                 [link_system=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_system\" != \"xyes\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/boost_system* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                 [link_system=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_system_lib boost_system-$ax_boost_user_system_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                   [link_system=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the Boost::System library!)\n+            fi\n+\t\t\tif test \"x$link_system\" = \"xno\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "75e80e6e75aa9f6c22387d0dabce11e5fce9526b",
        "filename": "build-aux/m4/ax_boost_thread.m4",
        "status": "added",
        "additions": 187,
        "deletions": 0,
        "changes": 187,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_boost_thread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_boost_thread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_thread.m4?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,187 @@\n+# ===========================================================================\n+#     https://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_THREAD\n+#\n+# DESCRIPTION\n+#\n+#   Test for Thread library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_THREAD_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_THREAD\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Michael Tindal\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 33\n+\n+AC_DEFUN([AX_BOOST_THREAD],\n+[\n+    AC_ARG_WITH([boost-thread],\n+    AS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n+                   [use the Thread library from boost -\n+                    it is possible to specify a certain library for the linker\n+                    e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_thread_lib=\"\"\n+        else\n+            want_boost=\"yes\"\n+            ax_boost_user_thread_lib=\"$withval\"\n+        fi\n+        ],\n+        [want_boost=\"yes\"]\n+    )\n+\n+    if test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+        CPPFLAGS_SAVED=\"$CPPFLAGS\"\n+        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+        export CPPFLAGS\n+\n+        LDFLAGS_SAVED=\"$LDFLAGS\"\n+        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+        export LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Thread library is available,\n+                       ax_cv_boost_thread,\n+        [AC_LANG_PUSH([C++])\n+             CXXFLAGS_SAVE=$CXXFLAGS\n+\n+             case \"x$host_os\" in\n+                 xsolaris )\n+                     CXXFLAGS=\"-pthreads $CXXFLAGS\"\n+                     break;\n+                     ;;\n+                 xmingw32 )\n+                     CXXFLAGS=\"-mthreads $CXXFLAGS\"\n+                     break;\n+                     ;;\n+                 *android* )\n+                     break;\n+                     ;;\n+                 * )\n+                     CXXFLAGS=\"-pthread $CXXFLAGS\"\n+                     break;\n+                     ;;\n+             esac\n+\n+             AC_COMPILE_IFELSE([\n+                 AC_LANG_PROGRAM(\n+                     [[@%:@include <boost/thread/thread.hpp>]],\n+                     [[boost::thread_group thrds;\n+                       return 0;]])],\n+                 ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n+             CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+        ])\n+        if test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n+            case \"x$host_os\" in\n+                xsolaris )\n+                    BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n+                    break;\n+                    ;;\n+                xmingw32 )\n+                    BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n+                    break;\n+                    ;;\n+                *android* )\n+                    break;\n+                    ;;\n+                * )\n+                    BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n+                    break;\n+                    ;;\n+            esac\n+\n+            AC_SUBST(BOOST_CPPFLAGS)\n+\n+            AC_DEFINE(HAVE_BOOST_THREAD,,\n+                      [define if the Boost::Thread library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+            LDFLAGS_SAVE=$LDFLAGS\n+                        case \"x$host_os\" in\n+                          *bsd* )\n+                               LDFLAGS=\"-pthread $LDFLAGS\"\n+                          break;\n+                          ;;\n+                        esac\n+            if test \"x$ax_boost_user_thread_lib\" = \"x\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/libboost_thread* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'`; do\n+                     ax_lib=${libextension}\n+                    AC_CHECK_LIB($ax_lib, exit,\n+                                 [link_thread=\"yes\"; break],\n+                                 [link_thread=\"no\"])\n+                done\n+                if test \"x$link_thread\" != \"xyes\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/boost_thread* 2>/dev/null | sed 's,.*/,,' | sed 's,\\..*,,'`; do\n+                     ax_lib=${libextension}\n+                    AC_CHECK_LIB($ax_lib, exit,\n+                                 [link_thread=\"yes\"; break],\n+                                 [link_thread=\"no\"])\n+                done\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do\n+                      AC_CHECK_LIB($ax_lib, exit,\n+                                   [link_thread=\"yes\"; break],\n+                                   [link_thread=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the Boost::Thread library!)\n+            fi\n+            if test \"x$link_thread\" = \"xno\"; then\n+                AC_MSG_ERROR(Could not link against $ax_lib !)\n+            else\n+                BOOST_THREAD_LIB=\"-l$ax_lib\"\n+                case \"x$host_os\" in\n+                    *bsd* )\n+                        BOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n+                        break;\n+                        ;;\n+                    xsolaris )\n+                        BOOST_THREAD_LIB=\"$BOOST_THREAD_LIB -lpthread\"\n+                        break;\n+                        ;;\n+                    xmingw32 )\n+                        break;\n+                        ;;\n+                    *android* )\n+                        break;\n+                        ;;\n+                    * )\n+                        BOOST_THREAD_LIB=\"$BOOST_THREAD_LIB -lpthread\"\n+                        break;\n+                        ;;\n+                esac\n+                AC_SUBST(BOOST_THREAD_LIB)\n+            fi\n+        fi\n+\n+        CPPFLAGS=\"$CPPFLAGS_SAVED\"\n+        LDFLAGS=\"$LDFLAGS_SAVED\"\n+    fi\n+])"
      },
      {
        "sha": "4cca32fcfd6539b53e0a55c02544342d1d03ae75",
        "filename": "build-aux/m4/ax_boost_unit_test_framework.m4",
        "status": "added",
        "additions": 137,
        "deletions": 0,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_boost_unit_test_framework.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_boost_unit_test_framework.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_unit_test_framework.m4?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,137 @@\n+# =================================================================================\n+#  https://www.gnu.org/software/autoconf-archive/ax_boost_unit_test_framework.html\n+# =================================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_UNIT_TEST_FRAMEWORK\n+#\n+# DESCRIPTION\n+#\n+#   Test for Unit_Test_Framework library from the Boost C++ libraries. The\n+#   macro requires a preceding call to AX_BOOST_BASE. Further documentation\n+#   is available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_UNIT_TEST_FRAMEWORK\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 22\n+\n+AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n+[\n+\tAC_ARG_WITH([boost-unit-test-framework],\n+\tAS_HELP_STRING([--with-boost-unit-test-framework@<:@=special-lib@:>@],\n+                   [use the Unit_Test_Framework library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-unit-test-framework=boost_unit_test_framework-gcc ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_unit_test_framework_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_unit_test_framework_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Unit_Test_Framework library is available,\n+\t\t\t\t\t   ax_cv_boost_unit_test_framework,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/test/unit_test.hpp>]],\n+                                    [[using boost::unit_test::test_suite;\n+\t\t\t\t\t\t\t test_suite* test= BOOST_TEST_SUITE( \"Unit test example 1\" ); if (test == NULL) { return 1; } else { return 0; }]])],\n+                   ax_cv_boost_unit_test_framework=yes, ax_cv_boost_unit_test_framework=no)\n+         AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_unit_test_framework\" = \"xyes\"; then\n+\t\t\tAC_DEFINE(HAVE_BOOST_UNIT_TEST_FRAMEWORK,,[define if the Boost::Unit_Test_Framework library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+            if test \"x$ax_boost_user_unit_test_framework_lib\" = \"x\"; then\n+\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n+                for monitor_library in `ls $BOOSTLIBDIR/libboost_unit_test_framework*.so* $BOOSTLIBDIR/libboost_unit_test_framework*.dylib* $BOOSTLIBDIR/libboost_unit_test_framework*.a* 2>/dev/null` ; do\n+                    if test -r $monitor_library ; then\n+                       libextension=`echo $monitor_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'`\n+                       ax_lib=${libextension}\n+                       link_unit_test_framework=\"yes\"\n+                    else\n+                       link_unit_test_framework=\"no\"\n+                    fi\n+\n+\t\t\t    if test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                      BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n+                      AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+\t\t\t\t\t  break\n+\t\t\t\t    fi\n+                done\n+                if test \"x$link_unit_test_framework\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_unit_test_framework*.dll* $BOOSTLIBDIR/boost_unit_test_framework*.a* 2>/dev/null  | sed 's,.*/,,' | sed -e 's;^\\(boost_unit_test_framework.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB) link_unit_test_framework=\"yes\"; break],\n+                                 [link_unit_test_framework=\"no\"])\n+\t\t\t\tdone\n+                fi\n+            else\n+                link_unit_test_framework=\"no\"\n+\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n+                for ax_lib in boost_unit_test_framework-$ax_boost_user_unit_test_framework_lib $ax_boost_user_unit_test_framework_lib ; do\n+                   if test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                      break;\n+                   fi\n+                   for unittest_library in `ls $BOOSTLIBDIR/lib${ax_lib}.so* $BOOSTLIBDIR/lib${ax_lib}.a* 2>/dev/null` ; do\n+                   if test -r $unittest_library ; then\n+                       libextension=`echo $unittest_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a*$;\\1;'`\n+                       ax_lib=${libextension}\n+                       link_unit_test_framework=\"yes\"\n+                    else\n+                       link_unit_test_framework=\"no\"\n+                    fi\n+\n+\t\t\t\tif test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                        BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n+                        AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+\t\t\t\t\t    break\n+\t\t\t\t    fi\n+                  done\n+               done\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the Boost::Unit_Test_Framework library!)\n+            fi\n+\t\t\tif test \"x$link_unit_test_framework\" != \"xyes\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "ca3639715e7243fa4343eb2e7f3de53927cc9d4a",
        "filename": "build-aux/m4/ax_check_compile_flag.m4",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_check_compile_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_check_compile_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_compile_flag.m4?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,74 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_check_compile_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the current language's compiler\n+#   or gives an error.  (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the current language's default\n+#   flags (e.g. CFLAGS) when the check is done.  The check is thus made with\n+#   the flags: \"CFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to\n+#   force the compiler to issue an error when a bad flag is given.\n+#\n+#   INPUT gives an alternative input source to AC_COMPILE_IFELSE.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 4\n+\n+AC_DEFUN([AX_CHECK_COMPILE_FLAG],\n+[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl\n+AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS\n+  _AC_LANG_PREFIX[]FLAGS=\"$[]_AC_LANG_PREFIX[]FLAGS $4 $1\"\n+  AC_COMPILE_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])\n+AS_VAR_IF(CACHEVAR,yes,\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_COMPILE_FLAGS"
      },
      {
        "sha": "eb01a6ce135eca0fdde834b00c21b12202b09f3d",
        "filename": "build-aux/m4/ax_check_link_flag.m4",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_check_link_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_check_link_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_link_flag.m4?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,74 @@\n+# ===========================================================================\n+#    http://www.gnu.org/software/autoconf-archive/ax_check_link_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the linker or gives an error.\n+#   (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the linker's default flags\n+#   when the check is done.  The check is thus made with the flags: \"LDFLAGS\n+#   EXTRA-FLAGS FLAG\".  This can for example be used to force the linker to\n+#   issue an error when a bad flag is given.\n+#\n+#   INPUT gives an alternative input source to AC_LINK_IFELSE.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{PREPROC,COMPILE}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 4\n+\n+AC_DEFUN([AX_CHECK_LINK_FLAG],\n+[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl\n+AC_CACHE_CHECK([whether the linker accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$LDFLAGS\n+  LDFLAGS=\"$LDFLAGS $4 $1\"\n+  AC_LINK_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  LDFLAGS=$ax_check_save_flags])\n+AS_VAR_IF(CACHEVAR,yes,\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_LINK_FLAGS"
      },
      {
        "sha": "ca1d5ee2b6d1ae107504d4ab433bc5f6fd629f61",
        "filename": "build-aux/m4/ax_check_preproc_flag.m4",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_check_preproc_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_check_preproc_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_preproc_flag.m4?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,74 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_check_preproc_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_PREPROC_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the current language's\n+#   preprocessor or gives an error.  (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the preprocessor's default\n+#   flags when the check is done.  The check is thus made with the flags:\n+#   \"CPPFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to force the\n+#   preprocessor to issue an error when a bad flag is given.\n+#\n+#   INPUT gives an alternative input source to AC_PREPROC_IFELSE.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{COMPILE,LINK}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 4\n+\n+AC_DEFUN([AX_CHECK_PREPROC_FLAG],\n+[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]cppflags_$4_$1])dnl\n+AC_CACHE_CHECK([whether _AC_LANG preprocessor accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$CPPFLAGS\n+  CPPFLAGS=\"$CPPFLAGS $4 $1\"\n+  AC_PREPROC_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  CPPFLAGS=$ax_check_save_flags])\n+AS_VAR_IF(CACHEVAR,yes,\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_PREPROC_FLAGS"
      },
      {
        "sha": "43087b2e6889ec6f8ebd2f8ba77f4a9a716f8ac2",
        "filename": "build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "status": "added",
        "additions": 951,
        "deletions": 0,
        "changes": 951,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_cxx_compile_stdcxx.m4?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,951 @@\n+# ===========================================================================\n+#  https://www.gnu.org/software/autoconf-archive/ax_cxx_compile_stdcxx.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CXX_COMPILE_STDCXX(VERSION, [ext|noext], [mandatory|optional])\n+#\n+# DESCRIPTION\n+#\n+#   Check for baseline language coverage in the compiler for the specified\n+#   version of the C++ standard.  If necessary, add switches to CXX and\n+#   CXXCPP to enable support.  VERSION may be '11' (for the C++11 standard)\n+#   or '14' (for the C++14 standard).\n+#\n+#   The second argument, if specified, indicates whether you insist on an\n+#   extended mode (e.g. -std=gnu++11) or a strict conformance mode (e.g.\n+#   -std=c++11).  If neither is specified, you get whatever works, with\n+#   preference for an extended mode.\n+#\n+#   The third argument, if specified 'mandatory' or if left unspecified,\n+#   indicates that baseline support for the specified C++ standard is\n+#   required and that the macro should error out if no mode with that\n+#   support is found.  If specified 'optional', then configuration proceeds\n+#   regardless, after defining HAVE_CXX${VERSION} if and only if a\n+#   supporting mode is found.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Benjamin Kosnik <bkoz@redhat.com>\n+#   Copyright (c) 2012 Zack Weinberg <zackw@panix.com>\n+#   Copyright (c) 2013 Roy Stogner <roystgnr@ices.utexas.edu>\n+#   Copyright (c) 2014, 2015 Google Inc.; contributed by Alexey Sokolov <sokolov@google.com>\n+#   Copyright (c) 2015 Paul Norman <penorman@mac.com>\n+#   Copyright (c) 2015 Moritz Klammler <moritz@klammler.eu>\n+#   Copyright (c) 2016, 2018 Krzesimir Nowak <qdlacz@gmail.com>\n+#   Copyright (c) 2019 Enji Cooper <yaneurabeya@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved.  This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 11\n+\n+dnl  This macro is based on the code from the AX_CXX_COMPILE_STDCXX_11 macro\n+dnl  (serial version number 13).\n+\n+AC_DEFUN([AX_CXX_COMPILE_STDCXX], [dnl\n+  m4_if([$1], [11], [ax_cxx_compile_alternatives=\"11 0x\"],\n+        [$1], [14], [ax_cxx_compile_alternatives=\"14 1y\"],\n+        [$1], [17], [ax_cxx_compile_alternatives=\"17 1z\"],\n+        [m4_fatal([invalid first argument `$1' to AX_CXX_COMPILE_STDCXX])])dnl\n+  m4_if([$2], [], [],\n+        [$2], [ext], [],\n+        [$2], [noext], [],\n+        [m4_fatal([invalid second argument `$2' to AX_CXX_COMPILE_STDCXX])])dnl\n+  m4_if([$3], [], [ax_cxx_compile_cxx$1_required=true],\n+        [$3], [mandatory], [ax_cxx_compile_cxx$1_required=true],\n+        [$3], [optional], [ax_cxx_compile_cxx$1_required=false],\n+        [m4_fatal([invalid third argument `$3' to AX_CXX_COMPILE_STDCXX])])\n+  AC_LANG_PUSH([C++])dnl\n+  ac_success=no\n+\n+  m4_if([$2], [noext], [], [dnl\n+  if test x$ac_success = xno; then\n+    for alternative in ${ax_cxx_compile_alternatives}; do\n+      switch=\"-std=gnu++${alternative}\"\n+      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n+      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n+                     $cachevar,\n+        [ac_save_CXX=\"$CXX\"\n+         CXX=\"$CXX $switch\"\n+         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n+          [eval $cachevar=yes],\n+          [eval $cachevar=no])\n+         CXX=\"$ac_save_CXX\"])\n+      if eval test x\\$$cachevar = xyes; then\n+        CXX=\"$CXX $switch\"\n+        if test -n \"$CXXCPP\" ; then\n+          CXXCPP=\"$CXXCPP $switch\"\n+        fi\n+        ac_success=yes\n+        break\n+      fi\n+    done\n+  fi])\n+\n+  m4_if([$2], [ext], [], [dnl\n+  if test x$ac_success = xno; then\n+    dnl HP's aCC needs +std=c++11 according to:\n+    dnl http://h21007.www2.hp.com/portal/download/files/unprot/aCxx/PDF_Release_Notes/769149-001.pdf\n+    dnl Cray's crayCC needs \"-h std=c++11\"\n+    for alternative in ${ax_cxx_compile_alternatives}; do\n+      for switch in -std=c++${alternative} +std=c++${alternative} \"-h std=c++${alternative}\"; do\n+        cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n+        AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n+                       $cachevar,\n+          [ac_save_CXX=\"$CXX\"\n+           CXX=\"$CXX $switch\"\n+           AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n+            [eval $cachevar=yes],\n+            [eval $cachevar=no])\n+           CXX=\"$ac_save_CXX\"])\n+        if eval test x\\$$cachevar = xyes; then\n+          CXX=\"$CXX $switch\"\n+          if test -n \"$CXXCPP\" ; then\n+            CXXCPP=\"$CXXCPP $switch\"\n+          fi\n+          ac_success=yes\n+          break\n+        fi\n+      done\n+      if test x$ac_success = xyes; then\n+        break\n+      fi\n+    done\n+  fi])\n+  AC_LANG_POP([C++])\n+  if test x$ax_cxx_compile_cxx$1_required = xtrue; then\n+    if test x$ac_success = xno; then\n+      AC_MSG_ERROR([*** A compiler with support for C++$1 language features is required.])\n+    fi\n+  fi\n+  if test x$ac_success = xno; then\n+    HAVE_CXX$1=0\n+    AC_MSG_NOTICE([No compiler with C++$1 support was found])\n+  else\n+    HAVE_CXX$1=1\n+    AC_DEFINE(HAVE_CXX$1,1,\n+              [define if the compiler supports basic C++$1 syntax])\n+  fi\n+  AC_SUBST(HAVE_CXX$1)\n+])\n+\n+\n+dnl  Test body for checking C++11 support\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_11],\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n+)\n+\n+\n+dnl  Test body for checking C++14 support\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_14],\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_14\n+)\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_17],\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_14\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_17\n+)\n+\n+dnl  Tests for new features in C++11\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_11], [[\n+\n+// If the compiler admits that it is not ready for C++11, why torture it?\n+// Hopefully, this will speed up the test.\n+\n+#ifndef __cplusplus\n+\n+#error \"This is not a C++ compiler\"\n+\n+#elif __cplusplus < 201103L\n+\n+#error \"This is not a C++11 compiler\"\n+\n+#else\n+\n+namespace cxx11\n+{\n+\n+  namespace test_static_assert\n+  {\n+\n+    template <typename T>\n+    struct check\n+    {\n+      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n+    };\n+\n+  }\n+\n+  namespace test_final_override\n+  {\n+\n+    struct Base\n+    {\n+      virtual ~Base() {}\n+      virtual void f() {}\n+    };\n+\n+    struct Derived : public Base\n+    {\n+      virtual ~Derived() override {}\n+      virtual void f() override {}\n+    };\n+\n+  }\n+\n+  namespace test_double_right_angle_brackets\n+  {\n+\n+    template < typename T >\n+    struct check {};\n+\n+    typedef check<void> single_type;\n+    typedef check<check<void>> double_type;\n+    typedef check<check<check<void>>> triple_type;\n+    typedef check<check<check<check<void>>>> quadruple_type;\n+\n+  }\n+\n+  namespace test_decltype\n+  {\n+\n+    int\n+    f()\n+    {\n+      int a = 1;\n+      decltype(a) b = 2;\n+      return a + b;\n+    }\n+\n+  }\n+\n+  namespace test_type_deduction\n+  {\n+\n+    template < typename T1, typename T2 >\n+    struct is_same\n+    {\n+      static const bool value = false;\n+    };\n+\n+    template < typename T >\n+    struct is_same<T, T>\n+    {\n+      static const bool value = true;\n+    };\n+\n+    template < typename T1, typename T2 >\n+    auto\n+    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n+    {\n+      return a1 + a2;\n+    }\n+\n+    int\n+    test(const int c, volatile int v)\n+    {\n+      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n+      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n+      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n+      auto ac = c;\n+      auto av = v;\n+      auto sumi = ac + av + 'x';\n+      auto sumf = ac + av + 1.0;\n+      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n+      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n+      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n+      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n+      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n+      return (sumf > 0.0) ? sumi : add(c, v);\n+    }\n+\n+  }\n+\n+  namespace test_noexcept\n+  {\n+\n+    int f() { return 0; }\n+    int g() noexcept { return 0; }\n+\n+    static_assert(noexcept(f()) == false, \"\");\n+    static_assert(noexcept(g()) == true, \"\");\n+\n+  }\n+\n+  namespace test_constexpr\n+  {\n+\n+    template < typename CharT >\n+    unsigned long constexpr\n+    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n+    {\n+      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n+    }\n+\n+    template < typename CharT >\n+    unsigned long constexpr\n+    strlen_c(const CharT *const s) noexcept\n+    {\n+      return strlen_c_r(s, 0UL);\n+    }\n+\n+    static_assert(strlen_c(\"\") == 0UL, \"\");\n+    static_assert(strlen_c(\"1\") == 1UL, \"\");\n+    static_assert(strlen_c(\"example\") == 7UL, \"\");\n+    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n+\n+  }\n+\n+  namespace test_rvalue_references\n+  {\n+\n+    template < int N >\n+    struct answer\n+    {\n+      static constexpr int value = N;\n+    };\n+\n+    answer<1> f(int&)       { return answer<1>(); }\n+    answer<2> f(const int&) { return answer<2>(); }\n+    answer<3> f(int&&)      { return answer<3>(); }\n+\n+    void\n+    test()\n+    {\n+      int i = 0;\n+      const int c = 0;\n+      static_assert(decltype(f(i))::value == 1, \"\");\n+      static_assert(decltype(f(c))::value == 2, \"\");\n+      static_assert(decltype(f(0))::value == 3, \"\");\n+    }\n+\n+  }\n+\n+  namespace test_uniform_initialization\n+  {\n+\n+    struct test\n+    {\n+      static const int zero {};\n+      static const int one {1};\n+    };\n+\n+    static_assert(test::zero == 0, \"\");\n+    static_assert(test::one == 1, \"\");\n+\n+  }\n+\n+  namespace test_lambdas\n+  {\n+\n+    void\n+    test1()\n+    {\n+      auto lambda1 = [](){};\n+      auto lambda2 = lambda1;\n+      lambda1();\n+      lambda2();\n+    }\n+\n+    int\n+    test2()\n+    {\n+      auto a = [](int i, int j){ return i + j; }(1, 2);\n+      auto b = []() -> int { return '0'; }();\n+      auto c = [=](){ return a + b; }();\n+      auto d = [&](){ return c; }();\n+      auto e = [a, &b](int x) mutable {\n+        const auto identity = [](int y){ return y; };\n+        for (auto i = 0; i < a; ++i)\n+          a += b--;\n+        return x + identity(a + b);\n+      }(0);\n+      return a + b + c + d + e;\n+    }\n+\n+    int\n+    test3()\n+    {\n+      const auto nullary = [](){ return 0; };\n+      const auto unary = [](int x){ return x; };\n+      using nullary_t = decltype(nullary);\n+      using unary_t = decltype(unary);\n+      const auto higher1st = [](nullary_t f){ return f(); };\n+      const auto higher2nd = [unary](nullary_t f1){\n+        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n+      };\n+      return higher1st(nullary) + higher2nd(nullary)(unary);\n+    }\n+\n+  }\n+\n+  namespace test_variadic_templates\n+  {\n+\n+    template <int...>\n+    struct sum;\n+\n+    template <int N0, int... N1toN>\n+    struct sum<N0, N1toN...>\n+    {\n+      static constexpr auto value = N0 + sum<N1toN...>::value;\n+    };\n+\n+    template <>\n+    struct sum<>\n+    {\n+      static constexpr auto value = 0;\n+    };\n+\n+    static_assert(sum<>::value == 0, \"\");\n+    static_assert(sum<1>::value == 1, \"\");\n+    static_assert(sum<23>::value == 23, \"\");\n+    static_assert(sum<1, 2>::value == 3, \"\");\n+    static_assert(sum<5, 5, 11>::value == 21, \"\");\n+    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n+\n+  }\n+\n+  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n+  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n+  // because of this.\n+  namespace test_template_alias_sfinae\n+  {\n+\n+    struct foo {};\n+\n+    template<typename T>\n+    using member = typename T::member_type;\n+\n+    template<typename T>\n+    void func(...) {}\n+\n+    template<typename T>\n+    void func(member<T>*) {}\n+\n+    void test();\n+\n+    void test() { func<foo>(0); }\n+\n+  }\n+\n+}  // namespace cxx11\n+\n+#endif  // __cplusplus >= 201103L\n+\n+]])\n+\n+\n+dnl  Tests for new features in C++14\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_14], [[\n+\n+// If the compiler admits that it is not ready for C++14, why torture it?\n+// Hopefully, this will speed up the test.\n+\n+#ifndef __cplusplus\n+\n+#error \"This is not a C++ compiler\"\n+\n+#elif __cplusplus < 201402L\n+\n+#error \"This is not a C++14 compiler\"\n+\n+#else\n+\n+namespace cxx14\n+{\n+\n+  namespace test_polymorphic_lambdas\n+  {\n+\n+    int\n+    test()\n+    {\n+      const auto lambda = [](auto&&... args){\n+        const auto istiny = [](auto x){\n+          return (sizeof(x) == 1UL) ? 1 : 0;\n+        };\n+        const int aretiny[] = { istiny(args)... };\n+        return aretiny[0];\n+      };\n+      return lambda(1, 1L, 1.0f, '1');\n+    }\n+\n+  }\n+\n+  namespace test_binary_literals\n+  {\n+\n+    constexpr auto ivii = 0b0000000000101010;\n+    static_assert(ivii == 42, \"wrong value\");\n+\n+  }\n+\n+  namespace test_generalized_constexpr\n+  {\n+\n+    template < typename CharT >\n+    constexpr unsigned long\n+    strlen_c(const CharT *const s) noexcept\n+    {\n+      auto length = 0UL;\n+      for (auto p = s; *p; ++p)\n+        ++length;\n+      return length;\n+    }\n+\n+    static_assert(strlen_c(\"\") == 0UL, \"\");\n+    static_assert(strlen_c(\"x\") == 1UL, \"\");\n+    static_assert(strlen_c(\"test\") == 4UL, \"\");\n+    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n+\n+  }\n+\n+  namespace test_lambda_init_capture\n+  {\n+\n+    int\n+    test()\n+    {\n+      auto x = 0;\n+      const auto lambda1 = [a = x](int b){ return a + b; };\n+      const auto lambda2 = [a = lambda1(x)](){ return a; };\n+      return lambda2();\n+    }\n+\n+  }\n+\n+  namespace test_digit_separators\n+  {\n+\n+    constexpr auto ten_million = 100'000'000;\n+    static_assert(ten_million == 100000000, \"\");\n+\n+  }\n+\n+  namespace test_return_type_deduction\n+  {\n+\n+    auto f(int& x) { return x; }\n+    decltype(auto) g(int& x) { return x; }\n+\n+    template < typename T1, typename T2 >\n+    struct is_same\n+    {\n+      static constexpr auto value = false;\n+    };\n+\n+    template < typename T >\n+    struct is_same<T, T>\n+    {\n+      static constexpr auto value = true;\n+    };\n+\n+    int\n+    test()\n+    {\n+      auto x = 0;\n+      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n+      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n+      return x;\n+    }\n+\n+  }\n+\n+}  // namespace cxx14\n+\n+#endif  // __cplusplus >= 201402L\n+\n+]])\n+\n+\n+dnl  Tests for new features in C++17\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_17], [[\n+\n+// If the compiler admits that it is not ready for C++17, why torture it?\n+// Hopefully, this will speed up the test.\n+\n+#ifndef __cplusplus\n+\n+#error \"This is not a C++ compiler\"\n+\n+#elif __cplusplus < 201703L\n+\n+#error \"This is not a C++17 compiler\"\n+\n+#else\n+\n+#include <initializer_list>\n+#include <utility>\n+#include <type_traits>\n+\n+namespace cxx17\n+{\n+\n+  namespace test_constexpr_lambdas\n+  {\n+\n+    constexpr int foo = [](){return 42;}();\n+\n+  }\n+\n+  namespace test::nested_namespace::definitions\n+  {\n+\n+  }\n+\n+  namespace test_fold_expression\n+  {\n+\n+    template<typename... Args>\n+    int multiply(Args... args)\n+    {\n+      return (args * ... * 1);\n+    }\n+\n+    template<typename... Args>\n+    bool all(Args... args)\n+    {\n+      return (args && ...);\n+    }\n+\n+  }\n+\n+  namespace test_extended_static_assert\n+  {\n+\n+    static_assert (true);\n+\n+  }\n+\n+  namespace test_auto_brace_init_list\n+  {\n+\n+    auto foo = {5};\n+    auto bar {5};\n+\n+    static_assert(std::is_same<std::initializer_list<int>, decltype(foo)>::value);\n+    static_assert(std::is_same<int, decltype(bar)>::value);\n+  }\n+\n+  namespace test_typename_in_template_template_parameter\n+  {\n+\n+    template<template<typename> typename X> struct D;\n+\n+  }\n+\n+  namespace test_fallthrough_nodiscard_maybe_unused_attributes\n+  {\n+\n+    int f1()\n+    {\n+      return 42;\n+    }\n+\n+    [[nodiscard]] int f2()\n+    {\n+      [[maybe_unused]] auto unused = f1();\n+\n+      switch (f1())\n+      {\n+      case 17:\n+        f1();\n+        [[fallthrough]];\n+      case 42:\n+        f1();\n+      }\n+      return f1();\n+    }\n+\n+  }\n+\n+  namespace test_extended_aggregate_initialization\n+  {\n+\n+    struct base1\n+    {\n+      int b1, b2 = 42;\n+    };\n+\n+    struct base2\n+    {\n+      base2() {\n+        b3 = 42;\n+      }\n+      int b3;\n+    };\n+\n+    struct derived : base1, base2\n+    {\n+        int d;\n+    };\n+\n+    derived d1 {{1, 2}, {}, 4};  // full initialization\n+    derived d2 {{}, {}, 4};      // value-initialized bases\n+\n+  }\n+\n+  namespace test_general_range_based_for_loop\n+  {\n+\n+    struct iter\n+    {\n+      int i;\n+\n+      int& operator* ()\n+      {\n+        return i;\n+      }\n+\n+      const int& operator* () const\n+      {\n+        return i;\n+      }\n+\n+      iter& operator++()\n+      {\n+        ++i;\n+        return *this;\n+      }\n+    };\n+\n+    struct sentinel\n+    {\n+      int i;\n+    };\n+\n+    bool operator== (const iter& i, const sentinel& s)\n+    {\n+      return i.i == s.i;\n+    }\n+\n+    bool operator!= (const iter& i, const sentinel& s)\n+    {\n+      return !(i == s);\n+    }\n+\n+    struct range\n+    {\n+      iter begin() const\n+      {\n+        return {0};\n+      }\n+\n+      sentinel end() const\n+      {\n+        return {5};\n+      }\n+    };\n+\n+    void f()\n+    {\n+      range r {};\n+\n+      for (auto i : r)\n+      {\n+        [[maybe_unused]] auto v = i;\n+      }\n+    }\n+\n+  }\n+\n+  namespace test_lambda_capture_asterisk_this_by_value\n+  {\n+\n+    struct t\n+    {\n+      int i;\n+      int foo()\n+      {\n+        return [*this]()\n+        {\n+          return i;\n+        }();\n+      }\n+    };\n+\n+  }\n+\n+  namespace test_enum_class_construction\n+  {\n+\n+    enum class byte : unsigned char\n+    {};\n+\n+    byte foo {42};\n+\n+  }\n+\n+  namespace test_constexpr_if\n+  {\n+\n+    template <bool cond>\n+    int f ()\n+    {\n+      if constexpr(cond)\n+      {\n+        return 13;\n+      }\n+      else\n+      {\n+        return 42;\n+      }\n+    }\n+\n+  }\n+\n+  namespace test_selection_statement_with_initializer\n+  {\n+\n+    int f()\n+    {\n+      return 13;\n+    }\n+\n+    int f2()\n+    {\n+      if (auto i = f(); i > 0)\n+      {\n+        return 3;\n+      }\n+\n+      switch (auto i = f(); i + 4)\n+      {\n+      case 17:\n+        return 2;\n+\n+      default:\n+        return 1;\n+      }\n+    }\n+\n+  }\n+\n+  namespace test_template_argument_deduction_for_class_templates\n+  {\n+\n+    template <typename T1, typename T2>\n+    struct pair\n+    {\n+      pair (T1 p1, T2 p2)\n+        : m1 {p1},\n+          m2 {p2}\n+      {}\n+\n+      T1 m1;\n+      T2 m2;\n+    };\n+\n+    void f()\n+    {\n+      [[maybe_unused]] auto p = pair{13, 42u};\n+    }\n+\n+  }\n+\n+  namespace test_non_type_auto_template_parameters\n+  {\n+\n+    template <auto n>\n+    struct B\n+    {};\n+\n+    B<5> b1;\n+    B<'a'> b2;\n+\n+  }\n+\n+  namespace test_structured_bindings\n+  {\n+\n+    int arr[2] = { 1, 2 };\n+    std::pair<int, int> pr = { 1, 2 };\n+\n+    auto f1() -> int(&)[2]\n+    {\n+      return arr;\n+    }\n+\n+    auto f2() -> std::pair<int, int>&\n+    {\n+      return pr;\n+    }\n+\n+    struct S\n+    {\n+      int x1 : 2;\n+      volatile double y1;\n+    };\n+\n+    S f3()\n+    {\n+      return {};\n+    }\n+\n+    auto [ x1, y1 ] = f1();\n+    auto& [ xr1, yr1 ] = f1();\n+    auto [ x2, y2 ] = f2();\n+    auto& [ xr2, yr2 ] = f2();\n+    const auto [ x3, y3 ] = f3();\n+\n+  }\n+\n+  namespace test_exception_spec_type_system\n+  {\n+\n+    struct Good {};\n+    struct Bad {};\n+\n+    void g1() noexcept;\n+    void g2();\n+\n+    template<typename T>\n+    Bad\n+    f(T*, T*);\n+\n+    template<typename T1, typename T2>\n+    Good\n+    f(T1*, T2*);\n+\n+    static_assert (std::is_same_v<Good, decltype(f(g1, g2))>);\n+\n+  }\n+\n+  namespace test_inline_variables\n+  {\n+\n+    template<class T> void f(T)\n+    {}\n+\n+    template<class T> inline T g(T)\n+    {\n+      return T{};\n+    }\n+\n+    template<> inline void f<>(int)\n+    {}\n+\n+    template<> int g<>(int)\n+    {\n+      return 5;\n+    }\n+\n+  }\n+\n+}  // namespace cxx17\n+\n+#endif  // __cplusplus < 201703L\n+\n+]])"
      },
      {
        "sha": "c788ca9bd435fbfe4e1642281aabd7f9492786ff",
        "filename": "build-aux/m4/ax_gcc_func_attribute.m4",
        "status": "added",
        "additions": 223,
        "deletions": 0,
        "changes": 223,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_gcc_func_attribute.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_gcc_func_attribute.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_gcc_func_attribute.m4?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,223 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_gcc_func_attribute.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_GCC_FUNC_ATTRIBUTE(ATTRIBUTE)\n+#\n+# DESCRIPTION\n+#\n+#   This macro checks if the compiler supports one of GCC's function\n+#   attributes; many other compilers also provide function attributes with\n+#   the same syntax. Compiler warnings are used to detect supported\n+#   attributes as unsupported ones are ignored by default so quieting\n+#   warnings when using this macro will yield false positives.\n+#\n+#   The ATTRIBUTE parameter holds the name of the attribute to be checked.\n+#\n+#   If ATTRIBUTE is supported define HAVE_FUNC_ATTRIBUTE_<ATTRIBUTE>.\n+#\n+#   The macro caches its result in the ax_cv_have_func_attribute_<attribute>\n+#   variable.\n+#\n+#   The macro currently supports the following function attributes:\n+#\n+#    alias\n+#    aligned\n+#    alloc_size\n+#    always_inline\n+#    artificial\n+#    cold\n+#    const\n+#    constructor\n+#    constructor_priority for constructor attribute with priority\n+#    deprecated\n+#    destructor\n+#    dllexport\n+#    dllimport\n+#    error\n+#    externally_visible\n+#    flatten\n+#    format\n+#    format_arg\n+#    gnu_inline\n+#    hot\n+#    ifunc\n+#    leaf\n+#    malloc\n+#    noclone\n+#    noinline\n+#    nonnull\n+#    noreturn\n+#    nothrow\n+#    optimize\n+#    pure\n+#    unused\n+#    used\n+#    visibility\n+#    warning\n+#    warn_unused_result\n+#    weak\n+#    weakref\n+#\n+#   Unsuppored function attributes will be tested with a prototype returning\n+#   an int and not accepting any arguments and the result of the check might\n+#   be wrong or meaningless so use with care.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2013 Gabriele Svelto <gabriele.svelto@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved.  This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 3\n+\n+AC_DEFUN([AX_GCC_FUNC_ATTRIBUTE], [\n+    AS_VAR_PUSHDEF([ac_var], [ax_cv_have_func_attribute_$1])\n+\n+    AC_CACHE_CHECK([for __attribute__(($1))], [ac_var], [\n+        AC_LINK_IFELSE([AC_LANG_PROGRAM([\n+            m4_case([$1],\n+                [alias], [\n+                    int foo( void ) { return 0; }\n+                    int bar( void ) __attribute__(($1(\"foo\")));\n+                ],\n+                [aligned], [\n+                    int foo( void ) __attribute__(($1(32)));\n+                ],\n+                [alloc_size], [\n+                    void *foo(int a) __attribute__(($1(1)));\n+                ],\n+                [always_inline], [\n+                    inline __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [artificial], [\n+                    inline __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [cold], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [const], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [constructor_priority], [\n+                    int foo( void ) __attribute__((__constructor__(65535/2)));\n+                ],\n+                [constructor], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [deprecated], [\n+                    int foo( void ) __attribute__(($1(\"\")));\n+                ],\n+                [destructor], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [dllexport], [\n+                    __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [dllimport], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [error], [\n+                    int foo( void ) __attribute__(($1(\"\")));\n+                ],\n+                [externally_visible], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [flatten], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [format], [\n+                    int foo(const char *p, ...) __attribute__(($1(printf, 1, 2)));\n+                ],\n+                [format_arg], [\n+                    char *foo(const char *p) __attribute__(($1(1)));\n+                ],\n+                [gnu_inline], [\n+                    inline __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [hot], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [ifunc], [\n+                    int my_foo( void ) { return 0; }\n+                    static int (*resolve_foo(void))(void) { return my_foo; }\n+                    int foo( void ) __attribute__(($1(\"resolve_foo\")));\n+                ],\n+                [leaf], [\n+                    __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [malloc], [\n+                    void *foo( void ) __attribute__(($1));\n+                ],\n+                [noclone], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [noinline], [\n+                    __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [nonnull], [\n+                    int foo(char *p) __attribute__(($1(1)));\n+                ],\n+                [noreturn], [\n+                    void foo( void ) __attribute__(($1));\n+                ],\n+                [nothrow], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [optimize], [\n+                    __attribute__(($1(3))) int foo( void ) { return 0; }\n+                ],\n+                [pure], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [unused], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [used], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [visibility], [\n+                    int foo_def( void ) __attribute__(($1(\"default\")));\n+                    int foo_hid( void ) __attribute__(($1(\"hidden\")));\n+                    int foo_int( void ) __attribute__(($1(\"internal\")));\n+                    int foo_pro( void ) __attribute__(($1(\"protected\")));\n+                ],\n+                [warning], [\n+                    int foo( void ) __attribute__(($1(\"\")));\n+                ],\n+                [warn_unused_result], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [weak], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [weakref], [\n+                    static int foo( void ) { return 0; }\n+                    static int bar( void ) __attribute__(($1(\"foo\")));\n+                ],\n+                [\n+                 m4_warn([syntax], [Unsupported attribute $1, the test may fail])\n+                 int foo( void ) __attribute__(($1));\n+                ]\n+            )], [])\n+            ],\n+            dnl GCC doesn't exit with an error if an unknown attribute is\n+            dnl provided but only outputs a warning, so accept the attribute\n+            dnl only if no warning were issued.\n+            [AS_IF([test -s conftest.err],\n+                [AS_VAR_SET([ac_var], [no])],\n+                [AS_VAR_SET([ac_var], [yes])])],\n+            [AS_VAR_SET([ac_var], [no])])\n+    ])\n+\n+    AS_IF([test yes = AS_VAR_GET([ac_var])],\n+        [AC_DEFINE_UNQUOTED(AS_TR_CPP(HAVE_FUNC_ATTRIBUTE_$1), 1,\n+            [Define to 1 if the system has the `$1' function attribute])], [])\n+\n+    AS_VAR_POPDEF([ac_var])\n+])"
      },
      {
        "sha": "1598d077ff020f1f0be8388fded01c871c946354",
        "filename": "build-aux/m4/ax_pthread.m4",
        "status": "added",
        "additions": 507,
        "deletions": 0,
        "changes": 507,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_pthread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/ax_pthread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_pthread.m4?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,507 @@\n+# ===========================================================================\n+#        https://www.gnu.org/software/autoconf-archive/ax_pthread.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_PTHREAD([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])\n+#\n+# DESCRIPTION\n+#\n+#   This macro figures out how to build C programs using POSIX threads. It\n+#   sets the PTHREAD_LIBS output variable to the threads library and linker\n+#   flags, and the PTHREAD_CFLAGS output variable to any special C compiler\n+#   flags that are needed. (The user can also force certain compiler\n+#   flags/libs to be tested by setting these environment variables.)\n+#\n+#   Also sets PTHREAD_CC to any special C compiler that is needed for\n+#   multi-threaded programs (defaults to the value of CC otherwise). (This\n+#   is necessary on AIX to use the special cc_r compiler alias.)\n+#\n+#   NOTE: You are assumed to not only compile your program with these flags,\n+#   but also to link with them as well. For example, you might link with\n+#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n+#\n+#   If you are only building threaded programs, you may wish to use these\n+#   variables in your default LIBS, CFLAGS, and CC:\n+#\n+#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n+#     CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+#     CC=\"$PTHREAD_CC\"\n+#\n+#   In addition, if the PTHREAD_CREATE_JOINABLE thread-attribute constant\n+#   has a nonstandard name, this macro defines PTHREAD_CREATE_JOINABLE to\n+#   that name (e.g. PTHREAD_CREATE_UNDETACHED on AIX).\n+#\n+#   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the\n+#   PTHREAD_PRIO_INHERIT symbol is defined when compiling with\n+#   PTHREAD_CFLAGS.\n+#\n+#   ACTION-IF-FOUND is a list of shell commands to run if a threads library\n+#   is found, and ACTION-IF-NOT-FOUND is a list of commands to run it if it\n+#   is not found. If ACTION-IF-FOUND is not specified, the default action\n+#   will define HAVE_PTHREAD.\n+#\n+#   Please let the authors know if this macro fails on any platform, or if\n+#   you have any other suggestions or comments. This macro was based on work\n+#   by SGJ on autoconf scripts for FFTW (http://www.fftw.org/) (with help\n+#   from M. Frigo), as well as ac_pthread and hb_pthread macros posted by\n+#   Alejandro Forero Cuervo to the autoconf macro repository. We are also\n+#   grateful for the helpful feedback of numerous users.\n+#\n+#   Updated for Autoconf 2.68 by Daniel Richard G.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Steven G. Johnson <stevenj@alum.mit.edu>\n+#   Copyright (c) 2011 Daniel Richard G. <skunk@iSKUNK.ORG>\n+#   Copyright (c) 2019 Marc Stevens <marc.stevens@cwi.nl>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <https://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 27\n+\n+AU_ALIAS([ACX_PTHREAD], [AX_PTHREAD])\n+AC_DEFUN([AX_PTHREAD], [\n+AC_REQUIRE([AC_CANONICAL_HOST])\n+AC_REQUIRE([AC_PROG_CC])\n+AC_REQUIRE([AC_PROG_SED])\n+AC_LANG_PUSH([C])\n+ax_pthread_ok=no\n+\n+# We used to check for pthread.h first, but this fails if pthread.h\n+# requires special compiler flags (e.g. on Tru64 or Sequent).\n+# It gets checked for in the link test anyway.\n+\n+# First of all, check if the user has set any of the PTHREAD_LIBS,\n+# etcetera environment variables, and if threads linking works using\n+# them:\n+if test \"x$PTHREAD_CFLAGS$PTHREAD_LIBS\" != \"x\"; then\n+        ax_pthread_save_CC=\"$CC\"\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n+        AS_IF([test \"x$PTHREAD_CC\" != \"x\"], [CC=\"$PTHREAD_CC\"])\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+        AC_MSG_CHECKING([for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS])\n+        AC_LINK_IFELSE([AC_LANG_CALL([], [pthread_join])], [ax_pthread_ok=yes])\n+        AC_MSG_RESULT([$ax_pthread_ok])\n+        if test \"x$ax_pthread_ok\" = \"xno\"; then\n+                PTHREAD_LIBS=\"\"\n+                PTHREAD_CFLAGS=\"\"\n+        fi\n+        CC=\"$ax_pthread_save_CC\"\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n+fi\n+\n+# We must check for the threads library under a number of different\n+# names; the ordering is very important because some systems\n+# (e.g. DEC) have both -lpthread and -lpthreads, where one of the\n+# libraries is broken (non-POSIX).\n+\n+# Create a list of thread flags to try. Items with a \",\" contain both\n+# C compiler flags (before \",\") and linker flags (after \",\"). Other items\n+# starting with a \"-\" are C compiler flags, and remaining items are\n+# library names, except for \"none\" which indicates that we try without\n+# any flags at all, and \"pthread-config\" which is a program returning\n+# the flags for the Pth emulation library.\n+\n+ax_pthread_flags=\"pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n+\n+# The ordering *is* (sometimes) important.  Some notes on the\n+# individual items follow:\n+\n+# pthreads: AIX (must check this before -lpthread)\n+# none: in case threads are in libc; should be tried before -Kthread and\n+#       other compiler flags to prevent continual compiler warnings\n+# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n+# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads), Tru64\n+#           (Note: HP C rejects this with \"bad form for `-t' option\")\n+# -pthreads: Solaris/gcc (Note: HP C also rejects)\n+# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n+#      doesn't hurt to check since this sometimes defines pthreads and\n+#      -D_REENTRANT too), HP C (must be checked before -lpthread, which\n+#      is present but should not be used directly; and before -mthreads,\n+#      because the compiler interprets this as \"-mt\" + \"-hreads\")\n+# -mthreads: Mingw32/gcc, Lynx/gcc\n+# pthread: Linux, etcetera\n+# --thread-safe: KAI C++\n+# pthread-config: use pthread-config program (for GNU Pth library)\n+\n+case $host_os in\n+\n+        freebsd*)\n+\n+        # -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n+        # lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n+\n+        ax_pthread_flags=\"-kthread lthread $ax_pthread_flags\"\n+        ;;\n+\n+        hpux*)\n+\n+        # From the cc(1) man page: \"[-mt] Sets various -D flags to enable\n+        # multi-threading and also sets -lpthread.\"\n+\n+        ax_pthread_flags=\"-mt -pthread pthread $ax_pthread_flags\"\n+        ;;\n+\n+        openedition*)\n+\n+        # IBM z/OS requires a feature-test macro to be defined in order to\n+        # enable POSIX threads at all, so give the user a hint if this is\n+        # not set. (We don't define these ourselves, as they can affect\n+        # other portions of the system API in unpredictable ways.)\n+\n+        AC_EGREP_CPP([AX_PTHREAD_ZOS_MISSING],\n+            [\n+#            if !defined(_OPEN_THREADS) && !defined(_UNIX03_THREADS)\n+             AX_PTHREAD_ZOS_MISSING\n+#            endif\n+            ],\n+            [AC_MSG_WARN([IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.])])\n+        ;;\n+\n+        solaris*)\n+\n+        # On Solaris (at least, for some versions), libc contains stubbed\n+        # (non-functional) versions of the pthreads routines, so link-based\n+        # tests will erroneously succeed. (N.B.: The stubs are missing\n+        # pthread_cleanup_push, or rather a function called by this macro,\n+        # so we could check for that, but who knows whether they'll stub\n+        # that too in a future libc.)  So we'll check first for the\n+        # standard Solaris way of linking pthreads (-mt -lpthread).\n+\n+        ax_pthread_flags=\"-mt,-lpthread pthread $ax_pthread_flags\"\n+        ;;\n+esac\n+\n+# Are we compiling with Clang?\n+\n+AC_CACHE_CHECK([whether $CC is Clang],\n+    [ax_cv_PTHREAD_CLANG],\n+    [ax_cv_PTHREAD_CLANG=no\n+     # Note that Autoconf sets GCC=yes for Clang as well as GCC\n+     if test \"x$GCC\" = \"xyes\"; then\n+        AC_EGREP_CPP([AX_PTHREAD_CC_IS_CLANG],\n+            [/* Note: Clang 2.7 lacks __clang_[a-z]+__ */\n+#            if defined(__clang__) && defined(__llvm__)\n+             AX_PTHREAD_CC_IS_CLANG\n+#            endif\n+            ],\n+            [ax_cv_PTHREAD_CLANG=yes])\n+     fi\n+    ])\n+ax_pthread_clang=\"$ax_cv_PTHREAD_CLANG\"\n+\n+\n+# GCC generally uses -pthread, or -pthreads on some platforms (e.g. SPARC)\n+\n+# Note that for GCC and Clang -pthread generally implies -lpthread,\n+# except when -nostdlib is passed.\n+# This is problematic using libtool to build C++ shared libraries with pthread:\n+# [1] https://gcc.gnu.org/bugzilla/show_bug.cgi?id=25460\n+# [2] https://bugzilla.redhat.com/show_bug.cgi?id=661333\n+# [3] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=468555\n+# To solve this, first try -pthread together with -lpthread for GCC\n+\n+AS_IF([test \"x$GCC\" = \"xyes\"],\n+      [ax_pthread_flags=\"-pthread,-lpthread -pthread -pthreads $ax_pthread_flags\"])\n+\n+# Clang takes -pthread (never supported any other flag), but we'll try with -lpthread first\n+\n+AS_IF([test \"x$ax_pthread_clang\" = \"xyes\"],\n+      [ax_pthread_flags=\"-pthread,-lpthread -pthread\"])\n+\n+\n+# The presence of a feature test macro requesting re-entrant function\n+# definitions is, on some systems, a strong hint that pthreads support is\n+# correctly enabled\n+\n+case $host_os in\n+        darwin* | hpux* | linux* | osf* | solaris*)\n+        ax_pthread_check_macro=\"_REENTRANT\"\n+        ;;\n+\n+        aix*)\n+        ax_pthread_check_macro=\"_THREAD_SAFE\"\n+        ;;\n+\n+        *)\n+        ax_pthread_check_macro=\"--\"\n+        ;;\n+esac\n+AS_IF([test \"x$ax_pthread_check_macro\" = \"x--\"],\n+      [ax_pthread_check_cond=0],\n+      [ax_pthread_check_cond=\"!defined($ax_pthread_check_macro)\"])\n+\n+\n+if test \"x$ax_pthread_ok\" = \"xno\"; then\n+for ax_pthread_try_flag in $ax_pthread_flags; do\n+\n+        case $ax_pthread_try_flag in\n+                none)\n+                AC_MSG_CHECKING([whether pthreads work without any flags])\n+                ;;\n+\n+                *,*)\n+                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\1/\"`\n+                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\2/\"`\n+                AC_MSG_CHECKING([whether pthreads work with \"$PTHREAD_CFLAGS\" and \"$PTHREAD_LIBS\"])\n+                ;;\n+\n+                -*)\n+                AC_MSG_CHECKING([whether pthreads work with $ax_pthread_try_flag])\n+                PTHREAD_CFLAGS=\"$ax_pthread_try_flag\"\n+                ;;\n+\n+                pthread-config)\n+                AC_CHECK_PROG([ax_pthread_config], [pthread-config], [yes], [no])\n+                AS_IF([test \"x$ax_pthread_config\" = \"xno\"], [continue])\n+                PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n+                PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n+                ;;\n+\n+                *)\n+                AC_MSG_CHECKING([for the pthreads library -l$ax_pthread_try_flag])\n+                PTHREAD_LIBS=\"-l$ax_pthread_try_flag\"\n+                ;;\n+        esac\n+\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+\n+        # Check for various functions.  We must include pthread.h,\n+        # since some functions may be macros.  (On the Sequent, we\n+        # need a special flag -Kthread to make this header compile.)\n+        # We check for pthread_join because it is in -lpthread on IRIX\n+        # while pthread_create is in libc.  We check for pthread_attr_init\n+        # due to DEC craziness with -lpthreads.  We check for\n+        # pthread_cleanup_push because it is one of the few pthread\n+        # functions on Solaris that doesn't have a non-functional libc stub.\n+        # We try pthread_create on general principles.\n+\n+        AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>\n+#                       if $ax_pthread_check_cond\n+#                        error \"$ax_pthread_check_macro must be defined\"\n+#                       endif\n+                        static void *some_global = NULL;\n+                        static void routine(void *a)\n+                          {\n+                             /* To avoid any unused-parameter or\n+                                unused-but-set-parameter warning.  */\n+                             some_global = a;\n+                          }\n+                        static void *start_routine(void *a) { return a; }],\n+                       [pthread_t th; pthread_attr_t attr;\n+                        pthread_create(&th, 0, start_routine, 0);\n+                        pthread_join(th, 0);\n+                        pthread_attr_init(&attr);\n+                        pthread_cleanup_push(routine, 0);\n+                        pthread_cleanup_pop(0) /* ; */])],\n+            [ax_pthread_ok=yes],\n+            [])\n+\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n+\n+        AC_MSG_RESULT([$ax_pthread_ok])\n+        AS_IF([test \"x$ax_pthread_ok\" = \"xyes\"], [break])\n+\n+        PTHREAD_LIBS=\"\"\n+        PTHREAD_CFLAGS=\"\"\n+done\n+fi\n+\n+\n+# Clang needs special handling, because older versions handle the -pthread\n+# option in a rather... idiosyncratic way\n+\n+if test \"x$ax_pthread_clang\" = \"xyes\"; then\n+\n+        # Clang takes -pthread; it has never supported any other flag\n+\n+        # (Note 1: This will need to be revisited if a system that Clang\n+        # supports has POSIX threads in a separate library.  This tends not\n+        # to be the way of modern systems, but it's conceivable.)\n+\n+        # (Note 2: On some systems, notably Darwin, -pthread is not needed\n+        # to get POSIX threads support; the API is always present and\n+        # active.  We could reasonably leave PTHREAD_CFLAGS empty.  But\n+        # -pthread does define _REENTRANT, and while the Darwin headers\n+        # ignore this macro, third-party headers might not.)\n+\n+        # However, older versions of Clang make a point of warning the user\n+        # that, in an invocation where only linking and no compilation is\n+        # taking place, the -pthread option has no effect (\"argument unused\n+        # during compilation\").  They expect -pthread to be passed in only\n+        # when source code is being compiled.\n+        #\n+        # Problem is, this is at odds with the way Automake and most other\n+        # C build frameworks function, which is that the same flags used in\n+        # compilation (CFLAGS) are also used in linking.  Many systems\n+        # supported by AX_PTHREAD require exactly this for POSIX threads\n+        # support, and in fact it is often not straightforward to specify a\n+        # flag that is used only in the compilation phase and not in\n+        # linking.  Such a scenario is extremely rare in practice.\n+        #\n+        # Even though use of the -pthread flag in linking would only print\n+        # a warning, this can be a nuisance for well-run software projects\n+        # that build with -Werror.  So if the active version of Clang has\n+        # this misfeature, we search for an option to squash it.\n+\n+        AC_CACHE_CHECK([whether Clang needs flag to prevent \"argument unused\" warning when linking with -pthread],\n+            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG],\n+            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=unknown\n+             # Create an alternate version of $ac_link that compiles and\n+             # links in two steps (.c -> .o, .o -> exe) instead of one\n+             # (.c -> exe), because the warning occurs only in the second\n+             # step\n+             ax_pthread_save_ac_link=\"$ac_link\"\n+             ax_pthread_sed='s/conftest\\.\\$ac_ext/conftest.$ac_objext/g'\n+             ax_pthread_link_step=`$as_echo \"$ac_link\" | sed \"$ax_pthread_sed\"`\n+             ax_pthread_2step_ac_link=\"($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)\"\n+             ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do\n+                AS_IF([test \"x$ax_pthread_try\" = \"xunknown\"], [break])\n+                CFLAGS=\"-Werror -Wunknown-warning-option $ax_pthread_try -pthread $ax_pthread_save_CFLAGS\"\n+                ac_link=\"$ax_pthread_save_ac_link\"\n+                AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],\n+                    [ac_link=\"$ax_pthread_2step_ac_link\"\n+                     AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],\n+                         [break])\n+                    ])\n+             done\n+             ac_link=\"$ax_pthread_save_ac_link\"\n+             CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+             AS_IF([test \"x$ax_pthread_try\" = \"x\"], [ax_pthread_try=no])\n+             ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=\"$ax_pthread_try\"\n+            ])\n+\n+        case \"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" in\n+                no | unknown) ;;\n+                *) PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG $PTHREAD_CFLAGS\" ;;\n+        esac\n+\n+fi # $ax_pthread_clang = yes\n+\n+\n+\n+# Various other checks:\n+if test \"x$ax_pthread_ok\" = \"xyes\"; then\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+\n+        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.\n+        AC_CACHE_CHECK([for joinable pthread attribute],\n+            [ax_cv_PTHREAD_JOINABLE_ATTR],\n+            [ax_cv_PTHREAD_JOINABLE_ATTR=unknown\n+             for ax_pthread_attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n+                 AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],\n+                                                 [int attr = $ax_pthread_attr; return attr /* ; */])],\n+                                [ax_cv_PTHREAD_JOINABLE_ATTR=$ax_pthread_attr; break],\n+                                [])\n+             done\n+            ])\n+        AS_IF([test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xunknown\" && \\\n+               test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xPTHREAD_CREATE_JOINABLE\" && \\\n+               test \"x$ax_pthread_joinable_attr_defined\" != \"xyes\"],\n+              [AC_DEFINE_UNQUOTED([PTHREAD_CREATE_JOINABLE],\n+                                  [$ax_cv_PTHREAD_JOINABLE_ATTR],\n+                                  [Define to necessary symbol if this constant\n+                                   uses a non-standard name on your system.])\n+               ax_pthread_joinable_attr_defined=yes\n+              ])\n+\n+        AC_CACHE_CHECK([whether more special flags are required for pthreads],\n+            [ax_cv_PTHREAD_SPECIAL_FLAGS],\n+            [ax_cv_PTHREAD_SPECIAL_FLAGS=no\n+             case $host_os in\n+             solaris*)\n+             ax_cv_PTHREAD_SPECIAL_FLAGS=\"-D_POSIX_PTHREAD_SEMANTICS\"\n+             ;;\n+             esac\n+            ])\n+        AS_IF([test \"x$ax_cv_PTHREAD_SPECIAL_FLAGS\" != \"xno\" && \\\n+               test \"x$ax_pthread_special_flags_added\" != \"xyes\"],\n+              [PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_SPECIAL_FLAGS $PTHREAD_CFLAGS\"\n+               ax_pthread_special_flags_added=yes])\n+\n+        AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],\n+            [ax_cv_PTHREAD_PRIO_INHERIT],\n+            [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],\n+                                             [[int i = PTHREAD_PRIO_INHERIT;\n+                                               return i;]])],\n+                            [ax_cv_PTHREAD_PRIO_INHERIT=yes],\n+                            [ax_cv_PTHREAD_PRIO_INHERIT=no])\n+            ])\n+        AS_IF([test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\" && \\\n+               test \"x$ax_pthread_prio_inherit_defined\" != \"xyes\"],\n+              [AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], [1], [Have PTHREAD_PRIO_INHERIT.])\n+               ax_pthread_prio_inherit_defined=yes\n+              ])\n+\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n+\n+        # More AIX lossage: compile with *_r variant\n+        if test \"x$GCC\" != \"xyes\"; then\n+            case $host_os in\n+                aix*)\n+                AS_CASE([\"x/$CC\"],\n+                    [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],\n+                    [#handle absolute path differently from PATH based program lookup\n+                     AS_CASE([\"x$CC\"],\n+                         [x/*],\n+                         [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC=\"${CC}_r\"])],\n+                         [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])\n+                ;;\n+            esac\n+        fi\n+fi\n+\n+test -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n+\n+AC_SUBST([PTHREAD_LIBS])\n+AC_SUBST([PTHREAD_CFLAGS])\n+AC_SUBST([PTHREAD_CC])\n+\n+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\n+if test \"x$ax_pthread_ok\" = \"xyes\"; then\n+        ifelse([$1],,[AC_DEFINE([HAVE_PTHREAD],[1],[Define if you have POSIX threads libraries and header files.])],[$1])\n+        :\n+else\n+        ax_pthread_ok=no\n+        $2\n+fi\n+AC_LANG_POP\n+])dnl AX_PTHREAD"
      },
      {
        "sha": "aa0111e5a20f0c2bfd7c8de310dd0102ee1a2c6d",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "added",
        "additions": 78,
        "deletions": 0,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,78 @@\n+dnl Copyright (c) 2013-2015 The Bitcoin Core developers\n+dnl Distributed under the MIT software license, see the accompanying\n+dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+AC_DEFUN([BITCOIN_FIND_BDB48],[\n+  AC_ARG_VAR(BDB_CFLAGS, [C compiler flags for BerkeleyDB, bypasses autodetection])\n+  AC_ARG_VAR(BDB_LIBS, [Linker flags for BerkeleyDB, bypasses autodetection])\n+\n+  if test \"x$BDB_CFLAGS\" = \"x\"; then\n+    AC_MSG_CHECKING([for Berkeley DB C++ headers])\n+    BDB_CPPFLAGS=\n+    bdbpath=X\n+    bdb48path=X\n+    bdbdirlist=\n+    for _vn in 4.8 48 4 5 5.3 ''; do\n+      for _pfx in b lib ''; do\n+        bdbdirlist=\"$bdbdirlist ${_pfx}db${_vn}\"\n+      done\n+    done\n+    for searchpath in $bdbdirlist ''; do\n+      test -n \"${searchpath}\" && searchpath=\"${searchpath}/\"\n+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <${searchpath}db_cxx.h>\n+      ]],[[\n+        #if !((DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 8) || DB_VERSION_MAJOR > 4)\n+          #error \"failed to find bdb 4.8+\"\n+        #endif\n+      ]])],[\n+        if test \"x$bdbpath\" = \"xX\"; then\n+          bdbpath=\"${searchpath}\"\n+        fi\n+      ],[\n+        continue\n+      ])\n+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <${searchpath}db_cxx.h>\n+      ]],[[\n+        #if !(DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR == 8)\n+          #error \"failed to find bdb 4.8\"\n+        #endif\n+      ]])],[\n+        bdb48path=\"${searchpath}\"\n+        break\n+      ],[])\n+    done\n+    if test \"x$bdbpath\" = \"xX\"; then\n+      AC_MSG_RESULT([no])\n+      AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n+    elif test \"x$bdb48path\" = \"xX\"; then\n+      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n+      AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n+        AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n+      ],[\n+        AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n+      ])\n+    else\n+      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n+      bdbpath=\"${bdb48path}\"\n+    fi\n+  else\n+    BDB_CPPFLAGS=${BDB_CFLAGS}\n+  fi\n+  AC_SUBST(BDB_CPPFLAGS)\n+\n+  if test \"x$BDB_LIBS\" = \"x\"; then\n+    # TODO: Ideally this could find the library version and make sure it matches the headers being used\n+    for searchlib in db_cxx-4.8 db_cxx db4_cxx; do\n+      AC_CHECK_LIB([$searchlib],[main],[\n+        BDB_LIBS=\"-l${searchlib}\"\n+        break\n+      ])\n+    done\n+    if test \"x$BDB_LIBS\" = \"x\"; then\n+        AC_MSG_ERROR([libdb_cxx missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n+    fi\n+  fi\n+  AC_SUBST(BDB_LIBS)\n+])"
      },
      {
        "sha": "6c7665830b30325e0c8a9e477cdd64d13236c212",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "added",
        "additions": 357,
        "deletions": 0,
        "changes": 357,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,357 @@\n+dnl Copyright (c) 2013-2016 The Bitcoin Core developers\n+dnl Distributed under the MIT software license, see the accompanying\n+dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+dnl Helper for cases where a qt dependency is not met.\n+dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n+AC_DEFUN([BITCOIN_QT_FAIL],[\n+  if test \"x$bitcoin_qt_want_version\" = xauto && test \"x$bitcoin_qt_force\" != xyes; then\n+    if test \"x$bitcoin_enable_qt\" != xno; then\n+      AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n+    fi\n+    bitcoin_enable_qt=no\n+    bitcoin_enable_qt_test=no\n+  else\n+    AC_MSG_ERROR([$1])\n+  fi\n+])\n+\n+AC_DEFUN([BITCOIN_QT_CHECK],[\n+  if test \"x$bitcoin_enable_qt\" != xno && test \"x$bitcoin_qt_want_version\" != xno; then\n+    true\n+    $1\n+  else\n+    true\n+    $2\n+  fi\n+])\n+\n+dnl BITCOIN_QT_PATH_PROGS([FOO], [foo foo2], [/path/to/search/first], [continue if missing])\n+dnl Helper for finding the path of programs needed for Qt.\n+dnl Inputs: $1: Variable to be set\n+dnl Inputs: $2: List of programs to search for\n+dnl Inputs: $3: Look for $2 here before $PATH\n+dnl Inputs: $4: If \"yes\", don't fail if $2 is not found.\n+dnl Output: $1 is set to the path of $2 if found. $2 are searched in order.\n+AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n+  BITCOIN_QT_CHECK([\n+    if test \"x$3\" != x; then\n+      AC_PATH_PROGS($1,$2,,$3)\n+    else\n+      AC_PATH_PROGS($1,$2)\n+    fi\n+    if test \"x$$1\" = x && test \"x$4\" != xyes; then\n+      BITCOIN_QT_FAIL([$1 not found])\n+    fi\n+  ])\n+])\n+\n+dnl Initialize qt input.\n+dnl This must be called before any other BITCOIN_QT* macros to ensure that\n+dnl input variables are set correctly.\n+dnl CAUTION: Do not use this inside of a conditional.\n+AC_DEFUN([BITCOIN_QT_INIT],[\n+  dnl enable qt support\n+  AC_ARG_WITH([gui],\n+    [AS_HELP_STRING([--with-gui@<:@=no|qt5|auto@:>@],\n+    [build bitcoin-qt GUI (default=auto)])],\n+    [\n+     bitcoin_qt_want_version=$withval\n+     if test \"x$bitcoin_qt_want_version\" = xyes; then\n+       bitcoin_qt_force=yes\n+       bitcoin_qt_want_version=auto\n+     fi\n+    ],\n+    [bitcoin_qt_want_version=auto])\n+\n+  AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n+  AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n+  AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n+  AC_ARG_WITH([qt-translationdir],[AS_HELP_STRING([--with-qt-translationdir=PLUGIN_DIR],[specify qt translation path (overridden by pkgconfig)])], [qt_translation_path=$withval], [])\n+  AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path])], [qt_bin_path=$withval], [])\n+\n+  AC_ARG_WITH([qtdbus],\n+    [AS_HELP_STRING([--with-qtdbus],\n+    [enable DBus support (default is yes if qt is enabled and QtDBus is found, except on Android)])],\n+    [use_dbus=$withval],\n+    [use_dbus=auto])\n+\n+  dnl Android doesn't support D-Bus and certainly doesn't use it for notifications\n+  case $host in\n+    *android*)\n+      if test \"x$use_dbus\" != xyes; then\n+        use_dbus=no\n+      fi\n+    ;;\n+  esac\n+\n+  AC_SUBST(QT_TRANSLATION_DIR,$qt_translation_path)\n+])\n+\n+dnl Find Qt libraries and includes.\n+dnl\n+dnl   BITCOIN_QT_CONFIGURE([MINIMUM-VERSION])\n+dnl\n+dnl Outputs: See _BITCOIN_QT_FIND_LIBS\n+dnl Outputs: Sets variables for all qt-related tools.\n+dnl Outputs: bitcoin_enable_qt, bitcoin_enable_qt_dbus, bitcoin_enable_qt_test\n+AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n+  qt_version=\">= $1\"\n+  qt_lib_prefix=\"Qt5\"\n+  BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS])\n+\n+  dnl This is ugly and complicated. Yuck. Works as follows:\n+  dnl For Qt5, we can check a header to find out whether Qt is build\n+  dnl statically. When Qt is built statically, some plugins must be linked into\n+  dnl the final binary as well.\n+  dnl With Qt5, languages moved into core and the WindowsIntegration plugin was\n+  dnl added.\n+  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n+  dnl results to QT_LIBS.\n+  BITCOIN_QT_CHECK([\n+  TEMP_CPPFLAGS=$CPPFLAGS\n+  TEMP_CXXFLAGS=$CXXFLAGS\n+  CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n+  _BITCOIN_QT_IS_STATIC\n+  if test \"x$bitcoin_cv_static_qt\" = xyes; then\n+    _BITCOIN_QT_FIND_STATIC_PLUGINS\n+    AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n+    if test \"x$TARGET_OS\" != xandroid; then\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n+      AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n+    fi\n+    if test \"x$TARGET_OS\" = xwindows; then\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n+      AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n+    elif test \"x$TARGET_OS\" = xlinux; then\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n+      AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n+    elif test \"x$TARGET_OS\" = xdarwin; then\n+      AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n+      AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n+    elif test \"x$TARGET_OS\" = xandroid; then\n+      QT_LIBS=\"-Wl,--export-dynamic,--undefined=JNI_OnLoad -lqtforandroid -ljnigraphics -landroid -lqtfreetype -lQt5EglSupport $QT_LIBS\"\n+      AC_DEFINE(QT_QPA_PLATFORM_ANDROID, 1, [Define this symbol if the qt platform is android])\n+    fi\n+  fi\n+  CPPFLAGS=$TEMP_CPPFLAGS\n+  CXXFLAGS=$TEMP_CXXFLAGS\n+  ])\n+\n+  if test \"x$qt_bin_path\" = x; then\n+    qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n+  fi\n+\n+  if test \"x$use_hardening\" != xno; then\n+    BITCOIN_QT_CHECK([\n+    AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)\n+    TEMP_CPPFLAGS=$CPPFLAGS\n+    TEMP_CXXFLAGS=$CXXFLAGS\n+    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+    CXXFLAGS=\"$PIE_FLAGS $CXXFLAGS\"\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <QtCore/qconfig.h>\n+        #ifndef QT_VERSION\n+        #  include <QtCore/qglobal.h>\n+        #endif\n+      ]],\n+      [[\n+        #if defined(QT_REDUCE_RELOCATIONS)\n+        choke\n+        #endif\n+      ]])],\n+      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIE_FLAGS ],\n+      [ AC_MSG_RESULT(no); QT_PIE_FLAGS=$PIC_FLAGS]\n+    )\n+    CPPFLAGS=$TEMP_CPPFLAGS\n+    CXXFLAGS=$TEMP_CXXFLAGS\n+    ])\n+  else\n+    BITCOIN_QT_CHECK([\n+    AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)\n+    TEMP_CPPFLAGS=$CPPFLAGS\n+    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <QtCore/qconfig.h>\n+        #ifndef QT_VERSION\n+        #  include <QtCore/qglobal.h>\n+        #endif\n+      ]],\n+      [[\n+        #if defined(QT_REDUCE_RELOCATIONS)\n+        choke\n+        #endif\n+      ]])],\n+      [ AC_MSG_RESULT(no)],\n+      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIC_FLAGS]\n+    )\n+    CPPFLAGS=$TEMP_CPPFLAGS\n+    ])\n+  fi\n+\n+  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt5 moc5 moc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt5 uic5 uic], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt5 rcc5 rcc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt5 lrelease5 lrelease], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt5 lupdate5 lupdate],$qt_bin_path, yes)\n+\n+  MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'\n+  case $host in\n+    *darwin*)\n+     BITCOIN_QT_CHECK([\n+       MOC_DEFS=\"${MOC_DEFS} -DQ_OS_MAC\"\n+       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n+       AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS=\"$QT_LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n+     ])\n+    ;;\n+    *mingw*)\n+       BITCOIN_QT_CHECK([\n+         AX_CHECK_LINK_FLAG([[-mwindows]],[QT_LDFLAGS=\"$QT_LDFLAGS -mwindows\"],[AC_MSG_WARN(-mwindows linker support not detected)])\n+       ])\n+  esac\n+\n+\n+  dnl enable qt support\n+  AC_MSG_CHECKING([whether to build ]AC_PACKAGE_NAME[ GUI])\n+  BITCOIN_QT_CHECK([\n+    bitcoin_enable_qt=yes\n+    bitcoin_enable_qt_test=yes\n+    if test \"x$have_qt_test\" = xno; then\n+      bitcoin_enable_qt_test=no\n+    fi\n+    bitcoin_enable_qt_dbus=no\n+    if test \"x$use_dbus\" != xno && test \"x$have_qt_dbus\" = xyes; then\n+      bitcoin_enable_qt_dbus=yes\n+    fi\n+    if test \"x$use_dbus\" = xyes && test \"x$have_qt_dbus\" = xno; then\n+      AC_MSG_ERROR([libQtDBus not found. Install libQtDBus or remove --with-qtdbus.])\n+    fi\n+    if test \"x$LUPDATE\" = x; then\n+      AC_MSG_WARN([lupdate is required to update qt translations])\n+    fi\n+  ],[\n+    bitcoin_enable_qt=no\n+  ])\n+  if test x$bitcoin_enable_qt = xyes; then\n+    AC_MSG_RESULT([$bitcoin_enable_qt ($qt_lib_prefix)])\n+  else\n+    AC_MSG_RESULT([$bitcoin_enable_qt])\n+  fi\n+\n+  AC_SUBST(QT_PIE_FLAGS)\n+  AC_SUBST(QT_INCLUDES)\n+  AC_SUBST(QT_LIBS)\n+  AC_SUBST(QT_LDFLAGS)\n+  AC_SUBST(QT_DBUS_INCLUDES)\n+  AC_SUBST(QT_DBUS_LIBS)\n+  AC_SUBST(QT_TEST_INCLUDES)\n+  AC_SUBST(QT_TEST_LIBS)\n+  AC_SUBST(QT_SELECT, qt5)\n+  AC_SUBST(MOC_DEFS)\n+])\n+\n+dnl All macros below are internal and should _not_ be used from the main\n+dnl configure.ac.\n+dnl ----\n+\n+dnl Internal. Check if the linked version of Qt was built as static libs.\n+dnl Requires: Qt5.\n+dnl Requires: INCLUDES and LIBS must be populated as necessary.\n+dnl Output: bitcoin_cv_static_qt=yes|no\n+AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n+  AC_CACHE_CHECK(for static Qt, bitcoin_cv_static_qt,[\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <QtCore/qconfig.h>\n+        #ifndef QT_VERSION\n+        #  include <QtCore/qglobal.h>\n+        #endif\n+      ]],\n+      [[\n+        #if !defined(QT_STATIC)\n+        choke\n+        #endif\n+      ]])],\n+      [bitcoin_cv_static_qt=yes],\n+      [bitcoin_cv_static_qt=no])\n+    ])\n+])\n+\n+dnl Internal. Check if the link-requirements for static plugins are met.\n+dnl Requires: INCLUDES and LIBS must be populated as necessary.\n+dnl Inputs: $1: A series of Q_IMPORT_PLUGIN().\n+dnl Inputs: $2: The libraries that resolve $1.\n+dnl Output: QT_LIBS is prepended or configure exits.\n+AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n+  AC_MSG_CHECKING(for static Qt plugins: $2)\n+  CHECK_STATIC_PLUGINS_TEMP_LIBS=\"$LIBS\"\n+  LIBS=\"$2 $QT_LIBS $LIBS\"\n+  AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n+    #define QT_STATICPLUGIN\n+    #include <QtPlugin>\n+    $1]],\n+    [[return 0;]])],\n+    [AC_MSG_RESULT(yes); QT_LIBS=\"$2 $QT_LIBS\"],\n+    [AC_MSG_RESULT(no); BITCOIN_QT_FAIL(Could not resolve: $2)])\n+  LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n+])\n+\n+dnl Internal. Find paths necessary for linking qt static plugins\n+dnl Inputs: qt_plugin_path. optional.\n+dnl Outputs: QT_LIBS is appended\n+AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n+    if test \"x$qt_plugin_path\" != x; then\n+      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n+      if test -d \"$qt_plugin_path/accessible\"; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n+      fi\n+      if test -d \"$qt_plugin_path/platforms/android\"; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms/android -lqtfreetype -lEGL\"\n+      fi\n+      PKG_CHECK_MODULES([QTFONTDATABASE], [Qt5FontDatabaseSupport], [QT_LIBS=\"-lQt5FontDatabaseSupport $QT_LIBS\"])\n+      PKG_CHECK_MODULES([QTEVENTDISPATCHER], [Qt5EventDispatcherSupport], [QT_LIBS=\"-lQt5EventDispatcherSupport $QT_LIBS\"])\n+      PKG_CHECK_MODULES([QTTHEME], [Qt5ThemeSupport], [QT_LIBS=\"-lQt5ThemeSupport $QT_LIBS\"])\n+      PKG_CHECK_MODULES([QTDEVICEDISCOVERY], [Qt5DeviceDiscoverySupport], [QT_LIBS=\"-lQt5DeviceDiscoverySupport $QT_LIBS\"])\n+      PKG_CHECK_MODULES([QTACCESSIBILITY], [Qt5AccessibilitySupport], [QT_LIBS=\"-lQt5AccessibilitySupport $QT_LIBS\"])\n+      PKG_CHECK_MODULES([QTFB], [Qt5FbSupport], [QT_LIBS=\"-lQt5FbSupport $QT_LIBS\"])\n+      if test \"x$TARGET_OS\" = xlinux; then\n+        PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n+      elif test \"x$TARGET_OS\" = xdarwin; then\n+        PKG_CHECK_MODULES([QTCLIPBOARD], [Qt5ClipboardSupport], [QT_LIBS=\"-lQt5ClipboardSupport $QT_LIBS\"])\n+        PKG_CHECK_MODULES([QTGRAPHICS], [Qt5GraphicsSupport], [QT_LIBS=\"-lQt5GraphicsSupport $QT_LIBS\"])\n+        PKG_CHECK_MODULES([QTCGL], [Qt5CglSupport], [QT_LIBS=\"-lQt5CglSupport $QT_LIBS\"])\n+      fi\n+    fi\n+])\n+\n+dnl Internal. Find Qt libraries using pkg-config.\n+dnl Outputs: All necessary QT_* variables are set.\n+dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n+AC_DEFUN([_BITCOIN_QT_FIND_LIBS],[\n+  BITCOIN_QT_CHECK([\n+    PKG_CHECK_MODULES([QT_CORE], [${qt_lib_prefix}Core $qt_version], [],\n+                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Core $qt_version not found])])\n+  ])\n+  BITCOIN_QT_CHECK([\n+    PKG_CHECK_MODULES([QT_GUI], [${qt_lib_prefix}Gui $qt_version], [],\n+                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Gui $qt_version not found])])\n+  ])\n+  BITCOIN_QT_CHECK([\n+    PKG_CHECK_MODULES([QT_WIDGETS], [${qt_lib_prefix}Widgets $qt_version], [],\n+                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Widgets $qt_version not found])])\n+  ])\n+  BITCOIN_QT_CHECK([\n+    PKG_CHECK_MODULES([QT_NETWORK], [${qt_lib_prefix}Network $qt_version], [],\n+                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Network $qt_version not found])])\n+  ])\n+  QT_INCLUDES=\"$QT_CORE_CFLAGS $QT_GUI_CFLAGS $QT_WIDGETS_CFLAGS $QT_NETWORK_CFLAGS\"\n+  QT_LIBS=\"$QT_CORE_LIBS $QT_GUI_LIBS $QT_WIDGETS_LIBS $QT_NETWORK_LIBS\"\n+\n+  BITCOIN_QT_CHECK([\n+    PKG_CHECK_MODULES([QT_TEST], [${qt_lib_prefix}Test $qt_version], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n+    if test \"x$use_dbus\" != xno; then\n+      PKG_CHECK_MODULES([QT_DBUS], [${qt_lib_prefix}DBus $qt_version], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n+    fi\n+  ])\n+])"
      },
      {
        "sha": "7841042ac877b20ea8b35e634f1b4088aae1647f",
        "filename": "build-aux/m4/bitcoin_subdir_to_include.m4",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/bitcoin_subdir_to_include.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/bitcoin_subdir_to_include.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_subdir_to_include.m4?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,18 @@\n+dnl Copyright (c) 2013-2014 The Bitcoin Core developers\n+dnl Distributed under the MIT software license, see the accompanying\n+dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+dnl BITCOIN_SUBDIR_TO_INCLUDE([CPPFLAGS-VARIABLE-NAME],[SUBDIRECTORY-NAME],[HEADER-FILE])\n+dnl SUBDIRECTORY-NAME must end with a path separator\n+AC_DEFUN([BITCOIN_SUBDIR_TO_INCLUDE],[\n+  if test \"x$2\" = \"x\"; then\n+    AC_MSG_RESULT([default])\n+  else\n+    echo \"#include <$2$3.h>\" >conftest.cpp\n+    newinclpath=`${CXXCPP} ${CPPFLAGS} -M conftest.cpp 2>/dev/null | [ tr -d '\\\\n\\\\r\\\\\\\\' | sed -e 's/^.*[[:space:]:]\\(\\/[^[:space:]]*\\)]$3[\\.h[[:space:]].*$/\\1/' -e t -e d`]\n+    AC_MSG_RESULT([${newinclpath}])\n+    if test \"x${newinclpath}\" != \"x\"; then\n+      eval \"$1=\\\"\\$$1\\\"' -I${newinclpath}'\"\n+    fi\n+  fi\n+])"
      },
      {
        "sha": "75c43f9a92d3d6ac2a5d1aee89e97bab7a89f545",
        "filename": "build-aux/m4/l_atomic.m4",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/l_atomic.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build-aux/m4/l_atomic.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/l_atomic.m4?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,46 @@\n+dnl Copyright (c) 2015 Tim Kosse <tim.kosse@filezilla-project.org>\n+dnl Copying and distribution of this file, with or without modification, are\n+dnl permitted in any medium without royalty provided the copyright notice\n+dnl and this notice are preserved. This file is offered as-is, without any\n+dnl warranty.\n+\n+# Some versions of gcc/libstdc++ require linking with -latomic if\n+# using the C++ atomic library.\n+#\n+# Sourced from http://bugs.debian.org/797228\n+\n+m4_define([_CHECK_ATOMIC_testbody], [[\n+  #include <atomic>\n+  #include <cstdint>\n+\n+  int main() {\n+    std::atomic<int64_t> a{};\n+\n+    int64_t v = 5;\n+    int64_t r = a.fetch_add(v);\n+    return static_cast<int>(r);\n+  }\n+]])\n+\n+AC_DEFUN([CHECK_ATOMIC], [\n+\n+  AC_LANG_PUSH(C++)\n+\n+  AC_MSG_CHECKING([whether std::atomic can be used without link library])\n+\n+  AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_ATOMIC_testbody])],[\n+      AC_MSG_RESULT([yes])\n+    ],[\n+      AC_MSG_RESULT([no])\n+      LIBS=\"$LIBS -latomic\"\n+      AC_MSG_CHECKING([whether std::atomic needs -latomic])\n+      AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_ATOMIC_testbody])],[\n+          AC_MSG_RESULT([yes])\n+        ],[\n+          AC_MSG_RESULT([no])\n+          AC_MSG_FAILURE([cannot figure out how to use std::atomic])\n+        ])\n+    ])\n+\n+  AC_LANG_POP\n+])"
      },
      {
        "sha": "ae8120fdf3a44ab47700fe40a3a3cd93f3cb8d96",
        "filename": "build_msvc/.gitignore",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/.gitignore?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,27 @@\n+# Build directories\n+Debug/*\n+Release/*\n+.vs\n+packages/*\n+*/Obj\n+*/Debug\n+*/Release\n+*/x64\n+*.vcxproj.user\n+\n+# .vcxproj files that are auto-generated by the msvc-autogen.py script.\n+libbitcoin_cli/libbitcoin_cli.vcxproj\n+libbitcoin_common/libbitcoin_common.vcxproj\n+libbitcoin_crypto/libbitcoin_crypto.vcxproj\n+libbitcoin_server/libbitcoin_server.vcxproj\n+libbitcoin_util/libbitcoin_util.vcxproj\n+libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj\n+libbitcoin_wallet/libbitcoin_wallet.vcxproj\n+libbitcoin_zmq/libbitcoin_zmq.vcxproj\n+bench_bitcoin/bench_bitcoin.vcxproj\n+libtest_util/libtest_util.vcxproj\n+\n+*/Win32\n+libbitcoin_qt/QtGeneratedFiles/*\n+test_bitcoin-qt/QtGeneratedFiles/*\n+vcpkg_installed\n\\ No newline at end of file"
      },
      {
        "sha": "87ea556a23b31897ac72907ebb5f9ee9516b7a1b",
        "filename": "build_msvc/README.md",
        "status": "added",
        "additions": 79,
        "deletions": 0,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/README.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,79 @@\n+Building Bitcoin Core with Visual Studio\n+========================================\n+\n+Introduction\n+---------------------\n+Solution and project files to build the Bitcoin Core applications `msbuild` or Visual Studio can be found in the `build_msvc` directory. The build has been tested with Visual Studio 2017 and 2019.\n+\n+Building with Visual Studio is an alternative to the Linux based [cross-compiler build](https://github.com/bitcoin/bitcoin/blob/master/doc/build-windows.md).\n+\n+Quick Start\n+---------------------\n+The minimal steps required to build Bitcoin Core with the msbuild toolchain are below. More detailed instructions are contained in the following sections.\n+\n+```\n+cd build_msvc\n+py -3 msvc-autogen.py\n+msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /t:build\n+```\n+\n+Dependencies\n+---------------------\n+A number of [open source libraries](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) are required in order to be able to build Bitcoin Core.\n+\n+Options for installing the dependencies in a Visual Studio compatible manner are:\n+\n+- Use Microsoft's [vcpkg](https://docs.microsoft.com/en-us/cpp/vcpkg) to download the source packages and build locally. This is the recommended approach.\n+- Download the source code, build each dependency, add the required include paths, link libraries and binary tools to the Visual Studio project files.\n+- Use [nuget](https://www.nuget.org/) packages with the understanding that any binary files have been compiled by an untrusted third party.\n+\n+The [external dependencies](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) required for building are listed in the `build_msvc/vcpkg.json` file. The `msbuild` project files are configured to automatically install the `vcpkg` dependencies.\n+\n+Qt\n+---------------------\n+In order to build the Bitcoin Core a static build of Qt is required. The runtime library version (e.g. v141, v142) and platform type (x86 or x64) must also match.\n+\n+Some prebuilt x64 versions of Qt can be downloaded from [here](https://github.com/sipsorcery/qt_win_binary/releases). Please be aware these downloads are NOT officially sanctioned by Bitcoin Core and are provided for developer convenience only. They should NOT be used for builds that will be used in a production environment or with real funds.\n+\n+To determine which Qt prebuilt version to download open the `.appveyor.yml` file and note the `QT_DOWNLOAD_URL`. When extracting the zip file the destination path must be set to `C:\\`. This is due to the way that Qt includes, libraries and tools use internal paths.\n+\n+To build Bitcoin Core without Qt unload or disable the `bitcoin-qt`, `libbitcoin_qt` and `test_bitcoin-qt` projects.\n+\n+Building\n+---------------------\n+The instructions below use `vcpkg` to install the dependencies.\n+\n+- Install [`vcpkg`](https://github.com/Microsoft/vcpkg).\n+\n+- Use Python to generate `*.vcxproj` from Makefile\n+\n+```\n+PS >py -3 msvc-autogen.py\n+```\n+\n+- An optional step is to adjust the settings in the `build_msvc` directory and the `common.init.vcxproj` file. This project file contains settings that are common to all projects such as the runtime library version and target Windows SDK version. The Qt directories can also be set.\n+\n+- To build from the command line with the Visual Studio 2017 toolchain use:\n+\n+```\n+msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /p:PlatformToolset=v141 /t:build\n+```\n+\n+- To build from the command line with the Visual Studio 2019 toolchain use:\n+\n+```\n+msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /t:build\n+```\n+\n+- Alternatively open the `build_msvc/bitcoin.sln` file in Visual Studio.\n+\n+AppVeyor\n+---------------------\n+The .appveyor.yml in the root directory is suitable to perform builds on [AppVeyor](https://www.appveyor.com/) Continuous Integration servers. The simplest way to perform an AppVeyor build is to fork Bitcoin Core and then configure a new AppVeyor Project pointing to the forked repository.\n+\n+For safety reasons the Bitcoin Core .appveyor.yml file has the artifact options disabled. The build will be performed but no executable files will be available. To enable artifacts on a forked repository uncomment the lines shown below:\n+\n+```\n+    #- 7z a bitcoin-%APPVEYOR_BUILD_VERSION%.zip %APPVEYOR_BUILD_FOLDER%\\build_msvc\\%platform%\\%configuration%\\*.exe\n+    #- path: bitcoin-%APPVEYOR_BUILD_VERSION%.zip\n+```"
      },
      {
        "sha": "128c1bd8e7b6bd0622eefee3b5be73c47907b1e8",
        "filename": "build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,62 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{1125654E-E1B2-4431-8B5C-62EA9A2FEECB}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup>\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libtest_util\\libtest_util.vcxproj\">\n+      <Project>{1e065f03-3566-47d0-8fa9-daa72b084e7d}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Target Name=\"RawBenchHeaderGen\" BeforeTargets=\"PrepareForBuild\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the raw bench header generation task.</ErrorText>\n+    </PropertyGroup>\n+    <ItemGroup>\n+      <RawBenchFile Include=\"..\\..\\src\\bench\\data\\*.raw\" />\n+    </ItemGroup>\n+    <HeaderFromHexdump RawFilePath=\"%(RawBenchFile.FullPath)\" HeaderFilePath=\"%(RawBenchFile.FullPath).h\" SourceHeader=\"static unsigned const char %(RawBenchFile.Filename)_raw[] = {\" SourceFooter=\"};\" />\n+  </Target>\n+  <Import Label=\"hexdumpTarget\" Project=\"..\\msbuild\\tasks\\hexdump.targets\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "e5e0e978f89819af98f55803da8e8368f2815d86",
        "filename": "build_msvc/bitcoin-cli/bitcoin-cli.vcxproj",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/bitcoin-cli/bitcoin-cli.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/bitcoin-cli/bitcoin-cli.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-cli/bitcoin-cli.vcxproj?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{0B2D7431-F876-4A58-87BF-F748338CD3BF}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup>\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\bitcoin-cli.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "17cd31a52ef27db296d34fd810a98d7dc515ad61",
        "filename": "build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "status": "added",
        "additions": 83,
        "deletions": 0,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,83 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <Import Project=\"..\\common.qt.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{7E99172D-7FF2-4CB6-B736-AC9B76ED412A}</ProjectGuid>\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\qt\\main.cpp\" />\n+    <ResourceCompile Include=\"..\\..\\src\\qt\\res\\bitcoin-qt-res.rc\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_qt\\libbitcoin_qt.vcxproj\">\n+      <Project>{2b4abff8-d1fd-4845-88c9-1f3c0a6512bf}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Release'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>$(QtReleaseLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n+      <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+    </Link>\n+    <ResourceCompile>\n+      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+    </ResourceCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Debug'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>$(QtDebugLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n+      <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+    </Link>\n+    <ResourceCompile>\n+      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+    </ResourceCompile>\n+  </ItemDefinitionGroup>\n+\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+</Project>"
      },
      {
        "sha": "4e9b4916a0fc9e909ff06662ca28d1bf502736af",
        "filename": "build_msvc/bitcoin-tx/bitcoin-tx.vcxproj",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/bitcoin-tx/bitcoin-tx.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/bitcoin-tx/bitcoin-tx.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-tx/bitcoin-tx.vcxproj?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,37 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\bitcoin-tx.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "40c5db5522881ef14b9090009e50d9b90b394395",
        "filename": "build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj",
        "status": "added",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{84DE8790-EDE3-4483-81AC-C32F15E861F4}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\bitcoin-wallet.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet_tool\\libbitcoin_wallet_tool.vcxproj\">\n+      <Project>{f91ac55e-6f5e-4c58-9ac5-b40db7deef93}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "5e9715451f5a9309ae2d4989cfed2e5ec337e929",
        "filename": "build_msvc/bitcoin.sln",
        "status": "added",
        "additions": 252,
        "deletions": 0,
        "changes": 252,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/bitcoin.sln",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/bitcoin.sln",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin.sln?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,252 @@\n+Microsoft Visual Studio Solution File, Format Version 12.00\n+# Visual Studio Version 16\n+VisualStudioVersion = 16.0.28803.452\n+MinimumVisualStudioVersion = 10.0.40219.1\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoinconsensus\", \"libbitcoinconsensus\\libbitcoinconsensus.vcxproj\", \"{2B384FA8-9EE1-4544-93CB-0D733C25E8CE}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"testconsensus\", \"testconsensus\\testconsensus.vcxproj\", \"{E78473E9-B850-456C-9120-276301E04C06}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoind\", \"bitcoind\\bitcoind.vcxproj\", \"{D4513DDF-6013-44DC-ADCC-12EAF6D1F038}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_util\", \"libbitcoin_util\\libbitcoin_util.vcxproj\", \"{B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_common\", \"libbitcoin_common\\libbitcoin_common.vcxproj\", \"{7C87E378-DF58-482E-AA2F-1BC129BC19CE}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_crypto\", \"libbitcoin_crypto\\libbitcoin_crypto.vcxproj\", \"{6190199C-6CF4-4DAD-BFBD-93FA72A760C1}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_server\", \"libbitcoin_server\\libbitcoin_server.vcxproj\", \"{460FEE33-1FE1-483F-B3BF-931FF8E969A5}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libunivalue\", \"libunivalue\\libunivalue.vcxproj\", \"{5724BA7D-A09A-4BA8-800B-C4C1561B3D69}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_wallet\", \"libbitcoin_wallet\\libbitcoin_wallet.vcxproj\", \"{93B86837-B543-48A5-A89B-7C87ABB77DF2}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_zmq\", \"libbitcoin_zmq\\libbitcoin_zmq.vcxproj\", \"{792D487F-F14C-49FC-A9DE-3FC150F31C3F}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"test_bitcoin\", \"test_bitcoin\\test_bitcoin.vcxproj\", \"{A56B73DB-D46D-4882-8374-1FE3FFA08F07}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_cli\", \"libbitcoin_cli\\libbitcoin_cli.vcxproj\", \"{0667528C-D734-4009-ADF9-C0D6C4A5A5A6}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-cli\", \"bitcoin-cli\\bitcoin-cli.vcxproj\", \"{0B2D7431-F876-4A58-87BF-F748338CD3BF}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bench_bitcoin\", \"bench_bitcoin\\bench_bitcoin.vcxproj\", \"{1125654E-E1B2-4431-8B5C-62EA9A2FEECB}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-tx\", \"bitcoin-tx\\bitcoin-tx.vcxproj\", \"{D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-wallet\", \"bitcoin-wallet\\bitcoin-wallet.vcxproj\", \"{84DE8790-EDE3-4483-81AC-C32F15E861F4}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_wallet_tool\", \"libbitcoin_wallet_tool\\libbitcoin_wallet_tool.vcxproj\", \"{F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libsecp256k1\", \"libsecp256k1\\libsecp256k1.vcxproj\", \"{BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libleveldb\", \"libleveldb\\libleveldb.vcxproj\", \"{18430FEF-6B61-4C53-B396-718E02850F1B}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_qt\", \"libbitcoin_qt\\libbitcoin_qt.vcxproj\", \"{2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-qt\", \"bitcoin-qt\\bitcoin-qt.vcxproj\", \"{7E99172D-7FF2-4CB6-B736-AC9B76ED412A}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libtest_util\", \"libtest_util\\libtest_util.vcxproj\", \"{868474FD-35F6-4400-8EED-30A33E7521D4}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"test_bitcoin-qt\", \"test_bitcoin-qt\\test_bitcoin-qt.vcxproj\", \"{51201D5E-D939-4854-AE9D-008F03FF518E}\"\n+EndProject\n+Global\n+    GlobalSection(SolutionConfigurationPlatforms) = preSolution\n+        Debug|x64 = Debug|x64\n+        Debug|x86 = Debug|x86\n+        Release|x64 = Release|x64\n+        Release|x86 = Release|x86\n+    EndGlobalSection\n+    GlobalSection(ProjectConfigurationPlatforms) = postSolution\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x64.ActiveCfg = Debug|x64\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x64.Build.0 = Debug|x64\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x86.ActiveCfg = Debug|Win32\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x86.Build.0 = Debug|Win32\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x64.ActiveCfg = Release|x64\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x64.Build.0 = Release|x64\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x86.ActiveCfg = Release|Win32\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x86.Build.0 = Release|Win32\n+        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x64.ActiveCfg = Debug|x64\n+        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x64.Build.0 = Debug|x64\n+        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x86.ActiveCfg = Debug|Win32\n+        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x86.Build.0 = Debug|Win32\n+        {E78473E9-B850-456C-9120-276301E04C06}.Release|x64.ActiveCfg = Release|x64\n+        {E78473E9-B850-456C-9120-276301E04C06}.Release|x64.Build.0 = Release|x64\n+        {E78473E9-B850-456C-9120-276301E04C06}.Release|x86.ActiveCfg = Release|Win32\n+        {E78473E9-B850-456C-9120-276301E04C06}.Release|x86.Build.0 = Release|Win32\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x64.ActiveCfg = Debug|x64\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x64.Build.0 = Debug|x64\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x86.ActiveCfg = Debug|Win32\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x86.Build.0 = Debug|Win32\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x64.ActiveCfg = Release|x64\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x64.Build.0 = Release|x64\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x86.ActiveCfg = Release|Win32\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x86.Build.0 = Release|Win32\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x64.ActiveCfg = Debug|x64\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x64.Build.0 = Debug|x64\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x86.ActiveCfg = Debug|Win32\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x86.Build.0 = Debug|Win32\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x64.ActiveCfg = Release|x64\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x64.Build.0 = Release|x64\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x86.ActiveCfg = Release|Win32\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x86.Build.0 = Release|Win32\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x64.ActiveCfg = Debug|x64\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x64.Build.0 = Debug|x64\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x86.ActiveCfg = Debug|Win32\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x86.Build.0 = Debug|Win32\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x64.ActiveCfg = Release|x64\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x64.Build.0 = Release|x64\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x86.ActiveCfg = Release|Win32\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x86.Build.0 = Release|Win32\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x64.ActiveCfg = Debug|x64\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x64.Build.0 = Debug|x64\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x86.ActiveCfg = Debug|Win32\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x86.Build.0 = Debug|Win32\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x64.ActiveCfg = Release|x64\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x64.Build.0 = Release|x64\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x86.ActiveCfg = Release|Win32\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x86.Build.0 = Release|Win32\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x64.ActiveCfg = Debug|x64\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x64.Build.0 = Debug|x64\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x86.ActiveCfg = Debug|Win32\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x86.Build.0 = Debug|Win32\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x64.ActiveCfg = Release|x64\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x64.Build.0 = Release|x64\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x86.ActiveCfg = Release|Win32\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x86.Build.0 = Release|Win32\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x64.ActiveCfg = Debug|x64\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x64.Build.0 = Debug|x64\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x86.ActiveCfg = Debug|Win32\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x86.Build.0 = Debug|Win32\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x64.ActiveCfg = Release|x64\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x64.Build.0 = Release|x64\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x86.ActiveCfg = Release|Win32\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x86.Build.0 = Release|Win32\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x64.ActiveCfg = Debug|x64\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x64.Build.0 = Debug|x64\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x86.ActiveCfg = Debug|Win32\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x86.Build.0 = Debug|Win32\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x64.ActiveCfg = Release|x64\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x64.Build.0 = Release|x64\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x86.ActiveCfg = Release|Win32\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x86.Build.0 = Release|Win32\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x64.ActiveCfg = Debug|x64\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x64.Build.0 = Debug|x64\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x86.ActiveCfg = Debug|Win32\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x86.Build.0 = Debug|Win32\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x64.ActiveCfg = Release|x64\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x64.Build.0 = Release|x64\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x86.ActiveCfg = Release|Win32\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x86.Build.0 = Release|Win32\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x64.ActiveCfg = Debug|x64\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x64.Build.0 = Debug|x64\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x86.ActiveCfg = Debug|Win32\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x86.Build.0 = Debug|Win32\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x64.ActiveCfg = Release|x64\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x64.Build.0 = Release|x64\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x86.ActiveCfg = Release|Win32\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x86.Build.0 = Release|Win32\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x64.ActiveCfg = Debug|x64\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x64.Build.0 = Debug|x64\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x86.ActiveCfg = Debug|Win32\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x86.Build.0 = Debug|Win32\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x64.ActiveCfg = Release|x64\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x64.Build.0 = Release|x64\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x86.ActiveCfg = Release|Win32\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x86.Build.0 = Release|Win32\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x64.ActiveCfg = Debug|x64\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x64.Build.0 = Debug|x64\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x86.ActiveCfg = Debug|Win32\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x86.Build.0 = Debug|Win32\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x64.ActiveCfg = Release|x64\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x64.Build.0 = Release|x64\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x86.ActiveCfg = Release|Win32\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x86.Build.0 = Release|Win32\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x64.ActiveCfg = Debug|x64\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x64.Build.0 = Debug|x64\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x86.ActiveCfg = Debug|Win32\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x86.Build.0 = Debug|Win32\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x64.ActiveCfg = Release|x64\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x64.Build.0 = Release|x64\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x86.ActiveCfg = Release|Win32\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x86.Build.0 = Release|Win32\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x64.ActiveCfg = Debug|x64\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x64.Build.0 = Debug|x64\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x86.ActiveCfg = Debug|Win32\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x86.Build.0 = Debug|Win32\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x64.ActiveCfg = Release|x64\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x64.Build.0 = Release|x64\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x86.ActiveCfg = Release|Win32\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x86.Build.0 = Release|Win32\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x64.ActiveCfg = Debug|x64\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x64.Build.0 = Debug|x64\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x86.ActiveCfg = Debug|Win32\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x86.Build.0 = Debug|Win32\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x64.ActiveCfg = Release|x64\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x64.Build.0 = Release|x64\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x86.ActiveCfg = Release|Win32\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x86.Build.0 = Release|Win32\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x64.ActiveCfg = Debug|x64\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x64.Build.0 = Debug|x64\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x86.ActiveCfg = Debug|Win32\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x86.Build.0 = Debug|Win32\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x64.ActiveCfg = Release|x64\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x64.Build.0 = Release|x64\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x86.ActiveCfg = Release|Win32\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x86.Build.0 = Release|Win32\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Debug|x64.ActiveCfg = Debug|x64\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Debug|x64.Build.0 = Debug|x64\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Debug|x86.ActiveCfg = Debug|Win32\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Debug|x86.Build.0 = Debug|Win32\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Release|x64.ActiveCfg = Release|x64\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Release|x64.Build.0 = Release|x64\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Release|x86.ActiveCfg = Release|Win32\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Release|x86.Build.0 = Release|Win32\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Debug|x64.ActiveCfg = Debug|x64\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Debug|x64.Build.0 = Debug|x64\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Debug|x86.ActiveCfg = Debug|Win32\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Debug|x86.Build.0 = Debug|Win32\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x64.ActiveCfg = Release|x64\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x64.Build.0 = Release|x64\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x86.ActiveCfg = Release|Win32\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x86.Build.0 = Release|Win32\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x64.ActiveCfg = Debug|x64\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x64.Build.0 = Debug|x64\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x86.ActiveCfg = Debug|Win32\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x86.Build.0 = Debug|Win32\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x64.ActiveCfg = Release|x64\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x64.Build.0 = Release|x64\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x86.ActiveCfg = Release|Win32\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x86.Build.0 = Release|Win32\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x64.ActiveCfg = Debug|x64\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x64.Build.0 = Debug|x64\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x86.ActiveCfg = Debug|Win32\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x86.Build.0 = Debug|Win32\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x64.ActiveCfg = Release|x64\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x64.Build.0 = Release|x64\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x86.ActiveCfg = Release|Win32\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x86.Build.0 = Release|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x64.ActiveCfg = Debug|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x64.Build.0 = Debug|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x86.ActiveCfg = Debug|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x86.Build.0 = Debug|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x64.ActiveCfg = Release|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x64.Build.0 = Release|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x86.ActiveCfg = Release|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x86.Build.0 = Release|Win32\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x64.ActiveCfg = Debug|x64\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x64.Build.0 = Debug|x64\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x86.ActiveCfg = Debug|Win32\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x86.Build.0 = Debug|Win32\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x64.ActiveCfg = Release|x64\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x64.Build.0 = Release|x64\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x86.ActiveCfg = Release|Win32\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x86.Build.0 = Release|Win32\n+    EndGlobalSection\n+    GlobalSection(SolutionProperties) = preSolution\n+        HideSolutionNode = FALSE\n+    EndGlobalSection\n+    GlobalSection(ExtensibilityGlobals) = postSolution\n+                        SolutionGuid = {8AA72EDA-2CD4-4564-B1E4-688B760EEEE9}\n+                SolutionGuid = {8607C0F4-F33D-41B8-8D51-18E366A0F8DF}\n+        SolutionGuid = {58AAB032-7274-49BD-845E-5EF4DBB69B70}\n+    EndGlobalSection\n+EndGlobal"
      },
      {
        "sha": "9d0b50a0b4bfe463fb4b6bff36cc5381363b4527",
        "filename": "build_msvc/bitcoin_config.h",
        "status": "added",
        "additions": 338,
        "deletions": 0,
        "changes": 338,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/bitcoin_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/bitcoin_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin_config.h?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,338 @@\n+// Copyright (c) 2018-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BITCOIN_CONFIG_H\n+#define BITCOIN_BITCOIN_CONFIG_H\n+\n+/* Define if building universal (internal helper macro) */\n+/* #undef AC_APPLE_UNIVERSAL_BUILD */\n+\n+/* Version Build */\n+#define CLIENT_VERSION_BUILD 0\n+\n+/* Version is release */\n+#define CLIENT_VERSION_IS_RELEASE false\n+\n+/* Major version */\n+#define CLIENT_VERSION_MAJOR 0\n+\n+/* Minor version */\n+#define CLIENT_VERSION_MINOR 20\n+\n+/* Build revision */\n+#define CLIENT_VERSION_REVISION 99\n+\n+/* Copyright holder(s) before %s replacement */\n+#define COPYRIGHT_HOLDERS \"The %s developers\"\n+\n+/* Copyright holder(s) */\n+#define COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\"\n+\n+/* Replacement for %s in copyright holders string */\n+#define COPYRIGHT_HOLDERS_SUBSTITUTION \"Bitcoin Core\"\n+\n+/* Copyright year */\n+#define COPYRIGHT_YEAR 2019\n+\n+/* Define to 1 to enable wallet functions */\n+#define ENABLE_WALLET 1\n+\n+/* Define to 1 to enable ZMQ functions */\n+#define ENABLE_ZMQ 1\n+\n+/* define if the Boost library is available */\n+#define HAVE_BOOST /**/\n+\n+/* define if the Boost::Filesystem library is available */\n+#define HAVE_BOOST_FILESYSTEM /**/\n+\n+/* define if the Boost::Process library is available */\n+#define HAVE_BOOST_PROCESS /**/\n+\n+/* define if the Boost::System library is available */\n+#define HAVE_BOOST_SYSTEM /**/\n+\n+/* define if the Boost::Thread library is available */\n+#define HAVE_BOOST_THREAD /**/\n+\n+/* define if the Boost::Unit_Test_Framework library is available */\n+#define HAVE_BOOST_UNIT_TEST_FRAMEWORK /**/\n+\n+/* Define to 1 if you have the <byteswap.h> header file. */\n+/* #undef HAVE_BYTESWAP_H */\n+\n+/* Define this symbol if the consensus lib has been built */\n+#define HAVE_CONSENSUS_LIB 1\n+\n+/* define if the compiler supports basic C++11 syntax */\n+#define HAVE_CXX11 1\n+\n+/* Define to 1 if you have the declaration of `be16toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BE16TOH 0\n+\n+/* Define to 1 if you have the declaration of `be32toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BE32TOH 0\n+\n+/* Define to 1 if you have the declaration of `be64toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BE64TOH 0\n+\n+/* Define to 1 if you have the declaration of `bswap_16', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BSWAP_16 0\n+\n+/* Define to 1 if you have the declaration of `bswap_32', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BSWAP_32 0\n+\n+/* Define to 1 if you have the declaration of `bswap_64', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BSWAP_64 0\n+\n+/* Define to 1 if you have the declaration of `daemon', and to 0 if you don't.\n+   */\n+#define HAVE_DECL_DAEMON 0\n+\n+/* Define to 1 if you have the declaration of `htobe16', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOBE16 0\n+\n+/* Define to 1 if you have the declaration of `htobe32', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOBE32 0\n+\n+/* Define to 1 if you have the declaration of `htobe64', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOBE64 0\n+\n+/* Define to 1 if you have the declaration of `htole16', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOLE16 0\n+\n+/* Define to 1 if you have the declaration of `htole32', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOLE32 0\n+\n+/* Define to 1 if you have the declaration of `htole64', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOLE64 0\n+\n+/* Define to 1 if you have the declaration of `le16toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_LE16TOH 0\n+\n+/* Define to 1 if you have the declaration of `le32toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_LE32TOH 0\n+\n+/* Define to 1 if you have the declaration of `le64toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_LE64TOH 0\n+\n+/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_STRERROR_R 0\n+\n+/* Define to 1 if you have the declaration of `strnlen', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_STRNLEN 1\n+\n+/* Define to 1 if you have the <dlfcn.h> header file. */\n+/* #undef HAVE_DLFCN_H */\n+\n+/* Define to 1 if you have the <endian.h> header file. */\n+/* #undef HAVE_ENDIAN_H */\n+\n+/* Define to 1 if the system has the `dllexport' function attribute */\n+#define HAVE_FUNC_ATTRIBUTE_DLLEXPORT 1\n+\n+/* Define to 1 if the system has the `dllimport' function attribute */\n+#define HAVE_FUNC_ATTRIBUTE_DLLIMPORT 1\n+\n+/* Define to 1 if the system has the `visibility' function attribute */\n+#define HAVE_FUNC_ATTRIBUTE_VISIBILITY 1\n+\n+/* Define this symbol if the BSD getentropy system call is available */\n+/* #undef HAVE_GETENTROPY */\n+\n+/* Define this symbol if the BSD getentropy system call is available with\n+   sys/random.h */\n+/* #undef HAVE_GETENTROPY_RAND */\n+\n+/* Define to 1 if you have the <inttypes.h> header file. */\n+#define HAVE_INTTYPES_H 1\n+\n+/* Define this symbol if you have malloc_info */\n+/* #undef HAVE_MALLOC_INFO */\n+\n+/* Define this symbol if you have mallopt with M_ARENA_MAX */\n+/* #undef HAVE_MALLOPT_ARENA_MAX */\n+\n+/* Define to 1 if you have the <memory.h> header file. */\n+#define HAVE_MEMORY_H 1\n+\n+/* Define to 1 if you have the <miniupnpc/miniupnpc.h> header file. */\n+#define HAVE_MINIUPNPC_MINIUPNPC_H 1\n+\n+/* Define to 1 if you have the <miniupnpc/miniwget.h> header file. */\n+#define HAVE_MINIUPNPC_MINIWGET_H 1\n+\n+/* Define to 1 if you have the <miniupnpc/upnpcommands.h> header file. */\n+#define HAVE_MINIUPNPC_UPNPCOMMANDS_H 1\n+\n+/* Define to 1 if you have the <miniupnpc/upnperrors.h> header file. */\n+#define HAVE_MINIUPNPC_UPNPERRORS_H 1\n+\n+/* Define this symbol if you have MSG_DONTWAIT */\n+/* #undef HAVE_MSG_DONTWAIT */\n+\n+/* Define this symbol if you have MSG_NOSIGNAL */\n+/* #undef HAVE_MSG_NOSIGNAL */\n+\n+/* Define if you have POSIX threads libraries and header files. */\n+//#define HAVE_PTHREAD 1\n+\n+/* Have PTHREAD_PRIO_INHERIT. */\n+//#define HAVE_PTHREAD_PRIO_INHERIT 1\n+\n+/* Define to 1 if you have the <stdint.h> header file. */\n+#define HAVE_STDINT_H 1\n+\n+/* Define to 1 if you have the <stdio.h> header file. */\n+#define HAVE_STDIO_H 1\n+\n+/* Define to 1 if you have the <stdlib.h> header file. */\n+#define HAVE_STDLIB_H 1\n+\n+/* Define to 1 if you have the `strerror_r' function. */\n+/* #undef HAVE_STRERROR_R */\n+\n+/* Define to 1 if you have the <strings.h> header file. */\n+#define HAVE_STRINGS_H 1\n+\n+/* Define to 1 if you have the <string.h> header file. */\n+#define HAVE_STRING_H 1\n+\n+/* Define this symbol if the BSD sysctl(KERN_ARND) is available */\n+/* #undef HAVE_SYSCTL_ARND */\n+\n+/* Define to 1 if you have the <sys/endian.h> header file. */\n+/* #undef HAVE_SYS_ENDIAN_H */\n+\n+/* Define this symbol if the Linux getrandom system call is available */\n+/* #undef HAVE_SYS_GETRANDOM */\n+\n+/* Define to 1 if you have the <sys/prctl.h> header file. */\n+/* #undef HAVE_SYS_PRCTL_H */\n+\n+/* Define to 1 if you have the <sys/select.h> header file. */\n+/* #undef HAVE_SYS_SELECT_H */\n+\n+/* Define to 1 if you have the <sys/stat.h> header file. */\n+#define HAVE_SYS_STAT_H 1\n+\n+/* Define to 1 if you have the <sys/types.h> header file. */\n+#define HAVE_SYS_TYPES_H 1\n+\n+/* Define to 1 if you have the <unistd.h> header file. */\n+//#define HAVE_UNISTD_H 1\n+\n+/* Define if the visibility attribute is supported. */\n+#define HAVE_VISIBILITY_ATTRIBUTE 1\n+\n+/* Define to the sub-directory where libtool stores uninstalled libraries. */\n+#define LT_OBJDIR \".libs/\"\n+\n+/* Define to the address where bug reports for this package should be sent. */\n+#define PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\"\n+\n+/* Define to the full name of this package. */\n+#define PACKAGE_NAME \"Bitcoin Core\"\n+\n+/* Define to the full name and version of this package. */\n+#define PACKAGE_STRING \"Bitcoin Core 0.19.99\"\n+\n+/* Define to the one symbol short name of this package. */\n+#define PACKAGE_TARNAME \"bitcoin\"\n+\n+/* Define to the home page for this package. */\n+#define PACKAGE_URL \"https://bitcoincore.org/\"\n+\n+/* Define to the version of this package. */\n+#define PACKAGE_VERSION \"0.19.99\"\n+\n+/* Define to necessary symbol if this constant uses a non-standard name on\n+   your system. */\n+/* #undef PTHREAD_CREATE_JOINABLE */\n+\n+/* Define this symbol if the qt platform is cocoa */\n+/* #undef QT_QPA_PLATFORM_COCOA */\n+\n+/* Define this symbol if the minimal qt platform exists */\n+#define QT_QPA_PLATFORM_MINIMAL 1\n+\n+/* Define this symbol if the qt platform is windows */\n+#define QT_QPA_PLATFORM_WINDOWS 1\n+\n+/* Define this symbol if the qt platform is xcb */\n+/* #undef QT_QPA_PLATFORM_XCB */\n+\n+/* Define this symbol if qt plugins are static */\n+#define QT_STATICPLUGIN 1\n+\n+/* Define to 1 if you have the ANSI C header files. */\n+#define STDC_HEADERS 1\n+\n+/* Define to 1 if strerror_r returns char *. */\n+/* #undef STRERROR_R_CHAR_P */\n+\n+/* Define this symbol to build in assembly routines */\n+//#define USE_ASM 1\n+\n+/* Define if dbus support should be compiled in */\n+/* #undef USE_DBUS */\n+\n+/* Define if QR support should be compiled in */\n+//#define USE_QRCODE 1\n+\n+/* UPnP support not compiled if undefined, otherwise value (0 or 1) determines\n+   default state */\n+//#define USE_UPNP 0\n+\n+/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most\n+   significant byte first (like Motorola and SPARC, unlike Intel). */\n+#if defined AC_APPLE_UNIVERSAL_BUILD\n+# if defined __BIG_ENDIAN__\n+#  define WORDS_BIGENDIAN 1\n+# endif\n+#else\n+# ifndef WORDS_BIGENDIAN\n+/* #  undef WORDS_BIGENDIAN */\n+# endif\n+#endif\n+\n+/* Enable large inode numbers on Mac OS X 10.5.  */\n+#ifndef _DARWIN_USE_64_BIT_INODE\n+# define _DARWIN_USE_64_BIT_INODE 1\n+#endif\n+\n+/* Number of bits in a file offset, on hosts where this is settable. */\n+#define _FILE_OFFSET_BITS 64\n+\n+/* Define for large files, on AIX-style hosts. */\n+/* #undef _LARGE_FILES */\n+\n+/* Windows Universal Platform constraints */\n+#if !defined(WINAPI_FAMILY) || (WINAPI_FAMILY == WINAPI_FAMILY_DESKTOP_APP)\n+/* Either a desktop application without API restrictions, or and older system\n+   before these macros were defined. */\n+\n+/* ::wsystem is available */\n+#define HAVE_SYSTEM 1\n+\n+#endif // !WINAPI_FAMILY || WINAPI_FAMILY_DESKTOP_APP\n+\n+#endif //BITCOIN_BITCOIN_CONFIG_H"
      },
      {
        "sha": "ae24cb100e68fc465bd612517d47ed8a96c6bfe2",
        "filename": "build_msvc/bitcoind/bitcoind.vcxproj",
        "status": "added",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/bitcoind/bitcoind.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/bitcoind/bitcoind.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoind/bitcoind.vcxproj?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,75 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{D4513DDF-6013-44DC-ADCC-12EAF6D1F038}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\bitcoind.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Label=\"ReplaceInFile\" Project=\"..\\msbuild\\tasks\\replaceinfile.targets\" />\n+  <PropertyGroup>\n+    <ConfigIniIn>..\\..\\test\\config.ini.in</ConfigIniIn>\n+    <ConfigIniOut>..\\..\\test\\config.ini</ConfigIniOut>\n+  </PropertyGroup>\n+  <Target Name=\"AfterBuild\">\n+    <Copy SourceFiles=\"$(ConfigIniIn)\" DestinationFiles=\"$(ConfigIniOut)\" ></Copy>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                   Replace=\"@PACKAGE_NAME@\" By=\"Bitcoin Core\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                   Replace=\"@abs_top_srcdir@\" By=\"..\\..\" ToFullPath=\"true\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                   Replace=\"@abs_top_builddir@\" By=\"..\\..\" ToFullPath=\"true\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                   Replace=\"@EXEEXT@\" By=\".exe\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                  Replace=\"@ENABLE_WALLET_TRUE@\" By=\"\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                  Replace=\"@BUILD_BITCOIN_CLI_TRUE@\" By=\"\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                  Replace=\"@BUILD_BITCOIND_TRUE@\" By=\"\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                  Replace=\"@ENABLE_FUZZ_TRUE@\" By=\"\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                  Replace=\"@ENABLE_ZMQ_TRUE@\" By=\"\"></ReplaceInFile>\n+  </Target>\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "ed227519ae10181a24145d33e131358e5c49a477",
        "filename": "build_msvc/common.init.vcxproj",
        "status": "added",
        "additions": 135,
        "deletions": 0,
        "changes": 135,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/common.init.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/common.init.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.init.vcxproj?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,135 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+<Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>16.0</VCProjectVersion>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n+    <UseNativeEnvironment>true</UseNativeEnvironment>\n+   </PropertyGroup>\n+\n+   <PropertyGroup Label=\"Vcpkg\">\n+    <VcpkgEnabled>true</VcpkgEnabled>\n+    <VcpkgEnableManifest>true</VcpkgEnableManifest>\n+    <VcpkgManifestInstall>true</VcpkgManifestInstall>\n+    <VcpkgUseStatic>true</VcpkgUseStatic>\n+    <VcpkgAutoLink>true</VcpkgAutoLink>\n+    <VcpkgConfiguration>$(Configuration)</VcpkgConfiguration>\n+  </PropertyGroup>\n+\n+  <PropertyGroup Condition=\"'$(WindowsTargetPlatformVersion)'=='' and !Exists('$(WindowsSdkDir)\\DesignTime\\CommonConfiguration\\Neutral\\Windows.props')\">\n+     <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' == ''\">$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v10.0@ProductVersion)</WindowsTargetPlatformVersion_10>\n+     <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' == ''\">$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Microsoft SDKs\\Windows\\v10.0@ProductVersion)</WindowsTargetPlatformVersion_10>\n+     <!-- Sometimes the version in the registry has to .0 suffix, and sometimes it doesn't. Check and add it -->\n+     <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' != '' and !$(WindowsTargetPlatformVersion_10.EndsWith('.0'))\">$(WindowsTargetPlatformVersion_10).0</WindowsTargetPlatformVersion_10>\n+     <WindowsTargetPlatformVersion>$(WindowsTargetPlatformVersion_10)</WindowsTargetPlatformVersion>\n+   </PropertyGroup>\n+\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+\n+  <PropertyGroup Condition=\"'$(Configuration)'=='Debug'\" Label=\"Configuration\">\n+    <LinkIncremental>true</LinkIncremental>\n+    <WholeProgramOptimization>false</WholeProgramOptimization>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v142</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\$(ProjectName)\\</OutDir>\n+    <IntDir>$(Platform)\\$(Configuration)\\$(ProjectName)\\</IntDir>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)'=='Release'\" Label=\"Configuration\">\n+    <LinkIncremental>false</LinkIncremental>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v142</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\$(ProjectName)\\</OutDir>\n+    <IntDir>$(Platform)\\$(Configuration)\\$(ProjectName)\\</IntDir>\n+  </PropertyGroup>\n+\n+<ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <SDLCheck>true</SDLCheck>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+    </Link>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <SDLCheck>true</SDLCheck>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+    </Link>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup>\n+    <ClCompile>\n+      <WarningLevel>Level3</WarningLevel>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <AdditionalOptions>/utf-8 /std:c++17 %(AdditionalOptions)</AdditionalOptions>\n+      <DisableSpecificWarnings>4018;4221;4244;4267;4334;4715;4805;4834</DisableSpecificWarnings>\n+      <TreatWarningAsError>true</TreatWarningAsError>\n+      <PreprocessorDefinitions>_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING;_SILENCE_CXX17_OLD_ALLOCATOR_MEMBERS_DEPRECATION_WARNING;ZMQ_STATIC;NOMINMAX;WIN32;HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;_CONSOLE;_WIN32_WINNT=0x0601;_WIN32_IE=0x0501;WIN32_LEAN_AND_MEAN;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;..\\..\\src\\secp256k1\\include;..\\..\\src\\leveldb\\include;..\\..\\src\\leveldb\\helpers\\memenv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+    <Lib>\n+      <AdditionalOptions>/ignore:4221</AdditionalOptions>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <Import Project=\"common.init.vcxproj.user\" Condition=\"Exists('common.init.vcxproj.user')\" />\n+</Project>"
      },
      {
        "sha": "42150a23103773a96de2f25f86de7ccb589e821e",
        "filename": "build_msvc/common.qt.init.vcxproj",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/common.qt.init.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/common.qt.init.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.qt.init.vcxproj?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+\n+  <PropertyGroup Label=\"QtGlobals\">\n+    <QtBaseDir>C:\\Qt5.9.8_x64_static_vs2019</QtBaseDir>\n+    <QtPluginsLibraryDir>$(QtBaseDir)\\plugins</QtPluginsLibraryDir>\n+    <QtLibraryDir>$(QtBaseDir)\\lib</QtLibraryDir>\n+    <QtIncludeDir>$(QtBaseDir)\\include</QtIncludeDir>\n+    <QtIncludes>$(QtIncludeDir);$(QtIncludeDir)\\QtNetwork;$(QtIncludeDir)\\QtCore;$(QtIncludeDir)\\QtWidgets;$(QtIncludeDir)\\QtGui;</QtIncludes>\n+    <GeneratedFilesOutDir>.\\QtGeneratedFiles\\qt</GeneratedFilesOutDir>\n+    <QtToolsDir>$(QtBaseDir)\\bin</QtToolsDir>\n+    <QtReleaseLibraries>$(QtPluginsLibraryDir)\\platforms\\qminimal.lib;$(QtPluginsLibraryDir)\\platforms\\qwindows.lib;$(QtLibraryDir)\\qtfreetype.lib;$(QtLibraryDir)\\qtharfbuzz.lib;$(QtLibraryDir)\\qtlibpng.lib;$(QtLibraryDir)\\qtpcre2.lib;$(QtLibraryDir)\\Qt5AccessibilitySupport.lib;$(QtLibraryDir)\\Qt5Core.lib;$(QtLibraryDir)\\Qt5Concurrent.lib;$(QtLibraryDir)\\Qt5EventDispatcherSupport.lib;$(QtLibraryDir)\\Qt5FontDatabaseSupport.lib;$(QtLibraryDir)\\Qt5Gui.lib;$(QtLibraryDir)\\Qt5Network.lib;$(QtLibraryDir)\\Qt5PlatformCompositorSupport.lib;$(QtLibraryDir)\\Qt5ThemeSupport.lib;$(QtLibraryDir)\\Qt5Widgets.lib;$(QtLibraryDir)\\Qt5WinExtras.lib;$(QtLibraryDir)\\qtmain.lib;userenv.lib;netapi32.lib;imm32.lib;Dwmapi.lib;version.lib;winmm.lib;UxTheme.lib</QtReleaseLibraries>\n+    <QtDebugLibraries>$(QtPluginsLibraryDir)\\platforms\\qwindowsd.lib;$(QtPluginsLibraryDir)\\platforms\\qminimald.lib;$(QtLibraryDir)\\*d.lib;crypt32.lib;userenv.lib;netapi32.lib;imm32.lib;Dwmapi.lib;version.lib;winmm.lib;UxTheme.lib</QtDebugLibraries>\n+  </PropertyGroup>\n+\n+</Project>"
      },
      {
        "sha": "4bbcc3767f63b23225a70f672764947637d9666c",
        "filename": "build_msvc/common.vcxproj",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/common.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/common.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.vcxproj?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+<PropertyGroup><BuildDependsOn>$(BuildDependsOn);CopyBuildArtifacts</BuildDependsOn></PropertyGroup>\n+  <Target Name=\"CopyBuildArtifacts\" Condition=\"'$(ConfigurationType)' != 'StaticLibrary'\">\n+    <ItemGroup>\n+      <BuildArtifacts Include=\"$(OutDir)$(TargetName)$(TargetExt)\"></BuildArtifacts>\n+      <BuildArtifacts Include=\"$(OutDir)$(TargetName).pdb\"></BuildArtifacts>\n+    </ItemGroup>\n+    <Copy SourceFiles=\"@(BuildArtifacts)\" SkipUnchangedFiles=\"true\" DestinationFolder=\"..\\..\\src\\\" Condition=\"'$(OutDir)' != ''\"></Copy>\n+  </Target>\n+  <Import Project=\"common.vcxproj.user\" Condition=\"Exists('common.vcxproj.user')\" />\n+</Project>"
      },
      {
        "sha": "620df72a2f76480b7645befdb8e889bf8c779046",
        "filename": "build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{0667528C-D734-4009-ADF9-C0D6C4A5A5A6}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup>\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "b47d62b29587ee85536232e599c1c9c4a1429b9a",
        "filename": "build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{7C87E378-DF58-482E-AA2F-1BC129BC19CE}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "32cb75bf871c180dafb4a0b5c0fbd4a0722fa18f",
        "filename": "build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{6190199C-6CF4-4DAD-BFBD-93FA72A760C1}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "6a3c9f1dc125b9e44fb27b11f4bdab81f12dd5fc",
        "filename": "build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "status": "added",
        "additions": 232,
        "deletions": 0,
        "changes": 232,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,232 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <Import Project=\"..\\common.qt.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}</ProjectGuid>\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\qt\\addressbookpage.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\addresstablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\askpassphrasedialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bantablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoin.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinaddressvalidator.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinamountfield.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoingui.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinstrings.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinunits.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\clientmodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\coincontroldialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\coincontroltreewidget.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\createwalletdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\csvmodelwriter.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\editaddressdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\guiutil.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\intro.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\modaloverlay.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\networkstyle.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\notificator.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\openuridialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\optionsdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\optionsmodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\overviewpage.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\paymentserver.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\peertablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\platformstyle.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\psbtoperationsdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\qrimagewidget.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\qvalidatedlineedit.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\qvaluecombobox.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\receivecoinsdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\receiverequestdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\recentrequeststablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\rpcconsole.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\sendcoinsdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\sendcoinsentry.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\signverifymessagedialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\splashscreen.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\trafficgraphwidget.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactiondesc.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactiondescdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactionfilterproxy.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactionrecord.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactiontablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactionview.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\utilitydialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletcontroller.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletframe.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletmodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletmodeltransaction.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletview.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\winshutdownmonitor.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addressbookpage.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addresstablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_askpassphrasedialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bantablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoin.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinaddressvalidator.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinamountfield.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoingui.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinunits.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_clientmodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_coincontroldialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_coincontroltreewidget.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_createwalletdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_csvmodelwriter.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_editaddressdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_guiutil.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_intro.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_modaloverlay.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_networkstyle.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_notificator.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_openuridialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_optionsdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_optionsmodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_overviewpage.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_paymentserver.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_peertablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_platformstyle.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_psbtoperationsdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qrimagewidget.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qvalidatedlineedit.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qvaluecombobox.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_receivecoinsdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_receiverequestdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_recentrequeststablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_rpcconsole.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_sendcoinsdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_sendcoinsentry.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_signverifymessagedialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_splashscreen.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_trafficgraphwidget.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiondesc.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiondescdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionfilterproxy.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionrecord.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiontablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionview.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_utilitydialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletcontroller.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletframe.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletmodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletmodeltransaction.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletview.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_winshutdownmonitor.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\rcc\\qrc_bitcoin.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\rcc\\qrc_bitcoin_locale.cpp\" />\n+  </ItemGroup>\n+\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PreprocessorDefinitions>_AMD64_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PreprocessorDefinitions>_AMD64_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PreprocessorDefinitions>_X86_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PreprocessorDefinitions>_X86_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemGroup>\n+    <QT_MOC Include=\"..\\..\\src\\qt\\bitcoinamountfield.cpp\" />\n+    <QT_MOC Include=\"..\\..\\src\\qt\\intro.cpp\" />\n+    <QT_MOC Include=\"..\\..\\src\\qt\\overviewpage.cpp\" />\n+    <QT_MOC Include=\"..\\..\\src\\qt\\rpcconsole.cpp\" />\n+    <MocHeaderFiles Include=\"..\\..\\src\\qt\\*.h\" />\n+    <ResourceTemplates Include=\"..\\..\\src\\qt\\*.qrc\" />\n+    <UiFormFiles Include=\"..\\..\\src\\qt\\forms\\*.ui\" />\n+    <TranslationFiles Include=\"..\\..\\src\\qt\\locale\\*.ts\" />\n+  </ItemGroup>\n+\n+  <Target Name=\"moccode\" Inputs=\"@(QT_MOC)\" Outputs=\"@(QT_MOC->'$(GeneratedFilesOutDir)\\%(Filename).moc')\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the libbitcoin_qt moc code include generation task.</ErrorText>\n+    </PropertyGroup>\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\" />\n+    <Exec Command=\"echo Performing libbitcoin_qt moc code include generation task, output path $(GeneratedFilesOutDir).\" />\n+    <Exec Command=\"echo $(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(QT_MOC.Identity)&quot; -o $(GeneratedFilesOutDir)\\%(Filename).moc.\" />\n+    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(QT_MOC.Identity)&quot; -o $(GeneratedFilesOutDir)\\%(Filename).moc\" />\n+  </Target>\n+\n+  <Target Name=\"mocheader\" Inputs=\"@(MocHeaderFiles)\" Outputs=\"@(MocHeaderFiles->'$(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp')\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the libbitcoin_qt moc header generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing libbitcoin_qt moc header generation task, output path $(GeneratedFilesOutDir)\\moc.\" />\n+    <Exec Command=\"echo $(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocHeaderFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp.\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\moc\\\" />\n+    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocHeaderFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp\" />\n+  </Target>\n+\n+  <Target Name=\"forms\" Inputs=\"@(UiFormFiles)\" Outputs=\"@(UiFormFiles->'$(GeneratedFilesOutDir)\\forms\\ui_%(Filename).h')\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the libbitcoin_qt forms header generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing libbitcoin_qt forms header generation task, output path $(GeneratedFilesOutDir)\\forms.\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\forms\\\" />\n+    <Exec Command=\"$(QtToolsDir)\\uic.exe &quot;%(UiFormFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\forms\\ui_%(Filename).h\" />\n+  </Target>\n+\n+  <Target Name=\"translation\" Inputs=\"@(TranslationFiles)\" Outputs=\"@(TranslationFiles->'..\\..\\src\\qt\\locale\\%(Filename).qm')\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the libbitcoin_qt translation file generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing libbitcoin_qt translation file generation task.\" />\n+    <Exec Command=\"$(QtToolsDir)\\lrelease.exe &quot;%(TranslationFiles.Identity)&quot; -qm ..\\..\\src\\qt\\locale\\%(Filename).qm\" />\n+  </Target>\n+\n+  <Target Name=\"resource\" Inputs=\"@(ResourceTemplates)\" Outputs=\"@(ResourceTemplates->'$(GeneratedFilesOutDir)\\rcc\\qrc_%(Filename).cpp')\" DependsOnTargets=\"translation\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the libbitcoin_qt resource code generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing libbitcoin_qt resource code generation task, output path $(GeneratedFilesOutDir)\\rcc.\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\rcc\\\" />\n+    <Exec Command=\"$(QtToolsDir)\\rcc.exe --verbose --name %(Filename) &quot;%(ResourceTemplates.Identity)&quot; -o $(GeneratedFilesOutDir)\\rcc\\qrc_%(Filename).cpp\" />\n+  </Target>\n+\n+  <Target Name=\"qtclean\">\n+    <Exec Command=\"echo Clean libbitcoin_qt generated files from $(GeneratedFilesOutDir).\" />\n+    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\forms;$(GeneratedFilesOutDir)\\moc;$(GeneratedFilesOutDir)\\rcc;\" />\n+    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\" />\n+  </Target>\n+\n+  <PropertyGroup>\n+    <BuildDependsOn>\n+        moccode;\n+        mocheader;\n+        forms;\n+        translation;\n+        resource;\n+        $(BuildDependsOn);\n+    </BuildDependsOn>\n+  </PropertyGroup>\n+  <PropertyGroup>\n+    <CleanDependsOn>\n+        qtclean;\n+        $(CleanDependsOn);\n+    </CleanDependsOn>\n+  </PropertyGroup>\n+\n+</Project>"
      },
      {
        "sha": "58e90dbaeb438623922423bfd1890d16e84543cc",
        "filename": "build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{460FEE33-1FE1-483F-B3BF-931FF8E969A5}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+    <ItemGroup>\n+@SOURCE_FILES@\n+    <ClCompile Include=\"..\\..\\src\\wallet\\init.cpp\">\n+      <ObjectFileName>$(IntDir)wallet_init.obj</ObjectFileName>\n+    </ClCompile>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "6ec40461c2adcd99965486308e490ed09ff8de03",
        "filename": "build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,17 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\util\\url.cpp\" />\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "9c8279c72abad60972a59d19cd663765e590cd01",
        "filename": "build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{93B86837-B543-48A5-A89B-7C87ABB77DF2}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "1a6b7b6b92670f31d4ae6ad79685744e85358b9f",
        "filename": "build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "e86eea81e6567b0306577ddc761a66b0221f2442",
        "filename": "build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{792D487F-F14C-49FC-A9DE-3FC150F31C3F}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "4cb0bdc90218add3a0cbfb365e15a7ba8d955e5c",
        "filename": "build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,37 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{2B384FA8-9EE1-4544-93CB-0D733C25E8CE}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\arith_uint256.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\consensus\\merkle.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\consensus\\tx_check.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\aes.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\chacha20.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\hmac_sha256.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\hmac_sha512.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\ripemd160.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\sha1.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\sha256.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\sha256_sse4.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\sha512.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\hash.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\primitives\\block.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\primitives\\transaction.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\pubkey.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\bitcoinconsensus.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\interpreter.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\script.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\script_error.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\uint256.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\util\\strencodings.cpp\" />\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "1610ae7d8661f421df97c103ae57bf80e9399371",
        "filename": "build_msvc/libleveldb/libleveldb.vcxproj",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libleveldb/libleveldb.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libleveldb/libleveldb.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libleveldb/libleveldb.vcxproj?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,61 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{18430FEF-6B61-4C53-B396-718E02850F1B}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\builder.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\c.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\dbformat.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\db_impl.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\db_iter.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\dumpfile.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\filename.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\log_reader.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\log_writer.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\memtable.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\repair.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\table_cache.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\version_edit.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\version_set.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\write_batch.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\helpers\\memenv\\memenv.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\block.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\block_builder.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\filter_block.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\format.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\iterator.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\merger.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\table.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\table_builder.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\two_level_iterator.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\arena.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\bloom.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\cache.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\coding.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\comparator.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\crc32c.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\env.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\env_windows.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\filter_policy.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\hash.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\histogram.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\logging.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\options.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\status.cc\" />\n+  </ItemGroup>\n+  <ItemDefinitionGroup>\n+     <ClCompile>\n+       <PreprocessorDefinitions>HAVE_CRC32C=0;HAVE_SNAPPY=0;__STDC_LIMIT_MACROS;LEVELDB_IS_BIG_ENDIAN=0;_UNICODE;UNICODE;_CRT_NONSTDC_NO_DEPRECATE;LEVELDB_PLATFORM_WINDOWS;LEVELDB_ATOMIC_PRESENT;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+       <DisableSpecificWarnings>4244;4267;4312;4722;</DisableSpecificWarnings>\n+       <AdditionalIncludeDirectories>..\\..\\src\\leveldb;..\\..\\src\\leveldb\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+     </ClCompile>\n+  </ItemDefinitionGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "c42918d6e17737ad8a473a5d597e4c162108e42f",
        "filename": "build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libsecp256k1/libsecp256k1.vcxproj?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\secp256k1\\src\\secp256k1.c\" />\n+  </ItemGroup>\n+    <ItemDefinitionGroup>\n+    <ClCompile>\n+      <PreprocessorDefinitions>ENABLE_MODULE_ECDH;ENABLE_MODULE_RECOVERY;ENABLE_MODULE_EXTRAKEYS;ENABLE_MODULE_SCHNORRSIG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+       <AdditionalIncludeDirectories>..\\..\\src\\secp256k1;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+     </ClCompile>\n+  </ItemDefinitionGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "5978b9a0d96f0c107da6c2beae79dae4c7536749",
        "filename": "build_msvc/libsecp256k1_config.h",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libsecp256k1_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libsecp256k1_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libsecp256k1_config.h?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,32 @@\n+/**********************************************************************\n+ * Copyright (c) 2013, 2014 Pieter Wuille                             *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef BITCOIN_LIBSECP256K1_CONFIG_H\n+#define BITCOIN_LIBSECP256K1_CONFIG_H\n+\n+#undef USE_ASM_X86_64\n+#undef USE_ENDOMORPHISM\n+#undef USE_FIELD_10X26\n+#undef USE_FIELD_5X52\n+#undef USE_FIELD_INV_BUILTIN\n+#undef USE_FIELD_INV_NUM\n+#undef USE_NUM_GMP\n+#undef USE_NUM_NONE\n+#undef USE_SCALAR_4X64\n+#undef USE_SCALAR_8X32\n+#undef USE_SCALAR_INV_BUILTIN\n+#undef USE_SCALAR_INV_NUM\n+\n+#define USE_NUM_NONE 1\n+#define USE_FIELD_INV_BUILTIN 1\n+#define USE_SCALAR_INV_BUILTIN 1\n+#define USE_FIELD_10X26 1\n+#define USE_SCALAR_8X32 1\n+\n+#define ECMULT_GEN_PREC_BITS 4\n+#define ECMULT_WINDOW_SIZE 15\n+\n+#endif /* BITCOIN_LIBSECP256K1_CONFIG_H */"
      },
      {
        "sha": "b5e844010e9197706dc0d75582fe2d3983bebfb5",
        "filename": "build_msvc/libtest_util/libtest_util.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libtest_util/libtest_util.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libtest_util/libtest_util.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libtest_util/libtest_util.vcxproj.in?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{868474FD-35F6-4400-8EED-30A33E7521D4}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "0f13a57241350d9bb8a37def99f0d5b2f91ad589",
        "filename": "build_msvc/libunivalue/libunivalue.vcxproj",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libunivalue/libunivalue.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/libunivalue/libunivalue.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libunivalue/libunivalue.vcxproj?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{5724BA7D-A09A-4BA8-800B-C4C1561B3D69}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue_get.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue_read.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue_write.cpp\" />\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "12868a987418158684c5aa5dd6eceef6b7116ba3",
        "filename": "build_msvc/msbuild/tasks/hexdump.targets",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/msbuild/tasks/hexdump.targets",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/msbuild/tasks/hexdump.targets",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msbuild/tasks/hexdump.targets?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,53 @@\n+<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <UsingTask\n+    TaskName=\"HeaderFromHexdump\"\n+    TaskFactory=\"CodeTaskFactory\"\n+    AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll\" >\n+    <ParameterGroup>\n+        <RawFilePath Required=\"true\" />\n+        <HeaderFilePath Required=\"true\" />\n+        <SourceHeader Required=\"true\" />\n+        <SourceFooter Required=\"true\" />\n+    </ParameterGroup>\n+    <Task>\n+      <Using Namespace=\"System\"/>\n+      <Using Namespace=\"System.IO\"/>\n+      <Code Type=\"Fragment\" Language=\"cs\">\n+<![CDATA[\n+Log.LogMessage(\"msbuild inline hexdump task for \" + RawFilePath + \".\");\n+if(File.Exists(RawFilePath) == false) {\n+    Log.LogError(\"hexdump task could not locate \" + RawFilePath + \".\");\n+}\n+else {\n+    FileInfo inFileInfo = new FileInfo(RawFilePath);\n+    FileInfo outFileInfo = new FileInfo(HeaderFilePath);\n+\n+    if (outFileInfo.Exists == false || inFileInfo.LastWriteTime > outFileInfo.LastWriteTime)\n+    {\n+      using (Stream inStm = File.OpenRead(RawFilePath))\n+      {\n+          using (StreamWriter sw = new StreamWriter(HeaderFilePath))\n+          {\n+              sw.WriteLine(SourceHeader);\n+              int count = 0;\n+              int rawChar = inStm.ReadByte();\n+              while(rawChar != -1)\n+              {\n+                  sw.Write(\"0x{0:x2}, \", rawChar);\n+                  count++;\n+                  if(count % 8 == 0)\n+                  {\n+                      sw.WriteLine();\n+                  }\n+                  rawChar = inStm.ReadByte();\n+              }\n+              sw.WriteLine(SourceFooter);\n+          }\n+      }\n+   }\n+}\n+]]>\n+      </Code>\n+    </Task>\n+  </UsingTask>\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "2ccb8b30e053f425e2b590a2ae5ee6d51523a957",
        "filename": "build_msvc/msbuild/tasks/replaceinfile.targets",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/msbuild/tasks/replaceinfile.targets",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/msbuild/tasks/replaceinfile.targets",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msbuild/tasks/replaceinfile.targets?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,35 @@\n+<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <UsingTask\n+    TaskName=\"ReplaceInFile\"\n+    TaskFactory=\"CodeTaskFactory\"\n+    AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll\" >\n+    <ParameterGroup>\n+        <FilePath Required=\"true\" />\n+        <Replace Required=\"true\" />\n+        <By Required=\"false\" />\n+        <ToFullPath Required=\"false\" />\n+    </ParameterGroup>\n+    <Task>\n+      <Using Namespace=\"System\"/>\n+      <Using Namespace=\"System.IO\"/>\n+      <Code Type=\"Fragment\" Language=\"cs\">\n+<![CDATA[\n+if(File.Exists(FilePath) == false) {\n+    Log.LogError(\"replaceinfile task could not locate \" + FilePath + \".\");\n+}\n+else {\n+    var data = File.ReadAllText(FilePath);\n+    var by = By;\n+    if (ToFullPath == \"true\")\n+    {\n+       by = Path.GetFullPath(by);\n+    }\n+    data = data.Replace(Replace, by);\n+    Log.LogMessage(\"Replace '\" + Replace + \"' by '\" + by + \"' in \" + FilePath);\n+    File.WriteAllText(FilePath, data, new System.Text.UTF8Encoding(false));\n+}\n+]]>\n+      </Code>\n+    </Task>\n+  </UsingTask>\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "d99b17d38127bec2623a42552f461979cee61531",
        "filename": "build_msvc/msvc-autogen.py",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/msvc-autogen.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/msvc-autogen.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msvc-autogen.py?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,86 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2016-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import os\n+import re\n+import argparse\n+from shutil import copyfile\n+\n+SOURCE_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'src'))\n+DEFAULT_PLATFORM_TOOLSET = R'v141'\n+\n+libs = [\n+    'libbitcoin_cli',\n+    'libbitcoin_common',\n+    'libbitcoin_crypto',\n+    'libbitcoin_server',\n+    'libbitcoin_util',\n+    'libbitcoin_wallet_tool',\n+    'libbitcoin_wallet',\n+    'libbitcoin_zmq',\n+    'bench_bitcoin',\n+    'libtest_util',\n+]\n+\n+ignore_list = [\n+]\n+\n+lib_sources = {}\n+\n+\n+def parse_makefile(makefile):\n+    with open(makefile, 'r', encoding='utf-8') as file:\n+        current_lib = ''\n+        for line in file.read().splitlines():\n+            if current_lib:\n+                source = line.split()[0]\n+                if source.endswith('.cpp') and not source.startswith('$') and source not in ignore_list:\n+                    source_filename = source.replace('/', '\\\\')\n+                    object_filename = source.replace('/', '_')[:-4] + \".obj\"\n+                    lib_sources[current_lib].append((source_filename, object_filename))\n+                if not line.endswith('\\\\'):\n+                    current_lib = ''\n+                continue\n+            for lib in libs:\n+                _lib = lib.replace('-', '_')\n+                if re.search(_lib + '.*_SOURCES \\\\= \\\\\\\\', line):\n+                    current_lib = lib\n+                    lib_sources[current_lib] = []\n+                    break\n+\n+def set_common_properties(toolset):\n+    with open(os.path.join(SOURCE_DIR, '../build_msvc/common.init.vcxproj'), 'r', encoding='utf-8') as rfile:\n+        s = rfile.read()\n+        s = re.sub('<PlatformToolset>.*?</PlatformToolset>', '<PlatformToolset>'+toolset+'</PlatformToolset>', s)\n+    with open(os.path.join(SOURCE_DIR, '../build_msvc/common.init.vcxproj'), 'w', encoding='utf-8',newline='\\n') as wfile:\n+        wfile.write(s)\n+\n+def main():\n+    parser = argparse.ArgumentParser(description='Bitcoin-core msbuild configuration initialiser.')\n+    parser.add_argument('-toolset', nargs='?',help='Optionally sets the msbuild platform toolset, e.g. v142 for Visual Studio 2019.'\n+         ' default is %s.'%DEFAULT_PLATFORM_TOOLSET)\n+    args = parser.parse_args()\n+    if args.toolset:\n+        set_common_properties(args.toolset)\n+\n+    for makefile_name in os.listdir(SOURCE_DIR):\n+        if 'Makefile' in makefile_name:\n+            parse_makefile(os.path.join(SOURCE_DIR, makefile_name))\n+    for key, value in lib_sources.items():\n+        vcxproj_filename = os.path.abspath(os.path.join(os.path.dirname(__file__), key, key + '.vcxproj'))\n+        content = ''\n+        for source_filename, object_filename in value:\n+            content += '    <ClCompile Include=\"..\\\\..\\\\src\\\\' + source_filename + '\">\\n'\n+            content += '      <ObjectFileName>$(IntDir)' + object_filename + '</ObjectFileName>\\n'\n+            content += '    </ClCompile>\\n'\n+        with open(vcxproj_filename + '.in', 'r', encoding='utf-8') as vcxproj_in_file:\n+            with open(vcxproj_filename, 'w', encoding='utf-8') as vcxproj_file:\n+                vcxproj_file.write(vcxproj_in_file.read().replace(\n+                    '@SOURCE_FILES@\\n', content))\n+    copyfile(os.path.join(SOURCE_DIR,'../build_msvc/bitcoin_config.h'), os.path.join(SOURCE_DIR, 'config/bitcoin-config.h'))\n+    copyfile(os.path.join(SOURCE_DIR,'../build_msvc/libsecp256k1_config.h'), os.path.join(SOURCE_DIR, 'secp256k1/src/libsecp256k1-config.h'))\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "2095c0c3213513510eb6106852943fc991d8e2b1",
        "filename": "build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "status": "added",
        "additions": 122,
        "deletions": 0,
        "changes": 122,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,122 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <Import Project=\"..\\common.qt.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{51201D5E-D939-4854-AE9D-008F03FF518E}</ProjectGuid>\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\test\\util\\setup_common.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\addressbooktests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\apptests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\compattests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\rpcnestedtests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\test_main.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\uritests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\util.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\wallettests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\test\\wallet_test_fixture.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addressbooktests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_apptests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_compattests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_rpcnestedtests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_uritests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_wallettests.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_qt\\libbitcoin_qt.vcxproj\">\n+      <Project>{2b4abff8-d1fd-4845-88c9-1f3c0a6512bf}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Release'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>..\\libbitcoin_qt\\$(GeneratedFilesOutDir)\\..\\;$(QtIncludeDir)\\QtTest;$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>$(QtLibraryDir)\\Qt5Test.lib;$(QtReleaseLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n+\t  <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+    </Link>\n+  </ItemDefinitionGroup>\n+\n+    <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Debug'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>..\\libbitcoin_qt\\$(GeneratedFilesOutDir)\\..\\;$(QtIncludeDir)\\QtTest;$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>$(QtDebugLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n+\t  <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\addressbooktests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\apptests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\compattests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\rpcnestedtests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\uritests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\wallettests.h\" />\n+  </ItemGroup>\n+  <Target Name=\"moccode\" Inputs=\"@(MocTestFiles)\" Outputs=\"@(MocTestFiles->'$(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp')\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the test_bitcoin-qt moc code generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing test_bitcoin-qt moc generation task, output path $(GeneratedFilesOutDir)\\moc.\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\moc\\\" />\n+    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocTestFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp\" />\n+  </Target>\n+  <Target Name=\"QtTestCleanGeneratedFiles\">\n+    <Exec Command=\"echo Clean test_bitcoin-qt generated files from $(GeneratedFilesOutDir).\" />\n+    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\moc\\*\" />\n+    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\moc\" />\n+  </Target>\n+  <PropertyGroup>\n+    <BuildDependsOn>\n+       moccode;\n+       $(BuildDependsOn);\n+    </BuildDependsOn>\n+  </PropertyGroup>\n+  <PropertyGroup>\n+    <CleanDependsOn>\n+        QtTestCleanGeneratedFiles;\n+        $(CleanDependsOn);\n+    </CleanDependsOn>\n+  </PropertyGroup>\n+</Project>"
      },
      {
        "sha": "5c4b777d5164bbc3354b26f262310e9a385a99cd",
        "filename": "build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "status": "added",
        "additions": 73,
        "deletions": 0,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin/test_bitcoin.vcxproj?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,73 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{A56B73DB-D46D-4882-8374-1FE3FFA08F07}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\test\\*_properties.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\test\\*_tests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\test\\gen\\*_gen.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\test\\main.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\test\\util\\*.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_fixture.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_tests.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libtest_util\\libtest_util.vcxproj\">\n+      <Project>{1e065f03-3566-47d0-8fa9-daa72b084e7d}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Target Name=\"RawBenchHeaderGen\" BeforeTargets=\"PrepareForBuild\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the JSON test header generation task.</ErrorText>\n+    </PropertyGroup>\n+    <ItemGroup>\n+      <JsonTestFile Include=\"..\\..\\src\\test\\data\\*.json\" />\n+      <RawTestFile Include=\"..\\..\\src\\test\\data\\*.raw\" />\n+    </ItemGroup>\n+    <HeaderFromHexdump RawFilePath=\"%(RawTestFile.FullPath)\" HeaderFilePath=\"%(RawTestFile.FullPath).h\" SourceHeader=\"static unsigned const char %(RawTestFile.Filename)_raw[] = {\" SourceFooter=\"};\" />\n+    <HeaderFromHexdump RawFilePath=\"%(JsonTestFile.FullPath)\" HeaderFilePath=\"%(JsonTestFile.FullPath).h\" SourceHeader=\"namespace json_tests{ static unsigned const char %(JsonTestFile.Filename)[] = {\" SourceFooter=\"};}\" />\n+  </Target>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Label=\"hexdumpTarget\" Project=\"..\\msbuild\\tasks\\hexdump.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "5fdd97dc783e587ab68c49fd5ee06a53df2ec88f",
        "filename": "build_msvc/testconsensus/testconsensus.cpp",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/testconsensus/testconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/testconsensus/testconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/testconsensus/testconsensus.cpp?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,54 @@\n+// Copyright (c) 2018-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iostream>\n+\n+// bitcoin includes.\n+#include <..\\src\\script\\bitcoinconsensus.h>\n+#include <..\\src\\primitives\\transaction.h>\n+#include <..\\src\\script\\script.h>\n+#include <..\\src\\streams.h>\n+#include <..\\src\\version.h>\n+\n+CMutableTransaction BuildSpendingTransaction(const CScript& scriptSig, const CScriptWitness& scriptWitness, int nValue = 0)\n+{\n+    CMutableTransaction txSpend;\n+    txSpend.nVersion = 1;\n+    txSpend.nLockTime = 0;\n+    txSpend.vin.resize(1);\n+    txSpend.vout.resize(1);\n+    txSpend.vin[0].scriptWitness = scriptWitness;\n+    txSpend.vin[0].prevout.hash = uint256();\n+    txSpend.vin[0].prevout.n = 0;\n+    txSpend.vin[0].scriptSig = scriptSig;\n+    txSpend.vin[0].nSequence = CTxIn::SEQUENCE_FINAL;\n+    txSpend.vout[0].scriptPubKey = CScript();\n+    txSpend.vout[0].nValue = nValue;\n+\n+    return txSpend;\n+}\n+\n+int main()\n+{\n+    std::cout << \"bitcoinconsensus version: \" << bitcoinconsensus_version() << std::endl;\n+\n+    CScript pubKeyScript;\n+    pubKeyScript << OP_1 << OP_0 << OP_1;\n+\n+    int amount = 0; // 600000000;\n+\n+    CScript scriptSig;\n+    CScriptWitness scriptWitness;\n+    CTransaction vanillaSpendTx = BuildSpendingTransaction(scriptSig, scriptWitness, amount);\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << vanillaSpendTx;\n+\n+    bitcoinconsensus_error err;\n+    auto op0Result = bitcoinconsensus_verify_script_with_amount(pubKeyScript.data(), pubKeyScript.size(), amount, (const unsigned char*)&stream[0], stream.size(), 0, bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL, &err);\n+    std::cout << \"Op0 result: \" << op0Result << \", error code \" << err << std::endl;\n+\n+    getchar();\n+\n+    return 0;\n+}"
      },
      {
        "sha": "776c40920abdd43ca179132ad31c77dd3b2685a3",
        "filename": "build_msvc/testconsensus/testconsensus.vcxproj",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/testconsensus/testconsensus.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/testconsensus/testconsensus.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/testconsensus/testconsensus.vcxproj?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,28 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{E78473E9-B850-456C-9120-276301E04C06}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"testconsensus.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2B384FA8-9EE1-4544-93CB-0D733C25E8CE}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "dfd3929c4410b92364a6f314295ddbaab7912bf7",
        "filename": "build_msvc/vcpkg.json",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/vcpkg.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/build_msvc/vcpkg.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/vcpkg.json?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,20 @@\n+{\n+  \"name\": \"bitcoin-core\",\n+  \"version-string\": \"1\",\n+  \"dependencies\": [\n+    \"berkeleydb\",\n+    \"boost-filesystem\",\n+    \"boost-multi-index\",\n+    \"boost-process\",\n+    \"boost-signals2\",\n+    \"boost-test\",\n+    \"boost-thread\",\n+    \"sqlite3\",\n+    \"double-conversion\",\n+    {\n+      \"name\": \"libevent\",\n+      \"features\": [\"thread\"]\n+    },\n+    \"zeromq\"\n+  ]\n+}"
      },
      {
        "sha": "3c5f04c39e348d407718c7fce8cd4c69ab6cf0db",
        "filename": "ci/README.md",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/README.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,65 @@\n+## CI Scripts\n+\n+This directory contains scripts for each build step in each build stage.\n+\n+### Running a Stage Locally\n+\n+Be aware that the tests will be built and run in-place, so please run at your own risk.\n+If the repository is not a fresh git clone, you might have to clean files from previous builds or test runs first.\n+\n+The ci needs to perform various sysadmin tasks such as installing packages or writing to the user's home directory.\n+While most of the actions are done inside a docker container, this is not possible for all. Thus, cache directories,\n+such as the depends cache, previous release binaries, or ccache, are mounted as read-write into the docker container. While it should be fine to run\n+the ci system locally on you development box, the ci scripts can generally be assumed to have received less review and\n+testing compared to other parts of the codebase. If you want to keep the work tree clean, you might want to run the ci\n+system in a virtual machine with a Linux operating system of your choice.\n+\n+To allow for a wide range of tested environments, but also ensure reproducibility to some extent, the test stage\n+requires `docker` to be installed. To install all requirements on Ubuntu, run\n+\n+```\n+sudo apt install docker.io bash\n+```\n+\n+To run the default test stage,\n+\n+```\n+./ci/test_run_all.sh\n+```\n+\n+To run the test stage with a specific configuration,\n+\n+```\n+FILE_ENV=\"./ci/test/00_setup_env_arm.sh\" ./ci/test_run_all.sh\n+```\n+\n+### Configurations\n+\n+The test files (`FILE_ENV`) are constructed to test a wide range of\n+configurations, rather than a single pass/fail. This helps to catch build\n+failures and logic errors that present on platforms other than the ones the\n+author has tested.\n+\n+Some builders use the dependency-generator in `./depends`, rather than using\n+the system package manager to install build dependencies. This guarantees that\n+the tester is using the same versions as the release builds, which also use\n+`./depends`.\n+\n+If no `FILE_ENV` has been specified or values are left out, `00_setup_env.sh`\n+is used as the default configuration with fallback values.\n+\n+It is also possible to force a specific configuration without modifying the\n+file. For example,\n+\n+```\n+MAKEJOBS=\"-j1\" FILE_ENV=\"./ci/test/00_setup_env_arm.sh\" ./ci/test_run_all.sh\n+```\n+\n+The files starting with `0n` (`n` greater than 0) are the scripts that are run\n+in order.\n+\n+### Cache\n+\n+In order to avoid rebuilding all dependencies for each build, the binaries are\n+cached and re-used when possible. Changes in the dependency-generator will\n+trigger cache-invalidation and rebuilds as necessary."
      },
      {
        "sha": "fae424051db6fbab7cfef56d701a77b4c06b24b6",
        "filename": "ci/lint/04_install.sh",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/lint/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/lint/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/04_install.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,20 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+\n+travis_retry sudo apt update && sudo apt install -y clang-format-9\n+sudo update-alternatives --install /usr/bin/clang-format      clang-format      $(which clang-format-9     ) 100\n+sudo update-alternatives --install /usr/bin/clang-format-diff clang-format-diff $(which clang-format-diff-9) 100\n+\n+travis_retry pip3 install codespell==1.17.1\n+travis_retry pip3 install flake8==3.8.3\n+travis_retry pip3 install yq\n+travis_retry pip3 install mypy==0.781\n+\n+SHELLCHECK_VERSION=v0.7.1\n+curl -sL \"https://github.com/koalaman/shellcheck/releases/download/${SHELLCHECK_VERSION}/shellcheck-${SHELLCHECK_VERSION}.linux.x86_64.tar.xz\" | tar --xz -xf - --directory /tmp/\n+export PATH=\"/tmp/shellcheck-${SHELLCHECK_VERSION}:${PATH}\""
      },
      {
        "sha": "2987812c8e64bab1648a3dc04492b1d338cdf047",
        "filename": "ci/lint/05_before_script.sh",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/lint/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/lint/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/05_before_script.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,9 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+\n+git fetch --unshallow"
      },
      {
        "sha": "dc0f9b923bb14a66f6d83c52f5f0aa2eabdf392d",
        "filename": "ci/lint/06_script.sh",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/lint/06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/lint/06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/06_script.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,30 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+\n+if [ \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then\n+  # TRAVIS_BRANCH will be present in a Travis environment. For builds triggered\n+  # by a pull request this is the name of the branch targeted by the pull request.\n+  # https://docs.travis-ci.com/user/environment-variables/\n+  COMMIT_RANGE=\"$TRAVIS_BRANCH..HEAD\"\n+  test/lint/commit-script-check.sh $COMMIT_RANGE\n+fi\n+\n+test/lint/git-subtree-check.sh src/crypto/ctaes\n+test/lint/git-subtree-check.sh src/secp256k1\n+test/lint/git-subtree-check.sh src/univalue\n+test/lint/git-subtree-check.sh src/leveldb\n+test/lint/git-subtree-check.sh src/crc32c\n+test/lint/check-doc.py\n+test/lint/check-rpc-mappings.py .\n+test/lint/lint-all.sh\n+\n+if [ \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" ] && [ \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then\n+    git log --merges --before=\"2 days ago\" -1 --format='%H' > ./contrib/verify-commits/trusted-sha512-root-commit\n+    travis_retry gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys $(<contrib/verify-commits/trusted-keys) &&\n+    ./contrib/verify-commits/verify-commits.py --clean-merge=2;\n+fi"
      },
      {
        "sha": "1b03c652dbbf5b51f8c05e85090ad6b3ce4a1a85",
        "filename": "ci/retry/README.md",
        "status": "added",
        "additions": 123,
        "deletions": 0,
        "changes": 123,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/retry/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/retry/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/retry/README.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,123 @@\n+retry - The command line retry tool\n+------------------------------------------\n+\n+Retry any shell command with exponential backoff or constant delay.\n+\n+### Instructions\n+\n+Install:\n+\n+retry is a shell script, so drop it somewhere and make sure it's added to your $PATH. Or you can use the following one-liner:\n+\n+```sh\n+sudo sh -c \"curl https://raw.githubusercontent.com/kadwanev/retry/master/retry -o /usr/local/bin/retry && chmod +x /usr/local/bin/retry\"\n+```\n+\n+If you're on OS X, retry is also on Homebrew:\n+\n+```\n+brew pull 27283\n+brew install retry\n+```\n+Not popular enough for homebrew-core. Please star this project to help.\n+\n+### Usage\n+\n+Help:\n+\n+`retry -?`\n+\n+    Usage: retry [options] -- execute command\n+        -h, -?, --help\n+        -v, --verbose                    Verbose output\n+        -t, --tries=#                    Set max retries: Default 10\n+        -s, --sleep=secs                 Constant sleep amount (seconds)\n+        -m, --min=secs                   Exponential Backoff: minimum sleep amount (seconds): Default 0.3\n+        -x, --max=secs                   Exponential Backoff: maximum sleep amount (seconds): Default 60\n+        -f, --fail=\"script +cmds\"        Fail Script: run in case of final failure\n+\n+### Examples\n+\n+No problem:\n+\n+`retry echo u work good`\n+\n+    u work good\n+\n+Test functionality:\n+\n+`retry 'echo \"y u no work\"; false'`\n+\n+    y u no work\n+    Before retry #1: sleeping 0.3 seconds\n+    y u no work\n+    Before retry #2: sleeping 0.6 seconds\n+    y u no work\n+    Before retry #3: sleeping 1.2 seconds\n+    y u no work\n+    Before retry #4: sleeping 2.4 seconds\n+    y u no work\n+    Before retry #5: sleeping 4.8 seconds\n+    y u no work\n+    Before retry #6: sleeping 9.6 seconds\n+    y u no work\n+    Before retry #7: sleeping 19.2 seconds\n+    y u no work\n+    Before retry #8: sleeping 38.4 seconds\n+    y u no work\n+    Before retry #9: sleeping 60.0 seconds\n+    y u no work\n+    Before retry #10: sleeping 60.0 seconds\n+    y u no work\n+    etc..\n+\n+Limit retries:\n+\n+`retry -t 4 'echo \"y u no work\"; false'`\n+\n+    y u no work\n+    Before retry #1: sleeping 0.3 seconds\n+    y u no work\n+    Before retry #2: sleeping 0.6 seconds\n+    y u no work\n+    Before retry #3: sleeping 1.2 seconds\n+    y u no work\n+    Before retry #4: sleeping 2.4 seconds\n+    y u no work\n+    Retries exhausted\n+\n+Bad command:\n+\n+`retry poop`\n+\n+    bash: poop: command not found\n+\n+Fail command:\n+\n+`retry -t 3 -f 'echo \"oh poopsickles\"' 'echo \"y u no work\"; false'`\n+\n+    y u no work\n+    Before retry #1: sleeping 0.3 seconds\n+    y u no work\n+    Before retry #2: sleeping 0.6 seconds\n+    y u no work\n+    Before retry #3: sleeping 1.2 seconds\n+    y u no work\n+    Retries exhausted, running fail script\n+    oh poopsickles\n+\n+Last attempt passed:\n+\n+`retry -t 3 -- 'if [ $RETRY_ATTEMPT -eq 3 ]; then echo Passed at attempt $RETRY_ATTEMPT; true; else echo Failed at attempt $RETRY_ATTEMPT; false; fi;'`\n+\n+    Failed at attempt 0\n+    Before retry #1: sleeping 0.3 seconds\n+    Failed at attempt 1\n+    Before retry #2: sleeping 0.6 seconds\n+    Failed at attempt 2\n+    Before retry #3: sleeping 1.2 seconds\n+    Passed at attempt 3\n+\n+### License\n+\n+Apache 2.0 - go nuts"
      },
      {
        "sha": "3c06519dbdfebececdfe030cc60cab72d62658a2",
        "filename": "ci/retry/retry",
        "status": "added",
        "additions": 163,
        "deletions": 0,
        "changes": 163,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/retry/retry",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/retry/retry",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/retry/retry?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,163 @@\n+#!/usr/bin/env bash\n+\n+GETOPT_BIN=$IN_GETOPT_BIN\n+GETOPT_BIN=${GETOPT_BIN:-getopt}\n+\n+__sleep_amount() {\n+  if [ -n \"$constant_sleep\" ]; then\n+    sleep_time=$constant_sleep\n+  else\n+    #TODO: check for awk\n+    #TODO: check if user would rather use one of the other possible dependencies: python, ruby, bc, dc\n+    sleep_time=`awk \"BEGIN {t = $min_sleep * $(( (1<<($attempts -1)) )); print (t > $max_sleep ? $max_sleep : t)}\"`\n+  fi\n+}\n+\n+__log_out() {\n+  echo \"$1\" 1>&2\n+}\n+\n+# Parameters: max_tries min_sleep max_sleep constant_sleep fail_script EXECUTION_COMMAND\n+retry()\n+{\n+  local max_tries=\"$1\"; shift\n+  local min_sleep=\"$1\"; shift\n+  local max_sleep=\"$1\"; shift\n+  local constant_sleep=\"$1\"; shift\n+  local fail_script=\"$1\"; shift\n+  if [ -n \"$VERBOSE\" ]; then\n+    __log_out \"Retry Parameters: max_tries=$max_tries min_sleep=$min_sleep max_sleep=$max_sleep constant_sleep=$constant_sleep\"\n+    if [ -n \"$fail_script\" ]; then __log_out \"Fail script: $fail_script\"; fi\n+    __log_out \"\"\n+    __log_out \"Execution Command: $*\"\n+    __log_out \"\"\n+  fi\n+\n+  local attempts=0\n+  local return_code=1\n+\n+\n+  while [[ $return_code -ne 0 && $attempts -le $max_tries ]]; do\n+    if [ $attempts -gt 0 ]; then\n+      __sleep_amount\n+      __log_out \"Before retry #$attempts: sleeping $sleep_time seconds\"\n+      sleep $sleep_time\n+    fi\n+\n+    P=\"$1\"\n+    for param in \"${@:2}\"; do P=\"$P '$param'\"; done\n+    #TODO: replace single quotes in each arg with '\"'\"' ?\n+    export RETRY_ATTEMPT=$attempts\n+    bash -c \"$P\"\n+    return_code=$?\n+    #__log_out \"Process returned $return_code on attempt $attempts\"\n+    if [ $return_code -eq 127 ]; then\n+      # command not found\n+      exit $return_code\n+    elif [ $return_code -ne 0 ]; then\n+      attempts=$[$attempts +1]\n+    fi\n+  done\n+\n+  if [ $attempts -gt $max_tries ]; then\n+    if [ -n \"$fail_script\" ]; then\n+      __log_out \"Retries exhausted, running fail script\"\n+      eval $fail_script\n+    else\n+      __log_out \"Retries exhausted\"\n+    fi\n+  fi\n+\n+  exit $return_code\n+}\n+\n+# If we're being sourced, don't worry about such things\n+if [ \"$BASH_SOURCE\" == \"$0\" ]; then\n+  # Prints the help text\n+  help()\n+  {\n+    local retry=$(basename $0)\n+    cat <<EOF\n+Usage: $retry [options] -- execute command\n+    -h, -?, --help\n+    -v, --verbose                    Verbose output\n+    -t, --tries=#                    Set max retries: Default 10\n+    -s, --sleep=secs                 Constant sleep amount (seconds)\n+    -m, --min=secs                   Exponential Backoff: minimum sleep amount (seconds): Default 0.3\n+    -x, --max=secs                   Exponential Backoff: maximum sleep amount (seconds): Default 60\n+    -f, --fail=\"script +cmds\"        Fail Script: run in case of final failure\n+EOF\n+  }\n+\n+  # show help for no arguments if stdin is a terminal\n+  if { [ -z \"$1\" ] && [ -t 0 ] ; } || [ \"$1\" == '-h' ] || [ \"$1\" == '-?' ] || [ \"$1\" == '--help' ]\n+  then\n+    help\n+    exit 0\n+  fi\n+\n+  $GETOPT_BIN --test > /dev/null\n+  if [[ $? -ne 4 ]]; then\n+      echo \"I\u2019m sorry, 'getopt --test' failed in this environment. Please load GNU getopt.\"\n+      exit 1\n+  fi\n+\n+  OPTIONS=vt:s:m:x:f:\n+  LONGOPTIONS=verbose,tries:,sleep:,min:,max:,fail:\n+\n+  PARSED=$($GETOPT_BIN --options=\"$OPTIONS\" --longoptions=\"$LONGOPTIONS\" --name \"$0\" -- \"$@\")\n+  if [[ $? -ne 0 ]]; then\n+    # e.g. $? == 1\n+    #  then getopt has complained about wrong arguments to stdout\n+    exit 2\n+  fi\n+  # read getopt\u2019s output this way to handle the quoting right:\n+  eval set -- \"$PARSED\"\n+\n+  max_tries=10\n+  min_sleep=0.3\n+  max_sleep=60.0\n+  constant_sleep=\n+  fail_script=\n+\n+  # now enjoy the options in order and nicely split until we see --\n+  while true; do\n+      case \"$1\" in\n+          -v|--verbose)\n+              VERBOSE=true\n+              shift\n+              ;;\n+          -t|--tries)\n+              max_tries=\"$2\"\n+              shift 2\n+              ;;\n+          -s|--sleep)\n+              constant_sleep=\"$2\"\n+              shift 2\n+              ;;\n+          -m|--min)\n+              min_sleep=\"$2\"\n+              shift 2\n+              ;;\n+          -x|--max)\n+              max_sleep=\"$2\"\n+              shift 2\n+              ;;\n+          -f|--fail)\n+              fail_script=\"$2\"\n+              shift 2\n+              ;;\n+          --)\n+              shift\n+              break\n+              ;;\n+          *)\n+              echo \"Programming error\"\n+              exit 3\n+              ;;\n+      esac\n+  done\n+\n+  retry \"$max_tries\" \"$min_sleep\" \"$max_sleep\" \"$constant_sleep\" \"$fail_script\" \"$@\"\n+\n+fi"
      },
      {
        "sha": "702e88186252621e5b8787ef8d89788556173c26",
        "filename": "ci/test/00_setup_env.sh",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,72 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+# The root dir.\n+# The ci system copies this folder.\n+# This is where the depends build is done.\n+BASE_ROOT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\"/../../ >/dev/null 2>&1 && pwd )\n+export BASE_ROOT_DIR\n+\n+echo \"Setting specific values in env\"\n+if [ -n \"${FILE_ENV}\" ]; then\n+  set -o errexit;\n+  # shellcheck disable=SC1090\n+  source \"${FILE_ENV}\"\n+fi\n+\n+echo \"Fallback to default values in env (if not yet set)\"\n+# The number of parallel jobs to pass down to make and test_runner.py\n+export MAKEJOBS=${MAKEJOBS:--j4}\n+# A folder for the ci system to put temporary files (ccache, datadirs for tests, ...)\n+# This folder only exists on the ci host.\n+export BASE_SCRATCH_DIR=${BASE_SCRATCH_DIR:-$BASE_ROOT_DIR/ci/scratch}\n+# What host to compile for. See also ./depends/README.md\n+# Tests that need cross-compilation export the appropriate HOST.\n+# Tests that run natively guess the host\n+export HOST=${HOST:-$(\"$BASE_ROOT_DIR/depends/config.guess\")}\n+# Whether to prefer BusyBox over GNU utilities\n+export USE_BUSY_BOX=${USE_BUSY_BOX:-false}\n+\n+export RUN_UNIT_TESTS=${RUN_UNIT_TESTS:-true}\n+export RUN_FUNCTIONAL_TESTS=${RUN_FUNCTIONAL_TESTS:-true}\n+export RUN_SECURITY_TESTS=${RUN_SECURITY_TESTS:-false}\n+# By how much to scale the test_runner timeouts (option --timeout-factor).\n+# This is needed because some ci machines have slow CPU or disk, so sanitizers\n+# might be slow or a reindex might be waiting on disk IO.\n+export TEST_RUNNER_TIMEOUT_FACTOR=${TEST_RUNNER_TIMEOUT_FACTOR:-4}\n+export TEST_RUNNER_ENV=${TEST_RUNNER_ENV:-}\n+export RUN_FUZZ_TESTS=${RUN_FUZZ_TESTS:-false}\n+export EXPECTED_TESTS_DURATION_IN_SECONDS=${EXPECTED_TESTS_DURATION_IN_SECONDS:-1000}\n+\n+export CONTAINER_NAME=${CONTAINER_NAME:-ci_unnamed}\n+export DOCKER_NAME_TAG=${DOCKER_NAME_TAG:-ubuntu:18.04}\n+# Randomize test order.\n+# See https://www.boost.org/doc/libs/1_71_0/libs/test/doc/html/boost_test/utf_reference/rt_param_reference/random.html\n+export BOOST_TEST_RANDOM=${BOOST_TEST_RANDOM:-1}\n+# See man 7 debconf\n+export DEBIAN_FRONTEND=noninteractive\n+export CCACHE_SIZE=${CCACHE_SIZE:-100M}\n+export CCACHE_TEMPDIR=${CCACHE_TEMPDIR:-/tmp/.ccache-temp}\n+export CCACHE_COMPRESS=${CCACHE_COMPRESS:-1}\n+# The cache dir.\n+# This folder exists on the ci host and ci guest. Changes are propagated back and forth.\n+export CCACHE_DIR=${CCACHE_DIR:-$BASE_SCRATCH_DIR/.ccache}\n+# The depends dir.\n+# This folder exists on the ci host and ci guest. Changes are propagated back and forth.\n+export DEPENDS_DIR=${DEPENDS_DIR:-$BASE_ROOT_DIR/depends}\n+# Folder where the build result is put (bin and lib).\n+export BASE_OUTDIR=${BASE_OUTDIR:-$BASE_SCRATCH_DIR/out/$HOST}\n+# Folder where the build is done (dist and out-of-tree build).\n+export BASE_BUILD_DIR=${BASE_BUILD_DIR:-$BASE_SCRATCH_DIR/build}\n+export PREVIOUS_RELEASES_DIR=${PREVIOUS_RELEASES_DIR:-$BASE_ROOT_DIR/releases/$HOST}\n+export SDK_URL=${SDK_URL:-https://bitcoincore.org/depends-sources/sdks}\n+export DOCKER_PACKAGES=${DOCKER_PACKAGES:-build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3 rsync git procps}\n+export GOAL=${GOAL:-install}\n+export DIR_QA_ASSETS=${DIR_QA_ASSETS:-${BASE_SCRATCH_DIR}/qa-assets}\n+export PATH=${BASE_ROOT_DIR}/ci/retry:$PATH\n+export CI_RETRY_EXE=${CI_RETRY_EXE:-\"retry --\"}"
      },
      {
        "sha": "610e55c4c3e4b9840d0d0b6631f94c669e313fd7",
        "filename": "ci/test/00_setup_env_arm.sh",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_arm.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_arm.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_arm.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,28 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=arm-linux-gnueabihf\n+# The host arch is unknown, so we run the tests through qemu.\n+# If the host is arm and wants to run the tests natively, it can set QEMU_USER_CMD to the empty string.\n+if [ -z ${QEMU_USER_CMD+x} ]; then export QEMU_USER_CMD=\"${QEMU_USER_CMD:-\"qemu-arm -L /usr/arm-linux-gnueabihf/\"}\"; fi\n+export DPKG_ADD_ARCH=\"armhf\"\n+export PACKAGES=\"python3-zmq g++-arm-linux-gnueabihf busybox libc6:armhf libstdc++6:armhf libfontconfig1:armhf libxcb1:armhf\"\n+if [ -n \"$QEMU_USER_CMD\" ]; then\n+  # Likely cross-compiling, so install the needed gcc and qemu-user\n+  export PACKAGES=\"$PACKAGES qemu-user\"\n+fi\n+export CONTAINER_NAME=ci_arm_linux\n+# Use debian to avoid 404 apt errors when cross compiling\n+export DOCKER_NAME_TAG=\"debian:buster\"\n+export USE_BUSY_BOX=true\n+export RUN_UNIT_TESTS=true\n+export RUN_FUNCTIONAL_TESTS=false\n+export GOAL=\"install\"\n+# -Wno-psabi is to disable ABI warnings: \"note: parameter passing for argument of type ... changed in GCC 7.1\"\n+# This could be removed once the ABI change warning does not show up by default\n+export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi --enable-werror --with-boost-process\""
      },
      {
        "sha": "e58003ab19e33ae2da6454f95ba1ddd277b11b3d",
        "filename": "ci/test/00_setup_env_i686_centos.sh",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_i686_centos.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_i686_centos.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_i686_centos.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,15 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=i686-pc-linux-gnu\n+export CONTAINER_NAME=ci_i686_centos_7\n+export DOCKER_NAME_TAG=centos:7\n+export DOCKER_PACKAGES=\"gcc-c++ glibc-devel.x86_64 libstdc++-devel.x86_64 glibc-devel.i686 libstdc++-devel.i686 ccache libtool make git python3 python36-zmq which patch lbzip2 dash\"\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-reduce-exports --with-boost-process\"\n+export CONFIG_SHELL=\"/bin/dash\""
      },
      {
        "sha": "b62f1603f42ec34c8d3aee6e3cb6f16a27785693",
        "filename": "ci/test/00_setup_env_mac.sh",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_mac.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_mac.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,17 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export CONTAINER_NAME=ci_macos_cross\n+export HOST=x86_64-apple-darwin16\n+export PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev python3-setuptools\"\n+export XCODE_VERSION=11.3.1\n+export XCODE_BUILD_ID=11C505\n+export RUN_UNIT_TESTS=false\n+export RUN_FUNCTIONAL_TESTS=false\n+export GOAL=\"deploy\"\n+export BITCOIN_CONFIG=\"--with-gui --enable-reduce-exports --enable-werror --with-boost-process\""
      },
      {
        "sha": "5fb127b7627978c24d67aefd9ab8350f077c6cc6",
        "filename": "ci/test/00_setup_env_mac_host.sh",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_mac_host.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_mac_host.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac_host.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,22 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=x86_64-apple-darwin16\n+export DOCKER_NAME_TAG=ubuntu:18.04  # Check that bionic can cross-compile to macos (bionic is used in the gitian build as well)\n+export PIP_PACKAGES=\"zmq\"\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--with-gui --enable-reduce-exports --enable-werror --with-boost-process\"\n+export NO_DEPENDS=1\n+export OSX_SDK=\"\"\n+export CCACHE_SIZE=300M\n+\n+export RUN_SECURITY_TESTS=\"true\"\n+if [ \"$TRAVIS_REPO_SLUG\" != \"bitcoin/bitcoin\" ]; then\n+  export RUN_FUNCTIONAL_TESTS=\"false\"\n+  export EXPECTED_TESTS_DURATION_IN_SECONDS=200\n+fi"
      },
      {
        "sha": "191b8049b02e746035dd5b3eb525d8dbb120684c",
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,14 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export CONTAINER_NAME=ci_native_asan\n+export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev libsqlite3-dev\"\n+export DOCKER_NAME_TAG=ubuntu:20.04\n+export NO_DEPENDS=1\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=address,integer,undefined CC=clang CXX=clang++ --with-boost-process\""
      },
      {
        "sha": "a32de4a6b52667a301618861b438f3f8ecb86592",
        "filename": "ci/test/00_setup_env_native_fuzz.sh",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_native_fuzz.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_native_fuzz.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,18 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n+export CONTAINER_NAME=ci_native_fuzz\n+export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev\"\n+export NO_DEPENDS=1\n+export RUN_UNIT_TESTS=false\n+export RUN_FUNCTIONAL_TESTS=false\n+export RUN_FUZZ_TESTS=true\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=clang CXX=clang++ --with-boost-process\"\n+export CCACHE_SIZE=200M"
      },
      {
        "sha": "e06a40eb23b20f97859363b29f5a20b7cc30594a",
        "filename": "ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz_with_valgrind.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,19 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n+export CONTAINER_NAME=ci_native_fuzz_valgrind\n+export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev valgrind\"\n+export NO_DEPENDS=1\n+export RUN_UNIT_TESTS=false\n+export RUN_FUNCTIONAL_TESTS=false\n+export RUN_FUZZ_TESTS=true\n+export FUZZ_TESTS_CONFIG=\"--valgrind\"\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer CC=clang CXX=clang++\"\n+export CCACHE_SIZE=200M"
      },
      {
        "sha": "b88ee2b50fb195f8ea6a7684dacb7e780c535ac4",
        "filename": "ci/test/00_setup_env_native_msan.sh",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_native_msan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_native_msan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_msan.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,23 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n+LIBCXX_DIR=\"${BASE_ROOT_DIR}/ci/scratch/msan/build/\"\n+export MSAN_FLAGS=\"-fsanitize=memory -fsanitize-memory-track-origins=2 -fno-omit-frame-pointer -g -O1 -fno-optimize-sibling-calls\"\n+LIBCXX_FLAGS=\"-nostdinc++ -stdlib=libc++ -L${LIBCXX_DIR}lib -lc++abi -I${LIBCXX_DIR}include -I${LIBCXX_DIR}include/c++/v1 -lpthread -Wl,-rpath,${LIBCXX_DIR}lib -Wno-unused-command-line-argument\"\n+export MSAN_AND_LIBCXX_FLAGS=\"${MSAN_FLAGS} ${LIBCXX_FLAGS}\"\n+export BDB_PREFIX=\"${BASE_ROOT_DIR}/db4\"\n+\n+export CONTAINER_NAME=\"ci_native_msan\"\n+export PACKAGES=\"clang-9 llvm-9 cmake\"\n+export DEP_OPTS=\"NO_BDB=1 NO_QT=1 CC='clang' CXX='clang++' CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}' boost_cxxflags='-std=c++11 -fvisibility=hidden -fPIC ${MSAN_AND_LIBCXX_FLAGS}' zeromq_cxxflags='-std=c++11 ${MSAN_AND_LIBCXX_FLAGS}'\"\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-wallet --with-sanitizers=memory --with-asm=no --prefix=${BASE_ROOT_DIR}/depends/x86_64-pc-linux-gnu/ CC=clang CXX=clang++ CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}' BDB_LIBS='-L${BDB_PREFIX}/lib -ldb_cxx-4.8' BDB_CFLAGS='-I${BDB_PREFIX}/include'\"\n+export USE_MEMORY_SANITIZER=\"true\"\n+export RUN_FUNCTIONAL_TESTS=\"false\"\n+export CCACHE_SIZE=250M"
      },
      {
        "sha": "522a5d9fc28e6f9e0c38f4b8209d06cf668ab776",
        "filename": "ci/test/00_setup_env_native_multiprocess.sh",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_native_multiprocess.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_native_multiprocess.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_multiprocess.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,15 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export CONTAINER_NAME=ci_native_multiprocess\n+export DOCKER_NAME_TAG=ubuntu:20.04\n+export PACKAGES=\"cmake python3\"\n+export DEP_OPTS=\"MULTIPROCESS=1\"\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--with-boost-process\"\n+export TEST_RUNNER_ENV=\"BITCOIND=bitcoin-node\""
      },
      {
        "sha": "0a09bfe23007569c2c5059915509d71302e4eed5",
        "filename": "ci/test/00_setup_env_native_nowallet.sh",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_native_nowallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_native_nowallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_nowallet.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,14 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export CONTAINER_NAME=ci_native_nowallet\n+export DOCKER_NAME_TAG=ubuntu:16.04  # Use xenial to have one config run the tests in python3.5, see doc/dependencies.md\n+export PACKAGES=\"python3-zmq clang-3.8 llvm-3.8\"  # Use clang-3.8 to test C++11 compatibility, see doc/dependencies.md\n+export DEP_OPTS=\"NO_WALLET=1\"\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CC=clang-3.8 CXX=clang++-3.8 --with-boost-process\""
      },
      {
        "sha": "866866229992a9ecd4fe9f47b9c1ead04ef00f5d",
        "filename": "ci/test/00_setup_env_native_qt5.sh",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_native_qt5.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_native_qt5.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_qt5.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,19 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export CONTAINER_NAME=ci_native_qt5\n+export DOCKER_NAME_TAG=ubuntu:18.04  # Check that bionic can compile our c++17 and run our functional tests in python3\n+export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libdbus-1-dev libharfbuzz-dev\"\n+export DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n+export TEST_RUNNER_EXTRA=\"--previous-releases --coverage --extended --exclude feature_dbcrash\"  # Run extended tests so that coverage does not fail, but exclude the very slow dbcrash\n+export RUN_SECURITY_TESTS=\"true\"\n+export RUN_UNIT_TESTS_SEQUENTIAL=\"true\"\n+export RUN_UNIT_TESTS=\"false\"\n+export GOAL=\"install\"\n+export PREVIOUS_RELEASES_TO_DOWNLOAD=\"v0.15.2 v0.16.3 v0.17.2 v0.18.1 v0.19.1\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-libs=no --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-c++17 --enable-debug CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\" --with-boost-process\""
      },
      {
        "sha": "b14a46562c58c2bbf5c4eaf7abd65338ca1c008d",
        "filename": "ci/test/00_setup_env_native_tsan.sh",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_native_tsan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_native_tsan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_tsan.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,15 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export CONTAINER_NAME=ci_native_tsan\n+export DOCKER_NAME_TAG=ubuntu:20.04\n+export PACKAGES=\"clang llvm libc++abi-dev libc++-dev python3-zmq\"\n+export DEP_OPTS=\"CC=clang CXX='clang++ -stdlib=libc++'\"\n+export TEST_RUNNER_EXTRA=\"--exclude feature_block\"  # Low memory on Travis machines, exclude feature_block.\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-gui=no CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' CXXFLAGS='-g' --with-sanitizers=thread CC=clang CXX='clang++ -stdlib=libc++' --with-boost-process\""
      },
      {
        "sha": "bfaea13a2505530afa14df5a2ebb55c954b2576d",
        "filename": "ci/test/00_setup_env_native_valgrind.sh",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_native_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_native_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_valgrind.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,15 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export CONTAINER_NAME=ci_native_valgrind\n+export PACKAGES=\"valgrind clang llvm python3-zmq libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libsqlite3-dev\"\n+export USE_VALGRIND=1\n+export NO_DEPENDS=1\n+export TEST_RUNNER_EXTRA=\"--exclude rpc_bind\"  # Excluded for now, see https://github.com/bitcoin/bitcoin/issues/17765#issuecomment-602068547\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=no CC=clang CXX=clang++\"  # TODO enable GUI"
      },
      {
        "sha": "accbd07e22b9c25b6480627be17ed6fb17b90d58",
        "filename": "ci/test/00_setup_env_s390x.sh",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_s390x.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_s390x.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_s390x.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,26 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=s390x-linux-gnu\n+# The host arch is unknown, so we run the tests through qemu.\n+# If the host is s390x and wants to run the tests natively, it can set QEMU_USER_CMD to the empty string.\n+if [ -z ${QEMU_USER_CMD+x} ]; then export QEMU_USER_CMD=\"${QEMU_USER_CMD:-\"qemu-s390x\"}\"; fi\n+export PACKAGES=\"python3-zmq\"\n+if [ -n \"$QEMU_USER_CMD\" ]; then\n+  # Likely cross-compiling, so install the needed gcc and qemu-user\n+  export DPKG_ADD_ARCH=\"s390x\"\n+  export PACKAGES=\"$PACKAGES g++-s390x-linux-gnu qemu-user libc6:s390x libstdc++6:s390x libfontconfig1:s390x libxcb1:s390x\"\n+fi\n+# Use debian to avoid 404 apt errors\n+export CONTAINER_NAME=ci_s390x\n+export DOCKER_NAME_TAG=\"debian:buster\"\n+export RUN_UNIT_TESTS=true\n+export TEST_RUNNER_ENV=\"LC_ALL=C\"\n+export RUN_FUNCTIONAL_TESTS=true\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-reduce-exports --with-incompatible-bdb --with-boost-process\""
      },
      {
        "sha": "2b351dff6d92f9631b9d64cc4da97b33ad2369d7",
        "filename": "ci/test/00_setup_env_win64.sh",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_win64.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/00_setup_env_win64.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_win64.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,16 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export CONTAINER_NAME=ci_win64\n+export DOCKER_NAME_TAG=ubuntu:18.04  # Check that bionic can cross-compile to win64 (bionic is used in the gitian build as well)\n+export HOST=x86_64-w64-mingw32\n+export PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64\"\n+export RUN_FUNCTIONAL_TESTS=false\n+export RUN_SECURITY_TESTS=\"true\"\n+export GOAL=\"deploy\"\n+export BITCOIN_CONFIG=\"--enable-reduce-exports --disable-gui-tests --without-boost-process\""
      },
      {
        "sha": "80806aab75ba6819b8d77a6857bdc40350eeffc9",
        "filename": "ci/test/03_before_install.sh",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/03_before_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/03_before_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/03_before_install.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,22 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+BEGIN_FOLD () {\n+  echo \"\"\n+  CURRENT_FOLD_NAME=$1\n+  echo \"travis_fold:start:${CURRENT_FOLD_NAME}\"\n+}\n+\n+END_FOLD () {\n+  RET=$?\n+  echo \"travis_fold:end:${CURRENT_FOLD_NAME}\"\n+  if [ $RET != 0 ]; then\n+    echo \"${CURRENT_FOLD_NAME} failed with status code ${RET}\"\n+  fi\n+}\n+"
      },
      {
        "sha": "632bccf574bd5f4a2cfa56aca30c821b9208ca0e",
        "filename": "ci/test/04_install.sh",
        "status": "added",
        "additions": 115,
        "deletions": 0,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,115 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+if [[ $DOCKER_NAME_TAG == centos* ]]; then\n+  export LC_ALL=en_US.utf8\n+fi\n+if [[ $QEMU_USER_CMD == qemu-s390* ]]; then\n+  export LC_ALL=C\n+fi\n+\n+if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n+  ${CI_RETRY_EXE} pip3 install $PIP_PACKAGES\n+fi\n+\n+# Create folders that are mounted into the docker\n+mkdir -p \"${CCACHE_DIR}\"\n+mkdir -p \"${PREVIOUS_RELEASES_DIR}\"\n+\n+export ASAN_OPTIONS=\"detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1\"\n+export LSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/lsan\"\n+export TSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/tsan:halt_on_error=1:log_path=${BASE_SCRATCH_DIR}/sanitizer-output/tsan\"\n+export UBSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1:report_error_type=1\"\n+env | grep -E '^(BITCOIN_CONFIG|BASE_|QEMU_|CCACHE_|LC_ALL|BOOST_TEST_RANDOM|DEBIAN_FRONTEND|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS|PREVIOUS_RELEASES_DIR)' | tee /tmp/env\n+if [[ $HOST = *-mingw32 ]]; then\n+  DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"\n+elif [[ $BITCOIN_CONFIG = *--with-sanitizers=*address* ]]; then # If ran with (ASan + LSan), Docker needs access to ptrace (https://github.com/google/sanitizers/issues/764)\n+  DOCKER_ADMIN=\"--cap-add SYS_PTRACE\"\n+fi\n+\n+export P_CI_DIR=\"$PWD\"\n+\n+if [ -z \"$DANGER_RUN_CI_ON_HOST\" ]; then\n+  echo \"Creating $DOCKER_NAME_TAG container to run in\"\n+  ${CI_RETRY_EXE} docker pull \"$DOCKER_NAME_TAG\"\n+\n+  DOCKER_ID=$(docker run $DOCKER_ADMIN -idt \\\n+                  --mount type=bind,src=$BASE_ROOT_DIR,dst=/ro_base,readonly \\\n+                  --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR \\\n+                  --mount type=bind,src=$DEPENDS_DIR,dst=$DEPENDS_DIR \\\n+                  --mount type=bind,src=$PREVIOUS_RELEASES_DIR,dst=$PREVIOUS_RELEASES_DIR \\\n+                  -w $BASE_ROOT_DIR \\\n+                  --env-file /tmp/env \\\n+                  --name $CONTAINER_NAME \\\n+                  $DOCKER_NAME_TAG)\n+  export DOCKER_CI_CMD_PREFIX=\"docker exec $DOCKER_ID\"\n+else\n+  echo \"Running on host system without docker wrapper\"\n+fi\n+\n+DOCKER_EXEC () {\n+  $DOCKER_CI_CMD_PREFIX bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd $P_CI_DIR && $*\"\n+}\n+export -f DOCKER_EXEC\n+\n+if [ -n \"$DPKG_ADD_ARCH\" ]; then\n+  DOCKER_EXEC dpkg --add-architecture \"$DPKG_ADD_ARCH\"\n+fi\n+\n+if [[ $DOCKER_NAME_TAG == centos* ]]; then\n+  ${CI_RETRY_EXE} DOCKER_EXEC yum -y install epel-release\n+  ${CI_RETRY_EXE} DOCKER_EXEC yum -y install $DOCKER_PACKAGES $PACKAGES\n+elif [ \"$CI_USE_APT_INSTALL\" != \"no\" ]; then\n+  ${CI_RETRY_EXE} DOCKER_EXEC apt-get update\n+  ${CI_RETRY_EXE} DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -y $PACKAGES $DOCKER_PACKAGES\n+fi\n+\n+if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n+  top -l 1 -s 0 | awk ' /PhysMem/ {print}'\n+  echo \"Number of CPUs: $(sysctl -n hw.logicalcpu)\"\n+else\n+  DOCKER_EXEC free -m -h\n+  DOCKER_EXEC echo \"Number of CPUs \\(nproc\\):\" \\$\\(nproc\\)\n+  DOCKER_EXEC echo $(lscpu | grep Endian)\n+  DOCKER_EXEC echo \"Free disk space:\"\n+  DOCKER_EXEC df -h\n+fi\n+\n+if [ ! -d ${DIR_QA_ASSETS} ]; then\n+  DOCKER_EXEC git clone --depth=1 https://github.com/bitcoin-core/qa-assets ${DIR_QA_ASSETS}\n+fi\n+export DIR_FUZZ_IN=${DIR_QA_ASSETS}/fuzz_seed_corpus/\n+export DIR_UNIT_TEST_DATA=${DIR_QA_ASSETS}/unit_test_data/\n+\n+DOCKER_EXEC mkdir -p \"${BASE_SCRATCH_DIR}/sanitizer-output/\"\n+\n+if [[ ${USE_MEMORY_SANITIZER} == \"true\" ]]; then\n+  DOCKER_EXEC \"update-alternatives --install /usr/bin/clang++ clang++ \\$(which clang++-9) 100\"\n+  DOCKER_EXEC \"update-alternatives --install /usr/bin/clang clang \\$(which clang-9) 100\"\n+  DOCKER_EXEC \"mkdir -p ${BASE_SCRATCH_DIR}/msan/build/\"\n+  DOCKER_EXEC \"git clone --depth=1 https://github.com/llvm/llvm-project -b llvmorg-10.0.0 ${BASE_SCRATCH_DIR}/msan/llvm-project\"\n+  DOCKER_EXEC \"cd ${BASE_SCRATCH_DIR}/msan/build/ && cmake -DLLVM_ENABLE_PROJECTS='libcxx;libcxxabi' -DCMAKE_BUILD_TYPE=Release -DLLVM_USE_SANITIZER=Memory -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DLLVM_TARGETS_TO_BUILD=X86 ../llvm-project/llvm/\"\n+  DOCKER_EXEC \"cd ${BASE_SCRATCH_DIR}/msan/build/ && make $MAKEJOBS cxx\"\n+fi\n+\n+if [ -z \"$DANGER_RUN_CI_ON_HOST\" ]; then\n+  echo \"Create $BASE_ROOT_DIR\"\n+  DOCKER_EXEC rsync -a /ro_base/ $BASE_ROOT_DIR\n+fi\n+\n+if [ \"$USE_BUSY_BOX\" = \"true\" ]; then\n+  echo \"Setup to use BusyBox utils\"\n+  DOCKER_EXEC mkdir -p $BASE_SCRATCH_DIR/bins/\n+  # tar excluded for now because it requires passing in the exact archive type in ./depends (fixed in later BusyBox version)\n+  # find excluded for now because it does not recognize the -delete option in ./depends (fixed in later BusyBox version)\n+  # ar excluded for now because it does not recognize the -q option in ./depends (unknown if fixed)\n+  # shellcheck disable=SC1010\n+  DOCKER_EXEC for util in \\$\\(busybox --list \\| grep -v \"^ar$\" \\| grep -v \"^tar$\" \\| grep -v \"^find$\"\\)\\; do ln -s \\$\\(command -v busybox\\) $BASE_SCRATCH_DIR/bins/\\$util\\; done\n+  # Print BusyBox version\n+  DOCKER_EXEC patch --help\n+fi"
      },
      {
        "sha": "8ce839fc0464d34cae076ebdb717be11a870330e",
        "filename": "ci/test/05_before_script.sh",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/05_before_script.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,53 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+# Make sure default datadir does not exist and is never read by creating a dummy file\n+if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n+  echo > $HOME/Library/Application\\ Support/Bitcoin\n+else\n+  DOCKER_EXEC echo \\> \\$HOME/.bitcoin\n+fi\n+\n+DOCKER_EXEC mkdir -p ${DEPENDS_DIR}/SDKs ${DEPENDS_DIR}/sdk-sources\n+\n+OSX_SDK_BASENAME=\"Xcode-${XCODE_VERSION}-${XCODE_BUILD_ID}-extracted-SDK-with-libcxx-headers.tar.gz\"\n+OSX_SDK_PATH=\"${DEPENDS_DIR}/sdk-sources/${OSX_SDK_BASENAME}\"\n+\n+if [ -n \"$XCODE_VERSION\" ] && [ ! -f \"$OSX_SDK_PATH\" ]; then\n+  curl --location --fail \"${SDK_URL}/${OSX_SDK_BASENAME}\" -o \"$OSX_SDK_PATH\"\n+fi\n+\n+if [[ ${USE_MEMORY_SANITIZER} == \"true\" ]]; then\n+  # Use BDB compiled using install_db4.sh script to work around linking issue when using BDB\n+  # from depends. See https://github.com/bitcoin/bitcoin/pull/18288#discussion_r433189350 for\n+  # details.\n+  DOCKER_EXEC \"contrib/install_db4.sh \\$(pwd) --enable-umrw CC=clang CXX=clang++ CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}'\"\n+fi\n+\n+if [ -n \"$XCODE_VERSION\" ] && [ -f \"$OSX_SDK_PATH\" ]; then\n+  DOCKER_EXEC tar -C \"${DEPENDS_DIR}/SDKs\" -xf \"$OSX_SDK_PATH\"\n+fi\n+if [[ $HOST = *-mingw32 ]]; then\n+  DOCKER_EXEC update-alternatives --set $HOST-g++ \\$\\(which $HOST-g++-posix\\)\n+fi\n+if [ -z \"$NO_DEPENDS\" ]; then\n+  if [[ $DOCKER_NAME_TAG == centos* ]]; then\n+    # CentOS has problems building the depends if the config shell is not explicitly set\n+    # (i.e. for libevent a Makefile with an empty SHELL variable is generated, leading to\n+    #  an error as the first command is executed)\n+    SHELL_OPTS=\"CONFIG_SHELL=/bin/bash\"\n+  else\n+    SHELL_OPTS=\"CONFIG_SHELL=\"\n+  fi\n+  DOCKER_EXEC $SHELL_OPTS make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n+fi\n+if [ -n \"$PREVIOUS_RELEASES_TO_DOWNLOAD\" ]; then\n+  BEGIN_FOLD previous-versions\n+  DOCKER_EXEC test/get_previous_releases.py -b -t \"$PREVIOUS_RELEASES_DIR\" \"${PREVIOUS_RELEASES_TO_DOWNLOAD}\"\n+  END_FOLD\n+fi"
      },
      {
        "sha": "17d765b862d36f32f2dd3a295bfd8592d865016a",
        "filename": "ci/test/06_script_a.sh",
        "status": "added",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/06_script_a.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/06_script_a.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_a.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,56 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$DEPENDS_DIR/$HOST --bindir=$BASE_OUTDIR/bin --libdir=$BASE_OUTDIR/lib\"\n+DOCKER_EXEC \"ccache --zero-stats --max-size=$CCACHE_SIZE\"\n+\n+BEGIN_FOLD autogen\n+if [ -n \"$CONFIG_SHELL\" ]; then\n+  DOCKER_EXEC \"$CONFIG_SHELL\" -c \"./autogen.sh\"\n+else\n+  DOCKER_EXEC ./autogen.sh\n+fi\n+END_FOLD\n+\n+DOCKER_EXEC mkdir -p \"${BASE_BUILD_DIR}\"\n+export P_CI_DIR=\"${BASE_BUILD_DIR}\"\n+\n+BEGIN_FOLD configure\n+DOCKER_EXEC \"${BASE_ROOT_DIR}/configure\" --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( (DOCKER_EXEC cat config.log) && false)\n+END_FOLD\n+\n+BEGIN_FOLD distdir\n+DOCKER_EXEC make distdir VERSION=$HOST\n+END_FOLD\n+\n+export P_CI_DIR=\"${BASE_BUILD_DIR}/bitcoin-$HOST\"\n+\n+BEGIN_FOLD configure\n+DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( (DOCKER_EXEC cat config.log) && false)\n+END_FOLD\n+\n+set -o errtrace\n+trap 'DOCKER_EXEC \"cat ${BASE_SCRATCH_DIR}/sanitizer-output/* 2> /dev/null\"' ERR\n+\n+if [[ ${USE_MEMORY_SANITIZER} == \"true\" ]]; then\n+  # MemorySanitizer (MSAN) does not support tracking memory initialization done by\n+  # using the Linux getrandom syscall. Avoid using getrandom by undefining\n+  # HAVE_SYS_GETRANDOM. See https://github.com/google/sanitizers/issues/852 for\n+  # details.\n+  DOCKER_EXEC 'grep -v HAVE_SYS_GETRANDOM src/config/bitcoin-config.h > src/config/bitcoin-config.h.tmp && mv src/config/bitcoin-config.h.tmp src/config/bitcoin-config.h'\n+fi\n+\n+BEGIN_FOLD build\n+DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && DOCKER_EXEC make $GOAL V=1 ; false )\n+END_FOLD\n+\n+BEGIN_FOLD cache_stats\n+DOCKER_EXEC \"ccache --version | head -n 1 && ccache --show-stats\"\n+DOCKER_EXEC du -sh \"${DEPENDS_DIR}\"/*/\n+DOCKER_EXEC du -sh \"${PREVIOUS_RELEASES_DIR}\"\n+END_FOLD"
      },
      {
        "sha": "87e9f31d0f46d914363db264b5685f8d8b663364",
        "filename": "ci/test/06_script_b.sh",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/06_script_b.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/06_script_b.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_b.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,52 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+if [ -n \"$QEMU_USER_CMD\" ]; then\n+  BEGIN_FOLD wrap-qemu\n+  # Generate all binaries, so that they can be wrapped\n+  DOCKER_EXEC make $MAKEJOBS -C src/secp256k1 VERBOSE=1\n+  DOCKER_EXEC make $MAKEJOBS -C src/univalue VERBOSE=1\n+  DOCKER_EXEC \"${BASE_ROOT_DIR}/ci/test/wrap-qemu.sh\"\n+  END_FOLD\n+fi\n+\n+if [ -n \"$USE_VALGRIND\" ]; then\n+  BEGIN_FOLD wrap-valgrind\n+  DOCKER_EXEC \"${BASE_ROOT_DIR}/ci/test/wrap-valgrind.sh\"\n+  END_FOLD\n+fi\n+\n+if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n+  BEGIN_FOLD unit-tests\n+  DOCKER_EXEC ${TEST_RUNNER_ENV} DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA} LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib make $MAKEJOBS check VERBOSE=1\n+  END_FOLD\n+fi\n+\n+if [ \"$RUN_UNIT_TESTS_SEQUENTIAL\" = \"true\" ]; then\n+  BEGIN_FOLD unit-tests-seq\n+  DOCKER_EXEC ${TEST_RUNNER_ENV} DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA} LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib \"${BASE_BUILD_DIR}/bitcoin-*/src/test/test_bitcoin*\" --catch_system_errors=no -l test_suite\n+  END_FOLD\n+fi\n+\n+if [ \"$RUN_FUNCTIONAL_TESTS\" = \"true\" ]; then\n+  BEGIN_FOLD functional-tests\n+  DOCKER_EXEC LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib ${TEST_RUNNER_ENV} test/functional/test_runner.py --ci $MAKEJOBS --tmpdirprefix \"${BASE_SCRATCH_DIR}/test_runner/\" --ansi --combinedlogslen=4000 --timeout-factor=${TEST_RUNNER_TIMEOUT_FACTOR} ${TEST_RUNNER_EXTRA} --quiet --failfast\n+  END_FOLD\n+fi\n+\n+if [ \"$RUN_SECURITY_TESTS\" = \"true\" ]; then\n+  BEGIN_FOLD security-tests\n+  DOCKER_EXEC make test-security-check\n+  END_FOLD\n+fi\n+\n+if [ \"$RUN_FUZZ_TESTS\" = \"true\" ]; then\n+  BEGIN_FOLD fuzz-tests\n+  DOCKER_EXEC LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib test/fuzz/test_runner.py ${FUZZ_TESTS_CONFIG} $MAKEJOBS -l DEBUG ${DIR_FUZZ_IN}\n+  END_FOLD\n+fi"
      },
      {
        "sha": "be7d7fcc1fe19e32e4cf54a14849fbddb14b29cf",
        "filename": "ci/test/wrap-qemu.sh",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/wrap-qemu.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/wrap-qemu.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/wrap-qemu.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,18 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+for b_name in {\"${BASE_OUTDIR}/bin\"/*,src/secp256k1/*tests,src/univalue/{no_nul,test_json,unitester,object}}; do\n+    # shellcheck disable=SC2044\n+    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename $b_name)); do\n+      echo \"Wrap $b ...\"\n+      mv \"$b\" \"${b}_orig\"\n+      echo '#!/usr/bin/env bash' > \"$b\"\n+      echo \"$QEMU_USER_CMD \\\"${b}_orig\\\" \\\"\\$@\\\"\" >> \"$b\"\n+      chmod +x \"$b\"\n+    done\n+done"
      },
      {
        "sha": "6b3e6eb7e7412f1f4d1fe5de4bdfb0eeb97a1fba",
        "filename": "ci/test/wrap-valgrind.sh",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/wrap-valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test/wrap-valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/wrap-valgrind.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,18 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+for b_name in \"${BASE_OUTDIR}/bin\"/*; do\n+    # shellcheck disable=SC2044\n+    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename $b_name)); do\n+      echo \"Wrap $b ...\"\n+      mv \"$b\" \"${b}_orig\"\n+      echo '#!/usr/bin/env bash' > \"$b\"\n+      echo \"valgrind --gen-suppressions=all --quiet --error-exitcode=1 --suppressions=${BASE_ROOT_DIR}/contrib/valgrind.supp \\\"${b}_orig\\\" \\\"\\$@\\\"\" >> \"$b\"\n+      chmod +x \"$b\"\n+    done\n+done"
      },
      {
        "sha": "a1d4bd19524daefccee252ec22fbcdd780c2c3d1",
        "filename": "ci/test_run_all.sh",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test_run_all.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/ci/test_run_all.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test_run_all.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,14 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+set -o errexit; source ./ci/test/00_setup_env.sh\n+set -o errexit; source ./ci/test/03_before_install.sh\n+set -o errexit; source ./ci/test/04_install.sh\n+set -o errexit; source ./ci/test/05_before_script.sh\n+set -o errexit; source ./ci/test/06_script_a.sh\n+set -o errexit; source ./ci/test/06_script_b.sh"
      },
      {
        "sha": "9a16b7c8806ee40bae93de32aef67cb553a2b123",
        "filename": "configure.ac",
        "status": "added",
        "additions": 1776,
        "deletions": 0,
        "changes": 1776,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,1776 @@\n+AC_PREREQ([2.69])\n+define(_CLIENT_VERSION_MAJOR, 0)\n+define(_CLIENT_VERSION_MINOR, 20)\n+define(_CLIENT_VERSION_REVISION, 99)\n+define(_CLIENT_VERSION_BUILD, 0)\n+define(_CLIENT_VERSION_RC, 0)\n+define(_CLIENT_VERSION_IS_RELEASE, false)\n+define(_COPYRIGHT_YEAR, 2020)\n+define(_COPYRIGHT_HOLDERS,[The %s developers])\n+define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\n+AC_INIT([Bitcoin Core],m4_join([.], _CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MINOR, _CLIENT_VERSION_REVISION, m4_if(_CLIENT_VERSION_BUILD, [0], [], _CLIENT_VERSION_BUILD))m4_if(_CLIENT_VERSION_RC, [0], [], [rc]_CLIENT_VERSION_RC),[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n+AC_CONFIG_SRCDIR([src/validation.cpp])\n+AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n+AC_CONFIG_AUX_DIR([build-aux])\n+AC_CONFIG_MACRO_DIR([build-aux/m4])\n+\n+m4_ifndef([PKG_PROG_PKG_CONFIG], [AC_MSG_ERROR([PKG_PROG_PKG_CONFIG macro not found. Please install pkg-config and re-run autogen.sh])])\n+PKG_PROG_PKG_CONFIG\n+if test \"x$PKG_CONFIG\" = x; then\n+  AC_MSG_ERROR([pkg-config not found])\n+fi\n+\n+BITCOIN_DAEMON_NAME=bitcoind\n+BITCOIN_GUI_NAME=bitcoin-qt\n+BITCOIN_CLI_NAME=bitcoin-cli\n+BITCOIN_TX_NAME=bitcoin-tx\n+BITCOIN_WALLET_TOOL_NAME=bitcoin-wallet\n+\n+dnl Unless the user specified ARFLAGS, force it to be cr\n+AC_ARG_VAR(ARFLAGS, [Flags for the archiver, defaults to <cr> if not set])\n+if test \"x${ARFLAGS+set}\" != \"xset\"; then\n+  ARFLAGS=\"cr\"\n+fi\n+\n+AC_CANONICAL_HOST\n+\n+AH_TOP([#ifndef BITCOIN_CONFIG_H])\n+AH_TOP([#define BITCOIN_CONFIG_H])\n+AH_BOTTOM([#endif //BITCOIN_CONFIG_H])\n+\n+dnl faketime breaks configure and is only needed for make. Disable it here.\n+unset FAKETIME\n+\n+dnl Automake init set-up and checks\n+AM_INIT_AUTOMAKE([1.13 no-define subdir-objects foreign])\n+\n+dnl faketime messes with timestamps and causes configure to be re-run.\n+dnl --disable-maintainer-mode can be used to bypass this.\n+AM_MAINTAINER_MODE([enable])\n+\n+dnl make the compilation flags quiet unless V=1 is used\n+AM_SILENT_RULES([yes])\n+\n+dnl Compiler checks (here before libtool).\n+if test \"x${CXXFLAGS+set}\" = \"xset\"; then\n+  CXXFLAGS_overridden=yes\n+else\n+  CXXFLAGS_overridden=no\n+fi\n+AC_PROG_CXX\n+\n+dnl By default, libtool for mingw refuses to link static libs into a dll for\n+dnl fear of mixing pic/non-pic objects, and import/export complications. Since\n+dnl we have those under control, re-enable that functionality.\n+case $host in\n+  *mingw*)\n+     lt_cv_deplibs_check_method=\"pass_all\"\n+  ;;\n+esac\n+\n+AC_ARG_ENABLE([c++17],\n+  [AS_HELP_STRING([--enable-c++17],\n+  [enable compilation in c++17 mode (disabled by default)])],\n+  [use_cxx17=$enableval],\n+  [use_cxx17=no])\n+\n+dnl Require C++11 or C++17 compiler (no GNU extensions)\n+if test \"x$use_cxx17\" = xyes -o \"x$enable_fuzz\" = xyes ; then\n+  AX_CXX_COMPILE_STDCXX([17], [noext], [mandatory])\n+else\n+  AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory])\n+fi\n+\n+dnl Check if -latomic is required for <std::atomic>\n+CHECK_ATOMIC\n+\n+dnl Unless the user specified OBJCXX, force it to be the same as CXX. This ensures\n+dnl that we get the same -std flags for both.\n+m4_ifdef([AC_PROG_OBJCXX],[\n+if test \"x${OBJCXX+set}\" = \"x\"; then\n+  OBJCXX=\"${CXX}\"\n+fi\n+AC_PROG_OBJCXX\n+])\n+\n+dnl Since libtool 1.5.2 (released 2004-01-25), on Linux libtool no longer\n+dnl sets RPATH for any directories in the dynamic linker search path.\n+dnl See more: https://wiki.debian.org/RpathIssue\n+LT_PREREQ([1.5.2])\n+dnl Libtool init checks.\n+LT_INIT([pic-only])\n+\n+dnl Check/return PATH for base programs.\n+AC_PATH_TOOL(AR, ar)\n+AC_PATH_TOOL(RANLIB, ranlib)\n+AC_PATH_TOOL(STRIP, strip)\n+AC_PATH_TOOL(GCOV, gcov)\n+AC_PATH_TOOL(LLVM_COV, llvm-cov)\n+AC_PATH_PROG(LCOV, lcov)\n+dnl Python 3.5 is specified in .python-version and should be used if available, see doc/dependencies.md\n+AC_PATH_PROGS([PYTHON], [python3.5 python3.6 python3.7 python3.8 python3 python])\n+AC_PATH_PROG(GENHTML, genhtml)\n+AC_PATH_PROG([GIT], [git])\n+AC_PATH_PROG(CCACHE,ccache)\n+AC_PATH_PROG(XGETTEXT,xgettext)\n+AC_PATH_PROG(HEXDUMP,hexdump)\n+AC_PATH_TOOL(READELF, readelf)\n+AC_PATH_TOOL(CPPFILT, c++filt)\n+AC_PATH_TOOL(OBJCOPY, objcopy)\n+AC_PATH_PROG(DOXYGEN, doxygen)\n+AM_CONDITIONAL([HAVE_DOXYGEN], [test -n \"$DOXYGEN\"])\n+\n+AC_ARG_VAR(PYTHONPATH, Augments the default search path for python module files)\n+\n+AC_ARG_ENABLE([wallet],\n+  [AS_HELP_STRING([--disable-wallet],\n+  [disable wallet (enabled by default)])],\n+  [enable_wallet=$enableval],\n+  [enable_wallet=yes])\n+\n+AC_ARG_WITH([sqlite],\n+  [AS_HELP_STRING([--with-sqlite=yes|no|auto],\n+  [enable sqlite wallet support (default: auto, i.e., enabled if wallet is enabled and sqlite is found)])],\n+  [use_sqlite=$withval],\n+  [use_sqlite=auto])\n+\n+AC_ARG_WITH([miniupnpc],\n+  [AS_HELP_STRING([--with-miniupnpc],\n+  [enable UPNP (default is yes if libminiupnpc is found)])],\n+  [use_upnp=$withval],\n+  [use_upnp=auto])\n+\n+AC_ARG_ENABLE([upnp-default],\n+  [AS_HELP_STRING([--enable-upnp-default],\n+  [if UPNP is enabled, turn it on at startup (default is no)])],\n+  [use_upnp_default=$enableval],\n+  [use_upnp_default=no])\n+\n+AC_ARG_ENABLE(tests,\n+    AS_HELP_STRING([--disable-tests],[do not compile tests (default is to compile)]),\n+    [use_tests=$enableval],\n+    [use_tests=yes])\n+\n+AC_ARG_ENABLE(gui-tests,\n+    AS_HELP_STRING([--disable-gui-tests],[do not compile GUI tests (default is to compile if GUI and tests enabled)]),\n+    [use_gui_tests=$enableval],\n+    [use_gui_tests=$use_tests])\n+\n+AC_ARG_ENABLE(bench,\n+    AS_HELP_STRING([--disable-bench],[do not compile benchmarks (default is to compile)]),\n+    [use_bench=$enableval],\n+    [use_bench=yes])\n+\n+AC_ARG_ENABLE([extended-functional-tests],\n+    AS_HELP_STRING([--enable-extended-functional-tests],[enable expensive functional tests when using lcov (default no)]),\n+    [use_extended_functional_tests=$enableval],\n+    [use_extended_functional_tests=no])\n+\n+AC_ARG_ENABLE([fuzz],\n+    AS_HELP_STRING([--enable-fuzz],\n+    [enable building of fuzz targets (default no). enabling this will disable all other targets]),\n+    [enable_fuzz=$enableval],\n+    [enable_fuzz=no])\n+\n+AC_ARG_WITH([qrencode],\n+  [AS_HELP_STRING([--with-qrencode],\n+  [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n+  [use_qr=$withval],\n+  [use_qr=auto])\n+\n+AC_ARG_ENABLE([hardening],\n+  [AS_HELP_STRING([--disable-hardening],\n+  [do not attempt to harden the resulting executables (default is to harden when possible)])],\n+  [use_hardening=$enableval],\n+  [use_hardening=auto])\n+\n+AC_ARG_ENABLE([reduce-exports],\n+  [AS_HELP_STRING([--enable-reduce-exports],\n+  [attempt to reduce exported symbols in the resulting executables (default is no)])],\n+  [use_reduce_exports=$enableval],\n+  [use_reduce_exports=no])\n+\n+AC_ARG_ENABLE([ccache],\n+  [AS_HELP_STRING([--disable-ccache],\n+  [do not use ccache for building (default is to use if found)])],\n+  [use_ccache=$enableval],\n+  [use_ccache=auto])\n+\n+dnl Suppress warnings from external headers (e.g. Boost, Qt).\n+dnl May be useful if warnings from external headers clutter the build output\n+dnl too much, so that it becomes difficult to spot Bitcoin Core warnings\n+dnl or if they cause a build failure with --enable-werror.\n+AC_ARG_ENABLE([suppress-external-warnings],\n+  [AS_HELP_STRING([--enable-suppress-external-warnings],\n+                  [Suppress warnings from external headers (default is no)])],\n+  [suppress_external_warnings=$enableval],\n+  [suppress_external_warnings=no])\n+\n+AC_ARG_ENABLE([lcov],\n+  [AS_HELP_STRING([--enable-lcov],\n+  [enable lcov testing (default is no)])],\n+  [use_lcov=$enableval],\n+  [use_lcov=no])\n+\n+AC_ARG_ENABLE([lcov-branch-coverage],\n+  [AS_HELP_STRING([--enable-lcov-branch-coverage],\n+  [enable lcov testing branch coverage (default is no)])],\n+  [use_lcov_branch=yes],\n+  [use_lcov_branch=no])\n+\n+AC_ARG_ENABLE([glibc-back-compat],\n+  [AS_HELP_STRING([--enable-glibc-back-compat],\n+  [enable backwards compatibility with glibc])],\n+  [use_glibc_compat=$enableval],\n+  [use_glibc_compat=no])\n+\n+AC_ARG_ENABLE([threadlocal],\n+  [AS_HELP_STRING([--enable-threadlocal],\n+  [enable features that depend on the c++ thread_local keyword (currently just thread names in debug logs). (default is to enabled if there is platform support and glibc-back-compat is not enabled)])],\n+  [use_thread_local=$enableval],\n+  [use_thread_local=auto])\n+\n+AC_ARG_ENABLE([asm],\n+  [AS_HELP_STRING([--disable-asm],\n+  [disable assembly routines (enabled by default)])],\n+  [use_asm=$enableval],\n+  [use_asm=yes])\n+\n+if test \"x$use_asm\" = xyes; then\n+  AC_DEFINE(USE_ASM, 1, [Define this symbol to build in assembly routines])\n+fi\n+\n+AC_ARG_WITH([system-univalue],\n+  [AS_HELP_STRING([--with-system-univalue],\n+  [Build with system UniValue (default is no)])],\n+  [system_univalue=$withval],\n+  [system_univalue=no]\n+)\n+AC_ARG_ENABLE([zmq],\n+  [AS_HELP_STRING([--disable-zmq],\n+  [disable ZMQ notifications])],\n+  [use_zmq=$enableval],\n+  [use_zmq=yes])\n+\n+AC_ARG_WITH([libmultiprocess],\n+  [AS_HELP_STRING([--with-libmultiprocess=yes|no|auto],\n+  [Build with libmultiprocess library. (default: auto, i.e. detect with pkg-config)])],\n+  [with_libmultiprocess=$withval],\n+  [with_libmultiprocess=auto])\n+\n+AC_ARG_WITH([mpgen],\n+  [AS_HELP_STRING([--with-mpgen=yes|no|auto|PREFIX],\n+  [Build with libmultiprocess codegen tool. Useful to specify different libmultiprocess host system library and build system codegen tool prefixes when cross-compiling (default is host system libmultiprocess prefix)])],\n+  [with_mpgen=$withval],\n+  [with_mpgen=auto])\n+\n+AC_ARG_ENABLE([multiprocess],\n+  [AS_HELP_STRING([--enable-multiprocess],\n+  [build multiprocess bitcoin-node, bitcoin-wallet, and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental (default is no)])],\n+  [enable_multiprocess=$enableval],\n+  [enable_multiprocess=no])\n+\n+AC_ARG_ENABLE(man,\n+    [AS_HELP_STRING([--disable-man],\n+                    [do not install man pages (default is to install)])],,\n+    enable_man=yes)\n+AM_CONDITIONAL(ENABLE_MAN, test \"$enable_man\" != no)\n+\n+dnl Enable debug\n+AC_ARG_ENABLE([debug],\n+    [AS_HELP_STRING([--enable-debug],\n+                    [use compiler flags and macros suited for debugging (default is no)])],\n+    [enable_debug=$enableval],\n+    [enable_debug=no])\n+\n+dnl Enable different -fsanitize options\n+AC_ARG_WITH([sanitizers],\n+    [AS_HELP_STRING([--with-sanitizers],\n+                    [comma separated list of extra sanitizers to build with (default is none enabled)])],\n+    [use_sanitizers=$withval])\n+\n+dnl Enable gprof profiling\n+AC_ARG_ENABLE([gprof],\n+    [AS_HELP_STRING([--enable-gprof],\n+                    [use gprof profiling compiler flags (default is no)])],\n+    [enable_gprof=$enableval],\n+    [enable_gprof=no])\n+\n+dnl Pass compiler & linker flags that make builds deterministic\n+AC_ARG_ENABLE([determinism],\n+    [AS_HELP_STRING([--enable-determinism],\n+                    [Enable compilation flags that make builds deterministic (default is no)])],\n+    [enable_determinism=$enableval],\n+    [enable_determinism=no])\n+\n+dnl Turn warnings into errors\n+AC_ARG_ENABLE([werror],\n+    [AS_HELP_STRING([--enable-werror],\n+                    [Treat certain compiler warnings as errors (default is no)])],\n+    [enable_werror=$enableval],\n+    [enable_werror=no])\n+\n+AC_LANG_PUSH([C++])\n+\n+dnl Check for a flag to turn compiler warnings into errors. This is helpful for checks which may\n+dnl appear to succeed because by default they merely emit warnings when they fail.\n+dnl\n+dnl Note that this is not necessarily a check to see if -Werror is supported, but rather to see if\n+dnl a compile with -Werror can succeed. This is important because the compiler may already be\n+dnl warning about something unrelated, for example about some path issue. If that is the case,\n+dnl -Werror cannot be used because all of those warnings would be turned into errors.\n+AX_CHECK_COMPILE_FLAG([-Werror],[CXXFLAG_WERROR=\"-Werror\"],[CXXFLAG_WERROR=\"\"])\n+\n+dnl Check for a flag to turn linker warnings into errors. When flags are passed to linkers via the\n+dnl compiler driver using a -Wl,-foo flag, linker warnings may be swallowed rather than bubbling up.\n+dnl See note above, the same applies here as well.\n+dnl\n+dnl LDFLAG_WERROR Should only be used when testing -Wl,*\n+case $host in\n+ *darwin*)\n+    AX_CHECK_LINK_FLAG([-Wl,-fatal_warnings],[LDFLAG_WERROR=\"-Wl,-fatal_warnings\"],[LDFLAG_WERROR=\"\"])\n+    ;;\n+  *)\n+    AX_CHECK_LINK_FLAG([-Wl,--fatal-warnings],[LDFLAG_WERROR=\"-Wl,--fatal-warnings\"],[LDFLAG_WERROR=\"\"])\n+    ;;\n+esac\n+\n+if test \"x$enable_debug\" = xyes; then\n+  dnl Clear default -g -O2 flags\n+  if test \"x$CXXFLAGS_overridden\" = xno; then\n+\tCXXFLAGS=\"\"\n+  fi\n+\n+  dnl Disable all optimizations\n+  AX_CHECK_COMPILE_FLAG([-O0], [[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -O0\"]],,[[$CXXFLAG_WERROR]])\n+\n+  dnl Prefer -g3, fall back to -g if that is unavailable.\n+  AX_CHECK_COMPILE_FLAG(\n+    [-g3],\n+    [[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -g3\"]],\n+    [AX_CHECK_COMPILE_FLAG([-g],[[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -g\"]],,[[$CXXFLAG_WERROR]])],\n+    [[$CXXFLAG_WERROR]])\n+\n+  AX_CHECK_PREPROC_FLAG([-DDEBUG],[[DEBUG_CPPFLAGS=\"$DEBUG_CPPFLAGS -DDEBUG\"]],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_PREPROC_FLAG([-DDEBUG_LOCKORDER],[[DEBUG_CPPFLAGS=\"$DEBUG_CPPFLAGS -DDEBUG_LOCKORDER\"]],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-ftrapv],[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -ftrapv\"],,[[$CXXFLAG_WERROR]])\n+fi\n+\n+if test x$use_sanitizers != x; then\n+  dnl First check if the compiler accepts flags. If an incompatible pair like\n+  dnl -fsanitize=address,thread is used here, this check will fail. This will also\n+  dnl fail if a bad argument is passed, e.g. -fsanitize=undfeined\n+  AX_CHECK_COMPILE_FLAG(\n+    [[-fsanitize=$use_sanitizers]],\n+    [[SANITIZER_CXXFLAGS=-fsanitize=$use_sanitizers]],\n+    [AC_MSG_ERROR([compiler did not accept requested flags])])\n+\n+  dnl Some compilers (e.g. GCC) require additional libraries like libasan,\n+  dnl libtsan, libubsan, etc. Make sure linking still works with the sanitize\n+  dnl flag. This is a separate check so we can give a better error message when\n+  dnl the sanitize flags are supported by the compiler but the actual sanitizer\n+  dnl libs are missing.\n+  AX_CHECK_LINK_FLAG(\n+    [[-fsanitize=$use_sanitizers]],\n+    [[SANITIZER_LDFLAGS=-fsanitize=$use_sanitizers]],\n+    [AC_MSG_ERROR([linker did not accept requested flags, you are missing required libraries])],\n+    [],\n+    [AC_LANG_PROGRAM([[\n+    #include <cstdint>\n+    #include <cstddef>\n+    extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) { return 0; }\n+    __attribute__((weak)) // allow for libFuzzer linking\n+    ]],[[]])])\n+fi\n+\n+ERROR_CXXFLAGS=\n+if test \"x$enable_werror\" = \"xyes\"; then\n+  if test \"x$CXXFLAG_WERROR\" = \"x\"; then\n+    AC_MSG_ERROR(\"enable-werror set but -Werror is not usable\")\n+  fi\n+  AX_CHECK_COMPILE_FLAG([-Werror=gnu],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=gnu\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=vla\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=shadow-field],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=shadow-field\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=switch],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=switch\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=thread-safety],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=range-loop-analysis],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=range-loop-analysis\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=unused-variable],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=unused-variable\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=date-time],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=date-time\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=return-type],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=return-type\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=conditional-uninitialized],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=conditional-uninitialized\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=sign-compare],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=sign-compare\"],,[[$CXXFLAG_WERROR]])\n+  dnl -Wsuggest-override is broken with GCC before 9.2\n+  dnl https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78010\n+  AX_CHECK_COMPILE_FLAG([-Werror=suggest-override],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=suggest-override\"],,[[$CXXFLAG_WERROR]],\n+                        [AC_LANG_SOURCE([[struct A { virtual void f(); }; struct B : A { void f() final; };]])])\n+  AX_CHECK_COMPILE_FLAG([-Werror=unreachable-code-loop-increment],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=unreachable-code-loop-increment\"],,[[$CXXFLAG_WERROR]])\n+fi\n+\n+if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n+  AX_CHECK_COMPILE_FLAG([-Wall],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wall\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wextra],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wgnu],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wgnu\"],,[[$CXXFLAG_WERROR]])\n+  dnl some compilers will ignore -Wformat-security without -Wformat, so just combine the two here.\n+  AX_CHECK_COMPILE_FLAG([-Wformat -Wformat-security],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wformat -Wformat-security\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wvla],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wvla\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wshadow-field],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wshadow-field\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wswitch],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wswitch\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wthread-safety],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wthread-safety\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wrange-loop-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wrange-loop-analysis\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wredundant-decls],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wredundant-decls\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wunused-variable],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunused-variable\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wdate-time],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wdate-time\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wconditional-uninitialized],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wconditional-uninitialized\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wsign-compare],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wsign-compare\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wduplicated-branches],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wduplicated-branches\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wduplicated-cond],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wduplicated-cond\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wlogical-op],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wlogical-op\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Woverloaded-virtual],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Woverloaded-virtual\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wsuggest-override],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wsuggest-override\"],,[[$CXXFLAG_WERROR]],\n+                        [AC_LANG_SOURCE([[struct A { virtual void f(); }; struct B : A { void f() final; };]])])\n+  AX_CHECK_COMPILE_FLAG([-Wunreachable-code-loop-increment],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunreachable-code-loop-increment\"],,[[$CXXFLAG_WERROR]])\n+\n+  dnl Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n+  dnl unknown options if any other warning is produced. Test the -Wfoo case, and\n+  dnl set the -Wno-foo case if it works.\n+  AX_CHECK_COMPILE_FLAG([-Wunused-parameter],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-parameter\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wself-assign],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-register\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-implicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wdeprecated-copy],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-copy\"],,[[$CXXFLAG_WERROR]])\n+fi\n+\n+dnl Don't allow extended (non-ASCII) symbols in identifiers. This is easier for code review.\n+AX_CHECK_COMPILE_FLAG([-fno-extended-identifiers],[[CXXFLAGS=\"$CXXFLAGS -fno-extended-identifiers\"]],,[[$CXXFLAG_WERROR]])\n+\n+enable_sse42=no\n+enable_sse41=no\n+enable_avx2=no\n+enable_shani=no\n+\n+if test \"x$use_asm\" = \"xyes\"; then\n+\n+dnl Check for optional instruction set support. Enabling these does _not_ imply that all code will\n+dnl be compiled with them, rather that specific objects/libs may use them after checking for runtime\n+dnl compatibility.\n+\n+dnl x86\n+AX_CHECK_COMPILE_FLAG([-msse4.2],[[SSE42_CXXFLAGS=\"-msse4.2\"]],,[[$CXXFLAG_WERROR]])\n+AX_CHECK_COMPILE_FLAG([-msse4.1],[[SSE41_CXXFLAGS=\"-msse4.1\"]],,[[$CXXFLAG_WERROR]])\n+AX_CHECK_COMPILE_FLAG([-mavx -mavx2],[[AVX2_CXXFLAGS=\"-mavx -mavx2\"]],,[[$CXXFLAG_WERROR]])\n+AX_CHECK_COMPILE_FLAG([-msse4 -msha],[[SHANI_CXXFLAGS=\"-msse4 -msha\"]],,[[$CXXFLAG_WERROR]])\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $SSE42_CXXFLAGS\"\n+AC_MSG_CHECKING(for SSE4.2 intrinsics)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <stdint.h>\n+    #if defined(_MSC_VER)\n+    #include <intrin.h>\n+    #elif defined(__GNUC__) && defined(__SSE4_2__)\n+    #include <nmmintrin.h>\n+    #endif\n+  ]],[[\n+    uint64_t l = 0;\n+    l = _mm_crc32_u8(l, 0);\n+    l = _mm_crc32_u32(l, 0);\n+    l = _mm_crc32_u64(l, 0);\n+    return l;\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_sse42=yes],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $SSE41_CXXFLAGS\"\n+AC_MSG_CHECKING(for SSE4.1 intrinsics)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <stdint.h>\n+    #include <immintrin.h>\n+  ]],[[\n+    __m128i l = _mm_set1_epi32(0);\n+    return _mm_extract_epi32(l, 3);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_sse41=yes; AC_DEFINE(ENABLE_SSE41, 1, [Define this symbol to build code that uses SSE4.1 intrinsics]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $AVX2_CXXFLAGS\"\n+AC_MSG_CHECKING(for AVX2 intrinsics)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <stdint.h>\n+    #include <immintrin.h>\n+  ]],[[\n+    __m256i l = _mm256_set1_epi32(0);\n+    return _mm256_extract_epi32(l, 7);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_avx2=yes; AC_DEFINE(ENABLE_AVX2, 1, [Define this symbol to build code that uses AVX2 intrinsics]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $SHANI_CXXFLAGS\"\n+AC_MSG_CHECKING(for SHA-NI intrinsics)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <stdint.h>\n+    #include <immintrin.h>\n+  ]],[[\n+    __m128i i = _mm_set1_epi32(0);\n+    __m128i j = _mm_set1_epi32(1);\n+    __m128i k = _mm_set1_epi32(2);\n+    return _mm_extract_epi32(_mm_sha256rnds2_epu32(i, i, k), 0);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_shani=yes; AC_DEFINE(ENABLE_SHANI, 1, [Define this symbol to build code that uses SHA-NI intrinsics]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n+# ARM\n+AX_CHECK_COMPILE_FLAG([-march=armv8-a+crc+crypto],[[ARM_CRC_CXXFLAGS=\"-march=armv8-a+crc+crypto\"]],,[[$CXXFLAG_WERROR]])\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $ARM_CRC_CXXFLAGS\"\n+AC_MSG_CHECKING(for ARM CRC32 intrinsics)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <arm_acle.h>\n+    #include <arm_neon.h>\n+  ]],[[\n+    __crc32cb(0, 0); __crc32ch(0, 0); __crc32cw(0, 0); __crc32cd(0, 0);\n+    vmull_p64(0, 0);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_arm_crc=yes; ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n+fi\n+\n+CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n+\n+AC_ARG_WITH([utils],\n+  [AS_HELP_STRING([--with-utils],\n+  [build bitcoin-cli bitcoin-tx bitcoin-wallet (default=yes)])],\n+  [build_bitcoin_utils=$withval],\n+  [build_bitcoin_utils=yes])\n+\n+AC_ARG_ENABLE([util-cli],\n+  [AS_HELP_STRING([--enable-util-cli],\n+  [build bitcoin-cli])],\n+  [build_bitcoin_cli=$enableval],\n+  [build_bitcoin_cli=$build_bitcoin_utils])\n+\n+AC_ARG_ENABLE([util-tx],\n+  [AS_HELP_STRING([--enable-util-tx],\n+  [build bitcoin-tx])],\n+  [build_bitcoin_tx=$enableval],\n+  [build_bitcoin_tx=$build_bitcoin_utils])\n+\n+AC_ARG_ENABLE([util-wallet],\n+  [AS_HELP_STRING([--enable-util-wallet],\n+  [build bitcoin-wallet])],\n+  [build_bitcoin_wallet=$enableval],\n+  [build_bitcoin_wallet=$build_bitcoin_utils])\n+\n+AC_ARG_WITH([libs],\n+  [AS_HELP_STRING([--with-libs],\n+  [build libraries (default=yes)])],\n+  [build_bitcoin_libs=$withval],\n+  [build_bitcoin_libs=yes])\n+\n+AC_ARG_WITH([daemon],\n+  [AS_HELP_STRING([--with-daemon],\n+  [build bitcoind daemon (default=yes)])],\n+  [build_bitcoind=$withval],\n+  [build_bitcoind=yes])\n+\n+case $host in\n+  *mingw*)\n+     TARGET_OS=windows\n+     AC_CHECK_LIB([kernel32], [GetModuleFileNameA],, AC_MSG_ERROR(libkernel32 missing))\n+     AC_CHECK_LIB([user32],   [main],, AC_MSG_ERROR(libuser32 missing))\n+     AC_CHECK_LIB([gdi32],    [main],, AC_MSG_ERROR(libgdi32 missing))\n+     AC_CHECK_LIB([comdlg32], [main],, AC_MSG_ERROR(libcomdlg32 missing))\n+     AC_CHECK_LIB([winmm],    [main],, AC_MSG_ERROR(libwinmm missing))\n+     AC_CHECK_LIB([shell32],  [SHGetSpecialFolderPathW],, AC_MSG_ERROR(libshell32 missing))\n+     AC_CHECK_LIB([comctl32], [main],, AC_MSG_ERROR(libcomctl32 missing))\n+     AC_CHECK_LIB([ole32],    [CoCreateInstance],, AC_MSG_ERROR(libole32 missing))\n+     AC_CHECK_LIB([oleaut32], [main],, AC_MSG_ERROR(liboleaut32 missing))\n+     AC_CHECK_LIB([uuid],     [main],, AC_MSG_ERROR(libuuid missing))\n+     AC_CHECK_LIB([advapi32], [CryptAcquireContextW],, AC_MSG_ERROR(libadvapi32 missing))\n+     AC_CHECK_LIB([ws2_32],   [WSAStartup],, AC_MSG_ERROR(libws2_32 missing))\n+     AC_CHECK_LIB([shlwapi],  [PathRemoveFileSpecW],, AC_MSG_ERROR(libshlwapi missing))\n+     AC_CHECK_LIB([iphlpapi], [GetAdaptersAddresses],, AC_MSG_ERROR(libiphlpapi missing))\n+\n+     dnl -static is interpreted by libtool, where it has a different meaning.\n+     dnl In libtool-speak, it's -all-static.\n+     AX_CHECK_LINK_FLAG([[-static]],[LIBTOOL_APP_LDFLAGS=\"$LIBTOOL_APP_LDFLAGS -all-static\"])\n+\n+     AC_PATH_PROG([MAKENSIS], [makensis], none)\n+     if test x$MAKENSIS = xnone; then\n+       AC_MSG_WARN(\"makensis not found. Cannot create installer.\")\n+     fi\n+\n+     AC_PATH_TOOL(WINDRES, windres, none)\n+     if test x$WINDRES = xnone; then\n+       AC_MSG_ERROR(\"windres not found\")\n+     fi\n+\n+     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -D_WIN32_WINNT=0x0601 -D_WIN32_IE=0x0501 -DWIN32_LEAN_AND_MEAN\"\n+\n+     dnl libtool insists upon adding -nostdlib and a list of objects/libs to link against.\n+     dnl That breaks our ability to build dll's with static libgcc/libstdc++/libssp. Override\n+     dnl its command here, with the predeps/postdeps removed, and -static inserted. Postdeps are\n+     dnl also overridden to prevent their insertion later.\n+     dnl This should only affect dll's.\n+     archive_cmds_CXX=\"\\$CC -shared \\$libobjs \\$deplibs \\$compiler_flags -static -o \\$output_objdir/\\$soname \\${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker \\$lib\"\n+     postdeps_CXX=\n+\n+     dnl We require Windows 7 (NT 6.1) or later\n+     AX_CHECK_LINK_FLAG([[-Wl,--major-subsystem-version -Wl,6 -Wl,--minor-subsystem-version -Wl,1]],[LDFLAGS=\"$LDFLAGS -Wl,--major-subsystem-version -Wl,6 -Wl,--minor-subsystem-version -Wl,1\"],,[[$LDFLAG_WERROR]])\n+     ;;\n+  *darwin*)\n+     TARGET_OS=darwin\n+     if  test x$cross_compiling != xyes; then\n+       BUILD_OS=darwin\n+       AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n+       AC_CHECK_PROG([BREW],brew, brew)\n+       if test x$BREW = xbrew; then\n+         dnl These Homebrew packages may be keg-only, meaning that they won't be found\n+         dnl in expected paths because they may conflict with system files. Ask\n+         dnl Homebrew where each one is located, then adjust paths accordingly.\n+         dnl It's safe to add these paths even if the functionality is disabled by\n+         dnl the user (--without-wallet or --without-gui for example).\n+\n+         bdb_prefix=$($BREW --prefix berkeley-db4 2>/dev/null)\n+         qt5_prefix=$($BREW --prefix qt5 2>/dev/null)\n+         if test x$bdb_prefix != x && test \"x$BDB_CFLAGS\" = \"x\" && test \"x$BDB_LIBS\" = \"x\"; then\n+           dnl This must precede the call to BITCOIN_FIND_BDB48 below.\n+           BDB_CFLAGS=\"-I$bdb_prefix/include\"\n+           BDB_LIBS=\"-L$bdb_prefix/lib -ldb_cxx-4.8\"\n+         fi\n+         if test x$qt5_prefix != x; then\n+           PKG_CONFIG_PATH=\"$qt5_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n+           export PKG_CONFIG_PATH\n+         fi\n+       fi\n+     else\n+       case $build_os in\n+         *darwin*)\n+           BUILD_OS=darwin\n+           ;;\n+         *)\n+           AC_PATH_TOOL([DSYMUTIL], [dsymutil], dsymutil)\n+           AC_PATH_TOOL([INSTALLNAMETOOL], [install_name_tool], install_name_tool)\n+           AC_PATH_TOOL([OTOOL], [otool], otool)\n+           AC_PATH_PROGS([GENISOIMAGE], [genisoimage mkisofs],genisoimage)\n+           AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n+           AC_PATH_PROGS([IMAGEMAGICK_CONVERT], [convert],convert)\n+           AC_PATH_PROGS([TIFFCP], [tiffcp],tiffcp)\n+\n+           dnl libtool will try to strip the static lib, which is a problem for\n+           dnl cross-builds because strip attempts to call a hard-coded ld,\n+           dnl which may not exist in the path. Stripping the .a is not\n+           dnl necessary, so just disable it.\n+           old_striplib=\n+           ;;\n+       esac\n+     fi\n+\n+     AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"],, [[$LDFLAG_WERROR]])\n+     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX -DOBJC_OLD_DISPATCH_PROTOTYPES=0\"\n+     OBJCXXFLAGS=\"$CXXFLAGS\"\n+     ;;\n+   *android*)\n+     dnl make sure android stays above linux for hosts like *linux-android*\n+     TARGET_OS=android\n+     ;;\n+   *linux*)\n+     TARGET_OS=linux\n+     ;;\n+esac\n+\n+if test x$use_extended_functional_tests != xno; then\n+  AC_SUBST(EXTENDED_FUNCTIONAL_TESTS, --extended)\n+fi\n+\n+if test x$use_lcov = xyes; then\n+  if test x$LCOV = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but lcov not found\")\n+  fi\n+  if test x$PYTHON = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but python not found\")\n+  fi\n+  if test x$GENHTML = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but genhtml not found\")\n+  fi\n+\n+  AC_MSG_CHECKING([whether compiler is Clang])\n+  AC_PREPROC_IFELSE([AC_LANG_SOURCE([[\n+      #if defined(__clang__) && defined(__llvm__)\n+      // Compiler is Clang\n+      #else\n+      #  error Compiler is not Clang\n+      #endif\n+    ]])],[\n+      AC_MSG_RESULT([yes])\n+      if test x$LLVM_COV = x; then\n+        AC_MSG_ERROR([lcov testing requested but llvm-cov not found])\n+      fi\n+      COV_TOOL=\"$LLVM_COV gcov\"\n+    ],[\n+      AC_MSG_RESULT([no])\n+      if test x$GCOV = x; then\n+        AC_MSG_ERROR([lcov testing requested but gcov not found])\n+      fi\n+      COV_TOOL=\"$GCOV\"\n+  ])\n+  AC_SUBST(COV_TOOL)\n+  AC_SUBST(COV_TOOL_WRAPPER, \"cov_tool_wrapper.sh\")\n+  LCOV=\"$LCOV --gcov-tool $(pwd)/$COV_TOOL_WRAPPER\"\n+\n+  AX_CHECK_LINK_FLAG([[--coverage]], [LDFLAGS=\"$LDFLAGS --coverage\"],\n+    [AC_MSG_ERROR(\"lcov testing requested but --coverage linker flag does not work\")])\n+  AX_CHECK_COMPILE_FLAG([--coverage],[CXXFLAGS=\"$CXXFLAGS --coverage\"],\n+    [AC_MSG_ERROR(\"lcov testing requested but --coverage flag does not work\")])\n+  CXXFLAGS=\"$CXXFLAGS -Og\"\n+fi\n+\n+if test x$use_lcov_branch != xno; then\n+  AC_SUBST(LCOV_OPTS, \"$LCOV_OPTS --rc lcov_branch_coverage=1\")\n+fi\n+\n+dnl Check for endianness\n+AC_C_BIGENDIAN\n+\n+dnl Check for pthread compile/link requirements\n+AX_PTHREAD\n+\n+dnl The following macro will add the necessary defines to bitcoin-config.h, but\n+dnl they also need to be passed down to any subprojects. Pull the results out of\n+dnl the cache and add them to CPPFLAGS.\n+AC_SYS_LARGEFILE\n+dnl detect POSIX or GNU variant of strerror_r\n+AC_FUNC_STRERROR_R\n+\n+if test x$ac_cv_sys_file_offset_bits != x &&\n+   test x$ac_cv_sys_file_offset_bits != xno &&\n+   test x$ac_cv_sys_file_offset_bits != xunknown; then\n+  CPPFLAGS=\"$CPPFLAGS -D_FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits\"\n+fi\n+\n+if test x$ac_cv_sys_large_files != x &&\n+   test x$ac_cv_sys_large_files != xno &&\n+   test x$ac_cv_sys_large_files != xunknown; then\n+  CPPFLAGS=\"$CPPFLAGS -D_LARGE_FILES=$ac_cv_sys_large_files\"\n+fi\n+\n+AX_GCC_FUNC_ATTRIBUTE([visibility])\n+AX_GCC_FUNC_ATTRIBUTE([dllexport])\n+AX_GCC_FUNC_ATTRIBUTE([dllimport])\n+\n+if test x$use_glibc_compat != xno; then\n+  AX_CHECK_LINK_FLAG([[-Wl,--wrap=__divmoddi4]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=__divmoddi4\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,--wrap=log2f]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=log2f\"])\n+else\n+  AC_SEARCH_LIBS([clock_gettime],[rt])\n+fi\n+\n+if test \"x$enable_gprof\" = xyes; then\n+    dnl -pg is incompatible with -pie. Since hardening and profiling together doesn't make sense,\n+    dnl we simply make them mutually exclusive here. Additionally, hardened toolchains may force\n+    dnl -pie by default, in which case it needs to be turned off with -no-pie.\n+\n+    if test x$use_hardening = xyes; then\n+        AC_MSG_ERROR(gprof profiling is not compatible with hardening. Reconfigure with --disable-hardening or --disable-gprof)\n+    fi\n+    use_hardening=no\n+    AX_CHECK_COMPILE_FLAG([-pg],[GPROF_CXXFLAGS=\"-pg\"],\n+        [AC_MSG_ERROR(gprof profiling requested but not available)], [[$CXXFLAG_WERROR]])\n+\n+    AX_CHECK_LINK_FLAG([[-no-pie]], [GPROF_LDFLAGS=\"-no-pie\"])\n+    AX_CHECK_LINK_FLAG([[-pg]],[GPROF_LDFLAGS=\"$GPROF_LDFLAGS -pg\"],\n+        [AC_MSG_ERROR(gprof profiling requested but not available)], [[$GPROF_LDFLAGS]])\n+fi\n+\n+if test x$TARGET_OS != xwindows; then\n+  dnl All windows code is PIC, forcing it on just adds useless compile warnings\n+  AX_CHECK_COMPILE_FLAG([-fPIC],[PIC_FLAGS=\"-fPIC\"])\n+fi\n+\n+dnl All versions of gcc that we commonly use for building are subject to bug\n+dnl https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+dnl -fstack-reuse=none for all gcc builds. (Only gcc understands this flag)\n+AX_CHECK_COMPILE_FLAG([-fstack-reuse=none],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-reuse=none\"])\n+if test x$use_hardening != xno; then\n+  use_hardening=yes\n+  AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n+  AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n+\n+  AX_CHECK_COMPILE_FLAG([-fcf-protection=full],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fcf-protection=full\"])\n+\n+  dnl stack-clash-protection does not work properly when building for Windows.\n+  dnl We use the test case from https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90458\n+  dnl to determine if it can be enabled.\n+  AX_CHECK_COMPILE_FLAG([-fstack-clash-protection],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-clash-protection\"],[],[\"-O0\"],\n+    [AC_LANG_SOURCE([[class D {public: unsigned char buf[32768];}; int main() {D d; return 0;}]])])\n+\n+  dnl When enable_debug is yes, all optimizations are disabled.\n+  dnl However, FORTIFY_SOURCE requires that there is some level of optimization, otherwise it does nothing and just creates a compiler warning.\n+  dnl Since FORTIFY_SOURCE is a no-op without optimizations, do not enable it when enable_debug is yes.\n+  if test x$enable_debug != xyes; then\n+    AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n+      AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n+        HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n+      ])\n+      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n+    ])\n+  fi\n+\n+  AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,--high-entropy-va]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--high-entropy-va\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,-z,separate-code]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,separate-code\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-fPIE -pie]], [PIE_FLAGS=\"-fPIE\"; HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"],, [[$CXXFLAG_WERROR]])\n+\n+  case $host in\n+    *mingw*)\n+       AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(libssp missing))\n+    ;;\n+  esac\n+fi\n+\n+dnl These flags are specific to ld64, and may cause issues with other linkers.\n+dnl For example: GNU ld will interpret -dead_strip as -de and then try and use\n+dnl \"ad_strip\" as the symbol for the entry point.\n+if test x$TARGET_OS = xdarwin; then\n+  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip_dylibs]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip_dylibs\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,-bind_at_load]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-bind_at_load\"],, [[$LDFLAG_WERROR]])\n+fi\n+\n+if test x$enable_determinism = xyes; then\n+  if test x$TARGET_OS = xwindows; then\n+    AX_CHECK_LINK_FLAG([[-Wl,--no-insert-timestamp]], [LDFLAGS=\"$LDFLAGS -Wl,--no-insert-timestamp\"],, [[$LDFLAG_WERROR]])\n+  fi\n+fi\n+\n+AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h sys/sysctl.h vm/vm_param.h sys/vmmeter.h sys/resources.h])\n+\n+AC_CHECK_DECLS([getifaddrs, freeifaddrs],,,\n+    [#include <sys/types.h>\n+    #include <ifaddrs.h>]\n+)\n+AC_CHECK_DECLS([strnlen])\n+\n+dnl Check for daemon(3), unrelated to --with-daemon (although used by it)\n+AC_CHECK_DECLS([daemon])\n+\n+AC_CHECK_DECLS([le16toh, le32toh, le64toh, htole16, htole32, htole64, be16toh, be32toh, be64toh, htobe16, htobe32, htobe64],,,\n+\t\t[#if HAVE_ENDIAN_H\n+                 #include <endian.h>\n+                 #elif HAVE_SYS_ENDIAN_H\n+                 #include <sys/endian.h>\n+                 #endif])\n+\n+AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,\n+\t\t[#if HAVE_BYTESWAP_H\n+                 #include <byteswap.h>\n+                 #endif])\n+\n+AC_MSG_CHECKING(for __builtin_clzl)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[ ]], [[\n+ (void) __builtin_clzl(0);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_BUILTIN_CLZL, 1, [Define this symbol if you have __builtin_clzl])],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for __builtin_clzll)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[ ]], [[\n+  (void) __builtin_clzll(0);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_BUILTIN_CLZLL, 1, [Define this symbol if you have __builtin_clzll])],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+dnl Check for malloc_info (for memory statistics information in getmemoryinfo)\n+AC_MSG_CHECKING(for getmemoryinfo)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n+ [[ int f = malloc_info(0, NULL); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOC_INFO, 1,[Define this symbol if you have malloc_info]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+dnl Check for mallopt(M_ARENA_MAX) (to set glibc arenas)\n+AC_MSG_CHECKING(for mallopt M_ARENA_MAX)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n+ [[ mallopt(M_ARENA_MAX, 1); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOPT_ARENA_MAX, 1,[Define this symbol if you have mallopt with M_ARENA_MAX]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+dnl Check for posix_fallocate\n+AC_MSG_CHECKING(for posix_fallocate)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+                   // same as in src/util/system.cpp\n+                   #ifdef __linux__\n+                   #ifdef _POSIX_C_SOURCE\n+                   #undef _POSIX_C_SOURCE\n+                   #endif\n+                   #define _POSIX_C_SOURCE 200112L\n+                   #endif // __linux__\n+                   #include <fcntl.h>]],\n+                   [[ int f = posix_fallocate(0, 0, 0); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_POSIX_FALLOCATE, 1,[Define this symbol if you have posix_fallocate]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING([for visibility attribute])\n+AC_LINK_IFELSE([AC_LANG_SOURCE([\n+  int foo_def( void ) __attribute__((visibility(\"default\")));\n+  int main(){}\n+  ])],\n+  [\n+    AC_DEFINE(HAVE_VISIBILITY_ATTRIBUTE,1,[Define if the visibility attribute is supported.])\n+    AC_MSG_RESULT(yes)\n+  ],\n+  [\n+    AC_MSG_RESULT(no)\n+    if test x$use_reduce_exports = xyes; then\n+      AC_MSG_ERROR([Cannot find a working visibility attribute. Use --disable-reduce-exports.])\n+    fi\n+  ]\n+)\n+\n+dnl thread_local is currently disabled when building with glibc back compat.\n+dnl Our minimum supported glibc is 2.17, however support for thread_local\n+dnl did not arrive in glibc until 2.18.\n+if test \"x$use_thread_local\" = xyes || { test \"x$use_thread_local\" = xauto && test \"x$use_glibc_compat\" = xno; }; then\n+  TEMP_LDFLAGS=\"$LDFLAGS\"\n+  LDFLAGS=\"$TEMP_LDFLAGS $PTHREAD_CFLAGS\"\n+  AC_MSG_CHECKING([for thread_local support])\n+  AC_LINK_IFELSE([AC_LANG_SOURCE([\n+    #include <thread>\n+    static thread_local int foo = 0;\n+    static void run_thread() { foo++;}\n+    int main(){\n+    for(int i = 0; i < 10; i++) { std::thread(run_thread).detach();}\n+    return foo;\n+    }\n+    ])],\n+    [\n+     case $host in\n+       *mingw*)\n+          dnl mingw32's implementation of thread_local has also been shown to behave\n+          dnl erroneously under concurrent usage; see:\n+          dnl https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n+          AC_MSG_RESULT(no)\n+          ;;\n+        *freebsd*)\n+          dnl FreeBSD's implementation of thread_local is also buggy (per\n+          dnl https://groups.google.com/d/msg/bsdmailinglist/22ncTZAbDp4/Dii_pII5AwAJ)\n+          AC_MSG_RESULT(no)\n+          ;;\n+        *)\n+          AC_DEFINE(HAVE_THREAD_LOCAL,1,[Define if thread_local is supported.])\n+          AC_MSG_RESULT(yes)\n+          ;;\n+      esac\n+    ],\n+    [\n+      AC_MSG_RESULT(no)\n+    ]\n+  )\n+  LDFLAGS=\"$TEMP_LDFLAGS\"\n+fi\n+\n+dnl check for gmtime_r(), fallback to gmtime_s() if that is unavailable\n+dnl fail if neither are available.\n+AC_MSG_CHECKING(for gmtime_r)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <ctime>]],\n+  [[ gmtime_r((const time_t *) nullptr, (struct tm *) nullptr); ]])],\n+  [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GMTIME_R, 1, [Define this symbol if gmtime_r is available]) ],\n+  [ AC_MSG_RESULT(no);\n+    AC_MSG_CHECKING(for gmtime_s);\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <ctime>]],\n+       [[ gmtime_s((struct tm *) nullptr, (const time_t *) nullptr); ]])],\n+       [ AC_MSG_RESULT(yes)],\n+       [ AC_MSG_RESULT(no); AC_MSG_ERROR(Both gmtime_r and gmtime_s are unavailable) ]\n+    )\n+  ]\n+)\n+\n+dnl Check for different ways of gathering OS randomness\n+AC_MSG_CHECKING(for Linux getrandom syscall)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n+  #include <sys/syscall.h>\n+  #include <linux/random.h>]],\n+ [[ syscall(SYS_getrandom, nullptr, 32, 0); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYS_GETRANDOM, 1,[Define this symbol if the Linux getrandom system call is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for getentropy)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],\n+ [[ getentropy(nullptr, 32) ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY, 1,[Define this symbol if the BSD getentropy system call is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for getentropy via random.h)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n+ #include <sys/random.h>]],\n+ [[ getentropy(nullptr, 32) ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY_RAND, 1,[Define this symbol if the BSD getentropy system call is available with sys/random.h]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for sysctl)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n+  #include <sys/sysctl.h>]],\n+ [[ #ifdef __linux__\n+    #error \"Don't use sysctl on Linux, it's deprecated even when it works\"\n+    #endif\n+    sysctl(nullptr, 2, nullptr, nullptr, nullptr, 0); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYSCTL, 1,[Define this symbol if the BSD sysctl() is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for sysctl KERN_ARND)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n+  #include <sys/sysctl.h>]],\n+ [[ #ifdef __linux__\n+    #error \"Don't use sysctl on Linux, it's deprecated even when it works\"\n+    #endif\n+    static int name[2] = {CTL_KERN, KERN_ARND};\n+    sysctl(name, 2, nullptr, nullptr, nullptr, 0); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYSCTL_ARND, 1,[Define this symbol if the BSD sysctl(KERN_ARND) is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for if type char equals int8_t)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdint.h>\n+  #include <type_traits>]],\n+ [[ static_assert(std::is_same<int8_t, char>::value, \"\"); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(CHAR_EQUALS_INT8, 1,[Define this symbol if type char equals int8_t]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for fdatasync)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],\n+ [[ fdatasync(0); ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_FDATASYNC=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_FDATASYNC=0 ]\n+)\n+AC_DEFINE_UNQUOTED([HAVE_FDATASYNC], [$HAVE_FDATASYNC], [Define to 1 if fdatasync is available.])\n+\n+AC_MSG_CHECKING(for F_FULLFSYNC)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <fcntl.h>]],\n+ [[ fcntl(0, F_FULLFSYNC, 0); ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_FULLFSYNC=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_FULLFSYNC=0 ]\n+)\n+\n+AC_MSG_CHECKING(for O_CLOEXEC)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <fcntl.h>]],\n+ [[ open(\"\", O_CLOEXEC); ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_O_CLOEXEC=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_O_CLOEXEC=0 ]\n+)\n+\n+dnl crc32c platform checks\n+AC_MSG_CHECKING(for __builtin_prefetch)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[ ]], [[\n+  char data = 0;\n+  const char* address = &data;\n+  __builtin_prefetch(address, 0, 0);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_BUILTIN_PREFETCH=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_BUILTIN_PREFETCH=0 ]\n+)\n+\n+AC_MSG_CHECKING(for _mm_prefetch)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <xmmintrin.h>]], [[\n+  char data = 0;\n+  const char* address = &data;\n+  _mm_prefetch(address, _MM_HINT_NTA);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_MM_PREFETCH=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_MM_PREFETCH=0 ]\n+)\n+\n+AC_MSG_CHECKING(for strong getauxval support in the system headers)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <arm_acle.h>\n+    #include <arm_neon.h>\n+    #include <sys/auxv.h>\n+  ]], [[\n+    getauxval(AT_HWCAP);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_STRONG_GETAUXVAL=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_STRONG_GETAUXVAL=0 ]\n+)\n+\n+AC_MSG_CHECKING(for weak getauxval support in the compiler)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    unsigned long getauxval(unsigned long type) __attribute__((weak));\n+    #define AT_HWCAP 16\n+  ]], [[\n+    getauxval(AT_HWCAP);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_WEAK_GETAUXVAL=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_WEAK_GETAUXVAL=0 ]\n+)\n+\n+dnl Check for reduced exports\n+if test x$use_reduce_exports = xyes; then\n+  AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n+  [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])\n+fi\n+\n+AC_MSG_CHECKING([for std::system])\n+AC_LINK_IFELSE(\n+    [ AC_LANG_PROGRAM(\n+        [[ #include <cstdlib> ]],\n+        [[ int nErr = std::system(\"\"); ]]\n+    )],\n+    [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_STD__SYSTEM, 1, Define to 1 if std::system is available.)],\n+    [ AC_MSG_RESULT(no) ]\n+)\n+\n+AC_MSG_CHECKING([for ::_wsystem])\n+AC_LINK_IFELSE(\n+    [ AC_LANG_PROGRAM(\n+        [[ ]],\n+        [[ int nErr = ::_wsystem(\"\"); ]]\n+    )],\n+    [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_WSYSTEM, 1, Define to 1 if ::wsystem is available.)],\n+    [ AC_MSG_RESULT(no) ]\n+)\n+\n+AC_DEFINE([HAVE_SYSTEM], [HAVE_STD__SYSTEM || HAVE_WSYSTEM], [std::system or ::wsystem])\n+\n+LEVELDB_CPPFLAGS=\n+LIBLEVELDB=\n+LIBMEMENV=\n+AM_CONDITIONAL([EMBEDDED_LEVELDB],[true])\n+AC_SUBST(LEVELDB_CPPFLAGS)\n+AC_SUBST(LIBLEVELDB)\n+AC_SUBST(LIBMEMENV)\n+\n+dnl SUPPRESSED_CPPFLAGS=SUPPRESS_WARNINGS([$SOME_CPPFLAGS])\n+dnl Replace -I with -isystem in $SOME_CPPFLAGS to suppress warnings from\n+dnl headers from its include directories and return the result.\n+dnl See -isystem documentation:\n+dnl https://gcc.gnu.org/onlinedocs/gcc/Directory-Options.html\n+dnl https://clang.llvm.org/docs/ClangCommandLineReference.html#cmdoption-clang-isystem-directory\n+dnl Do not change \"-I/usr/include\" to \"-isystem /usr/include\" because that\n+dnl is not necessary (/usr/include is already a system directory) and because\n+dnl it would break GCC's #include_next.\n+AC_DEFUN([SUPPRESS_WARNINGS],\n+         [$(echo $1 |${SED} -E -e 's/(^| )-I/\\1-isystem /g' -e 's;-isystem /usr/include([/ ]|$);-I/usr/include\\1;g')])\n+\n+dnl enable-fuzz should disable all other targets\n+if test \"x$enable_fuzz\" = \"xyes\"; then\n+  AC_MSG_WARN(enable-fuzz will disable all other targets)\n+  build_bitcoin_utils=no\n+  build_bitcoin_cli=no\n+  build_bitcoin_tx=no\n+  build_bitcoin_wallet=no\n+  build_bitcoind=no\n+  build_bitcoin_libs=no\n+  bitcoin_enable_qt=no\n+  bitcoin_enable_qt_test=no\n+  bitcoin_enable_qt_dbus=no\n+  enable_wallet=no\n+  use_bench=no\n+  use_upnp=no\n+  use_zmq=no\n+\n+  AC_MSG_CHECKING([whether main function is needed])\n+  AX_CHECK_LINK_FLAG(\n+    [[-fsanitize=$use_sanitizers]],\n+    [AC_MSG_RESULT([no])],\n+    [AC_MSG_RESULT([yes])\n+     CPPFLAGS=\"$CPPFLAGS -DPROVIDE_MAIN_FUNCTION\"],\n+    [],\n+    [AC_LANG_PROGRAM([[\n+      #include <cstdint>\n+      #include <cstddef>\n+      extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) { return 0; }\n+      /* unterminated comment to remove the main function ...\n+    ]],[[]])])\n+else\n+  BITCOIN_QT_INIT\n+\n+  dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n+  BITCOIN_QT_CONFIGURE([5.5.1])\n+\n+  dnl Keep a copy of the original $QT_INCLUDES and use it when invoking qt's moc\n+  QT_INCLUDES_UNSUPPRESSED=$QT_INCLUDES\n+  if test x$suppress_external_warnings != xno ; then\n+    QT_INCLUDES=SUPPRESS_WARNINGS($QT_INCLUDES)\n+    QT_DBUS_INCLUDES=SUPPRESS_WARNINGS($QT_DBUS_INCLUDES)\n+    QT_TEST_INCLUDES=SUPPRESS_WARNINGS($QT_TEST_INCLUDES)\n+  fi\n+fi\n+\n+if test x$enable_wallet != xno; then\n+    dnl Check for libdb_cxx only if wallet enabled\n+    BITCOIN_FIND_BDB48\n+    if test x$suppress_external_warnings != xno ; then\n+        BDB_CPPFLAGS=SUPPRESS_WARNINGS($BDB_CPPFLAGS)\n+    fi\n+\n+    dnl Check for sqlite3\n+    if test \"x$use_sqlite\" != \"xno\"; then\n+      PKG_CHECK_MODULES([SQLITE], [sqlite3 >= 3.7.17], [have_sqlite=yes], [have_sqlite=no])\n+    fi\n+    AC_MSG_CHECKING([whether to build wallet with support for sqlite])\n+    if test \"x$use_sqlite\" = \"xno\"; then\n+      use_sqlite=no\n+    elif test \"x$have_sqlite\" = \"xno\"; then\n+      if test \"x$use_sqlite\" = \"xyes\"; then\n+        AC_MSG_ERROR([sqlite support requested but cannot be built. Use --without-sqlite])\n+      fi\n+      use_sqlite=no\n+    else\n+      if test x$use_sqlite != xno; then\n+        AC_DEFINE([USE_SQLITE],[1],[Define if sqlite support should be compiled in])\n+        use_sqlite=yes\n+      fi\n+    fi\n+    AC_MSG_RESULT([$use_sqlite])\n+fi\n+\n+dnl Check for libminiupnpc (optional)\n+if test x$use_upnp != xno; then\n+  AC_CHECK_HEADERS(\n+    [miniupnpc/miniwget.h miniupnpc/miniupnpc.h miniupnpc/upnpcommands.h miniupnpc/upnperrors.h],\n+    [AC_CHECK_LIB([miniupnpc], [upnpDiscover], [MINIUPNPC_LIBS=-lminiupnpc], [have_miniupnpc=no])],\n+    [have_miniupnpc=no]\n+  )\n+dnl The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+dnl with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+if test x$have_miniupnpc != xno; then\n+  AC_MSG_CHECKING([whether miniUPnPc API version is supported])\n+  AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[\n+      @%:@include <miniupnpc/miniupnpc.h>\n+    ]], [[\n+      #if MINIUPNPC_API_VERSION >= 10\n+      // Everything is okay\n+      #else\n+      #  error miniUPnPc API version is too old\n+      #endif\n+    ]])],[\n+      AC_MSG_RESULT(yes)\n+    ],[\n+    AC_MSG_RESULT(no)\n+    AC_MSG_WARN([miniUPnPc API version < 10 is unsupported, disabling UPnP support.])\n+    have_miniupnpc=no\n+  ])\n+fi\n+fi\n+\n+if test x$build_bitcoin_wallet$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononononono; then\n+    use_boost=no\n+else\n+    use_boost=yes\n+fi\n+\n+if test x$use_boost = xyes; then\n+\n+dnl Minimum required Boost version\n+define(MINIMUM_REQUIRED_BOOST, 1.58.0)\n+\n+dnl Check for Boost libs\n+AX_BOOST_BASE([MINIMUM_REQUIRED_BOOST])\n+if test x$want_boost = xno; then\n+    AC_MSG_ERROR([[only libbitcoinconsensus can be built without boost]])\n+fi\n+AX_BOOST_SYSTEM\n+AX_BOOST_FILESYSTEM\n+AX_BOOST_THREAD\n+\n+dnl Opt-in to boost-process\n+AS_IF([ test x$with_boost_process != x ], [ AX_BOOST_PROCESS ], [ ax_cv_boost_process=no ] )\n+\n+if test x$suppress_external_warnings != xno; then\n+    BOOST_CPPFLAGS=SUPPRESS_WARNINGS($BOOST_CPPFLAGS)\n+fi\n+\n+dnl Boost 1.56 through 1.62 allow using std::atomic instead of its own atomic\n+dnl counter implementations. In 1.63 and later the std::atomic approach is default.\n+m4_pattern_allow(DBOOST_AC_USE_STD_ATOMIC) dnl otherwise it's treated like a macro\n+BOOST_CPPFLAGS=\"-DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC $BOOST_CPPFLAGS\"\n+\n+BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_THREAD_LIB\"\n+fi\n+\n+if test x$use_reduce_exports = xyes; then\n+    CXXFLAGS=\"$CXXFLAGS $RE_CXXFLAGS\"\n+    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"],, [[$LDFLAG_WERROR]])\n+fi\n+\n+if test x$use_tests = xyes; then\n+\n+  if test x$HEXDUMP = x; then\n+    AC_MSG_ERROR(hexdump is required for tests)\n+  fi\n+\n+  if test x$use_boost = xyes; then\n+\n+  AX_BOOST_UNIT_TEST_FRAMEWORK\n+\n+  dnl Determine if -DBOOST_TEST_DYN_LINK is needed\n+  AC_MSG_CHECKING([for dynamic linked boost test])\n+  TEMP_LIBS=\"$LIBS\"\n+  LIBS=\"$LIBS $BOOST_LDFLAGS $BOOST_UNIT_TEST_FRAMEWORK_LIB\"\n+  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+  CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+  AC_LINK_IFELSE([AC_LANG_SOURCE([\n+       #define BOOST_TEST_DYN_LINK\n+       #define BOOST_TEST_MAIN\n+        #include <boost/test/unit_test.hpp>\n+\n+       ])],\n+    [AC_MSG_RESULT(yes)]\n+    [TESTDEFS=\"$TESTDEFS -DBOOST_TEST_DYN_LINK\"],\n+    [AC_MSG_RESULT(no)])\n+  LIBS=\"$TEMP_LIBS\"\n+  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+\n+  fi\n+fi\n+\n+dnl libevent check\n+\n+if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench != xnonononono; then\n+  PKG_CHECK_MODULES([EVENT], [libevent >= 2.0.21], [use_libevent=yes], [AC_MSG_ERROR([libevent version 2.0.21 or greater not found.])])\n+  if test x$TARGET_OS != xwindows; then\n+    PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads >= 2.0.21],, [AC_MSG_ERROR([libevent_pthreads version 2.0.21 or greater not found.])])\n+  fi\n+fi\n+\n+dnl QR Code encoding library check\n+\n+if test \"x$use_qr\" != xno; then\n+  BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n+fi\n+\n+dnl ZMQ check\n+\n+if test \"x$use_zmq\" = xyes; then\n+  PKG_CHECK_MODULES([ZMQ], [libzmq >= 4],\n+    AC_DEFINE([ENABLE_ZMQ], [1], [Define to 1 to enable ZMQ functions]),\n+    [AC_DEFINE([ENABLE_ZMQ], [0], [Define to 1 to enable ZMQ functions])\n+    AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])\n+    use_zmq=no])\n+else\n+  AC_DEFINE_UNQUOTED([ENABLE_ZMQ], [0], [Define to 1 to enable ZMQ functions])\n+fi\n+\n+if test \"x$use_zmq\" = xyes; then\n+  dnl Assume libzmq was built for static linking\n+  case $host in\n+    *mingw*)\n+      ZMQ_CFLAGS=\"$ZMQ_CFLAGS -DZMQ_STATIC\"\n+    ;;\n+  esac\n+fi\n+\n+dnl univalue check\n+\n+need_bundled_univalue=yes\n+if test x$build_bitcoin_wallet$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononononono; then\n+  need_bundled_univalue=no\n+else\n+  if test x$system_univalue != xno; then\n+    PKG_CHECK_MODULES([UNIVALUE], [libunivalue >= 1.0.4], [found_univalue=yes], [found_univalue=no])\n+    if test x$found_univalue = xyes; then\n+      system_univalue=yes\n+      need_bundled_univalue=no\n+    elif test x$system_univalue = xyes; then\n+      AC_MSG_ERROR([univalue not found])\n+    else\n+      system_univalue=no\n+    fi\n+  fi\n+\n+  if test x$need_bundled_univalue = xyes; then\n+    UNIVALUE_CFLAGS='-I$(srcdir)/univalue/include'\n+    UNIVALUE_LIBS='univalue/libunivalue.la'\n+  fi\n+fi\n+\n+AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$need_bundled_univalue = xyes])\n+AC_SUBST(UNIVALUE_CFLAGS)\n+AC_SUBST(UNIVALUE_LIBS)\n+\n+dnl libmultiprocess library check\n+\n+libmultiprocess_found=no\n+if test \"x$with_libmultiprocess\" = xyes || test \"x$with_libmultiprocess\" = xauto; then\n+  m4_ifdef([PKG_CHECK_MODULES], [PKG_CHECK_MODULES([LIBMULTIPROCESS], [libmultiprocess], [\n+     libmultiprocess_found=yes;\n+     libmultiprocess_prefix=`$PKG_CONFIG --variable=prefix libmultiprocess`;\n+  ], [true])])\n+elif test \"x$with_libmultiprocess\" != xno; then\n+  AC_MSG_ERROR([--with-libmultiprocess=$with_libmultiprocess value is not yes, auto, or no])\n+fi\n+AC_SUBST(LIBMULTIPROCESS_CFLAGS)\n+AC_SUBST(LIBMULTIPROCESS_LIBS)\n+\n+dnl Enable multiprocess check\n+\n+if test \"x$enable_multiprocess\" = xyes; then\n+  if test \"x$libmultiprocess_found\" != xyes; then\n+    AC_MSG_ERROR([--enable-multiprocess=yes option specified but libmultiprocess library was not found. May need to install libmultiprocess library, or specify install path with PKG_CONFIG_PATH environment variable. Running 'pkg-config --debug libmultiprocess' may be helpful for debugging.])\n+  fi\n+  build_multiprocess=yes\n+elif test \"x$enable_multiprocess\" = xauto; then\n+  build_multiprocess=$libmultiprocess_found\n+else\n+  build_multiprocess=no\n+fi\n+\n+AM_CONDITIONAL([BUILD_MULTIPROCESS],[test \"x$build_multiprocess\" = xyes])\n+AM_CONDITIONAL([BUILD_BITCOIN_NODE], [test \"x$build_multiprocess\" = xyes])\n+AM_CONDITIONAL([BUILD_BITCOIN_GUI], [test \"x$build_multiprocess\" = xyes])\n+\n+dnl codegen tools check\n+\n+if test x$build_multiprocess != xno; then\n+  if test \"x$with_mpgen\" = xyes || test \"x$with_mpgen\" = xauto; then\n+    MPGEN_PREFIX=\"$libmultiprocess_prefix\"\n+  elif test \"x$with_mpgen\" != xno; then\n+    MPGEN_PREFIX=\"$with_mpgen\";\n+  fi\n+  AC_SUBST(MPGEN_PREFIX)\n+fi\n+\n+AC_MSG_CHECKING([whether to build bitcoind])\n+AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n+AC_MSG_RESULT($build_bitcoind)\n+\n+AC_MSG_CHECKING([whether to build bitcoin-cli])\n+AM_CONDITIONAL([BUILD_BITCOIN_CLI], [test x$build_bitcoin_cli = xyes])\n+AC_MSG_RESULT($build_bitcoin_cli)\n+\n+AC_MSG_CHECKING([whether to build bitcoin-tx])\n+AM_CONDITIONAL([BUILD_BITCOIN_TX], [test x$build_bitcoin_tx = xyes])\n+AC_MSG_RESULT($build_bitcoin_tx)\n+\n+AC_MSG_CHECKING([whether to build bitcoin-wallet])\n+AM_CONDITIONAL([BUILD_BITCOIN_WALLET], [test x$build_bitcoin_wallet = xyes])\n+AC_MSG_RESULT($build_bitcoin_wallet)\n+\n+AC_MSG_CHECKING([whether to build libraries])\n+AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])\n+if test x$build_bitcoin_libs = xyes; then\n+  AC_DEFINE(HAVE_CONSENSUS_LIB, 1, [Define this symbol if the consensus lib has been built])\n+  AC_CONFIG_FILES([libbitcoinconsensus.pc:libbitcoinconsensus.pc.in])\n+fi\n+AC_MSG_RESULT($build_bitcoin_libs)\n+\n+AC_LANG_POP\n+\n+if test \"x$use_ccache\" != \"xno\"; then\n+  AC_MSG_CHECKING(if ccache should be used)\n+  if test x$CCACHE = x; then\n+    if test \"x$use_ccache\" = \"xyes\"; then\n+      AC_MSG_ERROR([ccache not found.]);\n+    else\n+      use_ccache=no\n+    fi\n+  else\n+    use_ccache=yes\n+    CC=\"$ac_cv_path_CCACHE $CC\"\n+    CXX=\"$ac_cv_path_CCACHE $CXX\"\n+  fi\n+  AC_MSG_RESULT($use_ccache)\n+fi\n+\n+dnl enable wallet\n+AC_MSG_CHECKING([if wallet should be enabled])\n+if test x$enable_wallet != xno; then\n+  AC_MSG_RESULT(yes)\n+  AC_DEFINE_UNQUOTED([ENABLE_WALLET],[1],[Define to 1 to enable wallet functions])\n+\n+else\n+  AC_MSG_RESULT(no)\n+fi\n+\n+dnl enable upnp support\n+AC_MSG_CHECKING([whether to build with support for UPnP])\n+if test x$have_miniupnpc = xno; then\n+  if test x$use_upnp = xyes; then\n+     AC_MSG_ERROR(\"UPnP requested but cannot be built. Use --without-miniupnpc.\")\n+  fi\n+  AC_MSG_RESULT(no)\n+  use_upnp=no\n+else\n+  if test x$use_upnp != xno; then\n+    AC_MSG_RESULT(yes)\n+    AC_MSG_CHECKING([whether to build with UPnP enabled by default])\n+    use_upnp=yes\n+    upnp_setting=0\n+    if test x$use_upnp_default != xno; then\n+      use_upnp_default=yes\n+      upnp_setting=1\n+    fi\n+    AC_MSG_RESULT($use_upnp_default)\n+    AC_DEFINE_UNQUOTED([USE_UPNP],[$upnp_setting],[UPnP support not compiled if undefined, otherwise value (0 or 1) determines default state])\n+    if test x$TARGET_OS = xwindows; then\n+      MINIUPNPC_CPPFLAGS=\"-DSTATICLIB -DMINIUPNP_STATICLIB\"\n+    fi\n+  else\n+    AC_MSG_RESULT(no)\n+  fi\n+fi\n+\n+dnl these are only used when qt is enabled\n+BUILD_TEST_QT=\"\"\n+if test x$bitcoin_enable_qt != xno; then\n+  dnl enable dbus support\n+  AC_MSG_CHECKING([whether to build GUI with support for D-Bus])\n+  if test x$bitcoin_enable_qt_dbus != xno; then\n+    AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n+  fi\n+  AC_MSG_RESULT($bitcoin_enable_qt_dbus)\n+\n+  dnl enable qr support\n+  AC_MSG_CHECKING([whether to build GUI with support for QR codes])\n+  if test x$have_qrencode = xno; then\n+    if test x$use_qr = xyes; then\n+      AC_MSG_ERROR([QR support requested but cannot be built. Use --without-qrencode])\n+    fi\n+    use_qr=no\n+  else\n+    if test x$use_qr != xno; then\n+      AC_DEFINE([USE_QRCODE],[1],[Define if QR support should be compiled in])\n+      use_qr=yes\n+    fi\n+  fi\n+  AC_MSG_RESULT([$use_qr])\n+\n+  if test x$XGETTEXT = x; then\n+    AC_MSG_WARN(\"xgettext is required to update qt translations\")\n+  fi\n+\n+  AC_MSG_CHECKING([whether to build test_bitcoin-qt])\n+  if test x$use_gui_tests$bitcoin_enable_qt_test = xyesyes; then\n+    AC_MSG_RESULT([yes])\n+    BUILD_TEST_QT=\"yes\"\n+  else\n+    AC_MSG_RESULT([no])\n+  fi\n+fi\n+\n+AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n+\n+AC_MSG_CHECKING([whether to build test_bitcoin])\n+if test x$use_tests = xyes; then\n+  AC_MSG_RESULT([yes])\n+  BUILD_TEST=\"yes\"\n+else\n+  AC_MSG_RESULT([no])\n+  BUILD_TEST=\"\"\n+fi\n+\n+AC_MSG_CHECKING([whether to reduce exports])\n+if test x$use_reduce_exports = xyes; then\n+  AC_MSG_RESULT([yes])\n+else\n+  AC_MSG_RESULT([no])\n+fi\n+\n+if test x$build_bitcoin_wallet$build_bitcoin_cli$build_bitcoin_tx$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_bench$use_tests = xnononononononono; then\n+  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui --enable-bench or --enable-tests])\n+fi\n+\n+AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\n+AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\n+AM_CONDITIONAL([TARGET_LINUX], [test x$TARGET_OS = xlinux])\n+AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n+AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\n+AM_CONDITIONAL([USE_SQLITE], [test \"x$use_sqlite\" = \"xyes\"])\n+AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\n+AM_CONDITIONAL([ENABLE_FUZZ],[test x$enable_fuzz = xyes])\n+AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n+AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\n+AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n+AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n+AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n+AM_CONDITIONAL([USE_LIBEVENT],[test x$use_libevent = xyes])\n+AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n+AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\n+AM_CONDITIONAL([ENABLE_SSE42],[test x$enable_sse42 = xyes])\n+AM_CONDITIONAL([ENABLE_SSE41],[test x$enable_sse41 = xyes])\n+AM_CONDITIONAL([ENABLE_AVX2],[test x$enable_avx2 = xyes])\n+AM_CONDITIONAL([ENABLE_SHANI],[test x$enable_shani = xyes])\n+AM_CONDITIONAL([ENABLE_ARM_CRC],[test x$enable_arm_crc = xyes])\n+AM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])\n+AM_CONDITIONAL([WORDS_BIGENDIAN],[test x$ac_cv_c_bigendian = xyes])\n+\n+AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n+AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n+AC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])\n+AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\n+AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\n+AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Copyright year])\n+AC_DEFINE(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\", [Copyright holder(s) before %s replacement])\n+AC_DEFINE(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\", [Replacement for %s in copyright holders string])\n+define(_COPYRIGHT_HOLDERS_FINAL, [patsubst(_COPYRIGHT_HOLDERS, [%s], [_COPYRIGHT_HOLDERS_SUBSTITUTION])])\n+AC_DEFINE(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\", [Copyright holder(s)])\n+AC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)\n+AC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)\n+AC_SUBST(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION)\n+AC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)\n+AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n+AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n+AC_SUBST(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\")\n+AC_SUBST(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\")\n+AC_SUBST(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\")\n+AC_SUBST(BITCOIN_DAEMON_NAME)\n+AC_SUBST(BITCOIN_GUI_NAME)\n+AC_SUBST(BITCOIN_CLI_NAME)\n+AC_SUBST(BITCOIN_TX_NAME)\n+AC_SUBST(BITCOIN_WALLET_TOOL_NAME)\n+\n+AC_SUBST(RELDFLAGS)\n+AC_SUBST(DEBUG_CPPFLAGS)\n+AC_SUBST(WARN_CXXFLAGS)\n+AC_SUBST(NOWARN_CXXFLAGS)\n+AC_SUBST(DEBUG_CXXFLAGS)\n+AC_SUBST(COMPAT_LDFLAGS)\n+AC_SUBST(ERROR_CXXFLAGS)\n+AC_SUBST(GPROF_CXXFLAGS)\n+AC_SUBST(GPROF_LDFLAGS)\n+AC_SUBST(HARDENED_CXXFLAGS)\n+AC_SUBST(HARDENED_CPPFLAGS)\n+AC_SUBST(HARDENED_LDFLAGS)\n+AC_SUBST(PIC_FLAGS)\n+AC_SUBST(PIE_FLAGS)\n+AC_SUBST(SANITIZER_CXXFLAGS)\n+AC_SUBST(SANITIZER_LDFLAGS)\n+AC_SUBST(SSE42_CXXFLAGS)\n+AC_SUBST(SSE41_CXXFLAGS)\n+AC_SUBST(AVX2_CXXFLAGS)\n+AC_SUBST(SHANI_CXXFLAGS)\n+AC_SUBST(ARM_CRC_CXXFLAGS)\n+AC_SUBST(LIBTOOL_APP_LDFLAGS)\n+AC_SUBST(USE_SQLITE)\n+AC_SUBST(USE_UPNP)\n+AC_SUBST(USE_QRCODE)\n+AC_SUBST(BOOST_LIBS)\n+AC_SUBST(SQLITE_LIBS)\n+AC_SUBST(TESTDEFS)\n+AC_SUBST(MINIUPNPC_CPPFLAGS)\n+AC_SUBST(MINIUPNPC_LIBS)\n+AC_SUBST(EVENT_LIBS)\n+AC_SUBST(EVENT_PTHREADS_LIBS)\n+AC_SUBST(ZMQ_LIBS)\n+AC_SUBST(QR_LIBS)\n+AC_SUBST(HAVE_GMTIME_R)\n+AC_SUBST(HAVE_FDATASYNC)\n+AC_SUBST(HAVE_FULLFSYNC)\n+AC_SUBST(HAVE_O_CLOEXEC)\n+AC_SUBST(HAVE_BUILTIN_PREFETCH)\n+AC_SUBST(HAVE_MM_PREFETCH)\n+AC_SUBST(HAVE_STRONG_GETAUXVAL)\n+AC_SUBST(HAVE_WEAK_GETAUXVAL)\n+AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/config.ini])\n+AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n+AM_COND_IF([HAVE_DOXYGEN], [AC_CONFIG_FILES([doc/Doxyfile])])\n+AC_CONFIG_LINKS([contrib/devtools/security-check.py:contrib/devtools/security-check.py])\n+AC_CONFIG_LINKS([contrib/devtools/test-security-check.py:contrib/devtools/test-security-check.py])\n+AC_CONFIG_LINKS([contrib/filter-lcov.py:contrib/filter-lcov.py])\n+AC_CONFIG_LINKS([test/functional/test_runner.py:test/functional/test_runner.py])\n+AC_CONFIG_LINKS([test/fuzz/test_runner.py:test/fuzz/test_runner.py])\n+AC_CONFIG_LINKS([test/util/bitcoin-util-test.py:test/util/bitcoin-util-test.py])\n+AC_CONFIG_LINKS([test/util/rpcauth-test.py:test/util/rpcauth-test.py])\n+\n+dnl boost's m4 checks do something really nasty: they export these vars. As a\n+dnl result, they leak into secp256k1's configure and crazy things happen.\n+dnl Until this is fixed upstream and we've synced, we'll just un-export them.\n+CPPFLAGS_TEMP=\"$CPPFLAGS\"\n+unset CPPFLAGS\n+CPPFLAGS=\"$CPPFLAGS_TEMP\"\n+\n+LDFLAGS_TEMP=\"$LDFLAGS\"\n+unset LDFLAGS\n+LDFLAGS=\"$LDFLAGS_TEMP\"\n+\n+LIBS_TEMP=\"$LIBS\"\n+unset LIBS\n+LIBS=\"$LIBS_TEMP\"\n+\n+PKGCONFIG_PATH_TEMP=\"$PKG_CONFIG_PATH\"\n+unset PKG_CONFIG_PATH\n+PKG_CONFIG_PATH=\"$PKGCONFIG_PATH_TEMP\"\n+\n+PKGCONFIG_LIBDIR_TEMP=\"$PKG_CONFIG_LIBDIR\"\n+unset PKG_CONFIG_LIBDIR\n+PKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\n+\n+if test x$need_bundled_univalue = xyes; then\n+  AC_CONFIG_SUBDIRS([src/univalue])\n+fi\n+\n+ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --enable-benchmark=no --with-bignum=no --enable-module-recovery --enable-module-schnorrsig --enable-experimental\"\n+AC_CONFIG_SUBDIRS([src/secp256k1])\n+\n+AC_OUTPUT\n+\n+dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\n+case ${OS} in\n+   *Windows*)\n+     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  test/config.ini > test/config-2.ini\n+     mv test/config-2.ini test/config.ini\n+   ;;\n+esac\n+\n+echo\n+echo \"Options used to compile and link:\"\n+echo \"  boost process = $ax_cv_boost_process\"\n+echo \"  multiprocess  = $build_multiprocess\"\n+echo \"  with wallet   = $enable_wallet\"\n+if test \"x$enable_wallet\" != \"xno\"; then\n+    echo \"    with sqlite = $use_sqlite\"\n+fi\n+echo \"  with gui / qt = $bitcoin_enable_qt\"\n+if test x$bitcoin_enable_qt != xno; then\n+    echo \"    with qr     = $use_qr\"\n+fi\n+echo \"  with zmq      = $use_zmq\"\n+echo \"  with test     = $use_tests\"\n+if test x$use_tests != xno; then\n+    echo \"    with fuzz   = $enable_fuzz\"\n+fi\n+echo \"  with bench    = $use_bench\"\n+echo \"  with upnp     = $use_upnp\"\n+echo \"  use asm       = $use_asm\"\n+echo \"  sanitizers    = $use_sanitizers\"\n+echo \"  debug enabled = $enable_debug\"\n+echo \"  gprof enabled = $enable_gprof\"\n+echo \"  werror        = $enable_werror\"\n+echo\n+echo \"  target os     = $TARGET_OS\"\n+echo \"  build os      = $build_os\"\n+echo\n+echo \"  CC            = $CC\"\n+echo \"  CFLAGS        = $PTHREAD_CFLAGS $CFLAGS\"\n+echo \"  CPPFLAGS      = $DEBUG_CPPFLAGS $HARDENED_CPPFLAGS $CPPFLAGS\"\n+echo \"  CXX           = $CXX\"\n+echo \"  CXXFLAGS      = $DEBUG_CXXFLAGS $HARDENED_CXXFLAGS $WARN_CXXFLAGS $NOWARN_CXXFLAGS $ERROR_CXXFLAGS $GPROF_CXXFLAGS $CXXFLAGS\"\n+echo \"  LDFLAGS       = $PTHREAD_LIBS $HARDENED_LDFLAGS $GPROF_LDFLAGS $LDFLAGS\"\n+echo \"  ARFLAGS       = $ARFLAGS\"\n+echo"
      },
      {
        "sha": "361975baa4915b26e4e65fecaf359d230a411450",
        "filename": "contrib/README.md",
        "status": "added",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,48 @@\n+Repository Tools\n+---------------------\n+\n+### [Developer tools](/contrib/devtools) ###\n+Specific tools for developers working on this repository.\n+Additional tools, including the `github-merge.py` script, are available in the [maintainer-tools](https://github.com/bitcoin-core/bitcoin-maintainer-tools) repository.\n+\n+### [Verify-Commits](/contrib/verify-commits) ###\n+Tool to verify that every merge commit was signed by a developer using the `github-merge.py` script.\n+\n+### [Linearize](/contrib/linearize) ###\n+Construct a linear, no-fork, best version of the blockchain.\n+\n+### [Qos](/contrib/qos) ###\n+\n+A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Bitcoin network. This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n+\n+### [Seeds](/contrib/seeds) ###\n+Utility to generate the pnSeed[] array that is compiled into the client.\n+\n+Build Tools and Keys\n+---------------------\n+\n+### Packaging ###\n+The [Debian](/contrib/debian) subfolder contains the copyright file.\n+\n+All other packaging related files can be found in the [bitcoin-core/packaging](https://github.com/bitcoin-core/packaging) repository.\n+\n+### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n+Files used during the gitian build process. For more information about gitian, see the [the Bitcoin Core documentation repository](https://github.com/bitcoin-core/docs).\n+\n+### [Gitian-keys](/contrib/gitian-keys)\n+PGP keys used for signing Bitcoin Core [Gitian release](/doc/release-process.md) results.\n+\n+### [MacDeploy](/contrib/macdeploy) ###\n+Scripts and notes for Mac builds.\n+\n+### [Gitian-build](/contrib/gitian-build.py) ###\n+Script for running full Gitian builds.\n+\n+Test and Verify Tools\n+---------------------\n+\n+### [TestGen](/contrib/testgen) ###\n+Utilities to generate test vectors for the data-driven Bitcoin tests.\n+\n+### [Verify Binaries](/contrib/verifybinaries) ###\n+This script attempts to download and verify the signature file SHA256SUMS.asc from bitcoin.org."
      },
      {
        "sha": "ddea58a05cc1a9f0031b53b0d58f8c3801b32492",
        "filename": "contrib/bitcoin-cli.bash-completion",
        "status": "added",
        "additions": 141,
        "deletions": 0,
        "changes": 141,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/bitcoin-cli.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/bitcoin-cli.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-cli.bash-completion?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,141 @@\n+# bash programmable completion for bitcoin-cli(1)\n+# Copyright (c) 2012-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# call $bitcoin-cli for RPC\n+_bitcoin_rpc() {\n+    # determine already specified args necessary for RPC\n+    local rpcargs=()\n+    for i in ${COMP_LINE}; do\n+        case \"$i\" in\n+            -conf=*|-datadir=*|-regtest|-rpc*|-testnet)\n+                rpcargs=( \"${rpcargs[@]}\" \"$i\" )\n+                ;;\n+        esac\n+    done\n+    $bitcoin_cli \"${rpcargs[@]}\" \"$@\"\n+}\n+\n+_bitcoin_cli() {\n+    local cur prev words=() cword\n+    local bitcoin_cli\n+\n+    # save and use original argument to invoke bitcoin-cli for -help, help and RPC\n+    # as bitcoin-cli might not be in $PATH\n+    bitcoin_cli=\"$1\"\n+\n+    COMPREPLY=()\n+    _get_comp_words_by_ref -n = cur prev words cword\n+\n+    if ((cword > 5)); then\n+        case ${words[cword-5]} in\n+            sendtoaddress)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    if ((cword > 4)); then\n+        case ${words[cword-4]} in\n+            importaddress|listtransactions|setban)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            signrawtransactionwithkey|signrawtransactionwithwallet)\n+                COMPREPLY=( $( compgen -W \"ALL NONE SINGLE ALL|ANYONECANPAY NONE|ANYONECANPAY SINGLE|ANYONECANPAY\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    if ((cword > 3)); then\n+        case ${words[cword-3]} in\n+            addmultisigaddress)\n+                return 0\n+                ;;\n+            getbalance|gettxout|importaddress|importpubkey|importprivkey|listreceivedbyaddress|listsinceblock)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    if ((cword > 2)); then\n+        case ${words[cword-2]} in\n+            addnode)\n+                COMPREPLY=( $( compgen -W \"add remove onetry\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            setban)\n+                COMPREPLY=( $( compgen -W \"add remove\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            fundrawtransaction|getblock|getblockheader|getmempoolancestors|getmempooldescendants|getrawtransaction|gettransaction|listreceivedbyaddress|sendrawtransaction)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    case \"$prev\" in\n+        backupwallet|dumpwallet|importwallet)\n+            _filedir\n+            return 0\n+            ;;\n+        getaddednodeinfo|getrawmempool|lockunspent)\n+            COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+            return 0\n+            ;;\n+        getbalance|getnewaddress|listtransactions|sendmany)\n+            return 0\n+            ;;\n+    esac\n+\n+    case \"$cur\" in\n+        -conf=*)\n+            cur=\"${cur#*=}\"\n+            _filedir\n+            return 0\n+            ;;\n+        -datadir=*)\n+            cur=\"${cur#*=}\"\n+            _filedir -d\n+            return 0\n+            ;;\n+        -*=*)\t# prevent nonsense completions\n+            return 0\n+            ;;\n+        *)\n+            local helpopts commands\n+\n+            # only parse -help if senseful\n+            if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n+                helpopts=$($bitcoin_cli -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+            fi\n+\n+            # only parse help if senseful\n+            if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n+                commands=$(_bitcoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n+            fi\n+\n+            COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n+\n+            # Prevent space if an argument is desired\n+            if [[ $COMPREPLY == *= ]]; then\n+                compopt -o nospace\n+            fi\n+            return 0\n+            ;;\n+    esac\n+} &&\n+complete -F _bitcoin_cli bitcoin-cli\n+\n+# Local variables:\n+# mode: shell-script\n+# sh-basic-offset: 4\n+# sh-indent-comment: t\n+# indent-tabs-mode: nil\n+# End:\n+# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "0e4eeee0a7ad9ebc49c30d30c285ccd41a752771",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,22 @@\n+FORMS += \\\n+    ../src/qt/forms/aboutdialog.ui \\\n+    ../src/qt/forms/addressbookpage.ui \\\n+    ../src/qt/forms/askpassphrasedialog.ui \\\n+    ../src/qt/forms/coincontroldialog.ui \\\n+    ../src/qt/forms/editaddressdialog.ui \\\n+    ../src/qt/forms/helpmessagedialog.ui \\\n+    ../src/qt/forms/intro.ui \\\n+    ../src/qt/forms/openuridialog.ui \\\n+    ../src/qt/forms/optionsdialog.ui \\\n+    ../src/qt/forms/overviewpage.ui \\\n+    ../src/qt/forms/receivecoinsdialog.ui \\\n+    ../src/qt/forms/receiverequestdialog.ui \\\n+    ../src/qt/forms/debugwindow.ui \\\n+    ../src/qt/forms/sendcoinsdialog.ui \\\n+    ../src/qt/forms/sendcoinsentry.ui \\\n+    ../src/qt/forms/signverifymessagedialog.ui \\\n+    ../src/qt/forms/transactiondescdialog.ui \\\n+    ../src/qt/forms/createwalletdialog.ui\n+\n+RESOURCES += \\\n+    ../src/qt/bitcoin.qrc"
      },
      {
        "sha": "a83d2979ed3a8f11edea358937e8d5d359d58b4c",
        "filename": "contrib/bitcoin-tx.bash-completion",
        "status": "added",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/bitcoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/bitcoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-tx.bash-completion?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,57 @@\n+# bash programmable completion for bitcoin-tx(1)\n+# Copyright (c) 2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+_bitcoin_tx() {\n+    local cur prev words=() cword\n+    local bitcoin_tx\n+\n+    # save and use original argument to invoke bitcoin-tx for -help\n+    # it might not be in $PATH\n+    bitcoin_tx=\"$1\"\n+\n+    COMPREPLY=()\n+    _get_comp_words_by_ref -n =: cur prev words cword\n+\n+    case \"$cur\" in\n+        load=*:*)\n+            cur=\"${cur#load=*:}\"\n+            _filedir\n+            return 0\n+            ;;\n+        *=*)\t# prevent attempts to complete other arguments\n+            return 0\n+            ;;\n+    esac\n+\n+    if [[ \"$cword\" == 1 || ( \"$prev\" != \"-create\" && \"$prev\" == -* ) ]]; then\n+        # only options (or an uncompletable hex-string) allowed\n+        # parse bitcoin-tx -help for options\n+        local helpopts\n+        helpopts=$($bitcoin_tx -help | sed -e '/^  -/ p' -e d )\n+        COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n+    else\n+        # only commands are allowed\n+        # parse -help for commands\n+        local helpcmds\n+        helpcmds=$($bitcoin_tx -help | sed -e '1,/Commands:/d' -e 's/=.*/=/' -e '/^  [a-z]/ p' -e d )\n+        COMPREPLY=( $( compgen -W \"$helpcmds\" -- \"$cur\" ) )\n+    fi\n+\n+    # Prevent space if an argument is desired\n+    if [[ $COMPREPLY == *= ]]; then\n+        compopt -o nospace\n+    fi\n+\n+    return 0\n+} &&\n+complete -F _bitcoin_tx bitcoin-tx\n+\n+# Local variables:\n+# mode: shell-script\n+# sh-basic-offset: 4\n+# sh-indent-comment: t\n+# indent-tabs-mode: nil\n+# End:\n+# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "ec1d9512d4759e79ff284ceb09ae0ee16bbdb653",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "added",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,56 @@\n+# bash programmable completion for bitcoind(1) and bitcoin-qt(1)\n+# Copyright (c) 2012-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+_bitcoind() {\n+    local cur prev words=() cword\n+    local bitcoind\n+\n+    # save and use original argument to invoke bitcoind for -help\n+    # it might not be in $PATH\n+    bitcoind=\"$1\"\n+\n+    COMPREPLY=()\n+    _get_comp_words_by_ref -n = cur prev words cword\n+\n+    case \"$cur\" in\n+        -conf=*|-pid=*|-loadblock=*|-rpccookiefile=*|-wallet=*)\n+            cur=\"${cur#*=}\"\n+            _filedir\n+            return 0\n+            ;;\n+        -datadir=*)\n+            cur=\"${cur#*=}\"\n+            _filedir -d\n+            return 0\n+            ;;\n+        -*=*)\t# prevent nonsense completions\n+            return 0\n+            ;;\n+        *)\n+\n+            # only parse -help if sensible\n+            if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n+                local helpopts\n+                helpopts=$($bitcoind -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+                COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n+            fi\n+\n+            # Prevent space if an argument is desired\n+            if [[ $COMPREPLY == *= ]]; then\n+                compopt -o nospace\n+            fi\n+            return 0\n+            ;;\n+    esac\n+} &&\n+complete -F _bitcoind bitcoind bitcoin-qt\n+\n+# Local variables:\n+# mode: shell-script\n+# sh-basic-offset: 4\n+# sh-indent-comment: t\n+# indent-tabs-mode: nil\n+# End:\n+# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "581fe712e96c2cab4839c6bdc49a1b5cdc7bb6e7",
        "filename": "contrib/debian/copyright",
        "status": "added",
        "additions": 146,
        "deletions": 0,
        "changes": 146,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,146 @@\n+Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\n+Upstream-Name: Bitcoin\n+Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n+ irc://#bitcoin@freenode.net\n+Source: https://github.com/bitcoin/bitcoin\n+\n+Files: *\n+Copyright: 2009-2020, Bitcoin Core Developers\n+License: Expat\n+Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n+         as well as the numerous contributors to the project.\n+\n+Files: debian/*\n+Copyright: 2010-2011, Jonas Smedegaard <dr@jones.dk>\n+           2011, Matt Corallo <matt@bluematt.me>\n+License: GPL-2+\n+\n+Files: src/secp256k1/build-aux/m4/ax_jni_include_dir.m4\n+Copyright: 2008 Don Anderson <dda@sleepycat.com>\n+License: GNU-All-permissive-License\n+\n+Files: src/secp256k1/build-aux/m4/ax_prog_cc_for_build.m4\n+Copyright: 2008 Paolo Bonzini <bonzini@gnu.org>\n+License: GNU-All-permissive-License\n+\n+Files: src/qt/res/icons/add.png\n+       src/qt/res/icons/address-book.png\n+       src/qt/res/icons/chevron.png\n+       src/qt/res/icons/edit.png\n+       src/qt/res/icons/editcopy.png\n+       src/qt/res/icons/editpaste.png\n+       src/qt/res/icons/export.png\n+       src/qt/res/icons/eye.png\n+       src/qt/res/icons/history.png\n+       src/qt/res/icons/lock_*.png\n+       src/qt/res/icons/overview.png\n+       src/qt/res/icons/receive.png\n+       src/qt/res/icons/remove.png\n+       src/qt/res/icons/send.png\n+       src/qt/res/icons/synced.png\n+       src/qt/res/icons/transaction*.png\n+       src/qt/res/icons/tx_output.png\n+       src/qt/res/icons/warning.png\n+Copyright: Stephen Hutchings (and more)\n+           http://typicons.com\n+License: Expat\n+Comment: Site: https://github.com/stephenhutchings/typicons.font\n+\n+Files: src/qt/res/icons/connect*.png\n+       src/qt/res/src/connect-*.svg\n+       src/qt/res/icons/network_disabled.png\n+       src/qt/res/src/network_disabled.svg\n+Copyright: Marco Falke\n+           Luke Dashjr\n+License: Expat\n+Comment: Inspired by Stephen Hutchings' Typicons\n+\n+Files: src/qt/res/icons/tx_mined.png\n+       src/qt/res/src/mine.svg\n+       src/qt/res/icons/fontbigger.png\n+       src/qt/res/icons/fontsmaller.png\n+       src/qt/res/icons/hd_disabled.png\n+       src/qt/res/src/hd_disabled.svg\n+       src/qt/res/icons/hd_enabled.png\n+       src/qt/res/src/hd_enabled.svg\n+Copyright: Jonas Schnelli\n+License: Expat\n+\n+Files: src/qt/res/icons/clock*.png\n+       src/qt/res/icons/eye_*.png\n+       src/qt/res/icons/tx_in*.png\n+       src/qt/res/src/clock_*.svg\n+       src/qt/res/src/tx_*.svg\n+Copyright: Stephen Hutchings, Jonas Schnelli\n+License: Expat\n+Comment: Modifications of Stephen Hutchings' Typicons\n+\n+Files: src/qt/res/icons/bitcoin.*\n+       share/pixmaps/bitcoin*\n+       src/qt/res/src/bitcoin.svg\n+Copyright: Bitboy, Jonas Schnelli\n+License: public-domain\n+Comment: Site: https://bitcointalk.org/?topic=1756.0\n+\n+Files: src/qt/res/icons/proxy.png\n+       src/qt/res/src/proxy.svg\n+Copyright: Cristian Mircea Messel\n+License: public-domain\n+\n+\n+License: Expat\n+ Permission is hereby granted, free of charge, to any person obtaining a\n+ copy of this software and associated documentation files (the\n+ \"Software\"), to deal in the Software without restriction, including\n+ without limitation the rights to use, copy, modify, merge, publish,\n+ distribute, sublicense, and/or sell copies of the Software, and to\n+ permit persons to whom the Software is furnished to do so, subject to\n+ the following conditions:\n+ .\n+ The above copyright notice and this permission notice shall be included\n+ in all copies or substantial portions of the Software.\n+ .\n+ THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+ OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+ MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+ IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n+ CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n+ TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n+ SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n+\n+License: GNU-All-permissive-License\n+ Copying and distribution of this file, with or without modification, are\n+ permitted in any medium without royalty provided the copyright notice\n+ and this notice are preserved. This file is offered as-is, without any\n+ warranty.\n+\n+License: GPL-2+\n+ This program is free software; you can redistribute it and/or modify it\n+ under the terms of the GNU General Public License as published by the\n+ Free Software Foundation; either version 2, or (at your option) any\n+ later version.\n+ .\n+ This program is distributed in the hope that it will be useful, but\n+ WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ General Public License for more details.\n+Comment:\n+ On Debian systems the GNU General Public License (GPL) version 2 is\n+ located in '/usr/share/common-licenses/GPL-2'.\n+ .\n+ You should have received a copy of the GNU General Public License along\n+ with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+License: GPL-3+\n+ Permission is granted to copy, distribute and/or modify this document\n+ under the terms of the GNU General Public License, Version 3 or any\n+ later version published by the Free Software Foundation.\n+Comment:\n+ On Debian systems the GNU General Public License (GPL) version 3 is\n+ located in '/usr/share/common-licenses/GPL-3'.\n+ .\n+ You should have received a copy of the GNU General Public License along\n+ with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+License: public-domain\n+ This work is in the public domain."
      },
      {
        "sha": "bdff7a84b098bd430d9e3b3ec8c58106da7bb680",
        "filename": "contrib/devtools/README.md",
        "status": "added",
        "additions": 130,
        "deletions": 0,
        "changes": 130,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,130 @@\n+Contents\n+========\n+This directory contains tools for developers working on this repository.\n+\n+clang-format-diff.py\n+===================\n+\n+A script to format unified git diffs according to [.clang-format](../../src/.clang-format).\n+\n+Requires `clang-format`, installed e.g. via `brew install clang-format` on macOS.\n+\n+For instance, to format the last commit with 0 lines of context,\n+the script should be called from the git root folder as follows.\n+\n+```\n+git diff -U0 HEAD~1.. | ./contrib/devtools/clang-format-diff.py -p1 -i -v\n+```\n+\n+copyright\\_header.py\n+====================\n+\n+Provides utilities for managing copyright headers of `The Bitcoin Core\n+developers` in repository source files. It has three subcommands:\n+\n+```\n+$ ./copyright_header.py report <base_directory> [verbose]\n+$ ./copyright_header.py update <base_directory>\n+$ ./copyright_header.py insert <file>\n+```\n+Running these subcommands without arguments displays a usage string.\n+\n+copyright\\_header.py report \\<base\\_directory\\> [verbose]\n+---------------------------------------------------------\n+\n+Produces a report of all copyright header notices found inside the source files\n+of a repository. Useful to quickly visualize the state of the headers.\n+Specifying `verbose` will list the full filenames of files of each category.\n+\n+copyright\\_header.py update \\<base\\_directory\\> [verbose]\n+---------------------------------------------------------\n+Updates all the copyright headers of `The Bitcoin Core developers` which were\n+changed in a year more recent than is listed. For example:\n+```\n+// Copyright (c) <firstYear>-<lastYear> The Bitcoin Core developers\n+```\n+will be updated to:\n+```\n+// Copyright (c) <firstYear>-<lastModifiedYear> The Bitcoin Core developers\n+```\n+where `<lastModifiedYear>` is obtained from the `git log` history.\n+\n+This subcommand also handles copyright headers that have only a single year. In\n+those cases:\n+```\n+// Copyright (c) <year> The Bitcoin Core developers\n+```\n+will be updated to:\n+```\n+// Copyright (c) <year>-<lastModifiedYear> The Bitcoin Core developers\n+```\n+where the update is appropriate.\n+\n+copyright\\_header.py insert \\<file\\>\n+------------------------------------\n+Inserts a copyright header for `The Bitcoin Core developers` at the top of the\n+file in either Python or C++ style as determined by the file extension. If the\n+file is a Python file and it has  `#!` starting the first line, the header is\n+inserted in the line below it.\n+\n+The copyright dates will be set to be `<year_introduced>-<current_year>` where\n+`<year_introduced>` is according to the `git log` history. If\n+`<year_introduced>` is equal to `<current_year>`, it will be set as a single\n+year rather than two hyphenated years.\n+\n+If the file already has a copyright for `The Bitcoin Core developers`, the\n+script will exit.\n+\n+gen-manpages.sh\n+===============\n+\n+A small script to automatically create manpages in ../../doc/man by running the release binaries with the -help option.\n+This requires help2man which can be found at: https://www.gnu.org/software/help2man/\n+\n+With in-tree builds this tool can be run from any directory within the\n+repostitory. To use this tool with out-of-tree builds set `BUILDDIR`. For\n+example:\n+\n+```bash\n+BUILDDIR=$PWD/build contrib/devtools/gen-manpages.sh\n+```\n+\n+security-check.py and test-security-check.py\n+============================================\n+\n+Perform basic security checks on a series of executables.\n+\n+symbol-check.py\n+===============\n+\n+A script to check that the executables produced by gitian only contain\n+certain symbols and are only linked against allowed libraries.\n+\n+For Linux this means checking for allowed gcc, glibc and libstdc++ version symbols.\n+This makes sure they are still compatible with the minimum supported distribution versions.\n+\n+For macOS and Windows we check that the executables are only linked against libraries we allow.\n+\n+Example usage after a gitian build:\n+\n+    find ../gitian-builder/build -type f -executable | xargs python3 contrib/devtools/symbol-check.py\n+\n+If no errors occur the return value will be 0 and the output will be empty.\n+\n+If there are any errors the return value will be 1 and output like this will be printed:\n+\n+    .../64/test_bitcoin: symbol memcpy from unsupported version GLIBC_2.14\n+    .../64/test_bitcoin: symbol __fdelt_chk from unsupported version GLIBC_2.15\n+    .../64/test_bitcoin: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15\n+    .../64/test_bitcoin: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n+\n+circular-dependencies.py\n+========================\n+\n+Run this script from the root of the source tree (`src/`) to find circular dependencies in the source code.\n+This looks only at which files include other files, treating the `.cpp` and `.h` file as one unit.\n+\n+Example usage:\n+\n+    cd .../src\n+    ../contrib/devtools/circular-dependencies.py {*,*/*,*/*/*}.{h,cpp}"
      },
      {
        "sha": "bc5f09a3e260f6f02d6ea72e90b21a53e003ff0e",
        "filename": "contrib/devtools/circular-dependencies.py",
        "status": "added",
        "additions": 91,
        "deletions": 0,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/circular-dependencies.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/circular-dependencies.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/circular-dependencies.py?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,91 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import sys\n+import re\n+\n+MAPPING = {\n+    'core_read.cpp': 'core_io.cpp',\n+    'core_write.cpp': 'core_io.cpp',\n+}\n+\n+# Directories with header-based modules, where the assumption that .cpp files\n+# define functions and variables declared in corresponding .h files is\n+# incorrect.\n+HEADER_MODULE_PATHS = [\n+    'interfaces/'\n+]\n+\n+def module_name(path):\n+    if path in MAPPING:\n+        path = MAPPING[path]\n+    if any(path.startswith(dirpath) for dirpath in HEADER_MODULE_PATHS):\n+        return path\n+    if path.endswith(\".h\"):\n+        return path[:-2]\n+    if path.endswith(\".c\"):\n+        return path[:-2]\n+    if path.endswith(\".cpp\"):\n+        return path[:-4]\n+    return None\n+\n+files = dict()\n+deps = dict()\n+\n+RE = re.compile(\"^#include <(.*)>\")\n+\n+# Iterate over files, and create list of modules\n+for arg in sys.argv[1:]:\n+    module = module_name(arg)\n+    if module is None:\n+        print(\"Ignoring file %s (does not constitute module)\\n\" % arg)\n+    else:\n+        files[arg] = module\n+        deps[module] = set()\n+\n+# Iterate again, and build list of direct dependencies for each module\n+# TODO: implement support for multiple include directories\n+for arg in sorted(files.keys()):\n+    module = files[arg]\n+    with open(arg, 'r', encoding=\"utf8\") as f:\n+        for line in f:\n+            match = RE.match(line)\n+            if match:\n+                include = match.group(1)\n+                included_module = module_name(include)\n+                if included_module is not None and included_module in deps and included_module != module:\n+                    deps[module].add(included_module)\n+\n+# Loop to find the shortest (remaining) circular dependency\n+have_cycle = False\n+while True:\n+    shortest_cycle = None\n+    for module in sorted(deps.keys()):\n+        # Build the transitive closure of dependencies of module\n+        closure = dict()\n+        for dep in deps[module]:\n+            closure[dep] = []\n+        while True:\n+            old_size = len(closure)\n+            old_closure_keys = sorted(closure.keys())\n+            for src in old_closure_keys:\n+                for dep in deps[src]:\n+                    if dep not in closure:\n+                        closure[dep] = closure[src] + [src]\n+            if len(closure) == old_size:\n+                break\n+        # If module is in its own transitive closure, it's a circular dependency; check if it is the shortest\n+        if module in closure and (shortest_cycle is None or len(closure[module]) + 1 < len(shortest_cycle)):\n+            shortest_cycle = [module] + closure[module]\n+    if shortest_cycle is None:\n+        break\n+    # We have the shortest circular dependency; report it\n+    module = shortest_cycle[0]\n+    print(\"Circular dependency: %s\" % (\" -> \".join(shortest_cycle + [module])))\n+    # And then break the dependency to avoid repeating in other cycles\n+    deps[shortest_cycle[-1]] = deps[shortest_cycle[-1]] - set([module])\n+    have_cycle = True\n+\n+sys.exit(1 if have_cycle else 0)"
      },
      {
        "sha": "98eee67f4300853629cc61baaaed13008819038c",
        "filename": "contrib/devtools/clang-format-diff.py",
        "status": "added",
        "additions": 166,
        "deletions": 0,
        "changes": 166,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/clang-format-diff.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/clang-format-diff.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format-diff.py?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,166 @@\n+#!/usr/bin/env python3\n+#\n+#===- clang-format-diff.py - ClangFormat Diff Reformatter ----*- python -*--===#\n+#\n+#                     The LLVM Compiler Infrastructure\n+#\n+# This file is distributed under the University of Illinois Open Source\n+# License.\n+#\n+#           ============================================================\n+#\n+# University of Illinois/NCSA\n+# Open Source License\n+#\n+# Copyright (c) 2007-2015 University of Illinois at Urbana-Champaign.\n+# All rights reserved.\n+#\n+# Developed by:\n+#\n+#     LLVM Team\n+#\n+#     University of Illinois at Urbana-Champaign\n+#\n+#     http://llvm.org\n+#\n+# Permission is hereby granted, free of charge, to any person obtaining a copy of\n+# this software and associated documentation files (the \"Software\"), to deal with\n+# the Software without restriction, including without limitation the rights to\n+# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n+# of the Software, and to permit persons to whom the Software is furnished to do\n+# so, subject to the following conditions:\n+#\n+#     * Redistributions of source code must retain the above copyright notice,\n+#       this list of conditions and the following disclaimers.\n+#\n+#     * Redistributions in binary form must reproduce the above copyright notice,\n+#       this list of conditions and the following disclaimers in the\n+#       documentation and/or other materials provided with the distribution.\n+#\n+#     * Neither the names of the LLVM Team, University of Illinois at\n+#       Urbana-Champaign, nor the names of its contributors may be used to\n+#       endorse or promote products derived from this Software without specific\n+#       prior written permission.\n+#\n+# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n+# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n+# CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\n+# SOFTWARE.\n+#\n+#           ============================================================\n+#\n+#===------------------------------------------------------------------------===#\n+\n+r\"\"\"\n+ClangFormat Diff Reformatter\n+============================\n+\n+This script reads input from a unified diff and reformats all the changed\n+lines. This is useful to reformat all the lines touched by a specific patch.\n+Example usage for git/svn users:\n+\n+  git diff -U0 HEAD^ | clang-format-diff.py -p1 -i\n+  svn diff --diff-cmd=diff -x-U0 | clang-format-diff.py -i\n+\n+\"\"\"\n+\n+import argparse\n+import difflib\n+import io\n+import re\n+import subprocess\n+import sys\n+\n+\n+# Change this to the full path if clang-format is not on the path.\n+binary = 'clang-format'\n+\n+\n+def main():\n+  parser = argparse.ArgumentParser(description=\n+                                   'Reformat changed lines in diff. Without -i '\n+                                   'option just output the diff that would be '\n+                                   'introduced.')\n+  parser.add_argument('-i', action='store_true', default=False,\n+                      help='apply edits to files instead of displaying a diff')\n+  parser.add_argument('-p', metavar='NUM', default=0,\n+                      help='strip the smallest prefix containing P slashes')\n+  parser.add_argument('-regex', metavar='PATTERN', default=None,\n+                      help='custom pattern selecting file paths to reformat '\n+                      '(case sensitive, overrides -iregex)')\n+  parser.add_argument('-iregex', metavar='PATTERN', default=\n+                      r'.*\\.(cpp|cc|c\\+\\+|cxx|c|cl|h|hpp|m|mm|inc|js|ts|proto'\n+                      r'|protodevel|java)',\n+                      help='custom pattern selecting file paths to reformat '\n+                      '(case insensitive, overridden by -regex)')\n+  parser.add_argument('-sort-includes', action='store_true', default=False,\n+                      help='let clang-format sort include blocks')\n+  parser.add_argument('-v', '--verbose', action='store_true',\n+                      help='be more verbose, ineffective without -i')\n+  args = parser.parse_args()\n+\n+  # Extract changed lines for each file.\n+  filename = None\n+  lines_by_file = {}\n+  for line in sys.stdin:\n+    match = re.search(r'^\\+\\+\\+\\ (.*?/){%s}(\\S*)' % args.p, line)\n+    if match:\n+      filename = match.group(2)\n+    if filename is None:\n+      continue\n+\n+    if args.regex is not None:\n+      if not re.match('^%s$' % args.regex, filename):\n+        continue\n+    else:\n+      if not re.match('^%s$' % args.iregex, filename, re.IGNORECASE):\n+        continue\n+\n+    match = re.search(r'^@@.*\\+(\\d+)(,(\\d+))?', line)\n+    if match:\n+      start_line = int(match.group(1))\n+      line_count = 1\n+      if match.group(3):\n+        line_count = int(match.group(3))\n+      if line_count == 0:\n+        continue\n+      end_line = start_line + line_count - 1\n+      lines_by_file.setdefault(filename, []).extend(\n+          ['-lines', str(start_line) + ':' + str(end_line)])\n+\n+  # Reformat files containing changes in place.\n+  for filename, lines in lines_by_file.items():\n+    if args.i and args.verbose:\n+      print('Formatting {}'.format(filename))\n+    command = [binary, filename]\n+    if args.i:\n+      command.append('-i')\n+    if args.sort_includes:\n+      command.append('-sort-includes')\n+    command.extend(lines)\n+    command.extend(['-style=file', '-fallback-style=none'])\n+    p = subprocess.Popen(command,\n+                         stdout=subprocess.PIPE,\n+                         stderr=None,\n+                         stdin=subprocess.PIPE,\n+                         universal_newlines=True)\n+    stdout, stderr = p.communicate()\n+    if p.returncode != 0:\n+      sys.exit(p.returncode)\n+\n+    if not args.i:\n+      with open(filename, encoding=\"utf8\") as f:\n+        code = f.readlines()\n+      formatted_code = io.StringIO(stdout).readlines()\n+      diff = difflib.unified_diff(code, formatted_code,\n+                                  filename, filename,\n+                                  '(before formatting)', '(after formatting)')\n+      diff_string = ''.join(diff)\n+      if len(diff_string) > 0:\n+        sys.stdout.write(diff_string)\n+\n+if __name__ == '__main__':\n+  main()"
      },
      {
        "sha": "9a555c70bb490add4f055da0f58e9100a396584f",
        "filename": "contrib/devtools/copyright_header.py",
        "status": "added",
        "additions": 606,
        "deletions": 0,
        "changes": 606,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/copyright_header.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/copyright_header.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/copyright_header.py?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,606 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2016-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import re\n+import fnmatch\n+import sys\n+import subprocess\n+import datetime\n+import os\n+\n+################################################################################\n+# file filtering\n+################################################################################\n+\n+EXCLUDE = [\n+    # auto generated:\n+    'src/qt/bitcoinstrings.cpp',\n+    'src/chainparamsseeds.h',\n+    # other external copyrights:\n+    'src/reverse_iterator.h',\n+    'src/test/fuzz/FuzzedDataProvider.h',\n+    'src/tinyformat.h',\n+    'src/bench/nanobench.h',\n+    'test/functional/test_framework/bignum.py',\n+    # python init:\n+    '*__init__.py',\n+]\n+EXCLUDE_COMPILED = re.compile('|'.join([fnmatch.translate(m) for m in EXCLUDE]))\n+\n+EXCLUDE_DIRS = [\n+    # git subtrees\n+    \"src/crypto/ctaes/\",\n+    \"src/leveldb/\",\n+    \"src/secp256k1/\",\n+    \"src/univalue/\",\n+    \"src/crc32c/\",\n+]\n+\n+INCLUDE = ['*.h', '*.cpp', '*.cc', '*.c', '*.mm', '*.py', '*.sh', '*.bash-completion']\n+INCLUDE_COMPILED = re.compile('|'.join([fnmatch.translate(m) for m in INCLUDE]))\n+\n+def applies_to_file(filename):\n+    for excluded_dir in EXCLUDE_DIRS:\n+        if filename.startswith(excluded_dir):\n+            return False\n+    return ((EXCLUDE_COMPILED.match(filename) is None) and\n+            (INCLUDE_COMPILED.match(filename) is not None))\n+\n+################################################################################\n+# obtain list of files in repo according to INCLUDE and EXCLUDE\n+################################################################################\n+\n+GIT_LS_CMD = 'git ls-files --full-name'.split(' ')\n+GIT_TOPLEVEL_CMD = 'git rev-parse --show-toplevel'.split(' ')\n+\n+def call_git_ls(base_directory):\n+    out = subprocess.check_output([*GIT_LS_CMD, base_directory])\n+    return [f for f in out.decode(\"utf-8\").split('\\n') if f != '']\n+\n+def call_git_toplevel():\n+    \"Returns the absolute path to the project root\"\n+    return subprocess.check_output(GIT_TOPLEVEL_CMD).strip().decode(\"utf-8\")\n+\n+def get_filenames_to_examine(base_directory):\n+    \"Returns an array of absolute paths to any project files in the base_directory that pass the include/exclude filters\"\n+    root = call_git_toplevel()\n+    filenames = call_git_ls(base_directory)\n+    return sorted([os.path.join(root, filename) for filename in filenames if\n+                   applies_to_file(filename)])\n+\n+################################################################################\n+# define and compile regexes for the patterns we are looking for\n+################################################################################\n+\n+\n+COPYRIGHT_WITH_C = r'Copyright \\(c\\)'\n+COPYRIGHT_WITHOUT_C = 'Copyright'\n+ANY_COPYRIGHT_STYLE = '(%s|%s)' % (COPYRIGHT_WITH_C, COPYRIGHT_WITHOUT_C)\n+\n+YEAR = \"20[0-9][0-9]\"\n+YEAR_RANGE = '(%s)(-%s)?' % (YEAR, YEAR)\n+YEAR_LIST = '(%s)(, %s)+' % (YEAR, YEAR)\n+ANY_YEAR_STYLE = '(%s|%s)' % (YEAR_RANGE, YEAR_LIST)\n+ANY_COPYRIGHT_STYLE_OR_YEAR_STYLE = (\"%s %s\" % (ANY_COPYRIGHT_STYLE,\n+                                                ANY_YEAR_STYLE))\n+\n+ANY_COPYRIGHT_COMPILED = re.compile(ANY_COPYRIGHT_STYLE_OR_YEAR_STYLE)\n+\n+def compile_copyright_regex(copyright_style, year_style, name):\n+    return re.compile(r'%s %s,? %s( +\\*)?\\n' % (copyright_style, year_style, name))\n+\n+EXPECTED_HOLDER_NAMES = [\n+    r\"Satoshi Nakamoto\",\n+    r\"The Bitcoin Core developers\",\n+    r\"BitPay Inc\\.\",\n+    r\"University of Illinois at Urbana-Champaign\\.\",\n+    r\"Pieter Wuille\",\n+    r\"Wladimir J\\. van der Laan\",\n+    r\"Jeff Garzik\",\n+    r\"Jan-Klaas Kollhof\",\n+    r\"ArtForz -- public domain half-a-node\",\n+    r\"Intel Corporation ?\",\n+    r\"The Zcash developers\",\n+    r\"Jeremy Rubin\",\n+]\n+\n+DOMINANT_STYLE_COMPILED = {}\n+YEAR_LIST_STYLE_COMPILED = {}\n+WITHOUT_C_STYLE_COMPILED = {}\n+\n+for holder_name in EXPECTED_HOLDER_NAMES:\n+    DOMINANT_STYLE_COMPILED[holder_name] = (\n+        compile_copyright_regex(COPYRIGHT_WITH_C, YEAR_RANGE, holder_name))\n+    YEAR_LIST_STYLE_COMPILED[holder_name] = (\n+        compile_copyright_regex(COPYRIGHT_WITH_C, YEAR_LIST, holder_name))\n+    WITHOUT_C_STYLE_COMPILED[holder_name] = (\n+        compile_copyright_regex(COPYRIGHT_WITHOUT_C, ANY_YEAR_STYLE,\n+                                holder_name))\n+\n+################################################################################\n+# search file contents for copyright message of particular category\n+################################################################################\n+\n+def get_count_of_copyrights_of_any_style_any_holder(contents):\n+    return len(ANY_COPYRIGHT_COMPILED.findall(contents))\n+\n+def file_has_dominant_style_copyright_for_holder(contents, holder_name):\n+    match = DOMINANT_STYLE_COMPILED[holder_name].search(contents)\n+    return match is not None\n+\n+def file_has_year_list_style_copyright_for_holder(contents, holder_name):\n+    match = YEAR_LIST_STYLE_COMPILED[holder_name].search(contents)\n+    return match is not None\n+\n+def file_has_without_c_style_copyright_for_holder(contents, holder_name):\n+    match = WITHOUT_C_STYLE_COMPILED[holder_name].search(contents)\n+    return match is not None\n+\n+################################################################################\n+# get file info\n+################################################################################\n+\n+def read_file(filename):\n+    return open(filename, 'r', encoding=\"utf8\").read()\n+\n+def gather_file_info(filename):\n+    info = {}\n+    info['filename'] = filename\n+    c = read_file(filename)\n+    info['contents'] = c\n+\n+    info['all_copyrights'] = get_count_of_copyrights_of_any_style_any_holder(c)\n+\n+    info['classified_copyrights'] = 0\n+    info['dominant_style'] = {}\n+    info['year_list_style'] = {}\n+    info['without_c_style'] = {}\n+    for holder_name in EXPECTED_HOLDER_NAMES:\n+        has_dominant_style = (\n+            file_has_dominant_style_copyright_for_holder(c, holder_name))\n+        has_year_list_style = (\n+            file_has_year_list_style_copyright_for_holder(c, holder_name))\n+        has_without_c_style = (\n+            file_has_without_c_style_copyright_for_holder(c, holder_name))\n+        info['dominant_style'][holder_name] = has_dominant_style\n+        info['year_list_style'][holder_name] = has_year_list_style\n+        info['without_c_style'][holder_name] = has_without_c_style\n+        if has_dominant_style or has_year_list_style or has_without_c_style:\n+            info['classified_copyrights'] = info['classified_copyrights'] + 1\n+    return info\n+\n+################################################################################\n+# report execution\n+################################################################################\n+\n+SEPARATOR = '-'.join(['' for _ in range(80)])\n+\n+def print_filenames(filenames, verbose):\n+    if not verbose:\n+        return\n+    for filename in filenames:\n+        print(\"\\t%s\" % filename)\n+\n+def print_report(file_infos, verbose):\n+    print(SEPARATOR)\n+    examined = [i['filename'] for i in file_infos]\n+    print(\"%d files examined according to INCLUDE and EXCLUDE fnmatch rules\" %\n+          len(examined))\n+    print_filenames(examined, verbose)\n+\n+    print(SEPARATOR)\n+    print('')\n+    zero_copyrights = [i['filename'] for i in file_infos if\n+                       i['all_copyrights'] == 0]\n+    print(\"%4d with zero copyrights\" % len(zero_copyrights))\n+    print_filenames(zero_copyrights, verbose)\n+    one_copyright = [i['filename'] for i in file_infos if\n+                     i['all_copyrights'] == 1]\n+    print(\"%4d with one copyright\" % len(one_copyright))\n+    print_filenames(one_copyright, verbose)\n+    two_copyrights = [i['filename'] for i in file_infos if\n+                      i['all_copyrights'] == 2]\n+    print(\"%4d with two copyrights\" % len(two_copyrights))\n+    print_filenames(two_copyrights, verbose)\n+    three_copyrights = [i['filename'] for i in file_infos if\n+                        i['all_copyrights'] == 3]\n+    print(\"%4d with three copyrights\" % len(three_copyrights))\n+    print_filenames(three_copyrights, verbose)\n+    four_or_more_copyrights = [i['filename'] for i in file_infos if\n+                               i['all_copyrights'] >= 4]\n+    print(\"%4d with four or more copyrights\" % len(four_or_more_copyrights))\n+    print_filenames(four_or_more_copyrights, verbose)\n+    print('')\n+    print(SEPARATOR)\n+    print('Copyrights with dominant style:\\ne.g. \"Copyright (c)\" and '\n+          '\"<year>\" or \"<startYear>-<endYear>\":\\n')\n+    for holder_name in EXPECTED_HOLDER_NAMES:\n+        dominant_style = [i['filename'] for i in file_infos if\n+                          i['dominant_style'][holder_name]]\n+        if len(dominant_style) > 0:\n+            print(\"%4d with '%s'\" % (len(dominant_style),\n+                                     holder_name.replace('\\n', '\\\\n')))\n+            print_filenames(dominant_style, verbose)\n+    print('')\n+    print(SEPARATOR)\n+    print('Copyrights with year list style:\\ne.g. \"Copyright (c)\" and '\n+          '\"<year1>, <year2>, ...\":\\n')\n+    for holder_name in EXPECTED_HOLDER_NAMES:\n+        year_list_style = [i['filename'] for i in file_infos if\n+                           i['year_list_style'][holder_name]]\n+        if len(year_list_style) > 0:\n+            print(\"%4d with '%s'\" % (len(year_list_style),\n+                                     holder_name.replace('\\n', '\\\\n')))\n+            print_filenames(year_list_style, verbose)\n+    print('')\n+    print(SEPARATOR)\n+    print('Copyrights with no \"(c)\" style:\\ne.g. \"Copyright\" and \"<year>\" or '\n+          '\"<startYear>-<endYear>\":\\n')\n+    for holder_name in EXPECTED_HOLDER_NAMES:\n+        without_c_style = [i['filename'] for i in file_infos if\n+                           i['without_c_style'][holder_name]]\n+        if len(without_c_style) > 0:\n+            print(\"%4d with '%s'\" % (len(without_c_style),\n+                                     holder_name.replace('\\n', '\\\\n')))\n+            print_filenames(without_c_style, verbose)\n+\n+    print('')\n+    print(SEPARATOR)\n+\n+    unclassified_copyrights = [i['filename'] for i in file_infos if\n+                               i['classified_copyrights'] < i['all_copyrights']]\n+    print(\"%d with unexpected copyright holder names\" %\n+          len(unclassified_copyrights))\n+    print_filenames(unclassified_copyrights, verbose)\n+    print(SEPARATOR)\n+\n+def exec_report(base_directory, verbose):\n+    filenames = get_filenames_to_examine(base_directory)\n+    file_infos = [gather_file_info(f) for f in filenames]\n+    print_report(file_infos, verbose)\n+\n+################################################################################\n+# report cmd\n+################################################################################\n+\n+REPORT_USAGE = \"\"\"\n+Produces a report of all copyright header notices found inside the source files\n+of a repository.\n+\n+Usage:\n+    $ ./copyright_header.py report <base_directory> [verbose]\n+\n+Arguments:\n+    <base_directory> - The base directory of a bitcoin source code repository.\n+    [verbose] - Includes a list of every file of each subcategory in the report.\n+\"\"\"\n+\n+def report_cmd(argv):\n+    if len(argv) == 2:\n+        sys.exit(REPORT_USAGE)\n+\n+    base_directory = argv[2]\n+    if not os.path.exists(base_directory):\n+        sys.exit(\"*** bad <base_directory>: %s\" % base_directory)\n+\n+    if len(argv) == 3:\n+        verbose = False\n+    elif argv[3] == 'verbose':\n+        verbose = True\n+    else:\n+        sys.exit(\"*** unknown argument: %s\" % argv[2])\n+\n+    exec_report(base_directory, verbose)\n+\n+################################################################################\n+# query git for year of last change\n+################################################################################\n+\n+GIT_LOG_CMD = \"git log --pretty=format:%%ai %s\"\n+\n+def call_git_log(filename):\n+    out = subprocess.check_output((GIT_LOG_CMD % filename).split(' '))\n+    return out.decode(\"utf-8\").split('\\n')\n+\n+def get_git_change_years(filename):\n+    git_log_lines = call_git_log(filename)\n+    if len(git_log_lines) == 0:\n+        return [datetime.date.today().year]\n+    # timestamp is in ISO 8601 format. e.g. \"2016-09-05 14:25:32 -0600\"\n+    return [line.split(' ')[0].split('-')[0] for line in git_log_lines]\n+\n+def get_most_recent_git_change_year(filename):\n+    return max(get_git_change_years(filename))\n+\n+################################################################################\n+# read and write to file\n+################################################################################\n+\n+def read_file_lines(filename):\n+    f = open(filename, 'r', encoding=\"utf8\")\n+    file_lines = f.readlines()\n+    f.close()\n+    return file_lines\n+\n+def write_file_lines(filename, file_lines):\n+    f = open(filename, 'w', encoding=\"utf8\")\n+    f.write(''.join(file_lines))\n+    f.close()\n+\n+################################################################################\n+# update header years execution\n+################################################################################\n+\n+COPYRIGHT = r'Copyright \\(c\\)'\n+YEAR = \"20[0-9][0-9]\"\n+YEAR_RANGE = '(%s)(-%s)?' % (YEAR, YEAR)\n+HOLDER = 'The Bitcoin Core developers'\n+UPDATEABLE_LINE_COMPILED = re.compile(' '.join([COPYRIGHT, YEAR_RANGE, HOLDER]))\n+\n+def get_updatable_copyright_line(file_lines):\n+    index = 0\n+    for line in file_lines:\n+        if UPDATEABLE_LINE_COMPILED.search(line) is not None:\n+            return index, line\n+        index = index + 1\n+    return None, None\n+\n+def parse_year_range(year_range):\n+    year_split = year_range.split('-')\n+    start_year = year_split[0]\n+    if len(year_split) == 1:\n+        return start_year, start_year\n+    return start_year, year_split[1]\n+\n+def year_range_to_str(start_year, end_year):\n+    if start_year == end_year:\n+        return start_year\n+    return \"%s-%s\" % (start_year, end_year)\n+\n+def create_updated_copyright_line(line, last_git_change_year):\n+    copyright_splitter = 'Copyright (c) '\n+    copyright_split = line.split(copyright_splitter)\n+    # Preserve characters on line that are ahead of the start of the copyright\n+    # notice - they are part of the comment block and vary from file-to-file.\n+    before_copyright = copyright_split[0]\n+    after_copyright = copyright_split[1]\n+\n+    space_split = after_copyright.split(' ')\n+    year_range = space_split[0]\n+    start_year, end_year = parse_year_range(year_range)\n+    if end_year == last_git_change_year:\n+        return line\n+    return (before_copyright + copyright_splitter +\n+            year_range_to_str(start_year, last_git_change_year) + ' ' +\n+            ' '.join(space_split[1:]))\n+\n+def update_updatable_copyright(filename):\n+    file_lines = read_file_lines(filename)\n+    index, line = get_updatable_copyright_line(file_lines)\n+    if not line:\n+        print_file_action_message(filename, \"No updatable copyright.\")\n+        return\n+    last_git_change_year = get_most_recent_git_change_year(filename)\n+    new_line = create_updated_copyright_line(line, last_git_change_year)\n+    if line == new_line:\n+        print_file_action_message(filename, \"Copyright up-to-date.\")\n+        return\n+    file_lines[index] = new_line\n+    write_file_lines(filename, file_lines)\n+    print_file_action_message(filename,\n+                              \"Copyright updated! -> %s\" % last_git_change_year)\n+\n+def exec_update_header_year(base_directory):\n+    for filename in get_filenames_to_examine(base_directory):\n+        update_updatable_copyright(filename)\n+\n+################################################################################\n+# update cmd\n+################################################################################\n+\n+UPDATE_USAGE = \"\"\"\n+Updates all the copyright headers of \"The Bitcoin Core developers\" which were\n+changed in a year more recent than is listed. For example:\n+\n+// Copyright (c) <firstYear>-<lastYear> The Bitcoin Core developers\n+\n+will be updated to:\n+\n+// Copyright (c) <firstYear>-<lastModifiedYear> The Bitcoin Core developers\n+\n+where <lastModifiedYear> is obtained from the 'git log' history.\n+\n+This subcommand also handles copyright headers that have only a single year. In those cases:\n+\n+// Copyright (c) <year> The Bitcoin Core developers\n+\n+will be updated to:\n+\n+// Copyright (c) <year>-<lastModifiedYear> The Bitcoin Core developers\n+\n+where the update is appropriate.\n+\n+Usage:\n+    $ ./copyright_header.py update <base_directory>\n+\n+Arguments:\n+    <base_directory> - The base directory of a bitcoin source code repository.\n+\"\"\"\n+\n+def print_file_action_message(filename, action):\n+    print(\"%-52s %s\" % (filename, action))\n+\n+def update_cmd(argv):\n+    if len(argv) != 3:\n+        sys.exit(UPDATE_USAGE)\n+\n+    base_directory = argv[2]\n+    if not os.path.exists(base_directory):\n+        sys.exit(\"*** bad base_directory: %s\" % base_directory)\n+    exec_update_header_year(base_directory)\n+\n+################################################################################\n+# inserted copyright header format\n+################################################################################\n+\n+def get_header_lines(header, start_year, end_year):\n+    lines = header.split('\\n')[1:-1]\n+    lines[0] = lines[0] % year_range_to_str(start_year, end_year)\n+    return [line + '\\n' for line in lines]\n+\n+CPP_HEADER = '''\n+// Copyright (c) %s The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+\n+def get_cpp_header_lines_to_insert(start_year, end_year):\n+    return reversed(get_header_lines(CPP_HEADER, start_year, end_year))\n+\n+SCRIPT_HEADER = '''\n+# Copyright (c) %s The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+\n+def get_script_header_lines_to_insert(start_year, end_year):\n+    return reversed(get_header_lines(SCRIPT_HEADER, start_year, end_year))\n+\n+################################################################################\n+# query git for year of last change\n+################################################################################\n+\n+def get_git_change_year_range(filename):\n+    years = get_git_change_years(filename)\n+    return min(years), max(years)\n+\n+################################################################################\n+# check for existing core copyright\n+################################################################################\n+\n+def file_already_has_core_copyright(file_lines):\n+    index, _ = get_updatable_copyright_line(file_lines)\n+    return index is not None\n+\n+################################################################################\n+# insert header execution\n+################################################################################\n+\n+def file_has_hashbang(file_lines):\n+    if len(file_lines) < 1:\n+        return False\n+    if len(file_lines[0]) <= 2:\n+        return False\n+    return file_lines[0][:2] == '#!'\n+\n+def insert_script_header(filename, file_lines, start_year, end_year):\n+    if file_has_hashbang(file_lines):\n+        insert_idx = 1\n+    else:\n+        insert_idx = 0\n+    header_lines = get_script_header_lines_to_insert(start_year, end_year)\n+    for line in header_lines:\n+        file_lines.insert(insert_idx, line)\n+    write_file_lines(filename, file_lines)\n+\n+def insert_cpp_header(filename, file_lines, start_year, end_year):\n+    file_lines.insert(0, '\\n')\n+    header_lines = get_cpp_header_lines_to_insert(start_year, end_year)\n+    for line in header_lines:\n+        file_lines.insert(0, line)\n+    write_file_lines(filename, file_lines)\n+\n+def exec_insert_header(filename, style):\n+    file_lines = read_file_lines(filename)\n+    if file_already_has_core_copyright(file_lines):\n+        sys.exit('*** %s already has a copyright by The Bitcoin Core developers'\n+                 % (filename))\n+    start_year, end_year = get_git_change_year_range(filename)\n+    if style in ['python', 'shell']:\n+        insert_script_header(filename, file_lines, start_year, end_year)\n+    else:\n+        insert_cpp_header(filename, file_lines, start_year, end_year)\n+\n+################################################################################\n+# insert cmd\n+################################################################################\n+\n+INSERT_USAGE = \"\"\"\n+Inserts a copyright header for \"The Bitcoin Core developers\" at the top of the\n+file in either Python or C++ style as determined by the file extension. If the\n+file is a Python file and it has a '#!' starting the first line, the header is\n+inserted in the line below it.\n+\n+The copyright dates will be set to be:\n+\n+\"<year_introduced>-<current_year>\"\n+\n+where <year_introduced> is according to the 'git log' history. If\n+<year_introduced> is equal to <current_year>, the date will be set to be:\n+\n+\"<current_year>\"\n+\n+If the file already has a copyright for \"The Bitcoin Core developers\", the\n+script will exit.\n+\n+Usage:\n+    $ ./copyright_header.py insert <file>\n+\n+Arguments:\n+    <file> - A source file in the bitcoin repository.\n+\"\"\"\n+\n+def insert_cmd(argv):\n+    if len(argv) != 3:\n+        sys.exit(INSERT_USAGE)\n+\n+    filename = argv[2]\n+    if not os.path.isfile(filename):\n+        sys.exit(\"*** bad filename: %s\" % filename)\n+    _, extension = os.path.splitext(filename)\n+    if extension not in ['.h', '.cpp', '.cc', '.c', '.py', '.sh']:\n+        sys.exit(\"*** cannot insert for file extension %s\" % extension)\n+\n+    if extension == '.py':\n+        style = 'python'\n+    elif extension == '.sh':\n+        style = 'shell'\n+    else:\n+        style = 'cpp'\n+    exec_insert_header(filename, style)\n+\n+################################################################################\n+# UI\n+################################################################################\n+\n+USAGE = \"\"\"\n+copyright_header.py - utilities for managing copyright headers of 'The Bitcoin\n+Core developers' in repository source files.\n+\n+Usage:\n+    $ ./copyright_header <subcommand>\n+\n+Subcommands:\n+    report\n+    update\n+    insert\n+\n+To see subcommand usage, run them without arguments.\n+\"\"\"\n+\n+SUBCOMMANDS = ['report', 'update', 'insert']\n+\n+if __name__ == \"__main__\":\n+    if len(sys.argv) == 1:\n+        sys.exit(USAGE)\n+    subcommand = sys.argv[1]\n+    if subcommand not in SUBCOMMANDS:\n+        sys.exit(USAGE)\n+    if subcommand == 'report':\n+        report_cmd(sys.argv)\n+    elif subcommand == 'update':\n+        update_cmd(sys.argv)\n+    elif subcommand == 'insert':\n+        insert_cmd(sys.argv)"
      },
      {
        "sha": "aa65953d838585aff4f33081b30c1cdb984b2e15",
        "filename": "contrib/devtools/gen-manpages.sh",
        "status": "added",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/gen-manpages.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/gen-manpages.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/gen-manpages.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,36 @@\n+#!/usr/bin/env bash\n+# Copyright (c) 2016-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+TOPDIR=${TOPDIR:-$(git rev-parse --show-toplevel)}\n+BUILDDIR=${BUILDDIR:-$TOPDIR}\n+\n+BINDIR=${BINDIR:-$BUILDDIR/src}\n+MANDIR=${MANDIR:-$TOPDIR/doc/man}\n+\n+BITCOIND=${BITCOIND:-$BINDIR/bitcoind}\n+BITCOINCLI=${BITCOINCLI:-$BINDIR/bitcoin-cli}\n+BITCOINTX=${BITCOINTX:-$BINDIR/bitcoin-tx}\n+WALLET_TOOL=${WALLET_TOOL:-$BINDIR/bitcoin-wallet}\n+BITCOINQT=${BITCOINQT:-$BINDIR/qt/bitcoin-qt}\n+\n+[ ! -x $BITCOIND ] && echo \"$BITCOIND not found or not executable.\" && exit 1\n+\n+# The autodetected version git tag can screw up manpage output a little bit\n+read -r -a BTCVER <<< \"$($BITCOINCLI --version | head -n1 | awk -F'[ -]' '{ print $6, $7 }')\"\n+\n+# Create a footer file with copyright content.\n+# This gets autodetected fine for bitcoind if --version-string is not set,\n+# but has different outcomes for bitcoin-qt and bitcoin-cli.\n+echo \"[COPYRIGHT]\" > footer.h2m\n+$BITCOIND --version | sed -n '1!p' >> footer.h2m\n+\n+for cmd in $BITCOIND $BITCOINCLI $BITCOINTX $WALLET_TOOL $BITCOINQT; do\n+  cmdname=\"${cmd##*/}\"\n+  help2man -N --version-string=${BTCVER[0]} --include=footer.h2m -o ${MANDIR}/${cmdname}.1 ${cmd}\n+  sed -i \"s/\\\\\\-${BTCVER[1]}//g\" ${MANDIR}/${cmdname}.1\n+done\n+\n+rm -f footer.h2m"
      },
      {
        "sha": "dc74de91980a4cce82b01c915be9e9c8a7d3c62e",
        "filename": "contrib/devtools/security-check.py",
        "status": "added",
        "additions": 357,
        "deletions": 0,
        "changes": 357,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,357 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+Perform basic security checks on a series of executables.\n+Exit status will be 0 if successful, and the program will be silent.\n+Otherwise the exit status will be 1 and it will log which executables failed which checks.\n+Needs `readelf` (for ELF), `objdump` (for PE) and `otool` (for MACHO).\n+'''\n+import subprocess\n+import sys\n+import os\n+\n+from typing import List, Optional\n+\n+READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n+OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n+OTOOL_CMD = os.getenv('OTOOL', '/usr/bin/otool')\n+\n+def run_command(command) -> str:\n+    p = subprocess.run(command, stdout=subprocess.PIPE, check=True, universal_newlines=True)\n+    return p.stdout\n+\n+def check_ELF_PIE(executable) -> bool:\n+    '''\n+    Check for position independent executable (PIE), allowing for address space randomization.\n+    '''\n+    stdout = run_command([READELF_CMD, '-h', '-W', executable])\n+\n+    ok = False\n+    for line in stdout.splitlines():\n+        tokens = line.split()\n+        if len(line)>=2 and tokens[0] == 'Type:' and tokens[1] == 'DYN':\n+            ok = True\n+    return ok\n+\n+def get_ELF_program_headers(executable):\n+    '''Return type and flags for ELF program headers'''\n+    stdout = run_command([READELF_CMD, '-l', '-W', executable])\n+\n+    in_headers = False\n+    headers = []\n+    for line in stdout.splitlines():\n+        if line.startswith('Program Headers:'):\n+            in_headers = True\n+            count = 0\n+        if line == '':\n+            in_headers = False\n+        if in_headers:\n+            if count == 1: # header line\n+                header = [x.strip() for x in line.split()]\n+                ofs_typ = header.index('Type')\n+                ofs_flags = header.index('Flg')\n+                # assert readelf output is what we expect\n+                if ofs_typ == -1 or ofs_flags == -1:\n+                    raise ValueError('Cannot parse elfread -lW output')\n+            elif count > 1:\n+                splitline = [x.strip() for x in line.split()]\n+                typ = splitline[ofs_typ]\n+                if not typ.startswith('[R'): # skip [Requesting ...]\n+                    splitline = [x.strip() for x in line.split()]\n+                    flags = splitline[ofs_flags]\n+                    # check for 'R', ' E'\n+                    if splitline[ofs_flags + 1] is 'E':\n+                        flags += ' E'\n+                    headers.append((typ, flags, []))\n+            count += 1\n+\n+        if line.startswith(' Section to Segment mapping:'):\n+            in_mapping = True\n+            count = 0\n+        if line == '':\n+            in_mapping = False\n+        if in_mapping:\n+            if count == 1: # header line\n+                ofs_segment = line.find('Segment')\n+                ofs_sections = line.find('Sections...')\n+                if ofs_segment == -1 or ofs_sections == -1:\n+                    raise ValueError('Cannot parse elfread -lW output')\n+            elif count > 1:\n+                segment = int(line[ofs_segment:ofs_sections].strip())\n+                sections = line[ofs_sections:].strip().split()\n+                headers[segment][2].extend(sections)\n+            count += 1\n+    return headers\n+\n+def check_ELF_NX(executable) -> bool:\n+    '''\n+    Check that no sections are writable and executable (including the stack)\n+    '''\n+    have_wx = False\n+    have_gnu_stack = False\n+    for (typ, flags, _) in get_ELF_program_headers(executable):\n+        if typ == 'GNU_STACK':\n+            have_gnu_stack = True\n+        if 'W' in flags and 'E' in flags: # section is both writable and executable\n+            have_wx = True\n+    return have_gnu_stack and not have_wx\n+\n+def check_ELF_RELRO(executable) -> bool:\n+    '''\n+    Check for read-only relocations.\n+    GNU_RELRO program header must exist\n+    Dynamic section must have BIND_NOW flag\n+    '''\n+    have_gnu_relro = False\n+    for (typ, flags, _) in get_ELF_program_headers(executable):\n+        # Note: not checking flags == 'R': here as linkers set the permission differently\n+        # This does not affect security: the permission flags of the GNU_RELRO program\n+        # header are ignored, the PT_LOAD header determines the effective permissions.\n+        # However, the dynamic linker need to write to this area so these are RW.\n+        # Glibc itself takes care of mprotecting this area R after relocations are finished.\n+        # See also https://marc.info/?l=binutils&m=1498883354122353\n+        if typ == 'GNU_RELRO':\n+            have_gnu_relro = True\n+\n+    have_bindnow = False\n+    stdout = run_command([READELF_CMD, '-d', '-W', executable])\n+\n+    for line in stdout.splitlines():\n+        tokens = line.split()\n+        if len(tokens)>1 and tokens[1] == '(BIND_NOW)' or (len(tokens)>2 and tokens[1] == '(FLAGS)' and 'BIND_NOW' in tokens[2:]):\n+            have_bindnow = True\n+    return have_gnu_relro and have_bindnow\n+\n+def check_ELF_Canary(executable) -> bool:\n+    '''\n+    Check for use of stack canary\n+    '''\n+    stdout = run_command([READELF_CMD, '--dyn-syms', '-W', executable])\n+\n+    ok = False\n+    for line in stdout.splitlines():\n+        if '__stack_chk_fail' in line:\n+            ok = True\n+    return ok\n+\n+def check_ELF_separate_code(executable):\n+    '''\n+    Check that sections are appropriately separated in virtual memory,\n+    based on their permissions. This checks for missing -Wl,-z,separate-code\n+    and potentially other problems.\n+    '''\n+    EXPECTED_FLAGS = {\n+        # Read + execute\n+        '.init': 'R E',\n+        '.plt': 'R E',\n+        '.plt.got': 'R E',\n+        '.plt.sec': 'R E',\n+        '.text': 'R E',\n+        '.fini': 'R E',\n+        # Read-only data\n+        '.interp': 'R',\n+        '.note.gnu.property': 'R',\n+        '.note.gnu.build-id': 'R',\n+        '.note.ABI-tag': 'R',\n+        '.gnu.hash': 'R',\n+        '.dynsym': 'R',\n+        '.dynstr': 'R',\n+        '.gnu.version': 'R',\n+        '.gnu.version_r': 'R',\n+        '.rela.dyn': 'R',\n+        '.rela.plt': 'R',\n+        '.rodata': 'R',\n+        '.eh_frame_hdr': 'R',\n+        '.eh_frame': 'R',\n+        '.qtmetadata': 'R',\n+        '.gcc_except_table': 'R',\n+        '.stapsdt.base': 'R',\n+        # Writable data\n+        '.init_array': 'RW',\n+        '.fini_array': 'RW',\n+        '.dynamic': 'RW',\n+        '.got': 'RW',\n+        '.data': 'RW',\n+        '.bss': 'RW',\n+    }\n+    # For all LOAD program headers get mapping to the list of sections,\n+    # and for each section, remember the flags of the associated program header.\n+    flags_per_section = {}\n+    for (typ, flags, sections) in get_ELF_program_headers(executable):\n+        if typ == 'LOAD':\n+            for section in sections:\n+                assert(section not in flags_per_section)\n+                flags_per_section[section] = flags\n+    # Spot-check ELF LOAD program header flags per section\n+    # If these sections exist, check them against the expected R/W/E flags\n+    for (section, flags) in flags_per_section.items():\n+        if section in EXPECTED_FLAGS:\n+            if EXPECTED_FLAGS[section] != flags:\n+                return False\n+    return True\n+\n+def get_PE_dll_characteristics(executable) -> int:\n+    '''Get PE DllCharacteristics bits'''\n+    stdout = run_command([OBJDUMP_CMD, '-x',  executable])\n+\n+    bits = 0\n+    for line in stdout.splitlines():\n+        tokens = line.split()\n+        if len(tokens)>=2 and tokens[0] == 'DllCharacteristics':\n+            bits = int(tokens[1],16)\n+    return bits\n+\n+IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA = 0x0020\n+IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE    = 0x0040\n+IMAGE_DLL_CHARACTERISTICS_NX_COMPAT       = 0x0100\n+\n+def check_PE_DYNAMIC_BASE(executable) -> bool:\n+    '''PIE: DllCharacteristics bit 0x40 signifies dynamicbase (ASLR)'''\n+    bits = get_PE_dll_characteristics(executable)\n+    return (bits & IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE) == IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE\n+\n+# Must support high-entropy 64-bit address space layout randomization\n+# in addition to DYNAMIC_BASE to have secure ASLR.\n+def check_PE_HIGH_ENTROPY_VA(executable) -> bool:\n+    '''PIE: DllCharacteristics bit 0x20 signifies high-entropy ASLR'''\n+    bits = get_PE_dll_characteristics(executable)\n+    return (bits & IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA) == IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA\n+\n+def check_PE_RELOC_SECTION(executable) -> bool:\n+    '''Check for a reloc section. This is required for functional ASLR.'''\n+    stdout = run_command([OBJDUMP_CMD, '-h',  executable])\n+\n+    for line in stdout.splitlines():\n+        if '.reloc' in line:\n+            return True\n+    return False\n+\n+def check_PE_NX(executable) -> bool:\n+    '''NX: DllCharacteristics bit 0x100 signifies nxcompat (DEP)'''\n+    bits = get_PE_dll_characteristics(executable)\n+    return (bits & IMAGE_DLL_CHARACTERISTICS_NX_COMPAT) == IMAGE_DLL_CHARACTERISTICS_NX_COMPAT\n+\n+def get_MACHO_executable_flags(executable) -> List[str]:\n+    stdout = run_command([OTOOL_CMD, '-vh', executable])\n+\n+    flags = []\n+    for line in stdout.splitlines():\n+        tokens = line.split()\n+        # filter first two header lines\n+        if 'magic' in tokens or 'Mach' in tokens:\n+            continue\n+        # filter ncmds and sizeofcmds values\n+        flags += [t for t in tokens if not t.isdigit()]\n+    return flags\n+\n+def check_MACHO_PIE(executable) -> bool:\n+    '''\n+    Check for position independent executable (PIE), allowing for address space randomization.\n+    '''\n+    flags = get_MACHO_executable_flags(executable)\n+    if 'PIE' in flags:\n+        return True\n+    return False\n+\n+def check_MACHO_NOUNDEFS(executable) -> bool:\n+    '''\n+    Check for no undefined references.\n+    '''\n+    flags = get_MACHO_executable_flags(executable)\n+    if 'NOUNDEFS' in flags:\n+        return True\n+    return False\n+\n+def check_MACHO_NX(executable) -> bool:\n+    '''\n+    Check for no stack execution\n+    '''\n+    flags = get_MACHO_executable_flags(executable)\n+    if 'ALLOW_STACK_EXECUTION' in flags:\n+        return False\n+    return True\n+\n+def check_MACHO_LAZY_BINDINGS(executable) -> bool:\n+    '''\n+    Check for no lazy bindings.\n+    We don't use or check for MH_BINDATLOAD. See #18295.\n+    '''\n+    stdout = run_command([OTOOL_CMD, '-l', executable])\n+\n+    for line in stdout.splitlines():\n+        tokens = line.split()\n+        if 'lazy_bind_off' in tokens or 'lazy_bind_size' in tokens:\n+            if tokens[1] != '0':\n+                return False\n+    return True\n+\n+def check_MACHO_Canary(executable) -> bool:\n+    '''\n+    Check for use of stack canary\n+    '''\n+    stdout = run_command([OTOOL_CMD, '-Iv', executable])\n+\n+    ok = False\n+    for line in stdout.splitlines():\n+        if '___stack_chk_fail' in line:\n+            ok = True\n+    return ok\n+\n+CHECKS = {\n+'ELF': [\n+    ('PIE', check_ELF_PIE),\n+    ('NX', check_ELF_NX),\n+    ('RELRO', check_ELF_RELRO),\n+    ('Canary', check_ELF_Canary),\n+    ('separate_code', check_ELF_separate_code),\n+],\n+'PE': [\n+    ('DYNAMIC_BASE', check_PE_DYNAMIC_BASE),\n+    ('HIGH_ENTROPY_VA', check_PE_HIGH_ENTROPY_VA),\n+    ('NX', check_PE_NX),\n+    ('RELOC_SECTION', check_PE_RELOC_SECTION)\n+],\n+'MACHO': [\n+    ('PIE', check_MACHO_PIE),\n+    ('NOUNDEFS', check_MACHO_NOUNDEFS),\n+    ('NX', check_MACHO_NX),\n+    ('LAZY_BINDINGS', check_MACHO_LAZY_BINDINGS),\n+    ('Canary', check_MACHO_Canary)\n+]\n+}\n+\n+def identify_executable(executable) -> Optional[str]:\n+    with open(filename, 'rb') as f:\n+        magic = f.read(4)\n+    if magic.startswith(b'MZ'):\n+        return 'PE'\n+    elif magic.startswith(b'\\x7fELF'):\n+        return 'ELF'\n+    elif magic.startswith(b'\\xcf\\xfa'):\n+        return 'MACHO'\n+    return None\n+\n+if __name__ == '__main__':\n+    retval = 0\n+    for filename in sys.argv[1:]:\n+        try:\n+            etype = identify_executable(filename)\n+            if etype is None:\n+                print('%s: unknown format' % filename)\n+                retval = 1\n+                continue\n+\n+            failed = []\n+            for (name, func) in CHECKS[etype]:\n+                if not func(filename):\n+                    failed.append(name)\n+            if failed:\n+                print('%s: failed %s' % (filename, ' '.join(failed)))\n+                retval = 1\n+        except IOError:\n+            print('%s: cannot open' % filename)\n+            retval = 1\n+    sys.exit(retval)\n+"
      },
      {
        "sha": "92b72b1446cf6bacf92723b6a8da8786c0802557",
        "filename": "contrib/devtools/split-debug.sh.in",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/split-debug.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/split-debug.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/split-debug.sh.in?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,10 @@\n+#!/bin/sh\n+set -e\n+if [ $# -ne 3 ];\n+    then echo \"usage: $0 <input> <stripped-binary> <debug-binary>\"\n+fi\n+\n+@OBJCOPY@ --enable-deterministic-archives -p --only-keep-debug $1 $3\n+@OBJCOPY@ --enable-deterministic-archives -p --strip-debug $1 $2\n+@STRIP@ --enable-deterministic-archives -p -s $2\n+@OBJCOPY@ --enable-deterministic-archives -p --add-gnu-debuglink=$3 $2"
      },
      {
        "sha": "6949cb7ced89eda0be2b24dc4de9123ae7403fb1",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "added",
        "additions": 306,
        "deletions": 0,
        "changes": 306,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,306 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014 Wladimir J. van der Laan\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+A script to check that the executables produced by gitian only contain\n+certain symbols and are only linked against allowed libraries.\n+\n+Example usage:\n+\n+    find ../gitian-builder/build -type f -executable | xargs python3 contrib/devtools/symbol-check.py\n+'''\n+import subprocess\n+import re\n+import sys\n+import os\n+from typing import List, Optional, Tuple\n+\n+# Debian 8 (Jessie) EOL: 2020. https://wiki.debian.org/DebianReleases#Production_Releases\n+#\n+# - g++ version 4.9.2 (https://packages.debian.org/search?suite=jessie&arch=any&searchon=names&keywords=g%2B%2B)\n+# - libc version 2.19 (https://packages.debian.org/search?suite=jessie&arch=any&searchon=names&keywords=libc6)\n+#\n+# Ubuntu 16.04 (Xenial) EOL: 2024. https://wiki.ubuntu.com/Releases\n+#\n+# - g++ version 5.3.1 (https://packages.ubuntu.com/search?keywords=g%2B%2B&searchon=names&suite=xenial&section=all)\n+# - libc version 2.23.0 (https://packages.ubuntu.com/search?keywords=libc6&searchon=names&suite=xenial&section=all)\n+#\n+# CentOS 7 EOL: 2024. https://wiki.centos.org/FAQ/General\n+#\n+# - g++ version 4.8.5 (http://mirror.centos.org/centos/7/os/x86_64/Packages/)\n+# - libc version 2.17 (http://mirror.centos.org/centos/7/os/x86_64/Packages/)\n+#\n+# Taking the minimum of these as our target.\n+#\n+# According to GNU ABI document (https://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n+#   GCC 4.8.5: GCC_4.8.0\n+#   (glibc)    GLIBC_2_17\n+#\n+MAX_VERSIONS = {\n+'GCC':       (4,8,0),\n+'GLIBC':     (2,17),\n+'LIBATOMIC': (1,0)\n+}\n+# See here for a description of _IO_stdin_used:\n+# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=634261#109\n+\n+# Ignore symbols that are exported as part of every executable\n+IGNORE_EXPORTS = {\n+'_edata', '_end', '__end__', '_init', '__bss_start', '__bss_start__', '_bss_end__', '__bss_end__', '_fini', '_IO_stdin_used', 'stdin', 'stdout', 'stderr',\n+'environ', '_environ', '__environ',\n+}\n+READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n+CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n+OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n+OTOOL_CMD = os.getenv('OTOOL', '/usr/bin/otool')\n+\n+# Allowed NEEDED libraries\n+ELF_ALLOWED_LIBRARIES = {\n+# bitcoind and bitcoin-qt\n+'libgcc_s.so.1', # GCC base support\n+'libc.so.6', # C library\n+'libpthread.so.0', # threading\n+'libm.so.6', # math library\n+'librt.so.1', # real-time (clock)\n+'libatomic.so.1',\n+'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n+'ld-linux.so.2', # 32-bit dynamic linker\n+'ld-linux-aarch64.so.1', # 64-bit ARM dynamic linker\n+'ld-linux-armhf.so.3', # 32-bit ARM dynamic linker\n+'ld-linux-riscv64-lp64d.so.1', # 64-bit RISC-V dynamic linker\n+# bitcoin-qt only\n+'libxcb.so.1', # part of X11\n+'libfontconfig.so.1', # font support\n+'libfreetype.so.6', # font parsing\n+'libdl.so.2' # programming interface to dynamic linker\n+}\n+ARCH_MIN_GLIBC_VER = {\n+'80386':  (2,1),\n+'X86-64': (2,2,5),\n+'ARM':    (2,4),\n+'AArch64':(2,17),\n+'RISC-V': (2,27)\n+}\n+\n+MACHO_ALLOWED_LIBRARIES = {\n+# bitcoind and bitcoin-qt\n+'libc++.1.dylib', # C++ Standard Library\n+'libSystem.B.dylib', # libc, libm, libpthread, libinfo\n+# bitcoin-qt only\n+'AppKit', # user interface\n+'ApplicationServices', # common application tasks.\n+'Carbon', # deprecated c back-compat API\n+'CoreFoundation', # low level func, data types\n+'CoreGraphics', # 2D rendering\n+'CoreServices', # operating system services\n+'CoreText', # interface for laying out text and handling fonts.\n+'Foundation', # base layer functionality for apps/frameworks\n+'ImageIO', # read and write image file formats.\n+'IOKit', # user-space access to hardware devices and drivers.\n+'libobjc.A.dylib', # Objective-C runtime library\n+}\n+\n+PE_ALLOWED_LIBRARIES = {\n+'ADVAPI32.dll', # security & registry\n+'IPHLPAPI.DLL', # IP helper API\n+'KERNEL32.dll', # win32 base APIs\n+'msvcrt.dll', # C standard library for MSVC\n+'SHELL32.dll', # shell API\n+'USER32.dll', # user interface\n+'WS2_32.dll', # sockets\n+# bitcoin-qt only\n+'dwmapi.dll', # desktop window manager\n+'GDI32.dll', # graphics device interface\n+'IMM32.dll', # input method editor\n+'ole32.dll', # component object model\n+'OLEAUT32.dll', # OLE Automation API\n+'SHLWAPI.dll', # light weight shell API\n+'UxTheme.dll',\n+'VERSION.dll', # version checking\n+'WINMM.dll', # WinMM audio API\n+}\n+\n+class CPPFilt(object):\n+    '''\n+    Demangle C++ symbol names.\n+\n+    Use a pipe to the 'c++filt' command.\n+    '''\n+    def __init__(self):\n+        self.proc = subprocess.Popen(CPPFILT_CMD, stdin=subprocess.PIPE, stdout=subprocess.PIPE, universal_newlines=True)\n+\n+    def __call__(self, mangled):\n+        self.proc.stdin.write(mangled + '\\n')\n+        self.proc.stdin.flush()\n+        return self.proc.stdout.readline().rstrip()\n+\n+    def close(self):\n+        self.proc.stdin.close()\n+        self.proc.stdout.close()\n+        self.proc.wait()\n+\n+def read_symbols(executable, imports=True) -> List[Tuple[str, str, str]]:\n+    '''\n+    Parse an ELF executable and return a list of (symbol,version, arch) tuples\n+    for dynamic, imported symbols.\n+    '''\n+    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', '-h', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Could not read symbols for {}: {}'.format(executable, stderr.strip()))\n+    syms = []\n+    for line in stdout.splitlines():\n+        line = line.split()\n+        if 'Machine:' in line:\n+            arch = line[-1]\n+        if len(line)>7 and re.match('[0-9]+:$', line[0]):\n+            (sym, _, version) = line[7].partition('@')\n+            is_import = line[6] == 'UND'\n+            if version.startswith('@'):\n+                version = version[1:]\n+            if is_import == imports:\n+                syms.append((sym, version, arch))\n+    return syms\n+\n+def check_version(max_versions, version, arch) -> bool:\n+    if '_' in version:\n+        (lib, _, ver) = version.rpartition('_')\n+    else:\n+        lib = version\n+        ver = '0'\n+    ver = tuple([int(x) for x in ver.split('.')])\n+    if not lib in max_versions:\n+        return False\n+    return ver <= max_versions[lib] or lib == 'GLIBC' and ver <= ARCH_MIN_GLIBC_VER[arch]\n+\n+def elf_read_libraries(filename) -> List[str]:\n+    p = subprocess.Popen([READELF_CMD, '-d', '-W', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    libraries = []\n+    for line in stdout.splitlines():\n+        tokens = line.split()\n+        if len(tokens)>2 and tokens[1] == '(NEEDED)':\n+            match = re.match(r'^Shared library: \\[(.*)\\]$', ' '.join(tokens[2:]))\n+            if match:\n+                libraries.append(match.group(1))\n+            else:\n+                raise ValueError('Unparseable (NEEDED) specification')\n+    return libraries\n+\n+def check_imported_symbols(filename) -> bool:\n+    cppfilt = CPPFilt()\n+    ok = True\n+    for sym, version, arch in read_symbols(filename, True):\n+        if version and not check_version(MAX_VERSIONS, version, arch):\n+            print('{}: symbol {} from unsupported version {}'.format(filename, cppfilt(sym), version))\n+            ok = False\n+    return ok\n+\n+def check_exported_symbols(filename) -> bool:\n+    cppfilt = CPPFilt()\n+    ok = True\n+    for sym,version,arch in read_symbols(filename, False):\n+        if arch == 'RISC-V' or sym in IGNORE_EXPORTS:\n+            continue\n+        print('{}: export of symbol {} not allowed'.format(filename, cppfilt(sym)))\n+        ok = False\n+    return ok\n+\n+def check_ELF_libraries(filename) -> bool:\n+    ok = True\n+    for library_name in elf_read_libraries(filename):\n+        if library_name not in ELF_ALLOWED_LIBRARIES:\n+            print('{}: NEEDED library {} is not allowed'.format(filename, library_name))\n+            ok = False\n+    return ok\n+\n+def macho_read_libraries(filename) -> List[str]:\n+    p = subprocess.Popen([OTOOL_CMD, '-L', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    libraries = []\n+    for line in stdout.splitlines():\n+        tokens = line.split()\n+        if len(tokens) == 1: # skip executable name\n+            continue\n+        libraries.append(tokens[0].split('/')[-1])\n+    return libraries\n+\n+def check_MACHO_libraries(filename) -> bool:\n+    ok = True\n+    for dylib in macho_read_libraries(filename):\n+        if dylib not in MACHO_ALLOWED_LIBRARIES:\n+            print('{} is not in ALLOWED_LIBRARIES!'.format(dylib))\n+            ok = False\n+    return ok\n+\n+def pe_read_libraries(filename) -> List[str]:\n+    p = subprocess.Popen([OBJDUMP_CMD, '-x', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    libraries = []\n+    for line in stdout.splitlines():\n+        if 'DLL Name:' in line:\n+            tokens = line.split(': ')\n+            libraries.append(tokens[1])\n+    return libraries\n+\n+def check_PE_libraries(filename) -> bool:\n+    ok = True\n+    for dylib in pe_read_libraries(filename):\n+        if dylib not in PE_ALLOWED_LIBRARIES:\n+            print('{} is not in ALLOWED_LIBRARIES!'.format(dylib))\n+            ok = False\n+    return ok\n+\n+CHECKS = {\n+'ELF': [\n+    ('IMPORTED_SYMBOLS', check_imported_symbols),\n+    ('EXPORTED_SYMBOLS', check_exported_symbols),\n+    ('LIBRARY_DEPENDENCIES', check_ELF_libraries)\n+],\n+'MACHO': [\n+    ('DYNAMIC_LIBRARIES', check_MACHO_libraries)\n+],\n+'PE' : [\n+    ('DYNAMIC_LIBRARIES', check_PE_libraries)\n+]\n+}\n+\n+def identify_executable(executable) -> Optional[str]:\n+    with open(filename, 'rb') as f:\n+        magic = f.read(4)\n+    if magic.startswith(b'MZ'):\n+        return 'PE'\n+    elif magic.startswith(b'\\x7fELF'):\n+        return 'ELF'\n+    elif magic.startswith(b'\\xcf\\xfa'):\n+        return 'MACHO'\n+    return None\n+\n+if __name__ == '__main__':\n+    retval = 0\n+    for filename in sys.argv[1:]:\n+        try:\n+            etype = identify_executable(filename)\n+            if etype is None:\n+                print('{}: unknown format'.format(filename))\n+                retval = 1\n+                continue\n+\n+            failed = []\n+            for (name, func) in CHECKS[etype]:\n+                if not func(filename):\n+                    failed.append(name)\n+            if failed:\n+                print('{}: failed {}'.format(filename, ' '.join(failed)))\n+                retval = 1\n+        except IOError:\n+            print('{}: cannot open'.format(filename))\n+            retval = 1\n+    sys.exit(retval)"
      },
      {
        "sha": "ec2d8866534214c86ebbf112232984ea55e85b0b",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "added",
        "additions": 85,
        "deletions": 0,
        "changes": 85,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,85 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+Test script for security-check.py\n+'''\n+import subprocess\n+import unittest\n+\n+def write_testcode(filename):\n+    with open(filename, 'w', encoding=\"utf8\") as f:\n+        f.write('''\n+    #include <stdio.h>\n+    int main()\n+    {\n+        printf(\"the quick brown fox jumps over the lazy god\\\\n\");\n+        return 0;\n+    }\n+    ''')\n+\n+def call_security_check(cc, source, executable, options):\n+    subprocess.run([cc,source,'-o',executable] + options, check=True)\n+    p = subprocess.run(['./contrib/devtools/security-check.py',executable], stdout=subprocess.PIPE, universal_newlines=True)\n+    return (p.returncode, p.stdout.rstrip())\n+\n+class TestSecurityChecks(unittest.TestCase):\n+    def test_ELF(self):\n+        source = 'test1.c'\n+        executable = 'test1'\n+        cc = 'gcc'\n+        write_testcode(source)\n+\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-zexecstack','-fno-stack-protector','-Wl,-znorelro','-no-pie','-fno-PIE', '-Wl,-z,separate-code']),\n+                (1, executable+': failed PIE NX RELRO Canary'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fno-stack-protector','-Wl,-znorelro','-no-pie','-fno-PIE', '-Wl,-z,separate-code']),\n+                (1, executable+': failed PIE RELRO Canary'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-no-pie','-fno-PIE', '-Wl,-z,separate-code']),\n+                (1, executable+': failed PIE RELRO'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-pie','-fPIE', '-Wl,-z,separate-code']),\n+                (1, executable+': failed RELRO'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE', '-Wl,-z,noseparate-code']),\n+                (1, executable+': failed separate_code'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE', '-Wl,-z,separate-code']),\n+                (0, ''))\n+\n+    def test_PE(self):\n+        source = 'test1.c'\n+        executable = 'test1.exe'\n+        cc = 'x86_64-w64-mingw32-gcc'\n+        write_testcode(source)\n+\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--no-nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n+            (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA NX RELOC_SECTION'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n+            (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA RELOC_SECTION'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n+            (1, executable+': failed HIGH_ENTROPY_VA RELOC_SECTION'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--high-entropy-va','-no-pie','-fno-PIE']),\n+            (1, executable+': failed RELOC_SECTION'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--high-entropy-va','-pie','-fPIE']),\n+            (0, ''))\n+\n+    def test_MACHO(self):\n+        source = 'test1.c'\n+        executable = 'test1'\n+        cc = 'clang'\n+        write_testcode(source)\n+\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-flat_namespace','-Wl,-allow_stack_execute','-fno-stack-protector']),\n+            (1, executable+': failed PIE NOUNDEFS NX LAZY_BINDINGS Canary'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-flat_namespace','-Wl,-allow_stack_execute','-fstack-protector-all']),\n+            (1, executable+': failed PIE NOUNDEFS NX LAZY_BINDINGS'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-flat_namespace','-fstack-protector-all']),\n+            (1, executable+': failed PIE NOUNDEFS LAZY_BINDINGS'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-fstack-protector-all']),\n+            (1, executable+': failed PIE LAZY_BINDINGS'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-bind_at_load','-fstack-protector-all']),\n+            (1, executable+': failed PIE'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-pie','-Wl,-bind_at_load','-fstack-protector-all']),\n+            (0, ''))\n+\n+if __name__ == '__main__':\n+    unittest.main()\n+"
      },
      {
        "sha": "8501c72f04a552bf7cb699890e92c874be43de05",
        "filename": "contrib/devtools/test_deterministic_coverage.sh",
        "status": "added",
        "additions": 151,
        "deletions": 0,
        "changes": 151,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/test_deterministic_coverage.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/test_deterministic_coverage.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test_deterministic_coverage.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,151 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# Test for deterministic coverage across unit test runs.\n+\n+export LC_ALL=C\n+\n+# Use GCOV_EXECUTABLE=\"gcov\" if compiling with gcc.\n+# Use GCOV_EXECUTABLE=\"llvm-cov gcov\" if compiling with clang.\n+GCOV_EXECUTABLE=\"gcov\"\n+\n+# Disable tests known to cause non-deterministic behaviour and document the source or point of non-determinism.\n+NON_DETERMINISTIC_TESTS=(\n+    \"blockfilter_index_tests/blockfilter_index_initial_sync\"  # src/checkqueue.h: In CCheckQueue::Loop(): while (queue.empty()) { ... }\n+    \"coinselector_tests/knapsack_solver_test\"                 # coinselector_tests.cpp: if (equal_sets(setCoinsRet, setCoinsRet2))\n+    \"fs_tests/fsbridge_fstream\"                               # deterministic test failure?\n+    \"miner_tests/CreateNewBlock_validity\"                     # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"scheduler_tests/manythreads\"                             # scheduler.cpp: CScheduler::serviceQueue()\n+    \"scheduler_tests/singlethreadedscheduler_ordered\"         # scheduler.cpp: CScheduler::serviceQueue()\n+    \"txvalidationcache_tests/checkinputs_test\"                # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"txvalidationcache_tests/tx_mempool_block_doublespend\"    # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"txindex_tests/txindex_initial_sync\"                      # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"txvalidation_tests/tx_mempool_reject_coinbase\"           # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"validation_block_tests/processnewblock_signals_ordering\" # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/coin_mark_dirty_immature_credit\"            # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/dummy_input_size_test\"                      # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/importmulti_rescan\"                         # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/importwallet_rescan\"                        # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/ListCoins\"                                  # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/scan_for_wallet_transactions\"               # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/wallet_disableprivkeys\"                     # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+)\n+\n+TEST_BITCOIN_BINARY=\"src/test/test_bitcoin\"\n+\n+print_usage() {\n+    echo \"Usage: $0 [custom test filter (default: all but known non-deterministic tests)] [number of test runs (default: 2)]\"\n+}\n+\n+N_TEST_RUNS=2\n+BOOST_TEST_RUN_FILTERS=\"\"\n+if [[ $# != 0 ]]; then\n+    if [[ $1 == \"--help\" ]]; then\n+        print_usage\n+        exit\n+    fi\n+    PARSED_ARGUMENTS=0\n+    if [[ $1 =~ [a-z] ]]; then\n+        BOOST_TEST_RUN_FILTERS=$1\n+        PARSED_ARGUMENTS=$((PARSED_ARGUMENTS + 1))\n+        shift\n+    fi\n+    if [[ $1 =~ ^[0-9]+$ ]]; then\n+        N_TEST_RUNS=$1\n+        PARSED_ARGUMENTS=$((PARSED_ARGUMENTS + 1))\n+        shift\n+    fi\n+    if [[ ${PARSED_ARGUMENTS} == 0 || $# -gt 2 || ${N_TEST_RUNS} -lt 2 ]]; then\n+        print_usage\n+        exit\n+    fi\n+fi\n+if [[ ${BOOST_TEST_RUN_FILTERS} == \"\" ]]; then\n+    BOOST_TEST_RUN_FILTERS=\"$(IFS=\":\"; echo \"!${NON_DETERMINISTIC_TESTS[*]}\" | sed 's/:/:!/g')\"\n+else\n+    echo \"Using Boost test filter: ${BOOST_TEST_RUN_FILTERS}\"\n+    echo\n+fi\n+\n+if ! command -v gcov > /dev/null; then\n+    echo \"Error: gcov not installed. Exiting.\"\n+    exit 1\n+fi\n+\n+if ! command -v gcovr > /dev/null; then\n+    echo \"Error: gcovr not installed. Exiting.\"\n+    exit 1\n+fi\n+\n+if [[ ! -e ${TEST_BITCOIN_BINARY} ]]; then\n+    echo \"Error: Executable ${TEST_BITCOIN_BINARY} not found. Run \\\"./configure --enable-lcov\\\" and compile.\"\n+    exit 1\n+fi\n+\n+get_file_suffix_count() {\n+    find src/ -type f -name \"*.$1\" | wc -l\n+}\n+\n+if [[ $(get_file_suffix_count gcno) == 0 ]]; then\n+    echo \"Error: Could not find any *.gcno files. The *.gcno files are generated by the compiler. Run \\\"./configure --enable-lcov\\\" and re-compile.\"\n+    exit 1\n+fi\n+\n+get_covr_filename() {\n+    echo \"gcovr.run-$1.txt\"\n+}\n+\n+TEST_RUN_ID=0\n+while [[ ${TEST_RUN_ID} -lt ${N_TEST_RUNS} ]]; do\n+    TEST_RUN_ID=$((TEST_RUN_ID + 1))\n+    echo \"[$(date +\"%Y-%m-%d %H:%M:%S\")] Measuring coverage, run #${TEST_RUN_ID} of ${N_TEST_RUNS}\"\n+    find src/ -type f -name \"*.gcda\" -exec rm {} \\;\n+    if [[ $(get_file_suffix_count gcda) != 0 ]]; then\n+        echo \"Error: Stale *.gcda files found. Exiting.\"\n+        exit 1\n+    fi\n+    TEST_OUTPUT_TEMPFILE=$(mktemp)\n+    if ! BOOST_TEST_RUN_FILTERS=\"${BOOST_TEST_RUN_FILTERS}\" ${TEST_BITCOIN_BINARY} > \"${TEST_OUTPUT_TEMPFILE}\" 2>&1; then\n+        cat \"${TEST_OUTPUT_TEMPFILE}\"\n+        rm \"${TEST_OUTPUT_TEMPFILE}\"\n+        exit 1\n+    fi\n+    rm \"${TEST_OUTPUT_TEMPFILE}\"\n+    if [[ $(get_file_suffix_count gcda) == 0 ]]; then\n+        echo \"Error: Running the test suite did not create any *.gcda files. The gcda files are generated when the instrumented test programs are executed. Run \\\"./configure --enable-lcov\\\" and re-compile.\"\n+        exit 1\n+    fi\n+    GCOVR_TEMPFILE=$(mktemp)\n+    if ! gcovr --gcov-executable \"${GCOV_EXECUTABLE}\" -r src/ > \"${GCOVR_TEMPFILE}\"; then\n+        echo \"Error: gcovr failed. Output written to ${GCOVR_TEMPFILE}. Exiting.\"\n+        exit 1\n+    fi\n+    GCOVR_FILENAME=$(get_covr_filename ${TEST_RUN_ID})\n+    mv \"${GCOVR_TEMPFILE}\" \"${GCOVR_FILENAME}\"\n+    if grep -E \"^TOTAL *0 *0 \" \"${GCOVR_FILENAME}\"; then\n+        echo \"Error: Spurious gcovr output. Make sure the correct GCOV_EXECUTABLE variable is set in $0 (\\\"gcov\\\" for gcc, \\\"llvm-cov gcov\\\" for clang).\"\n+        exit 1\n+    fi\n+    if [[ ${TEST_RUN_ID} != 1 ]]; then\n+        COVERAGE_DIFF=$(diff -u \"$(get_covr_filename 1)\" \"${GCOVR_FILENAME}\")\n+        if [[ ${COVERAGE_DIFF} != \"\" ]]; then\n+            echo\n+            echo \"The line coverage is non-deterministic between runs. Exiting.\"\n+            echo\n+            echo \"The test suite must be deterministic in the sense that the set of lines executed at least\"\n+            echo \"once must be identical between runs. This is a necessary condition for meaningful\"\n+            echo \"coverage measuring.\"\n+            echo\n+            echo \"${COVERAGE_DIFF}\"\n+            exit 1\n+        fi\n+        rm \"${GCOVR_FILENAME}\"\n+    fi\n+done\n+\n+echo\n+echo \"Coverage test passed: Deterministic coverage across ${N_TEST_RUNS} runs.\"\n+exit"
      },
      {
        "sha": "dee25ff67b61e3b798cf56f53657536e496cfef8",
        "filename": "contrib/devtools/utxo_snapshot.sh",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/utxo_snapshot.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/devtools/utxo_snapshot.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/utxo_snapshot.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,44 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+export LC_ALL=C\n+\n+set -ueo pipefail\n+\n+if (( $# < 3 )); then\n+  echo 'Usage: utxo_snapshot.sh <generate-at-height> <snapshot-out-path> <bitcoin-cli-call ...>'\n+  echo\n+  echo \"  if <snapshot-out-path> is '-', don't produce a snapshot file but instead print the \"\n+  echo \"  expected assumeutxo hash\"\n+  echo\n+  echo 'Examples:'\n+  echo\n+  echo \"  ./contrib/devtools/utxo_snapshot.sh 570000 utxo.dat ./src/bitcoin-cli -datadir=\\$(pwd)/testdata\"\n+  echo '  ./contrib/devtools/utxo_snapshot.sh 570000 - ./src/bitcoin-cli'\n+  exit 1\n+fi\n+\n+GENERATE_AT_HEIGHT=\"${1}\"; shift;\n+OUTPUT_PATH=\"${1}\"; shift;\n+# Most of the calls we make take a while to run, so pad with a lengthy timeout.\n+BITCOIN_CLI_CALL=\"${*} -rpcclienttimeout=9999999\"\n+\n+# Block we'll invalidate/reconsider to rewind/fast-forward the chain.\n+PIVOT_BLOCKHASH=$($BITCOIN_CLI_CALL getblockhash $(( GENERATE_AT_HEIGHT + 1 )) )\n+\n+(>&2 echo \"Rewinding chain back to height ${GENERATE_AT_HEIGHT} (by invalidating ${PIVOT_BLOCKHASH}); this may take a while\")\n+${BITCOIN_CLI_CALL} invalidateblock \"${PIVOT_BLOCKHASH}\"\n+\n+if [[ \"${OUTPUT_PATH}\" = \"-\" ]]; then\n+  (>&2 echo \"Generating txoutset info...\")\n+  ${BITCOIN_CLI_CALL} gettxoutsetinfo | grep hash_serialized_2 | sed 's/^.*: \"\\(.\\+\\)\\+\",/\\1/g'\n+else\n+  (>&2 echo \"Generating UTXO snapshot...\")\n+  ${BITCOIN_CLI_CALL} dumptxoutset \"${OUTPUT_PATH}\"\n+fi\n+\n+(>&2 echo \"Restoring chain to original height; this may take a while\")\n+${BITCOIN_CLI_CALL} reconsiderblock \"${PIVOT_BLOCKHASH}\""
      },
      {
        "sha": "e005cb96da62302ba6f099dcad1bcd13ee19e814",
        "filename": "contrib/filter-lcov.py",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/filter-lcov.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/filter-lcov.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/filter-lcov.py?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,28 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import argparse\n+\n+parser = argparse.ArgumentParser(description='Remove the coverage data from a tracefile for all files matching the pattern.')\n+parser.add_argument('--pattern', '-p', action='append', help='the pattern of files to remove', required=True)\n+parser.add_argument('tracefile', help='the tracefile to remove the coverage data from')\n+parser.add_argument('outfile', help='filename for the output to be written to')\n+\n+args = parser.parse_args()\n+tracefile = args.tracefile\n+pattern = args.pattern\n+outfile = args.outfile\n+\n+in_remove = False\n+with open(tracefile, 'r', encoding=\"utf8\") as f:\n+    with open(outfile, 'w', encoding=\"utf8\") as wf:\n+        for line in f:\n+            for p in pattern:\n+                if line.startswith(\"SF:\") and p in line:\n+                    in_remove = True\n+            if not in_remove:\n+                wf.write(line)\n+            if line == 'end_of_record\\n':\n+                in_remove = False"
      },
      {
        "sha": "d498c9e2c821ededa6eff14b9b8b78df07f270e5",
        "filename": "contrib/gitian-build.py",
        "status": "added",
        "additions": 262,
        "deletions": 0,
        "changes": 262,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/gitian-build.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/gitian-build.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.py?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,262 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import argparse\n+import os\n+import subprocess\n+import sys\n+\n+def setup():\n+    global args, workdir\n+    programs = ['ruby', 'git', 'make', 'wget', 'curl']\n+    if args.kvm:\n+        programs += ['apt-cacher-ng', 'python-vm-builder', 'qemu-kvm', 'qemu-utils']\n+    elif args.docker and not os.path.isfile('/lib/systemd/system/docker.service'):\n+        dockers = ['docker.io', 'docker-ce']\n+        for i in dockers:\n+            return_code = subprocess.call(['sudo', 'apt-get', 'install', '-qq', i])\n+            if return_code == 0:\n+                break\n+        if return_code != 0:\n+            print('Cannot find any way to install Docker.', file=sys.stderr)\n+            sys.exit(1)\n+    else:\n+        programs += ['apt-cacher-ng', 'lxc', 'debootstrap']\n+    subprocess.check_call(['sudo', 'apt-get', 'install', '-qq'] + programs)\n+    if not os.path.isdir('gitian.sigs'):\n+        subprocess.check_call(['git', 'clone', 'https://github.com/bitcoin-core/gitian.sigs.git'])\n+    if not os.path.isdir('bitcoin-detached-sigs'):\n+        subprocess.check_call(['git', 'clone', 'https://github.com/bitcoin-core/bitcoin-detached-sigs.git'])\n+    if not os.path.isdir('gitian-builder'):\n+        subprocess.check_call(['git', 'clone', 'https://github.com/devrandom/gitian-builder.git'])\n+    if not os.path.isdir('bitcoin'):\n+        subprocess.check_call(['git', 'clone', 'https://github.com/bitcoin/bitcoin.git'])\n+    os.chdir('gitian-builder')\n+    make_image_prog = ['bin/make-base-vm', '--suite', 'bionic', '--arch', 'amd64']\n+    if args.docker:\n+        make_image_prog += ['--docker']\n+    elif not args.kvm:\n+        make_image_prog += ['--lxc']\n+    subprocess.check_call(make_image_prog)\n+    os.chdir(workdir)\n+    if args.is_bionic and not args.kvm and not args.docker:\n+        subprocess.check_call(['sudo', 'sed', '-i', 's/lxcbr0/br0/', '/etc/default/lxc-net'])\n+        print('Reboot is required')\n+        sys.exit(0)\n+\n+def build():\n+    global args, workdir\n+\n+    os.makedirs('bitcoin-binaries/' + args.version, exist_ok=True)\n+    print('\\nBuilding Dependencies\\n')\n+    os.chdir('gitian-builder')\n+    os.makedirs('inputs', exist_ok=True)\n+\n+    subprocess.check_call(['wget', '-O', 'inputs/osslsigncode-2.0.tar.gz', 'https://github.com/mtrojnar/osslsigncode/archive/2.0.tar.gz'])\n+    subprocess.check_call([\"echo '5a60e0a4b3e0b4d655317b2f12a810211c50242138322b16e7e01c6fbb89d92f inputs/osslsigncode-2.0.tar.gz' | sha256sum -c\"], shell=True)\n+    subprocess.check_call(['make', '-C', '../bitcoin/depends', 'download', 'SOURCES_PATH=' + os.getcwd() + '/cache/common'])\n+\n+    if args.linux:\n+        print('\\nCompiling ' + args.version + ' Linux')\n+        subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'bitcoin='+args.commit, '--url', 'bitcoin='+args.url, '../bitcoin/contrib/gitian-descriptors/gitian-linux.yml'])\n+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-linux', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-linux.yml'])\n+        subprocess.check_call('mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/'+args.version, shell=True)\n+\n+    if args.windows:\n+        print('\\nCompiling ' + args.version + ' Windows')\n+        subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'bitcoin='+args.commit, '--url', 'bitcoin='+args.url, '../bitcoin/contrib/gitian-descriptors/gitian-win.yml'])\n+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-win-unsigned', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-win.yml'])\n+        subprocess.check_call('mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/', shell=True)\n+        subprocess.check_call('mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/'+args.version, shell=True)\n+\n+    if args.macos:\n+        print('\\nCompiling ' + args.version + ' MacOS')\n+        subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'bitcoin='+args.commit, '--url', 'bitcoin='+args.url, '../bitcoin/contrib/gitian-descriptors/gitian-osx.yml'])\n+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-osx-unsigned', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-osx.yml'])\n+        subprocess.check_call('mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/', shell=True)\n+        subprocess.check_call('mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/'+args.version, shell=True)\n+\n+    os.chdir(workdir)\n+\n+    if args.commit_files:\n+        print('\\nCommitting '+args.version+' Unsigned Sigs\\n')\n+        os.chdir('gitian.sigs')\n+        subprocess.check_call(['git', 'add', args.version+'-linux/'+args.signer])\n+        subprocess.check_call(['git', 'add', args.version+'-win-unsigned/'+args.signer])\n+        subprocess.check_call(['git', 'add', args.version+'-osx-unsigned/'+args.signer])\n+        subprocess.check_call(['git', 'commit', '-m', 'Add '+args.version+' unsigned sigs for '+args.signer])\n+        os.chdir(workdir)\n+\n+def sign():\n+    global args, workdir\n+    os.chdir('gitian-builder')\n+\n+    if args.windows:\n+        print('\\nSigning ' + args.version + ' Windows')\n+        subprocess.check_call('cp inputs/bitcoin-' + args.version + '-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz', shell=True)\n+        subprocess.check_call(['bin/gbuild', '--skip-image', '--upgrade', '--commit', 'signature='+args.commit, '../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml'])\n+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-win-signed', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml'])\n+        subprocess.check_call('mv build/out/bitcoin-*win64-setup.exe ../bitcoin-binaries/'+args.version, shell=True)\n+\n+    if args.macos:\n+        print('\\nSigning ' + args.version + ' MacOS')\n+        subprocess.check_call('cp inputs/bitcoin-' + args.version + '-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz', shell=True)\n+        subprocess.check_call(['bin/gbuild', '--skip-image', '--upgrade', '--commit', 'signature='+args.commit, '../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml'])\n+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-osx-signed', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml'])\n+        subprocess.check_call('mv build/out/bitcoin-osx-signed.dmg ../bitcoin-binaries/'+args.version+'/bitcoin-'+args.version+'-osx.dmg', shell=True)\n+\n+    os.chdir(workdir)\n+\n+    if args.commit_files:\n+        print('\\nCommitting '+args.version+' Signed Sigs\\n')\n+        os.chdir('gitian.sigs')\n+        subprocess.check_call(['git', 'add', args.version+'-win-signed/'+args.signer])\n+        subprocess.check_call(['git', 'add', args.version+'-osx-signed/'+args.signer])\n+        subprocess.check_call(['git', 'commit', '-a', '-m', 'Add '+args.version+' signed binary sigs for '+args.signer])\n+        os.chdir(workdir)\n+\n+def verify():\n+    global args, workdir\n+    rc = 0\n+    os.chdir('gitian-builder')\n+\n+    print('\\nVerifying v'+args.version+' Linux\\n')\n+    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-linux', '../bitcoin/contrib/gitian-descriptors/gitian-linux.yml']):\n+        print('Verifying v'+args.version+' Linux FAILED\\n')\n+        rc = 1\n+\n+    print('\\nVerifying v'+args.version+' Windows\\n')\n+    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-win-unsigned', '../bitcoin/contrib/gitian-descriptors/gitian-win.yml']):\n+        print('Verifying v'+args.version+' Windows FAILED\\n')\n+        rc = 1\n+\n+    print('\\nVerifying v'+args.version+' MacOS\\n')\n+    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-osx-unsigned', '../bitcoin/contrib/gitian-descriptors/gitian-osx.yml']):\n+        print('Verifying v'+args.version+' MacOS FAILED\\n')\n+        rc = 1\n+\n+    print('\\nVerifying v'+args.version+' Signed Windows\\n')\n+    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-win-signed', '../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml']):\n+        print('Verifying v'+args.version+' Signed Windows FAILED\\n')\n+        rc = 1\n+\n+    print('\\nVerifying v'+args.version+' Signed MacOS\\n')\n+    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-osx-signed', '../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml']):\n+        print('Verifying v'+args.version+' Signed MacOS FAILED\\n')\n+        rc = 1\n+\n+    os.chdir(workdir)\n+    return rc\n+\n+def main():\n+    global args, workdir\n+\n+    parser = argparse.ArgumentParser(description='Script for running full Gitian builds.')\n+    parser.add_argument('-c', '--commit', action='store_true', dest='commit', help='Indicate that the version argument is for a commit or branch')\n+    parser.add_argument('-p', '--pull', action='store_true', dest='pull', help='Indicate that the version argument is the number of a github repository pull request')\n+    parser.add_argument('-u', '--url', dest='url', default='https://github.com/bitcoin/bitcoin', help='Specify the URL of the repository. Default is %(default)s')\n+    parser.add_argument('-v', '--verify', action='store_true', dest='verify', help='Verify the Gitian build')\n+    parser.add_argument('-b', '--build', action='store_true', dest='build', help='Do a Gitian build')\n+    parser.add_argument('-s', '--sign', action='store_true', dest='sign', help='Make signed binaries for Windows and MacOS')\n+    parser.add_argument('-B', '--buildsign', action='store_true', dest='buildsign', help='Build both signed and unsigned binaries')\n+    parser.add_argument('-o', '--os', dest='os', default='lwm', help='Specify which Operating Systems the build is for. Default is %(default)s. l for Linux, w for Windows, m for MacOS')\n+    parser.add_argument('-j', '--jobs', dest='jobs', default='2', help='Number of processes to use. Default %(default)s')\n+    parser.add_argument('-m', '--memory', dest='memory', default='2000', help='Memory to allocate in MiB. Default %(default)s')\n+    parser.add_argument('-k', '--kvm', action='store_true', dest='kvm', help='Use KVM instead of LXC')\n+    parser.add_argument('-d', '--docker', action='store_true', dest='docker', help='Use Docker instead of LXC')\n+    parser.add_argument('-S', '--setup', action='store_true', dest='setup', help='Set up the Gitian building environment. Only works on Debian-based systems (Ubuntu, Debian)')\n+    parser.add_argument('-D', '--detach-sign', action='store_true', dest='detach_sign', help='Create the assert file for detached signing. Will not commit anything.')\n+    parser.add_argument('-n', '--no-commit', action='store_false', dest='commit_files', help='Do not commit anything to git')\n+    parser.add_argument('signer', nargs='?', help='GPG signer to sign each build assert file')\n+    parser.add_argument('version', nargs='?', help='Version number, commit, or branch to build. If building a commit or branch, the -c option must be specified')\n+\n+    args = parser.parse_args()\n+    workdir = os.getcwd()\n+\n+    args.is_bionic = b'bionic' in subprocess.check_output(['lsb_release', '-cs'])\n+\n+    if args.kvm and args.docker:\n+        raise Exception('Error: cannot have both kvm and docker')\n+\n+    # Ensure no more than one environment variable for gitian-builder (USE_LXC, USE_VBOX, USE_DOCKER) is set as they\n+    # can interfere (e.g., USE_LXC being set shadows USE_DOCKER; for details see gitian-builder/libexec/make-clean-vm).\n+    os.environ['USE_LXC'] = ''\n+    os.environ['USE_VBOX'] = ''\n+    os.environ['USE_DOCKER'] = ''\n+    if args.docker:\n+        os.environ['USE_DOCKER'] = '1'\n+    elif not args.kvm:\n+        os.environ['USE_LXC'] = '1'\n+        if 'GITIAN_HOST_IP' not in os.environ.keys():\n+            os.environ['GITIAN_HOST_IP'] = '10.0.3.1'\n+        if 'LXC_GUEST_IP' not in os.environ.keys():\n+            os.environ['LXC_GUEST_IP'] = '10.0.3.5'\n+\n+    if args.setup:\n+        setup()\n+\n+    if args.buildsign:\n+        args.build = True\n+        args.sign = True\n+\n+    if not args.build and not args.sign and not args.verify:\n+        sys.exit(0)\n+\n+    args.linux = 'l' in args.os\n+    args.windows = 'w' in args.os\n+    args.macos = 'm' in args.os\n+\n+    # Disable for MacOS if no SDK found\n+    if args.macos and not os.path.isfile('gitian-builder/inputs/Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz'):\n+        print('Cannot build for MacOS, SDK does not exist. Will build for other OSes')\n+        args.macos = False\n+\n+    args.sign_prog = 'true' if args.detach_sign else 'gpg --detach-sign'\n+\n+    script_name = os.path.basename(sys.argv[0])\n+    if not args.signer:\n+        print(script_name+': Missing signer')\n+        print('Try '+script_name+' --help for more information')\n+        sys.exit(1)\n+    if not args.version:\n+        print(script_name+': Missing version')\n+        print('Try '+script_name+' --help for more information')\n+        sys.exit(1)\n+\n+    # Add leading 'v' for tags\n+    if args.commit and args.pull:\n+        raise Exception('Cannot have both commit and pull')\n+    args.commit = ('' if args.commit else 'v') + args.version\n+\n+    os.chdir('bitcoin')\n+    if args.pull:\n+        subprocess.check_call(['git', 'fetch', args.url, 'refs/pull/'+args.version+'/merge'])\n+        os.chdir('../gitian-builder/inputs/bitcoin')\n+        subprocess.check_call(['git', 'fetch', args.url, 'refs/pull/'+args.version+'/merge'])\n+        args.commit = subprocess.check_output(['git', 'show', '-s', '--format=%H', 'FETCH_HEAD'], universal_newlines=True, encoding='utf8').strip()\n+        args.version = 'pull-' + args.version\n+    print(args.commit)\n+    subprocess.check_call(['git', 'fetch'])\n+    subprocess.check_call(['git', 'checkout', args.commit])\n+    os.chdir(workdir)\n+\n+    os.chdir('gitian-builder')\n+    subprocess.check_call(['git', 'pull'])\n+    os.chdir(workdir)\n+\n+    if args.build:\n+        build()\n+\n+    if args.sign:\n+        sign()\n+\n+    if args.verify:\n+        os.chdir('gitian.sigs')\n+        subprocess.check_call(['git', 'pull'])\n+        os.chdir(workdir)\n+        sys.exit(verify())\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "a2ca768aaa70b285d1e7b8654c1094533e6c1190",
        "filename": "contrib/gitian-descriptors/assign_DISTNAME",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/gitian-descriptors/assign_DISTNAME",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/gitian-descriptors/assign_DISTNAME",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/assign_DISTNAME?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,12 @@\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# A helper script to be sourced into the gitian descriptors\n+\n+if RECENT_TAG=\"$(git describe --exact-match HEAD)\"; then\n+    VERSION=\"${RECENT_TAG#v}\"\n+else\n+    VERSION=\"$(git rev-parse --short=12 HEAD)\"\n+fi\n+DISTNAME=\"bitcoin-${VERSION}\""
      },
      {
        "sha": "65f9a2e5c91d3b61599e3d6fb492389cd672da3d",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "added",
        "additions": 151,
        "deletions": 0,
        "changes": 151,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,151 @@\n+---\n+name: \"bitcoin-core-linux-0.21\"\n+enable_cache: true\n+distro: \"ubuntu\"\n+suites:\n+- \"bionic\"\n+architectures:\n+- \"amd64\"\n+packages:\n+# Common dependencies.\n+- \"autoconf\"\n+- \"automake\"\n+- \"binutils\"\n+- \"bsdmainutils\"\n+- \"ca-certificates\"\n+- \"curl\"\n+- \"faketime\"\n+- \"git\"\n+- \"libtool\"\n+- \"patch\"\n+- \"pkg-config\"\n+- \"python3\"\n+# Cross compilation HOSTS:\n+#  - arm-linux-gnueabihf\n+- \"binutils-arm-linux-gnueabihf\"\n+- \"g++-8-arm-linux-gnueabihf\"\n+#  - aarch64-linux-gnu\n+- \"binutils-aarch64-linux-gnu\"\n+- \"g++-8-aarch64-linux-gnu\"\n+#  - riscv64-linux-gnu\n+- \"binutils-riscv64-linux-gnu\"\n+- \"g++-8-riscv64-linux-gnu\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n+  \"dir\": \"bitcoin\"\n+files: []\n+script: |\n+  set -e -o pipefail\n+\n+  WRAP_DIR=$HOME/wrapped\n+  HOSTS=\"x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu\"\n+  CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests\"\n+  FAKETIME_HOST_PROGS=\"gcc g++\"\n+  FAKETIME_PROGS=\"date ar ranlib nm\"\n+  HOST_CFLAGS=\"-O2 -g\"\n+  HOST_CXXFLAGS=\"-O2 -g\"\n+  HOST_LDFLAGS_BASE=\"-static-libstdc++ -Wl,-O2\"\n+\n+  export QT_RCC_TEST=1\n+  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n+  export TZ=\"UTC\"\n+  export BUILD_DIR=\"$PWD\"\n+  mkdir -p ${WRAP_DIR}\n+  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n+  fi\n+\n+  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n+  function create_global_faketime_wrappers {\n+  for prog in ${FAKETIME_PROGS}; do\n+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n+    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n+    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n+    chmod +x ${WRAP_DIR}/${prog}\n+  done\n+  }\n+\n+  function create_per-host_faketime_wrappers {\n+  for i in $HOSTS; do\n+    for prog in ${FAKETIME_HOST_PROGS}; do\n+        if which ${i}-${prog}-8\n+        then\n+            echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n+            echo \"REAL=\\`which -a ${i}-${prog}-8 | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+            echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n+            echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+            echo \"\\$REAL \\\"\\$@\\\"\" >> $WRAP_DIR/${i}-${prog}\n+            chmod +x ${WRAP_DIR}/${i}-${prog}\n+        fi\n+    done\n+  done\n+  }\n+\n+  # Faketime for depends so intermediate results are comparable\n+  export PATH_orig=${PATH}\n+  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n+  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  cd bitcoin\n+  BASEPREFIX=\"${PWD}/depends\"\n+  # Build dependencies for each host\n+  for i in $HOSTS; do\n+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n+  done\n+\n+  # Faketime for binaries\n+  export PATH=${PATH_orig}\n+  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  # Define DISTNAME variable.\n+  # shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n+  source contrib/gitian-descriptors/assign_DISTNAME\n+\n+  GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n+\n+  # Create the source tarball\n+  mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n+  git archive --output=\"$GIT_ARCHIVE\" HEAD\n+\n+  ORIGPATH=\"$PATH\"\n+  # Extract the git archive into a dir for each host and build\n+  for i in ${HOSTS}; do\n+    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n+    if [ \"${i}\" = \"riscv64-linux-gnu\" ]; then\n+      # Workaround for https://bugs.launchpad.net/ubuntu/+source/gcc-8-cross-ports/+bug/1853740\n+      # TODO: remove this when no longer needed\n+      HOST_LDFLAGS=\"${HOST_LDFLAGS_BASE} -Wl,-z,noexecstack\"\n+    else\n+      HOST_LDFLAGS=\"${HOST_LDFLAGS_BASE}\"\n+    fi\n+    mkdir -p distsrc-${i}\n+    cd distsrc-${i}\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n+    mkdir -p ${INSTALLPATH}\n+    tar -xf $GIT_ARCHIVE\n+\n+    ./autogen.sh\n+    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\" LDFLAGS=\"${HOST_LDFLAGS}\"\n+    make ${MAKEOPTS}\n+    make ${MAKEOPTS} -C src check-security\n+    make ${MAKEOPTS} -C src check-symbols\n+    make install DESTDIR=${INSTALLPATH}\n+    cd installed\n+    find . -name \"lib*.la\" -delete\n+    find . -name \"lib*.a\" -delete\n+    rm -rf ${DISTNAME}/lib/pkgconfig\n+    find ${DISTNAME}/bin -type f -executable -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n+    find ${DISTNAME}/lib -type f -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n+    cp ../README.md ${DISTNAME}/\n+    find ${DISTNAME} -not -name \"*.dbg\" | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n+    find ${DISTNAME} -name \"*.dbg\" | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}-debug.tar.gz\n+    cd ../../\n+    rm -rf distsrc-${i}\n+  done"
      },
      {
        "sha": "a4f3219c2291e8164c92d5ba1eedb7a346b1bdb4",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "added",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,40 @@\n+---\n+name: \"bitcoin-dmg-signer\"\n+distro: \"ubuntu\"\n+suites:\n+- \"bionic\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"faketime\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n+  \"dir\": \"signature\"\n+files:\n+- \"bitcoin-osx-unsigned.tar.gz\"\n+script: |\n+  set -e -o pipefail\n+\n+  WRAP_DIR=$HOME/wrapped\n+  mkdir -p ${WRAP_DIR}\n+  export PATH=\"$PWD\":$PATH\n+  FAKETIME_PROGS=\"dmg genisoimage\"\n+\n+  # Create global faketime wrappers\n+  for prog in ${FAKETIME_PROGS}; do\n+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n+    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n+    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n+    chmod +x ${WRAP_DIR}/${prog}\n+  done\n+\n+  UNSIGNED=bitcoin-osx-unsigned.tar.gz\n+  SIGNED=bitcoin-osx-signed.dmg\n+\n+  tar -xf ${UNSIGNED}\n+  OSX_VOLNAME=\"$(cat osx_volname)\"\n+  ./detached-sig-apply.sh ${UNSIGNED} signature/osx\n+  ${WRAP_DIR}/genisoimage -no-cache-inodes -D -l -probe -V \"${OSX_VOLNAME}\" -no-pad -r -dir-mode 0755 -apple -o uncompressed.dmg signed-app\n+  ${WRAP_DIR}/dmg dmg uncompressed.dmg ${OUTDIR}/${SIGNED}"
      },
      {
        "sha": "e0aaafc15ad4005d47becfe03a506ed436867b95",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "added",
        "additions": 159,
        "deletions": 0,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,159 @@\n+---\n+name: \"bitcoin-core-osx-0.21\"\n+enable_cache: true\n+distro: \"ubuntu\"\n+suites:\n+- \"bionic\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"ca-certificates\"\n+- \"curl\"\n+- \"g++\"\n+- \"git\"\n+- \"pkg-config\"\n+- \"autoconf\"\n+- \"librsvg2-bin\"\n+- \"libtiff-tools\"\n+- \"libtool\"\n+- \"automake\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+- \"cmake\"\n+- \"imagemagick\"\n+- \"libcap-dev\"\n+- \"libz-dev\"\n+- \"libbz2-dev\"\n+- \"python3\"\n+- \"python3-dev\"\n+- \"python3-setuptools\"\n+- \"fonts-tuffy\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n+  \"dir\": \"bitcoin\"\n+files:\n+- \"Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz\"\n+script: |\n+  set -e -o pipefail\n+\n+  WRAP_DIR=$HOME/wrapped\n+  HOSTS=\"x86_64-apple-darwin16\"\n+  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests GENISOIMAGE=$WRAP_DIR/genisoimage\"\n+  FAKETIME_HOST_PROGS=\"\"\n+  FAKETIME_PROGS=\"ar ranlib date dmg genisoimage\"\n+\n+  export QT_RCC_TEST=1\n+  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n+  export TZ=\"UTC\"\n+  export BUILD_DIR=\"$PWD\"\n+  mkdir -p ${WRAP_DIR}\n+  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n+  fi\n+\n+  export ZERO_AR_DATE=1\n+\n+  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n+  function create_global_faketime_wrappers {\n+  for prog in ${FAKETIME_PROGS}; do\n+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n+    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n+    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n+    chmod +x ${WRAP_DIR}/${prog}\n+  done\n+  }\n+\n+  function create_per-host_faketime_wrappers {\n+  for i in $HOSTS; do\n+    for prog in ${FAKETIME_HOST_PROGS}; do\n+        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+        chmod +x ${WRAP_DIR}/${i}-${prog}\n+    done\n+  done\n+  }\n+\n+  # Faketime for depends so intermediate results are comparable\n+  export PATH_orig=${PATH}\n+  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n+  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  cd bitcoin\n+  BASEPREFIX=\"${PWD}/depends\"\n+\n+  mkdir -p ${BASEPREFIX}/SDKs\n+  tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz\n+\n+  # Build dependencies for each host\n+  for i in $HOSTS; do\n+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n+  done\n+\n+  # Faketime for binaries\n+  export PATH=${PATH_orig}\n+  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  # Define DISTNAME variable.\n+  # shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n+  source contrib/gitian-descriptors/assign_DISTNAME\n+\n+  GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n+\n+  # Create the source tarball\n+  mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n+  git archive --output=\"$GIT_ARCHIVE\" HEAD\n+\n+  ORIGPATH=\"$PATH\"\n+  # Extract the git archive into a dir for each host and build\n+  for i in ${HOSTS}; do\n+    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n+    mkdir -p distsrc-${i}\n+    cd distsrc-${i}\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n+    mkdir -p ${INSTALLPATH}\n+    tar -xf $GIT_ARCHIVE\n+\n+    ./autogen.sh\n+    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n+    make ${MAKEOPTS}\n+    make ${MAKEOPTS} -C src check-security\n+    make ${MAKEOPTS} -C src check-symbols\n+    make install-strip DESTDIR=${INSTALLPATH}\n+\n+    make osx_volname\n+    make deploydir\n+    OSX_VOLNAME=\"$(cat osx_volname)\"\n+    mkdir -p unsigned-app-${i}\n+    cp osx_volname unsigned-app-${i}/\n+    cp contrib/macdeploy/detached-sig-apply.sh unsigned-app-${i}\n+    cp contrib/macdeploy/detached-sig-create.sh unsigned-app-${i}\n+    cp ${BASEPREFIX}/${i}/native/bin/dmg ${BASEPREFIX}/${i}/native/bin/genisoimage unsigned-app-${i}\n+    cp ${BASEPREFIX}/${i}/native/bin/${i}-codesign_allocate unsigned-app-${i}/codesign_allocate\n+    cp ${BASEPREFIX}/${i}/native/bin/${i}-pagestuff unsigned-app-${i}/pagestuff\n+    mv dist unsigned-app-${i}\n+    pushd unsigned-app-${i}\n+    find . | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-osx-unsigned.tar.gz\n+    popd\n+\n+    make deploy\n+    ${WRAP_DIR}/dmg dmg \"${OSX_VOLNAME}.dmg\" ${OUTDIR}/${DISTNAME}-osx-unsigned.dmg\n+\n+    cd installed\n+    find . -name \"lib*.la\" -delete\n+    find . -name \"lib*.a\" -delete\n+    rm -rf ${DISTNAME}/lib/pkgconfig\n+    find ${DISTNAME} | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n+    cd ../../\n+  done\n+\n+  mv ${OUTDIR}/${DISTNAME}-x86_64-*.tar.gz ${OUTDIR}/${DISTNAME}-osx64.tar.gz"
      },
      {
        "sha": "6bcd126662f3a1e04aa38735f1bcd758d7001fbb",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "added",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,42 @@\n+---\n+name: \"bitcoin-win-signer\"\n+distro: \"ubuntu\"\n+suites:\n+- \"bionic\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"libssl-dev\"\n+- \"autoconf\"\n+- \"automake\"\n+- \"libtool\"\n+- \"pkg-config\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n+  \"dir\": \"signature\"\n+files:\n+- \"osslsigncode-2.0.tar.gz\"\n+- \"bitcoin-win-unsigned.tar.gz\"\n+script: |\n+  set -e -o pipefail\n+\n+  BUILD_DIR=\"$PWD\"\n+  SIGDIR=${BUILD_DIR}/signature/win\n+  UNSIGNED_DIR=${BUILD_DIR}/unsigned\n+\n+  echo \"5a60e0a4b3e0b4d655317b2f12a810211c50242138322b16e7e01c6fbb89d92f  osslsigncode-2.0.tar.gz\" | sha256sum -c\n+\n+  mkdir -p ${UNSIGNED_DIR}\n+  tar -C ${UNSIGNED_DIR} -xf bitcoin-win-unsigned.tar.gz\n+\n+  tar xf osslsigncode-2.0.tar.gz\n+  cd osslsigncode-2.0\n+\n+  ./autogen.sh\n+  ./configure --without-gsf --without-curl --disable-dependency-tracking\n+  make\n+  find ${UNSIGNED_DIR} -name \"*-unsigned.exe\" | while read i; do\n+    INFILE=\"$(basename \"${i}\")\"\n+    OUTFILE=\"${INFILE/-unsigned}\"\n+    ./osslsigncode attach-signature -in \"${i}\" -out \"${OUTDIR}/${OUTFILE}\" -sigin \"${SIGDIR}/${INFILE}.pem\"\n+  done"
      },
      {
        "sha": "5f671b95ce3df0f77418dba9c556dbd897333025",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "added",
        "additions": 156,
        "deletions": 0,
        "changes": 156,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,156 @@\n+---\n+name: \"bitcoin-core-win-0.21\"\n+enable_cache: true\n+distro: \"ubuntu\"\n+suites:\n+- \"bionic\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"curl\"\n+- \"g++\"\n+- \"git\"\n+- \"pkg-config\"\n+- \"autoconf\"\n+- \"libtool\"\n+- \"automake\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+- \"mingw-w64\"\n+- \"g++-mingw-w64\"\n+- \"nsis\"\n+- \"zip\"\n+- \"ca-certificates\"\n+- \"python3\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n+  \"dir\": \"bitcoin\"\n+files: []\n+script: |\n+  set -e -o pipefail\n+\n+  WRAP_DIR=$HOME/wrapped\n+  HOSTS=\"x86_64-w64-mingw32\"\n+  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n+  FAKETIME_HOST_PROGS=\"ar ranlib nm windres strip objcopy\"\n+  FAKETIME_PROGS=\"date makensis zip\"\n+  HOST_CFLAGS=\"-O2 -g -fno-ident\"\n+  HOST_CXXFLAGS=\"-O2 -g -fno-ident\"\n+\n+  export QT_RCC_TEST=1\n+  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n+  export TZ=\"UTC\"\n+  export BUILD_DIR=\"$PWD\"\n+  mkdir -p ${WRAP_DIR}\n+  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n+  fi\n+\n+  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n+  function create_global_faketime_wrappers {\n+  for prog in ${FAKETIME_PROGS}; do\n+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n+    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n+    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n+    chmod +x ${WRAP_DIR}/${prog}\n+  done\n+  }\n+\n+  function create_per-host_faketime_wrappers {\n+  for i in $HOSTS; do\n+    for prog in ${FAKETIME_HOST_PROGS}; do\n+        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+        chmod +x ${WRAP_DIR}/${i}-${prog}\n+    done\n+  done\n+  }\n+\n+  function create_per-host_compiler_wrapper {\n+  # -posix variant is required for c++11 threading.\n+  for i in $HOSTS; do\n+    for prog in gcc g++; do\n+        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog}-posix | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"\\$REAL \\\"\\$@\\\"\" >> $WRAP_DIR/${i}-${prog}\n+        chmod +x ${WRAP_DIR}/${i}-${prog}\n+    done\n+  done\n+  }\n+\n+  # Faketime for depends so intermediate results are comparable\n+  export PATH_orig=${PATH}\n+  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n+  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n+  create_per-host_compiler_wrapper \"2000-01-01 12:00:00\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  cd bitcoin\n+  BASEPREFIX=\"${PWD}/depends\"\n+  # Build dependencies for each host\n+  for i in $HOSTS; do\n+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n+  done\n+\n+  # Faketime for binaries\n+  export PATH=${PATH_orig}\n+  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  create_per-host_compiler_wrapper \"${REFERENCE_DATETIME}\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  # Define DISTNAME variable.\n+  # shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n+  source contrib/gitian-descriptors/assign_DISTNAME\n+\n+  GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n+\n+  # Create the source tarball\n+  mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n+  git archive --output=\"$GIT_ARCHIVE\" HEAD\n+\n+  ORIGPATH=\"$PATH\"\n+  # Extract the git archive into a dir for each host and build\n+  for i in ${HOSTS}; do\n+    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n+    mkdir -p distsrc-${i}\n+    cd distsrc-${i}\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n+    mkdir -p ${INSTALLPATH}\n+    tar -xf $GIT_ARCHIVE\n+\n+    ./autogen.sh\n+    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\"\n+    make ${MAKEOPTS}\n+    make ${MAKEOPTS} -C src check-security\n+    make ${MAKEOPTS} -C src check-symbols\n+    make deploy BITCOIN_WIN_INSTALLER=\"${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe\"\n+    make install DESTDIR=${INSTALLPATH}\n+    cd installed\n+    mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/\n+    find . -name \"lib*.la\" -delete\n+    find . -name \"lib*.a\" -delete\n+    rm -rf ${DISTNAME}/lib/pkgconfig\n+    find ${DISTNAME}/bin -type f -executable -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n+    find ${DISTNAME}/lib -type f -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n+    cp ../doc/README_windows.txt ${DISTNAME}/readme.txt\n+    find ${DISTNAME} -not -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i//x86_64-w64-mingw32/win64}.zip\n+    find ${DISTNAME} -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i//x86_64-w64-mingw32/win64}-debug.zip\n+    cd ../../\n+    rm -rf distsrc-${i}\n+  done\n+\n+  cp -rf contrib/windeploy $BUILD_DIR\n+  cd $BUILD_DIR/windeploy\n+  mkdir unsigned\n+  cp ${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe unsigned/\n+  find . | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz"
      },
      {
        "sha": "ffe4fb144b1ae07c7c9bbdcdaea2694978eb18b2",
        "filename": "contrib/gitian-keys/README.md",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/gitian-keys/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/gitian-keys/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/README.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,27 @@\n+## PGP keys of Gitian builders and Developers\n+\n+The file `keys.txt` contains fingerprints of the public keys of Gitian builders\n+and active developers.\n+\n+The associated keys are mainly used to sign git commits or the build results\n+of Gitian builds.\n+\n+The most recent version of each pgp key can be found on most pgp key servers.\n+\n+Fetch the latest version from the key server to see if any key was revoked in\n+the meantime.\n+To fetch the latest version of all pgp keys in your gpg homedir,\n+\n+```sh\n+gpg --refresh-keys\n+```\n+\n+To fetch keys of Gitian builders and active developers, feed the list of\n+fingerprints of the primary keys into gpg:\n+\n+```sh\n+while read fingerprint keyholder_name; do gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys ${fingerprint}; done < ./keys.txt\n+```\n+\n+Add your key to the list if you provided Gitian signatures for two major or\n+minor releases of Bitcoin Core."
      },
      {
        "sha": "0a2c1302c82f8e13cfe48ec36ff5bd0c9e07f3e6",
        "filename": "contrib/gitian-keys/keys.txt",
        "status": "added",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/gitian-keys/keys.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/gitian-keys/keys.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/keys.txt?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,36 @@\n+9D3CC86A72F8494342EA5FD10A41BDC3F4FAFF1C Aaron Clauson (sipsorcery)\n+617C90010B3BD370B0AC7D424BB42E31C79111B8 Akira Takizawa\n+E944AE667CF960B1004BC32FCA662BE18B877A60 Andreas Schildbach\n+152812300785C96444D3334D17565732E08E5E41 Andrew Chow\n+912FD3228387123DC97E0E57D5566241A0295FA9 BtcDrak\n+C519EBCF3B926298946783EFF6430754120EC2F4 Christian Decker (cdecker)\n+F20F56EF6A067F70E8A5C99FFF95FAA971697405 centaur\n+C060A6635913D98A3587D7DB1C2491FFEB0EF770 Cory Fields\n+BF6273FAEF7CC0BA1F562E50989F6B3048A116B5 Dev Random\n+6D3170C1DC2C6FD0AEEBCA6743811D1A26623924 Douglas Roark\n+9A1689B60D1B3CCE9262307A2F40A9BF167FBA47 Erik Mossberg (erkmos)\n+D35176BE9264832E4ACA8986BF0792FBE95DC863 fivepiece\n+01CDF4627A3B88AAE4A571C87588242FBE38D3A8 Gavin Andresen\n+D1DBF2C4B96F2DEBF4C16654410108112E7EA81F Hennadii Stepanov (hebasto)\n+D3CC177286005BB8FF673294C5242A1AB3936517 jl2012\n+82921A4B88FD454B7EB8CE3C796C4109063D4EAF Jon Atack\n+32EE5C4C3FA15CCADB46ABE529D4BCB6416F53EC Jonas Schnelli\n+4B4E840451149DD7FB0D633477DFAB5C3108B9A8 Jorge Timon\n+C42AFF7C61B3E44A1454CD3557AF762DB3353322 Karl-Johan Alm (kallewoof)\n+E463A93F5F3117EEDE6C7316BD02942421F4889F Luke Dashjr\n+B8B3F1C0E58C15DB6A81D30C3648A882F4316B9B Marco Falke\n+07DF3E57A548CCFB7530709189BBB8663E2E65CE Matt Corallo (BlueMatt)\n+CA03882CB1FC067B5D3ACFE4D300116E1C875A3D MeshCollider\n+E777299FC265DD04793070EB944D35F9AC3DB76A Michael Ford\n+9692B91BBF0E8D34DFD33B1882C5C009628ECF0C Michagogo\n+77E72E69DA7EE0A148C06B21B34821D4944DE5F7 Nils Schneider\n+D62A803E27E7F43486035ADBBCD04D8E9CCCAC2A Paul Rabahy\n+37EC7D7B0A217CDB4B4E007E7FAB114267E4FA04 Peter Todd\n+D762373D24904A3E42F33B08B9A408E71DAAC974 Pieter Wuille (Location: Leuven, Belgium)\n+133EAC179436F14A5CF1B794860FEB804E669320 Pieter Wuille\n+A8FC55F3B04BA3146F3492E79303B33A305224CB Sebastian Kung (TheCharlatan)\n+ED9BDF7AD6A55E232E84524257FF9BDBCC301009 Sjors Provoost\n+9EDAFF80E080659604F4A76B2EBB056FD847F8A7 Stephan Oeste (Emzy)\n+AEC1884398647C47413C1C3FB1179EB7347DC10D Warren Togami\n+79D00BAC68B56D422F945A8F8E3A8F3247DBCBBF Willy Ko\n+71A3B16735405025D447E8F274810B012346C9A6 Wladimir J. van der Laan"
      },
      {
        "sha": "dffcf99607ae2bb997296ad1e16e124d5da70f4b",
        "filename": "contrib/guix/README.md",
        "status": "added",
        "additions": 230,
        "deletions": 0,
        "changes": 230,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/guix/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/guix/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/README.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,230 @@\n+# Bootstrappable Bitcoin Core Builds\n+\n+This directory contains the files necessary to perform bootstrappable Bitcoin\n+Core builds.\n+\n+[Bootstrappability][b17e] furthers our binary security guarantees by allowing us\n+to _audit and reproduce_ our toolchain instead of blindly _trusting_ binary\n+downloads.\n+\n+We achieve bootstrappability by using Guix as a functional package manager.\n+\n+## Requirements\n+\n+Conservatively, a x86_64 machine with:\n+\n+- 4GB of free disk space on the partition that /gnu/store will reside in\n+- 24GB of free disk space on the partition that the Bitcoin Core git repository\n+  resides in\n+\n+> Note: these requirements are slightly less onerous than those of Gitian builds\n+\n+## Setup\n+\n+### Installing Guix\n+\n+If you're just testing this out, you can use the\n+[Dockerfile][fanquake/guix-docker] for convenience. It automatically speeds up\n+your builds by [using substitutes](#speeding-up-builds-with-substitute-servers).\n+If you don't want this behaviour, refer to the [next\n+section](#choosing-your-security-model).\n+\n+Otherwise, follow the [Guix installation guide][guix/bin-install].\n+\n+> Note: For those who like to keep their filesystems clean, Guix is designed to\n+> be very standalone and _will not_ conflict with your system's package\n+> manager/existing setup. It _only_ touches `/var/guix`, `/gnu`, and\n+> `~/.config/guix`.\n+\n+### Choosing your security model\n+\n+Guix allows us to achieve better binary security by using our CPU time to build\n+everything from scratch. However, it doesn't sacrifice user choice in pursuit of\n+this: users can decide whether or not to bootstrap and to use substitutes.\n+\n+After installation, you may want to consider [adding substitute\n+servers](#speeding-up-builds-with-substitute-servers) to speed up your build if\n+that fits your security model (say, if you're just testing that this works).\n+This is skippable if you're using the [Dockerfile][fanquake/guix-docker].\n+\n+If you prefer not to use any substitutes, make sure to set\n+`ADDITIONAL_GUIX_ENVIRONMENT_FLAGS` like the following snippet. The first build\n+will take a while, but the resulting packages will be cached for future builds.\n+\n+```sh\n+export ADDITIONAL_GUIX_ENVIRONMENT_FLAGS='--no-substitutes'\n+```\n+\n+Likewise, to perform a bootstrapped build (takes even longer):\n+\n+```sh\n+export ADDITIONAL_GUIX_ENVIRONMENT_FLAGS='--bootstrap --no-substitutes'\n+```\n+\n+### Using a version of Guix with `guix time-machine` capabilities\n+\n+> Note: This entire section can be skipped if you are already using a version of\n+> Guix that has [the `guix time-machine` command][guix/time-machine].\n+\n+Once Guix is installed, if it doesn't have the `guix time-machine` command, pull\n+the latest `guix`.\n+\n+```sh\n+guix pull --max-jobs=4 # change number of jobs accordingly\n+```\n+\n+Make sure that you are using your current profile. (You are prompted to do this\n+at the end of the `guix pull`)\n+\n+```bash\n+export PATH=\"${HOME}/.config/guix/current/bin${PATH:+:}$PATH\"\n+```\n+\n+## Usage\n+\n+### As a Development Environment\n+\n+For a Bitcoin Core depends development environment, simply invoke\n+\n+```sh\n+guix environment --manifest=contrib/guix/manifest.scm\n+```\n+\n+And you'll land back in your shell with all the build dependencies required for\n+a `depends` build injected into your environment.\n+\n+### As a Tool for Deterministic Builds\n+\n+From the top of a clean Bitcoin Core repository:\n+\n+```sh\n+./contrib/guix/guix-build.sh\n+```\n+\n+After the build finishes successfully (check the status code please), compare\n+hashes:\n+\n+```sh\n+find output/ -type f -print0 | sort -z | xargs -r0 sha256sum\n+```\n+\n+#### Recognized environment variables\n+\n+* _**HOSTS**_\n+\n+  Override the space-separated list of platform triples for which to perform a\n+  bootstrappable build. _(defaults to \"x86\\_64-linux-gnu\n+  arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu\")_\n+\n+  > Windows and OS X platform triplet support are WIP.\n+\n+* _**SOURCES_PATH**_\n+\n+  Set the depends tree download cache for sources. This is passed through to the\n+  depends tree. Setting this to the same directory across multiple builds of the\n+  depends tree can eliminate unnecessary redownloading of package sources.\n+\n+* _**MAX_JOBS**_\n+\n+  Override the maximum number of jobs to run simultaneously, you might want to\n+  do so on a memory-limited machine. This may be passed to `make` as in `make\n+  --jobs=\"$MAX_JOBS\"` or `xargs` as in `xargs -P\"$MAX_JOBS\"`. _(defaults to the\n+  value of `nproc` outside the container)_\n+\n+* _**SOURCE_DATE_EPOCH**_\n+\n+  Override the reference UNIX timestamp used for bit-for-bit reproducibility,\n+  the variable name conforms to [standard][r12e/source-date-epoch]. _(defaults\n+  to the output of `$(git log --format=%at -1)`)_\n+\n+* _**V**_\n+\n+  If non-empty, will pass `V=1` to all `make` invocations, making `make` output\n+  verbose.\n+\n+  Note that any given value is ignored. The variable is only checked for\n+  emptiness. More concretely, this means that `V=` (setting `V` to the empty\n+  string) is interpreted the same way as not setting `V` at all, and that `V=0`\n+  has the same effect as `V=1`.\n+\n+* _**ADDITIONAL_GUIX_ENVIRONMENT_FLAGS**_\n+\n+  Additional flags to be passed to `guix environment`. For a fully-bootstrapped\n+  build, set this to `--bootstrap --no-substitutes` (refer to the [security\n+  model section](#choosing-your-security-model) for more details). Note that a\n+  fully-bootstrapped build will take quite a long time on the first run.\n+\n+## Tips and Tricks\n+\n+### Speeding up builds with substitute servers\n+\n+_This whole section is automatically done in the convenience\n+[Dockerfiles][fanquake/guix-docker]_\n+\n+For those who are used to life in the fast _(and trustful)_ lane, you can use\n+[substitute servers][guix/substitutes] to enable binary downloads of packages.\n+\n+> For those who only want to use substitutes from the official Guix build farm\n+> and have authorized the build farm's signing key during Guix's installation,\n+> you don't need to do anything.\n+\n+#### Authorize the signing keys\n+\n+For the official Guix build farm at https://ci.guix.gnu.org, run as root:\n+\n+```\n+guix archive --authorize < ~root/.config/guix/current/share/guix/ci.guix.gnu.org.pub\n+```\n+\n+For dongcarl's substitute server at https://guix.carldong.io, run as root:\n+\n+```sh\n+wget -qO- 'https://guix.carldong.io/signing-key.pub' | guix archive --authorize\n+```\n+\n+#### Use the substitute servers\n+\n+The official Guix build farm at https://ci.guix.gnu.org is automatically used\n+unless the `--no-substitutes` flag is supplied.\n+\n+This can be overridden for all `guix` invocations by passing the\n+`--substitute-urls` option to your invocation of `guix-daemon`. This can also be\n+overridden on a call-by-call basis by passing the same `--substitute-urls`\n+option to client tools such at `guix environment`.\n+\n+To use dongcarl's substitute server for Bitcoin Core builds after having\n+[authorized his signing key](#authorize-the-signing-keys):\n+\n+```\n+export ADDITIONAL_GUIX_ENVIRONMENT_FLAGS='--substitute-urls=\"https://guix.carldong.io https://ci.guix.gnu.org\"'\n+```\n+\n+## FAQ\n+\n+### How can I trust the binary installation?\n+\n+As mentioned at the bottom of [this manual page][guix/bin-install]:\n+\n+> The binary installation tarballs can be (re)produced and verified simply by\n+> running the following command in the Guix source tree:\n+>\n+>     make guix-binary.x86_64-linux.tar.xz\n+\n+### When will Guix be packaged in debian?\n+\n+Vagrant Cascadian has been making good progress on this\n+[here][debian/guix-package]. We have all the pieces needed to put up an APT\n+repository and will likely put one up soon.\n+\n+[b17e]: http://bootstrappable.org/\n+[r12e/source-date-epoch]: https://reproducible-builds.org/docs/source-date-epoch/\n+\n+[guix/install.sh]: https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n+[guix/bin-install]: https://www.gnu.org/software/guix/manual/en/html_node/Binary-Installation.html\n+[guix/env-setup]: https://www.gnu.org/software/guix/manual/en/html_node/Build-Environment-Setup.html\n+[guix/substitutes]: https://www.gnu.org/software/guix/manual/en/html_node/Substitutes.html\n+[guix/substitute-server-auth]: https://www.gnu.org/software/guix/manual/en/html_node/Substitute-Server-Authorization.html\n+[guix/time-machine]: https://guix.gnu.org/manual/en/html_node/Invoking-guix-time_002dmachine.html\n+\n+[debian/guix-package]: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=850644\n+[fanquake/guix-docker]: https://github.com/fanquake/core-review/tree/master/guix"
      },
      {
        "sha": "11d2c8b86727eb2a757bc94e532a0d4cc83c45c6",
        "filename": "contrib/guix/guix-build.sh",
        "status": "added",
        "additions": 119,
        "deletions": 0,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/guix/guix-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/guix/guix-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/guix-build.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,119 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# Determine the maximum number of jobs to run simultaneously (overridable by\n+# environment)\n+MAX_JOBS=\"${MAX_JOBS:-$(nproc)}\"\n+\n+# Download the depends sources now as we won't have internet access in the build\n+# container\n+make -C \"${PWD}/depends\" -j\"$MAX_JOBS\" download ${V:+V=1} ${SOURCES_PATH:+SOURCES_PATH=\"$SOURCES_PATH\"}\n+\n+# Determine the reference time used for determinism (overridable by environment)\n+SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:-$(git log --format=%at -1)}\"\n+\n+# Execute \"$@\" in a pinned, possibly older version of Guix, for reproducibility\n+# across time.\n+time-machine() {\n+    guix time-machine --url=https://github.com/dongcarl/guix.git \\\n+                      --commit=b066c25026f21fb57677aa34692a5034338e7ee3 \\\n+                      -- \"$@\"\n+}\n+\n+# Function to be called when building for host ${1} and the user interrupts the\n+# build\n+int_trap() {\n+cat << EOF\n+** INT received while building ${1}, you may want to clean up the relevant\n+   output, deploy, and distsrc-* directories before rebuilding\n+\n+Hint: To blow everything away, you may want to use:\n+\n+  $ git clean -xdff --exclude='/depends/SDKs/*'\n+\n+Specifically, this will remove all files without an entry in the index,\n+excluding the SDK directory. Practically speaking, this means that all ignored\n+and untracked files and directories will be wiped, allowing you to start anew.\n+EOF\n+}\n+\n+# Deterministically build Bitcoin Core for HOSTs (overridable by environment)\n+# shellcheck disable=SC2153\n+for host in ${HOSTS=x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu x86_64-w64-mingw32}; do\n+\n+    # Display proper warning when the user interrupts the build\n+    trap 'int_trap ${host}' INT\n+\n+    (\n+        # Required for 'contrib/guix/manifest.scm' to output the right manifest\n+        # for the particular $HOST we're building for\n+        export HOST=\"$host\"\n+\n+        # Run the build script 'contrib/guix/libexec/build.sh' in the build\n+        # container specified by 'contrib/guix/manifest.scm'.\n+        #\n+        # Explanation of `guix environment` flags:\n+        #\n+        #   --container        run command within an isolated container\n+        #\n+        #     Running in an isolated container minimizes build-time differences\n+        #     between machines and improves reproducibility\n+        #\n+        #   --pure             unset existing environment variables\n+        #\n+        #     Same rationale as --container\n+        #\n+        #   --no-cwd           do not share current working directory with an\n+        #                      isolated container\n+        #\n+        #     When --container is specified, the default behavior is to share\n+        #     the current working directory with the isolated container at the\n+        #     same exact path (e.g. mapping '/home/satoshi/bitcoin/' to\n+        #     '/home/satoshi/bitcoin/'). This means that the $PWD inside the\n+        #     container becomes a source of irreproducibility. --no-cwd disables\n+        #     this behaviour.\n+        #\n+        #   --share=SPEC       for containers, share writable host file system\n+        #                      according to SPEC\n+        #\n+        #   --share=\"$PWD\"=/bitcoin\n+        #\n+        #                     maps our current working directory to /bitcoin\n+        #                     inside the isolated container, which we later cd\n+        #                     into.\n+        #\n+        #     While we don't want to map our current working directory to the\n+        #     same exact path (as this introduces irreproducibility), we do want\n+        #     it to be at a _fixed_ path _somewhere_ inside the isolated\n+        #     container so that we have something to build. '/bitcoin' was\n+        #     chosen arbitrarily.\n+        #\n+        #   ${SOURCES_PATH:+--share=\"$SOURCES_PATH\"}\n+        #\n+        #                     make the downloaded depends sources path available\n+        #                     inside the isolated container\n+        #\n+        #     The isolated container has no network access as it's in a\n+        #     different network namespace from the main machine, so we have to\n+        #     make the downloaded depends sources available to it. The sources\n+        #     should have been downloaded prior to this invocation.\n+        #\n+        # shellcheck disable=SC2086\n+        time-machine environment --manifest=\"${PWD}/contrib/guix/manifest.scm\" \\\n+                                 --container \\\n+                                 --pure \\\n+                                 --no-cwd \\\n+                                 --share=\"$PWD\"=/bitcoin \\\n+                                 --expose=\"$(git rev-parse --git-common-dir)\" \\\n+                                 ${SOURCES_PATH:+--share=\"$SOURCES_PATH\"} \\\n+                                 ${ADDITIONAL_GUIX_ENVIRONMENT_FLAGS} \\\n+                                 -- env HOST=\"$host\" \\\n+                                        MAX_JOBS=\"$MAX_JOBS\" \\\n+                                        SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:?unable to determine value}\" \\\n+                                        ${V:+V=1} \\\n+                                        ${SOURCES_PATH:+SOURCES_PATH=\"$SOURCES_PATH\"} \\\n+                                      bash -c \"cd /bitcoin && bash contrib/guix/libexec/build.sh\"\n+    )\n+\n+done"
      },
      {
        "sha": "5be3baeefab425c62417106499b672eb0d5696f7",
        "filename": "contrib/guix/libexec/build.sh",
        "status": "added",
        "additions": 321,
        "deletions": 0,
        "changes": 321,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/guix/libexec/build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/guix/libexec/build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/libexec/build.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,321 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+export TZ=UTC\n+\n+if [ -n \"$V\" ]; then\n+    # Print both unexpanded (-v) and expanded (-x) forms of commands as they are\n+    # read from this file.\n+    set -vx\n+    # Set VERBOSE for CMake-based builds\n+    export VERBOSE=\"$V\"\n+fi\n+\n+# Check that environment variables assumed to be set by the environment are set\n+echo \"Building for platform triple ${HOST:?not set} with reference timestamp ${SOURCE_DATE_EPOCH:?not set}...\"\n+echo \"At most ${MAX_JOBS:?not set} jobs will run at once...\"\n+\n+#####################\n+# Environment Setup #\n+#####################\n+\n+# The depends folder also serves as a base-prefix for depends packages for\n+# $HOSTs after successfully building.\n+BASEPREFIX=\"${PWD}/depends\"\n+\n+# Setup an output directory for our build\n+OUTDIR=\"${OUTDIR:-${PWD}/output}\"\n+[ -e \"$OUTDIR\" ] || mkdir -p \"$OUTDIR\"\n+\n+# Setup the directory where our Bitcoin Core build for HOST will occur\n+DISTSRC=\"${DISTSRC:-${PWD}/distsrc-${HOST}}\"\n+if [ -e \"$DISTSRC\" ]; then\n+    echo \"DISTSRC directory '${DISTSRC}' exists, probably because of previous builds... Aborting...\"\n+    exit 1\n+else\n+    mkdir -p \"$DISTSRC\"\n+fi\n+\n+# Given a package name and an output name, return the path of that output in our\n+# current guix environment\n+store_path() {\n+    grep --extended-regexp \"/[^-]{32}-${1}-[^-]+${2:+-${2}}\" \"${GUIX_ENVIRONMENT}/manifest\" \\\n+        | head --lines=1 \\\n+        | sed --expression='s|^[[:space:]]*\"||' \\\n+              --expression='s|\"[[:space:]]*$||'\n+}\n+\n+# Set environment variables to point Guix's cross-toolchain to the right\n+# includes/libs for $HOST\n+case \"$HOST\" in\n+    *mingw*)\n+        # Determine output paths to use in CROSS_* environment variables\n+        CROSS_GLIBC=\"$(store_path \"mingw-w64-x86_64-winpthreads\")\"\n+        CROSS_GCC=\"$(store_path \"gcc-cross-${HOST}\")\"\n+        CROSS_GCC_LIBS=( \"${CROSS_GCC}/lib/gcc/${HOST}\"/* ) # This expands to an array of directories...\n+        CROSS_GCC_LIB=\"${CROSS_GCC_LIBS[0]}\" # ...we just want the first one (there should only be one)\n+\n+        NATIVE_GCC=\"$(store_path gcc-glibc-2.27-toolchain)\"\n+        export LIBRARY_PATH=\"${NATIVE_GCC}/lib:${NATIVE_GCC}/lib64\"\n+        export CPATH=\"${NATIVE_GCC}/include\"\n+\n+        export CROSS_C_INCLUDE_PATH=\"${CROSS_GCC_LIB}/include:${CROSS_GCC_LIB}/include-fixed:${CROSS_GLIBC}/include\"\n+        export CROSS_CPLUS_INCLUDE_PATH=\"${CROSS_GCC}/include/c++:${CROSS_GCC}/include/c++/${HOST}:${CROSS_GCC}/include/c++/backward:${CROSS_C_INCLUDE_PATH}\"\n+        export CROSS_LIBRARY_PATH=\"${CROSS_GCC}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_GCC_LIB}:${CROSS_GLIBC}/lib\"\n+        ;;\n+    *linux*)\n+        CROSS_GLIBC=\"$(store_path \"glibc-cross-${HOST}\")\"\n+        CROSS_GLIBC_STATIC=\"$(store_path \"glibc-cross-${HOST}\" static)\"\n+        CROSS_KERNEL=\"$(store_path \"linux-libre-headers-cross-${HOST}\")\"\n+        CROSS_GCC=\"$(store_path \"gcc-cross-${HOST}\")\"\n+        CROSS_GCC_LIBS=( \"${CROSS_GCC}/lib/gcc/${HOST}\"/* ) # This expands to an array of directories...\n+        CROSS_GCC_LIB=\"${CROSS_GCC_LIBS[0]}\" # ...we just want the first one (there should only be one)\n+\n+        # NOTE: CROSS_C_INCLUDE_PATH is missing ${CROSS_GCC_LIB}/include-fixed, because\n+        # the limits.h in it is missing a '#include_next <limits.h>'\n+        export CROSS_C_INCLUDE_PATH=\"${CROSS_GCC_LIB}/include:${CROSS_GLIBC}/include:${CROSS_KERNEL}/include\"\n+        export CROSS_CPLUS_INCLUDE_PATH=\"${CROSS_GCC}/include/c++:${CROSS_GCC}/include/c++/${HOST}:${CROSS_GCC}/include/c++/backward:${CROSS_C_INCLUDE_PATH}\"\n+        export CROSS_LIBRARY_PATH=\"${CROSS_GCC}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_GCC_LIB}:${CROSS_GLIBC}/lib:${CROSS_GLIBC_STATIC}/lib\"\n+        ;;\n+    *)\n+        exit 1 ;;\n+esac\n+\n+# Sanity check CROSS_*_PATH directories\n+IFS=':' read -ra PATHS <<< \"${CROSS_C_INCLUDE_PATH}:${CROSS_CPLUS_INCLUDE_PATH}:${CROSS_LIBRARY_PATH}\"\n+for p in \"${PATHS[@]}\"; do\n+    if [ ! -d \"$p\" ]; then\n+        echo \"'$p' doesn't exist or isn't a directory... Aborting...\"\n+        exit 1\n+    fi\n+done\n+\n+# Disable Guix ld auto-rpath behavior\n+export GUIX_LD_WRAPPER_DISABLE_RPATH=yes\n+\n+# Make /usr/bin if it doesn't exist\n+[ -e /usr/bin ] || mkdir -p /usr/bin\n+\n+# Symlink file and env to a conventional path\n+[ -e /usr/bin/file ] || ln -s --no-dereference \"$(command -v file)\" /usr/bin/file\n+[ -e /usr/bin/env ]  || ln -s --no-dereference \"$(command -v env)\"  /usr/bin/env\n+\n+# Determine the correct value for -Wl,--dynamic-linker for the current $HOST\n+case \"$HOST\" in\n+    *linux*)\n+        glibc_dynamic_linker=$(\n+            case \"$HOST\" in\n+                i686-linux-gnu)      echo /lib/ld-linux.so.2 ;;\n+                x86_64-linux-gnu)    echo /lib64/ld-linux-x86-64.so.2 ;;\n+                arm-linux-gnueabihf) echo /lib/ld-linux-armhf.so.3 ;;\n+                aarch64-linux-gnu)   echo /lib/ld-linux-aarch64.so.1 ;;\n+                riscv64-linux-gnu)   echo /lib/ld-linux-riscv64-lp64d.so.1 ;;\n+                *)                   exit 1 ;;\n+            esac\n+        )\n+        ;;\n+esac\n+\n+# Environment variables for determinism\n+export QT_RCC_TEST=1\n+export QT_RCC_SOURCE_DATE_OVERRIDE=1\n+export TAR_OPTIONS=\"--owner=0 --group=0 --numeric-owner --mtime='@${SOURCE_DATE_EPOCH}' --sort=name\"\n+export TZ=\"UTC\"\n+\n+####################\n+# Depends Building #\n+####################\n+\n+# Build the depends tree, overriding variables that assume multilib gcc\n+make -C depends --jobs=\"$MAX_JOBS\" HOST=\"$HOST\" \\\n+                                   ${V:+V=1} \\\n+                                   ${SOURCES_PATH+SOURCES_PATH=\"$SOURCES_PATH\"} \\\n+                                   i686_linux_CC=i686-linux-gnu-gcc \\\n+                                   i686_linux_CXX=i686-linux-gnu-g++ \\\n+                                   i686_linux_AR=i686-linux-gnu-ar \\\n+                                   i686_linux_RANLIB=i686-linux-gnu-ranlib \\\n+                                   i686_linux_NM=i686-linux-gnu-nm \\\n+                                   i686_linux_STRIP=i686-linux-gnu-strip \\\n+                                   x86_64_linux_CC=x86_64-linux-gnu-gcc \\\n+                                   x86_64_linux_CXX=x86_64-linux-gnu-g++ \\\n+                                   x86_64_linux_AR=x86_64-linux-gnu-ar \\\n+                                   x86_64_linux_RANLIB=x86_64-linux-gnu-ranlib \\\n+                                   x86_64_linux_NM=x86_64-linux-gnu-nm \\\n+                                   x86_64_linux_STRIP=x86_64-linux-gnu-strip \\\n+                                   qt_config_opts_i686_linux='-platform linux-g++ -xplatform bitcoin-linux-g++'\n+\n+\n+###########################\n+# Source Tarball Building #\n+###########################\n+\n+# Define DISTNAME variable.\n+# shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n+source contrib/gitian-descriptors/assign_DISTNAME\n+\n+GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n+\n+# Create the source tarball if not already there\n+if [ ! -e \"$GIT_ARCHIVE\" ]; then\n+    mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n+    git archive --output=\"$GIT_ARCHIVE\" HEAD\n+fi\n+\n+###########################\n+# Binary Tarball Building #\n+###########################\n+\n+# CONFIGFLAGS\n+CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n+case \"$HOST\" in\n+    *linux*) CONFIGFLAGS+=\" --enable-glibc-back-compat\" ;;\n+esac\n+\n+# CFLAGS\n+HOST_CFLAGS=\"-O2 -g\"\n+case \"$HOST\" in\n+    *linux*)  HOST_CFLAGS+=\" -ffile-prefix-map=${PWD}=.\" ;;\n+    *mingw*)  HOST_CFLAGS+=\" -fno-ident\" ;;\n+esac\n+\n+# CXXFLAGS\n+HOST_CXXFLAGS=\"$HOST_CFLAGS\"\n+\n+# LDFLAGS\n+case \"$HOST\" in\n+    *linux*)  HOST_LDFLAGS=\"-Wl,--as-needed -Wl,--dynamic-linker=$glibc_dynamic_linker -static-libstdc++ -Wl,-O2\" ;;\n+    *mingw*)  HOST_LDFLAGS=\"-Wl,--no-insert-timestamp\" ;;\n+esac\n+\n+# Make $HOST-specific native binaries from depends available in $PATH\n+export PATH=\"${BASEPREFIX}/${HOST}/native/bin:${PATH}\"\n+(\n+    cd \"$DISTSRC\"\n+\n+    # Extract the source tarball\n+    tar -xf \"${GIT_ARCHIVE}\"\n+\n+    ./autogen.sh\n+\n+    # Configure this DISTSRC for $HOST\n+    # shellcheck disable=SC2086\n+    env CONFIG_SITE=\"${BASEPREFIX}/${HOST}/share/config.site\" \\\n+        ./configure --prefix=/ \\\n+                    --disable-ccache \\\n+                    --disable-maintainer-mode \\\n+                    --disable-dependency-tracking \\\n+                    ${CONFIGFLAGS} \\\n+                    CFLAGS=\"${HOST_CFLAGS}\" \\\n+                    CXXFLAGS=\"${HOST_CXXFLAGS}\" \\\n+                    ${HOST_LDFLAGS:+LDFLAGS=\"${HOST_LDFLAGS}\"}\n+\n+    sed -i.old 's/-lstdc++ //g' config.status libtool src/univalue/config.status src/univalue/libtool\n+\n+    # Build Bitcoin Core\n+    make --jobs=\"$MAX_JOBS\" ${V:+V=1}\n+\n+    # Perform basic ELF security checks on a series of executables.\n+    make -C src --jobs=1 check-security ${V:+V=1}\n+\n+    case \"$HOST\" in\n+        *linux*|*mingw*)\n+            # Check that executables only contain allowed gcc, glibc and libstdc++\n+            # version symbols for Linux distro back-compatibility.\n+            make -C src --jobs=1 check-symbols  ${V:+V=1}\n+            ;;\n+    esac\n+\n+    # Make the os-specific installers\n+    case \"$HOST\" in\n+        *mingw*)\n+            make deploy ${V:+V=1} BITCOIN_WIN_INSTALLER=\"${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe\"\n+            ;;\n+    esac\n+\n+    # Setup the directory where our Bitcoin Core build for HOST will be\n+    # installed. This directory will also later serve as the input for our\n+    # binary tarballs.\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n+    mkdir -p \"${INSTALLPATH}\"\n+    # Install built Bitcoin Core to $INSTALLPATH\n+    make install DESTDIR=\"${INSTALLPATH}\" ${V:+V=1}\n+\n+    (\n+        cd installed\n+\n+        case \"$HOST\" in\n+            *mingw*)\n+                mv --target-directory=\"$DISTNAME\"/lib/ \"$DISTNAME\"/bin/*.dll\n+                ;;\n+        esac\n+\n+        # Prune libtool and object archives\n+        find . -name \"lib*.la\" -delete\n+        find . -name \"lib*.a\" -delete\n+\n+        # Prune pkg-config files\n+        rm -r \"${DISTNAME}/lib/pkgconfig\"\n+\n+        # Split binaries and libraries from their debug symbols\n+        {\n+            find \"${DISTNAME}/bin\" -type f -executable -print0\n+            find \"${DISTNAME}/lib\" -type f -print0\n+        } | xargs -0 -n1 -P\"$MAX_JOBS\" -I{} \"${DISTSRC}/contrib/devtools/split-debug.sh\" {} {} {}.dbg\n+\n+        case \"$HOST\" in\n+            *mingw*)\n+                cp \"${DISTSRC}/doc/README_windows.txt\" \"${DISTNAME}/readme.txt\"\n+                ;;\n+            *linux*)\n+                cp \"${DISTSRC}/README.md\" \"${DISTNAME}/\"\n+                ;;\n+        esac\n+\n+        # Finally, deterministically produce {non-,}debug binary tarballs ready\n+        # for release\n+        case \"$HOST\" in\n+            *mingw*)\n+                find \"${DISTNAME}\" -not -name \"*.dbg\" -print0 \\\n+                    | xargs -0r touch --no-dereference --date=\"@${SOURCE_DATE_EPOCH}\"\n+                find \"${DISTNAME}\" -not -name \"*.dbg\" \\\n+                    | sort \\\n+                    | zip -X@ \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-w64-mingw32/win64}.zip\" \\\n+                    || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-w64-mingw32/win64}.zip\" && exit 1 )\n+                find \"${DISTNAME}\" -name \"*.dbg\" -print0 \\\n+                    | xargs -0r touch --no-dereference --date=\"@${SOURCE_DATE_EPOCH}\"\n+                find \"${DISTNAME}\" -name \"*.dbg\" \\\n+                    | sort \\\n+                    | zip -X@ \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-w64-mingw32/win64}-debug.zip\" \\\n+                    || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-w64-mingw32/win64}-debug.zip\" && exit 1 )\n+                ;;\n+            *linux*)\n+                find \"${DISTNAME}\" -not -name \"*.dbg\" -print0 \\\n+                    | sort --zero-terminated \\\n+                    | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n+                    | gzip -9n > \"${OUTDIR}/${DISTNAME}-${HOST}.tar.gz\" \\\n+                    || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST}.tar.gz\" && exit 1 )\n+                find \"${DISTNAME}\" -name \"*.dbg\" -print0 \\\n+                    | sort --zero-terminated \\\n+                    | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n+                    | gzip -9n > \"${OUTDIR}/${DISTNAME}-${HOST}-debug.tar.gz\" \\\n+                    || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST}-debug.tar.gz\" && exit 1 )\n+                ;;\n+        esac\n+    )\n+)\n+\n+case \"$HOST\" in\n+    *mingw*)\n+        cp -rf --target-directory=. contrib/windeploy\n+        (\n+            cd ./windeploy\n+            mkdir unsigned\n+            cp --target-directory=unsigned/ \"${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe\"\n+            find . -print0 \\\n+                | sort --zero-terminated \\\n+                | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n+                | gzip -9n > \"${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\" \\\n+                || ( rm -f \"${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\" && exit 1 )\n+        )\n+        ;;\n+esac"
      },
      {
        "sha": "5e011ea1848982e5ce5e2073ff28443b15d4f39c",
        "filename": "contrib/guix/manifest.scm",
        "status": "added",
        "additions": 198,
        "deletions": 0,
        "changes": 198,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/guix/manifest.scm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/guix/manifest.scm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/manifest.scm?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,198 @@\n+(use-modules (gnu)\n+             (gnu packages)\n+             (gnu packages autotools)\n+             (gnu packages base)\n+             (gnu packages bash)\n+             (gnu packages check)\n+             (gnu packages commencement)\n+             (gnu packages compression)\n+             (gnu packages cross-base)\n+             (gnu packages file)\n+             (gnu packages gawk)\n+             (gnu packages gcc)\n+             (gnu packages installers)\n+             (gnu packages linux)\n+             (gnu packages mingw)\n+             (gnu packages perl)\n+             (gnu packages pkg-config)\n+             (gnu packages python)\n+             (gnu packages shells)\n+             (gnu packages version-control)\n+             (guix build-system gnu)\n+             (guix build-system trivial)\n+             (guix gexp)\n+             (guix packages)\n+             (guix profiles)\n+             (guix utils))\n+\n+(define (make-ssp-fixed-gcc xgcc)\n+  \"Given a XGCC package, return a modified package that uses the SSP function\n+from glibc instead of from libssp.so. Our `symbol-check' script will complain if\n+we link against libssp.so, and thus will ensure that this works properly.\n+\n+Taken from:\n+http://www.linuxfromscratch.org/hlfs/view/development/chapter05/gcc-pass1.html\"\n+  (package\n+   (inherit xgcc)\n+   (arguments\n+    (substitute-keyword-arguments (package-arguments xgcc)\n+      ((#:make-flags flags)\n+       `(cons \"gcc_cv_libc_provides_ssp=yes\" ,flags))))))\n+\n+(define (make-gcc-rpath-link xgcc)\n+  \"Given a XGCC package, return a modified package that replace each instance of\n+-rpath in the default system spec that's inserted by Guix with -rpath-link\"\n+  (package\n+   (inherit xgcc)\n+   (arguments\n+    (substitute-keyword-arguments (package-arguments xgcc)\n+      ((#:phases phases)\n+       `(modify-phases ,phases\n+          (add-after 'pre-configure 'replace-rpath-with-rpath-link\n+            (lambda _\n+              (substitute* (cons \"gcc/config/rs6000/sysv4.h\"\n+                                 (find-files \"gcc/config\"\n+                                             \"^gnu-user.*\\\\.h$\"))\n+                ((\"-rpath=\") \"-rpath-link=\"))\n+              #t))))))))\n+\n+(define (make-cross-toolchain target\n+                              base-gcc-for-libc\n+                              base-kernel-headers\n+                              base-libc\n+                              base-gcc)\n+  \"Create a cross-compilation toolchain package for TARGET\"\n+  (let* ((xbinutils (cross-binutils target))\n+         ;; 1. Build a cross-compiling gcc without targeting any libc, derived\n+         ;; from BASE-GCC-FOR-LIBC\n+         (xgcc-sans-libc (cross-gcc target\n+                                    #:xgcc base-gcc-for-libc\n+                                    #:xbinutils xbinutils))\n+         ;; 2. Build cross-compiled kernel headers with XGCC-SANS-LIBC, derived\n+         ;; from BASE-KERNEL-HEADERS\n+         (xkernel (cross-kernel-headers target\n+                                        base-kernel-headers\n+                                        xgcc-sans-libc\n+                                        xbinutils))\n+         ;; 3. Build a cross-compiled libc with XGCC-SANS-LIBC and XKERNEL,\n+         ;; derived from BASE-LIBC\n+         (xlibc (cross-libc target\n+                            base-libc\n+                            xgcc-sans-libc\n+                            xbinutils\n+                            xkernel))\n+         ;; 4. Build a cross-compiling gcc targeting XLIBC, derived from\n+         ;; BASE-GCC\n+         (xgcc (cross-gcc target\n+                          #:xgcc base-gcc\n+                          #:xbinutils xbinutils\n+                          #:libc xlibc)))\n+    ;; Define a meta-package that propagates the resulting XBINUTILS, XLIBC, and\n+    ;; XGCC\n+    (package\n+      (name (string-append target \"-toolchain\"))\n+      (version (package-version xgcc))\n+      (source #f)\n+      (build-system trivial-build-system)\n+      (arguments '(#:builder (begin (mkdir %output) #t)))\n+      (propagated-inputs\n+       `((\"binutils\" ,xbinutils)\n+         (\"libc\" ,xlibc)\n+         (\"libc:static\" ,xlibc \"static\")\n+         (\"gcc\" ,xgcc)))\n+      (synopsis (string-append \"Complete GCC tool chain for \" target))\n+      (description (string-append \"This package provides a complete GCC tool\n+chain for \" target \" development.\"))\n+      (home-page (package-home-page xgcc))\n+      (license (package-license xgcc)))))\n+\n+(define* (make-bitcoin-cross-toolchain target\n+                                  #:key\n+                                  (base-gcc-for-libc gcc-5)\n+                                  (base-kernel-headers linux-libre-headers-4.19)\n+                                  (base-libc glibc-2.27)\n+                                  (base-gcc (make-gcc-rpath-link gcc-9)))\n+  \"Convenience wrapper around MAKE-CROSS-TOOLCHAIN with default values\n+desirable for building Bitcoin Core release binaries.\"\n+  (make-cross-toolchain target\n+                   base-gcc-for-libc\n+                   base-kernel-headers\n+                   base-libc\n+                   base-gcc))\n+\n+(define (make-gcc-with-pthreads gcc)\n+  (package-with-extra-configure-variable gcc \"--enable-threads\" \"posix\"))\n+\n+(define (make-mingw-pthreads-cross-toolchain target)\n+  \"Create a cross-compilation toolchain package for TARGET\"\n+  (let* ((xbinutils (cross-binutils target))\n+         (pthreads-xlibc mingw-w64-x86_64-winpthreads)\n+         (pthreads-xgcc (make-gcc-with-pthreads\n+                         (cross-gcc target\n+                                    #:xgcc (make-ssp-fixed-gcc gcc-9)\n+                                    #:xbinutils xbinutils\n+                                    #:libc pthreads-xlibc))))\n+    ;; Define a meta-package that propagates the resulting XBINUTILS, XLIBC, and\n+    ;; XGCC\n+    (package\n+      (name (string-append target \"-posix-toolchain\"))\n+      (version (package-version pthreads-xgcc))\n+      (source #f)\n+      (build-system trivial-build-system)\n+      (arguments '(#:builder (begin (mkdir %output) #t)))\n+      (propagated-inputs\n+       `((\"binutils\" ,xbinutils)\n+         (\"libc\" ,pthreads-xlibc)\n+         (\"gcc\" ,pthreads-xgcc)))\n+      (synopsis (string-append \"Complete GCC tool chain for \" target))\n+      (description (string-append \"This package provides a complete GCC tool\n+chain for \" target \" development.\"))\n+      (home-page (package-home-page pthreads-xgcc))\n+      (license (package-license pthreads-xgcc)))))\n+\n+\n+(packages->manifest\n+ (append\n+  (list ;; The Basics\n+        bash-minimal\n+        which\n+        coreutils\n+        util-linux\n+        ;; File(system) inspection\n+        file\n+        grep\n+        diffutils\n+        findutils\n+        ;; File transformation\n+        patch\n+        gawk\n+        sed\n+        ;; Compression and archiving\n+        tar\n+        bzip2\n+        gzip\n+        xz\n+        zlib\n+        ;; Build tools\n+        gnu-make\n+        libtool\n+        autoconf\n+        automake\n+        pkg-config\n+        ;; Scripting\n+        perl\n+        python-3.7\n+        ;; Git\n+        git\n+        ;; Native gcc 9 toolchain targeting glibc 2.27\n+        (make-gcc-toolchain gcc-9 glibc-2.27))\n+  (let ((target (getenv \"HOST\")))\n+    (cond ((string-suffix? \"-mingw32\" target)\n+           ;; Windows\n+           (list zip (make-mingw-pthreads-cross-toolchain \"x86_64-w64-mingw32\") nsis-x86_64))\n+          ((string-contains target \"riscv64-linux-\")\n+           (list (make-bitcoin-cross-toolchain \"riscv64-linux-gnu\"\n+                                               #:base-gcc-for-libc gcc-7)))\n+          ((string-contains target \"-linux-\")\n+           (list (make-bitcoin-cross-toolchain target)))\n+          (else '())))))"
      },
      {
        "sha": "306a37f75ab7018b0ce015064a7ae0159fd6e015",
        "filename": "contrib/init/README.md",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,12 @@\n+Sample configuration files for:\n+```\n+SystemD: bitcoind.service\n+Upstart: bitcoind.conf\n+OpenRC:  bitcoind.openrc\n+         bitcoind.openrcconf\n+CentOS:  bitcoind.init\n+macOS:   org.bitcoin.bitcoind.plist\n+```\n+have been made available to assist packagers in creating node packages here.\n+\n+See doc/init.md for more information."
      },
      {
        "sha": "dde1bd0c4d16b7eede11a741b72777a47e0962c7",
        "filename": "contrib/init/bitcoind.conf",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/init/bitcoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/init/bitcoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.conf?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,65 @@\n+description \"Bitcoin Core Daemon\"\n+\n+start on runlevel [2345]\n+stop on starting rc RUNLEVEL=[016]\n+\n+env BITCOIND_BIN=\"/usr/bin/bitcoind\"\n+env BITCOIND_USER=\"bitcoin\"\n+env BITCOIND_GROUP=\"bitcoin\"\n+env BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n+# upstart can't handle variables constructed with other variables\n+env BITCOIND_PIDFILE=\"/var/run/bitcoind/bitcoind.pid\"\n+env BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n+env BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n+\n+expect fork\n+\n+respawn\n+respawn limit 5 120\n+kill timeout 600\n+\n+pre-start script\n+    # this will catch non-existent config files\n+    # bitcoind will check and exit with this very warning, but it can do so\n+    # long after forking, leaving upstart to think everything started fine.\n+    # since this is a commonly encountered case on install, just check and\n+    # warn here.\n+    if ! grep -qs '^rpcpassword=' \"$BITCOIND_CONFIGFILE\" ; then\n+        echo \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n+        echo \"The setting must appear in $BITCOIND_CONFIGFILE\"\n+        echo\n+        echo \"This password is security critical to securing wallets \"\n+        echo \"and must not be the same as the rpcuser setting.\"\n+        echo \"You can generate a suitable random password using the following \"\n+        echo \"command from the shell:\"\n+        echo\n+        echo \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n+        echo\n+        echo \"It is recommended that you also set alertnotify so you are \"\n+        echo \"notified of problems:\"\n+        echo\n+        echo \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n+            \"admin@foo.com\"\n+        echo\n+        exit 1\n+    fi\n+\n+    mkdir -p \"$BITCOIND_PIDDIR\"\n+    chmod 0755 \"$BITCOIND_PIDDIR\"\n+    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_PIDDIR\"\n+    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_CONFIGFILE\"\n+    chmod 0660 \"$BITCOIND_CONFIGFILE\"\n+end script\n+\n+exec start-stop-daemon \\\n+    --start \\\n+    --pidfile \"$BITCOIND_PIDFILE\" \\\n+    --chuid $BITCOIND_USER:$BITCOIND_GROUP \\\n+    --exec \"$BITCOIND_BIN\" \\\n+    -- \\\n+    -pid=\"$BITCOIND_PIDFILE\" \\\n+    -conf=\"$BITCOIND_CONFIGFILE\" \\\n+    -datadir=\"$BITCOIND_DATADIR\" \\\n+    -disablewallet \\\n+    -daemon\n+"
      },
      {
        "sha": "19e1f76d094ce4a17f883fca9bd2b8d12d0f6e8c",
        "filename": "contrib/init/bitcoind.init",
        "status": "added",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/init/bitcoind.init",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/init/bitcoind.init",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.init?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,67 @@\n+#!/usr/bin/env bash\n+#\n+#  bitcoind The bitcoin core server.\n+#\n+#\n+# chkconfig: 345 80 20\n+# description: bitcoind\n+# processname: bitcoind\n+#\n+\n+# Source function library.\n+. /etc/init.d/functions\n+\n+# you can override defaults in /etc/sysconfig/bitcoind, see below\n+if [ -f /etc/sysconfig/bitcoind ]; then\n+        . /etc/sysconfig/bitcoind\n+fi\n+\n+RETVAL=0\n+\n+prog=bitcoind\n+# you can override the lockfile via BITCOIND_LOCKFILE in /etc/sysconfig/bitcoind\n+lockfile=${BITCOIND_LOCKFILE-/var/lock/subsys/bitcoind}\n+\n+# bitcoind defaults to /usr/bin/bitcoind, override with BITCOIND_BIN\n+bitcoind=${BITCOIND_BIN-/usr/bin/bitcoind}\n+\n+# bitcoind opts default to -disablewallet, override with BITCOIND_OPTS\n+bitcoind_opts=${BITCOIND_OPTS--disablewallet}\n+\n+start() {\n+    echo -n $\"Starting $prog: \"\n+    daemon $DAEMONOPTS $bitcoind $bitcoind_opts\n+    RETVAL=$?\n+    echo\n+    [ $RETVAL -eq 0 ] && touch $lockfile\n+    return $RETVAL\n+}\n+\n+stop() {\n+    echo -n $\"Stopping $prog: \"\n+    killproc $prog -t600\n+    RETVAL=$?\n+    echo\n+    [ $RETVAL -eq 0 ] && rm -f $lockfile\n+    return $RETVAL\n+}\n+\n+case \"$1\" in\n+    start)\n+        start\n+        ;;\n+    stop)\n+        stop\n+        ;;\n+    status)\n+        status $prog\n+        ;;\n+    restart)\n+        stop\n+        start\n+        ;;\n+    *)\n+        echo \"Usage: service $prog {start|stop|status|restart}\"\n+        exit 1\n+        ;;\n+esac"
      },
      {
        "sha": "86222295dbe052a5c6455e80dcf830161dccc05f",
        "filename": "contrib/init/bitcoind.openrc",
        "status": "added",
        "additions": 92,
        "deletions": 0,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/init/bitcoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/init/bitcoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrc?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,92 @@\n+#!/sbin/openrc-run\n+\n+# backward compatibility for existing gentoo layout \n+#\n+if [ -d \"/var/lib/bitcoin/.bitcoin\" ]; then\n+\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoin/.bitcoin\"\n+else\n+\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoind\"\n+fi\n+\n+BITCOIND_CONFIGFILE=${BITCOIND_CONFIGFILE:-/etc/bitcoin/bitcoin.conf}\n+BITCOIND_PIDDIR=${BITCOIND_PIDDIR:-/var/run/bitcoind}\n+BITCOIND_PIDFILE=${BITCOIND_PIDFILE:-${BITCOIND_PIDDIR}/bitcoind.pid}\n+BITCOIND_DATADIR=${BITCOIND_DATADIR:-${BITCOIND_DEFAULT_DATADIR}}\n+BITCOIND_USER=${BITCOIND_USER:-${BITCOIN_USER:-bitcoin}}\n+BITCOIND_GROUP=${BITCOIND_GROUP:-bitcoin}\n+BITCOIND_BIN=${BITCOIND_BIN:-/usr/bin/bitcoind}\n+BITCOIND_NICE=${BITCOIND_NICE:-${NICELEVEL:-0}}\n+BITCOIND_OPTS=\"${BITCOIND_OPTS:-${BITCOIN_OPTS}}\"\n+\n+name=\"Bitcoin Core Daemon\"\n+description=\"Bitcoin cryptocurrency P2P network daemon\"\n+\n+command=\"/usr/bin/bitcoind\"\n+command_args=\"-pid=\\\"${BITCOIND_PIDFILE}\\\" \\\n+\t\t-conf=\\\"${BITCOIND_CONFIGFILE}\\\" \\\n+\t\t-datadir=\\\"${BITCOIND_DATADIR}\\\" \\\n+\t\t-daemon \\\n+\t\t${BITCOIND_OPTS}\"\n+\n+required_files=\"${BITCOIND_CONFIGFILE}\"\n+start_stop_daemon_args=\"-u ${BITCOIND_USER} \\\n+\t\t\t-N ${BITCOIND_NICE} -w 2000\"\n+pidfile=\"${BITCOIND_PIDFILE}\"\n+\n+# The retry schedule to use when stopping the daemon. Could be either\n+# a timeout in seconds or multiple signal/timeout pairs (like\n+# \"SIGKILL/180 SIGTERM/300\")\n+retry=\"${BITCOIND_SIGTERM_TIMEOUT}\"\n+\n+depend() {\n+\tneed localmount net\n+}\n+\n+# verify\n+# 1) that the datadir exists and is writable (or create it)\n+# 2) that a directory for the pid exists and is writable\n+# 3) ownership and permissions on the config file\n+start_pre() {\n+\tcheckpath \\\n+\t-d \\\n+\t--mode 0750 \\\n+\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n+\t\"${BITCOIND_DATADIR}\"\n+\n+\tcheckpath \\\n+\t-d \\\n+\t--mode 0755 \\\n+\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n+\t\"${BITCOIND_PIDDIR}\"\n+\n+\tcheckpath -f \\\n+\t-o ${BITCOIND_USER}:${BITCOIND_GROUP} \\\n+\t-m 0660 \\\n+\t${BITCOIND_CONFIGFILE}\n+\n+\tcheckconfig || return 1\n+}\n+\n+checkconfig()\n+{\n+\tif ! grep -qs '^rpcpassword=' \"${BITCOIND_CONFIGFILE}\" ; then\n+\t\teerror \"\"\n+\t\teerror \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n+\t\teerror \"The setting must appear in ${BITCOIND_CONFIGFILE}\"\n+\t\teerror \"\"\n+\t\teerror \"This password is security critical to securing wallets \"\n+\t\teerror \"and must not be the same as the rpcuser setting.\"\n+\t\teerror \"You can generate a suitable random password using the following \"\n+\t\teerror \"command from the shell:\"\n+\t\teerror \"\"\n+\t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n+\t\teerror \"\"\n+\t\teerror \"It is recommended that you also set alertnotify so you are \"\n+\t\teerror \"notified of problems:\"\n+\t\teerror \"\"\n+\t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n+\t\t\t\"admin@foo.com\"\n+\t\teerror \"\"\n+\t\treturn 1\n+\tfi\n+}"
      },
      {
        "sha": "c8a22a08d92419a16f251d1c2b357ca371f68fe5",
        "filename": "contrib/init/bitcoind.openrcconf",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/init/bitcoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/init/bitcoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrcconf?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,33 @@\n+# /etc/conf.d/bitcoind: config file for /etc/init.d/bitcoind\n+\n+# Config file location\n+#BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n+\n+# What directory to write pidfile to?  (created and owned by $BITCOIND_USER)\n+#BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n+\n+# What filename to give the pidfile\n+#BITCOIND_PIDFILE=\"${BITCOIND_PIDDIR}/bitcoind.pid\"\n+\n+# Where to write bitcoind data (be mindful that the blockchain is large)\n+#BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n+\n+# User and group to own bitcoind process\n+#BITCOIND_USER=\"bitcoin\"\n+#BITCOIND_GROUP=\"bitcoin\"\n+\n+# Path to bitcoind executable\n+#BITCOIND_BIN=\"/usr/bin/bitcoind\"\n+\n+# Nice value to run bitcoind under\n+#BITCOIND_NICE=0\n+\n+# Additional options (avoid -conf and -datadir, use flags above)\n+#BITCOIND_OPTS=\"\"\n+\n+# The timeout in seconds OpenRC will wait for bitcoind to terminate\n+# after a SIGTERM has been raised.\n+# Note that this will be mapped as argument to start-stop-daemon's\n+# '--retry' option, which means you can specify a retry schedule\n+# here. For more information see man 8 start-stop-daemon.\n+BITCOIND_SIGTERM_TIMEOUT=600"
      },
      {
        "sha": "8b308644b10611ae4e558e08aa003a3a2e1ad370",
        "filename": "contrib/init/bitcoind.service",
        "status": "added",
        "additions": 77,
        "deletions": 0,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/init/bitcoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/init/bitcoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.service?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,77 @@\n+# It is not recommended to modify this file in-place, because it will\n+# be overwritten during package upgrades. If you want to add further\n+# options or overwrite existing ones then use\n+# $ systemctl edit bitcoind.service\n+# See \"man systemd.service\" for details.\n+\n+# Note that almost all daemon options could be specified in\n+# /etc/bitcoin/bitcoin.conf, but keep in mind those explicitly\n+# specified as arguments in ExecStart= will override those in the\n+# config file.\n+\n+[Unit]\n+Description=Bitcoin daemon\n+After=network.target\n+\n+[Service]\n+ExecStart=/usr/bin/bitcoind -daemon \\\n+                            -pid=/run/bitcoind/bitcoind.pid \\\n+                            -conf=/etc/bitcoin/bitcoin.conf \\\n+                            -datadir=/var/lib/bitcoind\n+\n+# Make sure the config directory is readable by the service user\n+PermissionsStartOnly=true\n+ExecStartPre=/bin/chgrp bitcoin /etc/bitcoin\n+\n+# Process management\n+####################\n+\n+Type=forking\n+PIDFile=/run/bitcoind/bitcoind.pid\n+Restart=on-failure\n+TimeoutStopSec=600\n+\n+# Directory creation and permissions\n+####################################\n+\n+# Run as bitcoin:bitcoin\n+User=bitcoin\n+Group=bitcoin\n+\n+# /run/bitcoind\n+RuntimeDirectory=bitcoind\n+RuntimeDirectoryMode=0710\n+\n+# /etc/bitcoin\n+ConfigurationDirectory=bitcoin\n+ConfigurationDirectoryMode=0710\n+\n+# /var/lib/bitcoind\n+StateDirectory=bitcoind\n+StateDirectoryMode=0710\n+\n+# Hardening measures\n+####################\n+\n+# Provide a private /tmp and /var/tmp.\n+PrivateTmp=true\n+\n+# Mount /usr, /boot/ and /etc read-only for the process.\n+ProtectSystem=full\n+\n+# Deny access to /home, /root and /run/user\n+ProtectHome=true\n+\n+# Disallow the process and all of its children to gain\n+# new privileges through execve().\n+NoNewPrivileges=true\n+\n+# Use a new /dev namespace only populated with API pseudo devices\n+# such as /dev/null, /dev/zero and /dev/random.\n+PrivateDevices=true\n+\n+# Deny the creation of writable and executable memory mappings.\n+MemoryDenyWriteExecute=true\n+\n+[Install]\n+WantedBy=multi-user.target"
      },
      {
        "sha": "e9130a21ded67cbb3a9811f2a27a6affe46d3634",
        "filename": "contrib/install_db4.sh",
        "status": "added",
        "additions": 106,
        "deletions": 0,
        "changes": 106,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/install_db4.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/install_db4.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/install_db4.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,106 @@\n+#!/bin/sh\n+# Copyright (c) 2017-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Install libdb4.8 (Berkeley DB).\n+\n+export LC_ALL=C\n+set -e\n+\n+if [ -z \"${1}\" ]; then\n+  echo \"Usage: $0 <base-dir> [<extra-bdb-configure-flag> ...]\"\n+  echo\n+  echo \"Must specify a single argument: the directory in which db4 will be built.\"\n+  echo \"This is probably \\`pwd\\` if you're at the root of the bitcoin repository.\"\n+  exit 1\n+fi\n+\n+expand_path() {\n+  cd \"${1}\" && pwd -P\n+}\n+\n+BDB_PREFIX=\"$(expand_path ${1})/db4\"; shift;\n+BDB_VERSION='db-4.8.30.NC'\n+BDB_HASH='12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef'\n+BDB_URL=\"https://download.oracle.com/berkeley-db/${BDB_VERSION}.tar.gz\"\n+\n+check_exists() {\n+  command -v \"$1\" >/dev/null\n+}\n+\n+sha256_check() {\n+  # Args: <sha256_hash> <filename>\n+  #\n+  if check_exists sha256sum; then\n+    echo \"${1}  ${2}\" | sha256sum -c\n+  elif check_exists sha256; then\n+    if [ \"$(uname)\" = \"FreeBSD\" ]; then\n+      sha256 -c \"${1}\" \"${2}\"\n+    else\n+      echo \"${1}  ${2}\" | sha256 -c\n+    fi\n+  else\n+    echo \"${1}  ${2}\" | shasum -a 256 -c\n+  fi\n+}\n+\n+http_get() {\n+  # Args: <url> <filename> <sha256_hash>\n+  #\n+  # It's acceptable that we don't require SSL here because we manually verify\n+  # content hashes below.\n+  #\n+  if [ -f \"${2}\" ]; then\n+    echo \"File ${2} already exists; not downloading again\"\n+  elif check_exists curl; then\n+    curl --insecure --retry 5 \"${1}\" -o \"${2}\"\n+  else\n+    wget --no-check-certificate \"${1}\" -O \"${2}\"\n+  fi\n+\n+  sha256_check \"${3}\" \"${2}\"\n+}\n+\n+mkdir -p \"${BDB_PREFIX}\"\n+http_get \"${BDB_URL}\" \"${BDB_VERSION}.tar.gz\" \"${BDB_HASH}\"\n+tar -xzvf ${BDB_VERSION}.tar.gz -C \"$BDB_PREFIX\"\n+cd \"${BDB_PREFIX}/${BDB_VERSION}/\"\n+\n+# Apply a patch necessary when building with clang and c++11 (see https://community.oracle.com/thread/3952592)\n+CLANG_CXX11_PATCH_URL='https://gist.githubusercontent.com/LnL7/5153b251fd525fe15de69b67e63a6075/raw/7778e9364679093a32dec2908656738e16b6bdcb/clang.patch'\n+CLANG_CXX11_PATCH_HASH='7a9a47b03fd5fb93a16ef42235fa9512db9b0829cfc3bdf90edd3ec1f44d637c'\n+http_get \"${CLANG_CXX11_PATCH_URL}\" clang.patch \"${CLANG_CXX11_PATCH_HASH}\"\n+patch -p2 < clang.patch\n+\n+# The packaged config.guess and config.sub are ancient (2009) and can cause build issues.\n+# Replace them with modern versions.\n+# See https://github.com/bitcoin/bitcoin/issues/16064\n+CONFIG_GUESS_URL='https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=55eaf3e779455c4e5cc9f82efb5278be8f8f900b'\n+CONFIG_GUESS_HASH='2d1ff7bca773d2ec3c6217118129220fa72d8adda67c7d2bf79994b3129232c1'\n+CONFIG_SUB_URL='https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=55eaf3e779455c4e5cc9f82efb5278be8f8f900b'\n+CONFIG_SUB_HASH='3a4befde9bcdf0fdb2763fc1bfa74e8696df94e1ad7aac8042d133c8ff1d2e32'\n+\n+rm -f \"dist/config.guess\"\n+rm -f \"dist/config.sub\"\n+\n+http_get \"${CONFIG_GUESS_URL}\" dist/config.guess \"${CONFIG_GUESS_HASH}\"\n+http_get \"${CONFIG_SUB_URL}\" dist/config.sub \"${CONFIG_SUB_HASH}\"\n+\n+cd build_unix/\n+\n+\"${BDB_PREFIX}/${BDB_VERSION}/dist/configure\" \\\n+  --enable-cxx --disable-shared --disable-replication --with-pic --prefix=\"${BDB_PREFIX}\" \\\n+  \"${@}\"\n+\n+make install\n+\n+echo\n+echo \"db4 build complete.\"\n+echo\n+# shellcheck disable=SC2016\n+echo 'When compiling bitcoind, run `./configure` in the following way:'\n+echo\n+echo \"  export BDB_PREFIX='${BDB_PREFIX}'\"\n+# shellcheck disable=SC2016\n+echo '  ./configure BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" ...'"
      },
      {
        "sha": "25a1c7351a297c751d630acd3f97fff6091710c8",
        "filename": "contrib/linearize/README.md",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,54 @@\n+# Linearize\n+Construct a linear, no-fork, best version of the Bitcoin blockchain.\n+\n+## Step 1: Download hash list\n+\n+    $ ./linearize-hashes.py linearize.cfg > hashlist.txt\n+\n+Required configuration file settings for linearize-hashes:\n+* RPC: `datadir` (Required if `rpcuser` and `rpcpassword` are not specified)\n+* RPC: `rpcuser`, `rpcpassword` (Required if `datadir` is not specified)\n+\n+Optional config file setting for linearize-hashes:\n+* RPC: `host`  (Default: `127.0.0.1`)\n+* RPC: `port`  (Default: `8332`)\n+* Blockchain: `min_height`, `max_height`\n+* `rev_hash_bytes`: If true, the written block hash list will be\n+byte-reversed. (In other words, the hash returned by getblockhash will have its\n+bytes reversed.) False by default. Intended for generation of\n+standalone hash lists but safe to use with linearize-data.py, which will output\n+the same data no matter which byte format is chosen.\n+\n+The `linearize-hashes` script requires a connection, local or remote, to a\n+JSON-RPC server. Running `bitcoind` or `bitcoin-qt -server` will be sufficient.\n+\n+## Step 2: Copy local block data\n+\n+    $ ./linearize-data.py linearize.cfg\n+\n+Required configuration file settings:\n+* `output_file`: The file that will contain the final blockchain.\n+      or\n+* `output`: Output directory for linearized `blocks/blkNNNNN.dat` output.\n+\n+Optional config file setting for linearize-data:\n+* `debug_output`: Some printouts may not always be desired. If true, such output\n+will be printed.\n+* `file_timestamp`: Set each file's last-accessed and last-modified times,\n+respectively, to the current time and to the timestamp of the most recent block\n+written to the script's blockchain.\n+* `genesis`: The hash of the genesis block in the blockchain.\n+* `input`: bitcoind blocks/ directory containing blkNNNNN.dat\n+* `hashlist`: text file containing list of block hashes created by\n+linearize-hashes.py.\n+* `max_out_sz`: Maximum size for files created by the `output_file` option.\n+(Default: `1000*1000*1000 bytes`)\n+* `netmagic`: Network magic number.\n+* `out_of_order_cache_sz`: If out-of-order blocks are being read, the block can\n+be written to a cache so that the blockchain doesn't have to be sought again.\n+This option specifies the cache size. (Default: `100*1000*1000 bytes`)\n+* `rev_hash_bytes`: If true, the block hash list written by linearize-hashes.py\n+will be byte-reversed when read by linearize-data.py. See the linearize-hashes\n+entry for more information.\n+* `split_timestamp`: Split blockchain files when a new month is first seen, in\n+addition to reaching a maximum file size (`max_out_sz`)."
      },
      {
        "sha": "5f566261ca6746f15edcf2cf41fb7c46525fa79e",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "added",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,63 @@\n+# bitcoind RPC settings (linearize-hashes)\n+rpcuser=someuser\n+rpcpassword=somepassword\n+#datadir=~/.bitcoin\n+host=127.0.0.1\n+\n+#mainnet default\n+port=8332\n+\n+#testnet default\n+#port=18332\n+\n+#regtest default\n+#port=18443\n+\n+#signet default\n+#port=38332\n+\n+# bootstrap.dat hashlist settings (linearize-hashes)\n+max_height=313000\n+\n+# bootstrap.dat input/output settings (linearize-data)\n+\n+# mainnet\n+netmagic=f9beb4d9\n+genesis=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n+input=/home/example/.bitcoin/blocks\n+\n+# testnet\n+#netmagic=0b110907\n+#genesis=000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\n+#input=/home/example/.bitcoin/testnet3/blocks\n+\n+# regtest\n+#netmagic=fabfb5da\n+#genesis=0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\n+#input=/home/example/.bitcoin/regtest/blocks\n+\n+# signet\n+#netmagic=0a03cf40\n+#genesis=00000008819873e925422c1ff0f99f7cc9bbb232af63a077a480a3633bee1ef6\n+#input=/home/example/.bitcoin/signet/blocks\n+\n+# \"output\" option causes blockchain files to be written to the given location,\n+# with \"output_file\" ignored. If not used, \"output_file\" is used instead.\n+# output=/home/example/blockchain_directory\n+output_file=/home/example/Downloads/bootstrap.dat\n+hashlist=hashlist.txt\n+\n+# Maximum size in bytes of out-of-order blocks cache in memory\n+out_of_order_cache_sz = 100000000\n+\n+# Do we want the reverse the hash bytes coming from getblockhash?\n+rev_hash_bytes = False\n+\n+# On a new month, do we want to set the access and modify times of the new\n+# blockchain file?\n+file_timestamp = 0\n+# Do we want to split the blockchain files given a new month or specific height?\n+split_timestamp = 0\n+\n+# Do we want debug printouts?\n+debug_output = False"
      },
      {
        "sha": "73f54cd4885e0168a900cc3e4663d1790fe1021a",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "added",
        "additions": 350,
        "deletions": 0,
        "changes": 350,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,350 @@\n+#!/usr/bin/env python3\n+#\n+# linearize-data.py: Construct a linear, no-fork version of the chain.\n+#\n+# Copyright (c) 2013-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+import struct\n+import re\n+import os\n+import os.path\n+import sys\n+import hashlib\n+import datetime\n+import time\n+import glob\n+from collections import namedtuple\n+from binascii import unhexlify\n+\n+settings = {}\n+\n+def hex_switchEndian(s):\n+    \"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n+    pairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n+    return b''.join(pairList[::-1]).decode()\n+\n+def uint32(x):\n+    return x & 0xffffffff\n+\n+def bytereverse(x):\n+    return uint32(( ((x) << 24) | (((x) << 8) & 0x00ff0000) |\n+               (((x) >> 8) & 0x0000ff00) | ((x) >> 24) ))\n+\n+def bufreverse(in_buf):\n+    out_words = []\n+    for i in range(0, len(in_buf), 4):\n+        word = struct.unpack('@I', in_buf[i:i+4])[0]\n+        out_words.append(struct.pack('@I', bytereverse(word)))\n+    return b''.join(out_words)\n+\n+def wordreverse(in_buf):\n+    out_words = []\n+    for i in range(0, len(in_buf), 4):\n+        out_words.append(in_buf[i:i+4])\n+    out_words.reverse()\n+    return b''.join(out_words)\n+\n+def calc_hdr_hash(blk_hdr):\n+    hash1 = hashlib.sha256()\n+    hash1.update(blk_hdr)\n+    hash1_o = hash1.digest()\n+\n+    hash2 = hashlib.sha256()\n+    hash2.update(hash1_o)\n+    hash2_o = hash2.digest()\n+\n+    return hash2_o\n+\n+def calc_hash_str(blk_hdr):\n+    hash = calc_hdr_hash(blk_hdr)\n+    hash = bufreverse(hash)\n+    hash = wordreverse(hash)\n+    hash_str = hash.hex()\n+    return hash_str\n+\n+def get_blk_dt(blk_hdr):\n+    members = struct.unpack(\"<I\", blk_hdr[68:68+4])\n+    nTime = members[0]\n+    dt = datetime.datetime.fromtimestamp(nTime)\n+    dt_ym = datetime.datetime(dt.year, dt.month, 1)\n+    return (dt_ym, nTime)\n+\n+# When getting the list of block hashes, undo any byte reversals.\n+def get_block_hashes(settings):\n+    blkindex = []\n+    f = open(settings['hashlist'], \"r\", encoding=\"utf8\")\n+    for line in f:\n+        line = line.rstrip()\n+        if settings['rev_hash_bytes'] == 'true':\n+            line = hex_switchEndian(line)\n+        blkindex.append(line)\n+\n+    print(\"Read \" + str(len(blkindex)) + \" hashes\")\n+\n+    return blkindex\n+\n+# The block map shouldn't give or receive byte-reversed hashes.\n+def mkblockmap(blkindex):\n+    blkmap = {}\n+    for height,hash in enumerate(blkindex):\n+        blkmap[hash] = height\n+    return blkmap\n+\n+# This gets the first block file ID that exists from the input block\n+# file directory.\n+def getFirstBlockFileId(block_dir_path):\n+    # First, this sets up a pattern to search for block files, for\n+    # example 'blkNNNNN.dat'.\n+    blkFilePattern = os.path.join(block_dir_path, \"blk[0-9][0-9][0-9][0-9][0-9].dat\")\n+\n+    # This search is done with glob\n+    blkFnList = glob.glob(blkFilePattern)\n+\n+    if len(blkFnList) == 0:\n+        print(\"blocks not pruned - starting at 0\")\n+        return 0\n+    # We then get the lexicographic minimum, which should be the first\n+    # block file name.\n+    firstBlkFilePath = min(blkFnList)\n+    firstBlkFn = os.path.basename(firstBlkFilePath)\n+\n+    # now, the string should be ['b','l','k','N','N','N','N','N','.','d','a','t']\n+    # So get the ID by choosing:              3   4   5   6   7\n+    # The ID is not necessarily 0 if this is a pruned node.\n+    blkId = int(firstBlkFn[3:8])\n+    return blkId\n+\n+# Block header and extent on disk\n+BlockExtent = namedtuple('BlockExtent', ['fn', 'offset', 'inhdr', 'blkhdr', 'size'])\n+\n+class BlockDataCopier:\n+    def __init__(self, settings, blkindex, blkmap):\n+        self.settings = settings\n+        self.blkindex = blkindex\n+        self.blkmap = blkmap\n+\n+        # Get first occurring block file id - for pruned nodes this\n+        # will not necessarily be 0\n+        self.inFn = getFirstBlockFileId(self.settings['input'])\n+        self.inF = None\n+        self.outFn = 0\n+        self.outsz = 0\n+        self.outF = None\n+        self.outFname = None\n+        self.blkCountIn = 0\n+        self.blkCountOut = 0\n+\n+        self.lastDate = datetime.datetime(2000, 1, 1)\n+        self.highTS = 1408893517 - 315360000\n+        self.timestampSplit = False\n+        self.fileOutput = True\n+        self.setFileTime = False\n+        self.maxOutSz = settings['max_out_sz']\n+        if 'output' in settings:\n+            self.fileOutput = False\n+        if settings['file_timestamp'] != 0:\n+            self.setFileTime = True\n+        if settings['split_timestamp'] != 0:\n+            self.timestampSplit = True\n+        # Extents and cache for out-of-order blocks\n+        self.blockExtents = {}\n+        self.outOfOrderData = {}\n+        self.outOfOrderSize = 0 # running total size for items in outOfOrderData\n+\n+    def writeBlock(self, inhdr, blk_hdr, rawblock):\n+        blockSizeOnDisk = len(inhdr) + len(blk_hdr) + len(rawblock)\n+        if not self.fileOutput and ((self.outsz + blockSizeOnDisk) > self.maxOutSz):\n+            self.outF.close()\n+            if self.setFileTime:\n+                os.utime(self.outFname, (int(time.time()), self.highTS))\n+            self.outF = None\n+            self.outFname = None\n+            self.outFn = self.outFn + 1\n+            self.outsz = 0\n+\n+        (blkDate, blkTS) = get_blk_dt(blk_hdr)\n+        if self.timestampSplit and (blkDate > self.lastDate):\n+            print(\"New month \" + blkDate.strftime(\"%Y-%m\") + \" @ \" + self.hash_str)\n+            self.lastDate = blkDate\n+            if self.outF:\n+                self.outF.close()\n+                if self.setFileTime:\n+                    os.utime(self.outFname, (int(time.time()), self.highTS))\n+                self.outF = None\n+                self.outFname = None\n+                self.outFn = self.outFn + 1\n+                self.outsz = 0\n+\n+        if not self.outF:\n+            if self.fileOutput:\n+                self.outFname = self.settings['output_file']\n+            else:\n+                self.outFname = os.path.join(self.settings['output'], \"blk%05d.dat\" % self.outFn)\n+            print(\"Output file \" + self.outFname)\n+            self.outF = open(self.outFname, \"wb\")\n+\n+        self.outF.write(inhdr)\n+        self.outF.write(blk_hdr)\n+        self.outF.write(rawblock)\n+        self.outsz = self.outsz + len(inhdr) + len(blk_hdr) + len(rawblock)\n+\n+        self.blkCountOut = self.blkCountOut + 1\n+        if blkTS > self.highTS:\n+            self.highTS = blkTS\n+\n+        if (self.blkCountOut % 1000) == 0:\n+            print('%i blocks scanned, %i blocks written (of %i, %.1f%% complete)' %\n+                    (self.blkCountIn, self.blkCountOut, len(self.blkindex), 100.0 * self.blkCountOut / len(self.blkindex)))\n+\n+    def inFileName(self, fn):\n+        return os.path.join(self.settings['input'], \"blk%05d.dat\" % fn)\n+\n+    def fetchBlock(self, extent):\n+        '''Fetch block contents from disk given extents'''\n+        with open(self.inFileName(extent.fn), \"rb\") as f:\n+            f.seek(extent.offset)\n+            return f.read(extent.size)\n+\n+    def copyOneBlock(self):\n+        '''Find the next block to be written in the input, and copy it to the output.'''\n+        extent = self.blockExtents.pop(self.blkCountOut)\n+        if self.blkCountOut in self.outOfOrderData:\n+            # If the data is cached, use it from memory and remove from the cache\n+            rawblock = self.outOfOrderData.pop(self.blkCountOut)\n+            self.outOfOrderSize -= len(rawblock)\n+        else: # Otherwise look up data on disk\n+            rawblock = self.fetchBlock(extent)\n+\n+        self.writeBlock(extent.inhdr, extent.blkhdr, rawblock)\n+\n+    def run(self):\n+        while self.blkCountOut < len(self.blkindex):\n+            if not self.inF:\n+                fname = self.inFileName(self.inFn)\n+                print(\"Input file \" + fname)\n+                try:\n+                    self.inF = open(fname, \"rb\")\n+                except IOError:\n+                    print(\"Premature end of block data\")\n+                    return\n+\n+            inhdr = self.inF.read(8)\n+            if (not inhdr or (inhdr[0] == \"\\0\")):\n+                self.inF.close()\n+                self.inF = None\n+                self.inFn = self.inFn + 1\n+                continue\n+\n+            inMagic = inhdr[:4]\n+            if (inMagic != self.settings['netmagic']):\n+                # Seek backwards 7 bytes (skipping the first byte in the previous search)\n+                # and continue searching from the new position if the magic bytes are not\n+                # found.\n+                self.inF.seek(-7, os.SEEK_CUR)\n+                continue\n+            inLenLE = inhdr[4:]\n+            su = struct.unpack(\"<I\", inLenLE)\n+            inLen = su[0] - 80 # length without header\n+            blk_hdr = self.inF.read(80)\n+            inExtent = BlockExtent(self.inFn, self.inF.tell(), inhdr, blk_hdr, inLen)\n+\n+            self.hash_str = calc_hash_str(blk_hdr)\n+            if not self.hash_str in blkmap:\n+                # Because blocks can be written to files out-of-order as of 0.10, the script\n+                # may encounter blocks it doesn't know about. Treat as debug output.\n+                if settings['debug_output'] == 'true':\n+                    print(\"Skipping unknown block \" + self.hash_str)\n+                self.inF.seek(inLen, os.SEEK_CUR)\n+                continue\n+\n+            blkHeight = self.blkmap[self.hash_str]\n+            self.blkCountIn += 1\n+\n+            if self.blkCountOut == blkHeight:\n+                # If in-order block, just copy\n+                rawblock = self.inF.read(inLen)\n+                self.writeBlock(inhdr, blk_hdr, rawblock)\n+\n+                # See if we can catch up to prior out-of-order blocks\n+                while self.blkCountOut in self.blockExtents:\n+                    self.copyOneBlock()\n+\n+            else: # If out-of-order, skip over block data for now\n+                self.blockExtents[blkHeight] = inExtent\n+                if self.outOfOrderSize < self.settings['out_of_order_cache_sz']:\n+                    # If there is space in the cache, read the data\n+                    # Reading the data in file sequence instead of seeking and fetching it later is preferred,\n+                    # but we don't want to fill up memory\n+                    self.outOfOrderData[blkHeight] = self.inF.read(inLen)\n+                    self.outOfOrderSize += inLen\n+                else: # If no space in cache, seek forward\n+                    self.inF.seek(inLen, os.SEEK_CUR)\n+\n+        print(\"Done (%i blocks written)\" % (self.blkCountOut))\n+\n+if __name__ == '__main__':\n+    if len(sys.argv) != 2:\n+        print(\"Usage: linearize-data.py CONFIG-FILE\")\n+        sys.exit(1)\n+\n+    f = open(sys.argv[1], encoding=\"utf8\")\n+    for line in f:\n+        # skip comment lines\n+        m = re.search(r'^\\s*#', line)\n+        if m:\n+            continue\n+\n+        # parse key=value lines\n+        m = re.search(r'^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+        if m is None:\n+            continue\n+        settings[m.group(1)] = m.group(2)\n+    f.close()\n+\n+    # Force hash byte format setting to be lowercase to make comparisons easier.\n+    # Also place upfront in case any settings need to know about it.\n+    if 'rev_hash_bytes' not in settings:\n+        settings['rev_hash_bytes'] = 'false'\n+    settings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n+\n+    if 'netmagic' not in settings:\n+        settings['netmagic'] = 'f9beb4d9'\n+    if 'genesis' not in settings:\n+        settings['genesis'] = '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f'\n+    if 'input' not in settings:\n+        settings['input'] = 'input'\n+    if 'hashlist' not in settings:\n+        settings['hashlist'] = 'hashlist.txt'\n+    if 'file_timestamp' not in settings:\n+        settings['file_timestamp'] = 0\n+    if 'split_timestamp' not in settings:\n+        settings['split_timestamp'] = 0\n+    if 'max_out_sz' not in settings:\n+        settings['max_out_sz'] = 1000 * 1000 * 1000\n+    if 'out_of_order_cache_sz' not in settings:\n+        settings['out_of_order_cache_sz'] = 100 * 1000 * 1000\n+    if 'debug_output' not in settings:\n+        settings['debug_output'] = 'false'\n+\n+    settings['max_out_sz'] = int(settings['max_out_sz'])\n+    settings['split_timestamp'] = int(settings['split_timestamp'])\n+    settings['file_timestamp'] = int(settings['file_timestamp'])\n+    settings['netmagic'] = unhexlify(settings['netmagic'].encode('utf-8'))\n+    settings['out_of_order_cache_sz'] = int(settings['out_of_order_cache_sz'])\n+    settings['debug_output'] = settings['debug_output'].lower()\n+\n+    if 'output_file' not in settings and 'output' not in settings:\n+        print(\"Missing output file / directory\")\n+        sys.exit(1)\n+\n+    blkindex = get_block_hashes(settings)\n+    blkmap = mkblockmap(blkindex)\n+\n+    # Block hash map won't be byte-reversed. Neither should the genesis hash.\n+    if not settings['genesis'] in blkmap:\n+        print(\"Genesis block not found in hashlist\")\n+    else:\n+        BlockDataCopier(settings, blkindex, blkmap).run()"
      },
      {
        "sha": "fed6e665b8c934e26729f5cfe192f95f27870754",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "added",
        "additions": 152,
        "deletions": 0,
        "changes": 152,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,152 @@\n+#!/usr/bin/env python3\n+#\n+# linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n+#\n+# Copyright (c) 2013-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+from http.client import HTTPConnection\n+import json\n+import re\n+import base64\n+import sys\n+import os\n+import os.path\n+\n+settings = {}\n+\n+def hex_switchEndian(s):\n+    \"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n+    pairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n+    return b''.join(pairList[::-1]).decode()\n+\n+class BitcoinRPC:\n+    def __init__(self, host, port, username, password):\n+        authpair = \"%s:%s\" % (username, password)\n+        authpair = authpair.encode('utf-8')\n+        self.authhdr = b\"Basic \" + base64.b64encode(authpair)\n+        self.conn = HTTPConnection(host, port=port, timeout=30)\n+\n+    def execute(self, obj):\n+        try:\n+            self.conn.request('POST', '/', json.dumps(obj),\n+                { 'Authorization' : self.authhdr,\n+                  'Content-type' : 'application/json' })\n+        except ConnectionRefusedError:\n+            print('RPC connection refused. Check RPC settings and the server status.',\n+                  file=sys.stderr)\n+            return None\n+\n+        resp = self.conn.getresponse()\n+        if resp is None:\n+            print(\"JSON-RPC: no response\", file=sys.stderr)\n+            return None\n+\n+        body = resp.read().decode('utf-8')\n+        resp_obj = json.loads(body)\n+        return resp_obj\n+\n+    @staticmethod\n+    def build_request(idx, method, params):\n+        obj = { 'version' : '1.1',\n+            'method' : method,\n+            'id' : idx }\n+        if params is None:\n+            obj['params'] = []\n+        else:\n+            obj['params'] = params\n+        return obj\n+\n+    @staticmethod\n+    def response_is_error(resp_obj):\n+        return 'error' in resp_obj and resp_obj['error'] is not None\n+\n+def get_block_hashes(settings, max_blocks_per_call=10000):\n+    rpc = BitcoinRPC(settings['host'], settings['port'],\n+             settings['rpcuser'], settings['rpcpassword'])\n+\n+    height = settings['min_height']\n+    while height < settings['max_height']+1:\n+        num_blocks = min(settings['max_height']+1-height, max_blocks_per_call)\n+        batch = []\n+        for x in range(num_blocks):\n+            batch.append(rpc.build_request(x, 'getblockhash', [height + x]))\n+\n+        reply = rpc.execute(batch)\n+        if reply is None:\n+            print('Cannot continue. Program will halt.')\n+            return None\n+\n+        for x,resp_obj in enumerate(reply):\n+            if rpc.response_is_error(resp_obj):\n+                print('JSON-RPC: error at height', height+x, ': ', resp_obj['error'], file=sys.stderr)\n+                sys.exit(1)\n+            assert(resp_obj['id'] == x) # assume replies are in-sequence\n+            if settings['rev_hash_bytes'] == 'true':\n+                resp_obj['result'] = hex_switchEndian(resp_obj['result'])\n+            print(resp_obj['result'])\n+\n+        height += num_blocks\n+\n+def get_rpc_cookie():\n+    # Open the cookie file\n+    with open(os.path.join(os.path.expanduser(settings['datadir']), '.cookie'), 'r', encoding=\"ascii\") as f:\n+        combined = f.readline()\n+        combined_split = combined.split(\":\")\n+        settings['rpcuser'] = combined_split[0]\n+        settings['rpcpassword'] = combined_split[1]\n+\n+if __name__ == '__main__':\n+    if len(sys.argv) != 2:\n+        print(\"Usage: linearize-hashes.py CONFIG-FILE\")\n+        sys.exit(1)\n+\n+    f = open(sys.argv[1], encoding=\"utf8\")\n+    for line in f:\n+        # skip comment lines\n+        m = re.search(r'^\\s*#', line)\n+        if m:\n+            continue\n+\n+        # parse key=value lines\n+        m = re.search(r'^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+        if m is None:\n+            continue\n+        settings[m.group(1)] = m.group(2)\n+    f.close()\n+\n+    if 'host' not in settings:\n+        settings['host'] = '127.0.0.1'\n+    if 'port' not in settings:\n+        settings['port'] = 8332\n+    if 'min_height' not in settings:\n+        settings['min_height'] = 0\n+    if 'max_height' not in settings:\n+        settings['max_height'] = 313000\n+    if 'rev_hash_bytes' not in settings:\n+        settings['rev_hash_bytes'] = 'false'\n+\n+    use_userpass = True\n+    use_datadir = False\n+    if 'rpcuser' not in settings or 'rpcpassword' not in settings:\n+        use_userpass = False\n+    if 'datadir' in settings and not use_userpass:\n+        use_datadir = True\n+    if not use_userpass and not use_datadir:\n+        print(\"Missing datadir or username and/or password in cfg file\", file=sys.stderr)\n+        sys.exit(1)\n+\n+    settings['port'] = int(settings['port'])\n+    settings['min_height'] = int(settings['min_height'])\n+    settings['max_height'] = int(settings['max_height'])\n+\n+    # Force hash byte format setting to be lowercase to make comparisons easier.\n+    settings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n+\n+    # Get the rpc user and pass from the cookie if the datadir is set\n+    if use_datadir:\n+        get_rpc_cookie()\n+\n+    get_block_hashes(settings)"
      },
      {
        "sha": "94a9ed024d3859793618152ea559a168bbcbb5e2",
        "filename": "contrib/macdeploy/LICENSE",
        "status": "added",
        "additions": 674,
        "deletions": 0,
        "changes": 674,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/macdeploy/LICENSE",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/macdeploy/LICENSE",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/LICENSE?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,674 @@\n+                    GNU GENERAL PUBLIC LICENSE\n+                       Version 3, 29 June 2007\n+\n+ Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n+ Everyone is permitted to copy and distribute verbatim copies\n+ of this license document, but changing it is not allowed.\n+\n+                            Preamble\n+\n+  The GNU General Public License is a free, copyleft license for\n+software and other kinds of works.\n+\n+  The licenses for most software and other practical works are designed\n+to take away your freedom to share and change the works.  By contrast,\n+the GNU General Public License is intended to guarantee your freedom to\n+share and change all versions of a program--to make sure it remains free\n+software for all its users.  We, the Free Software Foundation, use the\n+GNU General Public License for most of our software; it applies also to\n+any other work released this way by its authors.  You can apply it to\n+your programs, too.\n+\n+  When we speak of free software, we are referring to freedom, not\n+price.  Our General Public Licenses are designed to make sure that you\n+have the freedom to distribute copies of free software (and charge for\n+them if you wish), that you receive source code or can get it if you\n+want it, that you can change the software or use pieces of it in new\n+free programs, and that you know you can do these things.\n+\n+  To protect your rights, we need to prevent others from denying you\n+these rights or asking you to surrender the rights.  Therefore, you have\n+certain responsibilities if you distribute copies of the software, or if\n+you modify it: responsibilities to respect the freedom of others.\n+\n+  For example, if you distribute copies of such a program, whether\n+gratis or for a fee, you must pass on to the recipients the same\n+freedoms that you received.  You must make sure that they, too, receive\n+or can get the source code.  And you must show them these terms so they\n+know their rights.\n+\n+  Developers that use the GNU GPL protect your rights with two steps:\n+(1) assert copyright on the software, and (2) offer you this License\n+giving you legal permission to copy, distribute and/or modify it.\n+\n+  For the developers' and authors' protection, the GPL clearly explains\n+that there is no warranty for this free software.  For both users' and\n+authors' sake, the GPL requires that modified versions be marked as\n+changed, so that their problems will not be attributed erroneously to\n+authors of previous versions.\n+\n+  Some devices are designed to deny users access to install or run\n+modified versions of the software inside them, although the manufacturer\n+can do so.  This is fundamentally incompatible with the aim of\n+protecting users' freedom to change the software.  The systematic\n+pattern of such abuse occurs in the area of products for individuals to\n+use, which is precisely where it is most unacceptable.  Therefore, we\n+have designed this version of the GPL to prohibit the practice for those\n+products.  If such problems arise substantially in other domains, we\n+stand ready to extend this provision to those domains in future versions\n+of the GPL, as needed to protect the freedom of users.\n+\n+  Finally, every program is threatened constantly by software patents.\n+States should not allow patents to restrict development and use of\n+software on general-purpose computers, but in those that do, we wish to\n+avoid the special danger that patents applied to a free program could\n+make it effectively proprietary.  To prevent this, the GPL assures that\n+patents cannot be used to render the program non-free.\n+\n+  The precise terms and conditions for copying, distribution and\n+modification follow.\n+\n+                       TERMS AND CONDITIONS\n+\n+  0. Definitions.\n+\n+  \"This License\" refers to version 3 of the GNU General Public License.\n+\n+  \"Copyright\" also means copyright-like laws that apply to other kinds of\n+works, such as semiconductor masks.\n+\n+  \"The Program\" refers to any copyrightable work licensed under this\n+License.  Each licensee is addressed as \"you\".  \"Licensees\" and\n+\"recipients\" may be individuals or organizations.\n+\n+  To \"modify\" a work means to copy from or adapt all or part of the work\n+in a fashion requiring copyright permission, other than the making of an\n+exact copy.  The resulting work is called a \"modified version\" of the\n+earlier work or a work \"based on\" the earlier work.\n+\n+  A \"covered work\" means either the unmodified Program or a work based\n+on the Program.\n+\n+  To \"propagate\" a work means to do anything with it that, without\n+permission, would make you directly or secondarily liable for\n+infringement under applicable copyright law, except executing it on a\n+computer or modifying a private copy.  Propagation includes copying,\n+distribution (with or without modification), making available to the\n+public, and in some countries other activities as well.\n+\n+  To \"convey\" a work means any kind of propagation that enables other\n+parties to make or receive copies.  Mere interaction with a user through\n+a computer network, with no transfer of a copy, is not conveying.\n+\n+  An interactive user interface displays \"Appropriate Legal Notices\"\n+to the extent that it includes a convenient and prominently visible\n+feature that (1) displays an appropriate copyright notice, and (2)\n+tells the user that there is no warranty for the work (except to the\n+extent that warranties are provided), that licensees may convey the\n+work under this License, and how to view a copy of this License.  If\n+the interface presents a list of user commands or options, such as a\n+menu, a prominent item in the list meets this criterion.\n+\n+  1. Source Code.\n+\n+  The \"source code\" for a work means the preferred form of the work\n+for making modifications to it.  \"Object code\" means any non-source\n+form of a work.\n+\n+  A \"Standard Interface\" means an interface that either is an official\n+standard defined by a recognized standards body, or, in the case of\n+interfaces specified for a particular programming language, one that\n+is widely used among developers working in that language.\n+\n+  The \"System Libraries\" of an executable work include anything, other\n+than the work as a whole, that (a) is included in the normal form of\n+packaging a Major Component, but which is not part of that Major\n+Component, and (b) serves only to enable use of the work with that\n+Major Component, or to implement a Standard Interface for which an\n+implementation is available to the public in source code form.  A\n+\"Major Component\", in this context, means a major essential component\n+(kernel, window system, and so on) of the specific operating system\n+(if any) on which the executable work runs, or a compiler used to\n+produce the work, or an object code interpreter used to run it.\n+\n+  The \"Corresponding Source\" for a work in object code form means all\n+the source code needed to generate, install, and (for an executable\n+work) run the object code and to modify the work, including scripts to\n+control those activities.  However, it does not include the work's\n+System Libraries, or general-purpose tools or generally available free\n+programs which are used unmodified in performing those activities but\n+which are not part of the work.  For example, Corresponding Source\n+includes interface definition files associated with source files for\n+the work, and the source code for shared libraries and dynamically\n+linked subprograms that the work is specifically designed to require,\n+such as by intimate data communication or control flow between those\n+subprograms and other parts of the work.\n+\n+  The Corresponding Source need not include anything that users\n+can regenerate automatically from other parts of the Corresponding\n+Source.\n+\n+  The Corresponding Source for a work in source code form is that\n+same work.\n+\n+  2. Basic Permissions.\n+\n+  All rights granted under this License are granted for the term of\n+copyright on the Program, and are irrevocable provided the stated\n+conditions are met.  This License explicitly affirms your unlimited\n+permission to run the unmodified Program.  The output from running a\n+covered work is covered by this License only if the output, given its\n+content, constitutes a covered work.  This License acknowledges your\n+rights of fair use or other equivalent, as provided by copyright law.\n+\n+  You may make, run and propagate covered works that you do not\n+convey, without conditions so long as your license otherwise remains\n+in force.  You may convey covered works to others for the sole purpose\n+of having them make modifications exclusively for you, or provide you\n+with facilities for running those works, provided that you comply with\n+the terms of this License in conveying all material for which you do\n+not control copyright.  Those thus making or running the covered works\n+for you must do so exclusively on your behalf, under your direction\n+and control, on terms that prohibit them from making any copies of\n+your copyrighted material outside their relationship with you.\n+\n+  Conveying under any other circumstances is permitted solely under\n+the conditions stated below.  Sublicensing is not allowed; section 10\n+makes it unnecessary.\n+\n+  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n+\n+  No covered work shall be deemed part of an effective technological\n+measure under any applicable law fulfilling obligations under article\n+11 of the WIPO copyright treaty adopted on 20 December 1996, or\n+similar laws prohibiting or restricting circumvention of such\n+measures.\n+\n+  When you convey a covered work, you waive any legal power to forbid\n+circumvention of technological measures to the extent such circumvention\n+is effected by exercising rights under this License with respect to\n+the covered work, and you disclaim any intention to limit operation or\n+modification of the work as a means of enforcing, against the work's\n+users, your or third parties' legal rights to forbid circumvention of\n+technological measures.\n+\n+  4. Conveying Verbatim Copies.\n+\n+  You may convey verbatim copies of the Program's source code as you\n+receive it, in any medium, provided that you conspicuously and\n+appropriately publish on each copy an appropriate copyright notice;\n+keep intact all notices stating that this License and any\n+non-permissive terms added in accord with section 7 apply to the code;\n+keep intact all notices of the absence of any warranty; and give all\n+recipients a copy of this License along with the Program.\n+\n+  You may charge any price or no price for each copy that you convey,\n+and you may offer support or warranty protection for a fee.\n+\n+  5. Conveying Modified Source Versions.\n+\n+  You may convey a work based on the Program, or the modifications to\n+produce it from the Program, in the form of source code under the\n+terms of section 4, provided that you also meet all of these conditions:\n+\n+    a) The work must carry prominent notices stating that you modified\n+    it, and giving a relevant date.\n+\n+    b) The work must carry prominent notices stating that it is\n+    released under this License and any conditions added under section\n+    7.  This requirement modifies the requirement in section 4 to\n+    \"keep intact all notices\".\n+\n+    c) You must license the entire work, as a whole, under this\n+    License to anyone who comes into possession of a copy.  This\n+    License will therefore apply, along with any applicable section 7\n+    additional terms, to the whole of the work, and all its parts,\n+    regardless of how they are packaged.  This License gives no\n+    permission to license the work in any other way, but it does not\n+    invalidate such permission if you have separately received it.\n+\n+    d) If the work has interactive user interfaces, each must display\n+    Appropriate Legal Notices; however, if the Program has interactive\n+    interfaces that do not display Appropriate Legal Notices, your\n+    work need not make them do so.\n+\n+  A compilation of a covered work with other separate and independent\n+works, which are not by their nature extensions of the covered work,\n+and which are not combined with it such as to form a larger program,\n+in or on a volume of a storage or distribution medium, is called an\n+\"aggregate\" if the compilation and its resulting copyright are not\n+used to limit the access or legal rights of the compilation's users\n+beyond what the individual works permit.  Inclusion of a covered work\n+in an aggregate does not cause this License to apply to the other\n+parts of the aggregate.\n+\n+  6. Conveying Non-Source Forms.\n+\n+  You may convey a covered work in object code form under the terms\n+of sections 4 and 5, provided that you also convey the\n+machine-readable Corresponding Source under the terms of this License,\n+in one of these ways:\n+\n+    a) Convey the object code in, or embodied in, a physical product\n+    (including a physical distribution medium), accompanied by the\n+    Corresponding Source fixed on a durable physical medium\n+    customarily used for software interchange.\n+\n+    b) Convey the object code in, or embodied in, a physical product\n+    (including a physical distribution medium), accompanied by a\n+    written offer, valid for at least three years and valid for as\n+    long as you offer spare parts or customer support for that product\n+    model, to give anyone who possesses the object code either (1) a\n+    copy of the Corresponding Source for all the software in the\n+    product that is covered by this License, on a durable physical\n+    medium customarily used for software interchange, for a price no\n+    more than your reasonable cost of physically performing this\n+    conveying of source, or (2) access to copy the\n+    Corresponding Source from a network server at no charge.\n+\n+    c) Convey individual copies of the object code with a copy of the\n+    written offer to provide the Corresponding Source.  This\n+    alternative is allowed only occasionally and noncommercially, and\n+    only if you received the object code with such an offer, in accord\n+    with subsection 6b.\n+\n+    d) Convey the object code by offering access from a designated\n+    place (gratis or for a charge), and offer equivalent access to the\n+    Corresponding Source in the same way through the same place at no\n+    further charge.  You need not require recipients to copy the\n+    Corresponding Source along with the object code.  If the place to\n+    copy the object code is a network server, the Corresponding Source\n+    may be on a different server (operated by you or a third party)\n+    that supports equivalent copying facilities, provided you maintain\n+    clear directions next to the object code saying where to find the\n+    Corresponding Source.  Regardless of what server hosts the\n+    Corresponding Source, you remain obligated to ensure that it is\n+    available for as long as needed to satisfy these requirements.\n+\n+    e) Convey the object code using peer-to-peer transmission, provided\n+    you inform other peers where the object code and Corresponding\n+    Source of the work are being offered to the general public at no\n+    charge under subsection 6d.\n+\n+  A separable portion of the object code, whose source code is excluded\n+from the Corresponding Source as a System Library, need not be\n+included in conveying the object code work.\n+\n+  A \"User Product\" is either (1) a \"consumer product\", which means any\n+tangible personal property which is normally used for personal, family,\n+or household purposes, or (2) anything designed or sold for incorporation\n+into a dwelling.  In determining whether a product is a consumer product,\n+doubtful cases shall be resolved in favor of coverage.  For a particular\n+product received by a particular user, \"normally used\" refers to a\n+typical or common use of that class of product, regardless of the status\n+of the particular user or of the way in which the particular user\n+actually uses, or expects or is expected to use, the product.  A product\n+is a consumer product regardless of whether the product has substantial\n+commercial, industrial or non-consumer uses, unless such uses represent\n+the only significant mode of use of the product.\n+\n+  \"Installation Information\" for a User Product means any methods,\n+procedures, authorization keys, or other information required to install\n+and execute modified versions of a covered work in that User Product from\n+a modified version of its Corresponding Source.  The information must\n+suffice to ensure that the continued functioning of the modified object\n+code is in no case prevented or interfered with solely because\n+modification has been made.\n+\n+  If you convey an object code work under this section in, or with, or\n+specifically for use in, a User Product, and the conveying occurs as\n+part of a transaction in which the right of possession and use of the\n+User Product is transferred to the recipient in perpetuity or for a\n+fixed term (regardless of how the transaction is characterized), the\n+Corresponding Source conveyed under this section must be accompanied\n+by the Installation Information.  But this requirement does not apply\n+if neither you nor any third party retains the ability to install\n+modified object code on the User Product (for example, the work has\n+been installed in ROM).\n+\n+  The requirement to provide Installation Information does not include a\n+requirement to continue to provide support service, warranty, or updates\n+for a work that has been modified or installed by the recipient, or for\n+the User Product in which it has been modified or installed.  Access to a\n+network may be denied when the modification itself materially and\n+adversely affects the operation of the network or violates the rules and\n+protocols for communication across the network.\n+\n+  Corresponding Source conveyed, and Installation Information provided,\n+in accord with this section must be in a format that is publicly\n+documented (and with an implementation available to the public in\n+source code form), and must require no special password or key for\n+unpacking, reading or copying.\n+\n+  7. Additional Terms.\n+\n+  \"Additional permissions\" are terms that supplement the terms of this\n+License by making exceptions from one or more of its conditions.\n+Additional permissions that are applicable to the entire Program shall\n+be treated as though they were included in this License, to the extent\n+that they are valid under applicable law.  If additional permissions\n+apply only to part of the Program, that part may be used separately\n+under those permissions, but the entire Program remains governed by\n+this License without regard to the additional permissions.\n+\n+  When you convey a copy of a covered work, you may at your option\n+remove any additional permissions from that copy, or from any part of\n+it.  (Additional permissions may be written to require their own\n+removal in certain cases when you modify the work.)  You may place\n+additional permissions on material, added by you to a covered work,\n+for which you have or can give appropriate copyright permission.\n+\n+  Notwithstanding any other provision of this License, for material you\n+add to a covered work, you may (if authorized by the copyright holders of\n+that material) supplement the terms of this License with terms:\n+\n+    a) Disclaiming warranty or limiting liability differently from the\n+    terms of sections 15 and 16 of this License; or\n+\n+    b) Requiring preservation of specified reasonable legal notices or\n+    author attributions in that material or in the Appropriate Legal\n+    Notices displayed by works containing it; or\n+\n+    c) Prohibiting misrepresentation of the origin of that material, or\n+    requiring that modified versions of such material be marked in\n+    reasonable ways as different from the original version; or\n+\n+    d) Limiting the use for publicity purposes of names of licensors or\n+    authors of the material; or\n+\n+    e) Declining to grant rights under trademark law for use of some\n+    trade names, trademarks, or service marks; or\n+\n+    f) Requiring indemnification of licensors and authors of that\n+    material by anyone who conveys the material (or modified versions of\n+    it) with contractual assumptions of liability to the recipient, for\n+    any liability that these contractual assumptions directly impose on\n+    those licensors and authors.\n+\n+  All other non-permissive additional terms are considered \"further\n+restrictions\" within the meaning of section 10.  If the Program as you\n+received it, or any part of it, contains a notice stating that it is\n+governed by this License along with a term that is a further\n+restriction, you may remove that term.  If a license document contains\n+a further restriction but permits relicensing or conveying under this\n+License, you may add to a covered work material governed by the terms\n+of that license document, provided that the further restriction does\n+not survive such relicensing or conveying.\n+\n+  If you add terms to a covered work in accord with this section, you\n+must place, in the relevant source files, a statement of the\n+additional terms that apply to those files, or a notice indicating\n+where to find the applicable terms.\n+\n+  Additional terms, permissive or non-permissive, may be stated in the\n+form of a separately written license, or stated as exceptions;\n+the above requirements apply either way.\n+\n+  8. Termination.\n+\n+  You may not propagate or modify a covered work except as expressly\n+provided under this License.  Any attempt otherwise to propagate or\n+modify it is void, and will automatically terminate your rights under\n+this License (including any patent licenses granted under the third\n+paragraph of section 11).\n+\n+  However, if you cease all violation of this License, then your\n+license from a particular copyright holder is reinstated (a)\n+provisionally, unless and until the copyright holder explicitly and\n+finally terminates your license, and (b) permanently, if the copyright\n+holder fails to notify you of the violation by some reasonable means\n+prior to 60 days after the cessation.\n+\n+  Moreover, your license from a particular copyright holder is\n+reinstated permanently if the copyright holder notifies you of the\n+violation by some reasonable means, this is the first time you have\n+received notice of violation of this License (for any work) from that\n+copyright holder, and you cure the violation prior to 30 days after\n+your receipt of the notice.\n+\n+  Termination of your rights under this section does not terminate the\n+licenses of parties who have received copies or rights from you under\n+this License.  If your rights have been terminated and not permanently\n+reinstated, you do not qualify to receive new licenses for the same\n+material under section 10.\n+\n+  9. Acceptance Not Required for Having Copies.\n+\n+  You are not required to accept this License in order to receive or\n+run a copy of the Program.  Ancillary propagation of a covered work\n+occurring solely as a consequence of using peer-to-peer transmission\n+to receive a copy likewise does not require acceptance.  However,\n+nothing other than this License grants you permission to propagate or\n+modify any covered work.  These actions infringe copyright if you do\n+not accept this License.  Therefore, by modifying or propagating a\n+covered work, you indicate your acceptance of this License to do so.\n+\n+  10. Automatic Licensing of Downstream Recipients.\n+\n+  Each time you convey a covered work, the recipient automatically\n+receives a license from the original licensors, to run, modify and\n+propagate that work, subject to this License.  You are not responsible\n+for enforcing compliance by third parties with this License.\n+\n+  An \"entity transaction\" is a transaction transferring control of an\n+organization, or substantially all assets of one, or subdividing an\n+organization, or merging organizations.  If propagation of a covered\n+work results from an entity transaction, each party to that\n+transaction who receives a copy of the work also receives whatever\n+licenses to the work the party's predecessor in interest had or could\n+give under the previous paragraph, plus a right to possession of the\n+Corresponding Source of the work from the predecessor in interest, if\n+the predecessor has it or can get it with reasonable efforts.\n+\n+  You may not impose any further restrictions on the exercise of the\n+rights granted or affirmed under this License.  For example, you may\n+not impose a license fee, royalty, or other charge for exercise of\n+rights granted under this License, and you may not initiate litigation\n+(including a cross-claim or counterclaim in a lawsuit) alleging that\n+any patent claim is infringed by making, using, selling, offering for\n+sale, or importing the Program or any portion of it.\n+\n+  11. Patents.\n+\n+  A \"contributor\" is a copyright holder who authorizes use under this\n+License of the Program or a work on which the Program is based.  The\n+work thus licensed is called the contributor's \"contributor version\".\n+\n+  A contributor's \"essential patent claims\" are all patent claims\n+owned or controlled by the contributor, whether already acquired or\n+hereafter acquired, that would be infringed by some manner, permitted\n+by this License, of making, using, or selling its contributor version,\n+but do not include claims that would be infringed only as a\n+consequence of further modification of the contributor version.  For\n+purposes of this definition, \"control\" includes the right to grant\n+patent sublicenses in a manner consistent with the requirements of\n+this License.\n+\n+  Each contributor grants you a non-exclusive, worldwide, royalty-free\n+patent license under the contributor's essential patent claims, to\n+make, use, sell, offer for sale, import and otherwise run, modify and\n+propagate the contents of its contributor version.\n+\n+  In the following three paragraphs, a \"patent license\" is any express\n+agreement or commitment, however denominated, not to enforce a patent\n+(such as an express permission to practice a patent or covenant not to\n+sue for patent infringement).  To \"grant\" such a patent license to a\n+party means to make such an agreement or commitment not to enforce a\n+patent against the party.\n+\n+  If you convey a covered work, knowingly relying on a patent license,\n+and the Corresponding Source of the work is not available for anyone\n+to copy, free of charge and under the terms of this License, through a\n+publicly available network server or other readily accessible means,\n+then you must either (1) cause the Corresponding Source to be so\n+available, or (2) arrange to deprive yourself of the benefit of the\n+patent license for this particular work, or (3) arrange, in a manner\n+consistent with the requirements of this License, to extend the patent\n+license to downstream recipients.  \"Knowingly relying\" means you have\n+actual knowledge that, but for the patent license, your conveying the\n+covered work in a country, or your recipient's use of the covered work\n+in a country, would infringe one or more identifiable patents in that\n+country that you have reason to believe are valid.\n+\n+  If, pursuant to or in connection with a single transaction or\n+arrangement, you convey, or propagate by procuring conveyance of, a\n+covered work, and grant a patent license to some of the parties\n+receiving the covered work authorizing them to use, propagate, modify\n+or convey a specific copy of the covered work, then the patent license\n+you grant is automatically extended to all recipients of the covered\n+work and works based on it.\n+\n+  A patent license is \"discriminatory\" if it does not include within\n+the scope of its coverage, prohibits the exercise of, or is\n+conditioned on the non-exercise of one or more of the rights that are\n+specifically granted under this License.  You may not convey a covered\n+work if you are a party to an arrangement with a third party that is\n+in the business of distributing software, under which you make payment\n+to the third party based on the extent of your activity of conveying\n+the work, and under which the third party grants, to any of the\n+parties who would receive the covered work from you, a discriminatory\n+patent license (a) in connection with copies of the covered work\n+conveyed by you (or copies made from those copies), or (b) primarily\n+for and in connection with specific products or compilations that\n+contain the covered work, unless you entered into that arrangement,\n+or that patent license was granted, prior to 28 March 2007.\n+\n+  Nothing in this License shall be construed as excluding or limiting\n+any implied license or other defenses to infringement that may\n+otherwise be available to you under applicable patent law.\n+\n+  12. No Surrender of Others' Freedom.\n+\n+  If conditions are imposed on you (whether by court order, agreement or\n+otherwise) that contradict the conditions of this License, they do not\n+excuse you from the conditions of this License.  If you cannot convey a\n+covered work so as to satisfy simultaneously your obligations under this\n+License and any other pertinent obligations, then as a consequence you may\n+not convey it at all.  For example, if you agree to terms that obligate you\n+to collect a royalty for further conveying from those to whom you convey\n+the Program, the only way you could satisfy both those terms and this\n+License would be to refrain entirely from conveying the Program.\n+\n+  13. Use with the GNU Affero General Public License.\n+\n+  Notwithstanding any other provision of this License, you have\n+permission to link or combine any covered work with a work licensed\n+under version 3 of the GNU Affero General Public License into a single\n+combined work, and to convey the resulting work.  The terms of this\n+License will continue to apply to the part which is the covered work,\n+but the special requirements of the GNU Affero General Public License,\n+section 13, concerning interaction through a network will apply to the\n+combination as such.\n+\n+  14. Revised Versions of this License.\n+\n+  The Free Software Foundation may publish revised and/or new versions of\n+the GNU General Public License from time to time.  Such new versions will\n+be similar in spirit to the present version, but may differ in detail to\n+address new problems or concerns.\n+\n+  Each version is given a distinguishing version number.  If the\n+Program specifies that a certain numbered version of the GNU General\n+Public License \"or any later version\" applies to it, you have the\n+option of following the terms and conditions either of that numbered\n+version or of any later version published by the Free Software\n+Foundation.  If the Program does not specify a version number of the\n+GNU General Public License, you may choose any version ever published\n+by the Free Software Foundation.\n+\n+  If the Program specifies that a proxy can decide which future\n+versions of the GNU General Public License can be used, that proxy's\n+public statement of acceptance of a version permanently authorizes you\n+to choose that version for the Program.\n+\n+  Later license versions may give you additional or different\n+permissions.  However, no additional obligations are imposed on any\n+author or copyright holder as a result of your choosing to follow a\n+later version.\n+\n+  15. Disclaimer of Warranty.\n+\n+  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\n+APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\n+HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\n+OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\n+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\n+IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\n+ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n+\n+  16. Limitation of Liability.\n+\n+  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\n+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\n+THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\n+GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\n+USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\n+DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\n+PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\n+EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\n+SUCH DAMAGES.\n+\n+  17. Interpretation of Sections 15 and 16.\n+\n+  If the disclaimer of warranty and limitation of liability provided\n+above cannot be given local legal effect according to their terms,\n+reviewing courts shall apply local law that most closely approximates\n+an absolute waiver of all civil liability in connection with the\n+Program, unless a warranty or assumption of liability accompanies a\n+copy of the Program in return for a fee.\n+\n+                     END OF TERMS AND CONDITIONS\n+\n+            How to Apply These Terms to Your New Programs\n+\n+  If you develop a new program, and you want it to be of the greatest\n+possible use to the public, the best way to achieve this is to make it\n+free software which everyone can redistribute and change under these terms.\n+\n+  To do so, attach the following notices to the program.  It is safest\n+to attach them to the start of each source file to most effectively\n+state the exclusion of warranty; and each file should have at least\n+the \"copyright\" line and a pointer to where the full notice is found.\n+\n+    <one line to give the program's name and a brief idea of what it does.>\n+    Copyright (C) <year>  <name of author>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation, either version 3 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+Also add information on how to contact you by electronic and paper mail.\n+\n+  If the program does terminal interaction, make it output a short\n+notice like this when it starts in an interactive mode:\n+\n+    <program>  Copyright (C) <year>  <name of author>\n+    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n+    This is free software, and you are welcome to redistribute it\n+    under certain conditions; type `show c' for details.\n+\n+The hypothetical commands `show w' and `show c' should show the appropriate\n+parts of the General Public License.  Of course, your program's commands\n+might be different; for a GUI interface, you would use an \"about box\".\n+\n+  You should also get your employer (if you work as a programmer) or school,\n+if any, to sign a \"copyright disclaimer\" for the program, if necessary.\n+For more information on this, and how to apply and follow the GNU GPL, see\n+<http://www.gnu.org/licenses/>.\n+\n+  The GNU General Public License does not permit incorporating your program\n+into proprietary programs.  If your program is a subroutine library, you\n+may consider it more useful to permit linking proprietary applications with\n+the library.  If this is what you want to do, use the GNU Lesser General\n+Public License instead of this License.  But first, please read\n+<http://www.gnu.org/philosophy/why-not-lgpl.html>."
      },
      {
        "sha": "fe677e3a1f89aa961079b8b711f933b8f9009e4f",
        "filename": "contrib/macdeploy/README.md",
        "status": "added",
        "additions": 128,
        "deletions": 0,
        "changes": 128,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,128 @@\n+# MacOS Deployment\n+\n+The `macdeployqtplus` script should not be run manually. Instead, after building as usual:\n+\n+```bash\n+make deploy\n+```\n+\n+During the deployment process, the disk image window will pop up briefly\n+when the fancy settings are applied. This is normal, please do not interfere,\n+the process will unmount the DMG and cleanup before finishing.\n+\n+When complete, it will have produced `Bitcoin-Qt.dmg`.\n+\n+## SDK Extraction\n+\n+### Step 1: Obtaining `Xcode.app`\n+\n+Our current macOS SDK\n+(`Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz`) can be\n+extracted from\n+[Xcode_11.3.1.xip](https://download.developer.apple.com/Developer_Tools/Xcode_11.3.1/Xcode_11.3.1.xip).\n+An Apple ID is needed to download this.\n+\n+After Xcode version 7.x, Apple started shipping the `Xcode.app` in a `.xip`\n+archive. This makes the SDK less-trivial to extract on non-macOS machines. One\n+approach (tested on Debian Buster) is outlined below:\n+\n+```bash\n+# Install/clone tools needed for extracting Xcode.app\n+apt install cpio\n+git clone https://github.com/bitcoin-core/apple-sdk-tools.git\n+\n+# Unpack Xcode_11.3.1.xip and place the resulting Xcode.app in your current\n+# working directory\n+python3 apple-sdk-tools/extract_xcode.py -f Xcode_11.3.1.xip | cpio -d -i\n+```\n+\n+On macOS the process is more straightforward:\n+\n+```bash\n+xip -x Xcode_11.3.1.xip\n+```\n+\n+### Step 2: Generating `Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz` from `Xcode.app`\n+\n+To generate `Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz`, run\n+the script [`gen-sdk`](./gen-sdk) with the path to `Xcode.app` (extracted in the\n+previous stage) as the first argument.\n+\n+```bash\n+# Generate a Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz from\n+# the supplied Xcode.app\n+./contrib/macdeploy/gen-sdk '/path/to/Xcode.app'\n+```\n+\n+## Deterministic macOS DMG Notes\n+Working macOS DMGs are created in Linux by combining a recent `clang`, the Apple\n+`binutils` (`ld`, `ar`, etc) and DMG authoring tools.\n+\n+Apple uses `clang` extensively for development and has upstreamed the necessary\n+functionality so that a vanilla clang can take advantage. It supports the use of `-F`,\n+`-target`, `-mmacosx-version-min`, and `--sysroot`, which are all necessary when\n+building for macOS.\n+\n+Apple's version of `binutils` (called `cctools`) contains lots of functionality missing in the\n+FSF's `binutils`. In addition to extra linker options for frameworks and sysroots, several\n+other tools are needed as well such as `install_name_tool`, `lipo`, and `nmedit`. These\n+do not build under Linux, so they have been patched to do so. The work here was used as\n+a starting point: [mingwandroid/toolchain4](https://github.com/mingwandroid/toolchain4).\n+\n+In order to build a working toolchain, the following source packages are needed from\n+Apple: `cctools`, `dyld`, and `ld64`.\n+\n+These tools inject timestamps by default, which produce non-deterministic binaries. The\n+`ZERO_AR_DATE` environment variable is used to disable that.\n+\n+This version of `cctools` has been patched to use the current version of `clang`'s headers\n+and its `libLTO.so` rather than those from `llvmgcc`, as it was originally done in `toolchain4`.\n+\n+To complicate things further, all builds must target an Apple SDK. These SDKs are free to\n+download, but not redistributable. To obtain it, register for an Apple Developer Account,\n+then download [Xcode_11.3.1](https://download.developer.apple.com/Developer_Tools/Xcode_11.3.1/Xcode_11.3.1.xip).\n+\n+This file is many gigabytes in size, but most (but not all) of what we need is\n+contained only in a single directory:\n+\n+```bash\n+Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk\n+```\n+\n+See the SDK Extraction notes above for how to obtain it.\n+\n+The Gitian descriptors build 2 sets of files: Linux tools, then Apple binaries which are\n+created using these tools. The build process has been designed to avoid including the\n+SDK's files in Gitian's outputs. All interim tarballs are fully deterministic and may be freely\n+redistributed.\n+\n+`genisoimage` is used to create the initial DMG. It is not deterministic as-is, so it has been\n+patched. A system `genisoimage` will work fine, but it will not be deterministic because\n+the file-order will change between invocations. The patch can be seen here: [cdrkit-deterministic.patch](https://github.com/bitcoin/bitcoin/blob/master/depends/patches/native_cdrkit/cdrkit-deterministic.patch).\n+No effort was made to fix this cleanly, so it likely leaks memory badly, however it's only used for\n+a single invocation, so that's no real concern.\n+\n+`genisoimage` cannot compress DMGs, so afterwards, the DMG tool from the\n+`libdmg-hfsplus` project is used to compress it. There are several bugs in this tool and its\n+maintainer has seemingly abandoned the project.\n+\n+The DMG tool has the ability to create DMGs from scratch as well, but this functionality is\n+broken. Only the compression feature is currently used. Ideally, the creation could be fixed\n+and `genisoimage` would no longer be necessary.\n+\n+Background images and other features can be added to DMG files by inserting a\n+`.DS_Store` before creation. This is generated by the script `contrib/macdeploy/custom_dsstore.py`.\n+\n+As of OS X 10.9 Mavericks, using an Apple-blessed key to sign binaries is a requirement in\n+order to satisfy the new Gatekeeper requirements. Because this private key cannot be\n+shared, we'll have to be a bit creative in order for the build process to remain somewhat\n+deterministic. Here's how it works:\n+\n+- Builders use Gitian to create an unsigned release. This outputs an unsigned DMG which\n+  users may choose to bless and run. It also outputs an unsigned app structure in the form\n+  of a tarball, which also contains all of the tools that have been previously (deterministically)\n+  built in order to create a final DMG.\n+- The Apple keyholder uses this unsigned app to create a detached signature, using the\n+  script that is also included there. Detached signatures are available from this [repository](https://github.com/bitcoin-core/bitcoin-detached-sigs).\n+- Builders feed the unsigned app + detached signature back into Gitian. It uses the\n+  pre-built tools to recombine the pieces into a deterministic DMG."
      },
      {
        "sha": "9c330af45142e011e78b4b86874ac4b3457ed457",
        "filename": "contrib/macdeploy/background.svg",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/macdeploy/background.svg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/macdeploy/background.svg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.svg?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" standalone=\"no\"?>\n+<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 20010904//EN\"\n+ \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">\n+<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1000pt\" height=\"640pt\" viewBox=\"0 0 1000 640\" preserveAspectRatio=\"xMidYMid meet\">\n+\t<!-- kate: space-indent off;\n+\tCopyright (c) 2015 The Bitcoin Core developers\n+\tDistributed under the MIT software license, see the accompanying\n+\tfile COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\t-->\n+\t<style type=\"text/css\"><![CDATA[\n+\t\ttext {\n+\t\t\tfont-family: \"Tuffy\";\n+\t\t\tfont-size: 86px;\n+\t\t\tfill: gray;\n+\t\t\ttext-anchor: middle;\n+\t\t}\n+\t]]></style>\n+\t<defs>\n+\t\t<linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n+\t\t\t<stop offset=\"0%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n+\t\t\t<stop offset=\"33%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n+\t\t\t<stop offset=\"80%\" style=\"stop-color:rgb(205,205,205);stop-opacity:1\" />\n+\t\t\t<stop offset=\"100%\" style=\"stop-color:rgb(204,204,204);stop-opacity:1\" />\n+\t\t</linearGradient>\n+\t</defs>\n+\t<rect width=\"1000\" height=\"640\" style=\"fill:url(#gradient);stroke-width:0\" />\n+\t<g transform=\"translate(500,0) scale(0.9, 1)\">\n+\t\t<text x=\"0\" y=\"114\">PACKAGE_NAME</text>\n+\t</g>\n+\t<g transform=\"translate(0.000000,640.000000) scale(0.100000,-0.100000)\"\n+\tfill=\"#000000\" stroke=\"none\">\n+\t\t<path d=\"M4995 3705 c-24 -23 -25 -29 -25 -165 l0 -140 -306 0 -306 0 -29 -29 c-29 -29 -29 -31 -29 -141 0 -110 0 -112 29 -141 l29 -29 306 0 306 0 0 -140 c0 -136 1 -142 25 -165 16 -17 35 -25 57 -25 29 0 72 32 306 226 180 149 274 233 278 250 13 53 -2 70 -278 299 -235 194 -277 225 -306 225 -22 0 -41 -8 -57 -25z\" fixlter=\"url(#glow)\"/>\n+\t</g>\n+</svg>"
      },
      {
        "sha": "dc1c1882dd5a21a5358c6f3a65e7c70e22e295a1",
        "filename": "contrib/macdeploy/custom_dsstore.py",
        "status": "added",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/macdeploy/custom_dsstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/macdeploy/custom_dsstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/custom_dsstore.py?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,59 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2013-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+import biplist\n+from ds_store import DSStore\n+from mac_alias import Alias\n+import sys\n+\n+output_file = sys.argv[1]\n+package_name_ns = sys.argv[2]\n+\n+ds = DSStore.open(output_file, 'w+')\n+ds['.']['bwsp'] = {\n+    'ShowStatusBar': False,\n+    'WindowBounds': '{{300, 280}, {500, 343}}',\n+    'ContainerShowSidebar': False,\n+    'SidebarWidth': 0,\n+    'ShowTabView': False,\n+    'PreviewPaneVisibility': False,\n+    'ShowToolbar': False,\n+    'ShowSidebar': False,\n+    'ShowPathbar': True\n+}\n+\n+icvp = {\n+    'gridOffsetX': 0.0,\n+    'textSize': 12.0,\n+    'viewOptionsVersion': 1,\n+    'backgroundImageAlias': b'\\x00\\x00\\x00\\x00\\x02\\x1e\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd1\\x94\\\\\\xb0H+\\x00\\x05\\x00\\x00\\x00\\x98\\x0fbackground.tiff\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x99\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x00\\x00\\r\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b.background\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x98\\x00\\x0e\\x00 \\x00\\x0f\\x00b\\x00a\\x00c\\x00k\\x00g\\x00r\\x00o\\x00u\\x00n\\x00d\\x00.\\x00t\\x00i\\x00f\\x00f\\x00\\x0f\\x00\\x02\\x00\\x00\\x00\\x12\\x00\\x1c/.background/background.tiff\\x00\\x14\\x01\\x06\\x00\\x00\\x00\\x00\\x01\\x06\\x00\\x02\\x00\\x00\\x0cMacintosh HD\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xce\\x97\\xab\\xc3H+\\x00\\x00\\x01\\x88[\\x88\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02u\\xab\\x8d\\xd1\\x94\\\\\\xb0devrddsk\\xff\\xff\\xff\\xff\\x00\\x00\\t \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07bitcoin\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xce\\x97\\xab\\xc3\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x01\\x00\\x14\\x01\\x88[\\x88\\x00\\x16\\xa9\\t\\x00\\x08\\xfaR\\x00\\x08\\xfaQ\\x00\\x02d\\x8e\\x00\\x0e\\x00\\x02\\x00\\x00\\x00\\x0f\\x00\\x1a\\x00\\x0c\\x00M\\x00a\\x00c\\x00i\\x00n\\x00t\\x00o\\x00s\\x00h\\x00 \\x00H\\x00D\\x00\\x13\\x00\\x01/\\x00\\x00\\x15\\x00\\x02\\x00\\x14\\xff\\xff\\x00\\x00\\xff\\xff\\x00\\x00',\n+    'backgroundColorBlue': 1.0,\n+    'iconSize': 96.0,\n+    'backgroundColorGreen': 1.0,\n+    'arrangeBy': 'none',\n+    'showIconPreview': True,\n+    'gridSpacing': 100.0,\n+    'gridOffsetY': 0.0,\n+    'showItemInfo': False,\n+    'labelOnBottom': True,\n+    'backgroundType': 2,\n+    'backgroundColorRed': 1.0\n+}\n+alias = Alias.from_bytes(icvp['backgroundImageAlias'])\n+alias.volume.name = package_name_ns\n+alias.volume.posix_path = '/Volumes/' + package_name_ns\n+alias.volume.disk_image_alias.target.filename = package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00bitcoinuser:\\x00Documents:\\x00bitcoin:\\x00bitcoin:\\x00' + package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.posix_path = 'Users/bitcoinuser/Documents/bitcoin/bitcoin/' + package_name_ns + '.temp.dmg'\n+alias.target.carbon_path = package_name_ns + ':.background:\\x00background.tiff'\n+icvp['backgroundImageAlias'] = biplist.Data(alias.to_bytes())\n+ds['.']['icvp'] = icvp\n+\n+ds['.']['vSrn'] = ('long', 1)\n+\n+ds['Applications']['Iloc'] = (370, 156)\n+ds['Bitcoin-Qt.app']['Iloc'] = (128, 156)\n+\n+ds.flush()\n+ds.close()"
      },
      {
        "sha": "5c5a85d3fe1861a4e5d3300faa04480f17846975",
        "filename": "contrib/macdeploy/detached-sig-apply.sh",
        "status": "added",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/macdeploy/detached-sig-apply.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/macdeploy/detached-sig-apply.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-apply.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,57 @@\n+#!/bin/sh\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+set -e\n+\n+UNSIGNED=\"$1\"\n+SIGNATURE=\"$2\"\n+ARCH=x86_64\n+ROOTDIR=dist\n+TEMPDIR=signed.temp\n+OUTDIR=signed-app\n+\n+if [ -z \"$UNSIGNED\" ]; then\n+  echo \"usage: $0 <unsigned app> <signature>\"\n+  exit 1\n+fi\n+\n+if [ -z \"$SIGNATURE\" ]; then\n+  echo \"usage: $0 <unsigned app> <signature>\"\n+  exit 1\n+fi\n+\n+rm -rf ${TEMPDIR} && mkdir -p ${TEMPDIR}\n+tar -C ${TEMPDIR} -xf ${UNSIGNED}\n+cp -rf \"${SIGNATURE}\"/* ${TEMPDIR}\n+\n+if [ -z \"${PAGESTUFF}\" ]; then\n+  PAGESTUFF=${TEMPDIR}/pagestuff\n+fi\n+\n+if [ -z \"${CODESIGN_ALLOCATE}\" ]; then\n+  CODESIGN_ALLOCATE=${TEMPDIR}/codesign_allocate\n+fi\n+\n+find ${TEMPDIR} -name \"*.sign\" | while read i; do\n+  SIZE=$(stat -c %s \"${i}\")\n+  TARGET_FILE=\"$(echo \"${i}\" | sed 's/\\.sign$//')\"\n+\n+  echo \"Allocating space for the signature of size ${SIZE} in ${TARGET_FILE}\"\n+  ${CODESIGN_ALLOCATE} -i \"${TARGET_FILE}\" -a ${ARCH} ${SIZE} -o \"${i}.tmp\"\n+\n+  OFFSET=$(${PAGESTUFF} \"${i}.tmp\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g')\n+  if [ -z ${QUIET} ]; then\n+    echo \"Attaching signature at offset ${OFFSET}\"\n+  fi\n+\n+  dd if=\"$i\" of=\"${i}.tmp\" bs=1 seek=${OFFSET} count=${SIZE} 2>/dev/null\n+  mv \"${i}.tmp\" \"${TARGET_FILE}\"\n+  rm \"${i}\"\n+  echo \"Success.\"\n+done\n+mv ${TEMPDIR}/${ROOTDIR} ${OUTDIR}\n+rm -rf ${TEMPDIR}\n+echo \"Signed: ${OUTDIR}\""
      },
      {
        "sha": "31a97f0a24c7238a3c4c53d79e0fe34a783d2a6d",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,52 @@\n+#!/bin/sh\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+set -e\n+\n+ROOTDIR=dist\n+BUNDLE=\"${ROOTDIR}/Bitcoin-Qt.app\"\n+CODESIGN=codesign\n+TEMPDIR=sign.temp\n+TEMPLIST=${TEMPDIR}/signatures.txt\n+OUT=signature-osx.tar.gz\n+OUTROOT=osx\n+\n+if [ -z \"$1\" ]; then\n+  echo \"usage: $0 <codesign args>\"\n+  echo \"example: $0 -s MyIdentity\"\n+  exit 1\n+fi\n+\n+rm -rf ${TEMPDIR} ${TEMPLIST}\n+mkdir -p ${TEMPDIR}\n+\n+${CODESIGN} -f --file-list ${TEMPLIST} \"$@\" \"${BUNDLE}\"\n+\n+grep -v CodeResources < \"${TEMPLIST}\" | while read i; do\n+  TARGETFILE=\"${BUNDLE}/$(echo \"${i}\" | sed \"s|.*${BUNDLE}/||\")\"\n+  SIZE=$(pagestuff \"$i\" -p | tail -2 | grep size | sed 's/[^0-9]*//g')\n+  OFFSET=$(pagestuff \"$i\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g')\n+  SIGNFILE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}.sign\"\n+  DIRNAME=\"$(dirname \"${SIGNFILE}\")\"\n+  mkdir -p \"${DIRNAME}\"\n+  echo \"Adding detached signature for: ${TARGETFILE}. Size: ${SIZE}. Offset: ${OFFSET}\"\n+  dd if=\"$i\" of=\"${SIGNFILE}\" bs=1 skip=${OFFSET} count=${SIZE} 2>/dev/null\n+done\n+\n+grep CodeResources < \"${TEMPLIST}\" | while read i; do\n+  TARGETFILE=\"${BUNDLE}/$(echo \"${i}\" | sed \"s|.*${BUNDLE}/||\")\"\n+  RESOURCE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}\"\n+  DIRNAME=\"$(dirname \"${RESOURCE}\")\"\n+  mkdir -p \"${DIRNAME}\"\n+  echo \"Adding resource for: \\\"${TARGETFILE}\\\"\"\n+  cp \"${i}\" \"${RESOURCE}\"\n+done\n+\n+rm ${TEMPLIST}\n+\n+tar -C \"${TEMPDIR}\" -czf \"${OUT}\" .\n+rm -rf \"${TEMPDIR}\"\n+echo \"Created ${OUT}\""
      },
      {
        "sha": "3c7bdf4217c5c9ae13aa9dd3cff55cdb9f0e4577",
        "filename": "contrib/macdeploy/extract-osx-sdk.sh",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/macdeploy/extract-osx-sdk.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/macdeploy/extract-osx-sdk.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/extract-osx-sdk.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,34 @@\n+#!/usr/bin/env bash\n+# Copyright (c) 2016-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+set -e\n+\n+INPUTFILE=\"Xcode_7.3.1.dmg\"\n+HFSFILENAME=\"5.hfs\"\n+SDKDIR=\"Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk\"\n+\n+7z x \"${INPUTFILE}\" \"${HFSFILENAME}\"\n+SDKNAME=\"$(basename \"${SDKDIR}\")\"\n+SDKDIRINODE=$(ifind -n \"${SDKDIR}\" \"${HFSFILENAME}\")\n+fls \"${HFSFILENAME}\" -rpF ${SDKDIRINODE} |\n+ while read type inode filename; do\n+\tinode=\"${inode::-1}\"\n+\tif [ \"${filename:0:14}\" = \"usr/share/man/\" ]; then\n+\t\tcontinue\n+\tfi\n+\tfilename=\"${SDKNAME}/$filename\"\n+\techo \"Extracting $filename ...\"\n+\tmkdir -p \"$(dirname \"$filename\")\"\n+\tif [ \"$type\" = \"l/l\" ]; then\n+\t\tln -s \"$(icat \"${HFSFILENAME}\" $inode)\" \"$filename\"\n+\telse\n+\t\ticat \"${HFSFILENAME}\" $inode >\"$filename\"\n+\tfi\n+done\n+echo \"Building ${SDKNAME}.tar.gz ...\"\n+MTIME=\"$(istat \"${HFSFILENAME}\" \"${SDKDIRINODE}\" | perl -nle 'm/Content Modified:\\s+(.*?)\\s\\(/ && print $1')\"\n+find \"${SDKNAME}\" | sort | tar --no-recursion --mtime=\"${MTIME}\" --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > \"${SDKNAME}.tar.gz\"\n+echo 'All done!'"
      },
      {
        "sha": "457d8f5e645c8e9a6f1a55edf410599db065feed",
        "filename": "contrib/macdeploy/gen-sdk",
        "status": "added",
        "additions": 94,
        "deletions": 0,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/macdeploy/gen-sdk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/macdeploy/gen-sdk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/gen-sdk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,94 @@\n+#!/usr/bin/env python3\n+import argparse\n+import plistlib\n+import pathlib\n+import sys\n+import tarfile\n+import gzip\n+import os\n+import contextlib\n+\n+@contextlib.contextmanager\n+def cd(path):\n+    \"\"\"Context manager that restores PWD even if an exception was raised.\"\"\"\n+    old_pwd = os.getcwd()\n+    os.chdir(str(path))\n+    try:\n+        yield\n+    finally:\n+        os.chdir(old_pwd)\n+\n+def run():\n+    parser = argparse.ArgumentParser(\n+        description=__doc__, formatter_class=argparse.RawTextHelpFormatter)\n+\n+    parser.add_argument('xcode_app', metavar='XCODEAPP', nargs=1)\n+    parser.add_argument(\"-o\", metavar='OUTSDKTGZ', nargs=1, dest='out_sdktgz', required=False)\n+\n+    args = parser.parse_args()\n+\n+    xcode_app = pathlib.Path(args.xcode_app[0]).resolve()\n+    assert xcode_app.is_dir(), \"The supplied Xcode.app path '{}' either does not exist or is not a directory\".format(xcode_app)\n+\n+    xcode_app_plist = xcode_app.joinpath(\"Contents/version.plist\")\n+    with xcode_app_plist.open('rb') as fp:\n+        pl = plistlib.load(fp)\n+        xcode_version = pl['CFBundleShortVersionString']\n+        xcode_build_id = pl['ProductBuildVersion']\n+    print(\"Found Xcode (version: {xcode_version}, build id: {xcode_build_id})\".format(xcode_version=xcode_version, xcode_build_id=xcode_build_id))\n+\n+    sdk_dir = xcode_app.joinpath(\"Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk\")\n+    sdk_plist = sdk_dir.joinpath(\"System/Library/CoreServices/SystemVersion.plist\")\n+    with sdk_plist.open('rb') as fp:\n+        pl = plistlib.load(fp)\n+        sdk_version = pl['ProductVersion']\n+        sdk_build_id = pl['ProductBuildVersion']\n+    print(\"Found MacOSX SDK (version: {sdk_version}, build id: {sdk_build_id})\".format(sdk_version=sdk_version, sdk_build_id=sdk_build_id))\n+\n+    out_name = \"Xcode-{xcode_version}-{xcode_build_id}-extracted-SDK-with-libcxx-headers\".format(xcode_version=xcode_version, xcode_build_id=xcode_build_id)\n+\n+    xcode_libcxx_dir = xcode_app.joinpath(\"Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1\")\n+    assert xcode_libcxx_dir.is_dir()\n+\n+    if args.out_sdktgz:\n+        out_sdktgz_path = pathlib.Path(args.out_sdktgz_path)\n+    else:\n+        # Construct our own out_sdktgz if not specified on the command line\n+        out_sdktgz_path = pathlib.Path(\"./{}.tar.gz\".format(out_name))\n+\n+    def tarfp_add_with_base_change(tarfp, dir_to_add, alt_base_dir):\n+        \"\"\"Add all files in dir_to_add to tarfp, but prepent MEMBERPREFIX to the files'\n+        names\n+\n+        e.g. if the only file under /root/bazdir is /root/bazdir/qux, invoking:\n+\n+            tarfp_add_with_base_change(tarfp, \"foo/bar\", \"/root/bazdir\")\n+\n+        would result in the following members being added to tarfp:\n+\n+            foo/bar/             -> corresponding to /root/bazdir\n+            foo/bar/qux          -> corresponding to /root/bazdir/qux\n+\n+        \"\"\"\n+        def change_tarinfo_base(tarinfo):\n+            if tarinfo.name and tarinfo.name.startswith(\"./\"):\n+                tarinfo.name = str(pathlib.Path(alt_base_dir, tarinfo.name))\n+            if tarinfo.linkname and tarinfo.linkname.startswith(\"./\"):\n+                tarinfo.linkname = str(pathlib.Path(alt_base_dir, tarinfo.linkname))\n+            return tarinfo\n+        with cd(dir_to_add):\n+            tarfp.add(\".\", recursive=True, filter=change_tarinfo_base)\n+\n+    print(\"Creating output .tar.gz file...\")\n+    with out_sdktgz_path.open(\"wb\") as fp:\n+        with gzip.GzipFile(fileobj=fp, compresslevel=9, mtime=0) as gzf:\n+            with tarfile.open(mode=\"w\", fileobj=gzf) as tarfp:\n+                print(\"Adding MacOSX SDK {} files...\".format(sdk_version))\n+                tarfp_add_with_base_change(tarfp, sdk_dir, out_name)\n+                print(\"Adding libc++ headers...\")\n+                tarfp_add_with_base_change(tarfp, xcode_libcxx_dir, \"{}/usr/include/c++/v1\".format(out_name))\n+    print(\"Done! Find the resulting gzipped tarball at:\")\n+    print(out_sdktgz_path.resolve())\n+\n+if __name__ == '__main__':\n+    run()"
      },
      {
        "sha": "524104398be6ea96e05f7506a6c493a686fa998d",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "added",
        "additions": 909,
        "deletions": 0,
        "changes": 909,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,909 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (C) 2011  Patrick \"p2k\" Schneider <me@p2k-network.org>\n+#\n+# This program is free software: you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation, either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+#\n+\n+import subprocess, sys, re, os, shutil, stat, os.path, time\n+from string import Template\n+from argparse import ArgumentParser\n+from typing import List, Optional\n+\n+# This is ported from the original macdeployqt with modifications\n+\n+class FrameworkInfo(object):\n+    def __init__(self):\n+        self.frameworkDirectory = \"\"\n+        self.frameworkName = \"\"\n+        self.frameworkPath = \"\"\n+        self.binaryDirectory = \"\"\n+        self.binaryName = \"\"\n+        self.binaryPath = \"\"\n+        self.version = \"\"\n+        self.installName = \"\"\n+        self.deployedInstallName = \"\"\n+        self.sourceFilePath = \"\"\n+        self.destinationDirectory = \"\"\n+        self.sourceResourcesDirectory = \"\"\n+        self.sourceVersionContentsDirectory = \"\"\n+        self.sourceContentsDirectory = \"\"\n+        self.destinationResourcesDirectory = \"\"\n+        self.destinationVersionContentsDirectory = \"\"\n+    \n+    def __eq__(self, other):\n+        if self.__class__ == other.__class__:\n+            return self.__dict__ == other.__dict__\n+        else:\n+            return False\n+    \n+    def __str__(self):\n+        return \"\"\" Framework name: {}\n+ Framework directory: {}\n+ Framework path: {}\n+ Binary name: {}\n+ Binary directory: {}\n+ Binary path: {}\n+ Version: {}\n+ Install name: {}\n+ Deployed install name: {}\n+ Source file Path: {}\n+ Deployed Directory (relative to bundle): {}\n+\"\"\".format(self.frameworkName,\n+       self.frameworkDirectory,\n+       self.frameworkPath,\n+       self.binaryName,\n+       self.binaryDirectory,\n+       self.binaryPath,\n+       self.version,\n+       self.installName,\n+       self.deployedInstallName,\n+       self.sourceFilePath,\n+       self.destinationDirectory)\n+    \n+    def isDylib(self):\n+        return self.frameworkName.endswith(\".dylib\")\n+    \n+    def isQtFramework(self):\n+        if self.isDylib():\n+            return self.frameworkName.startswith(\"libQt\")\n+        else:\n+            return self.frameworkName.startswith(\"Qt\")\n+    \n+    reOLine = re.compile(r'^(.+) \\(compatibility version [0-9.]+, current version [0-9.]+\\)$')\n+    bundleFrameworkDirectory = \"Contents/Frameworks\"\n+    bundleBinaryDirectory = \"Contents/MacOS\"\n+    \n+    @classmethod\n+    def fromOtoolLibraryLine(cls, line: str) -> Optional['FrameworkInfo']:\n+        # Note: line must be trimmed\n+        if line == \"\":\n+            return None\n+        \n+        # Don't deploy system libraries (exception for libQtuitools and libQtlucene).\n+        if line.startswith(\"/System/Library/\") or line.startswith(\"@executable_path\") or (line.startswith(\"/usr/lib/\") and \"libQt\" not in line):\n+            return None\n+        \n+        m = cls.reOLine.match(line)\n+        if m is None:\n+            raise RuntimeError(\"otool line could not be parsed: \" + line)\n+        \n+        path = m.group(1)\n+        \n+        info = cls()\n+        info.sourceFilePath = path\n+        info.installName = path\n+        \n+        if path.endswith(\".dylib\"):\n+            dirname, filename = os.path.split(path)\n+            info.frameworkName = filename\n+            info.frameworkDirectory = dirname\n+            info.frameworkPath = path\n+            \n+            info.binaryDirectory = dirname\n+            info.binaryName = filename\n+            info.binaryPath = path\n+            info.version = \"-\"\n+            \n+            info.installName = path\n+            info.deployedInstallName = \"@executable_path/../Frameworks/\" + info.binaryName\n+            info.sourceFilePath = path\n+            info.destinationDirectory = cls.bundleFrameworkDirectory\n+        else:\n+            parts = path.split(\"/\")\n+            i = 0\n+            # Search for the .framework directory\n+            for part in parts:\n+                if part.endswith(\".framework\"):\n+                    break\n+                i += 1\n+            if i == len(parts):\n+                raise RuntimeError(\"Could not find .framework or .dylib in otool line: \" + line)\n+            \n+            info.frameworkName = parts[i]\n+            info.frameworkDirectory = \"/\".join(parts[:i])\n+            info.frameworkPath = os.path.join(info.frameworkDirectory, info.frameworkName)\n+            \n+            info.binaryName = parts[i+3]\n+            info.binaryDirectory = \"/\".join(parts[i+1:i+3])\n+            info.binaryPath = os.path.join(info.binaryDirectory, info.binaryName)\n+            info.version = parts[i+2]\n+            \n+            info.deployedInstallName = \"@executable_path/../Frameworks/\" + os.path.join(info.frameworkName, info.binaryPath)\n+            info.destinationDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, info.binaryDirectory)\n+            \n+            info.sourceResourcesDirectory = os.path.join(info.frameworkPath, \"Resources\")\n+            info.sourceContentsDirectory = os.path.join(info.frameworkPath, \"Contents\")\n+            info.sourceVersionContentsDirectory = os.path.join(info.frameworkPath, \"Versions\", info.version, \"Contents\")\n+            info.destinationResourcesDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Resources\")\n+            info.destinationVersionContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Versions\", info.version, \"Contents\")\n+        \n+        return info\n+\n+class ApplicationBundleInfo(object):\n+    def __init__(self, path: str):\n+        self.path = path\n+        appName = \"Bitcoin-Qt\"\n+        self.binaryPath = os.path.join(path, \"Contents\", \"MacOS\", appName)\n+        if not os.path.exists(self.binaryPath):\n+            raise RuntimeError(\"Could not find bundle binary for \" + path)\n+        self.resourcesPath = os.path.join(path, \"Contents\", \"Resources\")\n+        self.pluginPath = os.path.join(path, \"Contents\", \"PlugIns\")\n+\n+class DeploymentInfo(object):\n+    def __init__(self):\n+        self.qtPath = None\n+        self.pluginPath = None\n+        self.deployedFrameworks = []\n+    \n+    def detectQtPath(self, frameworkDirectory: str):\n+        parentDir = os.path.dirname(frameworkDirectory)\n+        if os.path.exists(os.path.join(parentDir, \"translations\")):\n+            # Classic layout, e.g. \"/usr/local/Trolltech/Qt-4.x.x\"\n+            self.qtPath = parentDir\n+        else:\n+            self.qtPath = os.getenv(\"QTDIR\", None)\n+\n+        if self.qtPath is not None:\n+            pluginPath = os.path.join(self.qtPath, \"plugins\")\n+            if os.path.exists(pluginPath):\n+                self.pluginPath = pluginPath\n+    \n+    def usesFramework(self, name: str) -> bool:\n+        nameDot = \"{}.\".format(name)\n+        libNameDot = \"lib{}.\".format(name)\n+        for framework in self.deployedFrameworks:\n+            if framework.endswith(\".framework\"):\n+                if framework.startswith(nameDot):\n+                    return True\n+            elif framework.endswith(\".dylib\"):\n+                if framework.startswith(libNameDot):\n+                    return True\n+        return False\n+\n+def getFrameworks(binaryPath: str, verbose: int) -> List[FrameworkInfo]:\n+    if verbose >= 3:\n+        print(\"Inspecting with otool: \" + binaryPath)\n+    otoolbin=os.getenv(\"OTOOL\", \"otool\")\n+    otool = subprocess.Popen([otoolbin, \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)\n+    o_stdout, o_stderr = otool.communicate()\n+    if otool.returncode != 0:\n+        if verbose >= 1:\n+            sys.stderr.write(o_stderr)\n+            sys.stderr.flush()\n+            raise RuntimeError(\"otool failed with return code {}\".format(otool.returncode))\n+\n+    otoolLines = o_stdout.split(\"\\n\")\n+    otoolLines.pop(0) # First line is the inspected binary\n+    if \".framework\" in binaryPath or binaryPath.endswith(\".dylib\"):\n+        otoolLines.pop(0) # Frameworks and dylibs list themselves as a dependency.\n+    \n+    libraries = []\n+    for line in otoolLines:\n+        line = line.replace(\"@loader_path\", os.path.dirname(binaryPath))\n+        info = FrameworkInfo.fromOtoolLibraryLine(line.strip())\n+        if info is not None:\n+            if verbose >= 3:\n+                print(\"Found framework:\")\n+                print(info)\n+            libraries.append(info)\n+    \n+    return libraries\n+\n+def runInstallNameTool(action: str, *args):\n+    installnametoolbin=os.getenv(\"INSTALLNAMETOOL\", \"install_name_tool\")\n+    subprocess.check_call([installnametoolbin, \"-\"+action] + list(args))\n+\n+def changeInstallName(oldName: str, newName: str, binaryPath: str, verbose: int):\n+    if verbose >= 3:\n+        print(\"Using install_name_tool:\")\n+        print(\" in\", binaryPath)\n+        print(\" change reference\", oldName)\n+        print(\" to\", newName)\n+    runInstallNameTool(\"change\", oldName, newName, binaryPath)\n+\n+def changeIdentification(id: str, binaryPath: str, verbose: int):\n+    if verbose >= 3:\n+        print(\"Using install_name_tool:\")\n+        print(\" change identification in\", binaryPath)\n+        print(\" to\", id)\n+    runInstallNameTool(\"id\", id, binaryPath)\n+\n+def runStrip(binaryPath: str, verbose: int):\n+    stripbin=os.getenv(\"STRIP\", \"strip\")\n+    if verbose >= 3:\n+        print(\"Using strip:\")\n+        print(\" stripped\", binaryPath)\n+    subprocess.check_call([stripbin, \"-x\", binaryPath])\n+\n+def copyFramework(framework: FrameworkInfo, path: str, verbose: int) -> Optional[str]:\n+    if framework.sourceFilePath.startswith(\"Qt\"):\n+        #standard place for Nokia Qt installer's frameworks\n+        fromPath = \"/Library/Frameworks/\" + framework.sourceFilePath\n+    else:\n+        fromPath = framework.sourceFilePath\n+    toDir = os.path.join(path, framework.destinationDirectory)\n+    toPath = os.path.join(toDir, framework.binaryName)\n+    \n+    if not os.path.exists(fromPath):\n+        raise RuntimeError(\"No file at \" + fromPath)\n+    \n+    if os.path.exists(toPath):\n+        return None # Already there\n+    \n+    if not os.path.exists(toDir):\n+        os.makedirs(toDir)\n+    \n+    shutil.copy2(fromPath, toPath)\n+    if verbose >= 3:\n+        print(\"Copied:\", fromPath)\n+        print(\" to:\", toPath)\n+\n+    permissions = os.stat(toPath)\n+    if not permissions.st_mode & stat.S_IWRITE:\n+      os.chmod(toPath, permissions.st_mode | stat.S_IWRITE)\n+\n+    if not framework.isDylib(): # Copy resources for real frameworks\n+\n+        linkfrom = os.path.join(path, \"Contents\",\"Frameworks\", framework.frameworkName, \"Versions\", \"Current\")\n+        linkto = framework.version\n+        if not os.path.exists(linkfrom):\n+            os.symlink(linkto, linkfrom)\n+            if verbose >= 2:\n+                print(\"Linked:\", linkfrom, \"->\", linkto)\n+        fromResourcesDir = framework.sourceResourcesDirectory\n+        if os.path.exists(fromResourcesDir):\n+            toResourcesDir = os.path.join(path, framework.destinationResourcesDirectory)\n+            shutil.copytree(fromResourcesDir, toResourcesDir, symlinks=True)\n+            if verbose >= 3:\n+                print(\"Copied resources:\", fromResourcesDir)\n+                print(\" to:\", toResourcesDir)\n+        fromContentsDir = framework.sourceVersionContentsDirectory\n+        if not os.path.exists(fromContentsDir):\n+            fromContentsDir = framework.sourceContentsDirectory\n+        if os.path.exists(fromContentsDir):\n+            toContentsDir = os.path.join(path, framework.destinationVersionContentsDirectory)\n+            shutil.copytree(fromContentsDir, toContentsDir, symlinks=True)\n+            if verbose >= 3:\n+                print(\"Copied Contents:\", fromContentsDir)\n+                print(\" to:\", toContentsDir)\n+    elif framework.frameworkName.startswith(\"libQtGui\"): # Copy qt_menu.nib (applies to non-framework layout)\n+        qtMenuNibSourcePath = os.path.join(framework.frameworkDirectory, \"Resources\", \"qt_menu.nib\")\n+        qtMenuNibDestinationPath = os.path.join(path, \"Contents\", \"Resources\", \"qt_menu.nib\")\n+        if os.path.exists(qtMenuNibSourcePath) and not os.path.exists(qtMenuNibDestinationPath):\n+            shutil.copytree(qtMenuNibSourcePath, qtMenuNibDestinationPath, symlinks=True)\n+            if verbose >= 3:\n+                print(\"Copied for libQtGui:\", qtMenuNibSourcePath)\n+                print(\" to:\", qtMenuNibDestinationPath)\n+    \n+    return toPath\n+\n+def deployFrameworks(frameworks: List[FrameworkInfo], bundlePath: str, binaryPath: str, strip: bool, verbose: int, deploymentInfo: Optional[DeploymentInfo] = None) -> DeploymentInfo:\n+    if deploymentInfo is None:\n+        deploymentInfo = DeploymentInfo()\n+    \n+    while len(frameworks) > 0:\n+        framework = frameworks.pop(0)\n+        deploymentInfo.deployedFrameworks.append(framework.frameworkName)\n+        \n+        if verbose >= 2:\n+            print(\"Processing\", framework.frameworkName, \"...\")\n+        \n+        # Get the Qt path from one of the Qt frameworks\n+        if deploymentInfo.qtPath is None and framework.isQtFramework():\n+            deploymentInfo.detectQtPath(framework.frameworkDirectory)\n+        \n+        if framework.installName.startswith(\"@executable_path\") or framework.installName.startswith(bundlePath):\n+            if verbose >= 2:\n+                print(framework.frameworkName, \"already deployed, skipping.\")\n+            continue\n+        \n+        # install_name_tool the new id into the binary\n+        changeInstallName(framework.installName, framework.deployedInstallName, binaryPath, verbose)\n+        \n+        # Copy framework to app bundle.\n+        deployedBinaryPath = copyFramework(framework, bundlePath, verbose)\n+        # Skip the rest if already was deployed.\n+        if deployedBinaryPath is None:\n+            continue\n+        \n+        if strip:\n+            runStrip(deployedBinaryPath, verbose)\n+        \n+        # install_name_tool it a new id.\n+        changeIdentification(framework.deployedInstallName, deployedBinaryPath, verbose)\n+        # Check for framework dependencies\n+        dependencies = getFrameworks(deployedBinaryPath, verbose)\n+        \n+        for dependency in dependencies:\n+            changeInstallName(dependency.installName, dependency.deployedInstallName, deployedBinaryPath, verbose)\n+            \n+            # Deploy framework if necessary.\n+            if dependency.frameworkName not in deploymentInfo.deployedFrameworks and dependency not in frameworks:\n+                frameworks.append(dependency)\n+    \n+    return deploymentInfo\n+\n+def deployFrameworksForAppBundle(applicationBundle: ApplicationBundleInfo, strip: bool, verbose: int) -> DeploymentInfo:\n+    frameworks = getFrameworks(applicationBundle.binaryPath, verbose)\n+    if len(frameworks) == 0 and verbose >= 1:\n+        print(\"Warning: Could not find any external frameworks to deploy in {}.\".format(applicationBundle.path))\n+        return DeploymentInfo()\n+    else:\n+        return deployFrameworks(frameworks, applicationBundle.path, applicationBundle.binaryPath, strip, verbose)\n+\n+def deployPlugins(appBundleInfo: ApplicationBundleInfo, deploymentInfo: DeploymentInfo, strip: bool, verbose: int):\n+    # Lookup available plugins, exclude unneeded\n+    plugins = []\n+    if deploymentInfo.pluginPath is None:\n+        return\n+    for dirpath, dirnames, filenames in os.walk(deploymentInfo.pluginPath):\n+        pluginDirectory = os.path.relpath(dirpath, deploymentInfo.pluginPath)\n+        if pluginDirectory == \"designer\":\n+            # Skip designer plugins\n+            continue\n+        elif pluginDirectory == \"printsupport\":\n+            # Skip printsupport plugins\n+            continue\n+        elif pluginDirectory == \"imageformats\":\n+            # Skip imageformats plugins\n+            continue\n+        elif pluginDirectory == \"sqldrivers\":\n+            # Deploy the sql plugins only if QtSql is in use\n+            if not deploymentInfo.usesFramework(\"QtSql\"):\n+                continue\n+        elif pluginDirectory == \"script\":\n+            # Deploy the script plugins only if QtScript is in use\n+            if not deploymentInfo.usesFramework(\"QtScript\"):\n+                continue\n+        elif pluginDirectory == \"qmltooling\" or pluginDirectory == \"qml1tooling\":\n+            # Deploy the qml plugins only if QtDeclarative is in use\n+            if not deploymentInfo.usesFramework(\"QtDeclarative\"):\n+                continue\n+        elif pluginDirectory == \"bearer\":\n+            # Deploy the bearer plugins only if QtNetwork is in use\n+            if not deploymentInfo.usesFramework(\"QtNetwork\"):\n+                continue\n+        elif pluginDirectory == \"position\":\n+            # Deploy the position plugins only if QtPositioning is in use\n+            if not deploymentInfo.usesFramework(\"QtPositioning\"):\n+                continue\n+        elif pluginDirectory == \"sensors\" or pluginDirectory == \"sensorgestures\":\n+            # Deploy the sensor plugins only if QtSensors is in use\n+            if not deploymentInfo.usesFramework(\"QtSensors\"):\n+                continue\n+        elif pluginDirectory == \"audio\" or pluginDirectory == \"playlistformats\":\n+            # Deploy the audio plugins only if QtMultimedia is in use\n+            if not deploymentInfo.usesFramework(\"QtMultimedia\"):\n+                continue\n+        elif pluginDirectory == \"mediaservice\":\n+            # Deploy the mediaservice plugins only if QtMultimediaWidgets is in use\n+            if not deploymentInfo.usesFramework(\"QtMultimediaWidgets\"):\n+                continue\n+        elif pluginDirectory == \"canbus\":\n+            # Deploy the canbus plugins only if QtSerialBus is in use\n+            if not deploymentInfo.usesFramework(\"QtSerialBus\"):\n+                continue\n+        elif pluginDirectory == \"webview\":\n+            # Deploy the webview plugins only if QtWebView is in use\n+            if not deploymentInfo.usesFramework(\"QtWebView\"):\n+                continue\n+        elif pluginDirectory == \"gamepads\":\n+            # Deploy the webview plugins only if QtGamepad is in use\n+            if not deploymentInfo.usesFramework(\"QtGamepad\"):\n+                continue\n+        elif pluginDirectory == \"geoservices\":\n+            # Deploy the webview plugins only if QtLocation is in use\n+            if not deploymentInfo.usesFramework(\"QtLocation\"):\n+                continue\n+        elif pluginDirectory == \"texttospeech\":\n+            # Deploy the texttospeech plugins only if QtTextToSpeech is in use\n+            if not deploymentInfo.usesFramework(\"QtTextToSpeech\"):\n+                continue\n+        elif pluginDirectory == \"virtualkeyboard\":\n+            # Deploy the virtualkeyboard plugins only if QtVirtualKeyboard is in use\n+            if not deploymentInfo.usesFramework(\"QtVirtualKeyboard\"):\n+                continue\n+        elif pluginDirectory == \"sceneparsers\":\n+            # Deploy the virtualkeyboard plugins only if Qt3DCore is in use\n+            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n+                continue\n+        elif pluginDirectory == \"renderplugins\":\n+            # Deploy the renderplugins plugins only if Qt3DCore is in use\n+            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n+                continue\n+        elif pluginDirectory == \"geometryloaders\":\n+            # Deploy the geometryloaders plugins only if Qt3DCore is in use\n+            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n+                continue\n+\n+        for pluginName in filenames:\n+            pluginPath = os.path.join(pluginDirectory, pluginName)\n+            if pluginName.endswith(\"_debug.dylib\"):\n+                # Skip debug plugins\n+                continue\n+            elif pluginPath == \"imageformats/libqsvg.dylib\" or pluginPath == \"iconengines/libqsvgicon.dylib\":\n+                # Deploy the svg plugins only if QtSvg is in use\n+                if not deploymentInfo.usesFramework(\"QtSvg\"):\n+                    continue\n+            elif pluginPath == \"accessible/libqtaccessiblecompatwidgets.dylib\":\n+                # Deploy accessibility for Qt3Support only if the Qt3Support is in use\n+                if not deploymentInfo.usesFramework(\"Qt3Support\"):\n+                    continue\n+            elif pluginPath == \"graphicssystems/libqglgraphicssystem.dylib\":\n+                # Deploy the opengl graphicssystem plugin only if QtOpenGL is in use\n+                if not deploymentInfo.usesFramework(\"QtOpenGL\"):\n+                    continue\n+            elif pluginPath == \"accessible/libqtaccessiblequick.dylib\":\n+                # Deploy the accessible qtquick plugin only if QtQuick is in use\n+                if not deploymentInfo.usesFramework(\"QtQuick\"):\n+                    continue\n+            elif pluginPath == \"platforminputcontexts/libqtvirtualkeyboardplugin.dylib\":\n+                # Deploy the virtualkeyboardplugin plugin only if QtVirtualKeyboard is in use\n+                if not deploymentInfo.usesFramework(\"QtVirtualKeyboard\"):\n+                    continue\n+\n+            plugins.append((pluginDirectory, pluginName))\n+    \n+    for pluginDirectory, pluginName in plugins:\n+        if verbose >= 2:\n+            print(\"Processing plugin\", os.path.join(pluginDirectory, pluginName), \"...\")\n+        \n+        sourcePath = os.path.join(deploymentInfo.pluginPath, pluginDirectory, pluginName)\n+        destinationDirectory = os.path.join(appBundleInfo.pluginPath, pluginDirectory)\n+        if not os.path.exists(destinationDirectory):\n+            os.makedirs(destinationDirectory)\n+        \n+        destinationPath = os.path.join(destinationDirectory, pluginName)\n+        shutil.copy2(sourcePath, destinationPath)\n+        if verbose >= 3:\n+            print(\"Copied:\", sourcePath)\n+            print(\" to:\", destinationPath)\n+        \n+        if strip:\n+            runStrip(destinationPath, verbose)\n+        \n+        dependencies = getFrameworks(destinationPath, verbose)\n+        \n+        for dependency in dependencies:\n+            changeInstallName(dependency.installName, dependency.deployedInstallName, destinationPath, verbose)\n+            \n+            # Deploy framework if necessary.\n+            if dependency.frameworkName not in deploymentInfo.deployedFrameworks:\n+                deployFrameworks([dependency], appBundleInfo.path, destinationPath, strip, verbose, deploymentInfo)\n+\n+qt_conf=\"\"\"[Paths]\n+Translations=Resources\n+Plugins=PlugIns\n+\"\"\"\n+\n+ap = ArgumentParser(description=\"\"\"Improved version of macdeployqt.\n+\n+Outputs a ready-to-deploy app in a folder \"dist\" and optionally wraps it in a .dmg file.\n+Note, that the \"dist\" folder will be deleted before deploying on each run.\n+\n+Optionally, Qt translation files (.qm) and additional resources can be added to the bundle.\n+\n+Also optionally signs the .app bundle; set the CODESIGNARGS environment variable to pass arguments\n+to the codesign tool.\n+E.g. CODESIGNARGS='--sign \"Developer ID Application: ...\" --keychain /encrypted/foo.keychain'\"\"\")\n+\n+ap.add_argument(\"app_bundle\", nargs=1, metavar=\"app-bundle\", help=\"application bundle to be deployed\")\n+ap.add_argument(\"-verbose\", type=int, nargs=1, default=[1], metavar=\"<0-3>\", help=\"0 = no output, 1 = error/warning (default), 2 = normal, 3 = debug\")\n+ap.add_argument(\"-no-plugins\", dest=\"plugins\", action=\"store_false\", default=True, help=\"skip plugin deployment\")\n+ap.add_argument(\"-no-strip\", dest=\"strip\", action=\"store_false\", default=True, help=\"don't run 'strip' on the binaries\")\n+ap.add_argument(\"-sign\", dest=\"sign\", action=\"store_true\", default=False, help=\"sign .app bundle with codesign tool\")\n+ap.add_argument(\"-dmg\", nargs=\"?\", const=\"\", metavar=\"basename\", help=\"create a .dmg disk image; if basename is not specified, a camel-cased version of the app name is used\")\n+ap.add_argument(\"-fancy\", nargs=1, metavar=\"plist\", default=[], help=\"make a fancy looking disk image using the given plist file with instructions; requires -dmg to work\")\n+ap.add_argument(\"-add-qt-tr\", nargs=1, metavar=\"languages\", default=[], help=\"add Qt translation files to the bundle's resources; the language list must be separated with commas, not with whitespace\")\n+ap.add_argument(\"-translations-dir\", nargs=1, metavar=\"path\", default=None, help=\"Path to Qt's translation files\")\n+ap.add_argument(\"-add-resources\", nargs=\"+\", metavar=\"path\", default=[], help=\"list of additional files or folders to be copied into the bundle's resources; must be the last argument\")\n+ap.add_argument(\"-volname\", nargs=1, metavar=\"volname\", default=[], help=\"custom volume name for dmg\")\n+\n+config = ap.parse_args()\n+\n+verbose = config.verbose[0]\n+\n+# ------------------------------------------------\n+\n+app_bundle = config.app_bundle[0]\n+\n+if not os.path.exists(app_bundle):\n+    if verbose >= 1:\n+        sys.stderr.write(\"Error: Could not find app bundle \\\"{}\\\"\\n\".format(app_bundle))\n+    sys.exit(1)\n+\n+app_bundle_name = os.path.splitext(os.path.basename(app_bundle))[0]\n+\n+# ------------------------------------------------\n+translations_dir = None\n+if config.translations_dir and config.translations_dir[0]:\n+    if os.path.exists(config.translations_dir[0]):\n+        translations_dir = config.translations_dir[0]\n+    else:\n+        if verbose >= 1:\n+            sys.stderr.write(\"Error: Could not find translation dir \\\"{}\\\"\\n\".format(translations_dir))\n+        sys.exit(1)\n+# ------------------------------------------------\n+\n+for p in config.add_resources:\n+    if verbose >= 3:\n+        print(\"Checking for \\\"%s\\\"...\" % p)\n+    if not os.path.exists(p):\n+        if verbose >= 1:\n+            sys.stderr.write(\"Error: Could not find additional resource file \\\"{}\\\"\\n\".format(p))\n+        sys.exit(1)\n+\n+# ------------------------------------------------\n+\n+if len(config.fancy) == 1:\n+    if verbose >= 3:\n+        print(\"Fancy: Importing plistlib...\")\n+    try:\n+        import plistlib\n+    except ImportError:\n+        if verbose >= 1:\n+            sys.stderr.write(\"Error: Could not import plistlib which is required for fancy disk images.\\n\")\n+        sys.exit(1)\n+    \n+    p = config.fancy[0]\n+    if verbose >= 3:\n+        print(\"Fancy: Loading \\\"{}\\\"...\".format(p))\n+    if not os.path.exists(p):\n+        if verbose >= 1:\n+            sys.stderr.write(\"Error: Could not find fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n+        sys.exit(1)\n+    \n+    try:\n+        with open(p, 'rb') as fp:\n+            fancy = plistlib.load(fp, fmt=plistlib.FMT_XML)\n+    except:\n+        if verbose >= 1:\n+            sys.stderr.write(\"Error: Could not parse fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n+        sys.exit(1)\n+    \n+    try:\n+        assert \"window_bounds\" not in fancy or (isinstance(fancy[\"window_bounds\"], list) and len(fancy[\"window_bounds\"]) == 4)\n+        assert \"background_picture\" not in fancy or isinstance(fancy[\"background_picture\"], str)\n+        assert \"icon_size\" not in fancy or isinstance(fancy[\"icon_size\"], int)\n+        assert \"applications_symlink\" not in fancy or isinstance(fancy[\"applications_symlink\"], bool)\n+        if \"items_position\" in fancy:\n+            assert isinstance(fancy[\"items_position\"], dict)\n+            for key, value in fancy[\"items_position\"].items():\n+                assert isinstance(value, list) and len(value) == 2 and isinstance(value[0], int) and isinstance(value[1], int)\n+    except:\n+        if verbose >= 1:\n+            sys.stderr.write(\"Error: Bad format of fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n+        sys.exit(1)\n+    \n+    if \"background_picture\" in fancy:\n+        bp = fancy[\"background_picture\"]\n+        if verbose >= 3:\n+            print(\"Fancy: Resolving background picture \\\"{}\\\"...\".format(bp))\n+        if not os.path.exists(bp):\n+            bp = os.path.join(os.path.dirname(p), bp)\n+            if not os.path.exists(bp):\n+                if verbose >= 1:\n+                    sys.stderr.write(\"Error: Could not find background picture at \\\"{}\\\" or \\\"{}\\\"\\n\".format(fancy[\"background_picture\"], bp))\n+                sys.exit(1)\n+            else:\n+                fancy[\"background_picture\"] = bp\n+else:\n+    fancy = None\n+\n+# ------------------------------------------------\n+\n+if os.path.exists(\"dist\"):\n+    if verbose >= 2:\n+        print(\"+ Removing old dist folder +\")\n+    \n+    shutil.rmtree(\"dist\")\n+\n+# ------------------------------------------------\n+\n+if len(config.volname) == 1:\n+    volname = config.volname[0]\n+else:\n+    volname = app_bundle_name\n+\n+# ------------------------------------------------\n+\n+target = os.path.join(\"dist\", \"Bitcoin-Qt.app\")\n+\n+if verbose >= 2:\n+    print(\"+ Copying source bundle +\")\n+if verbose >= 3:\n+    print(app_bundle, \"->\", target)\n+\n+os.mkdir(\"dist\")\n+shutil.copytree(app_bundle, target, symlinks=True)\n+\n+applicationBundle = ApplicationBundleInfo(target)\n+\n+# ------------------------------------------------\n+\n+if verbose >= 2:\n+    print(\"+ Deploying frameworks +\")\n+\n+try:\n+    deploymentInfo = deployFrameworksForAppBundle(applicationBundle, config.strip, verbose)\n+    if deploymentInfo.qtPath is None:\n+        deploymentInfo.qtPath = os.getenv(\"QTDIR\", None)\n+        if deploymentInfo.qtPath is None:\n+            if verbose >= 1:\n+                sys.stderr.write(\"Warning: Could not detect Qt's path, skipping plugin deployment!\\n\")\n+            config.plugins = False\n+except RuntimeError as e:\n+    if verbose >= 1:\n+        sys.stderr.write(\"Error: {}\\n\".format(str(e)))\n+    sys.exit(1)\n+\n+# ------------------------------------------------\n+\n+if config.plugins:\n+    if verbose >= 2:\n+        print(\"+ Deploying plugins +\")\n+    \n+    try:\n+        deployPlugins(applicationBundle, deploymentInfo, config.strip, verbose)\n+    except RuntimeError as e:\n+        if verbose >= 1:\n+            sys.stderr.write(\"Error: {}\\n\".format(str(e)))\n+        sys.exit(1)\n+\n+# ------------------------------------------------\n+\n+if len(config.add_qt_tr) == 0:\n+    add_qt_tr = []\n+else:\n+    if translations_dir is not None:\n+        qt_tr_dir = translations_dir\n+    else:\n+        if deploymentInfo.qtPath is not None:\n+            qt_tr_dir = os.path.join(deploymentInfo.qtPath, \"translations\")\n+        else:\n+            sys.stderr.write(\"Error: Could not find Qt translation path\\n\")\n+            sys.exit(1)\n+    add_qt_tr = [\"qt_{}.qm\".format(lng) for lng in config.add_qt_tr[0].split(\",\")]\n+    for lng_file in add_qt_tr:\n+        p = os.path.join(qt_tr_dir, lng_file)\n+        if verbose >= 3:\n+            print(\"Checking for \\\"{}\\\"...\".format(p))\n+        if not os.path.exists(p):\n+            if verbose >= 1:\n+                sys.stderr.write(\"Error: Could not find Qt translation file \\\"{}\\\"\\n\".format(lng_file))\n+                sys.exit(1)\n+\n+# ------------------------------------------------\n+\n+if verbose >= 2:\n+    print(\"+ Installing qt.conf +\")\n+\n+with open(os.path.join(applicationBundle.resourcesPath, \"qt.conf\"), \"wb\") as f:\n+    f.write(qt_conf.encode())\n+\n+# ------------------------------------------------\n+\n+if len(add_qt_tr) > 0 and verbose >= 2:\n+    print(\"+ Adding Qt translations +\")\n+\n+for lng_file in add_qt_tr:\n+    if verbose >= 3:\n+        print(os.path.join(qt_tr_dir, lng_file), \"->\", os.path.join(applicationBundle.resourcesPath, lng_file))\n+    shutil.copy2(os.path.join(qt_tr_dir, lng_file), os.path.join(applicationBundle.resourcesPath, lng_file))\n+\n+# ------------------------------------------------\n+\n+if len(config.add_resources) > 0 and verbose >= 2:\n+    print(\"+ Adding additional resources +\")\n+\n+for p in config.add_resources:\n+    t = os.path.join(applicationBundle.resourcesPath, os.path.basename(p))\n+    if verbose >= 3:\n+        print(p, \"->\", t)\n+    if os.path.isdir(p):\n+        shutil.copytree(p, t, symlinks=True)\n+    else:\n+        shutil.copy2(p, t)\n+\n+# ------------------------------------------------\n+\n+if config.sign and 'CODESIGNARGS' not in os.environ:\n+    print(\"You must set the CODESIGNARGS environment variable. Skipping signing.\")\n+elif config.sign:\n+    if verbose >= 1:\n+        print(\"Code-signing app bundle {}\".format(target))\n+    subprocess.check_call(\"codesign --force {} {}\".format(os.environ['CODESIGNARGS'], target), shell=True)\n+\n+# ------------------------------------------------\n+\n+if config.dmg is not None:\n+\n+    def runHDIUtil(verb: str, image_basename: str, **kwargs) -> int:\n+        hdiutil_args = [\"hdiutil\", verb, image_basename + \".dmg\"]\n+        if \"capture_stdout\" in kwargs:\n+            del kwargs[\"capture_stdout\"]\n+            run = subprocess.check_output\n+        else:\n+            if verbose < 2:\n+                hdiutil_args.append(\"-quiet\")\n+            elif verbose >= 3:\n+                hdiutil_args.append(\"-verbose\")\n+            run = subprocess.check_call\n+        \n+        for key, value in kwargs.items():\n+            hdiutil_args.append(\"-\" + key)\n+            if value is not True:\n+                hdiutil_args.append(str(value))\n+        \n+        return run(hdiutil_args, universal_newlines=True)\n+    \n+    if verbose >= 2:\n+        if fancy is None:\n+            print(\"+ Creating .dmg disk image +\")\n+        else:\n+            print(\"+ Preparing .dmg disk image +\")\n+    \n+    if config.dmg != \"\":\n+        dmg_name = config.dmg\n+    else:\n+        spl = app_bundle_name.split(\" \")\n+        dmg_name = spl[0] + \"\".join(p.capitalize() for p in spl[1:])\n+    \n+    if fancy is None:\n+        try:\n+            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=volname, ov=True)\n+        except subprocess.CalledProcessError as e:\n+            sys.exit(e.returncode)\n+    else:\n+        if verbose >= 3:\n+            print(\"Determining size of \\\"dist\\\"...\")\n+        size = 0\n+        for path, dirs, files in os.walk(\"dist\"):\n+            for file in files:\n+                size += os.path.getsize(os.path.join(path, file))\n+        size += int(size * 0.15)\n+        \n+        if verbose >= 3:\n+            print(\"Creating temp image for modification...\")\n+        try:\n+            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=volname, ov=True)\n+        except subprocess.CalledProcessError as e:\n+            sys.exit(e.returncode)\n+        \n+        if verbose >= 3:\n+            print(\"Attaching temp image...\")\n+        try:\n+            output = runHDIUtil(\"attach\", dmg_name + \".temp\", readwrite=True, noverify=True, noautoopen=True, capture_stdout=True)\n+        except subprocess.CalledProcessError as e:\n+            sys.exit(e.returncode)\n+\n+        m = re.search(r\"/Volumes/(.+$)\", output)\n+        disk_root = m.group(0)\n+        disk_name = m.group(1)\n+        \n+        if verbose >= 2:\n+            print(\"+ Applying fancy settings +\")\n+        \n+        if \"background_picture\" in fancy:\n+            bg_path = os.path.join(disk_root, \".background\", os.path.basename(fancy[\"background_picture\"]))\n+            os.mkdir(os.path.dirname(bg_path))\n+            if verbose >= 3:\n+                print(fancy[\"background_picture\"], \"->\", bg_path)\n+            shutil.copy2(fancy[\"background_picture\"], bg_path)\n+        else:\n+            bg_path = None\n+        \n+        if fancy.get(\"applications_symlink\", False):\n+            os.symlink(\"/Applications\", os.path.join(disk_root, \"Applications\"))\n+        \n+        # The Python appscript package broke with OSX 10.8 and isn't being fixed.\n+        # So we now build up an AppleScript string and use the osascript command\n+        # to make the .dmg file pretty:\n+        appscript = Template( \"\"\"\n+        on run argv\n+           tell application \"Finder\"\n+             tell disk \"$disk\"\n+                   open\n+                   set current view of container window to icon view\n+                   set toolbar visible of container window to false\n+                   set statusbar visible of container window to false\n+                   set the bounds of container window to {$window_bounds}\n+                   set theViewOptions to the icon view options of container window\n+                   set arrangement of theViewOptions to not arranged\n+                   set icon size of theViewOptions to $icon_size\n+                   $background_commands\n+                   $items_positions\n+                   close -- close/reopen works around a bug...\n+                   open\n+                   update without registering applications\n+                   delay 5\n+                   eject\n+             end tell\n+           end tell\n+        end run\n+        \"\"\")\n+\n+        itemscript = Template('set position of item \"${item}\" of container window to {${position}}')\n+        items_positions = []\n+        if \"items_position\" in fancy:\n+            for name, position in fancy[\"items_position\"].items():\n+                params = { \"item\" : name, \"position\" : \",\".join([str(p) for p in position]) }\n+                items_positions.append(itemscript.substitute(params))\n+\n+        params = {\n+            \"disk\" : volname,\n+            \"window_bounds\" : \"300,300,800,620\",\n+            \"icon_size\" : \"96\",\n+            \"background_commands\" : \"\",\n+            \"items_positions\" : \"\\n                   \".join(items_positions)\n+            }\n+        if \"window_bounds\" in fancy:\n+            params[\"window_bounds\"] = \",\".join([str(p) for p in fancy[\"window_bounds\"]])\n+        if \"icon_size\" in fancy:\n+            params[\"icon_size\"] = str(fancy[\"icon_size\"])\n+        if bg_path is not None:\n+            # Set background file, then call SetFile to make it invisible.\n+            # (note: making it invisible first makes set background picture fail)\n+            bgscript = Template(\"\"\"set background picture of theViewOptions to file \".background:$bgpic\"\n+                   do shell script \"SetFile -a V /Volumes/$disk/.background/$bgpic\" \"\"\")\n+            params[\"background_commands\"] = bgscript.substitute({\"bgpic\" : os.path.basename(bg_path), \"disk\" : params[\"disk\"]})\n+\n+        s = appscript.substitute(params)\n+        if verbose >= 2:\n+            print(\"Running AppleScript:\")\n+            print(s)\n+\n+        p = subprocess.Popen(['osascript', '-'], stdin=subprocess.PIPE)\n+        p.communicate(input=s.encode('utf-8'))\n+        if p.returncode:\n+            print(\"Error running osascript.\")\n+\n+        if verbose >= 2:\n+            print(\"+ Finalizing .dmg disk image +\")\n+            time.sleep(5)\n+        \n+        try:\n+            runHDIUtil(\"convert\", dmg_name + \".temp\", format=\"UDBZ\", o=dmg_name + \".dmg\", ov=True)\n+        except subprocess.CalledProcessError as e:\n+            sys.exit(e.returncode)\n+        \n+        os.unlink(dmg_name + \".temp.dmg\")\n+\n+# ------------------------------------------------\n+\n+if verbose >= 2:\n+    print(\"+ Done +\")\n+\n+sys.exit(0)"
      },
      {
        "sha": "0ded87c58f4ee721058f914682a283f9f9a69787",
        "filename": "contrib/qos/README.md",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/qos/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/qos/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/README.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,5 @@\n+### QoS (Quality of service) ###\n+\n+This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Bitcoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN.\n+\n+This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it."
      },
      {
        "sha": "8408545a218e4faa4a3fb41951a3afab21ba199a",
        "filename": "contrib/qos/tc.sh",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2017-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+#network interface on which to limit traffic\n+IF=\"eth0\"\n+#limit of the network interface in question\n+LINKCEIL=\"1gbit\"\n+#limit outbound Bitcoin protocol traffic to this rate\n+LIMIT=\"160kbit\"\n+#defines the IPv4 address space for which you wish to disable rate limiting\n+LOCALNET_V4=\"192.168.0.0/16\"\n+#defines the IPv6 address space for which you wish to disable rate limiting\n+LOCALNET_V6=\"fe80::/10\"\n+\n+#delete existing rules\n+tc qdisc del dev ${IF} root\n+\n+#add root class\n+tc qdisc add dev ${IF} root handle 1: htb default 10\n+\n+#add parent class\n+tc class add dev ${IF} parent 1: classid 1:1 htb rate ${LINKCEIL} ceil ${LINKCEIL}\n+\n+#add our two classes. one unlimited, another limited\n+tc class add dev ${IF} parent 1:1 classid 1:10 htb rate ${LINKCEIL} ceil ${LINKCEIL} prio 0\n+tc class add dev ${IF} parent 1:1 classid 1:11 htb rate ${LIMIT} ceil ${LIMIT} prio 1\n+\n+#add handles to our classes so packets marked with <x> go into the class with \"... handle <x> fw ...\"\n+tc filter add dev ${IF} parent 1: protocol ip prio 1 handle 1 fw classid 1:10\n+tc filter add dev ${IF} parent 1: protocol ip prio 2 handle 2 fw classid 1:11\n+\n+if [ -n \"${LOCALNET_V6}\" ] ; then\n+\t# v6 cannot have the same priority value as v4\n+\ttc filter add dev ${IF} parent 1: protocol ipv6 prio 3 handle 1 fw classid 1:10\n+\ttc filter add dev ${IF} parent 1: protocol ipv6 prio 4 handle 2 fw classid 1:11\n+fi\n+\n+#delete any existing rules\n+#disable for now\n+#ret=0\n+#while [ $ret -eq 0 ]; do\n+#\tiptables -t mangle -D OUTPUT 1\n+#\tret=$?\n+#done\n+\n+#limit outgoing traffic to and from port 8333. but not when dealing with a host on the local network\n+#\t(defined by $LOCALNET_V4 and $LOCALNET_V6)\n+#\t--set-mark marks packages matching these criteria with the number \"2\" (v4)\n+#\t--set-mark marks packages matching these criteria with the number \"4\" (v6)\n+#\tthese packets are filtered by the tc filter with \"handle 2\"\n+#\tthis filter sends the packages into the 1:11 class, and this class is limited to ${LIMIT}\n+iptables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n+iptables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n+\n+if [ -n \"${LOCALNET_V6}\" ] ; then\n+\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n+\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n+fi"
      },
      {
        "sha": "e4a39d609343699cc54dee0d85e105fbce7088a4",
        "filename": "contrib/seeds/.gitignore",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/seeds/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/seeds/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/.gitignore?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1 @@\n+seeds_main.txt"
      },
      {
        "sha": "502c20d0d678c59eafbb976d7a1b2537be0217b6",
        "filename": "contrib/seeds/README.md",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,21 @@\n+# Seeds\n+\n+Utility to generate the seeds.txt list that is compiled into the client\n+(see [src/chainparamsseeds.h](/src/chainparamsseeds.h) and other utilities in [contrib/seeds](/contrib/seeds)).\n+\n+Be sure to update `PATTERN_AGENT` in `makeseeds.py` to include the current version,\n+and remove old versions as necessary (at a minimum when GetDesirableServiceFlags\n+changes its default return value, as those are the services which seeds are added\n+to addrman with).\n+\n+The seeds compiled into the release are created from sipa's DNS seed data, like this:\n+\n+    curl -s http://bitcoin.sipa.be/seeds.txt.gz | gzip -dc > seeds_main.txt\n+    python3 makeseeds.py < seeds_main.txt > nodes_main.txt\n+    python3 generate-seeds.py . > ../../src/chainparamsseeds.h\n+\n+## Dependencies\n+\n+Ubuntu:\n+\n+    sudo apt-get install python3-dnspython"
      },
      {
        "sha": "7630a7a4fa2550396e8e6ee5421a90f640b7be0a",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "added",
        "additions": 138,
        "deletions": 0,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,138 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2017 Wladimir J. van der Laan\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+Script to generate list of seed nodes for chainparams.cpp.\n+\n+This script expects two text files in the directory that is passed as an\n+argument:\n+\n+    nodes_main.txt\n+    nodes_test.txt\n+\n+These files must consist of lines in the format\n+\n+    <ip>\n+    <ip>:<port>\n+    [<ipv6>]\n+    [<ipv6>]:<port>\n+    <onion>.onion\n+    0xDDBBCCAA (IPv4 little-endian old pnSeeds format)\n+\n+The output will be two data structures with the peers in binary format:\n+\n+   static SeedSpec6 pnSeed6_main[]={\n+   ...\n+   }\n+   static SeedSpec6 pnSeed6_test[]={\n+   ...\n+   }\n+\n+These should be pasted into `src/chainparamsseeds.h`.\n+'''\n+\n+from base64 import b32decode\n+from binascii import a2b_hex\n+import sys\n+import os\n+import re\n+\n+# ipv4 in ipv6 prefix\n+pchIPv4 = bytearray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff])\n+# tor-specific ipv6 prefix\n+pchOnionCat = bytearray([0xFD,0x87,0xD8,0x7E,0xEB,0x43])\n+\n+def name_to_ipv6(addr):\n+    if len(addr)>6 and addr.endswith('.onion'):\n+        vchAddr = b32decode(addr[0:-6], True)\n+        if len(vchAddr) != 16-len(pchOnionCat):\n+            raise ValueError('Invalid onion %s' % vchAddr)\n+        return pchOnionCat + vchAddr\n+    elif '.' in addr: # IPv4\n+        return pchIPv4 + bytearray((int(x) for x in addr.split('.')))\n+    elif ':' in addr: # IPv6\n+        sub = [[], []] # prefix, suffix\n+        x = 0\n+        addr = addr.split(':')\n+        for i,comp in enumerate(addr):\n+            if comp == '':\n+                if i == 0 or i == (len(addr)-1): # skip empty component at beginning or end\n+                    continue\n+                x += 1 # :: skips to suffix\n+                assert(x < 2)\n+            else: # two bytes per component\n+                val = int(comp, 16)\n+                sub[x].append(val >> 8)\n+                sub[x].append(val & 0xff)\n+        nullbytes = 16 - len(sub[0]) - len(sub[1])\n+        assert((x == 0 and nullbytes == 0) or (x == 1 and nullbytes > 0))\n+        return bytearray(sub[0] + ([0] * nullbytes) + sub[1])\n+    elif addr.startswith('0x'): # IPv4-in-little-endian\n+        return pchIPv4 + bytearray(reversed(a2b_hex(addr[2:])))\n+    else:\n+        raise ValueError('Could not parse address %s' % addr)\n+\n+def parse_spec(s, defaultport):\n+    match = re.match(r'\\[([0-9a-fA-F:]+)\\](?::([0-9]+))?$', s)\n+    if match: # ipv6\n+        host = match.group(1)\n+        port = match.group(2)\n+    elif s.count(':') > 1: # ipv6, no port\n+        host = s\n+        port = ''\n+    else:\n+        (host,_,port) = s.partition(':')\n+\n+    if not port:\n+        port = defaultport\n+    else:\n+        port = int(port)\n+\n+    host = name_to_ipv6(host)\n+\n+    return (host,port)\n+\n+def process_nodes(g, f, structname, defaultport):\n+    g.write('static SeedSpec6 %s[] = {\\n' % structname)\n+    first = True\n+    for line in f:\n+        comment = line.find('#')\n+        if comment != -1:\n+            line = line[0:comment]\n+        line = line.strip()\n+        if not line:\n+            continue\n+        if not first:\n+            g.write(',\\n')\n+        first = False\n+\n+        (host,port) = parse_spec(line, defaultport)\n+        hoststr = ','.join(('0x%02x' % b) for b in host)\n+        g.write('    {{%s}, %i}' % (hoststr, port))\n+    g.write('\\n};\\n')\n+\n+def main():\n+    if len(sys.argv)<2:\n+        print(('Usage: %s <path_to_nodes_txt>' % sys.argv[0]), file=sys.stderr)\n+        sys.exit(1)\n+    g = sys.stdout\n+    indir = sys.argv[1]\n+    g.write('#ifndef BITCOIN_CHAINPARAMSSEEDS_H\\n')\n+    g.write('#define BITCOIN_CHAINPARAMSSEEDS_H\\n')\n+    g.write('/**\\n')\n+    g.write(' * List of fixed seed nodes for the bitcoin network\\n')\n+    g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n+    g.write(' *\\n')\n+    g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n+    g.write(' * IPv4 as well as onion addresses are wrapped inside an IPv6 address accordingly.\\n')\n+    g.write(' */\\n')\n+    with open(os.path.join(indir,'nodes_main.txt'), 'r', encoding=\"utf8\") as f:\n+        process_nodes(g, f, 'pnSeed6_main', 8333)\n+    g.write('\\n')\n+    with open(os.path.join(indir,'nodes_test.txt'), 'r', encoding=\"utf8\") as f:\n+        process_nodes(g, f, 'pnSeed6_test', 18333)\n+    g.write('#endif // BITCOIN_CHAINPARAMSSEEDS_H\\n')\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "6d9d49ad2fc1640a2644313cfc81da0d2ed4596b",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "added",
        "additions": 228,
        "deletions": 0,
        "changes": 228,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,228 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2013-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# Generate seeds.txt from Pieter's DNS seeder\n+#\n+\n+import re\n+import sys\n+import dns.resolver\n+import collections\n+\n+NSEEDS=512\n+\n+MAX_SEEDS_PER_ASN=2\n+\n+MIN_BLOCKS = 337600\n+\n+# These are hosts that have been observed to be behaving strangely (e.g.\n+# aggressively connecting to every node).\n+with open(\"suspicious_hosts.txt\", mode=\"r\", encoding=\"utf-8\") as f:\n+    SUSPICIOUS_HOSTS = {s.strip() for s in f if s.strip()}\n+\n+\n+PATTERN_IPV4 = re.compile(r\"^((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})):(\\d+)$\")\n+PATTERN_IPV6 = re.compile(r\"^\\[([0-9a-z:]+)\\]:(\\d+)$\")\n+PATTERN_ONION = re.compile(r\"^([abcdefghijklmnopqrstuvwxyz234567]{16}\\.onion):(\\d+)$\")\n+PATTERN_AGENT = re.compile(\n+    r\"^/Satoshi:(\"\n+    r\"0.14.(0|1|2|3|99)|\"\n+    r\"0.15.(0|1|2|99)|\"\n+    r\"0.16.(0|1|2|3|99)|\"\n+    r\"0.17.(0|0.1|1|2|99)|\"\n+    r\"0.18.(0|1|99)|\"\n+    r\"0.19.(0|1|99)|\"\n+    r\"0.20.(0|1|99)|\"\n+    r\"0.21.99\"\n+    r\")\")\n+\n+def parseline(line):\n+    sline = line.split()\n+    if len(sline) < 11:\n+       return None\n+    m = PATTERN_IPV4.match(sline[0])\n+    sortkey = None\n+    ip = None\n+    if m is None:\n+        m = PATTERN_IPV6.match(sline[0])\n+        if m is None:\n+            m = PATTERN_ONION.match(sline[0])\n+            if m is None:\n+                return None\n+            else:\n+                net = 'onion'\n+                ipstr = sortkey = m.group(1)\n+                port = int(m.group(2))\n+        else:\n+            net = 'ipv6'\n+            if m.group(1) in ['::']: # Not interested in localhost\n+                return None\n+            ipstr = m.group(1)\n+            sortkey = ipstr # XXX parse IPv6 into number, could use name_to_ipv6 from generate-seeds\n+            port = int(m.group(2))\n+    else:\n+        # Do IPv4 sanity check\n+        ip = 0\n+        for i in range(0,4):\n+            if int(m.group(i+2)) < 0 or int(m.group(i+2)) > 255:\n+                return None\n+            ip = ip + (int(m.group(i+2)) << (8*(3-i)))\n+        if ip == 0:\n+            return None\n+        net = 'ipv4'\n+        sortkey = ip\n+        ipstr = m.group(1)\n+        port = int(m.group(6))\n+    # Skip bad results.\n+    if sline[1] == 0:\n+        return None\n+    # Extract uptime %.\n+    uptime30 = float(sline[7][:-1])\n+    # Extract Unix timestamp of last success.\n+    lastsuccess = int(sline[2])\n+    # Extract protocol version.\n+    version = int(sline[10])\n+    # Extract user agent.\n+    agent = sline[11][1:-1]\n+    # Extract service flags.\n+    service = int(sline[9], 16)\n+    # Extract blocks.\n+    blocks = int(sline[8])\n+    # Construct result.\n+    return {\n+        'net': net,\n+        'ip': ipstr,\n+        'port': port,\n+        'ipnum': ip,\n+        'uptime': uptime30,\n+        'lastsuccess': lastsuccess,\n+        'version': version,\n+        'agent': agent,\n+        'service': service,\n+        'blocks': blocks,\n+        'sortkey': sortkey,\n+    }\n+\n+def dedup(ips):\n+    '''deduplicate by address,port'''\n+    d = {}\n+    for ip in ips:\n+        d[ip['ip'],ip['port']] = ip\n+    return list(d.values())\n+\n+def filtermultiport(ips):\n+    '''Filter out hosts with more nodes per IP'''\n+    hist = collections.defaultdict(list)\n+    for ip in ips:\n+        hist[ip['sortkey']].append(ip)\n+    return [value[0] for (key,value) in list(hist.items()) if len(value)==1]\n+\n+def lookup_asn(net, ip):\n+    '''\n+    Look up the asn for an IP (4 or 6) address by querying cymru.com, or None\n+    if it could not be found.\n+    '''\n+    try:\n+        if net == 'ipv4':\n+            ipaddr = ip\n+            prefix = '.origin'\n+        else:                  # http://www.team-cymru.com/IP-ASN-mapping.html\n+            res = str()                         # 2001:4860:b002:23::68\n+            for nb in ip.split(':')[:4]:  # pick the first 4 nibbles\n+                for c in nb.zfill(4):           # right padded with '0'\n+                    res += c + '.'              # 2001 4860 b002 0023\n+            ipaddr = res.rstrip('.')            # 2.0.0.1.4.8.6.0.b.0.0.2.0.0.2.3\n+            prefix = '.origin6'\n+\n+        asn = int([x.to_text() for x in dns.resolver.query('.'.join(\n+                   reversed(ipaddr.split('.'))) + prefix + '.asn.cymru.com',\n+                   'TXT').response.answer][0].split('\\\"')[1].split(' ')[0])\n+        return asn\n+    except Exception:\n+        sys.stderr.write('ERR: Could not resolve ASN for \"' + ip + '\"\\n')\n+        return None\n+\n+# Based on Greg Maxwell's seed_filter.py\n+def filterbyasn(ips, max_per_asn, max_per_net):\n+    # Sift out ips by type\n+    ips_ipv46 = [ip for ip in ips if ip['net'] in ['ipv4', 'ipv6']]\n+    ips_onion = [ip for ip in ips if ip['net'] == 'onion']\n+\n+    # Filter IPv46 by ASN, and limit to max_per_net per network\n+    result = []\n+    net_count = collections.defaultdict(int)\n+    asn_count = collections.defaultdict(int)\n+    for ip in ips_ipv46:\n+        if net_count[ip['net']] == max_per_net:\n+            continue\n+        asn = lookup_asn(ip['net'], ip['ip'])\n+        if asn is None or asn_count[asn] == max_per_asn:\n+            continue\n+        asn_count[asn] += 1\n+        net_count[ip['net']] += 1\n+        result.append(ip)\n+\n+    # Add back Onions (up to max_per_net)\n+    result.extend(ips_onion[0:max_per_net])\n+    return result\n+\n+def ip_stats(ips):\n+    hist = collections.defaultdict(int)\n+    for ip in ips:\n+        if ip is not None:\n+            hist[ip['net']] += 1\n+\n+    return '%6d %6d %6d' % (hist['ipv4'], hist['ipv6'], hist['onion'])\n+\n+def main():\n+    lines = sys.stdin.readlines()\n+    ips = [parseline(line) for line in lines]\n+\n+    print('\\x1b[7m  IPv4   IPv6  Onion Pass                                               \\x1b[0m', file=sys.stderr)\n+    print('%s Initial' % (ip_stats(ips)), file=sys.stderr)\n+    # Skip entries with invalid address.\n+    ips = [ip for ip in ips if ip is not None]\n+    print('%s Skip entries with invalid address' % (ip_stats(ips)), file=sys.stderr)\n+    # Skip duplicates (in case multiple seeds files were concatenated)\n+    ips = dedup(ips)\n+    print('%s After removing duplicates' % (ip_stats(ips)), file=sys.stderr)\n+    # Skip entries from suspicious hosts.\n+    ips = [ip for ip in ips if ip['ip'] not in SUSPICIOUS_HOSTS]\n+    print('%s Skip entries from suspicious hosts' % (ip_stats(ips)), file=sys.stderr)\n+    # Enforce minimal number of blocks.\n+    ips = [ip for ip in ips if ip['blocks'] >= MIN_BLOCKS]\n+    print('%s Enforce minimal number of blocks' % (ip_stats(ips)), file=sys.stderr)\n+    # Require service bit 1.\n+    ips = [ip for ip in ips if (ip['service'] & 1) == 1]\n+    print('%s Require service bit 1' % (ip_stats(ips)), file=sys.stderr)\n+    # Require at least 50% 30-day uptime for clearnet, 10% for onion.\n+    req_uptime = {\n+        'ipv4': 50,\n+        'ipv6': 50,\n+        'onion': 10,\n+    }\n+    ips = [ip for ip in ips if ip['uptime'] > req_uptime[ip['net']]]\n+    print('%s Require minimum uptime' % (ip_stats(ips)), file=sys.stderr)\n+    # Require a known and recent user agent.\n+    ips = [ip for ip in ips if PATTERN_AGENT.match(ip['agent'])]\n+    print('%s Require a known and recent user agent' % (ip_stats(ips)), file=sys.stderr)\n+    # Sort by availability (and use last success as tie breaker)\n+    ips.sort(key=lambda x: (x['uptime'], x['lastsuccess'], x['ip']), reverse=True)\n+    # Filter out hosts with multiple bitcoin ports, these are likely abusive\n+    ips = filtermultiport(ips)\n+    print('%s Filter out hosts with multiple bitcoin ports' % (ip_stats(ips)), file=sys.stderr)\n+    # Look up ASNs and limit results, both per ASN and globally.\n+    ips = filterbyasn(ips, MAX_SEEDS_PER_ASN, NSEEDS)\n+    print('%s Look up ASNs and limit results per ASN and per net' % (ip_stats(ips)), file=sys.stderr)\n+    # Sort the results by IP address (for deterministic output).\n+    ips.sort(key=lambda x: (x['net'], x['sortkey']))\n+    for ip in ips:\n+        if ip['net'] == 'ipv6':\n+            print('[%s]:%i' % (ip['ip'], ip['port']))\n+        else:\n+            print('%s:%i' % (ip['ip'], ip['port']))\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "7b97436013871abb6a41ab02f1916cbec4df54c7",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "added",
        "additions": 1164,
        "deletions": 0,
        "changes": 1164,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,1164 @@\n+2.39.173.126:8333\n+3.14.168.201:48333\n+4.36.112.44:8333\n+5.8.18.31:8333\n+5.14.200.167:8333\n+5.56.20.2:8333\n+5.102.146.99:8333\n+5.103.137.146:9333\n+5.128.87.126:8333\n+5.133.65.82:8333\n+5.187.55.242:8333\n+5.188.62.24:8333\n+5.188.62.33:8333\n+5.199.133.193:8333\n+8.38.89.152:8333\n+13.231.20.249:8333\n+18.27.79.17:8333\n+20.184.15.116:8433\n+23.28.205.97:8333\n+23.106.252.230:8333\n+23.175.0.202:8333\n+23.175.0.212:8333\n+23.241.250.252:8333\n+23.245.24.154:8333\n+24.86.184.66:8333\n+24.116.246.9:8333\n+24.141.34.166:8333\n+24.155.196.246:8333\n+24.157.130.222:8333\n+24.188.176.255:8333\n+24.237.70.53:8333\n+27.124.4.67:8333\n+31.17.70.80:8333\n+31.21.8.32:8333\n+31.45.118.10:8333\n+31.132.17.56:8333\n+31.134.121.223:8333\n+32.214.183.114:8333\n+35.137.236.32:8333\n+35.185.145.105:8333\n+35.209.51.212:8333\n+35.245.175.76:8333\n+37.116.95.41:8333\n+37.143.9.107:8333\n+37.143.116.43:8333\n+37.191.244.149:8333\n+37.211.78.253:8333\n+37.221.209.222:24333\n+37.228.92.110:8333\n+43.225.62.107:8333\n+43.225.157.152:8333\n+45.36.184.6:8333\n+45.48.168.16:8333\n+45.85.85.8:8333\n+45.85.85.9:8333\n+45.129.180.214:8333\n+45.149.78.128:8333\n+45.151.125.218:8333\n+45.154.255.46:8333\n+45.155.157.239:8333\n+46.28.132.34:8333\n+46.28.204.21:8333\n+46.32.50.98:8333\n+46.59.13.35:8333\n+46.128.40.173:8333\n+46.128.140.193:8333\n+46.146.248.89:8333\n+46.166.162.45:20001\n+46.188.15.6:8333\n+46.229.165.142:8333\n+46.229.238.187:8333\n+46.249.83.82:8333\n+46.254.217.169:8333\n+47.74.191.34:8333\n+47.115.53.163:8333\n+47.187.26.135:8333\n+47.222.103.234:8333\n+47.253.5.99:8333\n+49.232.82.76:8333\n+49.247.215.43:8333\n+50.2.13.166:8333\n+50.34.39.72:8333\n+50.45.232.189:8333\n+50.68.104.92:8333\n+51.68.36.57:8333\n+51.154.60.34:8333\n+52.169.238.66:8333\n+54.197.30.223:8333\n+54.227.66.57:8333\n+58.158.0.86:8333\n+58.171.135.242:8333\n+58.229.208.158:8333\n+60.244.109.19:8333\n+62.38.75.208:8333\n+62.74.143.11:8333\n+62.80.227.49:8333\n+62.152.58.16:9421\n+62.210.167.199:8333\n+62.234.188.160:8333\n+62.251.54.163:8333\n+63.227.116.162:8333\n+65.19.155.82:8333\n+65.95.49.102:8333\n+66.18.172.21:8333\n+66.240.237.155:8333\n+67.210.228.203:8333\n+69.30.215.42:8333\n+69.59.18.206:8333\n+69.64.33.71:8333\n+69.119.193.9:8333\n+69.209.23.72:8333\n+70.123.125.237:8333\n+70.185.56.136:8333\n+71.38.90.235:8333\n+72.12.73.70:8333\n+72.53.134.182:8333\n+72.225.7.80:8333\n+72.234.182.39:8333\n+72.250.184.57:8333\n+73.83.103.79:8333\n+74.118.137.119:8333\n+74.133.100.74:8333\n+74.215.219.214:8333\n+74.220.255.190:8333\n+75.158.39.231:8333\n+77.53.53.196:8333\n+77.70.16.245:8333\n+77.105.87.97:8333\n+77.120.113.69:8433\n+77.120.122.22:8433\n+77.166.83.167:8333\n+77.247.178.130:8333\n+78.27.139.13:8333\n+78.63.28.146:8333\n+78.83.103.4:8333\n+78.141.123.99:8333\n+79.77.33.131:8333\n+79.77.133.30:8333\n+79.101.1.25:8333\n+79.117.192.229:8333\n+79.133.228.55:8333\n+79.146.21.163:8333\n+80.89.203.172:8001\n+80.93.213.246:8333\n+80.192.98.110:8334\n+80.229.28.60:8333\n+80.232.247.210:8333\n+80.242.39.76:8333\n+80.253.94.252:8333\n+81.0.198.25:8333\n+81.7.13.84:8333\n+81.117.225.245:8333\n+81.135.137.225:8333\n+81.171.22.143:8333\n+81.191.233.134:8333\n+81.232.78.75:8333\n+81.242.91.23:8333\n+82.29.58.109:8333\n+82.136.99.22:8333\n+82.149.97.25:17567\n+82.165.19.48:8333\n+82.194.153.233:8333\n+82.197.215.125:8333\n+82.199.102.10:8333\n+82.200.205.30:8333\n+82.202.68.231:8333\n+82.221.128.31:8333\n+82.228.6.131:8333\n+83.85.139.94:8333\n+83.99.245.20:8333\n+83.137.41.10:8333\n+83.174.209.87:8333\n+83.217.8.31:44420\n+84.38.3.249:8333\n+84.38.185.122:8333\n+84.92.92.247:8333\n+84.192.16.234:8333\n+84.194.158.124:8333\n+84.212.145.24:8333\n+84.212.244.95:8333\n+84.216.51.36:8333\n+84.255.249.163:8333\n+85.25.255.147:8333\n+85.70.156.209:8333\n+85.145.142.46:8333\n+85.170.233.95:8333\n+85.184.138.108:8333\n+85.190.0.5:8333\n+85.191.200.51:8333\n+85.192.191.6:18500\n+85.194.238.131:8333\n+85.195.54.110:8333\n+85.214.161.252:8333\n+85.214.185.51:8333\n+85.241.106.203:8333\n+85.246.168.252:8333\n+86.56.238.247:8333\n+87.61.90.230:8333\n+87.79.68.86:8333\n+87.79.94.221:8333\n+87.120.8.5:20008\n+87.246.46.132:8333\n+87.247.111.222:8333\n+88.84.222.252:8333\n+88.86.243.241:8333\n+88.87.93.52:1691\n+88.119.197.200:8333\n+88.129.253.94:8333\n+88.147.244.250:8333\n+88.208.3.195:8333\n+88.212.44.33:8333\n+88.214.57.95:8333\n+89.106.199.38:8333\n+89.108.126.228:8333\n+89.115.120.43:8333\n+89.133.68.65:8333\n+89.190.19.162:8333\n+89.248.172.10:8333\n+90.146.153.21:8333\n+90.182.165.18:8333\n+91.106.188.229:8333\n+91.193.237.116:8333\n+91.204.99.178:8333\n+91.204.149.5:8333\n+91.214.70.63:8333\n+91.228.152.236:8333\n+92.12.154.115:8333\n+92.249.143.44:8333\n+93.12.66.98:8333\n+93.46.54.4:8333\n+93.115.20.130:8333\n+93.123.180.164:8333\n+93.189.145.169:8333\n+93.241.228.102:8333\n+94.19.7.55:8333\n+94.19.128.204:8333\n+94.52.112.227:8333\n+94.154.96.130:8333\n+94.156.174.201:8333\n+94.158.246.183:8333\n+94.177.171.73:8333\n+94.199.178.233:8100\n+94.237.125.30:8333\n+94.247.134.77:8333\n+95.48.228.45:8333\n+95.69.249.63:8333\n+95.82.146.70:8333\n+95.83.73.31:8333\n+95.84.164.43:8333\n+95.87.226.56:8333\n+95.110.234.93:8333\n+95.163.71.126:8333\n+95.164.65.194:8333\n+95.174.66.211:8333\n+95.211.174.137:8333\n+95.216.11.156:8433\n+96.47.114.108:8333\n+97.84.232.105:8333\n+97.99.205.241:8333\n+98.25.193.114:8333\n+99.115.25.13:8333\n+101.32.19.184:8333\n+101.100.174.240:8333\n+102.132.245.16:8333\n+103.14.244.190:8333\n+103.76.48.5:8333\n+103.84.84.250:8335\n+103.99.168.150:8333\n+103.109.101.216:8333\n+103.122.247.102:8333\n+103.129.13.45:8333\n+103.198.192.14:20008\n+103.224.119.99:8333\n+103.231.191.7:8333\n+103.235.230.196:8333\n+104.171.242.155:8333\n+104.238.220.199:8333\n+106.163.158.127:8333\n+107.150.41.179:8333\n+107.159.93.103:8333\n+108.183.77.12:8333\n+109.9.175.65:8333\n+109.99.63.159:8333\n+109.110.81.90:8333\n+109.123.213.130:8333\n+109.134.232.81:8333\n+109.169.20.168:8333\n+109.199.241.148:8333\n+109.229.210.6:8333\n+109.236.105.40:8333\n+109.248.206.13:8333\n+111.42.74.65:8333\n+111.90.140.179:8333\n+112.215.205.236:8333\n+113.52.135.125:8333\n+114.23.246.137:8333\n+115.47.141.250:8885\n+115.70.110.4:8333\n+116.34.189.55:8333\n+118.103.126.140:28333\n+118.189.187.219:8333\n+119.3.208.236:8333\n+119.8.47.225:8333\n+119.17.151.61:8333\n+120.25.24.30:8333\n+120.241.34.10:8333\n+121.98.205.100:8333\n+122.112.148.153:8339\n+122.116.42.140:8333\n+124.217.235.180:8333\n+125.236.215.133:8333\n+129.13.189.212:8333\n+130.185.77.105:8333\n+131.188.40.191:8333\n+131.193.220.15:8333\n+135.23.124.239:8333\n+136.33.185.32:8333\n+136.56.170.96:8333\n+137.226.34.46:8333\n+138.229.26.42:8333\n+139.9.249.234:8333\n+141.101.8.36:8333\n+143.176.224.104:8333\n+144.2.69.224:8333\n+144.34.161.65:18333\n+144.91.116.44:8333\n+144.137.29.181:8333\n+148.66.50.50:8335\n+148.72.150.231:8333\n+148.170.212.44:8333\n+149.167.99.190:8333\n+154.92.16.191:8333\n+154.221.27.21:8333\n+156.19.19.90:8333\n+156.241.5.190:8333\n+157.13.61.76:8333\n+157.13.61.80:8333\n+157.230.166.98:14391\n+158.75.203.2:8333\n+158.181.125.150:8333\n+158.181.226.33:8333\n+159.100.242.254:8333\n+159.100.248.234:8333\n+159.138.87.18:8333\n+160.16.0.30:8333\n+162.0.227.54:8333\n+162.0.227.56:8333\n+162.62.18.226:8333\n+162.209.1.233:8333\n+162.243.175.86:8333\n+162.244.80.208:8333\n+162.250.188.87:8333\n+162.250.189.53:8333\n+163.158.202.112:8333\n+163.158.243.230:8333\n+165.73.62.31:8333\n+166.62.82.103:32771\n+166.70.94.106:8333\n+167.86.90.239:8333\n+169.44.34.203:8333\n+172.93.101.73:8333\n+172.105.7.47:8333\n+173.23.103.30:8000\n+173.53.79.6:8333\n+173.70.12.86:8333\n+173.89.28.137:8333\n+173.176.184.54:8333\n+173.208.128.10:8333\n+173.254.204.69:8333\n+173.255.204.124:8333\n+174.94.155.224:8333\n+174.114.102.41:8333\n+174.114.124.12:8333\n+176.10.227.59:8333\n+176.31.224.214:8333\n+176.74.136.237:8333\n+176.99.2.207:8333\n+176.106.191.2:8333\n+176.160.228.9:8333\n+176.191.182.3:8333\n+176.212.185.153:8333\n+176.241.137.183:8333\n+177.38.215.73:8333\n+178.16.222.146:8333\n+178.132.2.246:8333\n+178.143.191.171:8333\n+178.148.172.209:8333\n+178.148.226.180:8333\n+178.150.96.46:8333\n+178.182.227.50:8333\n+178.236.137.63:8333\n+178.255.42.126:8333\n+180.150.52.37:8333\n+181.39.32.99:8333\n+181.48.77.26:8333\n+181.52.223.52:8333\n+181.238.51.152:8333\n+183.88.223.208:8333\n+183.110.220.210:30301\n+184.95.58.166:8336\n+184.164.147.82:41333\n+184.171.208.109:8333\n+185.25.48.39:8333\n+185.25.48.184:8333\n+185.64.116.15:8333\n+185.80.219.132:8333\n+185.85.3.140:8333\n+185.95.219.53:8333\n+185.108.244.41:8333\n+185.134.233.121:8333\n+185.145.128.21:8333\n+185.148.3.227:8333\n+185.153.196.240:8333\n+185.158.114.184:8333\n+185.165.168.196:8333\n+185.181.230.74:8333\n+185.185.26.141:8111\n+185.186.208.162:8333\n+185.189.132.178:57780\n+185.211.59.50:8333\n+185.233.148.146:8333\n+185.238.129.113:8333\n+185.249.199.106:8333\n+185.251.161.54:8333\n+187.189.153.136:8333\n+188.37.24.190:8333\n+188.42.40.234:18333\n+188.61.46.36:8333\n+188.68.45.143:8333\n+188.127.229.105:8333\n+188.134.6.84:8333\n+188.134.8.36:8333\n+188.214.129.65:20012\n+188.230.168.114:8333\n+189.34.14.93:8333\n+189.207.46.32:8333\n+190.211.204.68:8333\n+191.209.21.188:8333\n+192.3.11.20:8333\n+192.3.185.210:8333\n+192.65.170.15:8333\n+192.65.170.50:8333\n+192.146.137.18:8333\n+192.157.202.178:8333\n+192.227.80.83:8333\n+193.10.203.23:8334\n+193.25.6.206:8333\n+193.42.110.30:8333\n+193.58.196.212:8333\n+193.106.28.8:8333\n+193.189.190.123:8333\n+193.194.163.35:8333\n+193.194.163.53:8333\n+194.14.246.205:8333\n+194.36.91.253:8333\n+194.126.113.135:8333\n+194.135.135.69:8333\n+195.56.63.4:8333\n+195.56.63.5:8333\n+195.67.139.54:8333\n+195.135.194.8:8333\n+195.202.169.149:8333\n+195.206.105.42:8333\n+195.209.249.164:8333\n+198.1.231.6:8333\n+198.200.43.215:8333\n+199.182.184.204:8333\n+199.247.7.208:8333\n+199.247.249.188:8333\n+200.7.252.118:8333\n+200.20.186.254:8333\n+200.83.166.136:8333\n+202.55.87.45:8333\n+202.79.167.65:8333\n+202.108.211.135:8333\n+202.169.102.73:8333\n+203.130.48.117:8885\n+203.132.95.10:8333\n+203.151.166.123:8333\n+204.93.113.108:8333\n+204.111.241.195:8333\n+206.124.149.66:8333\n+207.115.102.98:8333\n+207.229.46.150:8333\n+208.76.252.198:8333\n+208.100.13.56:8333\n+208.100.178.175:8333\n+208.110.99.105:8333\n+209.6.210.179:8333\n+209.133.220.74:8333\n+209.141.57.57:8333\n+211.27.147.67:8333\n+212.34.225.118:8333\n+212.89.173.216:8333\n+212.99.226.36:9020\n+212.237.96.98:8333\n+213.89.131.53:8333\n+216.38.129.164:8333\n+216.134.165.55:8333\n+216.146.251.8:8333\n+216.189.190.95:8333\n+216.226.128.189:8333\n+216.236.164.82:8333\n+217.19.216.210:8333\n+217.26.32.10:8333\n+217.64.47.138:8333\n+217.64.133.220:8333\n+217.92.55.246:8333\n+218.31.113.245:8333\n+218.255.242.114:8333\n+220.133.39.61:8333\n+223.16.30.175:8333\n+[2001:19f0:6001:306f:ec4:7aff:fe8f:66ec]:8333\n+[2001:1bc0:cc::a001]:8333\n+[2001:1c02:2f18:d00:b62e:99ff:fe49:d492]:8333\n+[2001:4100:0:64::93]:8333\n+[2001:4100:0:64:dcaf:afff:fe00:6707]:8333\n+[2001:470:a:c13::2]:8333\n+[2001:4801:7819:74:b745:b9d5:ff10:a61a]:8333\n+[2001:4ba0:fffa:5d::93]:8333\n+[2001:610:1908:ff01:f816:3eff:fe33:2e32]:8333\n+[2001:638:a000:4140::ffff:191]:8333\n+[2001:648:2800:131:4b1f:f6fc:20f7:f99f]:8333\n+[2001:678:7dc:8::2]:8333\n+[2001:678:cc8::1:10:88]:20008\n+[2001:67c:1220:80c::93e5:dd2]:8333\n+[2001:67c:1220:80c:e5dc:ad0c:9289:c28f]:8333\n+[2001:67c:16dc:1201:5054:ff:fe17:4dac]:8333\n+[2001:67c:2354:2::22]:8333\n+[2001:67c:26b4:12:7ae3:b5ff:fe04:6f9c]:8333\n+[2001:67c:2f0::20:fa]:8333\n+[2001:718:801:311:5054:ff:fe19:c483]:8333\n+[2001:8d8:87c:7c00::99:3c1]:8333\n+[2001:8f1:1404:3700:8e49:715a:2e09:b634]:9444\n+[2001:b07:5d29:99a5:194b:3874:d65e:a90d]:8333\n+[2001:ba8:1f1:f0fe::2]:8333\n+[2001:bc8:1200:0:dac4:97ff:fe2a:3554]:20008\n+[2001:da8:100d:22:10fa:d85f:10f2:21fd]:8333\n+[2001:da8:8001:7a39:f035:7d:b99f:eb79]:8333\n+[2001:e42:103:100::30]:8333\n+[2400:2412:103:c900:825:8f20:eaff:65c2]:8333\n+[2400:4052:e20:4f00:69fe:bb33:7b1c:a1ca]:8333\n+[2401:1800:7800:105:be76:4eff:fe1c:b35]:8333\n+[2401:3900:2:1::2]:8333\n+[2401:b140::44:150]:8333\n+[2401:d002:4402:0:8f28:591a:6ea0:c683]:8333\n+[2403:6200:8821:3d68:195b:87e9:6819:d5c8]:8333\n+[2405:6580:2140:3a00:c28c:983:364b:5d70]:8333\n+[2405:9800:b911:a18a:58eb:cd3c:9d82:ea4a]:8333\n+[2405:aa00:2::40]:8333\n+[2409:10:ca20:1df0:224:e8ff:fe1f:60d9]:8333\n+[2409:8a1e:a9af:3660:1c5a:5b6b:8a2d:9848]:8333\n+[2409:8a1e:a9af:3660:404:39ba:88f2:e8df]:8333\n+[240b:10:9141:400:49b4:3a2e:1e5:84c]:8333\n+[240d:1a:759:6000:a7b1:451a:8874:e1ac]:8333\n+[240d:1a:759:6000:ddab:3141:4da0:8878]:8333\n+[2600:8805:2400:14e:12dd:b1ff:fef2:3013]:8333\n+[2601:602:8d80:b63:dc3e:24ff:fe92:5eb]:8333\n+[2602:ffb6:4:2798:f816:3eff:fe2f:5441]:8333\n+[2602:ffb6:4:739e:f816:3eff:fe00:c2b3]:8333\n+[2602:ffb8::208:72:57:200]:8333\n+[2604:1380:4111:9300::1]:8333\n+[2604:4300:a:2e:21b:21ff:fe11:392]:8333\n+[2604:4500::2e06]:8112\n+[2604:5500:706a:4000:fc79:b9bb:1d7:c325]:8333\n+[2604:5500:c134:4000::3fc]:32797\n+[2604:6800:5e11:162:5c8f:d2ff:fe26:146f]:8333\n+[2605:4d00::50]:8333\n+[2605:6400:20:13bf:df1d:181c:83bb:22e8]:8333\n+[2605:ae00:203::203]:8333\n+[2605:c000:2a0a:1::102]:8333\n+[2607:f2c0:f00e:300::54]:8333\n+[2607:f2f8:ad40:bc1::1]:8333\n+[2607:f470:8:1048:ae1f:6bff:fe70:7240]:8333\n+[2607:ff28:800f:97:225:90ff:fe75:1110]:8333\n+[2620:11c:5001:1118:d267:e5ff:fee9:e673]:8333\n+[2620:6e:a000:2001::6]:8333\n+[2804:14d:4c93:9809:9769:da80:1832:3480]:8333\n+[2a00:1328:e101:c00::163]:8333\n+[2a00:1398:4:2a03:215:5dff:fed6:1033]:8333\n+[2a00:13a0:3015:1:85:14:79:26]:8333\n+[2a00:1630:14::101]:8333\n+[2a00:1768:2001:27::ef6a]:8333\n+[2a00:1828:a004:2::666]:8333\n+[2a00:1838:36:17::38cb]:8333\n+[2a00:1838:36:7d::d3c6]:8333\n+[2a00:1c10:2:709:58f7:e0ff:fe24:a0ba]:22220\n+[2a00:1c10:2:709::217]:22220\n+[2a00:1f40:5001:100::31]:8333\n+[2a00:6020:1395:1400:baf7:2d43:60b3:198b]:8333\n+[2a00:7c80:0:10b::3faf]:8333\n+[2a00:8a60:e012:a00::21]:8333\n+[2a00:ab00:603:84::3]:8333\n+[2a00:bbe0:cc:0:62a4:4cff:fe23:7510]:8333\n+[2a00:ca8:a1f:3025:f949:e442:c940:13e8]:8333\n+[2a00:d2a0:a:3d00:1cdf:38bb:a7d6:c251]:8333\n+[2a00:d880:11::20e]:8333\n+[2a00:ec0:7207:9100:5f8f:25dd:2574:3982]:8333\n+[2a00:f820:433::36]:8333\n+[2a01:138:a017:b018::42]:8333\n+[2a01:430:17:1::ffff:1153]:8333\n+[2a01:490:16:301::2]:8333\n+[2a01:4b00:807c:1b00:cda1:c6a:2bad:2418]:8333\n+[2a01:4b00:80e7:5405::1]:8333\n+[2a01:4f8:192:4212::2]:8433\n+[2a01:7a0:2:137c::3]:8333\n+[2a01:7a7:2:1467:ec4:7aff:fee2:5690]:8333\n+[2a01:7c8:d002:10f:5054:ff:fe5c:dac7]:8333\n+[2a01:7c8:d002:318:5054:ff:febe:cbb1]:8333\n+[2a01:8740:1:ffc5::8c6a]:8333\n+[2a01:cb00:f98:ca00:5054:ff:fed4:763d]:8333\n+[2a01:cb14:cf6:bc00:21e5:f12e:32c8:145]:8333\n+[2a01:d0:0:1c::245]:8333\n+[2a01:d0:bef2::12]:8333\n+[2a01:e35:2e40:6830:211:32ff:fea6:de3d]:8333\n+[2a02:1205:c6aa:60c0:70d8:aaee:a82d:993c]:8333\n+[2a02:169:502::614]:8333\n+[2a02:180:1:1::5b8f:538c]:8333\n+[2a02:348:62:5ef7::1]:8333\n+[2a02:390:9000:0:218:7dff:fe10:be33]:8333\n+[2a02:7aa0:1619::adc:8de0]:8333\n+[2a02:7b40:b0df:8925::1]:8333\n+[2a02:7b40:b905:37db::1]:8333\n+[2a02:810d:8cbf:f3a8:96c6:91ff:fe17:ae1d]:8333\n+[2a02:8389:1c0:9680:201:2eff:fe82:b3cc]:8333\n+[2a02:a454:a516:1:517:928:7e0d:957c]:8333\n+[2a02:af8:fab0:804:151:236:34:161]:8333\n+[2a02:af8:fab0:808:85:234:145:132]:8333\n+[2a02:e00:fff0:1e2::a]:8333\n+[2a03:2260:3006:d:d307:5d1d:32ca:1fe8]:8333\n+[2a03:6000:870:0:46:23:87:218]:8333\n+[2a03:9da0:f6:1::2]:8333\n+[2a03:c980:db:47::]:8333\n+[2a03:e2c0:1ce::2]:8333\n+[2a04:3544:1000:1510:706c:abff:fe6c:501c]:8333\n+[2a04:52c0:101:383::2a87]:8333\n+[2a04:52c0:101:3fb::4c27]:8333\n+[2a04:ee41:83:50df:d908:f71d:2a86:b337]:8333\n+[2a05:6d40:b94e:d100:225:90ff:fe0d:cfc2]:8333\n+[2a05:e5c0:0:100:250:56ff:feb9:d6cb]:8333\n+[2a05:fc87:1:6::2]:8333\n+[2a05:fc87:4::8]:8333\n+[2a07:5741:0:115d::1]:8333\n+[2a07:a880:4601:1062:b4b4:bd2a:39d4:7acf]:51401\n+[2a07:abc4::1:946]:8333\n+[2a07:b400:1:34c::2:1002]:8333\n+[2a0a:8c41::b4]:8333\n+[2a0a:c801:1:7::183]:8333\n+[2a0b:ae40:3:4a0a::15]:8333\n+[2a0f:df00:0:254::46]:8333\n+[2c0f:f598:5:1:1001::1]:8333\n+[2c0f:fce8:0:400:b7c::1]:8333\n+226eupdnaouu4h2v.onion:8333\n+22h7b6f3caabqqsu.onion:8333\n+23wdfqkzttmenvki.onion:8333\n+23yi3frxymtwdgre.onion:8333\n+2ajon3moyf4i2hbb.onion:8333\n+2bfmlpk55hffpl6e.onion:8333\n+2ckmbf6sglwydeth.onion:8333\n+2hkusi5gcaautwqf.onion:8333\n+2ivhmlbxbgnkcykl.onion:8333\n+2mmxouhv6nebowkq.onion:8333\n+2qsnv6exnuuiar7z.onion:8333\n+2qudbhlnvqpli3sz.onion:8333\n+2ujxdfovfyjpmdto.onion:8333\n+2xdgeufrek3eumkw.onion:8333\n+2xdzsruhsej4tsiw.onion:8333\n+34ran2woq4easmss.onion:8333\n+36q7khhej2lxd3wf.onion:8333\n+373wjdspuo52utzq.onion:8333\n+376klet5xqbrg2jv.onion:8333\n+37kwd7fxop766l5k.onion:8333\n+3e5t7hq4alt5tovx.onion:8333\n+3gbxhebfhouuwgc3.onion:8333\n+3hgbjze2nbwyuewf.onion:8333\n+3iuuvrd2waha2cxo.onion:8333\n+3jtxujdaiwh6iltu.onion:8333\n+3l5eq2du7mvscj4a.onion:8333\n+3nofngnqlqeehn7o.onion:8333\n+3r44ddzjitznyahw.onion:8333\n+3vtbuwmton7vq5qz.onion:8333\n+46ohzttz4peki43g.onion:8333\n+47fl3ivl4v56jstr.onion:8333\n+47i6qrl2ijqcwlg6.onion:8333\n+47uupgzcnrwahoto.onion:8333\n+4c5cki37evofds6d.onion:8333\n+4eq36jrx7xuytfpc.onion:8333\n+4ewkdxvcg57adrni.onion:8333\n+4flvgibnm2nld3na.onion:8333\n+4iaontym47imawe4.onion:8333\n+4jxz37oou5ag763c.onion:8333\n+4mnkvj6ha73eqnbk.onion:8333\n+4nnuyxm5k5tlyjq3.onion:8333\n+4nz2yg4cnote3ej7.onion:8333\n+4pozwh6564ygzddk.onion:8333\n+4qgfb56rvpbmesx7.onion:8333\n+4rsax23taqzwmimj.onion:8333\n+4u5j5ay6rasowt4m.onion:8333\n+4vorvtoyegh4zbvr.onion:8333\n+52s4j5pldwlpzhtw.onion:8333\n+5abpiiqfvekoejro.onion:8333\n+5aydzxx6jyoz3nez.onion:8333\n+5cxzdsrtok5dgo4a.onion:8333\n+5eduikpudie3jyrf.onion:8333\n+5epeafkmya4fv5d5.onion:8333\n+5fyxlztic3t6notz.onion:8333\n+5hd6eyew5ybnq6gb.onion:8333\n+5jyfzhwksb6urrp2.onion:8333\n+5nooqgct567ig57v.onion:8333\n+5nsfm4nqqzzprjrp.onion:8333\n+5oqstxspzhlgjef6.onion:8333\n+5pzzmd4tfonrqzb2.onion:8333\n+5sckmx4yucbnp4io.onion:8333\n+5ue7worzbn6hon3e.onion:8333\n+5wxhx2tozpovf6z3.onion:8333\n+5xk3yun36e32e34i.onion:8333\n+5zght2g7vcsapi65.onion:8333\n+62dcdpvdolfzkdzl.onion:8333\n+63bko2mhixnn2b7d.onion:8333\n+67hjvfv6wictalm5.onion:8333\n+6g6ko4klkf5atldi.onion:8333\n+6k5zreexw4cadxi5.onion:8333\n+6kf5ayhlpenywgas.onion:8333\n+6maigxjvcet4pite.onion:8333\n+6ressv4dvplb5ihh.onion:8333\n+6rjex6gyuaui3c5e.onion:8333\n+6skgnf43pphdvjua.onion:8333\n+6stxaoduwisg5sqh.onion:8333\n+6xqy4ts6bo6u5dgm.onion:8333\n+7avnl3dqpgu23jva.onion:8333\n+7ff4wk266no23txn.onion:8333\n+7hipbuzfdcyzqkkg.onion:8333\n+7sjmlzrthjlpfydk.onion:8333\n+7tut3zt2akwrmw6x.onion:8333\n+7uhsjzj6nx3dfnxt.onion:8333\n+7wm4wso3wvatxnbt.onion:8333\n+7ykmzuybwd2ptzg4.onion:8333\n+a27bvhina4y23jxo.onion:8333\n+a53vtdm7uiet5vdl.onion:8333\n+a56572xjuofnt2dp.onion:8333\n+abp25knifdsnc2rv.onion:8333\n+aefx7ubzpal7clak.onion:8333\n+ai5r2diozoe7rrdz.onion:8333\n+aipupphit3enggpj.onion:8333\n+algpjjygd3gtnmpp.onion:8333\n+alihua7rhyc452hr.onion:8333\n+am3gyyfynxzwyxhx.onion:8333\n+ankozzfhl2r3uc6u.onion:8333\n+at3twjlbtc2lqnq5.onion:8333\n+avqobl72pmc64dyi.onion:8333\n+awmdz2fs3b5h5ut5.onion:8333\n+ayywpiy77butdjrj.onion:8333\n+b2i3pj7c24cvprs7.onion:8333\n+b4ilebyxcu6nttio.onion:8333\n+b4vvkbqipcmkwp4v.onion:8333\n+bddfqxps5ibd3ftw.onion:8333\n+be5bgcpo4ooux5qy.onion:8333\n+bgla4m6zetvtv7ls.onion:8333\n+bh32gzw3nyckzqut.onion:8333\n+bho4kodpehn7xr3x.onion:8333\n+bitcoin4rlfa4wqx.onion:8333\n+biw7s6jf6r2mf3cu.onion:8333\n+bk7yp6epnmcllq72.onion:8333\n+blcktrgve5vetjsk.onion:8333\n+blwbp7gfdffdsx4g.onion:8333\n+bnxn6qqc55gvn5op.onion:8333\n+bp7o22lvcjawelvv.onion:8333\n+bqqyqucgj4tchn64.onion:8333\n+bvdzmutcqf7gzzn5.onion:8333\n+c36zmegjkinftmtf.onion:8333\n+c4fn62gnltlgrptv.onion:8333\n+caael5yedviooqzk.onion:8333\n+caq54ablfbrnumdd.onion:8333\n+cernrmrk5zomzozn.onion:8333\n+chri6itgjaagof4t.onion:8333\n+cncwik3tnd2ejm5z.onion:8333\n+cuyjqoziemcmwaxl.onion:8333\n+cx7qa2gpqyp7pld5.onion:8333\n+czp7wgaus4gvio72.onion:8333\n+d2fn54rfyjdangi4.onion:8333\n+d2sk45u6ca64yeqh.onion:8333\n+d3aowmngvktsziae.onion:8333\n+d5iu4aiz3y2kgcgj.onion:8333\n+d6zbw2sxnxgj5sv3.onion:8333\n+db5rd5e46t7mgini.onion:8333\n+dci2gulorl44yj55.onion:8333\n+ddpth2mwt3rsvoog.onion:8333\n+dfrwza7fcecknnms.onion:8333\n+djwhjfj4rh3oz3yj.onion:8333\n+dkk5mmpe5jtjodk5.onion:8333\n+doj3zgmsbzurmqgp.onion:8333\n+dpce4f3rcqddzbx5.onion:8333\n+drwo3vnxch5ozfbo.onion:8333\n+duikkidxip3lyexn.onion:8333\n+duqdliptc22i6hf5.onion:8333\n+duyp4coh5d7nh3ud.onion:8333\n+duz5two3z7c55lxj.onion:8333\n+dvu6dlar6ezc6xen.onion:8333\n+dy6zqs46ycleayyp.onion:8333\n+dz2ydmj3yqrcm4r7.onion:8333\n+e2b2a5suvdawzxud.onion:8333\n+e33h57j2ewkkqsn5.onion:8333\n+e5kjiay7pzj5qpzv.onion:8333\n+e7iko42d2wzcmvy4.onion:8333\n+ea6boh4kotq56ws5.onion:8333\n+efdx6gc4s5ezyqeg.onion:8333\n+efrpuuic6ukeyqcs.onion:8333\n+egruc3bi3itru6gq.onion:8333\n+erc6tjs2ucyadl23.onion:8333\n+eue2n5sk5tktg5bv.onion:8333\n+ezkr7stq4w7ohjrt.onion:8333\n+f3nyyjba6kpxznhk.onion:8333\n+faq73vj4pcs73thu.onion:8333\n+fdvtlj3pscbxuh75.onion:8333\n+fgdpxov4nzxvhcpv.onion:8333\n+fisqq6vzk3m6t225.onion:8333\n+fkgp3qwegacrd2bj.onion:8333\n+fo3tdfwx27takqq5.onion:8333\n+fqkxtchwypispkpv.onion:8333\n+fqunuhlwvd7rq6d5.onion:8333\n+frwt5mscpyhiuwpe.onion:8333\n+fta4gfjiuv6f2le2.onion:8333\n+fuoy2ipuqrqwe5cf.onion:8333\n+fz6nsij6jiyuwlsc.onion:8333\n+g3vlnaaaog5sgui5.onion:8333\n+g44i6jwsutkwmspz.onion:8333\n+g55t65d5ckjixcnw.onion:8333\n+gajd6eyrl2qwkfmg.onion:8333\n+gblue3hr53p4grx7.onion:8333\n+gbpro5tzduiuff4v.onion:8333\n+gc4l3tql32qhfgmi.onion:8333\n+gcnlorvtpycuajc6.onion:8333\n+gdsib2nk2eeoidgc.onion:8333\n+ge5gm7c6w7yahpz7.onion:8333\n+gegcteeep4cwftl5.onion:8333\n+gfoyraudgv5qjdku.onion:8333\n+ggpbuypmxgi26lc6.onion:8333\n+ghqivye7cfckisnt.onion:8333\n+girakxomne5fby64.onion:8333\n+glz5gfk33tuug5ne.onion:8333\n+gplatxoyg5nxl5rj.onion:8333\n+gripl5xjwy2dcr6c.onion:8333\n+gthhzlmqci22nxru.onion:8333\n+gto2d64swosfmk6c.onion:8333\n+guaciney52mgcbp2.onion:8333\n+gwktgrmtwk6nv5sc.onion:8333\n+gwoxnokdcwc7hy4p.onion:8333\n+h333f4qnwe7mrymn.onion:8333\n+h6a32n4blbwwyn4d.onion:8333\n+hafwtrbooszoembm.onion:8333\n+hbwhgsb3eeinnr6t.onion:8333\n+hcv6foxh5mk7fhb5.onion:8333\n+hd6hktcl6wamzlzm.onion:8333\n+hda6msa4v4rt77gx.onion:8333\n+hdgnxkuqsd6wjwwx.onion:8333\n+hgh3azn3eesddvcg.onion:8333\n+hhyxu6bwkjefejoz.onion:8333\n+hizn6rmofsg3upmn.onion:8333\n+hjqxxsy2osemfvev.onion:8333\n+hkbp7mbgw6klls4s.onion:8333\n+hlojuwiwbkoj4kdz.onion:8333\n+hlzxsjr7ob3qzzqq.onion:8333\n+hniuzplezebyhv7a.onion:8333\n+hondewkj4s4rdcwf.onion:8333\n+hql5nv6vhceid3bn.onion:8333\n+hspjo7mqrre5gyxr.onion:8333\n+hu64s2mdr3x7yxka.onion:8333\n+hvwvq2swkqw3qvyo.onion:8333\n+hwo2biyndrrvpl6f.onion:8333\n+hzxj3dth3y2xt45o.onion:8333\n+i3ufxuw3t7cxfdpq.onion:8333\n+ia3n3q5u45gvpx7a.onion:8333\n+icfgs3fctckd4yeo.onion:8333\n+icpz6thqvdjcwlvb.onion:8333\n+if32zo5u4mhdunfd.onion:8333\n+ig4lguql6vxkbmmr.onion:8333\n+ihhcr7fhczqdac4y.onion:8333\n+ijm2tyxob7vkvazz.onion:8333\n+ip3puuqghumfz5ww.onion:8333\n+iq3ket72f3y2frpg.onion:8333\n+iqagt5co4dt7h6hf.onion:8333\n+iugw42ih6hprqr26.onion:8333\n+ivf774v4t7k63i6d.onion:8333\n+ivfacdf7cig2z2y2.onion:8333\n+ivsxdwku5og2zj4l.onion:8333\n+ixwgrhaklvu4g6o7.onion:8333\n+iz56moo6mkp3g7xo.onion:8333\n+j2cp5muw5j3lumcx.onion:8333\n+j2lrkrwugldwewws.onion:8333\n+j2qtmkd2dablssz4.onion:8333\n+j5e2yuan57v2h5el.onion:8333\n+j5jfrdthqt5g25xz.onion:8333\n+j5lk2uv2bspfqxfk.onion:8333\n+janvvzsmzcsj3fil.onion:8333\n+jenn2tmyl3xxarmq.onion:8333\n+jfoe5f2sczojfp32.onion:8333\n+jgcgi6k2pxooi5q3.onion:8333\n+jhana24s3dzkitzp.onion:8333\n+jitgulb24mvfqrdg.onion:8333\n+jjuvwbjfzljmn7t3.onion:8333\n+jlcfomgr5xfexaif.onion:8333\n+jlehs6ybb26qlnna.onion:8333\n+jljzz4tmbqrxq3q5.onion:8333\n+joc4oqceedkg77vf.onion:8333\n+jr5y6njubcbv6g37.onion:8333\n+jroaos6la4vieho4.onion:8333\n+jsmphgkay7iihbkr.onion:8333\n+jtksnokusbzms7wl.onion:8333\n+ju5duo3r6p6diznc.onion:8333\n+jw6zymxcnebahuuj.onion:8333\n+jxalvhf7w7wevqzw.onion:8333\n+jyzhe3ig44ickysb.onion:8333\n+jze6ukn4idrh44eo.onion:8333\n+k4glotlxnmttb6ct.onion:8333\n+k7uy3iwmvguzygd2.onion:8333\n+kl23ofag3ukb6hxl.onion:8333\n+kokt2qr6d4pmyb2d.onion:8333\n+kpalu3h5ydkoaivs.onion:8333\n+krdpbdvtqw5c5lee.onion:8333\n+kriw6kzjzarzgb3g.onion:8333\n+krp2thcmwrpsoue6.onion:8333\n+kvyvdwjwtae5mo77.onion:8333\n+kyrxri5rbr6ipurs.onion:8333\n+kz3oxg7745dxt62q.onion:8333\n+l3w5fcki2wbro2qb.onion:8333\n+l44bisuxhh7reb5q.onion:8333\n+l565g523emjebusj.onion:8333\n+l6w5kdeigwsgnf5t.onion:8333\n+l7a4emryfxkjgmmb.onion:8333\n+l7sloscjqqbifcsw.onion:8333\n+laafjqvtog7djfl2.onion:8333\n+lah676kxbgbgw3u2.onion:8333\n+lbq2a7pnpmviw2qo.onion:8333\n+lc4wnpql27vymi35.onion:8333\n+ldoffbfpk3j6c7y7.onion:8333\n+lehpmglkivobq2qo.onion:8333\n+lgewpjz7ie7daqqr.onion:8333\n+lgkvbvro67jomosw.onion:8333\n+liw5z4ngic6b7vnv.onion:8333\n+ljs7gwrmmza6q6ga.onion:8333\n+lmvax3e6awaxvhqi.onion:8333\n+lrz77dwf7yq4cgnt.onion:8333\n+lva54pnbq2nsmjyr.onion:8333\n+lxc2uphxyyxflhnf.onion:8333\n+lyjybdr4hmj3bqab.onion:8333\n+lz2zlnmyynwtgwf2.onion:8333\n+m6hcnpikimyh37yp.onion:8333\n+md635omjnrgheed3.onion:8333\n+mdb3oupwf4f2qyjb.onion:8333\n+me6d4esx7ohdnxne.onion:8333\n+mecfkik5ci47wckj.onion:8333\n+mfrvevn7w6rwsp4r.onion:8333\n+mimuutlew5srtduk.onion:8333\n+mnysk3izxvra3huv.onion:8333\n+mqu6gqtrhm6xzwwh.onion:8333\n+mwuc6vom4ngijtb3.onion:8333\n+mxdtrjhe2yfsx3pg.onion:8333\n+n4ibet4piscv22nj.onion:8333\n+n6d46vbzx43bevlb.onion:8333\n+n6t6kfgzlvozxhfm.onion:8333\n+n7rrochwerf2qxze.onion:8333\n+ncsdiqmnxhnnjbsz.onion:8333\n+nitxw3ilffngpumv.onion:8333\n+njlsvubildehluwr.onion:8333\n+njslfsivyyhixbsp.onion:8333\n+nkf5e6b7pl4jfd4a.onion:8333\n+nkppsb3t3ducje6m.onion:8333\n+nlfwyqksmeqe45zz.onion:8333\n+nlyjmpcmpaz5b4aa.onion:8333\n+nnmv7z65k65mcesr.onion:8333\n+nrrfwdmrm3imuebn.onion:8333\n+nrrmkgmulpgsbwlt.onion:8333\n+nw4h7leckut7eapv.onion:8333\n+nwky3wd3ihoidvb5.onion:8333\n+ny4kkemmmqv4lptm.onion:8333\n+o25wkcw7eorg2toi.onion:8333\n+o2gumvbkw6pm45cf.onion:8333\n+o4yjshdwlbshylqw.onion:8333\n+ofx4qgw6lppnvtgv.onion:8333\n+oketipl4gndqcaus.onion:8333\n+oq5q4qrqijr2kpun.onion:8333\n+oqw3mfoiobqcklxh.onion:8333\n+orsy2v63ecrmdj55.onion:8333\n+ot4tzmznyimmlszk.onion:8333\n+owk6c2jfthwkyahe.onion:8333\n+oy7ss3hm2okx4tun.onion:8333\n+p2pc6wbaepvdi6ce.onion:8333\n+p2x24gdhasmgcl5j.onion:8333\n+p6couujr2ndhllv3.onion:8333\n+pa7dw5bln5lqmu53.onion:8333\n+pasmchtoooj2kchd.onion:8333\n+pdapkkhk6pbcy2tj.onion:8333\n+peh5ajouuw6mw4sr.onion:8333\n+pkuuc5pwl5xygwhr.onion:8333\n+pq4wjl7vg7tsfycc.onion:8333\n+ptbwqhusps5qieql.onion:8333\n+ptwpbwyj5lnyew2f.onion:8333\n+pu7w3jfyrzp7sxsi.onion:8333\n+pwylbyvfuc62hhvx.onion:8333\n+q2fhnnyt5b2ayvce.onion:8333\n+q3i3apuionbazmfe.onion:8333\n+qd6fcpu3pvbf2y3x.onion:8333\n+qfewv3y7a3p4i3bd.onion:8333\n+qhytdttflhbc4rsh.onion:8333\n+qkn35rb3x2gxbwq4.onion:8333\n+qlvlexs7pwac2f4b.onion:8333\n+qogcqirtuta6rlxg.onion:8333\n+qrzqfxkhrmu5v5ro.onion:8333\n+qsyjasq46b2syiys.onion:8333\n+quu4b2zjbnr2ue4y.onion:8333\n+quycfj2wenz6bfyd.onion:8333\n+qvdy3cmocnlv5v7c.onion:8333\n+qvwhpqygan2xky5h.onion:8333\n+qyutwc26ullujafb.onion:8333\n+r45qg2d6iwfdhqwl.onion:8333\n+r4xudr6u4r5nyga4.onion:8333\n+r6apa5ssujxbwd34.onion:8333\n+r6z2gcsu37k3gaah.onion:8333\n+rbrjgfcca6v5b7yo.onion:8333\n+rcifxibawqt6rxzz.onion:8333\n+rdo3xctk3zkzjvln.onion:8333\n+rdvlepy6ghgpapzo.onion:8333\n+recs3a27chv2lg65.onion:8333\n+rfmbiy5vztvn6hyn.onion:8333\n+rli5lbje4k77inzw.onion:8333\n+roqwnmepcj453vfh.onion:8333\n+rpbnx54qniivrmh3.onion:8333\n+rsvvogqdlijp77hv.onion:8333\n+rwm5d4hg3hc77kdt.onion:8333\n+s3yelkvc5f5xeysw.onion:8333\n+s6rx52hitmpp4lge.onion:8333\n+sa6m3rvycipgemky.onion:8333\n+savebeesmkivmfbo.onion:8333\n+sbyjr5npk2mlmfw7.onion:8333\n+serwj42jme5xhhmw.onion:8333\n+sg4vmubv3djrzvuh.onion:8333\n+shsgksluz6jkgp6g.onion:8333\n+sjyzmwwu6diiit3r.onion:8333\n+sk3en3reudg3sdg5.onion:8333\n+skoifp4oj7l4osu5.onion:8333\n+sle2caplkln33e7y.onion:8333\n+smdd7q7gonajdmjq.onion:8333\n+spmhuxjb2cd7leun.onion:8333\n+srkgyv5edn2pa7il.onion:8333\n+sslnjjhnmwllysv4.onion:8333\n+su66ygras6rkdtnl.onion:8333\n+sundvmbjrtgdfahx.onion:8333\n+svd65k5jpal2p3lt.onion:8333\n+svua5hiqluw7o2sw.onion:8333\n+sxqjubmum4rmfgpu.onion:8333\n+t245vi742ti3tnka.onion:8333\n+t4fbovvgzpnimd2p.onion:8333\n+t4l4wv3erkhpde2p.onion:8333\n+t5qchwbr6u5v2agk.onion:8333\n+t7jlaj6ggyx7s5vy.onion:8333\n+ta6sjeqyb27f4n4a.onion:8333\n+tav7utpw4pfy7j6k.onion:8333\n+taxg5z2sxfm5c4d6.onion:8333\n+tekwvnbodbzrlufs.onion:8333\n+tg4uwrjmtr2jlbjy.onion:8333\n+th4cjvffjtw6vomu.onion:8333\n+th6fxymtwnfifqeu.onion:8333\n+thtchhl25u26nglq.onion:8333\n+tiiah7csuoklcvi6.onion:8333\n+tk63x5fk3337z3ud.onion:8333\n+tkgootat6cqn7vyy.onion:8333\n+tnj565wwqz5wpjvs.onion:8333\n+ts6qx37mmpu6nj5y.onion:8333\n+ttjisvxydgbtp56f.onion:8333\n+twn54v7ra2xjgd55.onion:8333\n+txem5meug24g2ezd.onion:8333\n+tyiunn36lmfcq5lr.onion:8333\n+tyv56xs6g6ndzqux.onion:8333\n+u47f3hxwq65sgs4o.onion:8333\n+u4r7fnholrdwwlni.onion:8333\n+u556ofb3myarafwn.onion:8333\n+u5q3gbz4qpz4wvlr.onion:8333\n+uakly3ydrevvpxwi.onion:8333\n+ug6hapi4qtekzc7v.onion:8333\n+ui553qotd6ron3rf.onion:8333\n+uir7f3wltoka6bbb.onion:8333\n+ukrjjhwodl44wmof.onion:8333\n+ul5gm2ixy7kqdfwg.onion:8333\n+undd7rsj4pen3wo4.onion:8333\n+uorwpzfehtykrg43.onion:8333\n+uovsp2yltnaojq6l.onion:8333\n+usazmdcs32ny24dy.onion:8333\n+usazs7glm7geyxkl.onion:8333\n+uss2kedg7qkwgdr5.onion:8333\n+utgyrvw75wv2nymi.onion:8333\n+uzwacms7kyzhehbl.onion:8333\n+v2kdcetvslmdfcwr.onion:8333\n+v5lhnzzv6nngfg5d.onion:8333\n+vc44gb4veppobrt3.onion:8333\n+vfwyhju43wxhzvux.onion:8333\n+vgujufk53lqyolio.onion:8333\n+vheejqq2v5dkb4xr.onion:8333\n+vj64edev4jnqfdsb.onion:8333\n+vmai5uigezr2khkj.onion:8333\n+vmuykd7sxbmi7w57.onion:8333\n+vomeacttinx3mpml.onion:8333\n+vpow2xofg3fwzsdq.onion:8333\n+vsawli4l5ifxdzaw.onion:8333\n+vunubqkfms7sifok.onion:8333\n+vuombnevwul4bqsb.onion:8333\n+vxcpvdng65aefz6t.onion:8333\n+vyxoizdzavp3obau.onion:8333\n+wbeon2ci7lfio6ay.onion:8333\n+wbwevew62mgsrrdz.onion:8333\n+wfaydlg6zyfzjcu5.onion:8333\n+wfz56s5lyn5dysez.onion:8333\n+wg3mq4ugyy2gx32b.onion:8333\n+whky54bctkf2n4p3.onion:8333\n+whmjanqoyzizzc4t.onion:8333\n+wlhou2wxgqyi3x3f.onion:8333\n+wlvkfrplfiioz22o.onion:8333\n+x3ngb3va7dovuenw.onion:8333\n+x57x62bmmnylvo7r.onion:8333\n+xgvm57mhgv564dka.onion:8333\n+xhs3glfwnwiumivn.onion:8333\n+xje5fwvyfdue2u6k.onion:8333\n+xlgubgyly2blvsg5.onion:8333\n+xnlu3tvakngy7tkp.onion:8333\n+xo5marilhuyo7but.onion:8333\n+xsaaxihdygnwxrix.onion:8333\n+xu5mlugdsmzfkvzh.onion:8333\n+xvrxqcptqvieedb2.onion:8333\n+xwzhrrygftq3q4w4.onion:8333\n+y4swmsaxdcos2bnu.onion:8333\n+y5tl4lqi365pplud.onion:8333\n+y5wzeqyaets5na6t.onion:8333\n+y73qk2mzkjkhoky7.onion:8333\n+y7oz3ydnvib4xhbb.onion:8333\n+yah7qgfqqrteoche.onion:8333\n+yba4brm555denlt7.onion:8333\n+ygeqkg4inplsace3.onion:8333\n+yjhnfu75lazbi34h.onion:8333\n+yjw7kqapxx5vggoj.onion:8333\n+ym7inmovbrna4gco.onion:8333\n+yq5cusnuokscy64z.onion:8333\n+yrcaioqrqrdwokqt.onion:8333\n+yrcr7pgjuazad254.onion:8333\n+yrksvon3tmvoohdv.onion:8333\n+ytpus4vx5w7j6wp2.onion:8333\n+ytqcigk2hhdl45ho.onion:8333\n+yxojl3xmjus3dik2.onion:8333\n+yzdqdsqx4fdung6w.onion:8333\n+z33nukt7ngik3cpe.onion:8333\n+z3ywbadw46ndnxgh.onion:8333\n+z6mbqq7llxlrn4kq.onion:8333\n+zb3lrcksn4rzhzje.onion:8333\n+ze7odp7pzarjplsr.onion:8333\n+zgbmhtbja4fy2373.onion:8333\n+zh7hvalcgvjpoaqm.onion:8333\n+ziztvxehmj5mehpg.onion:8333\n+zjii3yecdrmq73y3.onion:8333\n+zkrwmgjuvsza6ye2.onion:8333\n+zoz2aopwi3wfuqwg.onion:8333\n+ztdcfnh46773bivu.onion:8333\n+zuxhc6d3nwpgc4af.onion:8333\n+zuytrfevzjcpizli.onion:8333\n+zvq6dpt3i2ofdp3g.onion:8333\n+zwwm6ga7u2hqe2sd.onion:8333\n+zyqb4lenfspntj5m.onion:8333"
      },
      {
        "sha": "98365ee505ced2410cdc7ea841bf52198b405662",
        "filename": "contrib/seeds/nodes_test.txt",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/seeds/nodes_test.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/seeds/nodes_test.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_test.txt?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,11 @@\n+# List of fixed seed nodes for testnet\n+\n+# Onion nodes\n+thfsmmn2jbitcoin.onion\n+it2pj4f7657g3rhi.onion\n+nkf5e6b7pl4jfd4a.onion\n+4zhkir2ofl7orfom.onion\n+t6xj6wilh4ytvcs7.onion\n+i6y6ivorwakd7nw3.onion\n+ubqj4rsu3nqtxmtp.onion\n+"
      },
      {
        "sha": "13385cc816209d2c9fc2acf68343dce15e4dd201",
        "filename": "contrib/seeds/suspicious_hosts.txt",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/seeds/suspicious_hosts.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/seeds/suspicious_hosts.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/suspicious_hosts.txt?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,16 @@\n+130.211.129.106\n+148.251.238.178\n+176.9.46.6\n+178.63.107.226\n+54.173.72.127\n+54.174.10.182\n+54.183.64.54\n+54.194.231.211\n+54.66.214.167\n+54.66.220.137\n+54.67.33.14\n+54.77.251.214\n+54.94.195.96\n+54.94.200.247\n+83.81.130.26\n+88.198.17.7\n\\ No newline at end of file"
      },
      {
        "sha": "eaca473b400f0e57066d7f13062dc247dab7f41b",
        "filename": "contrib/testgen/README.md",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,8 @@\n+### TestGen ###\n+\n+Utilities to generate test vectors for the data-driven Bitcoin tests.\n+\n+Usage:\n+\n+    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py valid 50 > ../../src/test/data/key_io_valid.json\n+    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py invalid 50 > ../../src/test/data/key_io_invalid.json"
      },
      {
        "sha": "c7ebac50d4b7753f501aaf2af66fbba178eaac7c",
        "filename": "contrib/testgen/base58.py",
        "status": "added",
        "additions": 115,
        "deletions": 0,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/testgen/base58.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/testgen/base58.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/base58.py?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "patch": "@@ -0,0 +1,115 @@\n+# Copyright (c) 2012-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+Bitcoin base58 encoding and decoding.\n+\n+Based on https://bitcointalk.org/index.php?topic=1026.0 (public domain)\n+'''\n+import hashlib\n+\n+# for compatibility with following code...\n+class SHA256:\n+    new = hashlib.sha256\n+\n+if str != bytes:\n+    # Python 3.x\n+    def ord(c):\n+        return c\n+    def chr(n):\n+        return bytes( (n,) )\n+\n+__b58chars = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n+__b58base = len(__b58chars)\n+b58chars = __b58chars\n+\n+def b58encode(v):\n+    \"\"\" encode v, which is a string of bytes, to base58.\n+    \"\"\"\n+    long_value = 0\n+    for (i, c) in enumerate(v[::-1]):\n+        if isinstance(c, str):\n+            c = ord(c)\n+        long_value += (256**i) * c\n+\n+    result = ''\n+    while long_value >= __b58base:\n+        div, mod = divmod(long_value, __b58base)\n+        result = __b58chars[mod] + result\n+        long_value = div\n+    result = __b58chars[long_value] + result\n+\n+    # Bitcoin does a little leading-zero-compression:\n+    # leading 0-bytes in the input become leading-1s\n+    nPad = 0\n+    for c in v:\n+        if c == 0:\n+            nPad += 1\n+        else:\n+            break\n+\n+    return (__b58chars[0]*nPad) + result\n+\n+def b58decode(v, length = None):\n+    \"\"\" decode v into a string of len bytes\n+    \"\"\"\n+    long_value = 0\n+    for i, c in enumerate(v[::-1]):\n+        pos = __b58chars.find(c)\n+        assert pos != -1\n+        long_value += pos * (__b58base**i)\n+\n+    result = bytes()\n+    while long_value >= 256:\n+        div, mod = divmod(long_value, 256)\n+        result = chr(mod) + result\n+        long_value = div\n+    result = chr(long_value) + result\n+\n+    nPad = 0\n+    for c in v:\n+        if c == __b58chars[0]:\n+            nPad += 1\n+            continue\n+        break\n+\n+    result = bytes(nPad) + result\n+    if length is not None and len(result) != length:\n+        return None\n+\n+    return result\n+\n+def checksum(v):\n+    \"\"\"Return 32-bit checksum based on SHA256\"\"\"\n+    return SHA256.new(SHA256.new(v).digest()).digest()[0:4]\n+\n+def b58encode_chk(v):\n+    \"\"\"b58encode a string, with 32-bit checksum\"\"\"\n+    return b58encode(v + checksum(v))\n+\n+def b58decode_chk(v):\n+    \"\"\"decode a base58 string, check and remove checksum\"\"\"\n+    result = b58decode(v)\n+    if result is None:\n+        return None\n+    if result[-4:] == checksum(result[:-4]):\n+        return result[:-4]\n+    else:\n+        return None\n+\n+def get_bcaddress_version(strAddress):\n+    \"\"\" Returns None if strAddress is invalid.  Otherwise returns integer version of address. \"\"\"\n+    addr = b58decode_chk(strAddress)\n+    if addr is None or len(addr)!=21:\n+        return None\n+    version = addr[0]\n+    return ord(version)\n+\n+if __name__ == '__main__':\n+    # Test case (from http://gitorious.org/bitcoin/python-base58.git)\n+    assert get_bcaddress_version('15VjRaDX9zpbA8LVnbrCAFzrVzN7ixHNsC') == 0\n+    _ohai = 'o hai'.encode('ascii')\n+    _tmp = b58encode(_ohai)\n+    assert _tmp == 'DYB3oMS'\n+    assert b58decode(_tmp, 5) == _ohai\n+    print(\"Tests passed\")"
      },
      {
        "sha": "49320d92e6dafc7a2c173ced1dd2f19ac5e5c481",
        "filename": "contrib/testgen/gen_key_io_test_vectors.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/testgen/gen_key_io_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/testgen/gen_key_io_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_key_io_test_vectors.py?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "ece02dc24e8f93f248102c3dd810ed6394792414",
        "filename": "contrib/valgrind.supp",
        "status": "added",
        "additions": 185,
        "deletions": 0,
        "changes": 185,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/valgrind.supp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/valgrind.supp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/valgrind.supp?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "e95a57586ff1c34fef56f4d851934f0d881bbd8c",
        "filename": "contrib/verify-commits/README.md",
        "status": "added",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verify-commits/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verify-commits/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/README.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "c572806f2612e8c6cec07251e232e4d342ab3186",
        "filename": "contrib/verify-commits/allow-incorrect-sha512-commits",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verify-commits/allow-incorrect-sha512-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verify-commits/allow-incorrect-sha512-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-incorrect-sha512-commits?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "3abf82e529cbbbc766d0b7f7c4028d7721eb6755",
        "filename": "contrib/verify-commits/allow-revsig-commits",
        "status": "added",
        "additions": 504,
        "deletions": 0,
        "changes": 504,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verify-commits/allow-revsig-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verify-commits/allow-revsig-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-revsig-commits?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "7aab274b9a848fce47a53acf71b54dfb1bf3db0e",
        "filename": "contrib/verify-commits/allow-unclean-merge-commits",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verify-commits/allow-unclean-merge-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verify-commits/allow-unclean-merge-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-unclean-merge-commits?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "db5bfce208ef18e72d8643f83e773723ccd39116",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "78873dc0c38ebe6d800ab319c0cc21b9eeb641cd",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "c60f8ab695e9c0fb01feafb1c28074cb98ab122d",
        "filename": "contrib/verify-commits/trusted-git-root",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verify-commits/trusted-git-root",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verify-commits/trusted-git-root",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-git-root?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "27fede6277616c3cfe500c662636e5449e482b5b",
        "filename": "contrib/verify-commits/trusted-keys",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verify-commits/trusted-keys",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verify-commits/trusted-keys",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-keys?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "7d41f90ad70ef87caa0ce40bee269ff9d61d9c05",
        "filename": "contrib/verify-commits/trusted-sha512-root-commit",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verify-commits/trusted-sha512-root-commit",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verify-commits/trusted-sha512-root-commit",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-sha512-root-commit?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "7e46c6fd47733fc35d3194faf0399f96640ca2af",
        "filename": "contrib/verify-commits/verify-commits.py",
        "status": "added",
        "additions": 165,
        "deletions": 0,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verify-commits/verify-commits.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verify-commits/verify-commits.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.py?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "4209fdb3644e558c029bacc9a02ad9823b120eb6",
        "filename": "contrib/verifybinaries/README.md",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verifybinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verifybinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/README.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "4296998631cff715d429c5b203c41b53f8e722e0",
        "filename": "contrib/verifybinaries/verify.sh",
        "status": "added",
        "additions": 177,
        "deletions": 0,
        "changes": 177,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verifybinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/verifybinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/verify.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "31720e72e7081d61a6905adbfeabdc8d15a517f6",
        "filename": "contrib/windeploy/detached-sig-create.sh",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/windeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/windeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/detached-sig-create.sh?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "4023a5b638f89f9838990db0700ed9ec5a629e9b",
        "filename": "contrib/windeploy/win-codesign.cert",
        "status": "added",
        "additions": 100,
        "deletions": 0,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/windeploy/win-codesign.cert",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/windeploy/win-codesign.cert",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/win-codesign.cert?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "8b8503331d2c23abc9514f204bab1771de39b179",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "added",
        "additions": 90,
        "deletions": 0,
        "changes": 90,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "19c506ce5447d4b9099f741fd33f800d101bcf6d",
        "filename": "depends/.gitignore",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/.gitignore?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "1ad21f6821bba036d92208aae32310ae1a1f62bd",
        "filename": "depends/Makefile",
        "status": "added",
        "additions": 253,
        "deletions": 0,
        "changes": 253,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "5225a6d5c41ef1e1a46820660bcc54aa583ad9e7",
        "filename": "depends/README.md",
        "status": "added",
        "additions": 153,
        "deletions": 0,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "f4103fc1f27eebb9f85a913413d4ff755bab6ea9",
        "filename": "depends/builders/darwin.mk",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/builders/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/builders/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/darwin.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "f097db65d603d596c5ceabeadfe32fa3a296a91d",
        "filename": "depends/builders/default.mk",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/builders/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/builders/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/default.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "b03f42401047adf98bc997a7eece42c2c79a2c2c",
        "filename": "depends/builders/linux.mk",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/builders/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/builders/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/linux.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "7f9ebbe31097dff5e381dceffadbf64502ab3d46",
        "filename": "depends/config.guess",
        "status": "added",
        "additions": 1665,
        "deletions": 0,
        "changes": 1665,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "87a337930370eca23beee0e4c0456ab290db9f9b",
        "filename": "depends/config.site.in",
        "status": "added",
        "additions": 104,
        "deletions": 0,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "a318a46868500fbeea993e693e32701041ffad1b",
        "filename": "depends/config.sub",
        "status": "added",
        "additions": 1793,
        "deletions": 0,
        "changes": 1793,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "0a6f2e644219008dcb4cefe4d7a152e838e9b66d",
        "filename": "depends/description.md",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/description.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/description.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/description.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "58d882eb053ac571cd05547e951feaaca1854c74",
        "filename": "depends/funcs.mk",
        "status": "added",
        "additions": 268,
        "deletions": 0,
        "changes": 268,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/funcs.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/funcs.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/funcs.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "eabd84bbbe1020a67273bb27de30209fbefd8b88",
        "filename": "depends/hosts/android.mk",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/hosts/android.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/hosts/android.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/android.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "6099fd4c716b80f4bcf92be048ea8fa328501401",
        "filename": "depends/hosts/darwin.mk",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/hosts/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/hosts/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/darwin.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "258619a9d059086cb8fb25e4df37617088cc2e32",
        "filename": "depends/hosts/default.mk",
        "status": "added",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/hosts/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/hosts/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/default.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "8ab448ce5fd458be142ece6ba7a001a76d8f9033",
        "filename": "depends/hosts/linux.mk",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/hosts/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/hosts/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/linux.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "be5fec570c84cec02844d0faf63bb11b36e708c3",
        "filename": "depends/hosts/mingw32.mk",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/hosts/mingw32.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/hosts/mingw32.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/mingw32.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "7ed20ea1297dcad84173c4ec085dee714f87f22f",
        "filename": "depends/packages.md",
        "status": "added",
        "additions": 198,
        "deletions": 0,
        "changes": 198,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "5953341d9f774cb3abfbf6a6d8c0aa2b2a4a4536",
        "filename": "depends/packages/bdb.mk",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/bdb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/bdb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/bdb.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "d8bce108b16a5863d600d19270f0f52807d60449",
        "filename": "depends/packages/boost.mk",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "abeb26545f898e4dffdb18f1452d77197f37a35c",
        "filename": "depends/packages/capnp.mk",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/capnp.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/capnp.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/capnp.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "902fe43be267919d8d71c44d9b6dea5cea9928d1",
        "filename": "depends/packages/expat.mk",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/expat.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/expat.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/expat.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "0d5f94f380c569cb7d09d3541c42467ad59a1fb1",
        "filename": "depends/packages/fontconfig.mk",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/fontconfig.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/fontconfig.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/fontconfig.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "a1584608e19f714ca190875aae124edd33a1456a",
        "filename": "depends/packages/freetype.mk",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/freetype.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/freetype.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/freetype.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "4c55c2df04b5cd50f1af5ae63bab275d7c1284ac",
        "filename": "depends/packages/libXau.mk",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/libXau.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/libXau.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXau.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "1cd5a1749ac88c79f8e667aeac40d23105772219",
        "filename": "depends/packages/libevent.mk",
        "status": "added",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "3e5cf5f1603a66c0244667b909cbb0b9f6541376",
        "filename": "depends/packages/libmultiprocess.mk",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/libmultiprocess.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/libmultiprocess.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libmultiprocess.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "2204b381958b8f0be875308764df849b62e9af40",
        "filename": "depends/packages/libxcb.mk",
        "status": "added",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/libxcb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/libxcb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libxcb.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "49a584e462b36b09c5b2bcde7b69b1256daf5a2b",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "added",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "c3054cbd1a16e66d8ff592b27bdc7fc7a12c0f2c",
        "filename": "depends/packages/native_biplist.mk",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/native_biplist.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/native_biplist.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_biplist.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "ed5a6deee2fdbfbd658ddff8d5aa5c129860bf6f",
        "filename": "depends/packages/native_capnp.mk",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/native_capnp.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/native_capnp.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_capnp.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "d56b636695508699d998191f8220e47fe01df6d1",
        "filename": "depends/packages/native_cctools.mk",
        "status": "added",
        "additions": 116,
        "deletions": 0,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "7bdf2d7dfda9a221ff75e842ea887f35ca153f42",
        "filename": "depends/packages/native_cdrkit.mk",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/native_cdrkit.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/native_cdrkit.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cdrkit.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "f99b689ecdc7406233dd36191a592be37aeed931",
        "filename": "depends/packages/native_ds_store.mk",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/native_ds_store.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/native_ds_store.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ds_store.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "035b767188a6fc43f6a65c1ec6c1c7617879dd02",
        "filename": "depends/packages/native_libdmg-hfsplus.mk",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/native_libdmg-hfsplus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/native_libdmg-hfsplus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libdmg-hfsplus.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "c50fdc3f6bae8e33cde4c361f28a4eacffd5e992",
        "filename": "depends/packages/native_libmultiprocess.mk",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/native_libmultiprocess.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/native_libmultiprocess.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libmultiprocess.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "e60b99dccc98ce44512e0026a712bca1371f5855",
        "filename": "depends/packages/native_mac_alias.mk",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/native_mac_alias.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/native_mac_alias.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_mac_alias.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "4627acb521879b5546bc3e26a6be4b2803257007",
        "filename": "depends/packages/packages.mk",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "d1687883bcd5197372367e4a9a5f029594f9f273",
        "filename": "depends/packages/qrencode.mk",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/qrencode.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/qrencode.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qrencode.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "083bc68d66c3bb1c2b881747d25ec1827a576077",
        "filename": "depends/packages/qt.mk",
        "status": "added",
        "additions": 264,
        "deletions": 0,
        "changes": 264,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "5b3a61b239c64b2cbf6c538d0548791c75915490",
        "filename": "depends/packages/sqlite.mk",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/sqlite.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/sqlite.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/sqlite.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "01203a0718af93deff60d84fb337848e79ae661e",
        "filename": "depends/packages/xcb_proto.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/xcb_proto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/xcb_proto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xcb_proto.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "6bd867d02b20f4cf46da0b73baa5fd1fab68f6b9",
        "filename": "depends/packages/xproto.mk",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/xproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/xproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xproto.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "c93aa1a74da831a4c33f1835fe4bdeb24441b845",
        "filename": "depends/packages/zeromq.mk",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/zeromq.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/zeromq.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zeromq.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "acb02020a80b2424fe6080a0b64b8ac54d33df62",
        "filename": "depends/packages/zlib.mk",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/zlib.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/packages/zlib.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zlib.mk?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "58f7ddc7d502cff2b6cad8a81df5e879e8a3360b",
        "filename": "depends/patches/bdb/clang_cxx_11.patch",
        "status": "added",
        "additions": 147,
        "deletions": 0,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/bdb/clang_cxx_11.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/bdb/clang_cxx_11.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/bdb/clang_cxx_11.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "722f7bb5ea4707de46a27c61f1b9e531d7bcf97d",
        "filename": "depends/patches/boost/unused_var_in_process.patch",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/boost/unused_var_in_process.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/boost/unused_var_in_process.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/boost/unused_var_in_process.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "7401b83d840ff982d18a070e2a4ee2446e458d99",
        "filename": "depends/patches/fontconfig/gperf_header_regen.patch",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/fontconfig/gperf_header_regen.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/fontconfig/gperf_header_regen.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/fontconfig/gperf_header_regen.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "9f69081890c33d7acd79ec569cc7122d84d316da",
        "filename": "depends/patches/fontconfig/remove_char_width_usage.patch",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/fontconfig/remove_char_width_usage.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/fontconfig/remove_char_width_usage.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/fontconfig/remove_char_width_usage.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "a98cd90bd58a20072443a11a9c412b447e8e98a1",
        "filename": "depends/patches/libevent/0001-fix-windows-getaddrinfo.patch",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/libevent/0001-fix-windows-getaddrinfo.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/libevent/0001-fix-windows-getaddrinfo.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/libevent/0001-fix-windows-getaddrinfo.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "a1cc9b50d1509379b121ba3f228821cced0485f9",
        "filename": "depends/patches/miniupnpc/dont_use_wingen.patch",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/miniupnpc/dont_use_wingen.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/miniupnpc/dont_use_wingen.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/miniupnpc/dont_use_wingen.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "d6c58c102fb321794eeca68b85afd4207d9bdeca",
        "filename": "depends/patches/native_cctools/ld64_disable_threading.patch",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/native_cctools/ld64_disable_threading.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/native_cctools/ld64_disable_threading.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_cctools/ld64_disable_threading.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "8ab0993dc4de142ab7766a500640be92540fe80f",
        "filename": "depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_cdrkit/cdrkit-deterministic.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "f346c8f2cff8b040cc534c32402ccf92229d8c05",
        "filename": "depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "status": "added",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "a74e9cb09872b9abc82542e67772208413f7284e",
        "filename": "depends/patches/qt/dont_hardcode_pwd.patch",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/dont_hardcode_pwd.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/dont_hardcode_pwd.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/dont_hardcode_pwd.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "f6b2c9fc8015a0eef744bda87ede8e230aa6b3a8",
        "filename": "depends/patches/qt/drop_lrelease_dependency.patch",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/drop_lrelease_dependency.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/drop_lrelease_dependency.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/drop_lrelease_dependency.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "2f6ff00f40c253c95d5bc62e887b032eac22055e",
        "filename": "depends/patches/qt/fix_android_jni_static.patch",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/fix_android_jni_static.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/fix_android_jni_static.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_android_jni_static.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "13bfff9776474028c5165f9e3d5e64bee3d576e5",
        "filename": "depends/patches/qt/fix_android_qmake_conf.patch",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/fix_android_qmake_conf.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/fix_android_qmake_conf.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_android_qmake_conf.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "0d7dd647debca93eb5383ee72f6d4db573dabaac",
        "filename": "depends/patches/qt/fix_configure_mac.patch",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/fix_configure_mac.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/fix_configure_mac.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_configure_mac.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "f868ca25775547188620644ae02881edeaa06a8d",
        "filename": "depends/patches/qt/fix_no_printer.patch",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/fix_no_printer.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/fix_no_printer.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_no_printer.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "d37b6c777646c39bd09b4ee63e8c98047b49bab4",
        "filename": "depends/patches/qt/fix_powerpc_libpng.patch",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/fix_powerpc_libpng.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/fix_powerpc_libpng.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_powerpc_libpng.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "8c722ffb46cb1d55dfc6a341b2f6dac3abe0f7a5",
        "filename": "depends/patches/qt/fix_qt_pkgconfig.patch",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/fix_qt_pkgconfig.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/fix_qt_pkgconfig.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_qt_pkgconfig.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "c1b07fe23afdbd7a2f204811e2aad132bd2d9dff",
        "filename": "depends/patches/qt/fix_rcc_determinism.patch",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/fix_rcc_determinism.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/fix_rcc_determinism.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_rcc_determinism.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "e7f29f01f9cd7f250b86bbd038175aa6a0fb35b0",
        "filename": "depends/patches/qt/fix_riscv64_arch.patch",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/fix_riscv64_arch.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/fix_riscv64_arch.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_riscv64_arch.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "b0f1c98aa60c9d3442d7c596cd0fd39892a68176",
        "filename": "depends/patches/qt/freetype_back_compat.patch",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/freetype_back_compat.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/freetype_back_compat.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/freetype_back_compat.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "4cd96df29ff307b012d5ae4c49cfff71948cca86",
        "filename": "depends/patches/qt/mac-qmake.conf",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/mac-qmake.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/mac-qmake.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mac-qmake.conf?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "fe82c2c73cb09611da2be6ccbe274d4191bc1ad8",
        "filename": "depends/patches/qt/no-xlib.patch",
        "status": "added",
        "additions": 69,
        "deletions": 0,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/no-xlib.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/no-xlib.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/no-xlib.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "165abf3e2e7a6d7cdbe7b960ec15dbcfaf0a9dfd",
        "filename": "depends/patches/qt/xkb-default.patch",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/xkb-default.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/qt/xkb-default.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/xkb-default.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "ddf91e6abfaba15442df4812af77379e7349019c",
        "filename": "depends/patches/zeromq/remove_libstd_link.patch",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/zeromq/remove_libstd_link.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/depends/patches/zeromq/remove_libstd_link.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/zeromq/remove_libstd_link.patch?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "38498103bb1704a3f13979c1359649a786d50aef",
        "filename": "doc/.gitignore",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/.gitignore?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "2f7916821256f93fbc0ac2837c3afeb21828d2e1",
        "filename": "doc/Doxyfile.in",
        "status": "added",
        "additions": 2461,
        "deletions": 0,
        "changes": 2461,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/Doxyfile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/Doxyfile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile.in?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "40d8e330e28cd74e377bd52e16de96cf44f5a76e",
        "filename": "doc/JSON-RPC-interface.md",
        "status": "added",
        "additions": 129,
        "deletions": 0,
        "changes": 129,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/JSON-RPC-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/JSON-RPC-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/JSON-RPC-interface.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "19d8204d83eb7960ae0e91e04ca8404422e564df",
        "filename": "doc/README.md",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "6888383a9861eaef1b5b1eb86d8e13712b2be2b0",
        "filename": "doc/README_doxygen.md",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/README_doxygen.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/README_doxygen.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_doxygen.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "07d61b3bda13acb5ac4775db4d23a97586aed646",
        "filename": "doc/README_windows.txt",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "842a3964df625f6bf16ffb84ec3a2b31fb4fbd6b",
        "filename": "doc/REST-interface.md",
        "status": "added",
        "additions": 116,
        "deletions": 0,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "2dd930d6a4f97debef6dba19040f471f75250b6a",
        "filename": "doc/assets-attribution.md",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "b6cd86eafe6e7df2f81da7e0835239a40c476a24",
        "filename": "doc/benchmarking.md",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/benchmarking.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/benchmarking.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/benchmarking.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "8c20533c9bbaea4bcc18f8610713016454267a78",
        "filename": "doc/bips.md",
        "status": "added",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "f4a8edec75c5cf9a9bf04d010e5476698856d15c",
        "filename": "doc/bitcoin-conf.md",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/bitcoin-conf.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/bitcoin-conf.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bitcoin-conf.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "258be86edee2372033763742c513309761248f1b",
        "filename": "doc/bitcoin_logo_doxygen.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/bitcoin_logo_doxygen.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/bitcoin_logo_doxygen.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bitcoin_logo_doxygen.png?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "f48855a344fde73bb7b1cab23f74ce7c137dc264",
        "filename": "doc/build-freebsd.md",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/build-freebsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/build-freebsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-freebsd.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "47049a780edef5c5e1ef87813eff17eb0060d467",
        "filename": "doc/build-netbsd.md",
        "status": "added",
        "additions": 81,
        "deletions": 0,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/build-netbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/build-netbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-netbsd.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "2b051c078c8748b9e2988457d724655a7d9f7665",
        "filename": "doc/build-openbsd.md",
        "status": "added",
        "additions": 115,
        "deletions": 0,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "2a7d71eea6317116527c7d7845c701f7241cb68f",
        "filename": "doc/build-osx.md",
        "status": "added",
        "additions": 116,
        "deletions": 0,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "ab83ceff3dcf86cbdf5a436d2891cc3642f6191a",
        "filename": "doc/build-unix.md",
        "status": "added",
        "additions": 301,
        "deletions": 0,
        "changes": 301,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "28b6aceb3cc6208857e73aedd54efa472a094867",
        "filename": "doc/build-windows.md",
        "status": "added",
        "additions": 137,
        "deletions": 0,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "d1bf4b3a87da9eb669ec5b17d51104b1a3a0f6b0",
        "filename": "doc/dependencies.md",
        "status": "added",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "181ff77e5080abce1c4f3fb2116afdf8649590e2",
        "filename": "doc/descriptors.md",
        "status": "added",
        "additions": 212,
        "deletions": 0,
        "changes": 212,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/descriptors.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/descriptors.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/descriptors.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "fa188dbcd603b6eef80d3855ee9aa44c5e4a37f3",
        "filename": "doc/developer-notes.md",
        "status": "added",
        "additions": 1309,
        "deletions": 0,
        "changes": 1309,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "55a5c28258c67704fb926e0ad71d448440babdaa",
        "filename": "doc/dnsseed-policy.md",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/dnsseed-policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/dnsseed-policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dnsseed-policy.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "545e8fc92c825af88d32528ee5307ae2eddc538c",
        "filename": "doc/files.md",
        "status": "added",
        "additions": 125,
        "deletions": 0,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "c97b8d4d50812c3d60e4fe38b88fddcb4a0689a4",
        "filename": "doc/fuzzing.md",
        "status": "added",
        "additions": 159,
        "deletions": 0,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/fuzzing.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/fuzzing.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/fuzzing.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "3a48f4a0b397770e44f51477df854f8298ce1b75",
        "filename": "doc/gitian-building.md",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "99aa0a0def3d6b91511d53aee17f507ae1f813de",
        "filename": "doc/init.md",
        "status": "added",
        "additions": 145,
        "deletions": 0,
        "changes": 145,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "edbc0911a16772d4a1b23645795f9f7b4185aecb",
        "filename": "doc/man/Makefile.am",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/man/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/man/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/Makefile.am?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "129651d8e9f2f0795ca484af84518feef4faf3ad",
        "filename": "doc/man/bitcoin-cli.1",
        "status": "added",
        "additions": 115,
        "deletions": 0,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/man/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/man/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-cli.1?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "f68be21e8d9045094871c2025bc8f82526e49471",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "added",
        "additions": 610,
        "deletions": 0,
        "changes": 610,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "b4c769889637e51971118e1e3c3dbcf2c9336283",
        "filename": "doc/man/bitcoin-tx.1",
        "status": "added",
        "additions": 116,
        "deletions": 0,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/man/bitcoin-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/man/bitcoin-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-tx.1?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "aadea09a2b82382fd7f806262a6ef1d9f529da91",
        "filename": "doc/man/bitcoin-wallet.1",
        "status": "added",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/man/bitcoin-wallet.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/man/bitcoin-wallet.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-wallet.1?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "211ba10285d3dffb0580a6b1a438495bac19c566",
        "filename": "doc/man/bitcoind.1",
        "status": "added",
        "additions": 583,
        "deletions": 0,
        "changes": 583,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "471d8561f7a27ff2aa20da9ca750b7a1a646bb72",
        "filename": "doc/multiprocess.md",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/multiprocess.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/multiprocess.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/multiprocess.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "555f0afe3c7b28d0ed88fc0632aa266bbb087497",
        "filename": "doc/productivity.md",
        "status": "added",
        "additions": 217,
        "deletions": 0,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/productivity.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/productivity.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/productivity.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "c411b31d5d967001f21f189f34cfd1200ddb155b",
        "filename": "doc/psbt.md",
        "status": "added",
        "additions": 143,
        "deletions": 0,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/psbt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/psbt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/psbt.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "6e7a578ecc4e19bcce131626c8c1e868e678286e",
        "filename": "doc/reduce-memory.md",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/reduce-memory.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/reduce-memory.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-memory.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "86943b1f727cfff6e8fd3bc343a217ccd48be776",
        "filename": "doc/reduce-traffic.md",
        "status": "added",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/reduce-traffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/reduce-traffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-traffic.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "d3983b16899e29fd971a57cb845f27edefda98b0",
        "filename": "doc/release-notes.md",
        "status": "added",
        "additions": 486,
        "deletions": 0,
        "changes": 486,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "986b8832ec1893a5cc061ea14ac609e7836fbb4f",
        "filename": "doc/release-notes/release-notes-0.10.0.md",
        "status": "added",
        "additions": 762,
        "deletions": 0,
        "changes": 762,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/release-notes/release-notes-0.10.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/release-notes/release-notes-0.10.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.0.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "8f59f1f68c6905f9435b04bd029d3beef2a1f1e8",
        "filename": "doc/release-notes/release-notes-0.10.1.md",
        "status": "added",
        "additions": 143,
        "deletions": 0,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/release-notes/release-notes-0.10.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/release-notes/release-notes-0.10.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.1.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "192ed69d299811b8b662f28905f73479266be820",
        "filename": "doc/release-notes/release-notes-0.10.2.md",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/release-notes/release-notes-0.10.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/release-notes/release-notes-0.10.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.2.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "8a110e562c45376daea69efcb0837dc879ada66a",
        "filename": "doc/release-notes/release-notes-0.10.3.md",
        "status": "added",
        "additions": 165,
        "deletions": 0,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/release-notes/release-notes-0.10.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/release-notes/release-notes-0.10.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.3.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "38a2c1347d0b8afbfe0c0481cd90b9db06854328",
        "filename": "doc/release-notes/release-notes-0.10.4.md",
        "status": "added",
        "additions": 172,
        "deletions": 0,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/release-notes/release-notes-0.10.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/release-notes/release-notes-0.10.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.4.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "28e49fb7ea64838f81a72424217e755a62e865c8",
        "filename": "doc/release-notes/release-notes-0.11.0.md",
        "status": "added",
        "additions": 505,
        "deletions": 0,
        "changes": 505,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/release-notes/release-notes-0.11.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/release-notes/release-notes-0.11.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.0.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "799205691ed0f26322923693c2cbf523f0b6751e",
        "filename": "doc/release-notes/release-notes-0.11.1.md",
        "status": "added",
        "additions": 172,
        "deletions": 0,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/release-notes/release-notes-0.11.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/release-notes/release-notes-0.11.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.1.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "2351b80656542c3eee9b27c1f3fae5d3a46179d3",
        "filename": "doc/release-notes/release-notes-0.11.2.md",
        "status": "added",
        "additions": 217,
        "deletions": 0,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/release-notes/release-notes-0.11.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/release-notes/release-notes-0.11.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.2.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      },
      {
        "sha": "bc0d5ea3b0d91a326cc616e624a36ffd0a36e8b6",
        "filename": "doc/release-notes/release-notes-0.12.0.md",
        "status": "added",
        "additions": 894,
        "deletions": 0,
        "changes": 894,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/release-notes/release-notes-0.12.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fb528464689ebe5416025e571b8bcd3f0da00d1/doc/release-notes/release-notes-0.12.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.0.md?ref=9fb528464689ebe5416025e571b8bcd3f0da00d1"
      }
    ]
  },
  {
    "sha": "3ce2b7848b08545da6dd91c8ef4d790b151101dd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozY2UyYjc4NDhiMDg1NDVkYTZkZDkxYzhlZjRkNzkwYjE1MTEwMWRk",
    "commit": {
      "author": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:23:09Z"
      },
      "committer": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:23:09Z"
      },
      "message": ".gitignore fix",
      "tree": {
        "sha": "854150212099cae2a0728b879ada984ccc8580c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/854150212099cae2a0728b879ada984ccc8580c6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ce2b7848b08545da6dd91c8ef4d790b151101dd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ce2b7848b08545da6dd91c8ef4d790b151101dd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3ce2b7848b08545da6dd91c8ef4d790b151101dd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ce2b7848b08545da6dd91c8ef4d790b151101dd/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fb528464689ebe5416025e571b8bcd3f0da00d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9fb528464689ebe5416025e571b8bcd3f0da00d1"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5ea3b90c531137d5feb363cdf28206cea091b314",
        "filename": "COPYING",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ce2b7848b08545da6dd91c8ef4d790b151101dd/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ce2b7848b08545da6dd91c8ef4d790b151101dd/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=3ce2b7848b08545da6dd91c8ef4d790b151101dd",
        "previous_filename": "COPYING_"
      },
      {
        "sha": "520a47d96078dfa80cec83d03146c9349d6369c1",
        "filename": "INSTALL.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ce2b7848b08545da6dd91c8ef4d790b151101dd/INSTALL.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ce2b7848b08545da6dd91c8ef4d790b151101dd/INSTALL.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL.md?ref=3ce2b7848b08545da6dd91c8ef4d790b151101dd",
        "previous_filename": "INSTALL.md_"
      },
      {
        "sha": "c8af4228f35c76aa18ce0b9eb9a90f4aa1cb1a72",
        "filename": "Makefile.am",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ce2b7848b08545da6dd91c8ef4d790b151101dd/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ce2b7848b08545da6dd91c8ef4d790b151101dd/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=3ce2b7848b08545da6dd91c8ef4d790b151101dd",
        "previous_filename": "Makefile.am_"
      },
      {
        "sha": "7ed96c7cea392323b4b50245087794f5cc7810f7",
        "filename": "SECURITY.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ce2b7848b08545da6dd91c8ef4d790b151101dd/SECURITY.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ce2b7848b08545da6dd91c8ef4d790b151101dd/SECURITY.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/SECURITY.md?ref=3ce2b7848b08545da6dd91c8ef4d790b151101dd",
        "previous_filename": "SECURITY.md_"
      }
    ]
  },
  {
    "sha": "a7b9e04a88d95ded195bf86c2cfa1b91a821c6da",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphN2I5ZTA0YTg4ZDk1ZGVkMTk1YmY4NmMyY2ZhMWI5MWE4MjFjNmRh",
    "commit": {
      "author": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:24:25Z"
      },
      "committer": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:24:25Z"
      },
      "message": ".gitignore fix",
      "tree": {
        "sha": "1ce764c5df2847cdd86c369142073be66f691a59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1ce764c5df2847cdd86c369142073be66f691a59"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7b9e04a88d95ded195bf86c2cfa1b91a821c6da",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7b9e04a88d95ded195bf86c2cfa1b91a821c6da",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a7b9e04a88d95ded195bf86c2cfa1b91a821c6da",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7b9e04a88d95ded195bf86c2cfa1b91a821c6da/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3ce2b7848b08545da6dd91c8ef4d790b151101dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ce2b7848b08545da6dd91c8ef4d790b151101dd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3ce2b7848b08545da6dd91c8ef4d790b151101dd"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 0,
      "deletions": 27
    },
    "files": [
      {
        "sha": "5ea3b90c531137d5feb363cdf28206cea091b314",
        "filename": "COPYING",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ce2b7848b08545da6dd91c8ef4d790b151101dd/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ce2b7848b08545da6dd91c8ef4d790b151101dd/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=3ce2b7848b08545da6dd91c8ef4d790b151101dd",
        "patch": "@@ -1,27 +0,0 @@\n-The MIT License (MIT)\n-\n-<<<<<<< HEAD\n-Copyright (c) 2009-2020 The Bitcoin Core developers\n-Copyright (c) 2009-2020 Bitcoin Developers\n-=======\n-Copyright (c) 2009-2017 The Satoshi Bitcoin Core developers\n-Copyright (c) 2009-2017 Satoshi Bitcoin Developers\n->>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n-\n-Permission is hereby granted, free of charge, to any person obtaining a copy\n-of this software and associated documentation files (the \"Software\"), to deal\n-in the Software without restriction, including without limitation the rights\n-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n-copies of the Software, and to permit persons to whom the Software is\n-furnished to do so, subject to the following conditions:\n-\n-The above copyright notice and this permission notice shall be included in\n-all copies or substantial portions of the Software.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n-THE SOFTWARE."
      }
    ]
  },
  {
    "sha": "6e431bc7cc4cc10b46169f0ba1b4024cb9889e5a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZTQzMWJjN2NjNGNjMTBiNDYxNjlmMGJhMWI0MDI0Y2I5ODg5ZTVh",
    "commit": {
      "author": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:39:33Z"
      },
      "committer": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:39:33Z"
      },
      "message": "latest update Mon 09 Nov 2020 02:39:33 PM UTC",
      "tree": {
        "sha": "7578afd85106ecd37515f038a3446a9e45a8f28c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7578afd85106ecd37515f038a3446a9e45a8f28c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e431bc7cc4cc10b46169f0ba1b4024cb9889e5a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e431bc7cc4cc10b46169f0ba1b4024cb9889e5a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6e431bc7cc4cc10b46169f0ba1b4024cb9889e5a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e431bc7cc4cc10b46169f0ba1b4024cb9889e5a/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a7b9e04a88d95ded195bf86c2cfa1b91a821c6da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7b9e04a88d95ded195bf86c2cfa1b91a821c6da",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a7b9e04a88d95ded195bf86c2cfa1b91a821c6da"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": [
      {
        "sha": "24a80fb35d28a2427628d8dc35ff5ec0ac4fb4b1",
        "filename": "CODEOWNERS___",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e431bc7cc4cc10b46169f0ba1b4024cb9889e5a/CODEOWNERS___",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e431bc7cc4cc10b46169f0ba1b4024cb9889e5a/CODEOWNERS___",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CODEOWNERS___?ref=6e431bc7cc4cc10b46169f0ba1b4024cb9889e5a",
        "previous_filename": "CODEOWNERS"
      },
      {
        "sha": "2e114743822562f45432d1f9f634eec70e49022a",
        "filename": "CONTRIBUTING.md___",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e431bc7cc4cc10b46169f0ba1b4024cb9889e5a/CONTRIBUTING.md___",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e431bc7cc4cc10b46169f0ba1b4024cb9889e5a/CONTRIBUTING.md___",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md___?ref=6e431bc7cc4cc10b46169f0ba1b4024cb9889e5a",
        "previous_filename": "CONTRIBUTING.md"
      }
    ]
  },
  {
    "sha": "e76c535efa44bc5afe70a0962192a348a0d1c51e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNzZjNTM1ZWZhNDRiYzVhZmU3MGEwOTYyMTkyYTM0OGEwZDFjNTFl",
    "commit": {
      "author": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:48:41Z"
      },
      "committer": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:48:41Z"
      },
      "message": "latest update Mon 09 Nov 2020 02:48:41 PM UTC",
      "tree": {
        "sha": "1ce764c5df2847cdd86c369142073be66f691a59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1ce764c5df2847cdd86c369142073be66f691a59"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e76c535efa44bc5afe70a0962192a348a0d1c51e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e76c535efa44bc5afe70a0962192a348a0d1c51e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e76c535efa44bc5afe70a0962192a348a0d1c51e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e76c535efa44bc5afe70a0962192a348a0d1c51e/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e431bc7cc4cc10b46169f0ba1b4024cb9889e5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e431bc7cc4cc10b46169f0ba1b4024cb9889e5a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e431bc7cc4cc10b46169f0ba1b4024cb9889e5a"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": [
      {
        "sha": "24a80fb35d28a2427628d8dc35ff5ec0ac4fb4b1",
        "filename": "CODEOWNERS",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/CODEOWNERS",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/CODEOWNERS",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CODEOWNERS?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "previous_filename": "CODEOWNERS___"
      },
      {
        "sha": "2e114743822562f45432d1f9f634eec70e49022a",
        "filename": "CONTRIBUTING.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "previous_filename": "CONTRIBUTING.md___"
      }
    ]
  },
  {
    "sha": "637d27872095299acb1f5f80cbd5d93e850e2bb8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MzdkMjc4NzIwOTUyOTlhY2IxZjVmODBjYmQ1ZDkzZTg1MGUyYmI4",
    "commit": {
      "author": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:51:44Z"
      },
      "committer": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:51:44Z"
      },
      "message": "latest update Mon 09 Nov 2020 02:51:44 PM UTC",
      "tree": {
        "sha": "316a16bc7af05ccaca2681f7ae65fc8c657933d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/316a16bc7af05ccaca2681f7ae65fc8c657933d9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/637d27872095299acb1f5f80cbd5d93e850e2bb8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/637d27872095299acb1f5f80cbd5d93e850e2bb8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/637d27872095299acb1f5f80cbd5d93e850e2bb8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/637d27872095299acb1f5f80cbd5d93e850e2bb8/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e76c535efa44bc5afe70a0962192a348a0d1c51e"
      }
    ],
    "stats": {
      "total": 564160,
      "additions": 0,
      "deletions": 564160
    },
    "files": [
      {
        "sha": "eace0b712119afb911e9404be36737766a36e5cc",
        "filename": ".appveyor.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 62,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/.appveyor.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/.appveyor.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.appveyor.yml?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,62 +0,0 @@\n-version: '{branch}.{build}'\n-skip_tags: true\n-image: Visual Studio 2019\n-configuration: Release\n-platform: x64\n-clone_depth: 5\n-environment:\n-  PATH: 'C:\\Python37-x64;C:\\Python37-x64\\Scripts;%PATH%'\n-  PYTHONUTF8: 1\n-  QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/v1.6/Qt5.9.8_x64_static_vs2019.zip'\n-  QT_DOWNLOAD_HASH: '9a8c6eb20967873785057fdcd329a657c7f922b0af08c5fde105cc597dd37e21'\n-  QT_LOCAL_PATH: 'C:\\Qt5.9.8_x64_static_vs2019'\n-  VCPKG_INSTALL_PATH: 'C:\\tools\\vcpkg\\installed'\n-  VCPKG_COMMIT_ID: '40230b8e3f6368dcb398d649331be878ca1e9007'\n-install:\n-# Disable zmq test for now since python zmq library on Windows would cause Access violation sometimes.\n-# - cmd: pip install zmq\n-# Powershell block below is to install the c++ dependencies via vcpkg. The pseudo code is:\n-#    a. Checkout the vcpkg source (including port files) for the specific checkout and build the vcpkg binary,\n-#    b. Install the missing packages using the vcpkg manifest.\n-- ps: |\n-      cd c:\\tools\\vcpkg\n-      $env:GIT_REDIRECT_STDERR = '2>&1' # git is writing non-errors to STDERR when doing git pull. Send to STDOUT instead.\n-      git pull origin master > $null\n-      git -c advice.detachedHead=false checkout $env:VCPKG_COMMIT_ID\n-      .\\bootstrap-vcpkg.bat > $null\n-      cd \"$env:APPVEYOR_BUILD_FOLDER\"\n-before_build:\n-# Powershell block below is to download and extract the Qt static libraries. The pseudo code is:\n-#    a. Download the zip file with the prebuilt Qt static libraries.\n-#    b. Check that the downloaded file matches the expected hash.\n-#    c. Extract the zip file to the specific destination path expected by the msbuild projects.\n-- ps: |\n-      Write-Host \"Downloading Qt binaries.\";\n-      Invoke-WebRequest -Uri $env:QT_DOWNLOAD_URL -Out qtdownload.zip;\n-      Write-Host \"Qt binaries successfully downloaded, checking hash against $env:QT_DOWNLOAD_HASH...\";\n-      if((Get-FileHash qtdownload.zip).Hash -eq $env:QT_DOWNLOAD_HASH) {\n-        Expand-Archive qtdownload.zip -DestinationPath $env:QT_LOCAL_PATH;\n-        Write-Host \"Qt binary download matched the expected hash.\";\n-      }\n-      else {\n-        Write-Host \"ERROR: Qt binary download did not match the expected hash.\";\n-        Exit-AppveyorBuild;\n-      }\n-- cmd: python build_msvc\\msvc-autogen.py\n-build_script:\n-- cmd: msbuild /p:TrackFileAccess=false build_msvc\\bitcoin.sln /m /v:q /nologo\n-after_build:\n-#- 7z a bitcoin-%APPVEYOR_BUILD_VERSION%.zip %APPVEYOR_BUILD_FOLDER%\\build_msvc\\%platform%\\%configuration%\\*.exe\n-test_script:\n-- cmd: src\\test_bitcoin.exe -l test_suite\n-- cmd: src\\bench_bitcoin.exe > NUL\n-- ps:  python test\\util\\bitcoin-util-test.py\n-- cmd: python test\\util\\rpcauth-test.py\n-# Fee estimation test failing on appveyor with: WinError 10048] Only one usage of each socket address (protocol/network address/port) is normally permitted.\n-# functional tests disabled for now. See\n-# https://github.com/bitcoin/bitcoin/pull/18626#issuecomment-613396202\n-# https://github.com/bitcoin/bitcoin/issues/18623\n-# - cmd: python test\\functional\\test_runner.py --ci --quiet --combinedlogslen=4000 --failfast --exclude feature_fee_estimation\n-artifacts:\n-#- path: bitcoin-%APPVEYOR_BUILD_VERSION%.zip\n-deploy: off"
      },
      {
        "sha": "916f172a6af7a7828920c7342c5ff00df7140543",
        "filename": ".cirrus.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 121,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/.cirrus.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/.cirrus.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.cirrus.yml?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,121 +0,0 @@\n-### Global defaults\n-\n-timeout_in: 120m  # https://cirrus-ci.org/faq/#instance-timed-out\n-container:\n-  # https://cirrus-ci.org/faq/#are-there-any-limits\n-  # Each project has 16 CPU in total, assign 2 to each container, so that 8 tasks run in parallel\n-  cpu: 2\n-  memory: 8G  # Set to 8GB to avoid OOM. https://cirrus-ci.org/guide/linux/#linux-containers\n-  kvm: true  # Use kvm to avoid spurious CI failures in the default virtualization cluster, see https://github.com/bitcoin/bitcoin/issues/20093\n-env:\n-  PACKAGE_MANAGER_INSTALL : \"apt-get update && apt-get install -y\"\n-  MAKEJOBS: \"-j4\"\n-  DANGER_RUN_CI_ON_HOST: \"1\"  # Containers will be discarded after the run, so there is no risk that the ci scripts modify the system\n-  TEST_RUNNER_PORT_MIN: \"14000\"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache\n-  CCACHE_SIZE: \"200M\"\n-  CCACHE_DIR: \"/tmp/ccache_dir\"\n-\n-### Global task template\n-\n-# https://cirrus-ci.org/guide/tips-and-tricks/#sharing-configuration-between-tasks\n-global_task_template: &GLOBAL_TASK_TEMPLATE\n-  skip: $CIRRUS_REPO_FULL_NAME == \"bitcoin-core/gui\" && $CIRRUS_PR == \"\"  # No need to run on the read-only mirror, unless it is a PR. https://cirrus-ci.org/guide/writing-tasks/#conditional-task-execution\n-  ccache_cache:\n-    folder: \"/tmp/ccache_dir\"\n-  depends_built_cache:\n-    folder: \"/tmp/cirrus-ci-build/depends/built\"\n-  depends_sdk_cache:\n-    folder: \"/tmp/cirrus-ci-build/depends/sdk-sources\"\n-  depends_releases_cache:\n-    folder: \"/tmp/cirrus-ci-build/releases\"\n-  merge_base_script:\n-    - bash -c \"$PACKAGE_MANAGER_INSTALL git\"\n-    - git fetch $CIRRUS_REPO_CLONE_URL $CIRRUS_BASE_BRANCH\n-    - git config --global user.email \"ci@ci.ci\"\n-    - git config --global user.name \"ci\"\n-    - git merge FETCH_HEAD  # Merge base to detect silent merge conflicts\n-  ci_script:\n-    - ./ci/test_run_all.sh\n-\n-#task:\n-#  name: \"Windows\"\n-#  windows_container:\n-#    image: cirrusci/windowsservercore:2019\n-#  env:\n-#    CIRRUS_SHELL: powershell\n-#    PATH: 'C:\\Python37;C:\\Python37\\Scripts;%PATH%'\n-#    PYTHONUTF8: 1\n-#    QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/v1.6/Qt5.9.8_x64_static_vs2019.zip'\n-#    QT_DOWNLOAD_HASH: '9a8c6eb20967873785057fdcd329a657c7f922b0af08c5fde105cc597dd37e21'\n-#    QT_LOCAL_PATH: 'C:\\Qt5.9.8_x64_static_vs2019'\n-#    VCPKG_INSTALL_PATH: 'C:\\tools\\vcpkg\\installed'\n-#    VCPKG_COMMIT_ID: 'ed0df8ecc4ed7e755ea03e18aaf285fd9b4b4a74'\n-#  install_script:\n-#    - choco install python --version=3.7.7 -y\n-\n-task:\n-  name: 'x86_64 Linux  [GOAL: install]  [bionic]  [C++17, previous releases, uses qt5 dev package and some depends packages] [unsigned char]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:bionic\n-  env:\n-    FILE_ENV: \"./ci/test/00_setup_env_native_qt5.sh\"\n-\n-task:\n-  name: 'x86_64 Linux  [GOAL: install]  [focal]  [depends, sanitizers: thread (TSan), no gui]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:focal\n-    cpu: 4  # Double CPU and Memory to avoid timeout\n-    memory: 16G\n-  env:\n-    MAKEJOBS: \"-j8\"\n-    FILE_ENV: \"./ci/test/00_setup_env_native_tsan.sh\"\n-\n-task:\n-  name: 'x86_64 Linux  [GOAL: install]  [focal]  [depends, sanitizers: memory (MSan)]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:focal\n-  env:\n-    FILE_ENV: \"./ci/test/00_setup_env_native_msan.sh\"\n-\n-task:\n-  name: 'x86_64 Linux  [GOAL: install]  [focal]  [no depends, only system libs, sanitizers: address/leak (ASan + LSan) + undefined (UBSan) + integer]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:focal\n-  env:\n-    FILE_ENV: \"./ci/test/00_setup_env_native_asan.sh\"\n-\n-task:\n-  name: 'x86_64 Linux  [GOAL: install]  [focal]  [no depends, only system libs, sanitizers: fuzzer,address,undefined]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:focal\n-  env:\n-    FILE_ENV: \"./ci/test/00_setup_env_native_fuzz.sh\"\n-\n-task:\n-  name: 'x86_64 Linux  [GOAL: install]  [focal]  [no depends, only system libs, fuzzers under valgrind]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:focal\n-  env:\n-    FILE_ENV: \"./ci/test/00_setup_env_native_fuzz_with_valgrind.sh\"\n-\n-task:\n-  name: 'x86_64 Linux [GOAL: install]  [focal]  [multiprocess]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:focal\n-  env:\n-    FILE_ENV: \"./ci/test/00_setup_env_native_multiprocess.sh\"\n-\n-task:\n-  name: 'macOS 10.12  [GOAL: deploy] [no functional tests]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:bionic\n-  env:\n-    FILE_ENV: \"./ci/test/00_setup_env_mac.sh\""
      },
      {
        "sha": "d44ac27eb9370e0b02b241ee28e67d0d71a947e8",
        "filename": ".fuzzbuzz.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/.fuzzbuzz.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/.fuzzbuzz.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.fuzzbuzz.yml?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,16 +0,0 @@\n-base: ubuntu:16.04\n-language: c++\n-engine: libFuzzer\n-environment:\n-  - CXXFLAGS=-fcoverage-mapping -fno-omit-frame-pointer -fprofile-instr-generate -gline-tables-only -O1\n-setup:\n-  - sudo apt-get update\n-  - sudo apt-get install -y autoconf bsdmainutils clang git libboost-all-dev libboost-program-options-dev libc++1 libc++abi1 libc++abi-dev libc++-dev libclang1 libclang-dev libdb5.3++ libevent-dev libllvm-ocaml-dev libomp5 libomp-dev libprotobuf-dev libqt5core5a libqt5dbus5 libqt5gui5 libssl-dev libtool llvm llvm-dev llvm-runtime pkg-config protobuf-compiler qttools5-dev qttools5-dev-tools software-properties-common\n-  - ./autogen.sh\n-  - CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n-  - make\n-  - git clone https://github.com/bitcoin-core/qa-assets\n-auto_targets:\n-  find_targets_command: find src/test/fuzz/ -executable -type f ! -name \"*.cpp\" ! -name \"*.h\"\n-  base_corpus_dir: qa-assets/fuzz_seed_corpus/\n-  memory_limit: none"
      },
      {
        "sha": "c9cf4a7d9cd03ed588ba9882d26bfd1dd6800fe7",
        "filename": ".gitattributes",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/.gitattributes",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/.gitattributes",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitattributes?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1 +0,0 @@\n-src/clientversion.cpp export-subst"
      },
      {
        "sha": "5726b18928847149bfcbccbffda97c712392128c",
        "filename": ".gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 150,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,150 +0,0 @@\n-*.tar.gz\n-\n-*.exe\n-*.pdb\n-src/bitcoin\n-src/bitcoind\n-src/bitcoin-cli\n-src/bitcoin-gui\n-src/bitcoin-node\n-src/bitcoin-tx\n-src/bitcoin-wallet\n-src/test/fuzz/*\n-!src/test/fuzz/*.*\n-src/test/test_bitcoin\n-src/qt/test/test_bitcoin-qt\n-\n-# autoreconf\n-Makefile.in\n-aclocal.m4\n-autom4te.cache/\n-build-aux/config.guess\n-build-aux/config.sub\n-build-aux/depcomp\n-build-aux/install-sh\n-build-aux/ltmain.sh\n-build-aux/m4/libtool.m4\n-build-aux/m4/lt~obsolete.m4\n-build-aux/m4/ltoptions.m4\n-build-aux/m4/ltsugar.m4\n-build-aux/m4/ltversion.m4\n-build-aux/missing\n-build-aux/compile\n-build-aux/test-driver\n-config.cache\n-config.log\n-config.status\n-configure\n-libtool\n-src/config/bitcoin-config.h\n-src/config/bitcoin-config.h.in\n-src/config/stamp-h1\n-src/obj\n-share/setup.nsi\n-share/qt/Info.plist\n-\n-src/univalue/gen\n-\n-src/qt/*.moc\n-src/qt/moc_*.cpp\n-src/qt/forms/ui_*.h\n-\n-src/qt/test/moc*.cpp\n-\n-src/qt/bitcoin-qt.config\n-src/qt/bitcoin-qt.creator\n-src/qt/bitcoin-qt.creator.user\n-src/qt/bitcoin-qt.files\n-src/qt/bitcoin-qt.includes\n-\n-.deps\n-.dirstamp\n-.libs\n-.*.swp\n-*.*~*\n-*.bak\n-*.rej\n-*.orig\n-*.pyc\n-*.o\n-*.o-*\n-*.a\n-*.pb.cc\n-*.pb.h\n-*.dat\n-\n-*.log\n-*.trs\n-*.dmg\n-\n-*.json.h\n-*.raw.h\n-\n-# Only ignore unexpected patches\n-*.patch\n-!depends/patches/**/*.patch\n-\n-#libtool object files\n-*.lo\n-*.la\n-\n-# Compilation and Qt preprocessor part\n-*.qm\n-Makefile\n-!depends/Makefile\n-src/qt/bitcoin-qt\n-Bitcoin-Qt.app\n-background.tiff*\n-\n-# Qt Creator\n-Makefile.am.user\n-\n-# Unit-tests\n-Makefile.test\n-bitcoin-qt_test\n-\n-# Resources cpp\n-qrc_*.cpp\n-\n-# Mac specific\n-.DS_Store\n-build\n-\n-# Previous releases\n-releases\n-\n-#lcov\n-*.gcno\n-*.gcda\n-/*.info\n-test_bitcoin.coverage/\n-total.coverage/\n-fuzz.coverage/\n-coverage_percent.txt\n-/cov_tool_wrapper.sh\n-qa-assets/\n-\n-#build tests\n-linux-coverage-build\n-linux-build\n-win32-build\n-test/config.ini\n-test/cache/*\n-test/.mypy_cache/\n-\n-!src/leveldb*/Makefile\n-\n-/doc/doxygen/\n-\n-libbitcoinconsensus.pc\n-contrib/devtools/split-debug.sh\n-\n-# Output from running db4 installation\n-db4/\n-\n-# clang-check\n-*.plist\n-\n-osx_volname\n-dist/\n-*.background.tiff"
      },
      {
        "sha": "c49282585a030b902316d2b71a73b15b5840aaa2",
        "filename": ".python-version",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/.python-version",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/.python-version",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.python-version?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1 +0,0 @@\n-3.5.6"
      },
      {
        "sha": "69d8c6aee417d6fd300990e3c34ae719f16406a2",
        "filename": ".style.yapf",
        "status": "removed",
        "additions": 0,
        "deletions": 261,
        "changes": 261,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/.style.yapf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/.style.yapf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.style.yapf?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,261 +0,0 @@\n-[style]\n-# Align closing bracket with visual indentation.\n-align_closing_bracket_with_visual_indent=True\n-\n-# Allow dictionary keys to exist on multiple lines. For example:\n-#\n-#   x = {\n-#       ('this is the first element of a tuple',\n-#        'this is the second element of a tuple'):\n-#            value,\n-#   }\n-allow_multiline_dictionary_keys=False\n-\n-# Allow lambdas to be formatted on more than one line.\n-allow_multiline_lambdas=False\n-\n-# Allow splits before the dictionary value.\n-allow_split_before_dict_value=True\n-\n-# Number of blank lines surrounding top-level function and class\n-# definitions.\n-blank_lines_around_top_level_definition=2\n-\n-# Insert a blank line before a class-level docstring.\n-blank_line_before_class_docstring=False\n-\n-# Insert a blank line before a module docstring.\n-blank_line_before_module_docstring=False\n-\n-# Insert a blank line before a 'def' or 'class' immediately nested\n-# within another 'def' or 'class'. For example:\n-#\n-#   class Foo:\n-#                      # <------ this blank line\n-#     def method():\n-#       ...\n-blank_line_before_nested_class_or_def=False\n-\n-# Do not split consecutive brackets. Only relevant when\n-# dedent_closing_brackets is set. For example:\n-#\n-#    call_func_that_takes_a_dict(\n-#        {\n-#            'key1': 'value1',\n-#            'key2': 'value2',\n-#        }\n-#    )\n-#\n-# would reformat to:\n-#\n-#    call_func_that_takes_a_dict({\n-#        'key1': 'value1',\n-#        'key2': 'value2',\n-#    })\n-coalesce_brackets=False\n-\n-# The column limit.\n-column_limit=160\n-\n-# The style for continuation alignment. Possible values are:\n-#\n-# - SPACE: Use spaces for continuation alignment. This is default behavior.\n-# - FIXED: Use fixed number (CONTINUATION_INDENT_WIDTH) of columns\n-#   (ie: CONTINUATION_INDENT_WIDTH/INDENT_WIDTH tabs) for continuation\n-#   alignment.\n-# - LESS: Slightly left if cannot vertically align continuation lines with\n-#   indent characters.\n-# - VALIGN-RIGHT: Vertically align continuation lines with indent\n-#   characters. Slightly right (one more indent character) if cannot\n-#   vertically align continuation lines with indent characters.\n-#\n-# For options FIXED, and VALIGN-RIGHT are only available when USE_TABS is\n-# enabled.\n-continuation_align_style=SPACE\n-\n-# Indent width used for line continuations.\n-continuation_indent_width=4\n-\n-# Put closing brackets on a separate line, dedented, if the bracketed\n-# expression can't fit in a single line. Applies to all kinds of brackets,\n-# including function definitions and calls. For example:\n-#\n-#   config = {\n-#       'key1': 'value1',\n-#       'key2': 'value2',\n-#   }        # <--- this bracket is dedented and on a separate line\n-#\n-#   time_series = self.remote_client.query_entity_counters(\n-#       entity='dev3246.region1',\n-#       key='dns.query_latency_tcp',\n-#       transform=Transformation.AVERAGE(window=timedelta(seconds=60)),\n-#       start_ts=now()-timedelta(days=3),\n-#       end_ts=now(),\n-#   )        # <--- this bracket is dedented and on a separate line\n-dedent_closing_brackets=False\n-\n-# Disable the heuristic which places each list element on a separate line\n-# if the list is comma-terminated.\n-disable_ending_comma_heuristic=False\n-\n-# Place each dictionary entry onto its own line.\n-each_dict_entry_on_separate_line=True\n-\n-# The regex for an i18n comment. The presence of this comment stops\n-# reformatting of that line, because the comments are required to be\n-# next to the string they translate.\n-i18n_comment=\n-\n-# The i18n function call names. The presence of this function stops\n-# reformattting on that line, because the string it has cannot be moved\n-# away from the i18n comment.\n-i18n_function_call=\n-\n-# Indent the dictionary value if it cannot fit on the same line as the\n-# dictionary key. For example:\n-#\n-#   config = {\n-#       'key1':\n-#           'value1',\n-#       'key2': value1 +\n-#               value2,\n-#   }\n-indent_dictionary_value=False\n-\n-# The number of columns to use for indentation.\n-indent_width=4\n-\n-# Join short lines into one line. E.g., single line 'if' statements.\n-join_multiple_lines=True\n-\n-# Do not include spaces around selected binary operators. For example:\n-#\n-#   1 + 2 * 3 - 4 / 5\n-#\n-# will be formatted as follows when configured with \"*,/\":\n-#\n-#   1 + 2*3 - 4/5\n-#\n-no_spaces_around_selected_binary_operators=\n-\n-# Use spaces around default or named assigns.\n-spaces_around_default_or_named_assign=False\n-\n-# Use spaces around the power operator.\n-spaces_around_power_operator=False\n-\n-# The number of spaces required before a trailing comment.\n-spaces_before_comment=2\n-\n-# Insert a space between the ending comma and closing bracket of a list,\n-# etc.\n-space_between_ending_comma_and_closing_bracket=True\n-\n-# Split before arguments\n-split_all_comma_separated_values=False\n-\n-# Split before arguments if the argument list is terminated by a\n-# comma.\n-split_arguments_when_comma_terminated=False\n-\n-# Set to True to prefer splitting before '&', '|' or '^' rather than\n-# after.\n-split_before_bitwise_operator=True\n-\n-# Split before the closing bracket if a list or dict literal doesn't fit on\n-# a single line.\n-split_before_closing_bracket=True\n-\n-# Split before a dictionary or set generator (comp_for). For example, note\n-# the split before the 'for':\n-#\n-#   foo = {\n-#       variable: 'Hello world, have a nice day!'\n-#       for variable in bar if variable != 42\n-#   }\n-split_before_dict_set_generator=True\n-\n-# Split before the '.' if we need to split a longer expression:\n-#\n-#   foo = ('This is a really long string: {}, {}, {}, {}'.format(a, b, c, d))\n-#\n-# would reformat to something like:\n-#\n-#   foo = ('This is a really long string: {}, {}, {}, {}'\n-#          .format(a, b, c, d))\n-split_before_dot=False\n-\n-# Split after the opening paren which surrounds an expression if it doesn't\n-# fit on a single line.\n-split_before_expression_after_opening_paren=False\n-\n-# If an argument / parameter list is going to be split, then split before\n-# the first argument.\n-split_before_first_argument=False\n-\n-# Set to True to prefer splitting before 'and' or 'or' rather than\n-# after.\n-split_before_logical_operator=True\n-\n-# Split named assignments onto individual lines.\n-split_before_named_assigns=True\n-\n-# Set to True to split list comprehensions and generators that have\n-# non-trivial expressions and multiple clauses before each of these\n-# clauses. For example:\n-#\n-#   result = [\n-#       a_long_var + 100 for a_long_var in xrange(1000)\n-#       if a_long_var % 10]\n-#\n-# would reformat to something like:\n-#\n-#   result = [\n-#       a_long_var + 100\n-#       for a_long_var in xrange(1000)\n-#       if a_long_var % 10]\n-split_complex_comprehension=False\n-\n-# The penalty for splitting right after the opening bracket.\n-split_penalty_after_opening_bracket=30\n-\n-# The penalty for splitting the line after a unary operator.\n-split_penalty_after_unary_operator=10000\n-\n-# The penalty for splitting right before an if expression.\n-split_penalty_before_if_expr=0\n-\n-# The penalty of splitting the line around the '&', '|', and '^'\n-# operators.\n-split_penalty_bitwise_operator=300\n-\n-# The penalty for splitting a list comprehension or generator\n-# expression.\n-split_penalty_comprehension=80\n-\n-# The penalty for characters over the column limit.\n-split_penalty_excess_character=7000\n-\n-# The penalty incurred by adding a line split to the unwrapped line. The\n-# more line splits added the higher the penalty.\n-split_penalty_for_added_line_split=30\n-\n-# The penalty of splitting a list of \"import as\" names. For example:\n-#\n-#   from a_very_long_or_indented_module_name_yada_yad import (long_argument_1,\n-#                                                             long_argument_2,\n-#                                                             long_argument_3)\n-#\n-# would reformat to something like:\n-#\n-#   from a_very_long_or_indented_module_name_yada_yad import (\n-#       long_argument_1, long_argument_2, long_argument_3)\n-split_penalty_import_names=0\n-\n-# The penalty of splitting the line around the 'and' and 'or'\n-# operators.\n-split_penalty_logical_operator=300\n-\n-# Use the Tab character for indentation.\n-use_tabs=False\n-"
      },
      {
        "sha": "55b34ae422d2fb828a70a0b518061c06333a725a",
        "filename": ".travis.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 109,
        "changes": 109,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,109 +0,0 @@\n-# Travis caches can be manually removed if necessary. This is one of the very\n-# few manual operations that is possible with Travis, and it can be done by a\n-# Bitcoin Core GitHub member via the Travis web interface [0].\n-#\n-# Travis CI uploads the cache after the script phase of the build [1].\n-# However, the build is terminated without saving the cache if it takes over\n-# 50 minutes [2]. Thus, if we spent too much time in early build stages, fail\n-# with an error and save the cache.\n-#\n-# [0] https://travis-ci.org/bitcoin/bitcoin/caches\n-# [1] https://docs.travis-ci.com/user/caching/#build-phases\n-# [2] https://docs.travis-ci.com/user/customizing-the-build#build-timeouts\n-\n-version: ~> 1.0\n-\n-dist: bionic\n-os: linux\n-language: minimal\n-arch: amd64\n-cache:\n-  directories:\n-    - $TRAVIS_BUILD_DIR/depends/built\n-    - $TRAVIS_BUILD_DIR/depends/sdk-sources\n-    - $TRAVIS_BUILD_DIR/ci/scratch/.ccache\n-    - $TRAVIS_BUILD_DIR/releases/$HOST\n-stages:\n-  - lint\n-  - test\n-env:\n-  global:\n-    - CI_RETRY_EXE=\"travis_retry\"\n-    - CACHE_ERR_MSG=\"Error! Initial build successful, but not enough time remains to run later build stages and tests. See https://docs.travis-ci.com/user/customizing-the-build#build-timeouts . Please manually re-run this job by using the travis restart button. The next run should not time out because the build cache has been saved.\"\n-before_install:\n-  - set -o errexit; source ./ci/test/00_setup_env.sh\n-  - set -o errexit; source ./ci/test/03_before_install.sh\n-install:\n-  - set -o errexit; source ./ci/test/04_install.sh\n-before_script:\n-  # Temporary workaround for https://github.com/bitcoin/bitcoin/issues/16368\n-  - for i in {1..4}; do echo \"$(sleep 500)\" ; done &\n-  - set -o errexit; source ./ci/test/05_before_script.sh &> \"/dev/null\"\n-script:\n-  - export CONTINUE=1\n-  - if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long\n-  - if [ $TRAVIS_REPO_SLUG = \"bitcoin/bitcoin\" ]; then export CONTINUE=1; fi  # continue on repos with extended build time (90 minutes)\n-  - if [ $CONTINUE = \"1\" ]; then set -o errexit; source ./ci/test/06_script_a.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n-  - if [[ $SECONDS -gt 50*60-$EXPECTED_TESTS_DURATION_IN_SECONDS ]]; then export CONTINUE=0; fi\n-  - if [ $TRAVIS_REPO_SLUG = \"bitcoin/bitcoin\" ]; then export CONTINUE=1; fi  # continue on repos with extended build time (90 minutes)\n-  - if [ $CONTINUE = \"1\" ]; then set -o errexit; source ./ci/test/06_script_b.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n-after_script:\n-  - echo $TRAVIS_COMMIT_RANGE\n-jobs:\n-  include:\n-\n-    - stage: lint\n-      name: 'lint'\n-      env:\n-      cache: pip\n-      language: python\n-      python: '3.5' # Oldest supported version according to doc/dependencies.md\n-      install:\n-        - set -o errexit; source ./ci/lint/04_install.sh\n-      before_script:\n-        - set -o errexit; source ./ci/lint/05_before_script.sh\n-      script:\n-        - set -o errexit; source ./ci/lint/06_script.sh\n-\n-    - stage: test\n-      name: 'ARM  [GOAL: install]  [buster]  [unit tests, no functional tests]'\n-      arch: arm64  # Can disable QEMU_USER_CMD and run the tests natively without qemu\n-      env: >-\n-        FILE_ENV=\"./ci/test/00_setup_env_arm.sh\"\n-        QEMU_USER_CMD=\"\"\n-\n-    - stage: test\n-      name: 'Win64  [GOAL: deploy]  [unit tests, no gui, no boost::process, no functional tests]'\n-      env: >-\n-        FILE_ENV=\"./ci/test/00_setup_env_win64.sh\"\n-\n-    - stage: test\n-      name: '32-bit + dash  [GOAL: install]  [CentOS 7]  [gui]'\n-      env: >-\n-        FILE_ENV=\"./ci/test/00_setup_env_i686_centos.sh\"\n-\n-    - stage: test\n-      name: 'x86_64 Linux  [GOAL: install]  [xenial]  [no wallet]'\n-      env: >-\n-        FILE_ENV=\"./ci/test/00_setup_env_native_nowallet.sh\"\n-\n-    - stage: test\n-      name: 'macOS 10.14 native [GOAL: install] [GUI] [no depends]'\n-      os: osx\n-      # Use the most recent version:\n-      # Xcode 11.3.1, macOS 10.14, SDK 10.15\n-      # https://docs.travis-ci.com/user/reference/osx/#macos-version\n-      osx_image: xcode11.3\n-      addons:\n-        homebrew:\n-          packages:\n-          - berkeley-db4\n-          - miniupnpc\n-          - qrencode\n-          - sqlite\n-          - ccache\n-          - zeromq\n-      env: >-\n-        DANGER_RUN_CI_ON_HOST=true\n-        CI_USE_APT_INSTALL=no\n-        FILE_ENV=\"./ci/test/00_setup_env_mac_host.sh\""
      },
      {
        "sha": "86b517a6120ccf7036aef3e1bea936612cc5b3b0",
        "filename": ".tx/config",
        "status": "removed",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,7 +0,0 @@\n-[main]\n-host = https://www.transifex.com\n-\n-[bitcoin.qt-translation-021x]\n-file_filter = src/qt/locale/bitcoin_<lang>.ts\n-source_file = src/qt/locale/bitcoin_en.ts\n-source_lang = en"
      },
      {
        "sha": "24a80fb35d28a2427628d8dc35ff5ec0ac4fb4b1",
        "filename": "CODEOWNERS",
        "status": "removed",
        "additions": 0,
        "deletions": 136,
        "changes": 136,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/CODEOWNERS",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/CODEOWNERS",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CODEOWNERS?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,136 +0,0 @@\n-# ==============================================================================\n-#                          Bitcoin Core CODEOWNERS\n-# ==============================================================================\n-\n-# Configuration of code ownership and review approvals for the bitcoin/bitcoin\n-# repo.\n-\n-# Order is important; the last matching pattern takes the most precedence.\n-# More info on how this file works can be found at:\n-# https://help.github.com/articles/about-codeowners/\n-\n-# This file is called CODEOWNERS because it is a magic file for GitHub to\n-# automatically suggest reviewers. In this project's case, the names below\n-# should be thought of as code reviewers rather than owners. Regular\n-# contributors are free to add their names to specific directories or files\n-# provided that they are willing to provide a review when automatically\n-# assigned.\n-\n-# Absence from this list should not be interpreted as a discouragement to\n-# review a pull request. Peer review is always welcome and is a critical\n-# component of the progress of the codebase. Information on peer review\n-# guidelines can be found in the CONTRIBUTING.md doc.\n-\n-\n-# Maintainers\n-#   @laanwj\n-#   @sipa\n-#   @fanquake\n-#   @jonasschnelli\n-#   @marcofalke\n-#   @meshcollider\n-\n-# Docs\n-/doc/*[a-zA-Z-].md                          @harding\n-/doc/Doxyfile.in                            @fanquake\n-/doc/REST-interface.md                      @jonasschnelli\n-/doc/benchmarking.md                        @ariard\n-/doc/bitcoin-conf.md                        @hebasto\n-/doc/build-freebsd.md                       @fanquake\n-/doc/build-netbsd.md                        @fanquake\n-/doc/build-openbsd.md                       @laanwj\n-/doc/build-osx.md                           @fanquake\n-/doc/build-unix.md                          @laanwj\n-/doc/build-windows.md                       @sipsorcery\n-/doc/dependencies.md                        @fanquake\n-/doc/developer-notes.md                     @laanwj\n-/doc/files.md                               @hebasto\n-/doc/gitian-building.md                     @laanwj\n-/doc/reduce-memory.md                       @fanquake\n-/doc/reduce-traffic.md                      @jonasschnelli\n-/doc/release-process.md                     @laanwj\n-/doc/translation_strings_policy.md          @laanwj\n-\n-# Build aux\n-/build-aux/m4/bitcoin_qt.m4                 @hebasto\n-\n-# MSVC build system\n-/build_msvc/                                @sipsorcery\n-\n-# Settings\n-/src/util/settings.*                        @ryanofsky\n-\n-# Fuzzing\n-/src/test/fuzz/                             @practicalswift\n-/doc/fuzzing.md                             @practicalswift\n-\n-# Test framework\n-/test/functional/mempool_updatefromblock.py @hebasto\n-/test/functional/feature_asmap.py           @jonatack\n-/test/functional/interface_bitcoin_cli.py   @jonatack\n-/test/functional/tool_wallet.py             @jonatack\n-\n-# Translations\n-/src/util/translation.h                     @hebasto\n-\n-# Dev Tools\n-/contrib/devtools/security-check.py         @fanquake\n-/contrib/devtools/test-security-check.py    @fanquake\n-/contrib/devtools/symbol-check.py           @fanquake\n-\n-# Gitian/Guix\n-/contrib/gitian-build.py                    @hebasto\n-/contrib/guix/                              @dongcarl\n-\n-# Compatibility\n-/src/compat/glibc_*                         @fanquake\n-\n-# GUI\n-/src/qt/forms/                              @hebasto\n-\n-# Wallet\n-/src/wallet/                                @achow101\n-\n-# CLI\n-/src/bitcoin-cli.cpp                        @jonatack\n-\n-# Coinstats\n-/src/node/coinstats.*                       @fjahr\n-\n-# Index\n-/src/index/                                 @fjahr\n-\n-# Descriptors\n-*descriptor*                                @achow101 @sipa\n-\n-# Interfaces\n-/src/interfaces/                            @ryanofsky\n-\n-# DB\n-/src/txdb.*                                 @jamesob\n-/src/dbwrapper.*                            @jamesob\n-\n-# Scripts/Linter\n-*.sh                                        @practicalswift\n-/test/lint/                                 @practicalswift\n-/test/lint/lint-shell.sh                    @hebasto\n-\n-# Bech32\n-/src/bech32.*                               @sipa\n-/src/bench/bech32.*                         @sipa\n-\n-# PSBT\n-/src/psbt*                                  @achow101\n-/src/node/psbt*                             @achow101\n-/doc/psbt.md                                @achow101\n-\n-# P2P\n-/src/net_processing.*                       @sipa\n-/src/protocol.*                             @sipa\n-\n-# Consensus\n-/src/coins.*                                @sipa @jamesob\n-/src/script/script.*                        @sipa\n-/src/script/interpreter.*                   @sipa\n-/src/validation.*                           @sipa\n-/src/consensus/                             @sipa"
      },
      {
        "sha": "2e114743822562f45432d1f9f634eec70e49022a",
        "filename": "CONTRIBUTING.md",
        "status": "removed",
        "additions": 0,
        "deletions": 436,
        "changes": 436,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,436 +0,0 @@\n-Contributing to Bitcoin Core\n-============================\n-\n-The Bitcoin Core project operates an open contributor model where anyone is\n-welcome to contribute towards development in the form of peer review, testing\n-and patches. This document explains the practical process and guidelines for\n-contributing.\n-\n-First, in terms of structure, there is no particular concept of \"Bitcoin Core\n-developers\" in the sense of privileged people. Open source often naturally\n-revolves around a meritocracy where contributors earn trust from the developer\n-community over time. Nevertheless, some hierarchy is necessary for practical\n-purposes. As such, there are repository \"maintainers\" who are responsible for\n-merging pull requests, as well as a \"lead maintainer\" who is responsible for the\n-release cycle as well as overall merging, moderation and appointment of\n-maintainers.\n-\n-Getting Started\n----------------\n-\n-New contributors are very welcome and needed.\n-\n-Reviewing and testing is highly valued and the most effective way you can contribute\n-as a new contributor. It also will teach you much more about the code and\n-process than opening pull requests. Please refer to the [peer review](#peer-review)\n-section below.\n-\n-Before you start contributing, familiarize yourself with the Bitcoin Core build\n-system and tests. Refer to the documentation in the repository on how to build\n-Bitcoin Core and how to run the unit tests, functional tests, and fuzz tests.\n-\n-There are many open issues of varying difficulty waiting to be fixed.\n-If you're looking for somewhere to start contributing, check out the\n-[good first issue](https://github.com/bitcoin/bitcoin/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22)\n-list or changes that are\n-[up for grabs](https://github.com/bitcoin/bitcoin/issues?utf8=%E2%9C%93&q=label%3A%22Up+for+grabs%22).\n-Some of them might no longer be applicable. So if you are interested, but\n-unsure, you might want to leave a comment on the issue first.\n-\n-You may also participate in the weekly\n-[Bitcoin Core PR Review Club](https://bitcoincore.reviews/) meeting.\n-\n-### Good First Issue Label\n-\n-The purpose of the `good first issue` label is to highlight which issues are\n-suitable for a new contributor without a deep understanding of the codebase.\n-\n-However, good first issues can be solved by anyone. If they remain unsolved\n-for a longer time, a frequent contributor might address them.\n-\n-You do not need to request permission to start working on an issue. However,\n-you are encouraged to leave a comment if you are planning to work on it. This\n-will help other contributors monitor which issues are actively being addressed\n-and is also an effective way to request assistance if and when you need it.\n-\n-Communication Channels\n-----------------------\n-\n-Most communication about Bitcoin Core development happens on IRC, in the\n-`#bitcoin-core-dev` channel on Freenode. The easiest way to participate on IRC is\n-with the web client, [webchat.freenode.net](https://webchat.freenode.net/). Chat\n-history logs can be found\n-on [http://www.erisian.com.au/bitcoin-core-dev/](http://www.erisian.com.au/bitcoin-core-dev/)\n-and [http://gnusha.org/bitcoin-core-dev/](http://gnusha.org/bitcoin-core-dev/).\n-\n-Discussion about codebase improvements happens in GitHub issues and pull\n-requests.\n-\n-The developer\n-[mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n-should be used to discuss complicated or controversial consensus or P2P protocol changes before working on\n-a patch set.\n-\n-\n-Contributor Workflow\n---------------------\n-\n-The codebase is maintained using the \"contributor workflow\" where everyone\n-without exception contributes patch proposals using \"pull requests\" (PRs). This\n-facilitates social contribution, easy testing and peer review.\n-\n-To contribute a patch, the workflow is as follows:\n-\n-  1. Fork repository ([only for the first time](https://help.github.com/en/articles/fork-a-repo))\n-  1. Create topic branch\n-  1. Commit patches\n-\n-For GUI-related issues or pull requests, the https://github.com/bitcoin-core/gui repository should be used.\n-For all other issues and pull requests, the https://github.com/bitcoin/bitcoin node repository should be used.\n-\n-The master branch for all monotree repositories is identical.\n-\n-As a rule of thumb, everything that only modifies `src/qt` is a GUI-only pull\n-request. However:\n-\n-* For global refactoring or other transversal changes the node repository\n-  should be used.\n-* For GUI-related build system changes, the node repository should be used\n-  because the change needs review by the build systems reviewers.\n-* Changes in `src/interfaces` need to go to the node repository because they\n-  might affect other components like the wallet.\n-\n-For large GUI changes that include build system and interface changes, it is\n-recommended to first open a pull request against the GUI repository. When there\n-is agreement to proceed with the changes, a pull request with the build system\n-and interfaces changes can be submitted to the node repository.\n-\n-The project coding conventions in the [developer notes](doc/developer-notes.md)\n-must be followed.\n-\n-### Committing Patches\n-\n-In general, [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention)\n-and diffs should be easy to read. For this reason, do not mix any formatting\n-fixes or code moves with actual code changes.\n-\n-Make sure each individual commit is hygienic: that it builds successfully on its\n-own without warnings, errors, regressions, or test failures.\n-\n-Commit messages should be verbose by default consisting of a short subject line\n-(50 chars max), a blank line and detailed explanatory text as separate\n-paragraph(s), unless the title alone is self-explanatory (like \"Corrected typo\n-in init.cpp\") in which case a single title line is sufficient. Commit messages should be\n-helpful to people reading your code in the future, so explain the reasoning for\n-your decisions. Further explanation [here](https://chris.beams.io/posts/git-commit/).\n-\n-If a particular commit references another issue, please add the reference. For\n-example: `refs #1234` or `fixes #4321`. Using the `fixes` or `closes` keywords\n-will cause the corresponding issue to be closed when the pull request is merged.\n-\n-Commit messages should never contain any `@` mentions (usernames prefixed with \"@\").\n-\n-Please refer to the [Git manual](https://git-scm.com/doc) for more information\n-about Git.\n-\n-  - Push changes to your fork\n-  - Create pull request\n-\n-### Creating the Pull Request\n-\n-The title of the pull request should be prefixed by the component or area that\n-the pull request affects. Valid areas as:\n-\n-  - `consensus` for changes to consensus critical code\n-  - `doc` for changes to the documentation\n-  - `qt` or `gui` for changes to bitcoin-qt\n-  - `log` for changes to log messages\n-  - `mining` for changes to the mining code\n-  - `net` or `p2p` for changes to the peer-to-peer network code\n-  - `refactor` for structural changes that do not change behavior\n-  - `rpc`, `rest` or `zmq` for changes to the RPC, REST or ZMQ APIs\n-  - `script` for changes to the scripts and tools\n-  - `test`, `qa` or `ci` for changes to the unit tests, QA tests or CI code\n-  - `util` or `lib` for changes to the utils or libraries\n-  - `wallet` for changes to the wallet code\n-  - `build` for changes to the GNU Autotools or reproducible builds\n-\n-Examples:\n-\n-    consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n-    net: Automatically create onion service, listen on Tor\n-    qt: Add feed bump button\n-    log: Fix typo in log message\n-\n-The body of the pull request should contain sufficient description of *what* the\n-patch does, and even more importantly, *why*, with justification and reasoning.\n-You should include references to any discussions (for example, other issues or\n-mailing list discussions).\n-\n-The description for a new pull request should not contain any `@` mentions. The\n-PR description will be included in the commit message when the PR is merged and\n-any users mentioned in the description will be annoyingly notified each time a\n-fork of Bitcoin Core copies the merge. Instead, make any username mentions in a\n-subsequent comment to the PR.\n-\n-### Translation changes\n-\n-Note that translations should not be submitted as pull requests. Please see\n-[Translation Process](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md)\n-for more information on helping with translations.\n-\n-### Work in Progress Changes and Requests for Comments\n-\n-If a pull request is not to be considered for merging (yet), please\n-prefix the title with [WIP] or use [Tasks Lists](https://help.github.com/articles/basic-writing-and-formatting-syntax/#task-lists)\n-in the body of the pull request to indicate tasks are pending.\n-\n-### Address Feedback\n-\n-At this stage, one should expect comments and review from other contributors. You\n-can add more commits to your pull request by committing them locally and pushing\n-to your fork until you have satisfied all feedback.\n-\n-Note: Code review is a burdensome but important part of the development process, and as such, certain types of pull requests are rejected. In general, if the **improvements** do not warrant the **review effort** required, the PR has a high chance of being rejected. It is up to the PR author to convince the reviewers that the changes warrant the review effort, and if reviewers are \"Concept NACK'ing\" the PR, the author may need to present arguments and/or do research backing their suggested changes.\n-\n-### Squashing Commits\n-\n-If your pull request contains fixup commits (commits that change the same line of code repeatedly) or too fine-grained\n-commits, you may be asked to [squash](https://git-scm.com/docs/git-rebase#_interactive_mode) your commits\n-before it will be merged. The basic squashing workflow is shown below.\n-\n-    git checkout your_branch_name\n-    git rebase -i HEAD~n\n-    # n is normally the number of commits in the pull request.\n-    # Set commits (except the one in the first line) from 'pick' to 'squash', save and quit.\n-    # On the next screen, edit/refine commit messages.\n-    # Save and quit.\n-    git push -f # (force push to GitHub)\n-\n-Please update the resulting commit message, if needed. It should read as a\n-coherent message. In most cases, this means not just listing the interim\n-commits.\n-\n-If you have problems with squashing or other git workflows, you can enable\n-\"Allow edits from maintainers\" in the right-hand sidebar of the GitHub web\n-interface and ask for help in the pull request.\n-\n-Please refrain from creating several pull requests for the same change.\n-Use the pull request that is already open (or was created earlier) to amend\n-changes. This preserves the discussion and review that happened earlier for\n-the respective change set.\n-\n-The length of time required for peer review is unpredictable and will vary from\n-pull request to pull request.\n-\n-### Rebasing Changes\n-\n-When a pull request conflicts with the target branch, you may be asked to rebase it on top of the current target branch.\n-The `git rebase` command will take care of rebuilding your commits on top of the new base.\n-\n-This project aims to have a clean git history, where code changes are only made in non-merge commits. This simplifies\n-auditability because merge commits can be assumed to not contain arbitrary code changes. Merge commits should be signed,\n-and the resulting git tree hash must be deterministic and reproducible. The script in\n-[/contrib/verify-commits](/contrib/verify-commits) checks that.\n-\n-After a rebase, reviewers are encouraged to sign off on the force push. This should be relatively straightforward with\n-the `git range-diff` tool explained in the [productivity\n-notes](/doc/productivity.md#diff-the-diffs-with-git-range-diff). To avoid needless review churn, maintainers will\n-generally merge pull requests that received the most review attention first.\n-\n-Pull Request Philosophy\n------------------------\n-\n-Patchsets should always be focused. For example, a pull request could add a\n-feature, fix a bug, or refactor code; but not a mixture. Please also avoid super\n-pull requests which attempt to do too much, are overly large, or overly complex\n-as this makes review difficult.\n-\n-\n-### Features\n-\n-When adding a new feature, thought must be given to the long term technical debt\n-and maintenance that feature may require after inclusion. Before proposing a new\n-feature that will require maintenance, please consider if you are willing to\n-maintain it (including bug fixing). If features get orphaned with no maintainer\n-in the future, they may be removed by the Repository Maintainer.\n-\n-\n-### Refactoring\n-\n-Refactoring is a necessary part of any software project's evolution. The\n-following guidelines cover refactoring pull requests for the project.\n-\n-There are three categories of refactoring: code-only moves, code style fixes, and\n-code refactoring. In general, refactoring pull requests should not mix these\n-three kinds of activities in order to make refactoring pull requests easy to\n-review and uncontroversial. In all cases, refactoring PRs must not change the\n-behaviour of code within the pull request (bugs must be preserved as is).\n-\n-Project maintainers aim for a quick turnaround on refactoring pull requests, so\n-where possible keep them short, uncomplex and easy to verify.\n-\n-Pull requests that refactor the code should not be made by new contributors. It\n-requires a certain level of experience to know where the code belongs to and to\n-understand the full ramification (including rebase effort of open pull requests).\n-\n-Trivial pull requests or pull requests that refactor the code with no clear\n-benefits may be immediately closed by the maintainers to reduce unnecessary\n-workload on reviewing.\n-\n-\n-\"Decision Making\" Process\n--------------------------\n-\n-The following applies to code changes to the Bitcoin Core project (and related\n-projects such as libsecp256k1), and is not to be confused with overall Bitcoin\n-Network Protocol consensus changes.\n-\n-Whether a pull request is merged into Bitcoin Core rests with the project merge\n-maintainers and ultimately the project lead.\n-\n-Maintainers will take into consideration if a patch is in line with the general\n-principles of the project; meets the minimum standards for inclusion; and will\n-judge the general consensus of contributors.\n-\n-In general, all pull requests must:\n-\n-  - Have a clear use case, fix a demonstrable bug or serve the greater good of\n-    the project (for example refactoring for modularisation);\n-  - Be well peer-reviewed;\n-  - Have unit tests, functional tests, and fuzz tests, where appropriate;\n-  - Follow code style guidelines ([C++](doc/developer-notes.md), [functional tests](test/functional/README.md));\n-  - Not break the existing test suite;\n-  - Where bugs are fixed, where possible, there should be unit tests\n-    demonstrating the bug and also proving the fix. This helps prevent regression.\n-  - Change relevant comments and documentation when behaviour of code changes.\n-\n-Patches that change Bitcoin consensus rules are considerably more involved than\n-normal because they affect the entire ecosystem and so must be preceded by\n-extensive mailing list discussions and have a numbered BIP. While each case will\n-be different, one should be prepared to expend more time and effort than for\n-other kinds of patches because of increased peer review and consensus building\n-requirements.\n-\n-\n-### Peer Review\n-\n-Anyone may participate in peer review which is expressed by comments in the pull\n-request. Typically reviewers will review the code for obvious errors, as well as\n-test out the patch set and opine on the technical merits of the patch. Project\n-maintainers take into account the peer review when determining if there is\n-consensus to merge a pull request (remember that discussions may have been\n-spread out over GitHub, mailing list and IRC discussions).\n-\n-#### Conceptual Review\n-\n-A review can be a conceptual review, where the reviewer leaves a comment\n- * `Concept (N)ACK`, meaning \"I do (not) agree with the general goal of this pull\n-   request\",\n- * `Approach (N)ACK`, meaning `Concept ACK`, but \"I do (not) agree with the\n-   approach of this change\".\n-\n-A `NACK` needs to include a rationale why the change is not worthwhile.\n-NACKs without accompanying reasoning may be disregarded.\n-\n-#### Code Review\n-\n-After conceptual agreement on the change, code review can be provided. A review\n-begins with `ACK BRANCH_COMMIT`, where `BRANCH_COMMIT` is the top of the PR\n-branch, followed by a description of how the reviewer did the review. The\n-following language is used within pull request comments:\n-\n-  - \"I have tested the code\", involving change-specific manual testing in\n-    addition to running the unit, functional, or fuzz tests, and in case it is\n-    not obvious how the manual testing was done, it should be described;\n-  - \"I have not tested the code, but I have reviewed it and it looks\n-    OK, I agree it can be merged\";\n-  - A \"nit\" refers to a trivial, often non-blocking issue.\n-\n-Project maintainers reserve the right to weigh the opinions of peer reviewers\n-using common sense judgement and may also weigh based on merit. Reviewers that\n-have demonstrated a deeper commitment and understanding of the project over time\n-or who have clear domain expertise may naturally have more weight, as one would\n-expect in all walks of life.\n-\n-Where a patch set affects consensus-critical code, the bar will be much\n-higher in terms of discussion and peer review requirements, keeping in mind that\n-mistakes could be very costly to the wider community. This includes refactoring\n-of consensus-critical code.\n-\n-Where a patch set proposes to change the Bitcoin consensus, it must have been\n-discussed extensively on the mailing list and IRC, be accompanied by a widely\n-discussed BIP and have a generally widely perceived technical consensus of being\n-a worthwhile change based on the judgement of the maintainers.\n-\n-### Finding Reviewers\n-\n-As most reviewers are themselves developers with their own projects, the review\n-process can be quite lengthy, and some amount of patience is required. If you find\n-that you've been waiting for a pull request to be given attention for several\n-months, there may be a number of reasons for this, some of which you can do something\n-about:\n-\n-  - It may be because of a feature freeze due to an upcoming release. During this time,\n-    only bug fixes are taken into consideration. If your pull request is a new feature,\n-    it will not be prioritized until after the release. Wait for the release.\n-  - It may be because the changes you are suggesting do not appeal to people. Rather than\n-    nits and critique, which require effort and means they care enough to spend time on your\n-    contribution, thundering silence is a good sign of widespread (mild) dislike of a given change\n-    (because people don't assume *others* won't actually like the proposal). Don't take\n-    that personally, though! Instead, take another critical look at what you are suggesting\n-    and see if it: changes too much, is too broad, doesn't adhere to the\n-    [developer notes](doc/developer-notes.md), is dangerous or insecure, is messily written, etc.\n-    Identify and address any of the issues you find. Then ask e.g. on IRC if someone could give\n-    their opinion on the concept itself.\n-  - It may be because your code is too complex for all but a few people, and those people\n-    may not have realized your pull request even exists. A great way to find people who\n-    are qualified and care about the code you are touching is the\n-    [Git Blame feature](https://help.github.com/articles/tracing-changes-in-a-file/). Simply\n-    look up who last modified the code you are changing and see if you can find\n-    them and give them a nudge. Don't be incessant about the nudging, though.\n-  - Finally, if all else fails, ask on IRC or elsewhere for someone to give your pull request\n-    a look. If you think you've been waiting for an unreasonably long time (say,\n-    more than a month) for no particular reason (a few lines changed, etc.),\n-    this is totally fine. Try to return the favor when someone else is asking\n-    for feedback on their code, and the universe balances out.\n-  - Remember that the best thing you can do while waiting is give review to others!\n-\n-\n-Backporting\n------------\n-\n-Security and bug fixes can be backported from `master` to release\n-branches.\n-If the backport is non-trivial, it may be appropriate to open an\n-additional PR to backport the change, but only after the original PR\n-has been merged.\n-Otherwise, backports will be done in batches and\n-the maintainers will use the proper `Needs backport (...)` labels\n-when needed (the original author does not need to worry about it).\n-\n-A backport should contain the following metadata in the commit body:\n-\n-```\n-Github-Pull: #<PR number>\n-Rebased-From: <commit hash of the original commit>\n-```\n-\n-Have a look at [an example backport PR](\n-https://github.com/bitcoin/bitcoin/pull/16189).\n-\n-Also see the [backport.py script](\n-https://github.com/bitcoin-core/bitcoin-maintainer-tools#backport).\n-\n-Release Policy\n---------------\n-\n-The project leader is the release manager for each Bitcoin Core release.\n-\n-Copyright\n----------\n-\n-By contributing to this repository, you agree to license your work under the\n-MIT license unless specified otherwise in `contrib/debian/copyright` or at\n-the top of the file itself. Any work contributed where you are not the original\n-author must contain its license header with the original author(s) and source."
      },
      {
        "sha": "520a47d96078dfa80cec83d03146c9349d6369c1",
        "filename": "INSTALL.md",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/INSTALL.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/INSTALL.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,5 +0,0 @@\n-Building Bitcoin\n-================\n-\n-See doc/build-*.md for instructions on building the various\n-elements of the Bitcoin Core reference implementation of Bitcoin."
      },
      {
        "sha": "c8af4228f35c76aa18ce0b9eb9a90f4aa1cb1a72",
        "filename": "Makefile.am",
        "status": "removed",
        "additions": 0,
        "deletions": 362,
        "changes": 362,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,362 +0,0 @@\n-# Copyright (c) 2013-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# Pattern rule to print variables, e.g. make print-top_srcdir\n-print-%:\n-\t@echo $* = $($*)\n-\n-ACLOCAL_AMFLAGS = -I build-aux/m4\n-SUBDIRS = src\n-if ENABLE_MAN\n-SUBDIRS += doc/man\n-endif\n-.PHONY: deploy FORCE\n-\n-export PYTHONPATH\n-\n-if BUILD_BITCOIN_LIBS\n-pkgconfigdir = $(libdir)/pkgconfig\n-pkgconfig_DATA = libbitcoinconsensus.pc\n-endif\n-\n-BITCOIND_BIN=$(top_builddir)/src/$(BITCOIN_DAEMON_NAME)$(EXEEXT)\n-BITCOIN_QT_BIN=$(top_builddir)/src/qt/$(BITCOIN_GUI_NAME)$(EXEEXT)\n-BITCOIN_CLI_BIN=$(top_builddir)/src/$(BITCOIN_CLI_NAME)$(EXEEXT)\n-BITCOIN_TX_BIN=$(top_builddir)/src/$(BITCOIN_TX_NAME)$(EXEEXT)\n-BITCOIN_WALLET_BIN=$(top_builddir)/src/$(BITCOIN_WALLET_TOOL_NAME)$(EXEEXT)\n-BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win64-setup$(EXEEXT)\n-\n-empty :=\n-space := $(empty) $(empty)\n-\n-OSX_APP=Bitcoin-Qt.app\n-OSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))\n-OSX_DMG = $(OSX_VOLNAME).dmg\n-OSX_BACKGROUND_SVG=background.svg\n-OSX_BACKGROUND_IMAGE=background.tiff\n-OSX_BACKGROUND_IMAGE_DPIS=36 72\n-OSX_DSSTORE_GEN=$(top_srcdir)/contrib/macdeploy/custom_dsstore.py\n-OSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus\n-OSX_FANCY_PLIST=$(top_srcdir)/contrib/macdeploy/fancy.plist\n-OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n-OSX_PLIST=$(top_builddir)/share/qt/Info.plist #not installed\n-OSX_QT_TRANSLATIONS = ar,bg,ca,cs,da,de,es,fa,fi,fr,gd,gl,he,hu,it,ja,ko,lt,lv,pl,pt,ru,sk,sl,sv,uk,zh_CN,zh_TW\n-\n-DIST_CONTRIB = \\\n-\t       $(top_srcdir)/contrib/linearize/linearize-data.py \\\n-\t       $(top_srcdir)/contrib/linearize/linearize-hashes.py\n-\n-DIST_SHARE = \\\n-  $(top_srcdir)/share/genbuild.sh \\\n-  $(top_srcdir)/share/rpcauth\n-\n-BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n-           $(top_srcdir)/contrib/devtools/security-check.py\n-\n-WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n-  $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n-  $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n-  $(top_srcdir)/doc/README_windows.txt\n-\n-OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n-  $(top_srcdir)/contrib/macdeploy/$(OSX_BACKGROUND_SVG) \\\n-  $(OSX_DSSTORE_GEN) \\\n-  $(top_srcdir)/contrib/macdeploy/detached-sig-apply.sh \\\n-  $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n-\n-COVERAGE_INFO = $(COV_TOOL_WRAPPER) baseline.info \\\n-  test_bitcoin_filtered.info total_coverage.info \\\n-  baseline_filtered.info functional_test.info functional_test_filtered.info \\\n-  test_bitcoin_coverage.info test_bitcoin.info fuzz.info fuzz_filtered.info fuzz_coverage.info\n-\n-dist-hook:\n-\t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n-\n-$(BITCOIN_WIN_INSTALLER): all-recursive\n-\t$(MKDIR_P) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_TX_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_WALLET_BIN) $(top_builddir)/release\n-\t@test -f $(MAKENSIS) && echo 'OutFile \"$@\"' | cat $(top_builddir)/share/setup.nsi - | $(MAKENSIS) -V2 - || \\\n-\t  echo error: could not build $@\n-\t@echo built $@\n-\n-$(OSX_APP)/Contents/PkgInfo:\n-\t$(MKDIR_P) $(@D)\n-\t@echo \"APPL????\" > $@\n-\n-$(OSX_APP)/Contents/Resources/empty.lproj:\n-\t$(MKDIR_P) $(@D)\n-\t@touch $@\n-\n-$(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n-\t$(MKDIR_P) $(@D)\n-\t$(INSTALL_DATA) $< $@\n-\n-$(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n-\t$(MKDIR_P) $(@D)\n-\t$(INSTALL_DATA) $< $@\n-\n-$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: all-recursive\n-\t$(MKDIR_P) $(@D)\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $(BITCOIN_QT_BIN) $@\n-\n-$(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n-\t$(MKDIR_P) $(@D)\n-\techo '{\tCFBundleDisplayName = \"$(PACKAGE_NAME)\"; CFBundleName = \"$(PACKAGE_NAME)\"; }' > $@\n-\n-OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n-  $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n-  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n-\n-osx_volname:\n-\techo $(OSX_VOLNAME) >$@\n-\n-if BUILD_DARWIN\n-$(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING) $(OSX_BACKGROUND_IMAGE)\n-\t$(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2 -volname $(OSX_VOLNAME)\n-\n-$(OSX_BACKGROUND_IMAGE).png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n-\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 36 -p 36 -o $@\n-$(OSX_BACKGROUND_IMAGE)@2x.png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n-\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 72 -p 72 -o $@\n-$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE).png $(OSX_BACKGROUND_IMAGE)@2x.png\n-\ttiffutil -cathidpicheck $^ -out $@\n-\n-deploydir: $(OSX_DMG)\n-else\n-APP_DIST_DIR=$(top_builddir)/dist\n-APP_DIST_EXTRAS=$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE) $(APP_DIST_DIR)/.DS_Store $(APP_DIST_DIR)/Applications\n-\n-$(APP_DIST_DIR)/Applications:\n-\t@rm -f $@\n-\t@cd $(@D); $(LN_S) /Applications $(@F)\n-\n-$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n-\n-$(OSX_DMG): $(APP_DIST_EXTRAS)\n-\t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n-\n-dpi%.$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n-\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d $* -p $* | $(IMAGEMAGICK_CONVERT) - $@\n-OSX_BACKGROUND_IMAGE_DPIFILES := $(foreach dpi,$(OSX_BACKGROUND_IMAGE_DPIS),dpi$(dpi).$(OSX_BACKGROUND_IMAGE))\n-$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIFILES)\n-\t$(MKDIR_P) $(@D)\n-\t$(TIFFCP) -c none $(OSX_BACKGROUND_IMAGE_DPIFILES) $@\n-\n-$(APP_DIST_DIR)/.DS_Store: $(OSX_DSSTORE_GEN)\n-\t$(PYTHON) $< \"$@\" \"$(OSX_VOLNAME)\"\n-\n-$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n-\tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n-\n-deploydir: $(APP_DIST_EXTRAS)\n-endif\n-\n-if TARGET_DARWIN\n-appbundle: $(OSX_APP_BUILT)\n-deploy: $(OSX_DMG)\n-endif\n-if TARGET_WINDOWS\n-deploy: $(BITCOIN_WIN_INSTALLER)\n-endif\n-\n-$(BITCOIN_QT_BIN): FORCE\n-\t$(MAKE) -C src qt/$(@F)\n-\n-$(BITCOIND_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-$(BITCOIN_CLI_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-$(BITCOIN_TX_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-$(BITCOIN_WALLET_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-if USE_LCOV\n-LCOV_FILTER_PATTERN = \\\n-\t-p \"/usr/local/\" \\\n-\t-p \"/usr/include/\" \\\n-\t-p \"/usr/lib/\" \\\n-\t-p \"/usr/lib64/\" \\\n-\t-p \"src/leveldb/\" \\\n-\t-p \"src/crc32c/\" \\\n-\t-p \"src/bench/\" \\\n-\t-p \"src/univalue\" \\\n-\t-p \"src/crypto/ctaes\" \\\n-\t-p \"src/secp256k1\" \\\n-\t-p \"depends\"\n-\n-DIR_FUZZ_SEED_CORPUS ?= qa-assets/fuzz_seed_corpus\n-\n-$(COV_TOOL_WRAPPER):\n-\t@echo 'exec $(COV_TOOL) \"$$@\"' > $(COV_TOOL_WRAPPER)\n-\t@chmod +x $(COV_TOOL_WRAPPER)\n-\n-baseline.info: $(COV_TOOL_WRAPPER)\n-\t$(LCOV) -c -i -d $(abs_builddir)/src -o $@\n-\n-baseline_filtered.info: baseline.info\n-\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n-\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n-\n-fuzz.info: baseline_filtered.info\n-\t@TIMEOUT=15 test/fuzz/test_runner.py $(DIR_FUZZ_SEED_CORPUS) -l DEBUG\n-\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src --t fuzz-tests -o $@\n-\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n-\n-fuzz_filtered.info: fuzz.info\n-\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n-\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n-\n-test_bitcoin.info: baseline_filtered.info\n-\t$(MAKE) -C src/ check\n-\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src -t test_bitcoin -o $@\n-\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n-\n-test_bitcoin_filtered.info: test_bitcoin.info\n-\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n-\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n-\n-functional_test.info: test_bitcoin_filtered.info\n-\t@TIMEOUT=15 test/functional/test_runner.py $(EXTENDED_FUNCTIONAL_TESTS)\n-\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src --t functional-tests -o $@\n-\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n-\n-functional_test_filtered.info: functional_test.info\n-\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n-\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n-\n-fuzz_coverage.info: fuzz_filtered.info\n-\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a fuzz_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n-\n-test_bitcoin_coverage.info: baseline_filtered.info test_bitcoin_filtered.info\n-\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n-\n-total_coverage.info: test_bitcoin_filtered.info functional_test_filtered.info\n-\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -a functional_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n-\n-fuzz.coverage/.dirstamp: fuzz_coverage.info\n-\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n-\t@touch $@\n-\n-test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n-\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n-\t@touch $@\n-\n-total.coverage/.dirstamp: total_coverage.info\n-\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n-\t@touch $@\n-\n-cov_fuzz: fuzz.coverage/.dirstamp\n-\n-cov: test_bitcoin.coverage/.dirstamp total.coverage/.dirstamp\n-\n-endif\n-\n-dist_noinst_SCRIPTS = autogen.sh\n-\n-EXTRA_DIST = $(DIST_SHARE) $(DIST_CONTRIB) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n-\n-EXTRA_DIST += \\\n-    test/functional \\\n-    test/fuzz\n-\n-EXTRA_DIST += \\\n-    test/util/bitcoin-util-test.py \\\n-    test/util/data/bitcoin-util-test.json \\\n-    test/util/data/blanktxv1.hex \\\n-    test/util/data/blanktxv1.json \\\n-    test/util/data/blanktxv2.hex \\\n-    test/util/data/blanktxv2.json \\\n-    test/util/data/tt-delin1-out.hex \\\n-    test/util/data/tt-delin1-out.json \\\n-    test/util/data/tt-delout1-out.hex \\\n-    test/util/data/tt-delout1-out.json \\\n-    test/util/data/tt-locktime317000-out.hex \\\n-    test/util/data/tt-locktime317000-out.json \\\n-    test/util/data/tx394b54bb.hex \\\n-    test/util/data/txcreate1.hex \\\n-    test/util/data/txcreate1.json \\\n-    test/util/data/txcreate2.hex \\\n-    test/util/data/txcreate2.json \\\n-    test/util/data/txcreatedata1.hex \\\n-    test/util/data/txcreatedata1.json \\\n-    test/util/data/txcreatedata2.hex \\\n-    test/util/data/txcreatedata2.json \\\n-    test/util/data/txcreatedata_seq0.hex \\\n-    test/util/data/txcreatedata_seq0.json \\\n-    test/util/data/txcreatedata_seq1.hex \\\n-    test/util/data/txcreatedata_seq1.json \\\n-    test/util/data/txcreatemultisig1.hex \\\n-    test/util/data/txcreatemultisig1.json \\\n-    test/util/data/txcreatemultisig2.hex \\\n-    test/util/data/txcreatemultisig2.json \\\n-    test/util/data/txcreatemultisig3.hex \\\n-    test/util/data/txcreatemultisig3.json \\\n-    test/util/data/txcreatemultisig4.hex \\\n-    test/util/data/txcreatemultisig4.json \\\n-    test/util/data/txcreatemultisig5.json \\\n-    test/util/data/txcreateoutpubkey1.hex \\\n-    test/util/data/txcreateoutpubkey1.json \\\n-    test/util/data/txcreateoutpubkey2.hex \\\n-    test/util/data/txcreateoutpubkey2.json \\\n-    test/util/data/txcreateoutpubkey3.hex \\\n-    test/util/data/txcreateoutpubkey3.json \\\n-    test/util/data/txcreatescript1.hex \\\n-    test/util/data/txcreatescript1.json \\\n-    test/util/data/txcreatescript2.hex \\\n-    test/util/data/txcreatescript2.json \\\n-    test/util/data/txcreatescript3.hex \\\n-    test/util/data/txcreatescript3.json \\\n-    test/util/data/txcreatescript4.hex \\\n-    test/util/data/txcreatescript4.json \\\n-    test/util/data/txcreatescript5.hex \\\n-    test/util/data/txcreatescript6.hex \\\n-    test/util/data/txcreatesignv1.hex \\\n-    test/util/data/txcreatesignv1.json \\\n-    test/util/data/txcreatesignv2.hex \\\n-    test/util/rpcauth-test.py\n-\n-CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n-\n-.INTERMEDIATE: $(COVERAGE_INFO)\n-\n-DISTCHECK_CONFIGURE_FLAGS = --enable-man\n-\n-doc/doxygen/.stamp: doc/Doxyfile FORCE\n-\t$(MKDIR_P) $(@D)\n-\t$(DOXYGEN) $^\n-\t$(AM_V_at) touch $@\n-\n-if HAVE_DOXYGEN\n-docs: doc/doxygen/.stamp\n-else\n-docs:\n-\t@echo \"error: doxygen not found\"\n-endif\n-\n-clean-docs:\n-\trm -rf doc/doxygen\n-\n-clean-local: clean-docs\n-\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ fuzz.coverage/ test/tmp/ cache/ $(OSX_APP)\n-\trm -rf test/functional/__pycache__ test/functional/test_framework/__pycache__ test/cache share/rpcauth/__pycache__\n-\trm -rf osx_volname dist/ dpi36.background.tiff dpi72.background.tiff\n-\n-test-security-check:\n-if TARGET_DARWIN\n-\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_MACHO\n-endif\n-if TARGET_WINDOWS\n-\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_PE\n-endif\n-if TARGET_LINUX\n-\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_ELF\n-endif"
      },
      {
        "sha": "a41ef5cd1a2bbd75a8f0399bbaba0be1151aea30",
        "filename": "README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 95,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,95 +0,0 @@\n-Satoshi Bitcoin 2 0 Core integration/staging tree\n-=====================================\n-\n-https://bitcoincore.org\n-\n-What is Satoshi Bitcoin?\n-----------------\n-\n-Satoshi Bitcoin is an experimental digital currency that enables instant payments to\n-anyone, anywhere in the world. Satoshi Bitcoin uses peer-to-peer technology to operate\n-with no central authority: managing transactions and issuing money are carried\n-out collectively by the network. Satoshi Bitcoin Core is the name of open source\n-software which enables the use of this currency.\n-\n-<<<<<<< HEAD\n-For more information, as well as an immediately usable, binary version of\n-the Bitcoin Core software, see https://bitcoincore.org/en/download/, or read the\n-=======\n-For more information, as well as an immediately useable, binary version of\n-the Satoshi Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n->>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n-[original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n-\n-License\n--------\n-\n-Satoshi Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n-information or see https://opensource.org/licenses/MIT.\n-\n-Development Process\n--------------------\n-\n-The `master` branch is regularly built (see `doc/build-*.md` for instructions) and tested, but it is not guaranteed to be\n-completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n-<<<<<<< HEAD\n-regularly from release branches to indicate new official, stable release versions of Bitcoin Core.\n-=======\n-regularly to indicate new official, stable release versions of Satoshi Bitcoin Core.\n-\n-The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n->>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n-\n-The https://github.com/bitcoin-core/gui repository is used exclusively for the\n-development of the GUI. Its master branch is identical in all monotree\n-repositories. Release branches and tags do not exist, so please do not fork\n-that repository unless it is for development reasons.\n-\n-The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md)\n-and useful hints for developers can be found in [doc/developer-notes.md](doc/developer-notes.md).\n-\n-Testing\n--------\n-\n-Testing and code review is the bottleneck for development; we get more pull\n-requests than we can review and test on short notice. Please be patient and help out by testing\n-other people's pull requests, and remember this is a security-critical project where any mistake might cost people\n-lots of money.\n-\n-### Automated Testing\n-\n-Developers are strongly encouraged to write [unit tests](src/test/README.md) for new code, and to\n-submit new unit tests for old code. Unit tests can be compiled and run\n-(assuming they weren't disabled in configure) with: `make check`. Further details on running\n-and extending unit tests can be found in [/src/test/README.md](/src/test/README.md).\n-\n-There are also [regression and integration tests](/test), written\n-in Python, that are run automatically on the build server.\n-These tests can be run (if the [test dependencies](/test) are installed) with: `test/functional/test_runner.py`\n-\n-The Travis CI system makes sure that every pull request is built for Windows, Linux, and macOS, and that unit/sanity tests are run automatically.\n-\n-### Manual Quality Assurance (QA) Testing\n-\n-Changes should be tested by somebody other than the developer who wrote the\n-code. This is especially important for large or high-risk changes. It is useful\n-to add a test plan to the pull request description if testing the changes is\n-not straightforward.\n-\n-Translations\n-------------\n-\n-Changes to translations as well as new translations can be submitted to\n-<<<<<<< HEAD\n-[Bitcoin Core's Transifex page](https://www.transifex.com/bitcoin/bitcoin/).\n-=======\n-[Satoshi Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n->>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n-\n-Translations are periodically pulled from Transifex and merged into the git repository. See the\n-[translation process](doc/translation_process.md) for details on how this works.\n-\n-**Important**: We do not accept translation changes as GitHub pull requests because the next\n-pull from Transifex would automatically overwrite them again.\n-\n-Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators)."
      },
      {
        "sha": "7ed96c7cea392323b4b50245087794f5cc7810f7",
        "filename": "SECURITY.md",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/SECURITY.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/SECURITY.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/SECURITY.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,20 +0,0 @@\n-# Security Policy\n-\n-## Supported Versions\n-\n-See our website for versions of Bitcoin Core that are currently supported with\n-security updates: https://bitcoincore.org/en/lifecycle/#schedule\n-\n-## Reporting a Vulnerability\n-\n-To report security issues send an email to security@bitcoincore.org (not for support).\n-\n-The following keys may be used to communicate sensitive information to developers:\n-\n-| Name | Fingerprint |\n-|------|-------------|\n-| Wladimir van der Laan | 71A3 B167 3540 5025 D447  E8F2 7481 0B01 2346 C9A6 |\n-| Jonas Schnelli | 32EE 5C4C 3FA1 5CCA DB46  ABE5 29D4 BCB6 416F 53EC |\n-| Pieter Wuille | 133E AC17 9436 F14A 5CF1  B794 860F EB80 4E66 9320 |\n-\n-You can import a key by running the following command with that individual\u2019s fingerprint: `gpg --recv-keys \"<fingerprint>\"` Ensure that you put quotes around fingerprints containing spaces."
      },
      {
        "sha": "de16260b563279aea0ae038ecd4250964e8bd540",
        "filename": "autogen.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,16 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2013-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-set -e\n-srcdir=\"$(dirname \"$0\")\"\n-cd \"$srcdir\"\n-if [ -z \"${LIBTOOLIZE}\" ] && GLIBTOOLIZE=\"$(command -v glibtoolize)\"; then\n-  LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n-  export LIBTOOLIZE\n-fi\n-command -v autoreconf >/dev/null || \\\n-  (echo \"configuration failed, please install autoconf first\" && exit 1)\n-autoreconf --install --force --warnings=all"
      },
      {
        "sha": "2ae33f71402aaf6a4c70212f3493354ecfb01ec8",
        "filename": "build-aux/m4/ax_boost_base.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 303,
        "changes": 303,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_base.m4?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,303 +0,0 @@\n-# ===========================================================================\n-#      https://www.gnu.org/software/autoconf-archive/ax_boost_base.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_BASE([MINIMUM-VERSION], [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n-#\n-# DESCRIPTION\n-#\n-#   Test for the Boost C++ libraries of a particular version (or newer)\n-#\n-#   If no path to the installed boost library is given the macro searchs\n-#   under /usr, /usr/local, /opt and /opt/local and evaluates the\n-#   $BOOST_ROOT environment variable. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_CPPFLAGS) / AC_SUBST(BOOST_LDFLAGS)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2009 Peter Adolphs\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 48\n-\n-# example boost program (need to pass version)\n-m4_define([_AX_BOOST_BASE_PROGRAM],\n-          [AC_LANG_PROGRAM([[\n-#include <boost/version.hpp>\n-]],[[\n-(void) ((void)sizeof(char[1 - 2*!!((BOOST_VERSION) < ($1))]));\n-]])])\n-\n-AC_DEFUN([AX_BOOST_BASE],\n-[\n-AC_ARG_WITH([boost],\n-  [AS_HELP_STRING([--with-boost@<:@=ARG@:>@],\n-    [use Boost library from a standard location (ARG=yes),\n-     from the specified location (ARG=<path>),\n-     or disable it (ARG=no)\n-     @<:@ARG=yes@:>@ ])],\n-    [\n-     AS_CASE([$withval],\n-       [no],[want_boost=\"no\";_AX_BOOST_BASE_boost_path=\"\"],\n-       [yes],[want_boost=\"yes\";_AX_BOOST_BASE_boost_path=\"\"],\n-       [want_boost=\"yes\";_AX_BOOST_BASE_boost_path=\"$withval\"])\n-    ],\n-    [want_boost=\"yes\"])\n-\n-\n-AC_ARG_WITH([boost-libdir],\n-  [AS_HELP_STRING([--with-boost-libdir=LIB_DIR],\n-    [Force given directory for boost libraries.\n-     Note that this will override library path detection,\n-     so use this parameter only if default library detection fails\n-     and you know exactly where your boost libraries are located.])],\n-  [\n-   AS_IF([test -d \"$withval\"],\n-         [_AX_BOOST_BASE_boost_lib_path=\"$withval\"],\n-    [AC_MSG_ERROR([--with-boost-libdir expected directory name])])\n-  ],\n-  [_AX_BOOST_BASE_boost_lib_path=\"\"])\n-\n-BOOST_LDFLAGS=\"\"\n-BOOST_CPPFLAGS=\"\"\n-AS_IF([test \"x$want_boost\" = \"xyes\"],\n-      [_AX_BOOST_BASE_RUNDETECT([$1],[$2],[$3])])\n-AC_SUBST(BOOST_CPPFLAGS)\n-AC_SUBST(BOOST_LDFLAGS)\n-])\n-\n-\n-# convert a version string in $2 to numeric and affect to polymorphic var $1\n-AC_DEFUN([_AX_BOOST_BASE_TONUMERICVERSION],[\n-  AS_IF([test \"x$2\" = \"x\"],[_AX_BOOST_BASE_TONUMERICVERSION_req=\"1.20.0\"],[_AX_BOOST_BASE_TONUMERICVERSION_req=\"$2\"])\n-  _AX_BOOST_BASE_TONUMERICVERSION_req_shorten=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n-  _AX_BOOST_BASE_TONUMERICVERSION_req_major=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '\\([[0-9]]*\\)'`\n-  AS_IF([test \"x$_AX_BOOST_BASE_TONUMERICVERSION_req_major\" = \"x\"],\n-        [AC_MSG_ERROR([You should at least specify libboost major version])])\n-  _AX_BOOST_BASE_TONUMERICVERSION_req_minor=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '[[0-9]]*\\.\\([[0-9]]*\\)'`\n-  AS_IF([test \"x$_AX_BOOST_BASE_TONUMERICVERSION_req_minor\" = \"x\"],\n-        [_AX_BOOST_BASE_TONUMERICVERSION_req_minor=\"0\"])\n-  _AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '[[0-9]]*\\.[[0-9]]*\\.\\([[0-9]]*\\)'`\n-  AS_IF([test \"X$_AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor\" = \"X\"],\n-        [_AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor=\"0\"])\n-  _AX_BOOST_BASE_TONUMERICVERSION_RET=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req_major \\* 100000 \\+  $_AX_BOOST_BASE_TONUMERICVERSION_req_minor \\* 100 \\+ $_AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor`\n-  AS_VAR_SET($1,$_AX_BOOST_BASE_TONUMERICVERSION_RET)\n-])\n-\n-dnl Run the detection of boost should be run only if $want_boost\n-AC_DEFUN([_AX_BOOST_BASE_RUNDETECT],[\n-    _AX_BOOST_BASE_TONUMERICVERSION(WANT_BOOST_VERSION,[$1])\n-    succeeded=no\n-\n-\n-    AC_REQUIRE([AC_CANONICAL_HOST])\n-    dnl On 64-bit systems check for system libraries in both lib64 and lib.\n-    dnl The former is specified by FHS, but e.g. Debian does not adhere to\n-    dnl this (as it rises problems for generic multi-arch support).\n-    dnl The last entry in the list is chosen by default when no libraries\n-    dnl are found, e.g. when only header-only libraries are installed!\n-    AS_CASE([${host_cpu}],\n-      [x86_64],[libsubdirs=\"lib64 libx32 lib lib64\"],\n-      [mips*64*],[libsubdirs=\"lib64 lib32 lib lib64\"],\n-      [ppc64|powerpc64|s390x|sparc64|aarch64|ppc64le|powerpc64le|riscv64],[libsubdirs=\"lib64 lib lib64\"],\n-      [libsubdirs=\"lib\"]\n-    )\n-\n-    dnl allow for real multi-arch paths e.g. /usr/lib/x86_64-linux-gnu. Give\n-    dnl them priority over the other paths since, if libs are found there, they\n-    dnl are almost assuredly the ones desired.\n-    AS_CASE([${host_cpu}],\n-      [i?86],[multiarch_libsubdir=\"lib/i386-${host_os}\"],\n-      [armv7l],[multiarch_libsubdir=\"lib/arm-${host_os}\"],\n-      [multiarch_libsubdir=\"lib/${host_cpu}-${host_os}\"]\n-    )\n-\n-    dnl first we check the system location for boost libraries\n-    dnl this location ist chosen if boost libraries are installed with the --layout=system option\n-    dnl or if you install boost with RPM\n-    AS_IF([test \"x$_AX_BOOST_BASE_boost_path\" != \"x\"],[\n-        AC_MSG_CHECKING([for boostlib >= $1 ($WANT_BOOST_VERSION) includes in \"$_AX_BOOST_BASE_boost_path/include\"])\n-         AS_IF([test -d \"$_AX_BOOST_BASE_boost_path/include\" && test -r \"$_AX_BOOST_BASE_boost_path/include\"],[\n-           AC_MSG_RESULT([yes])\n-           BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path/include\"\n-           for _AX_BOOST_BASE_boost_path_tmp in $multiarch_libsubdir $libsubdirs; do\n-                AC_MSG_CHECKING([for boostlib >= $1 ($WANT_BOOST_VERSION) lib path in \"$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\"])\n-                AS_IF([test -d \"$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\" && test -r \"$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\" ],[\n-                        AC_MSG_RESULT([yes])\n-                        BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\";\n-                        break;\n-                ],\n-      [AC_MSG_RESULT([no])])\n-           done],[\n-      AC_MSG_RESULT([no])])\n-    ],[\n-        if test X\"$cross_compiling\" = Xyes; then\n-            search_libsubdirs=$multiarch_libsubdir\n-        else\n-            search_libsubdirs=\"$multiarch_libsubdir $libsubdirs\"\n-        fi\n-        for _AX_BOOST_BASE_boost_path_tmp in /usr /usr/local /opt /opt/local ; do\n-            if test -d \"$_AX_BOOST_BASE_boost_path_tmp/include/boost\" && test -r \"$_AX_BOOST_BASE_boost_path_tmp/include/boost\" ; then\n-                for libsubdir in $search_libsubdirs ; do\n-                    if ls \"$_AX_BOOST_BASE_boost_path_tmp/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n-                done\n-                BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_path_tmp/$libsubdir\"\n-                BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path_tmp/include\"\n-                break;\n-            fi\n-        done\n-    ])\n-\n-    dnl overwrite ld flags if we have required special directory with\n-    dnl --with-boost-libdir parameter\n-    AS_IF([test \"x$_AX_BOOST_BASE_boost_lib_path\" != \"x\"],\n-          [BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_lib_path\"])\n-\n-    AC_MSG_CHECKING([for boostlib >= $1 ($WANT_BOOST_VERSION)])\n-    CPPFLAGS_SAVED=\"$CPPFLAGS\"\n-    CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-    export CPPFLAGS\n-\n-    LDFLAGS_SAVED=\"$LDFLAGS\"\n-    LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-    export LDFLAGS\n-\n-    AC_REQUIRE([AC_PROG_CXX])\n-    AC_LANG_PUSH(C++)\n-        AC_COMPILE_IFELSE([_AX_BOOST_BASE_PROGRAM($WANT_BOOST_VERSION)],[\n-        AC_MSG_RESULT(yes)\n-    succeeded=yes\n-    found_system=yes\n-        ],[\n-        ])\n-    AC_LANG_POP([C++])\n-\n-\n-\n-    dnl if we found no boost with system layout we search for boost libraries\n-    dnl built and installed without the --layout=system option or for a staged(not installed) version\n-    if test \"x$succeeded\" != \"xyes\" ; then\n-        CPPFLAGS=\"$CPPFLAGS_SAVED\"\n-        LDFLAGS=\"$LDFLAGS_SAVED\"\n-        BOOST_CPPFLAGS=\n-        if test -z \"$_AX_BOOST_BASE_boost_lib_path\" ; then\n-            BOOST_LDFLAGS=\n-        fi\n-        _version=0\n-        if test -n \"$_AX_BOOST_BASE_boost_path\" ; then\n-            if test -d \"$_AX_BOOST_BASE_boost_path\" && test -r \"$_AX_BOOST_BASE_boost_path\"; then\n-                for i in `ls -d $_AX_BOOST_BASE_boost_path/include/boost-* 2>/dev/null`; do\n-                    _version_tmp=`echo $i | sed \"s#$_AX_BOOST_BASE_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n-                    V_CHECK=`expr $_version_tmp \\> $_version`\n-                    if test \"x$V_CHECK\" = \"x1\" ; then\n-                        _version=$_version_tmp\n-                    fi\n-                    VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n-                    BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path/include/boost-$VERSION_UNDERSCORE\"\n-                done\n-                dnl if nothing found search for layout used in Windows distributions\n-                if test -z \"$BOOST_CPPFLAGS\"; then\n-                    if test -d \"$_AX_BOOST_BASE_boost_path/boost\" && test -r \"$_AX_BOOST_BASE_boost_path/boost\"; then\n-                        BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path\"\n-                    fi\n-                fi\n-                dnl if we found something and BOOST_LDFLAGS was unset before\n-                dnl (because \"$_AX_BOOST_BASE_boost_lib_path\" = \"\"), set it here.\n-                if test -n \"$BOOST_CPPFLAGS\" && test -z \"$BOOST_LDFLAGS\"; then\n-                    for libsubdir in $libsubdirs ; do\n-                        if ls \"$_AX_BOOST_BASE_boost_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n-                    done\n-                    BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_path/$libsubdir\"\n-                fi\n-            fi\n-        else\n-            if test \"x$cross_compiling\" != \"xyes\" ; then\n-                for _AX_BOOST_BASE_boost_path in /usr /usr/local /opt /opt/local ; do\n-                    if test -d \"$_AX_BOOST_BASE_boost_path\" && test -r \"$_AX_BOOST_BASE_boost_path\" ; then\n-                        for i in `ls -d $_AX_BOOST_BASE_boost_path/include/boost-* 2>/dev/null`; do\n-                            _version_tmp=`echo $i | sed \"s#$_AX_BOOST_BASE_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n-                            V_CHECK=`expr $_version_tmp \\> $_version`\n-                            if test \"x$V_CHECK\" = \"x1\" ; then\n-                                _version=$_version_tmp\n-                                best_path=$_AX_BOOST_BASE_boost_path\n-                            fi\n-                        done\n-                    fi\n-                done\n-\n-                VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n-                BOOST_CPPFLAGS=\"-I$best_path/include/boost-$VERSION_UNDERSCORE\"\n-                if test -z \"$_AX_BOOST_BASE_boost_lib_path\" ; then\n-                    for libsubdir in $libsubdirs ; do\n-                        if ls \"$best_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n-                    done\n-                    BOOST_LDFLAGS=\"-L$best_path/$libsubdir\"\n-                fi\n-            fi\n-\n-            if test -n \"$BOOST_ROOT\" ; then\n-                for libsubdir in $libsubdirs ; do\n-                    if ls \"$BOOST_ROOT/stage/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n-                done\n-                if test -d \"$BOOST_ROOT\" && test -r \"$BOOST_ROOT\" && test -d \"$BOOST_ROOT/stage/$libsubdir\" && test -r \"$BOOST_ROOT/stage/$libsubdir\"; then\n-                    version_dir=`expr //$BOOST_ROOT : '.*/\\(.*\\)'`\n-                    stage_version=`echo $version_dir | sed 's/boost_//' | sed 's/_/./g'`\n-                        stage_version_shorten=`expr $stage_version : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n-                    V_CHECK=`expr $stage_version_shorten \\>\\= $_version`\n-                    if test \"x$V_CHECK\" = \"x1\" && test -z \"$_AX_BOOST_BASE_boost_lib_path\" ; then\n-                        AC_MSG_NOTICE(We will use a staged boost library from $BOOST_ROOT)\n-                        BOOST_CPPFLAGS=\"-I$BOOST_ROOT\"\n-                        BOOST_LDFLAGS=\"-L$BOOST_ROOT/stage/$libsubdir\"\n-                    fi\n-                fi\n-            fi\n-        fi\n-\n-        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-        export CPPFLAGS\n-        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-        export LDFLAGS\n-\n-        AC_LANG_PUSH(C++)\n-            AC_COMPILE_IFELSE([_AX_BOOST_BASE_PROGRAM($WANT_BOOST_VERSION)],[\n-            AC_MSG_RESULT(yes)\n-        succeeded=yes\n-        found_system=yes\n-            ],[\n-            ])\n-        AC_LANG_POP([C++])\n-    fi\n-\n-    if test \"x$succeeded\" != \"xyes\" ; then\n-        if test \"x$_version\" = \"x0\" ; then\n-            AC_MSG_NOTICE([[We could not detect the boost libraries (version $1 or higher). If you have a staged boost library (still not installed) please specify \\$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])\n-        else\n-            AC_MSG_NOTICE([Your boost libraries seems to old (version $_version).])\n-        fi\n-        # execute ACTION-IF-NOT-FOUND (if present):\n-        ifelse([$3], , :, [$3])\n-    else\n-        AC_DEFINE(HAVE_BOOST,,[define if the Boost library is available])\n-        # execute ACTION-IF-FOUND (if present):\n-        ifelse([$2], , :, [$2])\n-    fi\n-\n-    CPPFLAGS=\"$CPPFLAGS_SAVED\"\n-    LDFLAGS=\"$LDFLAGS_SAVED\"\n-\n-])"
      },
      {
        "sha": "12f7bc5e2ebc18f70537f3d271802e107bfacdad",
        "filename": "build-aux/m4/ax_boost_filesystem.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 118,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_boost_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_boost_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_filesystem.m4?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,118 +0,0 @@\n-# ===========================================================================\n-#   https://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_FILESYSTEM\n-#\n-# DESCRIPTION\n-#\n-#   Test for Filesystem library from the Boost C++ libraries. The macro\n-#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n-#   available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_FILESYSTEM_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_FILESYSTEM\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2009 Michael Tindal\n-#   Copyright (c) 2009 Roman Rybalko <libtorrent@romanr.info>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 28\n-\n-AC_DEFUN([AX_BOOST_FILESYSTEM],\n-[\n-\tAC_ARG_WITH([boost-filesystem],\n-\tAS_HELP_STRING([--with-boost-filesystem@<:@=special-lib@:>@],\n-                   [use the Filesystem library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-filesystem=boost_filesystem-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_filesystem_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_filesystem_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-\t\tLIBS_SAVED=$LIBS\n-\t\tLIBS=\"$LIBS $BOOST_SYSTEM_LIB\"\n-\t\texport LIBS\n-\n-        AC_CACHE_CHECK(whether the Boost::Filesystem library is available,\n-\t\t\t\t\t   ax_cv_boost_filesystem,\n-        [AC_LANG_PUSH([C++])\n-         AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/filesystem/path.hpp>]],\n-                                   [[using namespace boost::filesystem;\n-                                   path my_path( \"foo/bar/data.txt\" );\n-                                   return 0;]])],\n-\t\t\t\t\t       ax_cv_boost_filesystem=yes, ax_cv_boost_filesystem=no)\n-         AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_filesystem\" = \"xyes\"; then\n-\t\t\tAC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-            if test \"x$ax_boost_user_filesystem_lib\" = \"x\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_filesystem* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                 [link_filesystem=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_filesystem\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_filesystem* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                 [link_filesystem=\"no\"])\n-\t\t\t\tdone\n-\t\t    fi\n-            else\n-               for ax_lib in $ax_boost_user_filesystem_lib boost_filesystem-$ax_boost_user_filesystem_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                   [link_filesystem=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the Boost::Filesystem library!)\n-            fi\n-\t\t\tif test \"x$link_filesystem\" != \"xyes\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\t\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\t\tLIBS=\"$LIBS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "5d20e67464fcde6ee00f2582607e59f0759115b8",
        "filename": "build-aux/m4/ax_boost_process.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 121,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_boost_process.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_boost_process.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_process.m4?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,121 +0,0 @@\n-# ===========================================================================\n-#     https://www.gnu.org/software/autoconf-archive/ax_boost_process.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_PROCESS\n-#\n-# DESCRIPTION\n-#\n-#   Test for Process library from the Boost C++ libraries. The macro\n-#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n-#   available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_PROCESS_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_PROCESS\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2008 Michael Tindal\n-#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 2\n-\n-AC_DEFUN([AX_BOOST_PROCESS],\n-[\n-\tAC_ARG_WITH([boost-process],\n-\tAS_HELP_STRING([--with-boost-process@<:@=special-lib@:>@],\n-                   [use the Process library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-process=boost_process-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost_process=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost_process=\"yes\"\n-            ax_boost_user_process_lib=\"\"\n-        else\n-\t\t    want_boost_process=\"yes\"\n-\t\tax_boost_user_process_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost_process=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost_process\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Process library is available,\n-\t\t\t\t\t   ax_cv_boost_process,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n-\t\t\t CXXFLAGS=\n-\n-             AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/process.hpp>]],\n-                [[boost::process::child* child = new boost::process::child; delete child;]])],\n-                ax_cv_boost_process=yes, ax_cv_boost_process=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_process\" = \"xyes\"; then\n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n-\n-\t\t\tAC_DEFINE(HAVE_BOOST_PROCESS,,[define if the Boost::Process library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n-            if test \"x$ax_boost_user_process_lib\" = \"x\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_process* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_PROCESS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROCESS_LIB) link_process=\"yes\"; break],\n-                                 [link_process=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_process\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_process* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_PROCESS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROCESS_LIB) link_process=\"yes\"; break],\n-                                 [link_process=\"no\"])\n-\t\t\t\tdone\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_process_lib boost_process-$ax_boost_user_process_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_PROCESS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROCESS_LIB) link_process=\"yes\"; break],\n-                                   [link_process=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the Boost::Process library!)\n-            fi\n-\t\t\tif test \"x$link_process\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "323e2a676a8e0428008dd4563416ce141e278f33",
        "filename": "build-aux/m4/ax_boost_system.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 121,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_system.m4?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,121 +0,0 @@\n-# ===========================================================================\n-#     https://www.gnu.org/software/autoconf-archive/ax_boost_system.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_SYSTEM\n-#\n-# DESCRIPTION\n-#\n-#   Test for System library from the Boost C++ libraries. The macro requires\n-#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_SYSTEM_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_SYSTEM\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2008 Michael Tindal\n-#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 20\n-\n-AC_DEFUN([AX_BOOST_SYSTEM],\n-[\n-\tAC_ARG_WITH([boost-system],\n-\tAS_HELP_STRING([--with-boost-system@<:@=special-lib@:>@],\n-                   [use the System library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-system=boost_system-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_system_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_system_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::System library is available,\n-\t\t\t\t\t   ax_cv_boost_system,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n-\t\t\t CXXFLAGS=\n-\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/system/error_code.hpp>]],\n-\t\t\t\t    [[boost::system::error_category *a = 0;]])],\n-                   ax_cv_boost_system=yes, ax_cv_boost_system=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_system\" = \"xyes\"; then\n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n-\n-\t\t\tAC_DEFINE(HAVE_BOOST_SYSTEM,,[define if the Boost::System library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n-            if test \"x$ax_boost_user_system_lib\" = \"x\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_system* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                 [link_system=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_system\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_system* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                 [link_system=\"no\"])\n-\t\t\t\tdone\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_system_lib boost_system-$ax_boost_user_system_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                   [link_system=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the Boost::System library!)\n-            fi\n-\t\t\tif test \"x$link_system\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "75e80e6e75aa9f6c22387d0dabce11e5fce9526b",
        "filename": "build-aux/m4/ax_boost_thread.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 187,
        "changes": 187,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_boost_thread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_boost_thread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_thread.m4?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,187 +0,0 @@\n-# ===========================================================================\n-#     https://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_THREAD\n-#\n-# DESCRIPTION\n-#\n-#   Test for Thread library from the Boost C++ libraries. The macro requires\n-#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_THREAD_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_THREAD\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2009 Michael Tindal\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 33\n-\n-AC_DEFUN([AX_BOOST_THREAD],\n-[\n-    AC_ARG_WITH([boost-thread],\n-    AS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n-                   [use the Thread library from boost -\n-                    it is possible to specify a certain library for the linker\n-                    e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_thread_lib=\"\"\n-        else\n-            want_boost=\"yes\"\n-            ax_boost_user_thread_lib=\"$withval\"\n-        fi\n-        ],\n-        [want_boost=\"yes\"]\n-    )\n-\n-    if test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-        CPPFLAGS_SAVED=\"$CPPFLAGS\"\n-        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-        export CPPFLAGS\n-\n-        LDFLAGS_SAVED=\"$LDFLAGS\"\n-        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-        export LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Thread library is available,\n-                       ax_cv_boost_thread,\n-        [AC_LANG_PUSH([C++])\n-             CXXFLAGS_SAVE=$CXXFLAGS\n-\n-             case \"x$host_os\" in\n-                 xsolaris )\n-                     CXXFLAGS=\"-pthreads $CXXFLAGS\"\n-                     break;\n-                     ;;\n-                 xmingw32 )\n-                     CXXFLAGS=\"-mthreads $CXXFLAGS\"\n-                     break;\n-                     ;;\n-                 *android* )\n-                     break;\n-                     ;;\n-                 * )\n-                     CXXFLAGS=\"-pthread $CXXFLAGS\"\n-                     break;\n-                     ;;\n-             esac\n-\n-             AC_COMPILE_IFELSE([\n-                 AC_LANG_PROGRAM(\n-                     [[@%:@include <boost/thread/thread.hpp>]],\n-                     [[boost::thread_group thrds;\n-                       return 0;]])],\n-                 ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n-             CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-        ])\n-        if test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n-            case \"x$host_os\" in\n-                xsolaris )\n-                    BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n-                    break;\n-                    ;;\n-                xmingw32 )\n-                    BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n-                    break;\n-                    ;;\n-                *android* )\n-                    break;\n-                    ;;\n-                * )\n-                    BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n-                    break;\n-                    ;;\n-            esac\n-\n-            AC_SUBST(BOOST_CPPFLAGS)\n-\n-            AC_DEFINE(HAVE_BOOST_THREAD,,\n-                      [define if the Boost::Thread library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-            LDFLAGS_SAVE=$LDFLAGS\n-                        case \"x$host_os\" in\n-                          *bsd* )\n-                               LDFLAGS=\"-pthread $LDFLAGS\"\n-                          break;\n-                          ;;\n-                        esac\n-            if test \"x$ax_boost_user_thread_lib\" = \"x\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_thread* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'`; do\n-                     ax_lib=${libextension}\n-                    AC_CHECK_LIB($ax_lib, exit,\n-                                 [link_thread=\"yes\"; break],\n-                                 [link_thread=\"no\"])\n-                done\n-                if test \"x$link_thread\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_thread* 2>/dev/null | sed 's,.*/,,' | sed 's,\\..*,,'`; do\n-                     ax_lib=${libextension}\n-                    AC_CHECK_LIB($ax_lib, exit,\n-                                 [link_thread=\"yes\"; break],\n-                                 [link_thread=\"no\"])\n-                done\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do\n-                      AC_CHECK_LIB($ax_lib, exit,\n-                                   [link_thread=\"yes\"; break],\n-                                   [link_thread=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the Boost::Thread library!)\n-            fi\n-            if test \"x$link_thread\" = \"xno\"; then\n-                AC_MSG_ERROR(Could not link against $ax_lib !)\n-            else\n-                BOOST_THREAD_LIB=\"-l$ax_lib\"\n-                case \"x$host_os\" in\n-                    *bsd* )\n-                        BOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n-                        break;\n-                        ;;\n-                    xsolaris )\n-                        BOOST_THREAD_LIB=\"$BOOST_THREAD_LIB -lpthread\"\n-                        break;\n-                        ;;\n-                    xmingw32 )\n-                        break;\n-                        ;;\n-                    *android* )\n-                        break;\n-                        ;;\n-                    * )\n-                        BOOST_THREAD_LIB=\"$BOOST_THREAD_LIB -lpthread\"\n-                        break;\n-                        ;;\n-                esac\n-                AC_SUBST(BOOST_THREAD_LIB)\n-            fi\n-        fi\n-\n-        CPPFLAGS=\"$CPPFLAGS_SAVED\"\n-        LDFLAGS=\"$LDFLAGS_SAVED\"\n-    fi\n-])"
      },
      {
        "sha": "4cca32fcfd6539b53e0a55c02544342d1d03ae75",
        "filename": "build-aux/m4/ax_boost_unit_test_framework.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 137,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_boost_unit_test_framework.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_boost_unit_test_framework.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_unit_test_framework.m4?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,137 +0,0 @@\n-# =================================================================================\n-#  https://www.gnu.org/software/autoconf-archive/ax_boost_unit_test_framework.html\n-# =================================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_UNIT_TEST_FRAMEWORK\n-#\n-# DESCRIPTION\n-#\n-#   Test for Unit_Test_Framework library from the Boost C++ libraries. The\n-#   macro requires a preceding call to AX_BOOST_BASE. Further documentation\n-#   is available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_UNIT_TEST_FRAMEWORK\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 22\n-\n-AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n-[\n-\tAC_ARG_WITH([boost-unit-test-framework],\n-\tAS_HELP_STRING([--with-boost-unit-test-framework@<:@=special-lib@:>@],\n-                   [use the Unit_Test_Framework library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-unit-test-framework=boost_unit_test_framework-gcc ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_unit_test_framework_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_unit_test_framework_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Unit_Test_Framework library is available,\n-\t\t\t\t\t   ax_cv_boost_unit_test_framework,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/test/unit_test.hpp>]],\n-                                    [[using boost::unit_test::test_suite;\n-\t\t\t\t\t\t\t test_suite* test= BOOST_TEST_SUITE( \"Unit test example 1\" ); if (test == NULL) { return 1; } else { return 0; }]])],\n-                   ax_cv_boost_unit_test_framework=yes, ax_cv_boost_unit_test_framework=no)\n-         AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_unit_test_framework\" = \"xyes\"; then\n-\t\t\tAC_DEFINE(HAVE_BOOST_UNIT_TEST_FRAMEWORK,,[define if the Boost::Unit_Test_Framework library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-            if test \"x$ax_boost_user_unit_test_framework_lib\" = \"x\"; then\n-\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n-                for monitor_library in `ls $BOOSTLIBDIR/libboost_unit_test_framework*.so* $BOOSTLIBDIR/libboost_unit_test_framework*.dylib* $BOOSTLIBDIR/libboost_unit_test_framework*.a* 2>/dev/null` ; do\n-                    if test -r $monitor_library ; then\n-                       libextension=`echo $monitor_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'`\n-                       ax_lib=${libextension}\n-                       link_unit_test_framework=\"yes\"\n-                    else\n-                       link_unit_test_framework=\"no\"\n-                    fi\n-\n-\t\t\t    if test \"x$link_unit_test_framework\" = \"xyes\"; then\n-                      BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n-                      AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n-\t\t\t\t\t  break\n-\t\t\t\t    fi\n-                done\n-                if test \"x$link_unit_test_framework\" != \"xyes\"; then\n-                for libextension in `ls $BOOSTLIBDIR/boost_unit_test_framework*.dll* $BOOSTLIBDIR/boost_unit_test_framework*.a* 2>/dev/null  | sed 's,.*/,,' | sed -e 's;^\\(boost_unit_test_framework.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB) link_unit_test_framework=\"yes\"; break],\n-                                 [link_unit_test_framework=\"no\"])\n-\t\t\t\tdone\n-                fi\n-            else\n-                link_unit_test_framework=\"no\"\n-\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n-                for ax_lib in boost_unit_test_framework-$ax_boost_user_unit_test_framework_lib $ax_boost_user_unit_test_framework_lib ; do\n-                   if test \"x$link_unit_test_framework\" = \"xyes\"; then\n-                      break;\n-                   fi\n-                   for unittest_library in `ls $BOOSTLIBDIR/lib${ax_lib}.so* $BOOSTLIBDIR/lib${ax_lib}.a* 2>/dev/null` ; do\n-                   if test -r $unittest_library ; then\n-                       libextension=`echo $unittest_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a*$;\\1;'`\n-                       ax_lib=${libextension}\n-                       link_unit_test_framework=\"yes\"\n-                    else\n-                       link_unit_test_framework=\"no\"\n-                    fi\n-\n-\t\t\t\tif test \"x$link_unit_test_framework\" = \"xyes\"; then\n-                        BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n-                        AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n-\t\t\t\t\t    break\n-\t\t\t\t    fi\n-                  done\n-               done\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the Boost::Unit_Test_Framework library!)\n-            fi\n-\t\t\tif test \"x$link_unit_test_framework\" != \"xyes\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "ca3639715e7243fa4343eb2e7f3de53927cc9d4a",
        "filename": "build-aux/m4/ax_check_compile_flag.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_check_compile_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_check_compile_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_compile_flag.m4?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,74 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_check_compile_flag.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n-#\n-# DESCRIPTION\n-#\n-#   Check whether the given FLAG works with the current language's compiler\n-#   or gives an error.  (Warnings, however, are ignored)\n-#\n-#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n-#   success/failure.\n-#\n-#   If EXTRA-FLAGS is defined, it is added to the current language's default\n-#   flags (e.g. CFLAGS) when the check is done.  The check is thus made with\n-#   the flags: \"CFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to\n-#   force the compiler to issue an error when a bad flag is given.\n-#\n-#   INPUT gives an alternative input source to AC_COMPILE_IFELSE.\n-#\n-#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n-#   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n-#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 4\n-\n-AC_DEFUN([AX_CHECK_COMPILE_FLAG],\n-[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n-AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl\n-AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [\n-  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS\n-  _AC_LANG_PREFIX[]FLAGS=\"$[]_AC_LANG_PREFIX[]FLAGS $4 $1\"\n-  AC_COMPILE_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n-    [AS_VAR_SET(CACHEVAR,[yes])],\n-    [AS_VAR_SET(CACHEVAR,[no])])\n-  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])\n-AS_VAR_IF(CACHEVAR,yes,\n-  [m4_default([$2], :)],\n-  [m4_default([$3], :)])\n-AS_VAR_POPDEF([CACHEVAR])dnl\n-])dnl AX_CHECK_COMPILE_FLAGS"
      },
      {
        "sha": "eb01a6ce135eca0fdde834b00c21b12202b09f3d",
        "filename": "build-aux/m4/ax_check_link_flag.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_check_link_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_check_link_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_link_flag.m4?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,74 +0,0 @@\n-# ===========================================================================\n-#    http://www.gnu.org/software/autoconf-archive/ax_check_link_flag.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n-#\n-# DESCRIPTION\n-#\n-#   Check whether the given FLAG works with the linker or gives an error.\n-#   (Warnings, however, are ignored)\n-#\n-#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n-#   success/failure.\n-#\n-#   If EXTRA-FLAGS is defined, it is added to the linker's default flags\n-#   when the check is done.  The check is thus made with the flags: \"LDFLAGS\n-#   EXTRA-FLAGS FLAG\".  This can for example be used to force the linker to\n-#   issue an error when a bad flag is given.\n-#\n-#   INPUT gives an alternative input source to AC_LINK_IFELSE.\n-#\n-#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n-#   macro in sync with AX_CHECK_{PREPROC,COMPILE}_FLAG.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n-#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 4\n-\n-AC_DEFUN([AX_CHECK_LINK_FLAG],\n-[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n-AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl\n-AC_CACHE_CHECK([whether the linker accepts $1], CACHEVAR, [\n-  ax_check_save_flags=$LDFLAGS\n-  LDFLAGS=\"$LDFLAGS $4 $1\"\n-  AC_LINK_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n-    [AS_VAR_SET(CACHEVAR,[yes])],\n-    [AS_VAR_SET(CACHEVAR,[no])])\n-  LDFLAGS=$ax_check_save_flags])\n-AS_VAR_IF(CACHEVAR,yes,\n-  [m4_default([$2], :)],\n-  [m4_default([$3], :)])\n-AS_VAR_POPDEF([CACHEVAR])dnl\n-])dnl AX_CHECK_LINK_FLAGS"
      },
      {
        "sha": "ca1d5ee2b6d1ae107504d4ab433bc5f6fd629f61",
        "filename": "build-aux/m4/ax_check_preproc_flag.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_check_preproc_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_check_preproc_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_preproc_flag.m4?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,74 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_check_preproc_flag.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CHECK_PREPROC_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n-#\n-# DESCRIPTION\n-#\n-#   Check whether the given FLAG works with the current language's\n-#   preprocessor or gives an error.  (Warnings, however, are ignored)\n-#\n-#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n-#   success/failure.\n-#\n-#   If EXTRA-FLAGS is defined, it is added to the preprocessor's default\n-#   flags when the check is done.  The check is thus made with the flags:\n-#   \"CPPFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to force the\n-#   preprocessor to issue an error when a bad flag is given.\n-#\n-#   INPUT gives an alternative input source to AC_PREPROC_IFELSE.\n-#\n-#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n-#   macro in sync with AX_CHECK_{COMPILE,LINK}_FLAG.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n-#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 4\n-\n-AC_DEFUN([AX_CHECK_PREPROC_FLAG],\n-[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n-AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]cppflags_$4_$1])dnl\n-AC_CACHE_CHECK([whether _AC_LANG preprocessor accepts $1], CACHEVAR, [\n-  ax_check_save_flags=$CPPFLAGS\n-  CPPFLAGS=\"$CPPFLAGS $4 $1\"\n-  AC_PREPROC_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n-    [AS_VAR_SET(CACHEVAR,[yes])],\n-    [AS_VAR_SET(CACHEVAR,[no])])\n-  CPPFLAGS=$ax_check_save_flags])\n-AS_VAR_IF(CACHEVAR,yes,\n-  [m4_default([$2], :)],\n-  [m4_default([$3], :)])\n-AS_VAR_POPDEF([CACHEVAR])dnl\n-])dnl AX_CHECK_PREPROC_FLAGS"
      },
      {
        "sha": "43087b2e6889ec6f8ebd2f8ba77f4a9a716f8ac2",
        "filename": "build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 951,
        "changes": 951,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_cxx_compile_stdcxx.m4?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,951 +0,0 @@\n-# ===========================================================================\n-#  https://www.gnu.org/software/autoconf-archive/ax_cxx_compile_stdcxx.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CXX_COMPILE_STDCXX(VERSION, [ext|noext], [mandatory|optional])\n-#\n-# DESCRIPTION\n-#\n-#   Check for baseline language coverage in the compiler for the specified\n-#   version of the C++ standard.  If necessary, add switches to CXX and\n-#   CXXCPP to enable support.  VERSION may be '11' (for the C++11 standard)\n-#   or '14' (for the C++14 standard).\n-#\n-#   The second argument, if specified, indicates whether you insist on an\n-#   extended mode (e.g. -std=gnu++11) or a strict conformance mode (e.g.\n-#   -std=c++11).  If neither is specified, you get whatever works, with\n-#   preference for an extended mode.\n-#\n-#   The third argument, if specified 'mandatory' or if left unspecified,\n-#   indicates that baseline support for the specified C++ standard is\n-#   required and that the macro should error out if no mode with that\n-#   support is found.  If specified 'optional', then configuration proceeds\n-#   regardless, after defining HAVE_CXX${VERSION} if and only if a\n-#   supporting mode is found.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Benjamin Kosnik <bkoz@redhat.com>\n-#   Copyright (c) 2012 Zack Weinberg <zackw@panix.com>\n-#   Copyright (c) 2013 Roy Stogner <roystgnr@ices.utexas.edu>\n-#   Copyright (c) 2014, 2015 Google Inc.; contributed by Alexey Sokolov <sokolov@google.com>\n-#   Copyright (c) 2015 Paul Norman <penorman@mac.com>\n-#   Copyright (c) 2015 Moritz Klammler <moritz@klammler.eu>\n-#   Copyright (c) 2016, 2018 Krzesimir Nowak <qdlacz@gmail.com>\n-#   Copyright (c) 2019 Enji Cooper <yaneurabeya@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved.  This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 11\n-\n-dnl  This macro is based on the code from the AX_CXX_COMPILE_STDCXX_11 macro\n-dnl  (serial version number 13).\n-\n-AC_DEFUN([AX_CXX_COMPILE_STDCXX], [dnl\n-  m4_if([$1], [11], [ax_cxx_compile_alternatives=\"11 0x\"],\n-        [$1], [14], [ax_cxx_compile_alternatives=\"14 1y\"],\n-        [$1], [17], [ax_cxx_compile_alternatives=\"17 1z\"],\n-        [m4_fatal([invalid first argument `$1' to AX_CXX_COMPILE_STDCXX])])dnl\n-  m4_if([$2], [], [],\n-        [$2], [ext], [],\n-        [$2], [noext], [],\n-        [m4_fatal([invalid second argument `$2' to AX_CXX_COMPILE_STDCXX])])dnl\n-  m4_if([$3], [], [ax_cxx_compile_cxx$1_required=true],\n-        [$3], [mandatory], [ax_cxx_compile_cxx$1_required=true],\n-        [$3], [optional], [ax_cxx_compile_cxx$1_required=false],\n-        [m4_fatal([invalid third argument `$3' to AX_CXX_COMPILE_STDCXX])])\n-  AC_LANG_PUSH([C++])dnl\n-  ac_success=no\n-\n-  m4_if([$2], [noext], [], [dnl\n-  if test x$ac_success = xno; then\n-    for alternative in ${ax_cxx_compile_alternatives}; do\n-      switch=\"-std=gnu++${alternative}\"\n-      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n-      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n-                     $cachevar,\n-        [ac_save_CXX=\"$CXX\"\n-         CXX=\"$CXX $switch\"\n-         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n-          [eval $cachevar=yes],\n-          [eval $cachevar=no])\n-         CXX=\"$ac_save_CXX\"])\n-      if eval test x\\$$cachevar = xyes; then\n-        CXX=\"$CXX $switch\"\n-        if test -n \"$CXXCPP\" ; then\n-          CXXCPP=\"$CXXCPP $switch\"\n-        fi\n-        ac_success=yes\n-        break\n-      fi\n-    done\n-  fi])\n-\n-  m4_if([$2], [ext], [], [dnl\n-  if test x$ac_success = xno; then\n-    dnl HP's aCC needs +std=c++11 according to:\n-    dnl http://h21007.www2.hp.com/portal/download/files/unprot/aCxx/PDF_Release_Notes/769149-001.pdf\n-    dnl Cray's crayCC needs \"-h std=c++11\"\n-    for alternative in ${ax_cxx_compile_alternatives}; do\n-      for switch in -std=c++${alternative} +std=c++${alternative} \"-h std=c++${alternative}\"; do\n-        cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n-        AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n-                       $cachevar,\n-          [ac_save_CXX=\"$CXX\"\n-           CXX=\"$CXX $switch\"\n-           AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n-            [eval $cachevar=yes],\n-            [eval $cachevar=no])\n-           CXX=\"$ac_save_CXX\"])\n-        if eval test x\\$$cachevar = xyes; then\n-          CXX=\"$CXX $switch\"\n-          if test -n \"$CXXCPP\" ; then\n-            CXXCPP=\"$CXXCPP $switch\"\n-          fi\n-          ac_success=yes\n-          break\n-        fi\n-      done\n-      if test x$ac_success = xyes; then\n-        break\n-      fi\n-    done\n-  fi])\n-  AC_LANG_POP([C++])\n-  if test x$ax_cxx_compile_cxx$1_required = xtrue; then\n-    if test x$ac_success = xno; then\n-      AC_MSG_ERROR([*** A compiler with support for C++$1 language features is required.])\n-    fi\n-  fi\n-  if test x$ac_success = xno; then\n-    HAVE_CXX$1=0\n-    AC_MSG_NOTICE([No compiler with C++$1 support was found])\n-  else\n-    HAVE_CXX$1=1\n-    AC_DEFINE(HAVE_CXX$1,1,\n-              [define if the compiler supports basic C++$1 syntax])\n-  fi\n-  AC_SUBST(HAVE_CXX$1)\n-])\n-\n-\n-dnl  Test body for checking C++11 support\n-\n-m4_define([_AX_CXX_COMPILE_STDCXX_testbody_11],\n-  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n-)\n-\n-\n-dnl  Test body for checking C++14 support\n-\n-m4_define([_AX_CXX_COMPILE_STDCXX_testbody_14],\n-  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n-  _AX_CXX_COMPILE_STDCXX_testbody_new_in_14\n-)\n-\n-m4_define([_AX_CXX_COMPILE_STDCXX_testbody_17],\n-  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n-  _AX_CXX_COMPILE_STDCXX_testbody_new_in_14\n-  _AX_CXX_COMPILE_STDCXX_testbody_new_in_17\n-)\n-\n-dnl  Tests for new features in C++11\n-\n-m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_11], [[\n-\n-// If the compiler admits that it is not ready for C++11, why torture it?\n-// Hopefully, this will speed up the test.\n-\n-#ifndef __cplusplus\n-\n-#error \"This is not a C++ compiler\"\n-\n-#elif __cplusplus < 201103L\n-\n-#error \"This is not a C++11 compiler\"\n-\n-#else\n-\n-namespace cxx11\n-{\n-\n-  namespace test_static_assert\n-  {\n-\n-    template <typename T>\n-    struct check\n-    {\n-      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n-    };\n-\n-  }\n-\n-  namespace test_final_override\n-  {\n-\n-    struct Base\n-    {\n-      virtual ~Base() {}\n-      virtual void f() {}\n-    };\n-\n-    struct Derived : public Base\n-    {\n-      virtual ~Derived() override {}\n-      virtual void f() override {}\n-    };\n-\n-  }\n-\n-  namespace test_double_right_angle_brackets\n-  {\n-\n-    template < typename T >\n-    struct check {};\n-\n-    typedef check<void> single_type;\n-    typedef check<check<void>> double_type;\n-    typedef check<check<check<void>>> triple_type;\n-    typedef check<check<check<check<void>>>> quadruple_type;\n-\n-  }\n-\n-  namespace test_decltype\n-  {\n-\n-    int\n-    f()\n-    {\n-      int a = 1;\n-      decltype(a) b = 2;\n-      return a + b;\n-    }\n-\n-  }\n-\n-  namespace test_type_deduction\n-  {\n-\n-    template < typename T1, typename T2 >\n-    struct is_same\n-    {\n-      static const bool value = false;\n-    };\n-\n-    template < typename T >\n-    struct is_same<T, T>\n-    {\n-      static const bool value = true;\n-    };\n-\n-    template < typename T1, typename T2 >\n-    auto\n-    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n-    {\n-      return a1 + a2;\n-    }\n-\n-    int\n-    test(const int c, volatile int v)\n-    {\n-      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n-      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n-      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n-      auto ac = c;\n-      auto av = v;\n-      auto sumi = ac + av + 'x';\n-      auto sumf = ac + av + 1.0;\n-      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n-      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n-      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n-      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n-      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n-      return (sumf > 0.0) ? sumi : add(c, v);\n-    }\n-\n-  }\n-\n-  namespace test_noexcept\n-  {\n-\n-    int f() { return 0; }\n-    int g() noexcept { return 0; }\n-\n-    static_assert(noexcept(f()) == false, \"\");\n-    static_assert(noexcept(g()) == true, \"\");\n-\n-  }\n-\n-  namespace test_constexpr\n-  {\n-\n-    template < typename CharT >\n-    unsigned long constexpr\n-    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n-    {\n-      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n-    }\n-\n-    template < typename CharT >\n-    unsigned long constexpr\n-    strlen_c(const CharT *const s) noexcept\n-    {\n-      return strlen_c_r(s, 0UL);\n-    }\n-\n-    static_assert(strlen_c(\"\") == 0UL, \"\");\n-    static_assert(strlen_c(\"1\") == 1UL, \"\");\n-    static_assert(strlen_c(\"example\") == 7UL, \"\");\n-    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n-\n-  }\n-\n-  namespace test_rvalue_references\n-  {\n-\n-    template < int N >\n-    struct answer\n-    {\n-      static constexpr int value = N;\n-    };\n-\n-    answer<1> f(int&)       { return answer<1>(); }\n-    answer<2> f(const int&) { return answer<2>(); }\n-    answer<3> f(int&&)      { return answer<3>(); }\n-\n-    void\n-    test()\n-    {\n-      int i = 0;\n-      const int c = 0;\n-      static_assert(decltype(f(i))::value == 1, \"\");\n-      static_assert(decltype(f(c))::value == 2, \"\");\n-      static_assert(decltype(f(0))::value == 3, \"\");\n-    }\n-\n-  }\n-\n-  namespace test_uniform_initialization\n-  {\n-\n-    struct test\n-    {\n-      static const int zero {};\n-      static const int one {1};\n-    };\n-\n-    static_assert(test::zero == 0, \"\");\n-    static_assert(test::one == 1, \"\");\n-\n-  }\n-\n-  namespace test_lambdas\n-  {\n-\n-    void\n-    test1()\n-    {\n-      auto lambda1 = [](){};\n-      auto lambda2 = lambda1;\n-      lambda1();\n-      lambda2();\n-    }\n-\n-    int\n-    test2()\n-    {\n-      auto a = [](int i, int j){ return i + j; }(1, 2);\n-      auto b = []() -> int { return '0'; }();\n-      auto c = [=](){ return a + b; }();\n-      auto d = [&](){ return c; }();\n-      auto e = [a, &b](int x) mutable {\n-        const auto identity = [](int y){ return y; };\n-        for (auto i = 0; i < a; ++i)\n-          a += b--;\n-        return x + identity(a + b);\n-      }(0);\n-      return a + b + c + d + e;\n-    }\n-\n-    int\n-    test3()\n-    {\n-      const auto nullary = [](){ return 0; };\n-      const auto unary = [](int x){ return x; };\n-      using nullary_t = decltype(nullary);\n-      using unary_t = decltype(unary);\n-      const auto higher1st = [](nullary_t f){ return f(); };\n-      const auto higher2nd = [unary](nullary_t f1){\n-        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n-      };\n-      return higher1st(nullary) + higher2nd(nullary)(unary);\n-    }\n-\n-  }\n-\n-  namespace test_variadic_templates\n-  {\n-\n-    template <int...>\n-    struct sum;\n-\n-    template <int N0, int... N1toN>\n-    struct sum<N0, N1toN...>\n-    {\n-      static constexpr auto value = N0 + sum<N1toN...>::value;\n-    };\n-\n-    template <>\n-    struct sum<>\n-    {\n-      static constexpr auto value = 0;\n-    };\n-\n-    static_assert(sum<>::value == 0, \"\");\n-    static_assert(sum<1>::value == 1, \"\");\n-    static_assert(sum<23>::value == 23, \"\");\n-    static_assert(sum<1, 2>::value == 3, \"\");\n-    static_assert(sum<5, 5, 11>::value == 21, \"\");\n-    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n-\n-  }\n-\n-  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n-  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n-  // because of this.\n-  namespace test_template_alias_sfinae\n-  {\n-\n-    struct foo {};\n-\n-    template<typename T>\n-    using member = typename T::member_type;\n-\n-    template<typename T>\n-    void func(...) {}\n-\n-    template<typename T>\n-    void func(member<T>*) {}\n-\n-    void test();\n-\n-    void test() { func<foo>(0); }\n-\n-  }\n-\n-}  // namespace cxx11\n-\n-#endif  // __cplusplus >= 201103L\n-\n-]])\n-\n-\n-dnl  Tests for new features in C++14\n-\n-m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_14], [[\n-\n-// If the compiler admits that it is not ready for C++14, why torture it?\n-// Hopefully, this will speed up the test.\n-\n-#ifndef __cplusplus\n-\n-#error \"This is not a C++ compiler\"\n-\n-#elif __cplusplus < 201402L\n-\n-#error \"This is not a C++14 compiler\"\n-\n-#else\n-\n-namespace cxx14\n-{\n-\n-  namespace test_polymorphic_lambdas\n-  {\n-\n-    int\n-    test()\n-    {\n-      const auto lambda = [](auto&&... args){\n-        const auto istiny = [](auto x){\n-          return (sizeof(x) == 1UL) ? 1 : 0;\n-        };\n-        const int aretiny[] = { istiny(args)... };\n-        return aretiny[0];\n-      };\n-      return lambda(1, 1L, 1.0f, '1');\n-    }\n-\n-  }\n-\n-  namespace test_binary_literals\n-  {\n-\n-    constexpr auto ivii = 0b0000000000101010;\n-    static_assert(ivii == 42, \"wrong value\");\n-\n-  }\n-\n-  namespace test_generalized_constexpr\n-  {\n-\n-    template < typename CharT >\n-    constexpr unsigned long\n-    strlen_c(const CharT *const s) noexcept\n-    {\n-      auto length = 0UL;\n-      for (auto p = s; *p; ++p)\n-        ++length;\n-      return length;\n-    }\n-\n-    static_assert(strlen_c(\"\") == 0UL, \"\");\n-    static_assert(strlen_c(\"x\") == 1UL, \"\");\n-    static_assert(strlen_c(\"test\") == 4UL, \"\");\n-    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n-\n-  }\n-\n-  namespace test_lambda_init_capture\n-  {\n-\n-    int\n-    test()\n-    {\n-      auto x = 0;\n-      const auto lambda1 = [a = x](int b){ return a + b; };\n-      const auto lambda2 = [a = lambda1(x)](){ return a; };\n-      return lambda2();\n-    }\n-\n-  }\n-\n-  namespace test_digit_separators\n-  {\n-\n-    constexpr auto ten_million = 100'000'000;\n-    static_assert(ten_million == 100000000, \"\");\n-\n-  }\n-\n-  namespace test_return_type_deduction\n-  {\n-\n-    auto f(int& x) { return x; }\n-    decltype(auto) g(int& x) { return x; }\n-\n-    template < typename T1, typename T2 >\n-    struct is_same\n-    {\n-      static constexpr auto value = false;\n-    };\n-\n-    template < typename T >\n-    struct is_same<T, T>\n-    {\n-      static constexpr auto value = true;\n-    };\n-\n-    int\n-    test()\n-    {\n-      auto x = 0;\n-      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n-      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n-      return x;\n-    }\n-\n-  }\n-\n-}  // namespace cxx14\n-\n-#endif  // __cplusplus >= 201402L\n-\n-]])\n-\n-\n-dnl  Tests for new features in C++17\n-\n-m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_17], [[\n-\n-// If the compiler admits that it is not ready for C++17, why torture it?\n-// Hopefully, this will speed up the test.\n-\n-#ifndef __cplusplus\n-\n-#error \"This is not a C++ compiler\"\n-\n-#elif __cplusplus < 201703L\n-\n-#error \"This is not a C++17 compiler\"\n-\n-#else\n-\n-#include <initializer_list>\n-#include <utility>\n-#include <type_traits>\n-\n-namespace cxx17\n-{\n-\n-  namespace test_constexpr_lambdas\n-  {\n-\n-    constexpr int foo = [](){return 42;}();\n-\n-  }\n-\n-  namespace test::nested_namespace::definitions\n-  {\n-\n-  }\n-\n-  namespace test_fold_expression\n-  {\n-\n-    template<typename... Args>\n-    int multiply(Args... args)\n-    {\n-      return (args * ... * 1);\n-    }\n-\n-    template<typename... Args>\n-    bool all(Args... args)\n-    {\n-      return (args && ...);\n-    }\n-\n-  }\n-\n-  namespace test_extended_static_assert\n-  {\n-\n-    static_assert (true);\n-\n-  }\n-\n-  namespace test_auto_brace_init_list\n-  {\n-\n-    auto foo = {5};\n-    auto bar {5};\n-\n-    static_assert(std::is_same<std::initializer_list<int>, decltype(foo)>::value);\n-    static_assert(std::is_same<int, decltype(bar)>::value);\n-  }\n-\n-  namespace test_typename_in_template_template_parameter\n-  {\n-\n-    template<template<typename> typename X> struct D;\n-\n-  }\n-\n-  namespace test_fallthrough_nodiscard_maybe_unused_attributes\n-  {\n-\n-    int f1()\n-    {\n-      return 42;\n-    }\n-\n-    [[nodiscard]] int f2()\n-    {\n-      [[maybe_unused]] auto unused = f1();\n-\n-      switch (f1())\n-      {\n-      case 17:\n-        f1();\n-        [[fallthrough]];\n-      case 42:\n-        f1();\n-      }\n-      return f1();\n-    }\n-\n-  }\n-\n-  namespace test_extended_aggregate_initialization\n-  {\n-\n-    struct base1\n-    {\n-      int b1, b2 = 42;\n-    };\n-\n-    struct base2\n-    {\n-      base2() {\n-        b3 = 42;\n-      }\n-      int b3;\n-    };\n-\n-    struct derived : base1, base2\n-    {\n-        int d;\n-    };\n-\n-    derived d1 {{1, 2}, {}, 4};  // full initialization\n-    derived d2 {{}, {}, 4};      // value-initialized bases\n-\n-  }\n-\n-  namespace test_general_range_based_for_loop\n-  {\n-\n-    struct iter\n-    {\n-      int i;\n-\n-      int& operator* ()\n-      {\n-        return i;\n-      }\n-\n-      const int& operator* () const\n-      {\n-        return i;\n-      }\n-\n-      iter& operator++()\n-      {\n-        ++i;\n-        return *this;\n-      }\n-    };\n-\n-    struct sentinel\n-    {\n-      int i;\n-    };\n-\n-    bool operator== (const iter& i, const sentinel& s)\n-    {\n-      return i.i == s.i;\n-    }\n-\n-    bool operator!= (const iter& i, const sentinel& s)\n-    {\n-      return !(i == s);\n-    }\n-\n-    struct range\n-    {\n-      iter begin() const\n-      {\n-        return {0};\n-      }\n-\n-      sentinel end() const\n-      {\n-        return {5};\n-      }\n-    };\n-\n-    void f()\n-    {\n-      range r {};\n-\n-      for (auto i : r)\n-      {\n-        [[maybe_unused]] auto v = i;\n-      }\n-    }\n-\n-  }\n-\n-  namespace test_lambda_capture_asterisk_this_by_value\n-  {\n-\n-    struct t\n-    {\n-      int i;\n-      int foo()\n-      {\n-        return [*this]()\n-        {\n-          return i;\n-        }();\n-      }\n-    };\n-\n-  }\n-\n-  namespace test_enum_class_construction\n-  {\n-\n-    enum class byte : unsigned char\n-    {};\n-\n-    byte foo {42};\n-\n-  }\n-\n-  namespace test_constexpr_if\n-  {\n-\n-    template <bool cond>\n-    int f ()\n-    {\n-      if constexpr(cond)\n-      {\n-        return 13;\n-      }\n-      else\n-      {\n-        return 42;\n-      }\n-    }\n-\n-  }\n-\n-  namespace test_selection_statement_with_initializer\n-  {\n-\n-    int f()\n-    {\n-      return 13;\n-    }\n-\n-    int f2()\n-    {\n-      if (auto i = f(); i > 0)\n-      {\n-        return 3;\n-      }\n-\n-      switch (auto i = f(); i + 4)\n-      {\n-      case 17:\n-        return 2;\n-\n-      default:\n-        return 1;\n-      }\n-    }\n-\n-  }\n-\n-  namespace test_template_argument_deduction_for_class_templates\n-  {\n-\n-    template <typename T1, typename T2>\n-    struct pair\n-    {\n-      pair (T1 p1, T2 p2)\n-        : m1 {p1},\n-          m2 {p2}\n-      {}\n-\n-      T1 m1;\n-      T2 m2;\n-    };\n-\n-    void f()\n-    {\n-      [[maybe_unused]] auto p = pair{13, 42u};\n-    }\n-\n-  }\n-\n-  namespace test_non_type_auto_template_parameters\n-  {\n-\n-    template <auto n>\n-    struct B\n-    {};\n-\n-    B<5> b1;\n-    B<'a'> b2;\n-\n-  }\n-\n-  namespace test_structured_bindings\n-  {\n-\n-    int arr[2] = { 1, 2 };\n-    std::pair<int, int> pr = { 1, 2 };\n-\n-    auto f1() -> int(&)[2]\n-    {\n-      return arr;\n-    }\n-\n-    auto f2() -> std::pair<int, int>&\n-    {\n-      return pr;\n-    }\n-\n-    struct S\n-    {\n-      int x1 : 2;\n-      volatile double y1;\n-    };\n-\n-    S f3()\n-    {\n-      return {};\n-    }\n-\n-    auto [ x1, y1 ] = f1();\n-    auto& [ xr1, yr1 ] = f1();\n-    auto [ x2, y2 ] = f2();\n-    auto& [ xr2, yr2 ] = f2();\n-    const auto [ x3, y3 ] = f3();\n-\n-  }\n-\n-  namespace test_exception_spec_type_system\n-  {\n-\n-    struct Good {};\n-    struct Bad {};\n-\n-    void g1() noexcept;\n-    void g2();\n-\n-    template<typename T>\n-    Bad\n-    f(T*, T*);\n-\n-    template<typename T1, typename T2>\n-    Good\n-    f(T1*, T2*);\n-\n-    static_assert (std::is_same_v<Good, decltype(f(g1, g2))>);\n-\n-  }\n-\n-  namespace test_inline_variables\n-  {\n-\n-    template<class T> void f(T)\n-    {}\n-\n-    template<class T> inline T g(T)\n-    {\n-      return T{};\n-    }\n-\n-    template<> inline void f<>(int)\n-    {}\n-\n-    template<> int g<>(int)\n-    {\n-      return 5;\n-    }\n-\n-  }\n-\n-}  // namespace cxx17\n-\n-#endif  // __cplusplus < 201703L\n-\n-]])"
      },
      {
        "sha": "c788ca9bd435fbfe4e1642281aabd7f9492786ff",
        "filename": "build-aux/m4/ax_gcc_func_attribute.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 223,
        "changes": 223,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_gcc_func_attribute.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_gcc_func_attribute.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_gcc_func_attribute.m4?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,223 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_gcc_func_attribute.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_GCC_FUNC_ATTRIBUTE(ATTRIBUTE)\n-#\n-# DESCRIPTION\n-#\n-#   This macro checks if the compiler supports one of GCC's function\n-#   attributes; many other compilers also provide function attributes with\n-#   the same syntax. Compiler warnings are used to detect supported\n-#   attributes as unsupported ones are ignored by default so quieting\n-#   warnings when using this macro will yield false positives.\n-#\n-#   The ATTRIBUTE parameter holds the name of the attribute to be checked.\n-#\n-#   If ATTRIBUTE is supported define HAVE_FUNC_ATTRIBUTE_<ATTRIBUTE>.\n-#\n-#   The macro caches its result in the ax_cv_have_func_attribute_<attribute>\n-#   variable.\n-#\n-#   The macro currently supports the following function attributes:\n-#\n-#    alias\n-#    aligned\n-#    alloc_size\n-#    always_inline\n-#    artificial\n-#    cold\n-#    const\n-#    constructor\n-#    constructor_priority for constructor attribute with priority\n-#    deprecated\n-#    destructor\n-#    dllexport\n-#    dllimport\n-#    error\n-#    externally_visible\n-#    flatten\n-#    format\n-#    format_arg\n-#    gnu_inline\n-#    hot\n-#    ifunc\n-#    leaf\n-#    malloc\n-#    noclone\n-#    noinline\n-#    nonnull\n-#    noreturn\n-#    nothrow\n-#    optimize\n-#    pure\n-#    unused\n-#    used\n-#    visibility\n-#    warning\n-#    warn_unused_result\n-#    weak\n-#    weakref\n-#\n-#   Unsuppored function attributes will be tested with a prototype returning\n-#   an int and not accepting any arguments and the result of the check might\n-#   be wrong or meaningless so use with care.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2013 Gabriele Svelto <gabriele.svelto@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved.  This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 3\n-\n-AC_DEFUN([AX_GCC_FUNC_ATTRIBUTE], [\n-    AS_VAR_PUSHDEF([ac_var], [ax_cv_have_func_attribute_$1])\n-\n-    AC_CACHE_CHECK([for __attribute__(($1))], [ac_var], [\n-        AC_LINK_IFELSE([AC_LANG_PROGRAM([\n-            m4_case([$1],\n-                [alias], [\n-                    int foo( void ) { return 0; }\n-                    int bar( void ) __attribute__(($1(\"foo\")));\n-                ],\n-                [aligned], [\n-                    int foo( void ) __attribute__(($1(32)));\n-                ],\n-                [alloc_size], [\n-                    void *foo(int a) __attribute__(($1(1)));\n-                ],\n-                [always_inline], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [artificial], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [cold], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [const], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [constructor_priority], [\n-                    int foo( void ) __attribute__((__constructor__(65535/2)));\n-                ],\n-                [constructor], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [deprecated], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [destructor], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [dllexport], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [dllimport], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [error], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [externally_visible], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [flatten], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [format], [\n-                    int foo(const char *p, ...) __attribute__(($1(printf, 1, 2)));\n-                ],\n-                [format_arg], [\n-                    char *foo(const char *p) __attribute__(($1(1)));\n-                ],\n-                [gnu_inline], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [hot], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [ifunc], [\n-                    int my_foo( void ) { return 0; }\n-                    static int (*resolve_foo(void))(void) { return my_foo; }\n-                    int foo( void ) __attribute__(($1(\"resolve_foo\")));\n-                ],\n-                [leaf], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [malloc], [\n-                    void *foo( void ) __attribute__(($1));\n-                ],\n-                [noclone], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [noinline], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [nonnull], [\n-                    int foo(char *p) __attribute__(($1(1)));\n-                ],\n-                [noreturn], [\n-                    void foo( void ) __attribute__(($1));\n-                ],\n-                [nothrow], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [optimize], [\n-                    __attribute__(($1(3))) int foo( void ) { return 0; }\n-                ],\n-                [pure], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [unused], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [used], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [visibility], [\n-                    int foo_def( void ) __attribute__(($1(\"default\")));\n-                    int foo_hid( void ) __attribute__(($1(\"hidden\")));\n-                    int foo_int( void ) __attribute__(($1(\"internal\")));\n-                    int foo_pro( void ) __attribute__(($1(\"protected\")));\n-                ],\n-                [warning], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [warn_unused_result], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [weak], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [weakref], [\n-                    static int foo( void ) { return 0; }\n-                    static int bar( void ) __attribute__(($1(\"foo\")));\n-                ],\n-                [\n-                 m4_warn([syntax], [Unsupported attribute $1, the test may fail])\n-                 int foo( void ) __attribute__(($1));\n-                ]\n-            )], [])\n-            ],\n-            dnl GCC doesn't exit with an error if an unknown attribute is\n-            dnl provided but only outputs a warning, so accept the attribute\n-            dnl only if no warning were issued.\n-            [AS_IF([test -s conftest.err],\n-                [AS_VAR_SET([ac_var], [no])],\n-                [AS_VAR_SET([ac_var], [yes])])],\n-            [AS_VAR_SET([ac_var], [no])])\n-    ])\n-\n-    AS_IF([test yes = AS_VAR_GET([ac_var])],\n-        [AC_DEFINE_UNQUOTED(AS_TR_CPP(HAVE_FUNC_ATTRIBUTE_$1), 1,\n-            [Define to 1 if the system has the `$1' function attribute])], [])\n-\n-    AS_VAR_POPDEF([ac_var])\n-])"
      },
      {
        "sha": "1598d077ff020f1f0be8388fded01c871c946354",
        "filename": "build-aux/m4/ax_pthread.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 507,
        "changes": 507,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_pthread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/ax_pthread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_pthread.m4?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,507 +0,0 @@\n-# ===========================================================================\n-#        https://www.gnu.org/software/autoconf-archive/ax_pthread.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_PTHREAD([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])\n-#\n-# DESCRIPTION\n-#\n-#   This macro figures out how to build C programs using POSIX threads. It\n-#   sets the PTHREAD_LIBS output variable to the threads library and linker\n-#   flags, and the PTHREAD_CFLAGS output variable to any special C compiler\n-#   flags that are needed. (The user can also force certain compiler\n-#   flags/libs to be tested by setting these environment variables.)\n-#\n-#   Also sets PTHREAD_CC to any special C compiler that is needed for\n-#   multi-threaded programs (defaults to the value of CC otherwise). (This\n-#   is necessary on AIX to use the special cc_r compiler alias.)\n-#\n-#   NOTE: You are assumed to not only compile your program with these flags,\n-#   but also to link with them as well. For example, you might link with\n-#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n-#\n-#   If you are only building threaded programs, you may wish to use these\n-#   variables in your default LIBS, CFLAGS, and CC:\n-#\n-#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n-#     CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-#     CC=\"$PTHREAD_CC\"\n-#\n-#   In addition, if the PTHREAD_CREATE_JOINABLE thread-attribute constant\n-#   has a nonstandard name, this macro defines PTHREAD_CREATE_JOINABLE to\n-#   that name (e.g. PTHREAD_CREATE_UNDETACHED on AIX).\n-#\n-#   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the\n-#   PTHREAD_PRIO_INHERIT symbol is defined when compiling with\n-#   PTHREAD_CFLAGS.\n-#\n-#   ACTION-IF-FOUND is a list of shell commands to run if a threads library\n-#   is found, and ACTION-IF-NOT-FOUND is a list of commands to run it if it\n-#   is not found. If ACTION-IF-FOUND is not specified, the default action\n-#   will define HAVE_PTHREAD.\n-#\n-#   Please let the authors know if this macro fails on any platform, or if\n-#   you have any other suggestions or comments. This macro was based on work\n-#   by SGJ on autoconf scripts for FFTW (http://www.fftw.org/) (with help\n-#   from M. Frigo), as well as ac_pthread and hb_pthread macros posted by\n-#   Alejandro Forero Cuervo to the autoconf macro repository. We are also\n-#   grateful for the helpful feedback of numerous users.\n-#\n-#   Updated for Autoconf 2.68 by Daniel Richard G.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Steven G. Johnson <stevenj@alum.mit.edu>\n-#   Copyright (c) 2011 Daniel Richard G. <skunk@iSKUNK.ORG>\n-#   Copyright (c) 2019 Marc Stevens <marc.stevens@cwi.nl>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <https://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 27\n-\n-AU_ALIAS([ACX_PTHREAD], [AX_PTHREAD])\n-AC_DEFUN([AX_PTHREAD], [\n-AC_REQUIRE([AC_CANONICAL_HOST])\n-AC_REQUIRE([AC_PROG_CC])\n-AC_REQUIRE([AC_PROG_SED])\n-AC_LANG_PUSH([C])\n-ax_pthread_ok=no\n-\n-# We used to check for pthread.h first, but this fails if pthread.h\n-# requires special compiler flags (e.g. on Tru64 or Sequent).\n-# It gets checked for in the link test anyway.\n-\n-# First of all, check if the user has set any of the PTHREAD_LIBS,\n-# etcetera environment variables, and if threads linking works using\n-# them:\n-if test \"x$PTHREAD_CFLAGS$PTHREAD_LIBS\" != \"x\"; then\n-        ax_pthread_save_CC=\"$CC\"\n-        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n-        ax_pthread_save_LIBS=\"$LIBS\"\n-        AS_IF([test \"x$PTHREAD_CC\" != \"x\"], [CC=\"$PTHREAD_CC\"])\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-        AC_MSG_CHECKING([for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS])\n-        AC_LINK_IFELSE([AC_LANG_CALL([], [pthread_join])], [ax_pthread_ok=yes])\n-        AC_MSG_RESULT([$ax_pthread_ok])\n-        if test \"x$ax_pthread_ok\" = \"xno\"; then\n-                PTHREAD_LIBS=\"\"\n-                PTHREAD_CFLAGS=\"\"\n-        fi\n-        CC=\"$ax_pthread_save_CC\"\n-        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n-        LIBS=\"$ax_pthread_save_LIBS\"\n-fi\n-\n-# We must check for the threads library under a number of different\n-# names; the ordering is very important because some systems\n-# (e.g. DEC) have both -lpthread and -lpthreads, where one of the\n-# libraries is broken (non-POSIX).\n-\n-# Create a list of thread flags to try. Items with a \",\" contain both\n-# C compiler flags (before \",\") and linker flags (after \",\"). Other items\n-# starting with a \"-\" are C compiler flags, and remaining items are\n-# library names, except for \"none\" which indicates that we try without\n-# any flags at all, and \"pthread-config\" which is a program returning\n-# the flags for the Pth emulation library.\n-\n-ax_pthread_flags=\"pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n-\n-# The ordering *is* (sometimes) important.  Some notes on the\n-# individual items follow:\n-\n-# pthreads: AIX (must check this before -lpthread)\n-# none: in case threads are in libc; should be tried before -Kthread and\n-#       other compiler flags to prevent continual compiler warnings\n-# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n-# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads), Tru64\n-#           (Note: HP C rejects this with \"bad form for `-t' option\")\n-# -pthreads: Solaris/gcc (Note: HP C also rejects)\n-# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n-#      doesn't hurt to check since this sometimes defines pthreads and\n-#      -D_REENTRANT too), HP C (must be checked before -lpthread, which\n-#      is present but should not be used directly; and before -mthreads,\n-#      because the compiler interprets this as \"-mt\" + \"-hreads\")\n-# -mthreads: Mingw32/gcc, Lynx/gcc\n-# pthread: Linux, etcetera\n-# --thread-safe: KAI C++\n-# pthread-config: use pthread-config program (for GNU Pth library)\n-\n-case $host_os in\n-\n-        freebsd*)\n-\n-        # -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n-        # lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n-\n-        ax_pthread_flags=\"-kthread lthread $ax_pthread_flags\"\n-        ;;\n-\n-        hpux*)\n-\n-        # From the cc(1) man page: \"[-mt] Sets various -D flags to enable\n-        # multi-threading and also sets -lpthread.\"\n-\n-        ax_pthread_flags=\"-mt -pthread pthread $ax_pthread_flags\"\n-        ;;\n-\n-        openedition*)\n-\n-        # IBM z/OS requires a feature-test macro to be defined in order to\n-        # enable POSIX threads at all, so give the user a hint if this is\n-        # not set. (We don't define these ourselves, as they can affect\n-        # other portions of the system API in unpredictable ways.)\n-\n-        AC_EGREP_CPP([AX_PTHREAD_ZOS_MISSING],\n-            [\n-#            if !defined(_OPEN_THREADS) && !defined(_UNIX03_THREADS)\n-             AX_PTHREAD_ZOS_MISSING\n-#            endif\n-            ],\n-            [AC_MSG_WARN([IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.])])\n-        ;;\n-\n-        solaris*)\n-\n-        # On Solaris (at least, for some versions), libc contains stubbed\n-        # (non-functional) versions of the pthreads routines, so link-based\n-        # tests will erroneously succeed. (N.B.: The stubs are missing\n-        # pthread_cleanup_push, or rather a function called by this macro,\n-        # so we could check for that, but who knows whether they'll stub\n-        # that too in a future libc.)  So we'll check first for the\n-        # standard Solaris way of linking pthreads (-mt -lpthread).\n-\n-        ax_pthread_flags=\"-mt,-lpthread pthread $ax_pthread_flags\"\n-        ;;\n-esac\n-\n-# Are we compiling with Clang?\n-\n-AC_CACHE_CHECK([whether $CC is Clang],\n-    [ax_cv_PTHREAD_CLANG],\n-    [ax_cv_PTHREAD_CLANG=no\n-     # Note that Autoconf sets GCC=yes for Clang as well as GCC\n-     if test \"x$GCC\" = \"xyes\"; then\n-        AC_EGREP_CPP([AX_PTHREAD_CC_IS_CLANG],\n-            [/* Note: Clang 2.7 lacks __clang_[a-z]+__ */\n-#            if defined(__clang__) && defined(__llvm__)\n-             AX_PTHREAD_CC_IS_CLANG\n-#            endif\n-            ],\n-            [ax_cv_PTHREAD_CLANG=yes])\n-     fi\n-    ])\n-ax_pthread_clang=\"$ax_cv_PTHREAD_CLANG\"\n-\n-\n-# GCC generally uses -pthread, or -pthreads on some platforms (e.g. SPARC)\n-\n-# Note that for GCC and Clang -pthread generally implies -lpthread,\n-# except when -nostdlib is passed.\n-# This is problematic using libtool to build C++ shared libraries with pthread:\n-# [1] https://gcc.gnu.org/bugzilla/show_bug.cgi?id=25460\n-# [2] https://bugzilla.redhat.com/show_bug.cgi?id=661333\n-# [3] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=468555\n-# To solve this, first try -pthread together with -lpthread for GCC\n-\n-AS_IF([test \"x$GCC\" = \"xyes\"],\n-      [ax_pthread_flags=\"-pthread,-lpthread -pthread -pthreads $ax_pthread_flags\"])\n-\n-# Clang takes -pthread (never supported any other flag), but we'll try with -lpthread first\n-\n-AS_IF([test \"x$ax_pthread_clang\" = \"xyes\"],\n-      [ax_pthread_flags=\"-pthread,-lpthread -pthread\"])\n-\n-\n-# The presence of a feature test macro requesting re-entrant function\n-# definitions is, on some systems, a strong hint that pthreads support is\n-# correctly enabled\n-\n-case $host_os in\n-        darwin* | hpux* | linux* | osf* | solaris*)\n-        ax_pthread_check_macro=\"_REENTRANT\"\n-        ;;\n-\n-        aix*)\n-        ax_pthread_check_macro=\"_THREAD_SAFE\"\n-        ;;\n-\n-        *)\n-        ax_pthread_check_macro=\"--\"\n-        ;;\n-esac\n-AS_IF([test \"x$ax_pthread_check_macro\" = \"x--\"],\n-      [ax_pthread_check_cond=0],\n-      [ax_pthread_check_cond=\"!defined($ax_pthread_check_macro)\"])\n-\n-\n-if test \"x$ax_pthread_ok\" = \"xno\"; then\n-for ax_pthread_try_flag in $ax_pthread_flags; do\n-\n-        case $ax_pthread_try_flag in\n-                none)\n-                AC_MSG_CHECKING([whether pthreads work without any flags])\n-                ;;\n-\n-                *,*)\n-                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\1/\"`\n-                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\2/\"`\n-                AC_MSG_CHECKING([whether pthreads work with \"$PTHREAD_CFLAGS\" and \"$PTHREAD_LIBS\"])\n-                ;;\n-\n-                -*)\n-                AC_MSG_CHECKING([whether pthreads work with $ax_pthread_try_flag])\n-                PTHREAD_CFLAGS=\"$ax_pthread_try_flag\"\n-                ;;\n-\n-                pthread-config)\n-                AC_CHECK_PROG([ax_pthread_config], [pthread-config], [yes], [no])\n-                AS_IF([test \"x$ax_pthread_config\" = \"xno\"], [continue])\n-                PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n-                PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n-                ;;\n-\n-                *)\n-                AC_MSG_CHECKING([for the pthreads library -l$ax_pthread_try_flag])\n-                PTHREAD_LIBS=\"-l$ax_pthread_try_flag\"\n-                ;;\n-        esac\n-\n-        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n-        ax_pthread_save_LIBS=\"$LIBS\"\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-\n-        # Check for various functions.  We must include pthread.h,\n-        # since some functions may be macros.  (On the Sequent, we\n-        # need a special flag -Kthread to make this header compile.)\n-        # We check for pthread_join because it is in -lpthread on IRIX\n-        # while pthread_create is in libc.  We check for pthread_attr_init\n-        # due to DEC craziness with -lpthreads.  We check for\n-        # pthread_cleanup_push because it is one of the few pthread\n-        # functions on Solaris that doesn't have a non-functional libc stub.\n-        # We try pthread_create on general principles.\n-\n-        AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>\n-#                       if $ax_pthread_check_cond\n-#                        error \"$ax_pthread_check_macro must be defined\"\n-#                       endif\n-                        static void *some_global = NULL;\n-                        static void routine(void *a)\n-                          {\n-                             /* To avoid any unused-parameter or\n-                                unused-but-set-parameter warning.  */\n-                             some_global = a;\n-                          }\n-                        static void *start_routine(void *a) { return a; }],\n-                       [pthread_t th; pthread_attr_t attr;\n-                        pthread_create(&th, 0, start_routine, 0);\n-                        pthread_join(th, 0);\n-                        pthread_attr_init(&attr);\n-                        pthread_cleanup_push(routine, 0);\n-                        pthread_cleanup_pop(0) /* ; */])],\n-            [ax_pthread_ok=yes],\n-            [])\n-\n-        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n-        LIBS=\"$ax_pthread_save_LIBS\"\n-\n-        AC_MSG_RESULT([$ax_pthread_ok])\n-        AS_IF([test \"x$ax_pthread_ok\" = \"xyes\"], [break])\n-\n-        PTHREAD_LIBS=\"\"\n-        PTHREAD_CFLAGS=\"\"\n-done\n-fi\n-\n-\n-# Clang needs special handling, because older versions handle the -pthread\n-# option in a rather... idiosyncratic way\n-\n-if test \"x$ax_pthread_clang\" = \"xyes\"; then\n-\n-        # Clang takes -pthread; it has never supported any other flag\n-\n-        # (Note 1: This will need to be revisited if a system that Clang\n-        # supports has POSIX threads in a separate library.  This tends not\n-        # to be the way of modern systems, but it's conceivable.)\n-\n-        # (Note 2: On some systems, notably Darwin, -pthread is not needed\n-        # to get POSIX threads support; the API is always present and\n-        # active.  We could reasonably leave PTHREAD_CFLAGS empty.  But\n-        # -pthread does define _REENTRANT, and while the Darwin headers\n-        # ignore this macro, third-party headers might not.)\n-\n-        # However, older versions of Clang make a point of warning the user\n-        # that, in an invocation where only linking and no compilation is\n-        # taking place, the -pthread option has no effect (\"argument unused\n-        # during compilation\").  They expect -pthread to be passed in only\n-        # when source code is being compiled.\n-        #\n-        # Problem is, this is at odds with the way Automake and most other\n-        # C build frameworks function, which is that the same flags used in\n-        # compilation (CFLAGS) are also used in linking.  Many systems\n-        # supported by AX_PTHREAD require exactly this for POSIX threads\n-        # support, and in fact it is often not straightforward to specify a\n-        # flag that is used only in the compilation phase and not in\n-        # linking.  Such a scenario is extremely rare in practice.\n-        #\n-        # Even though use of the -pthread flag in linking would only print\n-        # a warning, this can be a nuisance for well-run software projects\n-        # that build with -Werror.  So if the active version of Clang has\n-        # this misfeature, we search for an option to squash it.\n-\n-        AC_CACHE_CHECK([whether Clang needs flag to prevent \"argument unused\" warning when linking with -pthread],\n-            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG],\n-            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=unknown\n-             # Create an alternate version of $ac_link that compiles and\n-             # links in two steps (.c -> .o, .o -> exe) instead of one\n-             # (.c -> exe), because the warning occurs only in the second\n-             # step\n-             ax_pthread_save_ac_link=\"$ac_link\"\n-             ax_pthread_sed='s/conftest\\.\\$ac_ext/conftest.$ac_objext/g'\n-             ax_pthread_link_step=`$as_echo \"$ac_link\" | sed \"$ax_pthread_sed\"`\n-             ax_pthread_2step_ac_link=\"($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)\"\n-             ax_pthread_save_CFLAGS=\"$CFLAGS\"\n-             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do\n-                AS_IF([test \"x$ax_pthread_try\" = \"xunknown\"], [break])\n-                CFLAGS=\"-Werror -Wunknown-warning-option $ax_pthread_try -pthread $ax_pthread_save_CFLAGS\"\n-                ac_link=\"$ax_pthread_save_ac_link\"\n-                AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],\n-                    [ac_link=\"$ax_pthread_2step_ac_link\"\n-                     AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],\n-                         [break])\n-                    ])\n-             done\n-             ac_link=\"$ax_pthread_save_ac_link\"\n-             CFLAGS=\"$ax_pthread_save_CFLAGS\"\n-             AS_IF([test \"x$ax_pthread_try\" = \"x\"], [ax_pthread_try=no])\n-             ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=\"$ax_pthread_try\"\n-            ])\n-\n-        case \"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" in\n-                no | unknown) ;;\n-                *) PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG $PTHREAD_CFLAGS\" ;;\n-        esac\n-\n-fi # $ax_pthread_clang = yes\n-\n-\n-\n-# Various other checks:\n-if test \"x$ax_pthread_ok\" = \"xyes\"; then\n-        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n-        ax_pthread_save_LIBS=\"$LIBS\"\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-\n-        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.\n-        AC_CACHE_CHECK([for joinable pthread attribute],\n-            [ax_cv_PTHREAD_JOINABLE_ATTR],\n-            [ax_cv_PTHREAD_JOINABLE_ATTR=unknown\n-             for ax_pthread_attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n-                 AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],\n-                                                 [int attr = $ax_pthread_attr; return attr /* ; */])],\n-                                [ax_cv_PTHREAD_JOINABLE_ATTR=$ax_pthread_attr; break],\n-                                [])\n-             done\n-            ])\n-        AS_IF([test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xunknown\" && \\\n-               test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xPTHREAD_CREATE_JOINABLE\" && \\\n-               test \"x$ax_pthread_joinable_attr_defined\" != \"xyes\"],\n-              [AC_DEFINE_UNQUOTED([PTHREAD_CREATE_JOINABLE],\n-                                  [$ax_cv_PTHREAD_JOINABLE_ATTR],\n-                                  [Define to necessary symbol if this constant\n-                                   uses a non-standard name on your system.])\n-               ax_pthread_joinable_attr_defined=yes\n-              ])\n-\n-        AC_CACHE_CHECK([whether more special flags are required for pthreads],\n-            [ax_cv_PTHREAD_SPECIAL_FLAGS],\n-            [ax_cv_PTHREAD_SPECIAL_FLAGS=no\n-             case $host_os in\n-             solaris*)\n-             ax_cv_PTHREAD_SPECIAL_FLAGS=\"-D_POSIX_PTHREAD_SEMANTICS\"\n-             ;;\n-             esac\n-            ])\n-        AS_IF([test \"x$ax_cv_PTHREAD_SPECIAL_FLAGS\" != \"xno\" && \\\n-               test \"x$ax_pthread_special_flags_added\" != \"xyes\"],\n-              [PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_SPECIAL_FLAGS $PTHREAD_CFLAGS\"\n-               ax_pthread_special_flags_added=yes])\n-\n-        AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],\n-            [ax_cv_PTHREAD_PRIO_INHERIT],\n-            [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],\n-                                             [[int i = PTHREAD_PRIO_INHERIT;\n-                                               return i;]])],\n-                            [ax_cv_PTHREAD_PRIO_INHERIT=yes],\n-                            [ax_cv_PTHREAD_PRIO_INHERIT=no])\n-            ])\n-        AS_IF([test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\" && \\\n-               test \"x$ax_pthread_prio_inherit_defined\" != \"xyes\"],\n-              [AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], [1], [Have PTHREAD_PRIO_INHERIT.])\n-               ax_pthread_prio_inherit_defined=yes\n-              ])\n-\n-        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n-        LIBS=\"$ax_pthread_save_LIBS\"\n-\n-        # More AIX lossage: compile with *_r variant\n-        if test \"x$GCC\" != \"xyes\"; then\n-            case $host_os in\n-                aix*)\n-                AS_CASE([\"x/$CC\"],\n-                    [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],\n-                    [#handle absolute path differently from PATH based program lookup\n-                     AS_CASE([\"x$CC\"],\n-                         [x/*],\n-                         [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC=\"${CC}_r\"])],\n-                         [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])\n-                ;;\n-            esac\n-        fi\n-fi\n-\n-test -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n-\n-AC_SUBST([PTHREAD_LIBS])\n-AC_SUBST([PTHREAD_CFLAGS])\n-AC_SUBST([PTHREAD_CC])\n-\n-# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\n-if test \"x$ax_pthread_ok\" = \"xyes\"; then\n-        ifelse([$1],,[AC_DEFINE([HAVE_PTHREAD],[1],[Define if you have POSIX threads libraries and header files.])],[$1])\n-        :\n-else\n-        ax_pthread_ok=no\n-        $2\n-fi\n-AC_LANG_POP\n-])dnl AX_PTHREAD"
      },
      {
        "sha": "aa0111e5a20f0c2bfd7c8de310dd0102ee1a2c6d",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 78,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,78 +0,0 @@\n-dnl Copyright (c) 2013-2015 The Bitcoin Core developers\n-dnl Distributed under the MIT software license, see the accompanying\n-dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-AC_DEFUN([BITCOIN_FIND_BDB48],[\n-  AC_ARG_VAR(BDB_CFLAGS, [C compiler flags for BerkeleyDB, bypasses autodetection])\n-  AC_ARG_VAR(BDB_LIBS, [Linker flags for BerkeleyDB, bypasses autodetection])\n-\n-  if test \"x$BDB_CFLAGS\" = \"x\"; then\n-    AC_MSG_CHECKING([for Berkeley DB C++ headers])\n-    BDB_CPPFLAGS=\n-    bdbpath=X\n-    bdb48path=X\n-    bdbdirlist=\n-    for _vn in 4.8 48 4 5 5.3 ''; do\n-      for _pfx in b lib ''; do\n-        bdbdirlist=\"$bdbdirlist ${_pfx}db${_vn}\"\n-      done\n-    done\n-    for searchpath in $bdbdirlist ''; do\n-      test -n \"${searchpath}\" && searchpath=\"${searchpath}/\"\n-      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        #include <${searchpath}db_cxx.h>\n-      ]],[[\n-        #if !((DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 8) || DB_VERSION_MAJOR > 4)\n-          #error \"failed to find bdb 4.8+\"\n-        #endif\n-      ]])],[\n-        if test \"x$bdbpath\" = \"xX\"; then\n-          bdbpath=\"${searchpath}\"\n-        fi\n-      ],[\n-        continue\n-      ])\n-      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        #include <${searchpath}db_cxx.h>\n-      ]],[[\n-        #if !(DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR == 8)\n-          #error \"failed to find bdb 4.8\"\n-        #endif\n-      ]])],[\n-        bdb48path=\"${searchpath}\"\n-        break\n-      ],[])\n-    done\n-    if test \"x$bdbpath\" = \"xX\"; then\n-      AC_MSG_RESULT([no])\n-      AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n-    elif test \"x$bdb48path\" = \"xX\"; then\n-      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n-      AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n-        AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n-      ],[\n-        AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n-      ])\n-    else\n-      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n-      bdbpath=\"${bdb48path}\"\n-    fi\n-  else\n-    BDB_CPPFLAGS=${BDB_CFLAGS}\n-  fi\n-  AC_SUBST(BDB_CPPFLAGS)\n-\n-  if test \"x$BDB_LIBS\" = \"x\"; then\n-    # TODO: Ideally this could find the library version and make sure it matches the headers being used\n-    for searchlib in db_cxx-4.8 db_cxx db4_cxx; do\n-      AC_CHECK_LIB([$searchlib],[main],[\n-        BDB_LIBS=\"-l${searchlib}\"\n-        break\n-      ])\n-    done\n-    if test \"x$BDB_LIBS\" = \"x\"; then\n-        AC_MSG_ERROR([libdb_cxx missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n-    fi\n-  fi\n-  AC_SUBST(BDB_LIBS)\n-])"
      },
      {
        "sha": "6c7665830b30325e0c8a9e477cdd64d13236c212",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 357,
        "changes": 357,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,357 +0,0 @@\n-dnl Copyright (c) 2013-2016 The Bitcoin Core developers\n-dnl Distributed under the MIT software license, see the accompanying\n-dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-dnl Helper for cases where a qt dependency is not met.\n-dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n-AC_DEFUN([BITCOIN_QT_FAIL],[\n-  if test \"x$bitcoin_qt_want_version\" = xauto && test \"x$bitcoin_qt_force\" != xyes; then\n-    if test \"x$bitcoin_enable_qt\" != xno; then\n-      AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n-    fi\n-    bitcoin_enable_qt=no\n-    bitcoin_enable_qt_test=no\n-  else\n-    AC_MSG_ERROR([$1])\n-  fi\n-])\n-\n-AC_DEFUN([BITCOIN_QT_CHECK],[\n-  if test \"x$bitcoin_enable_qt\" != xno && test \"x$bitcoin_qt_want_version\" != xno; then\n-    true\n-    $1\n-  else\n-    true\n-    $2\n-  fi\n-])\n-\n-dnl BITCOIN_QT_PATH_PROGS([FOO], [foo foo2], [/path/to/search/first], [continue if missing])\n-dnl Helper for finding the path of programs needed for Qt.\n-dnl Inputs: $1: Variable to be set\n-dnl Inputs: $2: List of programs to search for\n-dnl Inputs: $3: Look for $2 here before $PATH\n-dnl Inputs: $4: If \"yes\", don't fail if $2 is not found.\n-dnl Output: $1 is set to the path of $2 if found. $2 are searched in order.\n-AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n-  BITCOIN_QT_CHECK([\n-    if test \"x$3\" != x; then\n-      AC_PATH_PROGS($1,$2,,$3)\n-    else\n-      AC_PATH_PROGS($1,$2)\n-    fi\n-    if test \"x$$1\" = x && test \"x$4\" != xyes; then\n-      BITCOIN_QT_FAIL([$1 not found])\n-    fi\n-  ])\n-])\n-\n-dnl Initialize qt input.\n-dnl This must be called before any other BITCOIN_QT* macros to ensure that\n-dnl input variables are set correctly.\n-dnl CAUTION: Do not use this inside of a conditional.\n-AC_DEFUN([BITCOIN_QT_INIT],[\n-  dnl enable qt support\n-  AC_ARG_WITH([gui],\n-    [AS_HELP_STRING([--with-gui@<:@=no|qt5|auto@:>@],\n-    [build bitcoin-qt GUI (default=auto)])],\n-    [\n-     bitcoin_qt_want_version=$withval\n-     if test \"x$bitcoin_qt_want_version\" = xyes; then\n-       bitcoin_qt_force=yes\n-       bitcoin_qt_want_version=auto\n-     fi\n-    ],\n-    [bitcoin_qt_want_version=auto])\n-\n-  AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n-  AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n-  AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n-  AC_ARG_WITH([qt-translationdir],[AS_HELP_STRING([--with-qt-translationdir=PLUGIN_DIR],[specify qt translation path (overridden by pkgconfig)])], [qt_translation_path=$withval], [])\n-  AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path])], [qt_bin_path=$withval], [])\n-\n-  AC_ARG_WITH([qtdbus],\n-    [AS_HELP_STRING([--with-qtdbus],\n-    [enable DBus support (default is yes if qt is enabled and QtDBus is found, except on Android)])],\n-    [use_dbus=$withval],\n-    [use_dbus=auto])\n-\n-  dnl Android doesn't support D-Bus and certainly doesn't use it for notifications\n-  case $host in\n-    *android*)\n-      if test \"x$use_dbus\" != xyes; then\n-        use_dbus=no\n-      fi\n-    ;;\n-  esac\n-\n-  AC_SUBST(QT_TRANSLATION_DIR,$qt_translation_path)\n-])\n-\n-dnl Find Qt libraries and includes.\n-dnl\n-dnl   BITCOIN_QT_CONFIGURE([MINIMUM-VERSION])\n-dnl\n-dnl Outputs: See _BITCOIN_QT_FIND_LIBS\n-dnl Outputs: Sets variables for all qt-related tools.\n-dnl Outputs: bitcoin_enable_qt, bitcoin_enable_qt_dbus, bitcoin_enable_qt_test\n-AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n-  qt_version=\">= $1\"\n-  qt_lib_prefix=\"Qt5\"\n-  BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS])\n-\n-  dnl This is ugly and complicated. Yuck. Works as follows:\n-  dnl For Qt5, we can check a header to find out whether Qt is build\n-  dnl statically. When Qt is built statically, some plugins must be linked into\n-  dnl the final binary as well.\n-  dnl With Qt5, languages moved into core and the WindowsIntegration plugin was\n-  dnl added.\n-  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n-  dnl results to QT_LIBS.\n-  BITCOIN_QT_CHECK([\n-  TEMP_CPPFLAGS=$CPPFLAGS\n-  TEMP_CXXFLAGS=$CXXFLAGS\n-  CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n-  _BITCOIN_QT_IS_STATIC\n-  if test \"x$bitcoin_cv_static_qt\" = xyes; then\n-    _BITCOIN_QT_FIND_STATIC_PLUGINS\n-    AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-    if test \"x$TARGET_OS\" != xandroid; then\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n-      AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n-    fi\n-    if test \"x$TARGET_OS\" = xwindows; then\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n-      AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n-    elif test \"x$TARGET_OS\" = xlinux; then\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n-      AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n-    elif test \"x$TARGET_OS\" = xdarwin; then\n-      AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n-      AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n-    elif test \"x$TARGET_OS\" = xandroid; then\n-      QT_LIBS=\"-Wl,--export-dynamic,--undefined=JNI_OnLoad -lqtforandroid -ljnigraphics -landroid -lqtfreetype -lQt5EglSupport $QT_LIBS\"\n-      AC_DEFINE(QT_QPA_PLATFORM_ANDROID, 1, [Define this symbol if the qt platform is android])\n-    fi\n-  fi\n-  CPPFLAGS=$TEMP_CPPFLAGS\n-  CXXFLAGS=$TEMP_CXXFLAGS\n-  ])\n-\n-  if test \"x$qt_bin_path\" = x; then\n-    qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n-  fi\n-\n-  if test \"x$use_hardening\" != xno; then\n-    BITCOIN_QT_CHECK([\n-    AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)\n-    TEMP_CPPFLAGS=$CPPFLAGS\n-    TEMP_CXXFLAGS=$CXXFLAGS\n-    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-    CXXFLAGS=\"$PIE_FLAGS $CXXFLAGS\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        #include <QtCore/qconfig.h>\n-        #ifndef QT_VERSION\n-        #  include <QtCore/qglobal.h>\n-        #endif\n-      ]],\n-      [[\n-        #if defined(QT_REDUCE_RELOCATIONS)\n-        choke\n-        #endif\n-      ]])],\n-      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIE_FLAGS ],\n-      [ AC_MSG_RESULT(no); QT_PIE_FLAGS=$PIC_FLAGS]\n-    )\n-    CPPFLAGS=$TEMP_CPPFLAGS\n-    CXXFLAGS=$TEMP_CXXFLAGS\n-    ])\n-  else\n-    BITCOIN_QT_CHECK([\n-    AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)\n-    TEMP_CPPFLAGS=$CPPFLAGS\n-    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        #include <QtCore/qconfig.h>\n-        #ifndef QT_VERSION\n-        #  include <QtCore/qglobal.h>\n-        #endif\n-      ]],\n-      [[\n-        #if defined(QT_REDUCE_RELOCATIONS)\n-        choke\n-        #endif\n-      ]])],\n-      [ AC_MSG_RESULT(no)],\n-      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIC_FLAGS]\n-    )\n-    CPPFLAGS=$TEMP_CPPFLAGS\n-    ])\n-  fi\n-\n-  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt5 moc5 moc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt5 uic5 uic], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt5 rcc5 rcc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt5 lrelease5 lrelease], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt5 lupdate5 lupdate],$qt_bin_path, yes)\n-\n-  MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'\n-  case $host in\n-    *darwin*)\n-     BITCOIN_QT_CHECK([\n-       MOC_DEFS=\"${MOC_DEFS} -DQ_OS_MAC\"\n-       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n-       AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS=\"$QT_LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n-     ])\n-    ;;\n-    *mingw*)\n-       BITCOIN_QT_CHECK([\n-         AX_CHECK_LINK_FLAG([[-mwindows]],[QT_LDFLAGS=\"$QT_LDFLAGS -mwindows\"],[AC_MSG_WARN(-mwindows linker support not detected)])\n-       ])\n-  esac\n-\n-\n-  dnl enable qt support\n-  AC_MSG_CHECKING([whether to build ]AC_PACKAGE_NAME[ GUI])\n-  BITCOIN_QT_CHECK([\n-    bitcoin_enable_qt=yes\n-    bitcoin_enable_qt_test=yes\n-    if test \"x$have_qt_test\" = xno; then\n-      bitcoin_enable_qt_test=no\n-    fi\n-    bitcoin_enable_qt_dbus=no\n-    if test \"x$use_dbus\" != xno && test \"x$have_qt_dbus\" = xyes; then\n-      bitcoin_enable_qt_dbus=yes\n-    fi\n-    if test \"x$use_dbus\" = xyes && test \"x$have_qt_dbus\" = xno; then\n-      AC_MSG_ERROR([libQtDBus not found. Install libQtDBus or remove --with-qtdbus.])\n-    fi\n-    if test \"x$LUPDATE\" = x; then\n-      AC_MSG_WARN([lupdate is required to update qt translations])\n-    fi\n-  ],[\n-    bitcoin_enable_qt=no\n-  ])\n-  if test x$bitcoin_enable_qt = xyes; then\n-    AC_MSG_RESULT([$bitcoin_enable_qt ($qt_lib_prefix)])\n-  else\n-    AC_MSG_RESULT([$bitcoin_enable_qt])\n-  fi\n-\n-  AC_SUBST(QT_PIE_FLAGS)\n-  AC_SUBST(QT_INCLUDES)\n-  AC_SUBST(QT_LIBS)\n-  AC_SUBST(QT_LDFLAGS)\n-  AC_SUBST(QT_DBUS_INCLUDES)\n-  AC_SUBST(QT_DBUS_LIBS)\n-  AC_SUBST(QT_TEST_INCLUDES)\n-  AC_SUBST(QT_TEST_LIBS)\n-  AC_SUBST(QT_SELECT, qt5)\n-  AC_SUBST(MOC_DEFS)\n-])\n-\n-dnl All macros below are internal and should _not_ be used from the main\n-dnl configure.ac.\n-dnl ----\n-\n-dnl Internal. Check if the linked version of Qt was built as static libs.\n-dnl Requires: Qt5.\n-dnl Requires: INCLUDES and LIBS must be populated as necessary.\n-dnl Output: bitcoin_cv_static_qt=yes|no\n-AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n-  AC_CACHE_CHECK(for static Qt, bitcoin_cv_static_qt,[\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        #include <QtCore/qconfig.h>\n-        #ifndef QT_VERSION\n-        #  include <QtCore/qglobal.h>\n-        #endif\n-      ]],\n-      [[\n-        #if !defined(QT_STATIC)\n-        choke\n-        #endif\n-      ]])],\n-      [bitcoin_cv_static_qt=yes],\n-      [bitcoin_cv_static_qt=no])\n-    ])\n-])\n-\n-dnl Internal. Check if the link-requirements for static plugins are met.\n-dnl Requires: INCLUDES and LIBS must be populated as necessary.\n-dnl Inputs: $1: A series of Q_IMPORT_PLUGIN().\n-dnl Inputs: $2: The libraries that resolve $1.\n-dnl Output: QT_LIBS is prepended or configure exits.\n-AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n-  AC_MSG_CHECKING(for static Qt plugins: $2)\n-  CHECK_STATIC_PLUGINS_TEMP_LIBS=\"$LIBS\"\n-  LIBS=\"$2 $QT_LIBS $LIBS\"\n-  AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-    #define QT_STATICPLUGIN\n-    #include <QtPlugin>\n-    $1]],\n-    [[return 0;]])],\n-    [AC_MSG_RESULT(yes); QT_LIBS=\"$2 $QT_LIBS\"],\n-    [AC_MSG_RESULT(no); BITCOIN_QT_FAIL(Could not resolve: $2)])\n-  LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n-])\n-\n-dnl Internal. Find paths necessary for linking qt static plugins\n-dnl Inputs: qt_plugin_path. optional.\n-dnl Outputs: QT_LIBS is appended\n-AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n-    if test \"x$qt_plugin_path\" != x; then\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n-      if test -d \"$qt_plugin_path/accessible\"; then\n-        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-      fi\n-      if test -d \"$qt_plugin_path/platforms/android\"; then\n-        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms/android -lqtfreetype -lEGL\"\n-      fi\n-      PKG_CHECK_MODULES([QTFONTDATABASE], [Qt5FontDatabaseSupport], [QT_LIBS=\"-lQt5FontDatabaseSupport $QT_LIBS\"])\n-      PKG_CHECK_MODULES([QTEVENTDISPATCHER], [Qt5EventDispatcherSupport], [QT_LIBS=\"-lQt5EventDispatcherSupport $QT_LIBS\"])\n-      PKG_CHECK_MODULES([QTTHEME], [Qt5ThemeSupport], [QT_LIBS=\"-lQt5ThemeSupport $QT_LIBS\"])\n-      PKG_CHECK_MODULES([QTDEVICEDISCOVERY], [Qt5DeviceDiscoverySupport], [QT_LIBS=\"-lQt5DeviceDiscoverySupport $QT_LIBS\"])\n-      PKG_CHECK_MODULES([QTACCESSIBILITY], [Qt5AccessibilitySupport], [QT_LIBS=\"-lQt5AccessibilitySupport $QT_LIBS\"])\n-      PKG_CHECK_MODULES([QTFB], [Qt5FbSupport], [QT_LIBS=\"-lQt5FbSupport $QT_LIBS\"])\n-      if test \"x$TARGET_OS\" = xlinux; then\n-        PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n-      elif test \"x$TARGET_OS\" = xdarwin; then\n-        PKG_CHECK_MODULES([QTCLIPBOARD], [Qt5ClipboardSupport], [QT_LIBS=\"-lQt5ClipboardSupport $QT_LIBS\"])\n-        PKG_CHECK_MODULES([QTGRAPHICS], [Qt5GraphicsSupport], [QT_LIBS=\"-lQt5GraphicsSupport $QT_LIBS\"])\n-        PKG_CHECK_MODULES([QTCGL], [Qt5CglSupport], [QT_LIBS=\"-lQt5CglSupport $QT_LIBS\"])\n-      fi\n-    fi\n-])\n-\n-dnl Internal. Find Qt libraries using pkg-config.\n-dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n-AC_DEFUN([_BITCOIN_QT_FIND_LIBS],[\n-  BITCOIN_QT_CHECK([\n-    PKG_CHECK_MODULES([QT_CORE], [${qt_lib_prefix}Core $qt_version], [],\n-                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Core $qt_version not found])])\n-  ])\n-  BITCOIN_QT_CHECK([\n-    PKG_CHECK_MODULES([QT_GUI], [${qt_lib_prefix}Gui $qt_version], [],\n-                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Gui $qt_version not found])])\n-  ])\n-  BITCOIN_QT_CHECK([\n-    PKG_CHECK_MODULES([QT_WIDGETS], [${qt_lib_prefix}Widgets $qt_version], [],\n-                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Widgets $qt_version not found])])\n-  ])\n-  BITCOIN_QT_CHECK([\n-    PKG_CHECK_MODULES([QT_NETWORK], [${qt_lib_prefix}Network $qt_version], [],\n-                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Network $qt_version not found])])\n-  ])\n-  QT_INCLUDES=\"$QT_CORE_CFLAGS $QT_GUI_CFLAGS $QT_WIDGETS_CFLAGS $QT_NETWORK_CFLAGS\"\n-  QT_LIBS=\"$QT_CORE_LIBS $QT_GUI_LIBS $QT_WIDGETS_LIBS $QT_NETWORK_LIBS\"\n-\n-  BITCOIN_QT_CHECK([\n-    PKG_CHECK_MODULES([QT_TEST], [${qt_lib_prefix}Test $qt_version], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n-    if test \"x$use_dbus\" != xno; then\n-      PKG_CHECK_MODULES([QT_DBUS], [${qt_lib_prefix}DBus $qt_version], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n-    fi\n-  ])\n-])"
      },
      {
        "sha": "7841042ac877b20ea8b35e634f1b4088aae1647f",
        "filename": "build-aux/m4/bitcoin_subdir_to_include.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/bitcoin_subdir_to_include.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/bitcoin_subdir_to_include.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_subdir_to_include.m4?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,18 +0,0 @@\n-dnl Copyright (c) 2013-2014 The Bitcoin Core developers\n-dnl Distributed under the MIT software license, see the accompanying\n-dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-dnl BITCOIN_SUBDIR_TO_INCLUDE([CPPFLAGS-VARIABLE-NAME],[SUBDIRECTORY-NAME],[HEADER-FILE])\n-dnl SUBDIRECTORY-NAME must end with a path separator\n-AC_DEFUN([BITCOIN_SUBDIR_TO_INCLUDE],[\n-  if test \"x$2\" = \"x\"; then\n-    AC_MSG_RESULT([default])\n-  else\n-    echo \"#include <$2$3.h>\" >conftest.cpp\n-    newinclpath=`${CXXCPP} ${CPPFLAGS} -M conftest.cpp 2>/dev/null | [ tr -d '\\\\n\\\\r\\\\\\\\' | sed -e 's/^.*[[:space:]:]\\(\\/[^[:space:]]*\\)]$3[\\.h[[:space:]].*$/\\1/' -e t -e d`]\n-    AC_MSG_RESULT([${newinclpath}])\n-    if test \"x${newinclpath}\" != \"x\"; then\n-      eval \"$1=\\\"\\$$1\\\"' -I${newinclpath}'\"\n-    fi\n-  fi\n-])"
      },
      {
        "sha": "75c43f9a92d3d6ac2a5d1aee89e97bab7a89f545",
        "filename": "build-aux/m4/l_atomic.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/l_atomic.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build-aux/m4/l_atomic.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/l_atomic.m4?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,46 +0,0 @@\n-dnl Copyright (c) 2015 Tim Kosse <tim.kosse@filezilla-project.org>\n-dnl Copying and distribution of this file, with or without modification, are\n-dnl permitted in any medium without royalty provided the copyright notice\n-dnl and this notice are preserved. This file is offered as-is, without any\n-dnl warranty.\n-\n-# Some versions of gcc/libstdc++ require linking with -latomic if\n-# using the C++ atomic library.\n-#\n-# Sourced from http://bugs.debian.org/797228\n-\n-m4_define([_CHECK_ATOMIC_testbody], [[\n-  #include <atomic>\n-  #include <cstdint>\n-\n-  int main() {\n-    std::atomic<int64_t> a{};\n-\n-    int64_t v = 5;\n-    int64_t r = a.fetch_add(v);\n-    return static_cast<int>(r);\n-  }\n-]])\n-\n-AC_DEFUN([CHECK_ATOMIC], [\n-\n-  AC_LANG_PUSH(C++)\n-\n-  AC_MSG_CHECKING([whether std::atomic can be used without link library])\n-\n-  AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_ATOMIC_testbody])],[\n-      AC_MSG_RESULT([yes])\n-    ],[\n-      AC_MSG_RESULT([no])\n-      LIBS=\"$LIBS -latomic\"\n-      AC_MSG_CHECKING([whether std::atomic needs -latomic])\n-      AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_ATOMIC_testbody])],[\n-          AC_MSG_RESULT([yes])\n-        ],[\n-          AC_MSG_RESULT([no])\n-          AC_MSG_FAILURE([cannot figure out how to use std::atomic])\n-        ])\n-    ])\n-\n-  AC_LANG_POP\n-])"
      },
      {
        "sha": "ae8120fdf3a44ab47700fe40a3a3cd93f3cb8d96",
        "filename": "build_msvc/.gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/.gitignore?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,27 +0,0 @@\n-# Build directories\n-Debug/*\n-Release/*\n-.vs\n-packages/*\n-*/Obj\n-*/Debug\n-*/Release\n-*/x64\n-*.vcxproj.user\n-\n-# .vcxproj files that are auto-generated by the msvc-autogen.py script.\n-libbitcoin_cli/libbitcoin_cli.vcxproj\n-libbitcoin_common/libbitcoin_common.vcxproj\n-libbitcoin_crypto/libbitcoin_crypto.vcxproj\n-libbitcoin_server/libbitcoin_server.vcxproj\n-libbitcoin_util/libbitcoin_util.vcxproj\n-libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj\n-libbitcoin_wallet/libbitcoin_wallet.vcxproj\n-libbitcoin_zmq/libbitcoin_zmq.vcxproj\n-bench_bitcoin/bench_bitcoin.vcxproj\n-libtest_util/libtest_util.vcxproj\n-\n-*/Win32\n-libbitcoin_qt/QtGeneratedFiles/*\n-test_bitcoin-qt/QtGeneratedFiles/*\n-vcpkg_installed\n\\ No newline at end of file"
      },
      {
        "sha": "87ea556a23b31897ac72907ebb5f9ee9516b7a1b",
        "filename": "build_msvc/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 79,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/README.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,79 +0,0 @@\n-Building Bitcoin Core with Visual Studio\n-========================================\n-\n-Introduction\n----------------------\n-Solution and project files to build the Bitcoin Core applications `msbuild` or Visual Studio can be found in the `build_msvc` directory. The build has been tested with Visual Studio 2017 and 2019.\n-\n-Building with Visual Studio is an alternative to the Linux based [cross-compiler build](https://github.com/bitcoin/bitcoin/blob/master/doc/build-windows.md).\n-\n-Quick Start\n----------------------\n-The minimal steps required to build Bitcoin Core with the msbuild toolchain are below. More detailed instructions are contained in the following sections.\n-\n-```\n-cd build_msvc\n-py -3 msvc-autogen.py\n-msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /t:build\n-```\n-\n-Dependencies\n----------------------\n-A number of [open source libraries](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) are required in order to be able to build Bitcoin Core.\n-\n-Options for installing the dependencies in a Visual Studio compatible manner are:\n-\n-- Use Microsoft's [vcpkg](https://docs.microsoft.com/en-us/cpp/vcpkg) to download the source packages and build locally. This is the recommended approach.\n-- Download the source code, build each dependency, add the required include paths, link libraries and binary tools to the Visual Studio project files.\n-- Use [nuget](https://www.nuget.org/) packages with the understanding that any binary files have been compiled by an untrusted third party.\n-\n-The [external dependencies](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) required for building are listed in the `build_msvc/vcpkg.json` file. The `msbuild` project files are configured to automatically install the `vcpkg` dependencies.\n-\n-Qt\n----------------------\n-In order to build the Bitcoin Core a static build of Qt is required. The runtime library version (e.g. v141, v142) and platform type (x86 or x64) must also match.\n-\n-Some prebuilt x64 versions of Qt can be downloaded from [here](https://github.com/sipsorcery/qt_win_binary/releases). Please be aware these downloads are NOT officially sanctioned by Bitcoin Core and are provided for developer convenience only. They should NOT be used for builds that will be used in a production environment or with real funds.\n-\n-To determine which Qt prebuilt version to download open the `.appveyor.yml` file and note the `QT_DOWNLOAD_URL`. When extracting the zip file the destination path must be set to `C:\\`. This is due to the way that Qt includes, libraries and tools use internal paths.\n-\n-To build Bitcoin Core without Qt unload or disable the `bitcoin-qt`, `libbitcoin_qt` and `test_bitcoin-qt` projects.\n-\n-Building\n----------------------\n-The instructions below use `vcpkg` to install the dependencies.\n-\n-- Install [`vcpkg`](https://github.com/Microsoft/vcpkg).\n-\n-- Use Python to generate `*.vcxproj` from Makefile\n-\n-```\n-PS >py -3 msvc-autogen.py\n-```\n-\n-- An optional step is to adjust the settings in the `build_msvc` directory and the `common.init.vcxproj` file. This project file contains settings that are common to all projects such as the runtime library version and target Windows SDK version. The Qt directories can also be set.\n-\n-- To build from the command line with the Visual Studio 2017 toolchain use:\n-\n-```\n-msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /p:PlatformToolset=v141 /t:build\n-```\n-\n-- To build from the command line with the Visual Studio 2019 toolchain use:\n-\n-```\n-msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /t:build\n-```\n-\n-- Alternatively open the `build_msvc/bitcoin.sln` file in Visual Studio.\n-\n-AppVeyor\n----------------------\n-The .appveyor.yml in the root directory is suitable to perform builds on [AppVeyor](https://www.appveyor.com/) Continuous Integration servers. The simplest way to perform an AppVeyor build is to fork Bitcoin Core and then configure a new AppVeyor Project pointing to the forked repository.\n-\n-For safety reasons the Bitcoin Core .appveyor.yml file has the artifact options disabled. The build will be performed but no executable files will be available. To enable artifacts on a forked repository uncomment the lines shown below:\n-\n-```\n-    #- 7z a bitcoin-%APPVEYOR_BUILD_VERSION%.zip %APPVEYOR_BUILD_FOLDER%\\build_msvc\\%platform%\\%configuration%\\*.exe\n-    #- path: bitcoin-%APPVEYOR_BUILD_VERSION%.zip\n-```"
      },
      {
        "sha": "128c1bd8e7b6bd0622eefee3b5be73c47907b1e8",
        "filename": "build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "status": "removed",
        "additions": 0,
        "deletions": 62,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,62 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{1125654E-E1B2-4431-8B5C-62EA9A2FEECB}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup>\n-    <ConfigurationType>Application</ConfigurationType>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n-  </PropertyGroup>\n-  <ItemGroup>\n-@SOURCE_FILES@\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n-      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n-      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n-      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n-      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n-      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n-      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n-      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n-      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n-      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n-      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libtest_util\\libtest_util.vcxproj\">\n-      <Project>{1e065f03-3566-47d0-8fa9-daa72b084e7d}</Project>\n-    </ProjectReference>\n-  </ItemGroup>\n-  <Target Name=\"RawBenchHeaderGen\" BeforeTargets=\"PrepareForBuild\">\n-    <PropertyGroup>\n-      <ErrorText>There was an error executing the raw bench header generation task.</ErrorText>\n-    </PropertyGroup>\n-    <ItemGroup>\n-      <RawBenchFile Include=\"..\\..\\src\\bench\\data\\*.raw\" />\n-    </ItemGroup>\n-    <HeaderFromHexdump RawFilePath=\"%(RawBenchFile.FullPath)\" HeaderFilePath=\"%(RawBenchFile.FullPath).h\" SourceHeader=\"static unsigned const char %(RawBenchFile.Filename)_raw[] = {\" SourceFooter=\"};\" />\n-  </Target>\n-  <Import Label=\"hexdumpTarget\" Project=\"..\\msbuild\\tasks\\hexdump.targets\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "e5e0e978f89819af98f55803da8e8368f2815d86",
        "filename": "build_msvc/bitcoin-cli/bitcoin-cli.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 31,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/bitcoin-cli/bitcoin-cli.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/bitcoin-cli/bitcoin-cli.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-cli/bitcoin-cli.vcxproj?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,31 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{0B2D7431-F876-4A58-87BF-F748338CD3BF}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup>\n-    <ConfigurationType>Application</ConfigurationType>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\bitcoin-cli.cpp\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n-      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n-      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n-      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n-      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n-    </ProjectReference>\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "17cd31a52ef27db296d34fd810a98d7dc515ad61",
        "filename": "build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 83,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,83 +0,0 @@\n-\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <Import Project=\"..\\common.qt.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{7E99172D-7FF2-4CB6-B736-AC9B76ED412A}</ProjectGuid>\n-    <ConfigurationType>Application</ConfigurationType>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\qt\\main.cpp\" />\n-    <ResourceCompile Include=\"..\\..\\src\\qt\\res\\bitcoin-qt-res.rc\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n-      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n-      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n-      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n-      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_qt\\libbitcoin_qt.vcxproj\">\n-      <Project>{2b4abff8-d1fd-4845-88c9-1f3c0a6512bf}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n-      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n-      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n-      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n-      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n-      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n-      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n-      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n-    </ProjectReference>\n-  </ItemGroup>\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Release'\">\n-    <ClCompile>\n-      <AdditionalIncludeDirectories>$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-    </ClCompile>\n-    <Link>\n-      <AdditionalDependencies>$(QtReleaseLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n-      <AdditionalOptions>/ignore:4206</AdditionalOptions>\n-    </Link>\n-    <ResourceCompile>\n-      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n-      <PreprocessorDefinitions>HAVE_CONFIG_H;_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-    </ResourceCompile>\n-  </ItemDefinitionGroup>\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Debug'\">\n-    <ClCompile>\n-      <AdditionalIncludeDirectories>$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-    </ClCompile>\n-    <Link>\n-      <AdditionalDependencies>$(QtDebugLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n-      <AdditionalOptions>/ignore:4206</AdditionalOptions>\n-    </Link>\n-    <ResourceCompile>\n-      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n-      <PreprocessorDefinitions>HAVE_CONFIG_H;_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-    </ResourceCompile>\n-  </ItemDefinitionGroup>\n-\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-</Project>"
      },
      {
        "sha": "4e9b4916a0fc9e909ff06662ca28d1bf502736af",
        "filename": "build_msvc/bitcoin-tx/bitcoin-tx.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/bitcoin-tx/bitcoin-tx.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/bitcoin-tx/bitcoin-tx.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-tx/bitcoin-tx.vcxproj?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,37 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>Application</ConfigurationType>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\bitcoin-tx.cpp\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n-      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n-      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n-      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n-      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n-      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n-      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n-    </ProjectReference>\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "40c5db5522881ef14b9090009e50d9b90b394395",
        "filename": "build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 55,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,55 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{84DE8790-EDE3-4483-81AC-C32F15E861F4}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>Application</ConfigurationType>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\bitcoin-wallet.cpp\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n-      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n-      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n-      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n-      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n-      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n-      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n-      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n-      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n-      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_wallet_tool\\libbitcoin_wallet_tool.vcxproj\">\n-      <Project>{f91ac55e-6f5e-4c58-9ac5-b40db7deef93}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n-      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n-      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n-    </ProjectReference>\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "5e9715451f5a9309ae2d4989cfed2e5ec337e929",
        "filename": "build_msvc/bitcoin.sln",
        "status": "removed",
        "additions": 0,
        "deletions": 252,
        "changes": 252,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/bitcoin.sln",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/bitcoin.sln",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin.sln?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,252 +0,0 @@\n-Microsoft Visual Studio Solution File, Format Version 12.00\n-# Visual Studio Version 16\n-VisualStudioVersion = 16.0.28803.452\n-MinimumVisualStudioVersion = 10.0.40219.1\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoinconsensus\", \"libbitcoinconsensus\\libbitcoinconsensus.vcxproj\", \"{2B384FA8-9EE1-4544-93CB-0D733C25E8CE}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"testconsensus\", \"testconsensus\\testconsensus.vcxproj\", \"{E78473E9-B850-456C-9120-276301E04C06}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoind\", \"bitcoind\\bitcoind.vcxproj\", \"{D4513DDF-6013-44DC-ADCC-12EAF6D1F038}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_util\", \"libbitcoin_util\\libbitcoin_util.vcxproj\", \"{B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_common\", \"libbitcoin_common\\libbitcoin_common.vcxproj\", \"{7C87E378-DF58-482E-AA2F-1BC129BC19CE}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_crypto\", \"libbitcoin_crypto\\libbitcoin_crypto.vcxproj\", \"{6190199C-6CF4-4DAD-BFBD-93FA72A760C1}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_server\", \"libbitcoin_server\\libbitcoin_server.vcxproj\", \"{460FEE33-1FE1-483F-B3BF-931FF8E969A5}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libunivalue\", \"libunivalue\\libunivalue.vcxproj\", \"{5724BA7D-A09A-4BA8-800B-C4C1561B3D69}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_wallet\", \"libbitcoin_wallet\\libbitcoin_wallet.vcxproj\", \"{93B86837-B543-48A5-A89B-7C87ABB77DF2}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_zmq\", \"libbitcoin_zmq\\libbitcoin_zmq.vcxproj\", \"{792D487F-F14C-49FC-A9DE-3FC150F31C3F}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"test_bitcoin\", \"test_bitcoin\\test_bitcoin.vcxproj\", \"{A56B73DB-D46D-4882-8374-1FE3FFA08F07}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_cli\", \"libbitcoin_cli\\libbitcoin_cli.vcxproj\", \"{0667528C-D734-4009-ADF9-C0D6C4A5A5A6}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-cli\", \"bitcoin-cli\\bitcoin-cli.vcxproj\", \"{0B2D7431-F876-4A58-87BF-F748338CD3BF}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bench_bitcoin\", \"bench_bitcoin\\bench_bitcoin.vcxproj\", \"{1125654E-E1B2-4431-8B5C-62EA9A2FEECB}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-tx\", \"bitcoin-tx\\bitcoin-tx.vcxproj\", \"{D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-wallet\", \"bitcoin-wallet\\bitcoin-wallet.vcxproj\", \"{84DE8790-EDE3-4483-81AC-C32F15E861F4}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_wallet_tool\", \"libbitcoin_wallet_tool\\libbitcoin_wallet_tool.vcxproj\", \"{F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libsecp256k1\", \"libsecp256k1\\libsecp256k1.vcxproj\", \"{BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libleveldb\", \"libleveldb\\libleveldb.vcxproj\", \"{18430FEF-6B61-4C53-B396-718E02850F1B}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_qt\", \"libbitcoin_qt\\libbitcoin_qt.vcxproj\", \"{2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-qt\", \"bitcoin-qt\\bitcoin-qt.vcxproj\", \"{7E99172D-7FF2-4CB6-B736-AC9B76ED412A}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libtest_util\", \"libtest_util\\libtest_util.vcxproj\", \"{868474FD-35F6-4400-8EED-30A33E7521D4}\"\n-EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"test_bitcoin-qt\", \"test_bitcoin-qt\\test_bitcoin-qt.vcxproj\", \"{51201D5E-D939-4854-AE9D-008F03FF518E}\"\n-EndProject\n-Global\n-    GlobalSection(SolutionConfigurationPlatforms) = preSolution\n-        Debug|x64 = Debug|x64\n-        Debug|x86 = Debug|x86\n-        Release|x64 = Release|x64\n-        Release|x86 = Release|x86\n-    EndGlobalSection\n-    GlobalSection(ProjectConfigurationPlatforms) = postSolution\n-        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x64.ActiveCfg = Debug|x64\n-        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x64.Build.0 = Debug|x64\n-        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x86.ActiveCfg = Debug|Win32\n-        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x86.Build.0 = Debug|Win32\n-        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x64.ActiveCfg = Release|x64\n-        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x64.Build.0 = Release|x64\n-        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x86.ActiveCfg = Release|Win32\n-        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x86.Build.0 = Release|Win32\n-        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x64.ActiveCfg = Debug|x64\n-        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x64.Build.0 = Debug|x64\n-        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x86.ActiveCfg = Debug|Win32\n-        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x86.Build.0 = Debug|Win32\n-        {E78473E9-B850-456C-9120-276301E04C06}.Release|x64.ActiveCfg = Release|x64\n-        {E78473E9-B850-456C-9120-276301E04C06}.Release|x64.Build.0 = Release|x64\n-        {E78473E9-B850-456C-9120-276301E04C06}.Release|x86.ActiveCfg = Release|Win32\n-        {E78473E9-B850-456C-9120-276301E04C06}.Release|x86.Build.0 = Release|Win32\n-        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x64.ActiveCfg = Debug|x64\n-        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x64.Build.0 = Debug|x64\n-        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x86.ActiveCfg = Debug|Win32\n-        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x86.Build.0 = Debug|Win32\n-        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x64.ActiveCfg = Release|x64\n-        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x64.Build.0 = Release|x64\n-        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x86.ActiveCfg = Release|Win32\n-        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x86.Build.0 = Release|Win32\n-        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x64.ActiveCfg = Debug|x64\n-        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x64.Build.0 = Debug|x64\n-        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x86.ActiveCfg = Debug|Win32\n-        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x86.Build.0 = Debug|Win32\n-        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x64.ActiveCfg = Release|x64\n-        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x64.Build.0 = Release|x64\n-        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x86.ActiveCfg = Release|Win32\n-        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x86.Build.0 = Release|Win32\n-        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x64.ActiveCfg = Debug|x64\n-        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x64.Build.0 = Debug|x64\n-        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x86.ActiveCfg = Debug|Win32\n-        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x86.Build.0 = Debug|Win32\n-        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x64.ActiveCfg = Release|x64\n-        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x64.Build.0 = Release|x64\n-        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x86.ActiveCfg = Release|Win32\n-        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x86.Build.0 = Release|Win32\n-        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x64.ActiveCfg = Debug|x64\n-        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x64.Build.0 = Debug|x64\n-        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x86.ActiveCfg = Debug|Win32\n-        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x86.Build.0 = Debug|Win32\n-        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x64.ActiveCfg = Release|x64\n-        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x64.Build.0 = Release|x64\n-        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x86.ActiveCfg = Release|Win32\n-        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x86.Build.0 = Release|Win32\n-        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x64.ActiveCfg = Debug|x64\n-        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x64.Build.0 = Debug|x64\n-        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x86.ActiveCfg = Debug|Win32\n-        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x86.Build.0 = Debug|Win32\n-        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x64.ActiveCfg = Release|x64\n-        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x64.Build.0 = Release|x64\n-        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x86.ActiveCfg = Release|Win32\n-        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x86.Build.0 = Release|Win32\n-        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x64.ActiveCfg = Debug|x64\n-        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x64.Build.0 = Debug|x64\n-        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x86.ActiveCfg = Debug|Win32\n-        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x86.Build.0 = Debug|Win32\n-        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x64.ActiveCfg = Release|x64\n-        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x64.Build.0 = Release|x64\n-        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x86.ActiveCfg = Release|Win32\n-        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x86.Build.0 = Release|Win32\n-        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x64.ActiveCfg = Debug|x64\n-        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x64.Build.0 = Debug|x64\n-        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x86.ActiveCfg = Debug|Win32\n-        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x86.Build.0 = Debug|Win32\n-        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x64.ActiveCfg = Release|x64\n-        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x64.Build.0 = Release|x64\n-        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x86.ActiveCfg = Release|Win32\n-        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x86.Build.0 = Release|Win32\n-        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x64.ActiveCfg = Debug|x64\n-        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x64.Build.0 = Debug|x64\n-        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x86.ActiveCfg = Debug|Win32\n-        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x86.Build.0 = Debug|Win32\n-        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x64.ActiveCfg = Release|x64\n-        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x64.Build.0 = Release|x64\n-        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x86.ActiveCfg = Release|Win32\n-        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x86.Build.0 = Release|Win32\n-        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x64.ActiveCfg = Debug|x64\n-        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x64.Build.0 = Debug|x64\n-        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x86.ActiveCfg = Debug|Win32\n-        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x86.Build.0 = Debug|Win32\n-        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x64.ActiveCfg = Release|x64\n-        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x64.Build.0 = Release|x64\n-        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x86.ActiveCfg = Release|Win32\n-        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x86.Build.0 = Release|Win32\n-        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x64.ActiveCfg = Debug|x64\n-        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x64.Build.0 = Debug|x64\n-        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x86.ActiveCfg = Debug|Win32\n-        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x86.Build.0 = Debug|Win32\n-        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x64.ActiveCfg = Release|x64\n-        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x64.Build.0 = Release|x64\n-        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x86.ActiveCfg = Release|Win32\n-        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x86.Build.0 = Release|Win32\n-        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x64.ActiveCfg = Debug|x64\n-        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x64.Build.0 = Debug|x64\n-        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x86.ActiveCfg = Debug|Win32\n-        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x86.Build.0 = Debug|Win32\n-        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x64.ActiveCfg = Release|x64\n-        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x64.Build.0 = Release|x64\n-        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x86.ActiveCfg = Release|Win32\n-        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x86.Build.0 = Release|Win32\n-        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x64.ActiveCfg = Debug|x64\n-        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x64.Build.0 = Debug|x64\n-        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x86.ActiveCfg = Debug|Win32\n-        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x86.Build.0 = Debug|Win32\n-        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x64.ActiveCfg = Release|x64\n-        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x64.Build.0 = Release|x64\n-        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x86.ActiveCfg = Release|Win32\n-        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x86.Build.0 = Release|Win32\n-        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x64.ActiveCfg = Debug|x64\n-        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x64.Build.0 = Debug|x64\n-        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x86.ActiveCfg = Debug|Win32\n-        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x86.Build.0 = Debug|Win32\n-        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x64.ActiveCfg = Release|x64\n-        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x64.Build.0 = Release|x64\n-        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x86.ActiveCfg = Release|Win32\n-        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x86.Build.0 = Release|Win32\n-        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x64.ActiveCfg = Debug|x64\n-        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x64.Build.0 = Debug|x64\n-        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x86.ActiveCfg = Debug|Win32\n-        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x86.Build.0 = Debug|Win32\n-        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x64.ActiveCfg = Release|x64\n-        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x64.Build.0 = Release|x64\n-        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x86.ActiveCfg = Release|Win32\n-        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x86.Build.0 = Release|Win32\n-        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x64.ActiveCfg = Debug|x64\n-        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x64.Build.0 = Debug|x64\n-        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x86.ActiveCfg = Debug|Win32\n-        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x86.Build.0 = Debug|Win32\n-        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x64.ActiveCfg = Release|x64\n-        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x64.Build.0 = Release|x64\n-        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x86.ActiveCfg = Release|Win32\n-        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x86.Build.0 = Release|Win32\n-        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Debug|x64.ActiveCfg = Debug|x64\n-        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Debug|x64.Build.0 = Debug|x64\n-        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Debug|x86.ActiveCfg = Debug|Win32\n-        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Debug|x86.Build.0 = Debug|Win32\n-        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Release|x64.ActiveCfg = Release|x64\n-        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Release|x64.Build.0 = Release|x64\n-        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Release|x86.ActiveCfg = Release|Win32\n-        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Release|x86.Build.0 = Release|Win32\n-        {18430FEF-6B61-4C53-B396-718E02850F1B}.Debug|x64.ActiveCfg = Debug|x64\n-        {18430FEF-6B61-4C53-B396-718E02850F1B}.Debug|x64.Build.0 = Debug|x64\n-        {18430FEF-6B61-4C53-B396-718E02850F1B}.Debug|x86.ActiveCfg = Debug|Win32\n-        {18430FEF-6B61-4C53-B396-718E02850F1B}.Debug|x86.Build.0 = Debug|Win32\n-        {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x64.ActiveCfg = Release|x64\n-        {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x64.Build.0 = Release|x64\n-        {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x86.ActiveCfg = Release|Win32\n-        {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x86.Build.0 = Release|Win32\n-        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x64.ActiveCfg = Debug|x64\n-        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x64.Build.0 = Debug|x64\n-        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x86.ActiveCfg = Debug|Win32\n-        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x86.Build.0 = Debug|Win32\n-        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x64.ActiveCfg = Release|x64\n-        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x64.Build.0 = Release|x64\n-        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x86.ActiveCfg = Release|Win32\n-        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x86.Build.0 = Release|Win32\n-        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x64.ActiveCfg = Debug|x64\n-        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x64.Build.0 = Debug|x64\n-        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x86.ActiveCfg = Debug|Win32\n-        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x86.Build.0 = Debug|Win32\n-        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x64.ActiveCfg = Release|x64\n-        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x64.Build.0 = Release|x64\n-        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x86.ActiveCfg = Release|Win32\n-        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x86.Build.0 = Release|Win32\n-        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x64.ActiveCfg = Debug|x64\n-        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x64.Build.0 = Debug|x64\n-        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x86.ActiveCfg = Debug|Win32\n-        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x86.Build.0 = Debug|Win32\n-        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x64.ActiveCfg = Release|x64\n-        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x64.Build.0 = Release|x64\n-        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x86.ActiveCfg = Release|Win32\n-        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x86.Build.0 = Release|Win32\n-        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x64.ActiveCfg = Debug|x64\n-        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x64.Build.0 = Debug|x64\n-        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x86.ActiveCfg = Debug|Win32\n-        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x86.Build.0 = Debug|Win32\n-        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x64.ActiveCfg = Release|x64\n-        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x64.Build.0 = Release|x64\n-        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x86.ActiveCfg = Release|Win32\n-        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x86.Build.0 = Release|Win32\n-    EndGlobalSection\n-    GlobalSection(SolutionProperties) = preSolution\n-        HideSolutionNode = FALSE\n-    EndGlobalSection\n-    GlobalSection(ExtensibilityGlobals) = postSolution\n-                        SolutionGuid = {8AA72EDA-2CD4-4564-B1E4-688B760EEEE9}\n-                SolutionGuid = {8607C0F4-F33D-41B8-8D51-18E366A0F8DF}\n-        SolutionGuid = {58AAB032-7274-49BD-845E-5EF4DBB69B70}\n-    EndGlobalSection\n-EndGlobal"
      },
      {
        "sha": "9d0b50a0b4bfe463fb4b6bff36cc5381363b4527",
        "filename": "build_msvc/bitcoin_config.h",
        "status": "removed",
        "additions": 0,
        "deletions": 338,
        "changes": 338,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/bitcoin_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/bitcoin_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin_config.h?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,338 +0,0 @@\n-// Copyright (c) 2018-2020 The Bitcoin Core developers\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#ifndef BITCOIN_BITCOIN_CONFIG_H\n-#define BITCOIN_BITCOIN_CONFIG_H\n-\n-/* Define if building universal (internal helper macro) */\n-/* #undef AC_APPLE_UNIVERSAL_BUILD */\n-\n-/* Version Build */\n-#define CLIENT_VERSION_BUILD 0\n-\n-/* Version is release */\n-#define CLIENT_VERSION_IS_RELEASE false\n-\n-/* Major version */\n-#define CLIENT_VERSION_MAJOR 0\n-\n-/* Minor version */\n-#define CLIENT_VERSION_MINOR 20\n-\n-/* Build revision */\n-#define CLIENT_VERSION_REVISION 99\n-\n-/* Copyright holder(s) before %s replacement */\n-#define COPYRIGHT_HOLDERS \"The %s developers\"\n-\n-/* Copyright holder(s) */\n-#define COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\"\n-\n-/* Replacement for %s in copyright holders string */\n-#define COPYRIGHT_HOLDERS_SUBSTITUTION \"Bitcoin Core\"\n-\n-/* Copyright year */\n-#define COPYRIGHT_YEAR 2019\n-\n-/* Define to 1 to enable wallet functions */\n-#define ENABLE_WALLET 1\n-\n-/* Define to 1 to enable ZMQ functions */\n-#define ENABLE_ZMQ 1\n-\n-/* define if the Boost library is available */\n-#define HAVE_BOOST /**/\n-\n-/* define if the Boost::Filesystem library is available */\n-#define HAVE_BOOST_FILESYSTEM /**/\n-\n-/* define if the Boost::Process library is available */\n-#define HAVE_BOOST_PROCESS /**/\n-\n-/* define if the Boost::System library is available */\n-#define HAVE_BOOST_SYSTEM /**/\n-\n-/* define if the Boost::Thread library is available */\n-#define HAVE_BOOST_THREAD /**/\n-\n-/* define if the Boost::Unit_Test_Framework library is available */\n-#define HAVE_BOOST_UNIT_TEST_FRAMEWORK /**/\n-\n-/* Define to 1 if you have the <byteswap.h> header file. */\n-/* #undef HAVE_BYTESWAP_H */\n-\n-/* Define this symbol if the consensus lib has been built */\n-#define HAVE_CONSENSUS_LIB 1\n-\n-/* define if the compiler supports basic C++11 syntax */\n-#define HAVE_CXX11 1\n-\n-/* Define to 1 if you have the declaration of `be16toh', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_BE16TOH 0\n-\n-/* Define to 1 if you have the declaration of `be32toh', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_BE32TOH 0\n-\n-/* Define to 1 if you have the declaration of `be64toh', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_BE64TOH 0\n-\n-/* Define to 1 if you have the declaration of `bswap_16', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_BSWAP_16 0\n-\n-/* Define to 1 if you have the declaration of `bswap_32', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_BSWAP_32 0\n-\n-/* Define to 1 if you have the declaration of `bswap_64', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_BSWAP_64 0\n-\n-/* Define to 1 if you have the declaration of `daemon', and to 0 if you don't.\n-   */\n-#define HAVE_DECL_DAEMON 0\n-\n-/* Define to 1 if you have the declaration of `htobe16', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_HTOBE16 0\n-\n-/* Define to 1 if you have the declaration of `htobe32', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_HTOBE32 0\n-\n-/* Define to 1 if you have the declaration of `htobe64', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_HTOBE64 0\n-\n-/* Define to 1 if you have the declaration of `htole16', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_HTOLE16 0\n-\n-/* Define to 1 if you have the declaration of `htole32', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_HTOLE32 0\n-\n-/* Define to 1 if you have the declaration of `htole64', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_HTOLE64 0\n-\n-/* Define to 1 if you have the declaration of `le16toh', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_LE16TOH 0\n-\n-/* Define to 1 if you have the declaration of `le32toh', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_LE32TOH 0\n-\n-/* Define to 1 if you have the declaration of `le64toh', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_LE64TOH 0\n-\n-/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_STRERROR_R 0\n-\n-/* Define to 1 if you have the declaration of `strnlen', and to 0 if you\n-   don't. */\n-#define HAVE_DECL_STRNLEN 1\n-\n-/* Define to 1 if you have the <dlfcn.h> header file. */\n-/* #undef HAVE_DLFCN_H */\n-\n-/* Define to 1 if you have the <endian.h> header file. */\n-/* #undef HAVE_ENDIAN_H */\n-\n-/* Define to 1 if the system has the `dllexport' function attribute */\n-#define HAVE_FUNC_ATTRIBUTE_DLLEXPORT 1\n-\n-/* Define to 1 if the system has the `dllimport' function attribute */\n-#define HAVE_FUNC_ATTRIBUTE_DLLIMPORT 1\n-\n-/* Define to 1 if the system has the `visibility' function attribute */\n-#define HAVE_FUNC_ATTRIBUTE_VISIBILITY 1\n-\n-/* Define this symbol if the BSD getentropy system call is available */\n-/* #undef HAVE_GETENTROPY */\n-\n-/* Define this symbol if the BSD getentropy system call is available with\n-   sys/random.h */\n-/* #undef HAVE_GETENTROPY_RAND */\n-\n-/* Define to 1 if you have the <inttypes.h> header file. */\n-#define HAVE_INTTYPES_H 1\n-\n-/* Define this symbol if you have malloc_info */\n-/* #undef HAVE_MALLOC_INFO */\n-\n-/* Define this symbol if you have mallopt with M_ARENA_MAX */\n-/* #undef HAVE_MALLOPT_ARENA_MAX */\n-\n-/* Define to 1 if you have the <memory.h> header file. */\n-#define HAVE_MEMORY_H 1\n-\n-/* Define to 1 if you have the <miniupnpc/miniupnpc.h> header file. */\n-#define HAVE_MINIUPNPC_MINIUPNPC_H 1\n-\n-/* Define to 1 if you have the <miniupnpc/miniwget.h> header file. */\n-#define HAVE_MINIUPNPC_MINIWGET_H 1\n-\n-/* Define to 1 if you have the <miniupnpc/upnpcommands.h> header file. */\n-#define HAVE_MINIUPNPC_UPNPCOMMANDS_H 1\n-\n-/* Define to 1 if you have the <miniupnpc/upnperrors.h> header file. */\n-#define HAVE_MINIUPNPC_UPNPERRORS_H 1\n-\n-/* Define this symbol if you have MSG_DONTWAIT */\n-/* #undef HAVE_MSG_DONTWAIT */\n-\n-/* Define this symbol if you have MSG_NOSIGNAL */\n-/* #undef HAVE_MSG_NOSIGNAL */\n-\n-/* Define if you have POSIX threads libraries and header files. */\n-//#define HAVE_PTHREAD 1\n-\n-/* Have PTHREAD_PRIO_INHERIT. */\n-//#define HAVE_PTHREAD_PRIO_INHERIT 1\n-\n-/* Define to 1 if you have the <stdint.h> header file. */\n-#define HAVE_STDINT_H 1\n-\n-/* Define to 1 if you have the <stdio.h> header file. */\n-#define HAVE_STDIO_H 1\n-\n-/* Define to 1 if you have the <stdlib.h> header file. */\n-#define HAVE_STDLIB_H 1\n-\n-/* Define to 1 if you have the `strerror_r' function. */\n-/* #undef HAVE_STRERROR_R */\n-\n-/* Define to 1 if you have the <strings.h> header file. */\n-#define HAVE_STRINGS_H 1\n-\n-/* Define to 1 if you have the <string.h> header file. */\n-#define HAVE_STRING_H 1\n-\n-/* Define this symbol if the BSD sysctl(KERN_ARND) is available */\n-/* #undef HAVE_SYSCTL_ARND */\n-\n-/* Define to 1 if you have the <sys/endian.h> header file. */\n-/* #undef HAVE_SYS_ENDIAN_H */\n-\n-/* Define this symbol if the Linux getrandom system call is available */\n-/* #undef HAVE_SYS_GETRANDOM */\n-\n-/* Define to 1 if you have the <sys/prctl.h> header file. */\n-/* #undef HAVE_SYS_PRCTL_H */\n-\n-/* Define to 1 if you have the <sys/select.h> header file. */\n-/* #undef HAVE_SYS_SELECT_H */\n-\n-/* Define to 1 if you have the <sys/stat.h> header file. */\n-#define HAVE_SYS_STAT_H 1\n-\n-/* Define to 1 if you have the <sys/types.h> header file. */\n-#define HAVE_SYS_TYPES_H 1\n-\n-/* Define to 1 if you have the <unistd.h> header file. */\n-//#define HAVE_UNISTD_H 1\n-\n-/* Define if the visibility attribute is supported. */\n-#define HAVE_VISIBILITY_ATTRIBUTE 1\n-\n-/* Define to the sub-directory where libtool stores uninstalled libraries. */\n-#define LT_OBJDIR \".libs/\"\n-\n-/* Define to the address where bug reports for this package should be sent. */\n-#define PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\"\n-\n-/* Define to the full name of this package. */\n-#define PACKAGE_NAME \"Bitcoin Core\"\n-\n-/* Define to the full name and version of this package. */\n-#define PACKAGE_STRING \"Bitcoin Core 0.19.99\"\n-\n-/* Define to the one symbol short name of this package. */\n-#define PACKAGE_TARNAME \"bitcoin\"\n-\n-/* Define to the home page for this package. */\n-#define PACKAGE_URL \"https://bitcoincore.org/\"\n-\n-/* Define to the version of this package. */\n-#define PACKAGE_VERSION \"0.19.99\"\n-\n-/* Define to necessary symbol if this constant uses a non-standard name on\n-   your system. */\n-/* #undef PTHREAD_CREATE_JOINABLE */\n-\n-/* Define this symbol if the qt platform is cocoa */\n-/* #undef QT_QPA_PLATFORM_COCOA */\n-\n-/* Define this symbol if the minimal qt platform exists */\n-#define QT_QPA_PLATFORM_MINIMAL 1\n-\n-/* Define this symbol if the qt platform is windows */\n-#define QT_QPA_PLATFORM_WINDOWS 1\n-\n-/* Define this symbol if the qt platform is xcb */\n-/* #undef QT_QPA_PLATFORM_XCB */\n-\n-/* Define this symbol if qt plugins are static */\n-#define QT_STATICPLUGIN 1\n-\n-/* Define to 1 if you have the ANSI C header files. */\n-#define STDC_HEADERS 1\n-\n-/* Define to 1 if strerror_r returns char *. */\n-/* #undef STRERROR_R_CHAR_P */\n-\n-/* Define this symbol to build in assembly routines */\n-//#define USE_ASM 1\n-\n-/* Define if dbus support should be compiled in */\n-/* #undef USE_DBUS */\n-\n-/* Define if QR support should be compiled in */\n-//#define USE_QRCODE 1\n-\n-/* UPnP support not compiled if undefined, otherwise value (0 or 1) determines\n-   default state */\n-//#define USE_UPNP 0\n-\n-/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most\n-   significant byte first (like Motorola and SPARC, unlike Intel). */\n-#if defined AC_APPLE_UNIVERSAL_BUILD\n-# if defined __BIG_ENDIAN__\n-#  define WORDS_BIGENDIAN 1\n-# endif\n-#else\n-# ifndef WORDS_BIGENDIAN\n-/* #  undef WORDS_BIGENDIAN */\n-# endif\n-#endif\n-\n-/* Enable large inode numbers on Mac OS X 10.5.  */\n-#ifndef _DARWIN_USE_64_BIT_INODE\n-# define _DARWIN_USE_64_BIT_INODE 1\n-#endif\n-\n-/* Number of bits in a file offset, on hosts where this is settable. */\n-#define _FILE_OFFSET_BITS 64\n-\n-/* Define for large files, on AIX-style hosts. */\n-/* #undef _LARGE_FILES */\n-\n-/* Windows Universal Platform constraints */\n-#if !defined(WINAPI_FAMILY) || (WINAPI_FAMILY == WINAPI_FAMILY_DESKTOP_APP)\n-/* Either a desktop application without API restrictions, or and older system\n-   before these macros were defined. */\n-\n-/* ::wsystem is available */\n-#define HAVE_SYSTEM 1\n-\n-#endif // !WINAPI_FAMILY || WINAPI_FAMILY_DESKTOP_APP\n-\n-#endif //BITCOIN_BITCOIN_CONFIG_H"
      },
      {
        "sha": "ae24cb100e68fc465bd612517d47ed8a96c6bfe2",
        "filename": "build_msvc/bitcoind/bitcoind.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 75,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/bitcoind/bitcoind.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/bitcoind/bitcoind.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoind/bitcoind.vcxproj?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,75 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{D4513DDF-6013-44DC-ADCC-12EAF6D1F038}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>Application</ConfigurationType>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\bitcoind.cpp\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n-      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n-      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n-      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n-      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n-      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n-      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n-      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n-      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n-      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n-      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n-    </ProjectReference>\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Label=\"ReplaceInFile\" Project=\"..\\msbuild\\tasks\\replaceinfile.targets\" />\n-  <PropertyGroup>\n-    <ConfigIniIn>..\\..\\test\\config.ini.in</ConfigIniIn>\n-    <ConfigIniOut>..\\..\\test\\config.ini</ConfigIniOut>\n-  </PropertyGroup>\n-  <Target Name=\"AfterBuild\">\n-    <Copy SourceFiles=\"$(ConfigIniIn)\" DestinationFiles=\"$(ConfigIniOut)\" ></Copy>\n-    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n-                   Replace=\"@PACKAGE_NAME@\" By=\"Bitcoin Core\"></ReplaceInFile>\n-    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n-                   Replace=\"@abs_top_srcdir@\" By=\"..\\..\" ToFullPath=\"true\"></ReplaceInFile>\n-    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n-                   Replace=\"@abs_top_builddir@\" By=\"..\\..\" ToFullPath=\"true\"></ReplaceInFile>\n-    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n-                   Replace=\"@EXEEXT@\" By=\".exe\"></ReplaceInFile>\n-    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n-                  Replace=\"@ENABLE_WALLET_TRUE@\" By=\"\"></ReplaceInFile>\n-    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n-                  Replace=\"@BUILD_BITCOIN_CLI_TRUE@\" By=\"\"></ReplaceInFile>\n-    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n-                  Replace=\"@BUILD_BITCOIND_TRUE@\" By=\"\"></ReplaceInFile>\n-    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n-                  Replace=\"@ENABLE_FUZZ_TRUE@\" By=\"\"></ReplaceInFile>\n-    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n-                  Replace=\"@ENABLE_ZMQ_TRUE@\" By=\"\"></ReplaceInFile>\n-  </Target>\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "ed227519ae10181a24145d33e131358e5c49a477",
        "filename": "build_msvc/common.init.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 135,
        "changes": 135,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/common.init.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/common.init.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.init.vcxproj?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,135 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-<Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n-\n-  <PropertyGroup Label=\"Globals\">\n-    <VCProjectVersion>16.0</VCProjectVersion>\n-    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n-    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n-    <UseNativeEnvironment>true</UseNativeEnvironment>\n-   </PropertyGroup>\n-\n-   <PropertyGroup Label=\"Vcpkg\">\n-    <VcpkgEnabled>true</VcpkgEnabled>\n-    <VcpkgEnableManifest>true</VcpkgEnableManifest>\n-    <VcpkgManifestInstall>true</VcpkgManifestInstall>\n-    <VcpkgUseStatic>true</VcpkgUseStatic>\n-    <VcpkgAutoLink>true</VcpkgAutoLink>\n-    <VcpkgConfiguration>$(Configuration)</VcpkgConfiguration>\n-  </PropertyGroup>\n-\n-  <PropertyGroup Condition=\"'$(WindowsTargetPlatformVersion)'=='' and !Exists('$(WindowsSdkDir)\\DesignTime\\CommonConfiguration\\Neutral\\Windows.props')\">\n-     <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' == ''\">$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v10.0@ProductVersion)</WindowsTargetPlatformVersion_10>\n-     <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' == ''\">$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Microsoft SDKs\\Windows\\v10.0@ProductVersion)</WindowsTargetPlatformVersion_10>\n-     <!-- Sometimes the version in the registry has to .0 suffix, and sometimes it doesn't. Check and add it -->\n-     <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' != '' and !$(WindowsTargetPlatformVersion_10.EndsWith('.0'))\">$(WindowsTargetPlatformVersion_10).0</WindowsTargetPlatformVersion_10>\n-     <WindowsTargetPlatformVersion>$(WindowsTargetPlatformVersion_10)</WindowsTargetPlatformVersion>\n-   </PropertyGroup>\n-\n-  <ItemGroup Label=\"ProjectConfigurations\">\n-    <ProjectConfiguration Include=\"Release|x64\">\n-      <Configuration>Release</Configuration>\n-      <Platform>x64</Platform>\n-    </ProjectConfiguration>\n-    <ProjectConfiguration Include=\"Debug|x64\">\n-      <Configuration>Debug</Configuration>\n-      <Platform>x64</Platform>\n-    </ProjectConfiguration>\n-    <ProjectConfiguration Include=\"Release|Win32\">\n-      <Configuration>Release</Configuration>\n-      <Platform>Win32</Platform>\n-    </ProjectConfiguration>\n-    <ProjectConfiguration Include=\"Debug|Win32\">\n-      <Configuration>Debug</Configuration>\n-      <Platform>Win32</Platform>\n-    </ProjectConfiguration>\n-  </ItemGroup>\n-\n-  <PropertyGroup Condition=\"'$(Configuration)'=='Debug'\" Label=\"Configuration\">\n-    <LinkIncremental>true</LinkIncremental>\n-    <WholeProgramOptimization>false</WholeProgramOptimization>\n-    <UseDebugLibraries>true</UseDebugLibraries>\n-    <PlatformToolset>v142</PlatformToolset>\n-    <CharacterSet>Unicode</CharacterSet>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\$(ProjectName)\\</OutDir>\n-    <IntDir>$(Platform)\\$(Configuration)\\$(ProjectName)\\</IntDir>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)'=='Release'\" Label=\"Configuration\">\n-    <LinkIncremental>false</LinkIncremental>\n-    <WholeProgramOptimization>true</WholeProgramOptimization>\n-    <UseDebugLibraries>false</UseDebugLibraries>\n-    <PlatformToolset>v142</PlatformToolset>\n-    <CharacterSet>Unicode</CharacterSet>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\$(ProjectName)\\</OutDir>\n-    <IntDir>$(Platform)\\$(Configuration)\\$(ProjectName)\\</IntDir>\n-  </PropertyGroup>\n-\n-<ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n-    <ClCompile>\n-      <Optimization>MaxSpeed</Optimization>\n-      <FunctionLevelLinking>true</FunctionLevelLinking>\n-      <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <SDLCheck>true</SDLCheck>\n-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n-    </ClCompile>\n-    <Link>\n-      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n-      <OptimizeReferences>true</OptimizeReferences>\n-    </Link>\n-  </ItemDefinitionGroup>\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n-    <ClCompile>\n-      <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n-      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n-      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>\n-    </ClCompile>\n-  </ItemDefinitionGroup>\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n-    <ClCompile>\n-      <Optimization>MaxSpeed</Optimization>\n-      <FunctionLevelLinking>true</FunctionLevelLinking>\n-      <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <SDLCheck>true</SDLCheck>\n-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n-    </ClCompile>\n-    <Link>\n-      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n-      <OptimizeReferences>true</OptimizeReferences>\n-    </Link>\n-  </ItemDefinitionGroup>\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n-    <ClCompile>\n-      <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n-      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n-      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>\n-    </ClCompile>\n-  </ItemDefinitionGroup>\n-\n-  <ItemDefinitionGroup>\n-    <ClCompile>\n-      <WarningLevel>Level3</WarningLevel>\n-      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n-      <AdditionalOptions>/utf-8 /std:c++17 %(AdditionalOptions)</AdditionalOptions>\n-      <DisableSpecificWarnings>4018;4221;4244;4267;4334;4715;4805;4834</DisableSpecificWarnings>\n-      <TreatWarningAsError>true</TreatWarningAsError>\n-      <PreprocessorDefinitions>_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING;_SILENCE_CXX17_OLD_ALLOCATOR_MEMBERS_DEPRECATION_WARNING;ZMQ_STATIC;NOMINMAX;WIN32;HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;_CONSOLE;_WIN32_WINNT=0x0601;_WIN32_IE=0x0501;WIN32_LEAN_AND_MEAN;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;..\\..\\src\\secp256k1\\include;..\\..\\src\\leveldb\\include;..\\..\\src\\leveldb\\helpers\\memenv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-    </ClCompile>\n-    <Link>\n-      <SubSystem>Console</SubSystem>\n-      <GenerateDebugInformation>true</GenerateDebugInformation>\n-      <AdditionalDependencies>Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n-    </Link>\n-    <Lib>\n-      <AdditionalOptions>/ignore:4221</AdditionalOptions>\n-    </Lib>\n-  </ItemDefinitionGroup>\n-  <Import Project=\"common.init.vcxproj.user\" Condition=\"Exists('common.init.vcxproj.user')\" />\n-</Project>"
      },
      {
        "sha": "42150a23103773a96de2f25f86de7ccb589e821e",
        "filename": "build_msvc/common.qt.init.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/common.qt.init.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/common.qt.init.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.qt.init.vcxproj?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-\n-  <PropertyGroup Label=\"QtGlobals\">\n-    <QtBaseDir>C:\\Qt5.9.8_x64_static_vs2019</QtBaseDir>\n-    <QtPluginsLibraryDir>$(QtBaseDir)\\plugins</QtPluginsLibraryDir>\n-    <QtLibraryDir>$(QtBaseDir)\\lib</QtLibraryDir>\n-    <QtIncludeDir>$(QtBaseDir)\\include</QtIncludeDir>\n-    <QtIncludes>$(QtIncludeDir);$(QtIncludeDir)\\QtNetwork;$(QtIncludeDir)\\QtCore;$(QtIncludeDir)\\QtWidgets;$(QtIncludeDir)\\QtGui;</QtIncludes>\n-    <GeneratedFilesOutDir>.\\QtGeneratedFiles\\qt</GeneratedFilesOutDir>\n-    <QtToolsDir>$(QtBaseDir)\\bin</QtToolsDir>\n-    <QtReleaseLibraries>$(QtPluginsLibraryDir)\\platforms\\qminimal.lib;$(QtPluginsLibraryDir)\\platforms\\qwindows.lib;$(QtLibraryDir)\\qtfreetype.lib;$(QtLibraryDir)\\qtharfbuzz.lib;$(QtLibraryDir)\\qtlibpng.lib;$(QtLibraryDir)\\qtpcre2.lib;$(QtLibraryDir)\\Qt5AccessibilitySupport.lib;$(QtLibraryDir)\\Qt5Core.lib;$(QtLibraryDir)\\Qt5Concurrent.lib;$(QtLibraryDir)\\Qt5EventDispatcherSupport.lib;$(QtLibraryDir)\\Qt5FontDatabaseSupport.lib;$(QtLibraryDir)\\Qt5Gui.lib;$(QtLibraryDir)\\Qt5Network.lib;$(QtLibraryDir)\\Qt5PlatformCompositorSupport.lib;$(QtLibraryDir)\\Qt5ThemeSupport.lib;$(QtLibraryDir)\\Qt5Widgets.lib;$(QtLibraryDir)\\Qt5WinExtras.lib;$(QtLibraryDir)\\qtmain.lib;userenv.lib;netapi32.lib;imm32.lib;Dwmapi.lib;version.lib;winmm.lib;UxTheme.lib</QtReleaseLibraries>\n-    <QtDebugLibraries>$(QtPluginsLibraryDir)\\platforms\\qwindowsd.lib;$(QtPluginsLibraryDir)\\platforms\\qminimald.lib;$(QtLibraryDir)\\*d.lib;crypt32.lib;userenv.lib;netapi32.lib;imm32.lib;Dwmapi.lib;version.lib;winmm.lib;UxTheme.lib</QtDebugLibraries>\n-  </PropertyGroup>\n-\n-</Project>"
      },
      {
        "sha": "4bbcc3767f63b23225a70f672764947637d9666c",
        "filename": "build_msvc/common.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/common.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/common.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.vcxproj?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,12 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-<PropertyGroup><BuildDependsOn>$(BuildDependsOn);CopyBuildArtifacts</BuildDependsOn></PropertyGroup>\n-  <Target Name=\"CopyBuildArtifacts\" Condition=\"'$(ConfigurationType)' != 'StaticLibrary'\">\n-    <ItemGroup>\n-      <BuildArtifacts Include=\"$(OutDir)$(TargetName)$(TargetExt)\"></BuildArtifacts>\n-      <BuildArtifacts Include=\"$(OutDir)$(TargetName).pdb\"></BuildArtifacts>\n-    </ItemGroup>\n-    <Copy SourceFiles=\"@(BuildArtifacts)\" SkipUnchangedFiles=\"true\" DestinationFolder=\"..\\..\\src\\\" Condition=\"'$(OutDir)' != ''\"></Copy>\n-  </Target>\n-  <Import Project=\"common.vcxproj.user\" Condition=\"Exists('common.vcxproj.user')\" />\n-</Project>"
      },
      {
        "sha": "620df72a2f76480b7645befdb8e889bf8c779046",
        "filename": "build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{0667528C-D734-4009-ADF9-C0D6C4A5A5A6}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup>\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-@SOURCE_FILES@\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "b47d62b29587ee85536232e599c1c9c4a1429b9a",
        "filename": "build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{7C87E378-DF58-482E-AA2F-1BC129BC19CE}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-@SOURCE_FILES@\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "32cb75bf871c180dafb4a0b5c0fbd4a0722fa18f",
        "filename": "build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{6190199C-6CF4-4DAD-BFBD-93FA72A760C1}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-@SOURCE_FILES@\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "6a3c9f1dc125b9e44fb27b11f4bdab81f12dd5fc",
        "filename": "build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 232,
        "changes": 232,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,232 +0,0 @@\n-\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <Import Project=\"..\\common.qt.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}</ProjectGuid>\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\qt\\addressbookpage.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\addresstablemodel.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\askpassphrasedialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\bantablemodel.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\bitcoin.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinaddressvalidator.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinamountfield.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\bitcoingui.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinstrings.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinunits.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\clientmodel.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\coincontroldialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\coincontroltreewidget.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\createwalletdialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\csvmodelwriter.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\editaddressdialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\guiutil.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\intro.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\modaloverlay.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\networkstyle.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\notificator.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\openuridialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\optionsdialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\optionsmodel.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\overviewpage.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\paymentserver.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\peertablemodel.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\platformstyle.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\psbtoperationsdialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\qrimagewidget.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\qvalidatedlineedit.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\qvaluecombobox.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\receivecoinsdialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\receiverequestdialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\recentrequeststablemodel.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\rpcconsole.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\sendcoinsdialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\sendcoinsentry.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\signverifymessagedialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\splashscreen.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\trafficgraphwidget.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\transactiondesc.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\transactiondescdialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\transactionfilterproxy.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\transactionrecord.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\transactiontablemodel.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\transactionview.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\utilitydialog.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\walletcontroller.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\walletframe.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\walletmodel.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\walletmodeltransaction.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\walletview.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\winshutdownmonitor.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addressbookpage.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addresstablemodel.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_askpassphrasedialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bantablemodel.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoin.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinaddressvalidator.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinamountfield.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoingui.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinunits.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_clientmodel.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_coincontroldialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_coincontroltreewidget.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_createwalletdialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_csvmodelwriter.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_editaddressdialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_guiutil.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_intro.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_modaloverlay.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_networkstyle.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_notificator.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_openuridialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_optionsdialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_optionsmodel.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_overviewpage.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_paymentserver.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_peertablemodel.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_platformstyle.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_psbtoperationsdialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qrimagewidget.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qvalidatedlineedit.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qvaluecombobox.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_receivecoinsdialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_receiverequestdialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_recentrequeststablemodel.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_rpcconsole.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_sendcoinsdialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_sendcoinsentry.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_signverifymessagedialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_splashscreen.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_trafficgraphwidget.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiondesc.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiondescdialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionfilterproxy.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionrecord.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiontablemodel.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionview.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_utilitydialog.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletcontroller.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletframe.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletmodel.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletmodeltransaction.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletview.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_winshutdownmonitor.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\rcc\\qrc_bitcoin.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\rcc\\qrc_bitcoin_locale.cpp\" />\n-  </ItemGroup>\n-\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n-    <ClCompile>\n-      <PreprocessorDefinitions>_AMD64_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-    </ClCompile>\n-  </ItemDefinitionGroup>\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n-    <ClCompile>\n-      <PreprocessorDefinitions>_AMD64_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-    </ClCompile>\n-  </ItemDefinitionGroup>\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n-    <ClCompile>\n-      <PreprocessorDefinitions>_X86_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-    </ClCompile>\n-  </ItemDefinitionGroup>\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n-    <ClCompile>\n-      <PreprocessorDefinitions>_X86_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-    </ClCompile>\n-  </ItemDefinitionGroup>\n-\n-  <ItemGroup>\n-    <QT_MOC Include=\"..\\..\\src\\qt\\bitcoinamountfield.cpp\" />\n-    <QT_MOC Include=\"..\\..\\src\\qt\\intro.cpp\" />\n-    <QT_MOC Include=\"..\\..\\src\\qt\\overviewpage.cpp\" />\n-    <QT_MOC Include=\"..\\..\\src\\qt\\rpcconsole.cpp\" />\n-    <MocHeaderFiles Include=\"..\\..\\src\\qt\\*.h\" />\n-    <ResourceTemplates Include=\"..\\..\\src\\qt\\*.qrc\" />\n-    <UiFormFiles Include=\"..\\..\\src\\qt\\forms\\*.ui\" />\n-    <TranslationFiles Include=\"..\\..\\src\\qt\\locale\\*.ts\" />\n-  </ItemGroup>\n-\n-  <Target Name=\"moccode\" Inputs=\"@(QT_MOC)\" Outputs=\"@(QT_MOC->'$(GeneratedFilesOutDir)\\%(Filename).moc')\">\n-    <PropertyGroup>\n-      <ErrorText>There was an error executing the libbitcoin_qt moc code include generation task.</ErrorText>\n-    </PropertyGroup>\n-    <MakeDir Directories=\"$(GeneratedFilesOutDir)\" />\n-    <Exec Command=\"echo Performing libbitcoin_qt moc code include generation task, output path $(GeneratedFilesOutDir).\" />\n-    <Exec Command=\"echo $(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(QT_MOC.Identity)&quot; -o $(GeneratedFilesOutDir)\\%(Filename).moc.\" />\n-    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(QT_MOC.Identity)&quot; -o $(GeneratedFilesOutDir)\\%(Filename).moc\" />\n-  </Target>\n-\n-  <Target Name=\"mocheader\" Inputs=\"@(MocHeaderFiles)\" Outputs=\"@(MocHeaderFiles->'$(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp')\">\n-    <PropertyGroup>\n-      <ErrorText>There was an error executing the libbitcoin_qt moc header generation task.</ErrorText>\n-    </PropertyGroup>\n-    <Exec Command=\"echo Performing libbitcoin_qt moc header generation task, output path $(GeneratedFilesOutDir)\\moc.\" />\n-    <Exec Command=\"echo $(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocHeaderFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp.\" />\n-    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\moc\\\" />\n-    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocHeaderFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp\" />\n-  </Target>\n-\n-  <Target Name=\"forms\" Inputs=\"@(UiFormFiles)\" Outputs=\"@(UiFormFiles->'$(GeneratedFilesOutDir)\\forms\\ui_%(Filename).h')\">\n-    <PropertyGroup>\n-      <ErrorText>There was an error executing the libbitcoin_qt forms header generation task.</ErrorText>\n-    </PropertyGroup>\n-    <Exec Command=\"echo Performing libbitcoin_qt forms header generation task, output path $(GeneratedFilesOutDir)\\forms.\" />\n-    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\forms\\\" />\n-    <Exec Command=\"$(QtToolsDir)\\uic.exe &quot;%(UiFormFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\forms\\ui_%(Filename).h\" />\n-  </Target>\n-\n-  <Target Name=\"translation\" Inputs=\"@(TranslationFiles)\" Outputs=\"@(TranslationFiles->'..\\..\\src\\qt\\locale\\%(Filename).qm')\">\n-    <PropertyGroup>\n-      <ErrorText>There was an error executing the libbitcoin_qt translation file generation task.</ErrorText>\n-    </PropertyGroup>\n-    <Exec Command=\"echo Performing libbitcoin_qt translation file generation task.\" />\n-    <Exec Command=\"$(QtToolsDir)\\lrelease.exe &quot;%(TranslationFiles.Identity)&quot; -qm ..\\..\\src\\qt\\locale\\%(Filename).qm\" />\n-  </Target>\n-\n-  <Target Name=\"resource\" Inputs=\"@(ResourceTemplates)\" Outputs=\"@(ResourceTemplates->'$(GeneratedFilesOutDir)\\rcc\\qrc_%(Filename).cpp')\" DependsOnTargets=\"translation\">\n-    <PropertyGroup>\n-      <ErrorText>There was an error executing the libbitcoin_qt resource code generation task.</ErrorText>\n-    </PropertyGroup>\n-    <Exec Command=\"echo Performing libbitcoin_qt resource code generation task, output path $(GeneratedFilesOutDir)\\rcc.\" />\n-    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\rcc\\\" />\n-    <Exec Command=\"$(QtToolsDir)\\rcc.exe --verbose --name %(Filename) &quot;%(ResourceTemplates.Identity)&quot; -o $(GeneratedFilesOutDir)\\rcc\\qrc_%(Filename).cpp\" />\n-  </Target>\n-\n-  <Target Name=\"qtclean\">\n-    <Exec Command=\"echo Clean libbitcoin_qt generated files from $(GeneratedFilesOutDir).\" />\n-    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\forms;$(GeneratedFilesOutDir)\\moc;$(GeneratedFilesOutDir)\\rcc;\" />\n-    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\" />\n-  </Target>\n-\n-  <PropertyGroup>\n-    <BuildDependsOn>\n-        moccode;\n-        mocheader;\n-        forms;\n-        translation;\n-        resource;\n-        $(BuildDependsOn);\n-    </BuildDependsOn>\n-  </PropertyGroup>\n-  <PropertyGroup>\n-    <CleanDependsOn>\n-        qtclean;\n-        $(CleanDependsOn);\n-    </CleanDependsOn>\n-  </PropertyGroup>\n-\n-</Project>"
      },
      {
        "sha": "58e90dbaeb438623922423bfd1890d16e84543cc",
        "filename": "build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,19 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{460FEE33-1FE1-483F-B3BF-931FF8E969A5}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-    <ItemGroup>\n-@SOURCE_FILES@\n-    <ClCompile Include=\"..\\..\\src\\wallet\\init.cpp\">\n-      <ObjectFileName>$(IntDir)wallet_init.obj</ObjectFileName>\n-    </ClCompile>\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "6ec40461c2adcd99965486308e490ed09ff8de03",
        "filename": "build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "status": "removed",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,17 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\util\\url.cpp\" />\n-@SOURCE_FILES@\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "9c8279c72abad60972a59d19cd663765e590cd01",
        "filename": "build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{93B86837-B543-48A5-A89B-7C87ABB77DF2}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-@SOURCE_FILES@\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "1a6b7b6b92670f31d4ae6ad79685744e85358b9f",
        "filename": "build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-@SOURCE_FILES@\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "e86eea81e6567b0306577ddc761a66b0221f2442",
        "filename": "build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{792D487F-F14C-49FC-A9DE-3FC150F31C3F}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-@SOURCE_FILES@\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "4cb0bdc90218add3a0cbfb365e15a7ba8d955e5c",
        "filename": "build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,37 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{2B384FA8-9EE1-4544-93CB-0D733C25E8CE}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\arith_uint256.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\consensus\\merkle.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\consensus\\tx_check.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\aes.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\chacha20.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\hmac_sha256.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\hmac_sha512.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\ripemd160.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\sha1.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\sha256.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\sha256_sse4.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\sha512.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\hash.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\primitives\\block.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\primitives\\transaction.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\pubkey.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\script\\bitcoinconsensus.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\script\\interpreter.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\script\\script.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\script\\script_error.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\uint256.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\util\\strencodings.cpp\" />\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "1610ae7d8661f421df97c103ae57bf80e9399371",
        "filename": "build_msvc/libleveldb/libleveldb.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 61,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libleveldb/libleveldb.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libleveldb/libleveldb.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libleveldb/libleveldb.vcxproj?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,61 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{18430FEF-6B61-4C53-B396-718E02850F1B}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\builder.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\c.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\dbformat.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\db_impl.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\db_iter.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\dumpfile.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\filename.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\log_reader.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\log_writer.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\memtable.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\repair.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\table_cache.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\version_edit.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\version_set.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\write_batch.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\helpers\\memenv\\memenv.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\block.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\block_builder.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\filter_block.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\format.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\iterator.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\merger.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\table.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\table_builder.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\two_level_iterator.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\arena.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\bloom.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\cache.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\coding.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\comparator.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\crc32c.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\env.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\env_windows.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\filter_policy.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\hash.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\histogram.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\logging.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\options.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\status.cc\" />\n-  </ItemGroup>\n-  <ItemDefinitionGroup>\n-     <ClCompile>\n-       <PreprocessorDefinitions>HAVE_CRC32C=0;HAVE_SNAPPY=0;__STDC_LIMIT_MACROS;LEVELDB_IS_BIG_ENDIAN=0;_UNICODE;UNICODE;_CRT_NONSTDC_NO_DEPRECATE;LEVELDB_PLATFORM_WINDOWS;LEVELDB_ATOMIC_PRESENT;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-       <DisableSpecificWarnings>4244;4267;4312;4722;</DisableSpecificWarnings>\n-       <AdditionalIncludeDirectories>..\\..\\src\\leveldb;..\\..\\src\\leveldb\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-     </ClCompile>\n-  </ItemDefinitionGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "c42918d6e17737ad8a473a5d597e4c162108e42f",
        "filename": "build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libsecp256k1/libsecp256k1.vcxproj?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,22 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\secp256k1\\src\\secp256k1.c\" />\n-  </ItemGroup>\n-    <ItemDefinitionGroup>\n-    <ClCompile>\n-      <PreprocessorDefinitions>ENABLE_MODULE_ECDH;ENABLE_MODULE_RECOVERY;ENABLE_MODULE_EXTRAKEYS;ENABLE_MODULE_SCHNORRSIG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-       <AdditionalIncludeDirectories>..\\..\\src\\secp256k1;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-     </ClCompile>\n-  </ItemDefinitionGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "5978b9a0d96f0c107da6c2beae79dae4c7536749",
        "filename": "build_msvc/libsecp256k1_config.h",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libsecp256k1_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libsecp256k1_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libsecp256k1_config.h?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,32 +0,0 @@\n-/**********************************************************************\n- * Copyright (c) 2013, 2014 Pieter Wuille                             *\n- * Distributed under the MIT software license, see the accompanying   *\n- * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n- **********************************************************************/\n-\n-#ifndef BITCOIN_LIBSECP256K1_CONFIG_H\n-#define BITCOIN_LIBSECP256K1_CONFIG_H\n-\n-#undef USE_ASM_X86_64\n-#undef USE_ENDOMORPHISM\n-#undef USE_FIELD_10X26\n-#undef USE_FIELD_5X52\n-#undef USE_FIELD_INV_BUILTIN\n-#undef USE_FIELD_INV_NUM\n-#undef USE_NUM_GMP\n-#undef USE_NUM_NONE\n-#undef USE_SCALAR_4X64\n-#undef USE_SCALAR_8X32\n-#undef USE_SCALAR_INV_BUILTIN\n-#undef USE_SCALAR_INV_NUM\n-\n-#define USE_NUM_NONE 1\n-#define USE_FIELD_INV_BUILTIN 1\n-#define USE_SCALAR_INV_BUILTIN 1\n-#define USE_FIELD_10X26 1\n-#define USE_SCALAR_8X32 1\n-\n-#define ECMULT_GEN_PREC_BITS 4\n-#define ECMULT_WINDOW_SIZE 15\n-\n-#endif /* BITCOIN_LIBSECP256K1_CONFIG_H */"
      },
      {
        "sha": "b5e844010e9197706dc0d75582fe2d3983bebfb5",
        "filename": "build_msvc/libtest_util/libtest_util.vcxproj.in",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libtest_util/libtest_util.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libtest_util/libtest_util.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libtest_util/libtest_util.vcxproj.in?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{868474FD-35F6-4400-8EED-30A33E7521D4}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-@SOURCE_FILES@\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "0f13a57241350d9bb8a37def99f0d5b2f91ad589",
        "filename": "build_msvc/libunivalue/libunivalue.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libunivalue/libunivalue.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/libunivalue/libunivalue.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libunivalue/libunivalue.vcxproj?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,19 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{5724BA7D-A09A-4BA8-800B-C4C1561B3D69}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue_get.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue_read.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue_write.cpp\" />\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "12868a987418158684c5aa5dd6eceef6b7116ba3",
        "filename": "build_msvc/msbuild/tasks/hexdump.targets",
        "status": "removed",
        "additions": 0,
        "deletions": 53,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/msbuild/tasks/hexdump.targets",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/msbuild/tasks/hexdump.targets",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msbuild/tasks/hexdump.targets?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,53 +0,0 @@\n-<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <UsingTask\n-    TaskName=\"HeaderFromHexdump\"\n-    TaskFactory=\"CodeTaskFactory\"\n-    AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll\" >\n-    <ParameterGroup>\n-        <RawFilePath Required=\"true\" />\n-        <HeaderFilePath Required=\"true\" />\n-        <SourceHeader Required=\"true\" />\n-        <SourceFooter Required=\"true\" />\n-    </ParameterGroup>\n-    <Task>\n-      <Using Namespace=\"System\"/>\n-      <Using Namespace=\"System.IO\"/>\n-      <Code Type=\"Fragment\" Language=\"cs\">\n-<![CDATA[\n-Log.LogMessage(\"msbuild inline hexdump task for \" + RawFilePath + \".\");\n-if(File.Exists(RawFilePath) == false) {\n-    Log.LogError(\"hexdump task could not locate \" + RawFilePath + \".\");\n-}\n-else {\n-    FileInfo inFileInfo = new FileInfo(RawFilePath);\n-    FileInfo outFileInfo = new FileInfo(HeaderFilePath);\n-\n-    if (outFileInfo.Exists == false || inFileInfo.LastWriteTime > outFileInfo.LastWriteTime)\n-    {\n-      using (Stream inStm = File.OpenRead(RawFilePath))\n-      {\n-          using (StreamWriter sw = new StreamWriter(HeaderFilePath))\n-          {\n-              sw.WriteLine(SourceHeader);\n-              int count = 0;\n-              int rawChar = inStm.ReadByte();\n-              while(rawChar != -1)\n-              {\n-                  sw.Write(\"0x{0:x2}, \", rawChar);\n-                  count++;\n-                  if(count % 8 == 0)\n-                  {\n-                      sw.WriteLine();\n-                  }\n-                  rawChar = inStm.ReadByte();\n-              }\n-              sw.WriteLine(SourceFooter);\n-          }\n-      }\n-   }\n-}\n-]]>\n-      </Code>\n-    </Task>\n-  </UsingTask>\n-</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "2ccb8b30e053f425e2b590a2ae5ee6d51523a957",
        "filename": "build_msvc/msbuild/tasks/replaceinfile.targets",
        "status": "removed",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/msbuild/tasks/replaceinfile.targets",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/msbuild/tasks/replaceinfile.targets",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msbuild/tasks/replaceinfile.targets?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,35 +0,0 @@\n-<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <UsingTask\n-    TaskName=\"ReplaceInFile\"\n-    TaskFactory=\"CodeTaskFactory\"\n-    AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll\" >\n-    <ParameterGroup>\n-        <FilePath Required=\"true\" />\n-        <Replace Required=\"true\" />\n-        <By Required=\"false\" />\n-        <ToFullPath Required=\"false\" />\n-    </ParameterGroup>\n-    <Task>\n-      <Using Namespace=\"System\"/>\n-      <Using Namespace=\"System.IO\"/>\n-      <Code Type=\"Fragment\" Language=\"cs\">\n-<![CDATA[\n-if(File.Exists(FilePath) == false) {\n-    Log.LogError(\"replaceinfile task could not locate \" + FilePath + \".\");\n-}\n-else {\n-    var data = File.ReadAllText(FilePath);\n-    var by = By;\n-    if (ToFullPath == \"true\")\n-    {\n-       by = Path.GetFullPath(by);\n-    }\n-    data = data.Replace(Replace, by);\n-    Log.LogMessage(\"Replace '\" + Replace + \"' by '\" + by + \"' in \" + FilePath);\n-    File.WriteAllText(FilePath, data, new System.Text.UTF8Encoding(false));\n-}\n-]]>\n-      </Code>\n-    </Task>\n-  </UsingTask>\n-</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "d99b17d38127bec2623a42552f461979cee61531",
        "filename": "build_msvc/msvc-autogen.py",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/msvc-autogen.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/msvc-autogen.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msvc-autogen.py?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,86 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2016-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-import os\n-import re\n-import argparse\n-from shutil import copyfile\n-\n-SOURCE_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'src'))\n-DEFAULT_PLATFORM_TOOLSET = R'v141'\n-\n-libs = [\n-    'libbitcoin_cli',\n-    'libbitcoin_common',\n-    'libbitcoin_crypto',\n-    'libbitcoin_server',\n-    'libbitcoin_util',\n-    'libbitcoin_wallet_tool',\n-    'libbitcoin_wallet',\n-    'libbitcoin_zmq',\n-    'bench_bitcoin',\n-    'libtest_util',\n-]\n-\n-ignore_list = [\n-]\n-\n-lib_sources = {}\n-\n-\n-def parse_makefile(makefile):\n-    with open(makefile, 'r', encoding='utf-8') as file:\n-        current_lib = ''\n-        for line in file.read().splitlines():\n-            if current_lib:\n-                source = line.split()[0]\n-                if source.endswith('.cpp') and not source.startswith('$') and source not in ignore_list:\n-                    source_filename = source.replace('/', '\\\\')\n-                    object_filename = source.replace('/', '_')[:-4] + \".obj\"\n-                    lib_sources[current_lib].append((source_filename, object_filename))\n-                if not line.endswith('\\\\'):\n-                    current_lib = ''\n-                continue\n-            for lib in libs:\n-                _lib = lib.replace('-', '_')\n-                if re.search(_lib + '.*_SOURCES \\\\= \\\\\\\\', line):\n-                    current_lib = lib\n-                    lib_sources[current_lib] = []\n-                    break\n-\n-def set_common_properties(toolset):\n-    with open(os.path.join(SOURCE_DIR, '../build_msvc/common.init.vcxproj'), 'r', encoding='utf-8') as rfile:\n-        s = rfile.read()\n-        s = re.sub('<PlatformToolset>.*?</PlatformToolset>', '<PlatformToolset>'+toolset+'</PlatformToolset>', s)\n-    with open(os.path.join(SOURCE_DIR, '../build_msvc/common.init.vcxproj'), 'w', encoding='utf-8',newline='\\n') as wfile:\n-        wfile.write(s)\n-\n-def main():\n-    parser = argparse.ArgumentParser(description='Bitcoin-core msbuild configuration initialiser.')\n-    parser.add_argument('-toolset', nargs='?',help='Optionally sets the msbuild platform toolset, e.g. v142 for Visual Studio 2019.'\n-         ' default is %s.'%DEFAULT_PLATFORM_TOOLSET)\n-    args = parser.parse_args()\n-    if args.toolset:\n-        set_common_properties(args.toolset)\n-\n-    for makefile_name in os.listdir(SOURCE_DIR):\n-        if 'Makefile' in makefile_name:\n-            parse_makefile(os.path.join(SOURCE_DIR, makefile_name))\n-    for key, value in lib_sources.items():\n-        vcxproj_filename = os.path.abspath(os.path.join(os.path.dirname(__file__), key, key + '.vcxproj'))\n-        content = ''\n-        for source_filename, object_filename in value:\n-            content += '    <ClCompile Include=\"..\\\\..\\\\src\\\\' + source_filename + '\">\\n'\n-            content += '      <ObjectFileName>$(IntDir)' + object_filename + '</ObjectFileName>\\n'\n-            content += '    </ClCompile>\\n'\n-        with open(vcxproj_filename + '.in', 'r', encoding='utf-8') as vcxproj_in_file:\n-            with open(vcxproj_filename, 'w', encoding='utf-8') as vcxproj_file:\n-                vcxproj_file.write(vcxproj_in_file.read().replace(\n-                    '@SOURCE_FILES@\\n', content))\n-    copyfile(os.path.join(SOURCE_DIR,'../build_msvc/bitcoin_config.h'), os.path.join(SOURCE_DIR, 'config/bitcoin-config.h'))\n-    copyfile(os.path.join(SOURCE_DIR,'../build_msvc/libsecp256k1_config.h'), os.path.join(SOURCE_DIR, 'secp256k1/src/libsecp256k1-config.h'))\n-\n-if __name__ == '__main__':\n-    main()"
      },
      {
        "sha": "2095c0c3213513510eb6106852943fc991d8e2b1",
        "filename": "build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 122,
        "changes": 122,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,122 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <Import Project=\"..\\common.qt.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{51201D5E-D939-4854-AE9D-008F03FF518E}</ProjectGuid>\n-    <ConfigurationType>Application</ConfigurationType>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\test\\util\\setup_common.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\test\\addressbooktests.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\test\\apptests.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\test\\compattests.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\test\\rpcnestedtests.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\test\\test_main.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\test\\uritests.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\test\\util.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\test\\wallettests.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\wallet\\test\\wallet_test_fixture.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addressbooktests.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_apptests.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_compattests.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_rpcnestedtests.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_uritests.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_wallettests.cpp\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n-      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n-      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n-      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n-      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_qt\\libbitcoin_qt.vcxproj\">\n-      <Project>{2b4abff8-d1fd-4845-88c9-1f3c0a6512bf}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n-      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n-      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n-      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n-      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n-      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n-      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n-      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n-    </ProjectReference>\n-  </ItemGroup>\n-\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Release'\">\n-    <ClCompile>\n-      <AdditionalIncludeDirectories>..\\libbitcoin_qt\\$(GeneratedFilesOutDir)\\..\\;$(QtIncludeDir)\\QtTest;$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-    </ClCompile>\n-    <Link>\n-      <AdditionalDependencies>$(QtLibraryDir)\\Qt5Test.lib;$(QtReleaseLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n-\t  <AdditionalOptions>/ignore:4206</AdditionalOptions>\n-    </Link>\n-  </ItemDefinitionGroup>\n-\n-    <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Debug'\">\n-    <ClCompile>\n-      <AdditionalIncludeDirectories>..\\libbitcoin_qt\\$(GeneratedFilesOutDir)\\..\\;$(QtIncludeDir)\\QtTest;$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-    </ClCompile>\n-    <Link>\n-      <AdditionalDependencies>$(QtDebugLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n-\t  <AdditionalOptions>/ignore:4206</AdditionalOptions>\n-    </Link>\n-  </ItemDefinitionGroup>\n-  <ItemGroup>\n-    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\addressbooktests.h\" />\n-    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\apptests.h\" />\n-    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\compattests.h\" />\n-    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\rpcnestedtests.h\" />\n-    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\uritests.h\" />\n-    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\wallettests.h\" />\n-  </ItemGroup>\n-  <Target Name=\"moccode\" Inputs=\"@(MocTestFiles)\" Outputs=\"@(MocTestFiles->'$(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp')\">\n-    <PropertyGroup>\n-      <ErrorText>There was an error executing the test_bitcoin-qt moc code generation task.</ErrorText>\n-    </PropertyGroup>\n-    <Exec Command=\"echo Performing test_bitcoin-qt moc generation task, output path $(GeneratedFilesOutDir)\\moc.\" />\n-    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\moc\\\" />\n-    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocTestFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp\" />\n-  </Target>\n-  <Target Name=\"QtTestCleanGeneratedFiles\">\n-    <Exec Command=\"echo Clean test_bitcoin-qt generated files from $(GeneratedFilesOutDir).\" />\n-    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\moc\\*\" />\n-    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\moc\" />\n-  </Target>\n-  <PropertyGroup>\n-    <BuildDependsOn>\n-       moccode;\n-       $(BuildDependsOn);\n-    </BuildDependsOn>\n-  </PropertyGroup>\n-  <PropertyGroup>\n-    <CleanDependsOn>\n-        QtTestCleanGeneratedFiles;\n-        $(CleanDependsOn);\n-    </CleanDependsOn>\n-  </PropertyGroup>\n-</Project>"
      },
      {
        "sha": "5c4b777d5164bbc3354b26f262310e9a385a99cd",
        "filename": "build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 73,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin/test_bitcoin.vcxproj?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,73 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{A56B73DB-D46D-4882-8374-1FE3FFA08F07}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>Application</ConfigurationType>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\test\\*_properties.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\test\\*_tests.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\test\\gen\\*_gen.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\test\\main.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\test\\util\\*.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_fixture.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_tests.cpp\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n-      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n-      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n-      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n-      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n-      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n-      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n-      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n-      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libtest_util\\libtest_util.vcxproj\">\n-      <Project>{1e065f03-3566-47d0-8fa9-daa72b084e7d}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n-      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n-      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n-      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n-    </ProjectReference>\n-  </ItemGroup>\n-  <Target Name=\"RawBenchHeaderGen\" BeforeTargets=\"PrepareForBuild\">\n-    <PropertyGroup>\n-      <ErrorText>There was an error executing the JSON test header generation task.</ErrorText>\n-    </PropertyGroup>\n-    <ItemGroup>\n-      <JsonTestFile Include=\"..\\..\\src\\test\\data\\*.json\" />\n-      <RawTestFile Include=\"..\\..\\src\\test\\data\\*.raw\" />\n-    </ItemGroup>\n-    <HeaderFromHexdump RawFilePath=\"%(RawTestFile.FullPath)\" HeaderFilePath=\"%(RawTestFile.FullPath).h\" SourceHeader=\"static unsigned const char %(RawTestFile.Filename)_raw[] = {\" SourceFooter=\"};\" />\n-    <HeaderFromHexdump RawFilePath=\"%(JsonTestFile.FullPath)\" HeaderFilePath=\"%(JsonTestFile.FullPath).h\" SourceHeader=\"namespace json_tests{ static unsigned const char %(JsonTestFile.Filename)[] = {\" SourceFooter=\"};}\" />\n-  </Target>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Label=\"hexdumpTarget\" Project=\"..\\msbuild\\tasks\\hexdump.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "5fdd97dc783e587ab68c49fd5ee06a53df2ec88f",
        "filename": "build_msvc/testconsensus/testconsensus.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 54,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/testconsensus/testconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/testconsensus/testconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/testconsensus/testconsensus.cpp?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,54 +0,0 @@\n-// Copyright (c) 2018-2019 The Bitcoin Core developers\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#include <iostream>\n-\n-// bitcoin includes.\n-#include <..\\src\\script\\bitcoinconsensus.h>\n-#include <..\\src\\primitives\\transaction.h>\n-#include <..\\src\\script\\script.h>\n-#include <..\\src\\streams.h>\n-#include <..\\src\\version.h>\n-\n-CMutableTransaction BuildSpendingTransaction(const CScript& scriptSig, const CScriptWitness& scriptWitness, int nValue = 0)\n-{\n-    CMutableTransaction txSpend;\n-    txSpend.nVersion = 1;\n-    txSpend.nLockTime = 0;\n-    txSpend.vin.resize(1);\n-    txSpend.vout.resize(1);\n-    txSpend.vin[0].scriptWitness = scriptWitness;\n-    txSpend.vin[0].prevout.hash = uint256();\n-    txSpend.vin[0].prevout.n = 0;\n-    txSpend.vin[0].scriptSig = scriptSig;\n-    txSpend.vin[0].nSequence = CTxIn::SEQUENCE_FINAL;\n-    txSpend.vout[0].scriptPubKey = CScript();\n-    txSpend.vout[0].nValue = nValue;\n-\n-    return txSpend;\n-}\n-\n-int main()\n-{\n-    std::cout << \"bitcoinconsensus version: \" << bitcoinconsensus_version() << std::endl;\n-\n-    CScript pubKeyScript;\n-    pubKeyScript << OP_1 << OP_0 << OP_1;\n-\n-    int amount = 0; // 600000000;\n-\n-    CScript scriptSig;\n-    CScriptWitness scriptWitness;\n-    CTransaction vanillaSpendTx = BuildSpendingTransaction(scriptSig, scriptWitness, amount);\n-    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n-    stream << vanillaSpendTx;\n-\n-    bitcoinconsensus_error err;\n-    auto op0Result = bitcoinconsensus_verify_script_with_amount(pubKeyScript.data(), pubKeyScript.size(), amount, (const unsigned char*)&stream[0], stream.size(), 0, bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL, &err);\n-    std::cout << \"Op0 result: \" << op0Result << \", error code \" << err << std::endl;\n-\n-    getchar();\n-\n-    return 0;\n-}"
      },
      {
        "sha": "776c40920abdd43ca179132ad31c77dd3b2685a3",
        "filename": "build_msvc/testconsensus/testconsensus.vcxproj",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/testconsensus/testconsensus.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/testconsensus/testconsensus.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/testconsensus/testconsensus.vcxproj?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,28 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"..\\common.init.vcxproj\" />\n-  <PropertyGroup Label=\"Globals\">\n-    <ProjectGuid>{E78473E9-B850-456C-9120-276301E04C06}</ProjectGuid>\n-  </PropertyGroup>\n-  <PropertyGroup Label=\"Configuration\">\n-    <ConfigurationType>Application</ConfigurationType>\n-    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n-  </PropertyGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"testconsensus.cpp\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n-      <Project>{2B384FA8-9EE1-4544-93CB-0D733C25E8CE}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n-      <Project>{B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}</Project>\n-    </ProjectReference>\n-    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n-      <Project>{BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}</Project>\n-    </ProjectReference>\n-  </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n-  <Import Project=\"..\\common.vcxproj\" />\n-</Project>"
      },
      {
        "sha": "dfd3929c4410b92364a6f314295ddbaab7912bf7",
        "filename": "build_msvc/vcpkg.json",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/vcpkg.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/build_msvc/vcpkg.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/vcpkg.json?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,20 +0,0 @@\n-{\n-  \"name\": \"bitcoin-core\",\n-  \"version-string\": \"1\",\n-  \"dependencies\": [\n-    \"berkeleydb\",\n-    \"boost-filesystem\",\n-    \"boost-multi-index\",\n-    \"boost-process\",\n-    \"boost-signals2\",\n-    \"boost-test\",\n-    \"boost-thread\",\n-    \"sqlite3\",\n-    \"double-conversion\",\n-    {\n-      \"name\": \"libevent\",\n-      \"features\": [\"thread\"]\n-    },\n-    \"zeromq\"\n-  ]\n-}"
      },
      {
        "sha": "3c5f04c39e348d407718c7fce8cd4c69ab6cf0db",
        "filename": "ci/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/README.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,65 +0,0 @@\n-## CI Scripts\n-\n-This directory contains scripts for each build step in each build stage.\n-\n-### Running a Stage Locally\n-\n-Be aware that the tests will be built and run in-place, so please run at your own risk.\n-If the repository is not a fresh git clone, you might have to clean files from previous builds or test runs first.\n-\n-The ci needs to perform various sysadmin tasks such as installing packages or writing to the user's home directory.\n-While most of the actions are done inside a docker container, this is not possible for all. Thus, cache directories,\n-such as the depends cache, previous release binaries, or ccache, are mounted as read-write into the docker container. While it should be fine to run\n-the ci system locally on you development box, the ci scripts can generally be assumed to have received less review and\n-testing compared to other parts of the codebase. If you want to keep the work tree clean, you might want to run the ci\n-system in a virtual machine with a Linux operating system of your choice.\n-\n-To allow for a wide range of tested environments, but also ensure reproducibility to some extent, the test stage\n-requires `docker` to be installed. To install all requirements on Ubuntu, run\n-\n-```\n-sudo apt install docker.io bash\n-```\n-\n-To run the default test stage,\n-\n-```\n-./ci/test_run_all.sh\n-```\n-\n-To run the test stage with a specific configuration,\n-\n-```\n-FILE_ENV=\"./ci/test/00_setup_env_arm.sh\" ./ci/test_run_all.sh\n-```\n-\n-### Configurations\n-\n-The test files (`FILE_ENV`) are constructed to test a wide range of\n-configurations, rather than a single pass/fail. This helps to catch build\n-failures and logic errors that present on platforms other than the ones the\n-author has tested.\n-\n-Some builders use the dependency-generator in `./depends`, rather than using\n-the system package manager to install build dependencies. This guarantees that\n-the tester is using the same versions as the release builds, which also use\n-`./depends`.\n-\n-If no `FILE_ENV` has been specified or values are left out, `00_setup_env.sh`\n-is used as the default configuration with fallback values.\n-\n-It is also possible to force a specific configuration without modifying the\n-file. For example,\n-\n-```\n-MAKEJOBS=\"-j1\" FILE_ENV=\"./ci/test/00_setup_env_arm.sh\" ./ci/test_run_all.sh\n-```\n-\n-The files starting with `0n` (`n` greater than 0) are the scripts that are run\n-in order.\n-\n-### Cache\n-\n-In order to avoid rebuilding all dependencies for each build, the binaries are\n-cached and re-used when possible. Changes in the dependency-generator will\n-trigger cache-invalidation and rebuilds as necessary."
      },
      {
        "sha": "fae424051db6fbab7cfef56d701a77b4c06b24b6",
        "filename": "ci/lint/04_install.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/lint/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/lint/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/04_install.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,20 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-\n-travis_retry sudo apt update && sudo apt install -y clang-format-9\n-sudo update-alternatives --install /usr/bin/clang-format      clang-format      $(which clang-format-9     ) 100\n-sudo update-alternatives --install /usr/bin/clang-format-diff clang-format-diff $(which clang-format-diff-9) 100\n-\n-travis_retry pip3 install codespell==1.17.1\n-travis_retry pip3 install flake8==3.8.3\n-travis_retry pip3 install yq\n-travis_retry pip3 install mypy==0.781\n-\n-SHELLCHECK_VERSION=v0.7.1\n-curl -sL \"https://github.com/koalaman/shellcheck/releases/download/${SHELLCHECK_VERSION}/shellcheck-${SHELLCHECK_VERSION}.linux.x86_64.tar.xz\" | tar --xz -xf - --directory /tmp/\n-export PATH=\"/tmp/shellcheck-${SHELLCHECK_VERSION}:${PATH}\""
      },
      {
        "sha": "2987812c8e64bab1648a3dc04492b1d338cdf047",
        "filename": "ci/lint/05_before_script.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/lint/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/lint/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/05_before_script.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,9 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-\n-git fetch --unshallow"
      },
      {
        "sha": "dc0f9b923bb14a66f6d83c52f5f0aa2eabdf392d",
        "filename": "ci/lint/06_script.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/lint/06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/lint/06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/06_script.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,30 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-\n-if [ \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then\n-  # TRAVIS_BRANCH will be present in a Travis environment. For builds triggered\n-  # by a pull request this is the name of the branch targeted by the pull request.\n-  # https://docs.travis-ci.com/user/environment-variables/\n-  COMMIT_RANGE=\"$TRAVIS_BRANCH..HEAD\"\n-  test/lint/commit-script-check.sh $COMMIT_RANGE\n-fi\n-\n-test/lint/git-subtree-check.sh src/crypto/ctaes\n-test/lint/git-subtree-check.sh src/secp256k1\n-test/lint/git-subtree-check.sh src/univalue\n-test/lint/git-subtree-check.sh src/leveldb\n-test/lint/git-subtree-check.sh src/crc32c\n-test/lint/check-doc.py\n-test/lint/check-rpc-mappings.py .\n-test/lint/lint-all.sh\n-\n-if [ \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" ] && [ \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then\n-    git log --merges --before=\"2 days ago\" -1 --format='%H' > ./contrib/verify-commits/trusted-sha512-root-commit\n-    travis_retry gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys $(<contrib/verify-commits/trusted-keys) &&\n-    ./contrib/verify-commits/verify-commits.py --clean-merge=2;\n-fi"
      },
      {
        "sha": "1b03c652dbbf5b51f8c05e85090ad6b3ce4a1a85",
        "filename": "ci/retry/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 123,
        "changes": 123,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/retry/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/retry/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/retry/README.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,123 +0,0 @@\n-retry - The command line retry tool\n-------------------------------------------\n-\n-Retry any shell command with exponential backoff or constant delay.\n-\n-### Instructions\n-\n-Install:\n-\n-retry is a shell script, so drop it somewhere and make sure it's added to your $PATH. Or you can use the following one-liner:\n-\n-```sh\n-sudo sh -c \"curl https://raw.githubusercontent.com/kadwanev/retry/master/retry -o /usr/local/bin/retry && chmod +x /usr/local/bin/retry\"\n-```\n-\n-If you're on OS X, retry is also on Homebrew:\n-\n-```\n-brew pull 27283\n-brew install retry\n-```\n-Not popular enough for homebrew-core. Please star this project to help.\n-\n-### Usage\n-\n-Help:\n-\n-`retry -?`\n-\n-    Usage: retry [options] -- execute command\n-        -h, -?, --help\n-        -v, --verbose                    Verbose output\n-        -t, --tries=#                    Set max retries: Default 10\n-        -s, --sleep=secs                 Constant sleep amount (seconds)\n-        -m, --min=secs                   Exponential Backoff: minimum sleep amount (seconds): Default 0.3\n-        -x, --max=secs                   Exponential Backoff: maximum sleep amount (seconds): Default 60\n-        -f, --fail=\"script +cmds\"        Fail Script: run in case of final failure\n-\n-### Examples\n-\n-No problem:\n-\n-`retry echo u work good`\n-\n-    u work good\n-\n-Test functionality:\n-\n-`retry 'echo \"y u no work\"; false'`\n-\n-    y u no work\n-    Before retry #1: sleeping 0.3 seconds\n-    y u no work\n-    Before retry #2: sleeping 0.6 seconds\n-    y u no work\n-    Before retry #3: sleeping 1.2 seconds\n-    y u no work\n-    Before retry #4: sleeping 2.4 seconds\n-    y u no work\n-    Before retry #5: sleeping 4.8 seconds\n-    y u no work\n-    Before retry #6: sleeping 9.6 seconds\n-    y u no work\n-    Before retry #7: sleeping 19.2 seconds\n-    y u no work\n-    Before retry #8: sleeping 38.4 seconds\n-    y u no work\n-    Before retry #9: sleeping 60.0 seconds\n-    y u no work\n-    Before retry #10: sleeping 60.0 seconds\n-    y u no work\n-    etc..\n-\n-Limit retries:\n-\n-`retry -t 4 'echo \"y u no work\"; false'`\n-\n-    y u no work\n-    Before retry #1: sleeping 0.3 seconds\n-    y u no work\n-    Before retry #2: sleeping 0.6 seconds\n-    y u no work\n-    Before retry #3: sleeping 1.2 seconds\n-    y u no work\n-    Before retry #4: sleeping 2.4 seconds\n-    y u no work\n-    Retries exhausted\n-\n-Bad command:\n-\n-`retry poop`\n-\n-    bash: poop: command not found\n-\n-Fail command:\n-\n-`retry -t 3 -f 'echo \"oh poopsickles\"' 'echo \"y u no work\"; false'`\n-\n-    y u no work\n-    Before retry #1: sleeping 0.3 seconds\n-    y u no work\n-    Before retry #2: sleeping 0.6 seconds\n-    y u no work\n-    Before retry #3: sleeping 1.2 seconds\n-    y u no work\n-    Retries exhausted, running fail script\n-    oh poopsickles\n-\n-Last attempt passed:\n-\n-`retry -t 3 -- 'if [ $RETRY_ATTEMPT -eq 3 ]; then echo Passed at attempt $RETRY_ATTEMPT; true; else echo Failed at attempt $RETRY_ATTEMPT; false; fi;'`\n-\n-    Failed at attempt 0\n-    Before retry #1: sleeping 0.3 seconds\n-    Failed at attempt 1\n-    Before retry #2: sleeping 0.6 seconds\n-    Failed at attempt 2\n-    Before retry #3: sleeping 1.2 seconds\n-    Passed at attempt 3\n-\n-### License\n-\n-Apache 2.0 - go nuts"
      },
      {
        "sha": "3c06519dbdfebececdfe030cc60cab72d62658a2",
        "filename": "ci/retry/retry",
        "status": "removed",
        "additions": 0,
        "deletions": 163,
        "changes": 163,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/retry/retry",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/retry/retry",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/retry/retry?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,163 +0,0 @@\n-#!/usr/bin/env bash\n-\n-GETOPT_BIN=$IN_GETOPT_BIN\n-GETOPT_BIN=${GETOPT_BIN:-getopt}\n-\n-__sleep_amount() {\n-  if [ -n \"$constant_sleep\" ]; then\n-    sleep_time=$constant_sleep\n-  else\n-    #TODO: check for awk\n-    #TODO: check if user would rather use one of the other possible dependencies: python, ruby, bc, dc\n-    sleep_time=`awk \"BEGIN {t = $min_sleep * $(( (1<<($attempts -1)) )); print (t > $max_sleep ? $max_sleep : t)}\"`\n-  fi\n-}\n-\n-__log_out() {\n-  echo \"$1\" 1>&2\n-}\n-\n-# Parameters: max_tries min_sleep max_sleep constant_sleep fail_script EXECUTION_COMMAND\n-retry()\n-{\n-  local max_tries=\"$1\"; shift\n-  local min_sleep=\"$1\"; shift\n-  local max_sleep=\"$1\"; shift\n-  local constant_sleep=\"$1\"; shift\n-  local fail_script=\"$1\"; shift\n-  if [ -n \"$VERBOSE\" ]; then\n-    __log_out \"Retry Parameters: max_tries=$max_tries min_sleep=$min_sleep max_sleep=$max_sleep constant_sleep=$constant_sleep\"\n-    if [ -n \"$fail_script\" ]; then __log_out \"Fail script: $fail_script\"; fi\n-    __log_out \"\"\n-    __log_out \"Execution Command: $*\"\n-    __log_out \"\"\n-  fi\n-\n-  local attempts=0\n-  local return_code=1\n-\n-\n-  while [[ $return_code -ne 0 && $attempts -le $max_tries ]]; do\n-    if [ $attempts -gt 0 ]; then\n-      __sleep_amount\n-      __log_out \"Before retry #$attempts: sleeping $sleep_time seconds\"\n-      sleep $sleep_time\n-    fi\n-\n-    P=\"$1\"\n-    for param in \"${@:2}\"; do P=\"$P '$param'\"; done\n-    #TODO: replace single quotes in each arg with '\"'\"' ?\n-    export RETRY_ATTEMPT=$attempts\n-    bash -c \"$P\"\n-    return_code=$?\n-    #__log_out \"Process returned $return_code on attempt $attempts\"\n-    if [ $return_code -eq 127 ]; then\n-      # command not found\n-      exit $return_code\n-    elif [ $return_code -ne 0 ]; then\n-      attempts=$[$attempts +1]\n-    fi\n-  done\n-\n-  if [ $attempts -gt $max_tries ]; then\n-    if [ -n \"$fail_script\" ]; then\n-      __log_out \"Retries exhausted, running fail script\"\n-      eval $fail_script\n-    else\n-      __log_out \"Retries exhausted\"\n-    fi\n-  fi\n-\n-  exit $return_code\n-}\n-\n-# If we're being sourced, don't worry about such things\n-if [ \"$BASH_SOURCE\" == \"$0\" ]; then\n-  # Prints the help text\n-  help()\n-  {\n-    local retry=$(basename $0)\n-    cat <<EOF\n-Usage: $retry [options] -- execute command\n-    -h, -?, --help\n-    -v, --verbose                    Verbose output\n-    -t, --tries=#                    Set max retries: Default 10\n-    -s, --sleep=secs                 Constant sleep amount (seconds)\n-    -m, --min=secs                   Exponential Backoff: minimum sleep amount (seconds): Default 0.3\n-    -x, --max=secs                   Exponential Backoff: maximum sleep amount (seconds): Default 60\n-    -f, --fail=\"script +cmds\"        Fail Script: run in case of final failure\n-EOF\n-  }\n-\n-  # show help for no arguments if stdin is a terminal\n-  if { [ -z \"$1\" ] && [ -t 0 ] ; } || [ \"$1\" == '-h' ] || [ \"$1\" == '-?' ] || [ \"$1\" == '--help' ]\n-  then\n-    help\n-    exit 0\n-  fi\n-\n-  $GETOPT_BIN --test > /dev/null\n-  if [[ $? -ne 4 ]]; then\n-      echo \"I\u2019m sorry, 'getopt --test' failed in this environment. Please load GNU getopt.\"\n-      exit 1\n-  fi\n-\n-  OPTIONS=vt:s:m:x:f:\n-  LONGOPTIONS=verbose,tries:,sleep:,min:,max:,fail:\n-\n-  PARSED=$($GETOPT_BIN --options=\"$OPTIONS\" --longoptions=\"$LONGOPTIONS\" --name \"$0\" -- \"$@\")\n-  if [[ $? -ne 0 ]]; then\n-    # e.g. $? == 1\n-    #  then getopt has complained about wrong arguments to stdout\n-    exit 2\n-  fi\n-  # read getopt\u2019s output this way to handle the quoting right:\n-  eval set -- \"$PARSED\"\n-\n-  max_tries=10\n-  min_sleep=0.3\n-  max_sleep=60.0\n-  constant_sleep=\n-  fail_script=\n-\n-  # now enjoy the options in order and nicely split until we see --\n-  while true; do\n-      case \"$1\" in\n-          -v|--verbose)\n-              VERBOSE=true\n-              shift\n-              ;;\n-          -t|--tries)\n-              max_tries=\"$2\"\n-              shift 2\n-              ;;\n-          -s|--sleep)\n-              constant_sleep=\"$2\"\n-              shift 2\n-              ;;\n-          -m|--min)\n-              min_sleep=\"$2\"\n-              shift 2\n-              ;;\n-          -x|--max)\n-              max_sleep=\"$2\"\n-              shift 2\n-              ;;\n-          -f|--fail)\n-              fail_script=\"$2\"\n-              shift 2\n-              ;;\n-          --)\n-              shift\n-              break\n-              ;;\n-          *)\n-              echo \"Programming error\"\n-              exit 3\n-              ;;\n-      esac\n-  done\n-\n-  retry \"$max_tries\" \"$min_sleep\" \"$max_sleep\" \"$constant_sleep\" \"$fail_script\" \"$@\"\n-\n-fi"
      },
      {
        "sha": "702e88186252621e5b8787ef8d89788556173c26",
        "filename": "ci/test/00_setup_env.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 72,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,72 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-# The root dir.\n-# The ci system copies this folder.\n-# This is where the depends build is done.\n-BASE_ROOT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\"/../../ >/dev/null 2>&1 && pwd )\n-export BASE_ROOT_DIR\n-\n-echo \"Setting specific values in env\"\n-if [ -n \"${FILE_ENV}\" ]; then\n-  set -o errexit;\n-  # shellcheck disable=SC1090\n-  source \"${FILE_ENV}\"\n-fi\n-\n-echo \"Fallback to default values in env (if not yet set)\"\n-# The number of parallel jobs to pass down to make and test_runner.py\n-export MAKEJOBS=${MAKEJOBS:--j4}\n-# A folder for the ci system to put temporary files (ccache, datadirs for tests, ...)\n-# This folder only exists on the ci host.\n-export BASE_SCRATCH_DIR=${BASE_SCRATCH_DIR:-$BASE_ROOT_DIR/ci/scratch}\n-# What host to compile for. See also ./depends/README.md\n-# Tests that need cross-compilation export the appropriate HOST.\n-# Tests that run natively guess the host\n-export HOST=${HOST:-$(\"$BASE_ROOT_DIR/depends/config.guess\")}\n-# Whether to prefer BusyBox over GNU utilities\n-export USE_BUSY_BOX=${USE_BUSY_BOX:-false}\n-\n-export RUN_UNIT_TESTS=${RUN_UNIT_TESTS:-true}\n-export RUN_FUNCTIONAL_TESTS=${RUN_FUNCTIONAL_TESTS:-true}\n-export RUN_SECURITY_TESTS=${RUN_SECURITY_TESTS:-false}\n-# By how much to scale the test_runner timeouts (option --timeout-factor).\n-# This is needed because some ci machines have slow CPU or disk, so sanitizers\n-# might be slow or a reindex might be waiting on disk IO.\n-export TEST_RUNNER_TIMEOUT_FACTOR=${TEST_RUNNER_TIMEOUT_FACTOR:-4}\n-export TEST_RUNNER_ENV=${TEST_RUNNER_ENV:-}\n-export RUN_FUZZ_TESTS=${RUN_FUZZ_TESTS:-false}\n-export EXPECTED_TESTS_DURATION_IN_SECONDS=${EXPECTED_TESTS_DURATION_IN_SECONDS:-1000}\n-\n-export CONTAINER_NAME=${CONTAINER_NAME:-ci_unnamed}\n-export DOCKER_NAME_TAG=${DOCKER_NAME_TAG:-ubuntu:18.04}\n-# Randomize test order.\n-# See https://www.boost.org/doc/libs/1_71_0/libs/test/doc/html/boost_test/utf_reference/rt_param_reference/random.html\n-export BOOST_TEST_RANDOM=${BOOST_TEST_RANDOM:-1}\n-# See man 7 debconf\n-export DEBIAN_FRONTEND=noninteractive\n-export CCACHE_SIZE=${CCACHE_SIZE:-100M}\n-export CCACHE_TEMPDIR=${CCACHE_TEMPDIR:-/tmp/.ccache-temp}\n-export CCACHE_COMPRESS=${CCACHE_COMPRESS:-1}\n-# The cache dir.\n-# This folder exists on the ci host and ci guest. Changes are propagated back and forth.\n-export CCACHE_DIR=${CCACHE_DIR:-$BASE_SCRATCH_DIR/.ccache}\n-# The depends dir.\n-# This folder exists on the ci host and ci guest. Changes are propagated back and forth.\n-export DEPENDS_DIR=${DEPENDS_DIR:-$BASE_ROOT_DIR/depends}\n-# Folder where the build result is put (bin and lib).\n-export BASE_OUTDIR=${BASE_OUTDIR:-$BASE_SCRATCH_DIR/out/$HOST}\n-# Folder where the build is done (dist and out-of-tree build).\n-export BASE_BUILD_DIR=${BASE_BUILD_DIR:-$BASE_SCRATCH_DIR/build}\n-export PREVIOUS_RELEASES_DIR=${PREVIOUS_RELEASES_DIR:-$BASE_ROOT_DIR/releases/$HOST}\n-export SDK_URL=${SDK_URL:-https://bitcoincore.org/depends-sources/sdks}\n-export DOCKER_PACKAGES=${DOCKER_PACKAGES:-build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3 rsync git procps}\n-export GOAL=${GOAL:-install}\n-export DIR_QA_ASSETS=${DIR_QA_ASSETS:-${BASE_SCRATCH_DIR}/qa-assets}\n-export PATH=${BASE_ROOT_DIR}/ci/retry:$PATH\n-export CI_RETRY_EXE=${CI_RETRY_EXE:-\"retry --\"}"
      },
      {
        "sha": "610e55c4c3e4b9840d0d0b6631f94c669e313fd7",
        "filename": "ci/test/00_setup_env_arm.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_arm.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_arm.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_arm.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,28 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export HOST=arm-linux-gnueabihf\n-# The host arch is unknown, so we run the tests through qemu.\n-# If the host is arm and wants to run the tests natively, it can set QEMU_USER_CMD to the empty string.\n-if [ -z ${QEMU_USER_CMD+x} ]; then export QEMU_USER_CMD=\"${QEMU_USER_CMD:-\"qemu-arm -L /usr/arm-linux-gnueabihf/\"}\"; fi\n-export DPKG_ADD_ARCH=\"armhf\"\n-export PACKAGES=\"python3-zmq g++-arm-linux-gnueabihf busybox libc6:armhf libstdc++6:armhf libfontconfig1:armhf libxcb1:armhf\"\n-if [ -n \"$QEMU_USER_CMD\" ]; then\n-  # Likely cross-compiling, so install the needed gcc and qemu-user\n-  export PACKAGES=\"$PACKAGES qemu-user\"\n-fi\n-export CONTAINER_NAME=ci_arm_linux\n-# Use debian to avoid 404 apt errors when cross compiling\n-export DOCKER_NAME_TAG=\"debian:buster\"\n-export USE_BUSY_BOX=true\n-export RUN_UNIT_TESTS=true\n-export RUN_FUNCTIONAL_TESTS=false\n-export GOAL=\"install\"\n-# -Wno-psabi is to disable ABI warnings: \"note: parameter passing for argument of type ... changed in GCC 7.1\"\n-# This could be removed once the ABI change warning does not show up by default\n-export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi --enable-werror --with-boost-process\""
      },
      {
        "sha": "e58003ab19e33ae2da6454f95ba1ddd277b11b3d",
        "filename": "ci/test/00_setup_env_i686_centos.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_i686_centos.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_i686_centos.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_i686_centos.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,15 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export HOST=i686-pc-linux-gnu\n-export CONTAINER_NAME=ci_i686_centos_7\n-export DOCKER_NAME_TAG=centos:7\n-export DOCKER_PACKAGES=\"gcc-c++ glibc-devel.x86_64 libstdc++-devel.x86_64 glibc-devel.i686 libstdc++-devel.i686 ccache libtool make git python3 python36-zmq which patch lbzip2 dash\"\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-reduce-exports --with-boost-process\"\n-export CONFIG_SHELL=\"/bin/dash\""
      },
      {
        "sha": "b62f1603f42ec34c8d3aee6e3cb6f16a27785693",
        "filename": "ci/test/00_setup_env_mac.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_mac.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_mac.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,17 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export CONTAINER_NAME=ci_macos_cross\n-export HOST=x86_64-apple-darwin16\n-export PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev python3-setuptools\"\n-export XCODE_VERSION=11.3.1\n-export XCODE_BUILD_ID=11C505\n-export RUN_UNIT_TESTS=false\n-export RUN_FUNCTIONAL_TESTS=false\n-export GOAL=\"deploy\"\n-export BITCOIN_CONFIG=\"--with-gui --enable-reduce-exports --enable-werror --with-boost-process\""
      },
      {
        "sha": "5fb127b7627978c24d67aefd9ab8350f077c6cc6",
        "filename": "ci/test/00_setup_env_mac_host.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_mac_host.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_mac_host.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac_host.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,22 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export HOST=x86_64-apple-darwin16\n-export DOCKER_NAME_TAG=ubuntu:18.04  # Check that bionic can cross-compile to macos (bionic is used in the gitian build as well)\n-export PIP_PACKAGES=\"zmq\"\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--with-gui --enable-reduce-exports --enable-werror --with-boost-process\"\n-export NO_DEPENDS=1\n-export OSX_SDK=\"\"\n-export CCACHE_SIZE=300M\n-\n-export RUN_SECURITY_TESTS=\"true\"\n-if [ \"$TRAVIS_REPO_SLUG\" != \"bitcoin/bitcoin\" ]; then\n-  export RUN_FUNCTIONAL_TESTS=\"false\"\n-  export EXPECTED_TESTS_DURATION_IN_SECONDS=200\n-fi"
      },
      {
        "sha": "191b8049b02e746035dd5b3eb525d8dbb120684c",
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,14 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export CONTAINER_NAME=ci_native_asan\n-export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev libsqlite3-dev\"\n-export DOCKER_NAME_TAG=ubuntu:20.04\n-export NO_DEPENDS=1\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=address,integer,undefined CC=clang CXX=clang++ --with-boost-process\""
      },
      {
        "sha": "a32de4a6b52667a301618861b438f3f8ecb86592",
        "filename": "ci/test/00_setup_env_native_fuzz.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_native_fuzz.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_native_fuzz.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,18 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n-export CONTAINER_NAME=ci_native_fuzz\n-export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev\"\n-export NO_DEPENDS=1\n-export RUN_UNIT_TESTS=false\n-export RUN_FUNCTIONAL_TESTS=false\n-export RUN_FUZZ_TESTS=true\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=clang CXX=clang++ --with-boost-process\"\n-export CCACHE_SIZE=200M"
      },
      {
        "sha": "e06a40eb23b20f97859363b29f5a20b7cc30594a",
        "filename": "ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz_with_valgrind.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,19 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n-export CONTAINER_NAME=ci_native_fuzz_valgrind\n-export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev valgrind\"\n-export NO_DEPENDS=1\n-export RUN_UNIT_TESTS=false\n-export RUN_FUNCTIONAL_TESTS=false\n-export RUN_FUZZ_TESTS=true\n-export FUZZ_TESTS_CONFIG=\"--valgrind\"\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer CC=clang CXX=clang++\"\n-export CCACHE_SIZE=200M"
      },
      {
        "sha": "b88ee2b50fb195f8ea6a7684dacb7e780c535ac4",
        "filename": "ci/test/00_setup_env_native_msan.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_native_msan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_native_msan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_msan.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,23 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n-LIBCXX_DIR=\"${BASE_ROOT_DIR}/ci/scratch/msan/build/\"\n-export MSAN_FLAGS=\"-fsanitize=memory -fsanitize-memory-track-origins=2 -fno-omit-frame-pointer -g -O1 -fno-optimize-sibling-calls\"\n-LIBCXX_FLAGS=\"-nostdinc++ -stdlib=libc++ -L${LIBCXX_DIR}lib -lc++abi -I${LIBCXX_DIR}include -I${LIBCXX_DIR}include/c++/v1 -lpthread -Wl,-rpath,${LIBCXX_DIR}lib -Wno-unused-command-line-argument\"\n-export MSAN_AND_LIBCXX_FLAGS=\"${MSAN_FLAGS} ${LIBCXX_FLAGS}\"\n-export BDB_PREFIX=\"${BASE_ROOT_DIR}/db4\"\n-\n-export CONTAINER_NAME=\"ci_native_msan\"\n-export PACKAGES=\"clang-9 llvm-9 cmake\"\n-export DEP_OPTS=\"NO_BDB=1 NO_QT=1 CC='clang' CXX='clang++' CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}' boost_cxxflags='-std=c++11 -fvisibility=hidden -fPIC ${MSAN_AND_LIBCXX_FLAGS}' zeromq_cxxflags='-std=c++11 ${MSAN_AND_LIBCXX_FLAGS}'\"\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-wallet --with-sanitizers=memory --with-asm=no --prefix=${BASE_ROOT_DIR}/depends/x86_64-pc-linux-gnu/ CC=clang CXX=clang++ CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}' BDB_LIBS='-L${BDB_PREFIX}/lib -ldb_cxx-4.8' BDB_CFLAGS='-I${BDB_PREFIX}/include'\"\n-export USE_MEMORY_SANITIZER=\"true\"\n-export RUN_FUNCTIONAL_TESTS=\"false\"\n-export CCACHE_SIZE=250M"
      },
      {
        "sha": "522a5d9fc28e6f9e0c38f4b8209d06cf668ab776",
        "filename": "ci/test/00_setup_env_native_multiprocess.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_native_multiprocess.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_native_multiprocess.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_multiprocess.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,15 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export CONTAINER_NAME=ci_native_multiprocess\n-export DOCKER_NAME_TAG=ubuntu:20.04\n-export PACKAGES=\"cmake python3\"\n-export DEP_OPTS=\"MULTIPROCESS=1\"\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--with-boost-process\"\n-export TEST_RUNNER_ENV=\"BITCOIND=bitcoin-node\""
      },
      {
        "sha": "0a09bfe23007569c2c5059915509d71302e4eed5",
        "filename": "ci/test/00_setup_env_native_nowallet.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_native_nowallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_native_nowallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_nowallet.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,14 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export CONTAINER_NAME=ci_native_nowallet\n-export DOCKER_NAME_TAG=ubuntu:16.04  # Use xenial to have one config run the tests in python3.5, see doc/dependencies.md\n-export PACKAGES=\"python3-zmq clang-3.8 llvm-3.8\"  # Use clang-3.8 to test C++11 compatibility, see doc/dependencies.md\n-export DEP_OPTS=\"NO_WALLET=1\"\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CC=clang-3.8 CXX=clang++-3.8 --with-boost-process\""
      },
      {
        "sha": "866866229992a9ecd4fe9f47b9c1ead04ef00f5d",
        "filename": "ci/test/00_setup_env_native_qt5.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_native_qt5.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_native_qt5.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_qt5.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,19 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export CONTAINER_NAME=ci_native_qt5\n-export DOCKER_NAME_TAG=ubuntu:18.04  # Check that bionic can compile our c++17 and run our functional tests in python3\n-export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libdbus-1-dev libharfbuzz-dev\"\n-export DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n-export TEST_RUNNER_EXTRA=\"--previous-releases --coverage --extended --exclude feature_dbcrash\"  # Run extended tests so that coverage does not fail, but exclude the very slow dbcrash\n-export RUN_SECURITY_TESTS=\"true\"\n-export RUN_UNIT_TESTS_SEQUENTIAL=\"true\"\n-export RUN_UNIT_TESTS=\"false\"\n-export GOAL=\"install\"\n-export PREVIOUS_RELEASES_TO_DOWNLOAD=\"v0.15.2 v0.16.3 v0.17.2 v0.18.1 v0.19.1\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-libs=no --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-c++17 --enable-debug CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\" --with-boost-process\""
      },
      {
        "sha": "b14a46562c58c2bbf5c4eaf7abd65338ca1c008d",
        "filename": "ci/test/00_setup_env_native_tsan.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_native_tsan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_native_tsan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_tsan.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,15 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export CONTAINER_NAME=ci_native_tsan\n-export DOCKER_NAME_TAG=ubuntu:20.04\n-export PACKAGES=\"clang llvm libc++abi-dev libc++-dev python3-zmq\"\n-export DEP_OPTS=\"CC=clang CXX='clang++ -stdlib=libc++'\"\n-export TEST_RUNNER_EXTRA=\"--exclude feature_block\"  # Low memory on Travis machines, exclude feature_block.\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-gui=no CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' CXXFLAGS='-g' --with-sanitizers=thread CC=clang CXX='clang++ -stdlib=libc++' --with-boost-process\""
      },
      {
        "sha": "bfaea13a2505530afa14df5a2ebb55c954b2576d",
        "filename": "ci/test/00_setup_env_native_valgrind.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_native_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_native_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_valgrind.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,15 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export CONTAINER_NAME=ci_native_valgrind\n-export PACKAGES=\"valgrind clang llvm python3-zmq libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libsqlite3-dev\"\n-export USE_VALGRIND=1\n-export NO_DEPENDS=1\n-export TEST_RUNNER_EXTRA=\"--exclude rpc_bind\"  # Excluded for now, see https://github.com/bitcoin/bitcoin/issues/17765#issuecomment-602068547\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=no CC=clang CXX=clang++\"  # TODO enable GUI"
      },
      {
        "sha": "accbd07e22b9c25b6480627be17ed6fb17b90d58",
        "filename": "ci/test/00_setup_env_s390x.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_s390x.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_s390x.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_s390x.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,26 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export HOST=s390x-linux-gnu\n-# The host arch is unknown, so we run the tests through qemu.\n-# If the host is s390x and wants to run the tests natively, it can set QEMU_USER_CMD to the empty string.\n-if [ -z ${QEMU_USER_CMD+x} ]; then export QEMU_USER_CMD=\"${QEMU_USER_CMD:-\"qemu-s390x\"}\"; fi\n-export PACKAGES=\"python3-zmq\"\n-if [ -n \"$QEMU_USER_CMD\" ]; then\n-  # Likely cross-compiling, so install the needed gcc and qemu-user\n-  export DPKG_ADD_ARCH=\"s390x\"\n-  export PACKAGES=\"$PACKAGES g++-s390x-linux-gnu qemu-user libc6:s390x libstdc++6:s390x libfontconfig1:s390x libxcb1:s390x\"\n-fi\n-# Use debian to avoid 404 apt errors\n-export CONTAINER_NAME=ci_s390x\n-export DOCKER_NAME_TAG=\"debian:buster\"\n-export RUN_UNIT_TESTS=true\n-export TEST_RUNNER_ENV=\"LC_ALL=C\"\n-export RUN_FUNCTIONAL_TESTS=true\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-reduce-exports --with-incompatible-bdb --with-boost-process\""
      },
      {
        "sha": "2b351dff6d92f9631b9d64cc4da97b33ad2369d7",
        "filename": "ci/test/00_setup_env_win64.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_win64.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/00_setup_env_win64.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_win64.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,16 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export CONTAINER_NAME=ci_win64\n-export DOCKER_NAME_TAG=ubuntu:18.04  # Check that bionic can cross-compile to win64 (bionic is used in the gitian build as well)\n-export HOST=x86_64-w64-mingw32\n-export PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64\"\n-export RUN_FUNCTIONAL_TESTS=false\n-export RUN_SECURITY_TESTS=\"true\"\n-export GOAL=\"deploy\"\n-export BITCOIN_CONFIG=\"--enable-reduce-exports --disable-gui-tests --without-boost-process\""
      },
      {
        "sha": "80806aab75ba6819b8d77a6857bdc40350eeffc9",
        "filename": "ci/test/03_before_install.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/03_before_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/03_before_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/03_before_install.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,22 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-BEGIN_FOLD () {\n-  echo \"\"\n-  CURRENT_FOLD_NAME=$1\n-  echo \"travis_fold:start:${CURRENT_FOLD_NAME}\"\n-}\n-\n-END_FOLD () {\n-  RET=$?\n-  echo \"travis_fold:end:${CURRENT_FOLD_NAME}\"\n-  if [ $RET != 0 ]; then\n-    echo \"${CURRENT_FOLD_NAME} failed with status code ${RET}\"\n-  fi\n-}\n-"
      },
      {
        "sha": "632bccf574bd5f4a2cfa56aca30c821b9208ca0e",
        "filename": "ci/test/04_install.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 115,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,115 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-if [[ $DOCKER_NAME_TAG == centos* ]]; then\n-  export LC_ALL=en_US.utf8\n-fi\n-if [[ $QEMU_USER_CMD == qemu-s390* ]]; then\n-  export LC_ALL=C\n-fi\n-\n-if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n-  ${CI_RETRY_EXE} pip3 install $PIP_PACKAGES\n-fi\n-\n-# Create folders that are mounted into the docker\n-mkdir -p \"${CCACHE_DIR}\"\n-mkdir -p \"${PREVIOUS_RELEASES_DIR}\"\n-\n-export ASAN_OPTIONS=\"detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1\"\n-export LSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/lsan\"\n-export TSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/tsan:halt_on_error=1:log_path=${BASE_SCRATCH_DIR}/sanitizer-output/tsan\"\n-export UBSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1:report_error_type=1\"\n-env | grep -E '^(BITCOIN_CONFIG|BASE_|QEMU_|CCACHE_|LC_ALL|BOOST_TEST_RANDOM|DEBIAN_FRONTEND|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS|PREVIOUS_RELEASES_DIR)' | tee /tmp/env\n-if [[ $HOST = *-mingw32 ]]; then\n-  DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"\n-elif [[ $BITCOIN_CONFIG = *--with-sanitizers=*address* ]]; then # If ran with (ASan + LSan), Docker needs access to ptrace (https://github.com/google/sanitizers/issues/764)\n-  DOCKER_ADMIN=\"--cap-add SYS_PTRACE\"\n-fi\n-\n-export P_CI_DIR=\"$PWD\"\n-\n-if [ -z \"$DANGER_RUN_CI_ON_HOST\" ]; then\n-  echo \"Creating $DOCKER_NAME_TAG container to run in\"\n-  ${CI_RETRY_EXE} docker pull \"$DOCKER_NAME_TAG\"\n-\n-  DOCKER_ID=$(docker run $DOCKER_ADMIN -idt \\\n-                  --mount type=bind,src=$BASE_ROOT_DIR,dst=/ro_base,readonly \\\n-                  --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR \\\n-                  --mount type=bind,src=$DEPENDS_DIR,dst=$DEPENDS_DIR \\\n-                  --mount type=bind,src=$PREVIOUS_RELEASES_DIR,dst=$PREVIOUS_RELEASES_DIR \\\n-                  -w $BASE_ROOT_DIR \\\n-                  --env-file /tmp/env \\\n-                  --name $CONTAINER_NAME \\\n-                  $DOCKER_NAME_TAG)\n-  export DOCKER_CI_CMD_PREFIX=\"docker exec $DOCKER_ID\"\n-else\n-  echo \"Running on host system without docker wrapper\"\n-fi\n-\n-DOCKER_EXEC () {\n-  $DOCKER_CI_CMD_PREFIX bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd $P_CI_DIR && $*\"\n-}\n-export -f DOCKER_EXEC\n-\n-if [ -n \"$DPKG_ADD_ARCH\" ]; then\n-  DOCKER_EXEC dpkg --add-architecture \"$DPKG_ADD_ARCH\"\n-fi\n-\n-if [[ $DOCKER_NAME_TAG == centos* ]]; then\n-  ${CI_RETRY_EXE} DOCKER_EXEC yum -y install epel-release\n-  ${CI_RETRY_EXE} DOCKER_EXEC yum -y install $DOCKER_PACKAGES $PACKAGES\n-elif [ \"$CI_USE_APT_INSTALL\" != \"no\" ]; then\n-  ${CI_RETRY_EXE} DOCKER_EXEC apt-get update\n-  ${CI_RETRY_EXE} DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -y $PACKAGES $DOCKER_PACKAGES\n-fi\n-\n-if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n-  top -l 1 -s 0 | awk ' /PhysMem/ {print}'\n-  echo \"Number of CPUs: $(sysctl -n hw.logicalcpu)\"\n-else\n-  DOCKER_EXEC free -m -h\n-  DOCKER_EXEC echo \"Number of CPUs \\(nproc\\):\" \\$\\(nproc\\)\n-  DOCKER_EXEC echo $(lscpu | grep Endian)\n-  DOCKER_EXEC echo \"Free disk space:\"\n-  DOCKER_EXEC df -h\n-fi\n-\n-if [ ! -d ${DIR_QA_ASSETS} ]; then\n-  DOCKER_EXEC git clone --depth=1 https://github.com/bitcoin-core/qa-assets ${DIR_QA_ASSETS}\n-fi\n-export DIR_FUZZ_IN=${DIR_QA_ASSETS}/fuzz_seed_corpus/\n-export DIR_UNIT_TEST_DATA=${DIR_QA_ASSETS}/unit_test_data/\n-\n-DOCKER_EXEC mkdir -p \"${BASE_SCRATCH_DIR}/sanitizer-output/\"\n-\n-if [[ ${USE_MEMORY_SANITIZER} == \"true\" ]]; then\n-  DOCKER_EXEC \"update-alternatives --install /usr/bin/clang++ clang++ \\$(which clang++-9) 100\"\n-  DOCKER_EXEC \"update-alternatives --install /usr/bin/clang clang \\$(which clang-9) 100\"\n-  DOCKER_EXEC \"mkdir -p ${BASE_SCRATCH_DIR}/msan/build/\"\n-  DOCKER_EXEC \"git clone --depth=1 https://github.com/llvm/llvm-project -b llvmorg-10.0.0 ${BASE_SCRATCH_DIR}/msan/llvm-project\"\n-  DOCKER_EXEC \"cd ${BASE_SCRATCH_DIR}/msan/build/ && cmake -DLLVM_ENABLE_PROJECTS='libcxx;libcxxabi' -DCMAKE_BUILD_TYPE=Release -DLLVM_USE_SANITIZER=Memory -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DLLVM_TARGETS_TO_BUILD=X86 ../llvm-project/llvm/\"\n-  DOCKER_EXEC \"cd ${BASE_SCRATCH_DIR}/msan/build/ && make $MAKEJOBS cxx\"\n-fi\n-\n-if [ -z \"$DANGER_RUN_CI_ON_HOST\" ]; then\n-  echo \"Create $BASE_ROOT_DIR\"\n-  DOCKER_EXEC rsync -a /ro_base/ $BASE_ROOT_DIR\n-fi\n-\n-if [ \"$USE_BUSY_BOX\" = \"true\" ]; then\n-  echo \"Setup to use BusyBox utils\"\n-  DOCKER_EXEC mkdir -p $BASE_SCRATCH_DIR/bins/\n-  # tar excluded for now because it requires passing in the exact archive type in ./depends (fixed in later BusyBox version)\n-  # find excluded for now because it does not recognize the -delete option in ./depends (fixed in later BusyBox version)\n-  # ar excluded for now because it does not recognize the -q option in ./depends (unknown if fixed)\n-  # shellcheck disable=SC1010\n-  DOCKER_EXEC for util in \\$\\(busybox --list \\| grep -v \"^ar$\" \\| grep -v \"^tar$\" \\| grep -v \"^find$\"\\)\\; do ln -s \\$\\(command -v busybox\\) $BASE_SCRATCH_DIR/bins/\\$util\\; done\n-  # Print BusyBox version\n-  DOCKER_EXEC patch --help\n-fi"
      },
      {
        "sha": "8ce839fc0464d34cae076ebdb717be11a870330e",
        "filename": "ci/test/05_before_script.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 53,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/05_before_script.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,53 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-# Make sure default datadir does not exist and is never read by creating a dummy file\n-if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n-  echo > $HOME/Library/Application\\ Support/Bitcoin\n-else\n-  DOCKER_EXEC echo \\> \\$HOME/.bitcoin\n-fi\n-\n-DOCKER_EXEC mkdir -p ${DEPENDS_DIR}/SDKs ${DEPENDS_DIR}/sdk-sources\n-\n-OSX_SDK_BASENAME=\"Xcode-${XCODE_VERSION}-${XCODE_BUILD_ID}-extracted-SDK-with-libcxx-headers.tar.gz\"\n-OSX_SDK_PATH=\"${DEPENDS_DIR}/sdk-sources/${OSX_SDK_BASENAME}\"\n-\n-if [ -n \"$XCODE_VERSION\" ] && [ ! -f \"$OSX_SDK_PATH\" ]; then\n-  curl --location --fail \"${SDK_URL}/${OSX_SDK_BASENAME}\" -o \"$OSX_SDK_PATH\"\n-fi\n-\n-if [[ ${USE_MEMORY_SANITIZER} == \"true\" ]]; then\n-  # Use BDB compiled using install_db4.sh script to work around linking issue when using BDB\n-  # from depends. See https://github.com/bitcoin/bitcoin/pull/18288#discussion_r433189350 for\n-  # details.\n-  DOCKER_EXEC \"contrib/install_db4.sh \\$(pwd) --enable-umrw CC=clang CXX=clang++ CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}'\"\n-fi\n-\n-if [ -n \"$XCODE_VERSION\" ] && [ -f \"$OSX_SDK_PATH\" ]; then\n-  DOCKER_EXEC tar -C \"${DEPENDS_DIR}/SDKs\" -xf \"$OSX_SDK_PATH\"\n-fi\n-if [[ $HOST = *-mingw32 ]]; then\n-  DOCKER_EXEC update-alternatives --set $HOST-g++ \\$\\(which $HOST-g++-posix\\)\n-fi\n-if [ -z \"$NO_DEPENDS\" ]; then\n-  if [[ $DOCKER_NAME_TAG == centos* ]]; then\n-    # CentOS has problems building the depends if the config shell is not explicitly set\n-    # (i.e. for libevent a Makefile with an empty SHELL variable is generated, leading to\n-    #  an error as the first command is executed)\n-    SHELL_OPTS=\"CONFIG_SHELL=/bin/bash\"\n-  else\n-    SHELL_OPTS=\"CONFIG_SHELL=\"\n-  fi\n-  DOCKER_EXEC $SHELL_OPTS make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n-fi\n-if [ -n \"$PREVIOUS_RELEASES_TO_DOWNLOAD\" ]; then\n-  BEGIN_FOLD previous-versions\n-  DOCKER_EXEC test/get_previous_releases.py -b -t \"$PREVIOUS_RELEASES_DIR\" \"${PREVIOUS_RELEASES_TO_DOWNLOAD}\"\n-  END_FOLD\n-fi"
      },
      {
        "sha": "17d765b862d36f32f2dd3a295bfd8592d865016a",
        "filename": "ci/test/06_script_a.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 56,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/06_script_a.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/06_script_a.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_a.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,56 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$DEPENDS_DIR/$HOST --bindir=$BASE_OUTDIR/bin --libdir=$BASE_OUTDIR/lib\"\n-DOCKER_EXEC \"ccache --zero-stats --max-size=$CCACHE_SIZE\"\n-\n-BEGIN_FOLD autogen\n-if [ -n \"$CONFIG_SHELL\" ]; then\n-  DOCKER_EXEC \"$CONFIG_SHELL\" -c \"./autogen.sh\"\n-else\n-  DOCKER_EXEC ./autogen.sh\n-fi\n-END_FOLD\n-\n-DOCKER_EXEC mkdir -p \"${BASE_BUILD_DIR}\"\n-export P_CI_DIR=\"${BASE_BUILD_DIR}\"\n-\n-BEGIN_FOLD configure\n-DOCKER_EXEC \"${BASE_ROOT_DIR}/configure\" --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( (DOCKER_EXEC cat config.log) && false)\n-END_FOLD\n-\n-BEGIN_FOLD distdir\n-DOCKER_EXEC make distdir VERSION=$HOST\n-END_FOLD\n-\n-export P_CI_DIR=\"${BASE_BUILD_DIR}/bitcoin-$HOST\"\n-\n-BEGIN_FOLD configure\n-DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( (DOCKER_EXEC cat config.log) && false)\n-END_FOLD\n-\n-set -o errtrace\n-trap 'DOCKER_EXEC \"cat ${BASE_SCRATCH_DIR}/sanitizer-output/* 2> /dev/null\"' ERR\n-\n-if [[ ${USE_MEMORY_SANITIZER} == \"true\" ]]; then\n-  # MemorySanitizer (MSAN) does not support tracking memory initialization done by\n-  # using the Linux getrandom syscall. Avoid using getrandom by undefining\n-  # HAVE_SYS_GETRANDOM. See https://github.com/google/sanitizers/issues/852 for\n-  # details.\n-  DOCKER_EXEC 'grep -v HAVE_SYS_GETRANDOM src/config/bitcoin-config.h > src/config/bitcoin-config.h.tmp && mv src/config/bitcoin-config.h.tmp src/config/bitcoin-config.h'\n-fi\n-\n-BEGIN_FOLD build\n-DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && DOCKER_EXEC make $GOAL V=1 ; false )\n-END_FOLD\n-\n-BEGIN_FOLD cache_stats\n-DOCKER_EXEC \"ccache --version | head -n 1 && ccache --show-stats\"\n-DOCKER_EXEC du -sh \"${DEPENDS_DIR}\"/*/\n-DOCKER_EXEC du -sh \"${PREVIOUS_RELEASES_DIR}\"\n-END_FOLD"
      },
      {
        "sha": "87e9f31d0f46d914363db264b5685f8d8b663364",
        "filename": "ci/test/06_script_b.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/06_script_b.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/06_script_b.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_b.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,52 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-if [ -n \"$QEMU_USER_CMD\" ]; then\n-  BEGIN_FOLD wrap-qemu\n-  # Generate all binaries, so that they can be wrapped\n-  DOCKER_EXEC make $MAKEJOBS -C src/secp256k1 VERBOSE=1\n-  DOCKER_EXEC make $MAKEJOBS -C src/univalue VERBOSE=1\n-  DOCKER_EXEC \"${BASE_ROOT_DIR}/ci/test/wrap-qemu.sh\"\n-  END_FOLD\n-fi\n-\n-if [ -n \"$USE_VALGRIND\" ]; then\n-  BEGIN_FOLD wrap-valgrind\n-  DOCKER_EXEC \"${BASE_ROOT_DIR}/ci/test/wrap-valgrind.sh\"\n-  END_FOLD\n-fi\n-\n-if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n-  BEGIN_FOLD unit-tests\n-  DOCKER_EXEC ${TEST_RUNNER_ENV} DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA} LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib make $MAKEJOBS check VERBOSE=1\n-  END_FOLD\n-fi\n-\n-if [ \"$RUN_UNIT_TESTS_SEQUENTIAL\" = \"true\" ]; then\n-  BEGIN_FOLD unit-tests-seq\n-  DOCKER_EXEC ${TEST_RUNNER_ENV} DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA} LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib \"${BASE_BUILD_DIR}/bitcoin-*/src/test/test_bitcoin*\" --catch_system_errors=no -l test_suite\n-  END_FOLD\n-fi\n-\n-if [ \"$RUN_FUNCTIONAL_TESTS\" = \"true\" ]; then\n-  BEGIN_FOLD functional-tests\n-  DOCKER_EXEC LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib ${TEST_RUNNER_ENV} test/functional/test_runner.py --ci $MAKEJOBS --tmpdirprefix \"${BASE_SCRATCH_DIR}/test_runner/\" --ansi --combinedlogslen=4000 --timeout-factor=${TEST_RUNNER_TIMEOUT_FACTOR} ${TEST_RUNNER_EXTRA} --quiet --failfast\n-  END_FOLD\n-fi\n-\n-if [ \"$RUN_SECURITY_TESTS\" = \"true\" ]; then\n-  BEGIN_FOLD security-tests\n-  DOCKER_EXEC make test-security-check\n-  END_FOLD\n-fi\n-\n-if [ \"$RUN_FUZZ_TESTS\" = \"true\" ]; then\n-  BEGIN_FOLD fuzz-tests\n-  DOCKER_EXEC LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib test/fuzz/test_runner.py ${FUZZ_TESTS_CONFIG} $MAKEJOBS -l DEBUG ${DIR_FUZZ_IN}\n-  END_FOLD\n-fi"
      },
      {
        "sha": "be7d7fcc1fe19e32e4cf54a14849fbddb14b29cf",
        "filename": "ci/test/wrap-qemu.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/wrap-qemu.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/wrap-qemu.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/wrap-qemu.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,18 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-for b_name in {\"${BASE_OUTDIR}/bin\"/*,src/secp256k1/*tests,src/univalue/{no_nul,test_json,unitester,object}}; do\n-    # shellcheck disable=SC2044\n-    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename $b_name)); do\n-      echo \"Wrap $b ...\"\n-      mv \"$b\" \"${b}_orig\"\n-      echo '#!/usr/bin/env bash' > \"$b\"\n-      echo \"$QEMU_USER_CMD \\\"${b}_orig\\\" \\\"\\$@\\\"\" >> \"$b\"\n-      chmod +x \"$b\"\n-    done\n-done"
      },
      {
        "sha": "6b3e6eb7e7412f1f4d1fe5de4bdfb0eeb97a1fba",
        "filename": "ci/test/wrap-valgrind.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/wrap-valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test/wrap-valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/wrap-valgrind.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,18 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-for b_name in \"${BASE_OUTDIR}/bin\"/*; do\n-    # shellcheck disable=SC2044\n-    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename $b_name)); do\n-      echo \"Wrap $b ...\"\n-      mv \"$b\" \"${b}_orig\"\n-      echo '#!/usr/bin/env bash' > \"$b\"\n-      echo \"valgrind --gen-suppressions=all --quiet --error-exitcode=1 --suppressions=${BASE_ROOT_DIR}/contrib/valgrind.supp \\\"${b}_orig\\\" \\\"\\$@\\\"\" >> \"$b\"\n-      chmod +x \"$b\"\n-    done\n-done"
      },
      {
        "sha": "a1d4bd19524daefccee252ec22fbcdd780c2c3d1",
        "filename": "ci/test_run_all.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test_run_all.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/ci/test_run_all.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test_run_all.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,14 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-set -o errexit; source ./ci/test/00_setup_env.sh\n-set -o errexit; source ./ci/test/03_before_install.sh\n-set -o errexit; source ./ci/test/04_install.sh\n-set -o errexit; source ./ci/test/05_before_script.sh\n-set -o errexit; source ./ci/test/06_script_a.sh\n-set -o errexit; source ./ci/test/06_script_b.sh"
      },
      {
        "sha": "9a16b7c8806ee40bae93de32aef67cb553a2b123",
        "filename": "configure.ac",
        "status": "removed",
        "additions": 0,
        "deletions": 1776,
        "changes": 1776,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,1776 +0,0 @@\n-AC_PREREQ([2.69])\n-define(_CLIENT_VERSION_MAJOR, 0)\n-define(_CLIENT_VERSION_MINOR, 20)\n-define(_CLIENT_VERSION_REVISION, 99)\n-define(_CLIENT_VERSION_BUILD, 0)\n-define(_CLIENT_VERSION_RC, 0)\n-define(_CLIENT_VERSION_IS_RELEASE, false)\n-define(_COPYRIGHT_YEAR, 2020)\n-define(_COPYRIGHT_HOLDERS,[The %s developers])\n-define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\n-AC_INIT([Bitcoin Core],m4_join([.], _CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MINOR, _CLIENT_VERSION_REVISION, m4_if(_CLIENT_VERSION_BUILD, [0], [], _CLIENT_VERSION_BUILD))m4_if(_CLIENT_VERSION_RC, [0], [], [rc]_CLIENT_VERSION_RC),[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n-AC_CONFIG_SRCDIR([src/validation.cpp])\n-AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n-AC_CONFIG_AUX_DIR([build-aux])\n-AC_CONFIG_MACRO_DIR([build-aux/m4])\n-\n-m4_ifndef([PKG_PROG_PKG_CONFIG], [AC_MSG_ERROR([PKG_PROG_PKG_CONFIG macro not found. Please install pkg-config and re-run autogen.sh])])\n-PKG_PROG_PKG_CONFIG\n-if test \"x$PKG_CONFIG\" = x; then\n-  AC_MSG_ERROR([pkg-config not found])\n-fi\n-\n-BITCOIN_DAEMON_NAME=bitcoind\n-BITCOIN_GUI_NAME=bitcoin-qt\n-BITCOIN_CLI_NAME=bitcoin-cli\n-BITCOIN_TX_NAME=bitcoin-tx\n-BITCOIN_WALLET_TOOL_NAME=bitcoin-wallet\n-\n-dnl Unless the user specified ARFLAGS, force it to be cr\n-AC_ARG_VAR(ARFLAGS, [Flags for the archiver, defaults to <cr> if not set])\n-if test \"x${ARFLAGS+set}\" != \"xset\"; then\n-  ARFLAGS=\"cr\"\n-fi\n-\n-AC_CANONICAL_HOST\n-\n-AH_TOP([#ifndef BITCOIN_CONFIG_H])\n-AH_TOP([#define BITCOIN_CONFIG_H])\n-AH_BOTTOM([#endif //BITCOIN_CONFIG_H])\n-\n-dnl faketime breaks configure and is only needed for make. Disable it here.\n-unset FAKETIME\n-\n-dnl Automake init set-up and checks\n-AM_INIT_AUTOMAKE([1.13 no-define subdir-objects foreign])\n-\n-dnl faketime messes with timestamps and causes configure to be re-run.\n-dnl --disable-maintainer-mode can be used to bypass this.\n-AM_MAINTAINER_MODE([enable])\n-\n-dnl make the compilation flags quiet unless V=1 is used\n-AM_SILENT_RULES([yes])\n-\n-dnl Compiler checks (here before libtool).\n-if test \"x${CXXFLAGS+set}\" = \"xset\"; then\n-  CXXFLAGS_overridden=yes\n-else\n-  CXXFLAGS_overridden=no\n-fi\n-AC_PROG_CXX\n-\n-dnl By default, libtool for mingw refuses to link static libs into a dll for\n-dnl fear of mixing pic/non-pic objects, and import/export complications. Since\n-dnl we have those under control, re-enable that functionality.\n-case $host in\n-  *mingw*)\n-     lt_cv_deplibs_check_method=\"pass_all\"\n-  ;;\n-esac\n-\n-AC_ARG_ENABLE([c++17],\n-  [AS_HELP_STRING([--enable-c++17],\n-  [enable compilation in c++17 mode (disabled by default)])],\n-  [use_cxx17=$enableval],\n-  [use_cxx17=no])\n-\n-dnl Require C++11 or C++17 compiler (no GNU extensions)\n-if test \"x$use_cxx17\" = xyes -o \"x$enable_fuzz\" = xyes ; then\n-  AX_CXX_COMPILE_STDCXX([17], [noext], [mandatory])\n-else\n-  AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory])\n-fi\n-\n-dnl Check if -latomic is required for <std::atomic>\n-CHECK_ATOMIC\n-\n-dnl Unless the user specified OBJCXX, force it to be the same as CXX. This ensures\n-dnl that we get the same -std flags for both.\n-m4_ifdef([AC_PROG_OBJCXX],[\n-if test \"x${OBJCXX+set}\" = \"x\"; then\n-  OBJCXX=\"${CXX}\"\n-fi\n-AC_PROG_OBJCXX\n-])\n-\n-dnl Since libtool 1.5.2 (released 2004-01-25), on Linux libtool no longer\n-dnl sets RPATH for any directories in the dynamic linker search path.\n-dnl See more: https://wiki.debian.org/RpathIssue\n-LT_PREREQ([1.5.2])\n-dnl Libtool init checks.\n-LT_INIT([pic-only])\n-\n-dnl Check/return PATH for base programs.\n-AC_PATH_TOOL(AR, ar)\n-AC_PATH_TOOL(RANLIB, ranlib)\n-AC_PATH_TOOL(STRIP, strip)\n-AC_PATH_TOOL(GCOV, gcov)\n-AC_PATH_TOOL(LLVM_COV, llvm-cov)\n-AC_PATH_PROG(LCOV, lcov)\n-dnl Python 3.5 is specified in .python-version and should be used if available, see doc/dependencies.md\n-AC_PATH_PROGS([PYTHON], [python3.5 python3.6 python3.7 python3.8 python3 python])\n-AC_PATH_PROG(GENHTML, genhtml)\n-AC_PATH_PROG([GIT], [git])\n-AC_PATH_PROG(CCACHE,ccache)\n-AC_PATH_PROG(XGETTEXT,xgettext)\n-AC_PATH_PROG(HEXDUMP,hexdump)\n-AC_PATH_TOOL(READELF, readelf)\n-AC_PATH_TOOL(CPPFILT, c++filt)\n-AC_PATH_TOOL(OBJCOPY, objcopy)\n-AC_PATH_PROG(DOXYGEN, doxygen)\n-AM_CONDITIONAL([HAVE_DOXYGEN], [test -n \"$DOXYGEN\"])\n-\n-AC_ARG_VAR(PYTHONPATH, Augments the default search path for python module files)\n-\n-AC_ARG_ENABLE([wallet],\n-  [AS_HELP_STRING([--disable-wallet],\n-  [disable wallet (enabled by default)])],\n-  [enable_wallet=$enableval],\n-  [enable_wallet=yes])\n-\n-AC_ARG_WITH([sqlite],\n-  [AS_HELP_STRING([--with-sqlite=yes|no|auto],\n-  [enable sqlite wallet support (default: auto, i.e., enabled if wallet is enabled and sqlite is found)])],\n-  [use_sqlite=$withval],\n-  [use_sqlite=auto])\n-\n-AC_ARG_WITH([miniupnpc],\n-  [AS_HELP_STRING([--with-miniupnpc],\n-  [enable UPNP (default is yes if libminiupnpc is found)])],\n-  [use_upnp=$withval],\n-  [use_upnp=auto])\n-\n-AC_ARG_ENABLE([upnp-default],\n-  [AS_HELP_STRING([--enable-upnp-default],\n-  [if UPNP is enabled, turn it on at startup (default is no)])],\n-  [use_upnp_default=$enableval],\n-  [use_upnp_default=no])\n-\n-AC_ARG_ENABLE(tests,\n-    AS_HELP_STRING([--disable-tests],[do not compile tests (default is to compile)]),\n-    [use_tests=$enableval],\n-    [use_tests=yes])\n-\n-AC_ARG_ENABLE(gui-tests,\n-    AS_HELP_STRING([--disable-gui-tests],[do not compile GUI tests (default is to compile if GUI and tests enabled)]),\n-    [use_gui_tests=$enableval],\n-    [use_gui_tests=$use_tests])\n-\n-AC_ARG_ENABLE(bench,\n-    AS_HELP_STRING([--disable-bench],[do not compile benchmarks (default is to compile)]),\n-    [use_bench=$enableval],\n-    [use_bench=yes])\n-\n-AC_ARG_ENABLE([extended-functional-tests],\n-    AS_HELP_STRING([--enable-extended-functional-tests],[enable expensive functional tests when using lcov (default no)]),\n-    [use_extended_functional_tests=$enableval],\n-    [use_extended_functional_tests=no])\n-\n-AC_ARG_ENABLE([fuzz],\n-    AS_HELP_STRING([--enable-fuzz],\n-    [enable building of fuzz targets (default no). enabling this will disable all other targets]),\n-    [enable_fuzz=$enableval],\n-    [enable_fuzz=no])\n-\n-AC_ARG_WITH([qrencode],\n-  [AS_HELP_STRING([--with-qrencode],\n-  [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n-  [use_qr=$withval],\n-  [use_qr=auto])\n-\n-AC_ARG_ENABLE([hardening],\n-  [AS_HELP_STRING([--disable-hardening],\n-  [do not attempt to harden the resulting executables (default is to harden when possible)])],\n-  [use_hardening=$enableval],\n-  [use_hardening=auto])\n-\n-AC_ARG_ENABLE([reduce-exports],\n-  [AS_HELP_STRING([--enable-reduce-exports],\n-  [attempt to reduce exported symbols in the resulting executables (default is no)])],\n-  [use_reduce_exports=$enableval],\n-  [use_reduce_exports=no])\n-\n-AC_ARG_ENABLE([ccache],\n-  [AS_HELP_STRING([--disable-ccache],\n-  [do not use ccache for building (default is to use if found)])],\n-  [use_ccache=$enableval],\n-  [use_ccache=auto])\n-\n-dnl Suppress warnings from external headers (e.g. Boost, Qt).\n-dnl May be useful if warnings from external headers clutter the build output\n-dnl too much, so that it becomes difficult to spot Bitcoin Core warnings\n-dnl or if they cause a build failure with --enable-werror.\n-AC_ARG_ENABLE([suppress-external-warnings],\n-  [AS_HELP_STRING([--enable-suppress-external-warnings],\n-                  [Suppress warnings from external headers (default is no)])],\n-  [suppress_external_warnings=$enableval],\n-  [suppress_external_warnings=no])\n-\n-AC_ARG_ENABLE([lcov],\n-  [AS_HELP_STRING([--enable-lcov],\n-  [enable lcov testing (default is no)])],\n-  [use_lcov=$enableval],\n-  [use_lcov=no])\n-\n-AC_ARG_ENABLE([lcov-branch-coverage],\n-  [AS_HELP_STRING([--enable-lcov-branch-coverage],\n-  [enable lcov testing branch coverage (default is no)])],\n-  [use_lcov_branch=yes],\n-  [use_lcov_branch=no])\n-\n-AC_ARG_ENABLE([glibc-back-compat],\n-  [AS_HELP_STRING([--enable-glibc-back-compat],\n-  [enable backwards compatibility with glibc])],\n-  [use_glibc_compat=$enableval],\n-  [use_glibc_compat=no])\n-\n-AC_ARG_ENABLE([threadlocal],\n-  [AS_HELP_STRING([--enable-threadlocal],\n-  [enable features that depend on the c++ thread_local keyword (currently just thread names in debug logs). (default is to enabled if there is platform support and glibc-back-compat is not enabled)])],\n-  [use_thread_local=$enableval],\n-  [use_thread_local=auto])\n-\n-AC_ARG_ENABLE([asm],\n-  [AS_HELP_STRING([--disable-asm],\n-  [disable assembly routines (enabled by default)])],\n-  [use_asm=$enableval],\n-  [use_asm=yes])\n-\n-if test \"x$use_asm\" = xyes; then\n-  AC_DEFINE(USE_ASM, 1, [Define this symbol to build in assembly routines])\n-fi\n-\n-AC_ARG_WITH([system-univalue],\n-  [AS_HELP_STRING([--with-system-univalue],\n-  [Build with system UniValue (default is no)])],\n-  [system_univalue=$withval],\n-  [system_univalue=no]\n-)\n-AC_ARG_ENABLE([zmq],\n-  [AS_HELP_STRING([--disable-zmq],\n-  [disable ZMQ notifications])],\n-  [use_zmq=$enableval],\n-  [use_zmq=yes])\n-\n-AC_ARG_WITH([libmultiprocess],\n-  [AS_HELP_STRING([--with-libmultiprocess=yes|no|auto],\n-  [Build with libmultiprocess library. (default: auto, i.e. detect with pkg-config)])],\n-  [with_libmultiprocess=$withval],\n-  [with_libmultiprocess=auto])\n-\n-AC_ARG_WITH([mpgen],\n-  [AS_HELP_STRING([--with-mpgen=yes|no|auto|PREFIX],\n-  [Build with libmultiprocess codegen tool. Useful to specify different libmultiprocess host system library and build system codegen tool prefixes when cross-compiling (default is host system libmultiprocess prefix)])],\n-  [with_mpgen=$withval],\n-  [with_mpgen=auto])\n-\n-AC_ARG_ENABLE([multiprocess],\n-  [AS_HELP_STRING([--enable-multiprocess],\n-  [build multiprocess bitcoin-node, bitcoin-wallet, and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental (default is no)])],\n-  [enable_multiprocess=$enableval],\n-  [enable_multiprocess=no])\n-\n-AC_ARG_ENABLE(man,\n-    [AS_HELP_STRING([--disable-man],\n-                    [do not install man pages (default is to install)])],,\n-    enable_man=yes)\n-AM_CONDITIONAL(ENABLE_MAN, test \"$enable_man\" != no)\n-\n-dnl Enable debug\n-AC_ARG_ENABLE([debug],\n-    [AS_HELP_STRING([--enable-debug],\n-                    [use compiler flags and macros suited for debugging (default is no)])],\n-    [enable_debug=$enableval],\n-    [enable_debug=no])\n-\n-dnl Enable different -fsanitize options\n-AC_ARG_WITH([sanitizers],\n-    [AS_HELP_STRING([--with-sanitizers],\n-                    [comma separated list of extra sanitizers to build with (default is none enabled)])],\n-    [use_sanitizers=$withval])\n-\n-dnl Enable gprof profiling\n-AC_ARG_ENABLE([gprof],\n-    [AS_HELP_STRING([--enable-gprof],\n-                    [use gprof profiling compiler flags (default is no)])],\n-    [enable_gprof=$enableval],\n-    [enable_gprof=no])\n-\n-dnl Pass compiler & linker flags that make builds deterministic\n-AC_ARG_ENABLE([determinism],\n-    [AS_HELP_STRING([--enable-determinism],\n-                    [Enable compilation flags that make builds deterministic (default is no)])],\n-    [enable_determinism=$enableval],\n-    [enable_determinism=no])\n-\n-dnl Turn warnings into errors\n-AC_ARG_ENABLE([werror],\n-    [AS_HELP_STRING([--enable-werror],\n-                    [Treat certain compiler warnings as errors (default is no)])],\n-    [enable_werror=$enableval],\n-    [enable_werror=no])\n-\n-AC_LANG_PUSH([C++])\n-\n-dnl Check for a flag to turn compiler warnings into errors. This is helpful for checks which may\n-dnl appear to succeed because by default they merely emit warnings when they fail.\n-dnl\n-dnl Note that this is not necessarily a check to see if -Werror is supported, but rather to see if\n-dnl a compile with -Werror can succeed. This is important because the compiler may already be\n-dnl warning about something unrelated, for example about some path issue. If that is the case,\n-dnl -Werror cannot be used because all of those warnings would be turned into errors.\n-AX_CHECK_COMPILE_FLAG([-Werror],[CXXFLAG_WERROR=\"-Werror\"],[CXXFLAG_WERROR=\"\"])\n-\n-dnl Check for a flag to turn linker warnings into errors. When flags are passed to linkers via the\n-dnl compiler driver using a -Wl,-foo flag, linker warnings may be swallowed rather than bubbling up.\n-dnl See note above, the same applies here as well.\n-dnl\n-dnl LDFLAG_WERROR Should only be used when testing -Wl,*\n-case $host in\n- *darwin*)\n-    AX_CHECK_LINK_FLAG([-Wl,-fatal_warnings],[LDFLAG_WERROR=\"-Wl,-fatal_warnings\"],[LDFLAG_WERROR=\"\"])\n-    ;;\n-  *)\n-    AX_CHECK_LINK_FLAG([-Wl,--fatal-warnings],[LDFLAG_WERROR=\"-Wl,--fatal-warnings\"],[LDFLAG_WERROR=\"\"])\n-    ;;\n-esac\n-\n-if test \"x$enable_debug\" = xyes; then\n-  dnl Clear default -g -O2 flags\n-  if test \"x$CXXFLAGS_overridden\" = xno; then\n-\tCXXFLAGS=\"\"\n-  fi\n-\n-  dnl Disable all optimizations\n-  AX_CHECK_COMPILE_FLAG([-O0], [[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -O0\"]],,[[$CXXFLAG_WERROR]])\n-\n-  dnl Prefer -g3, fall back to -g if that is unavailable.\n-  AX_CHECK_COMPILE_FLAG(\n-    [-g3],\n-    [[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -g3\"]],\n-    [AX_CHECK_COMPILE_FLAG([-g],[[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -g\"]],,[[$CXXFLAG_WERROR]])],\n-    [[$CXXFLAG_WERROR]])\n-\n-  AX_CHECK_PREPROC_FLAG([-DDEBUG],[[DEBUG_CPPFLAGS=\"$DEBUG_CPPFLAGS -DDEBUG\"]],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_PREPROC_FLAG([-DDEBUG_LOCKORDER],[[DEBUG_CPPFLAGS=\"$DEBUG_CPPFLAGS -DDEBUG_LOCKORDER\"]],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-ftrapv],[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -ftrapv\"],,[[$CXXFLAG_WERROR]])\n-fi\n-\n-if test x$use_sanitizers != x; then\n-  dnl First check if the compiler accepts flags. If an incompatible pair like\n-  dnl -fsanitize=address,thread is used here, this check will fail. This will also\n-  dnl fail if a bad argument is passed, e.g. -fsanitize=undfeined\n-  AX_CHECK_COMPILE_FLAG(\n-    [[-fsanitize=$use_sanitizers]],\n-    [[SANITIZER_CXXFLAGS=-fsanitize=$use_sanitizers]],\n-    [AC_MSG_ERROR([compiler did not accept requested flags])])\n-\n-  dnl Some compilers (e.g. GCC) require additional libraries like libasan,\n-  dnl libtsan, libubsan, etc. Make sure linking still works with the sanitize\n-  dnl flag. This is a separate check so we can give a better error message when\n-  dnl the sanitize flags are supported by the compiler but the actual sanitizer\n-  dnl libs are missing.\n-  AX_CHECK_LINK_FLAG(\n-    [[-fsanitize=$use_sanitizers]],\n-    [[SANITIZER_LDFLAGS=-fsanitize=$use_sanitizers]],\n-    [AC_MSG_ERROR([linker did not accept requested flags, you are missing required libraries])],\n-    [],\n-    [AC_LANG_PROGRAM([[\n-    #include <cstdint>\n-    #include <cstddef>\n-    extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) { return 0; }\n-    __attribute__((weak)) // allow for libFuzzer linking\n-    ]],[[]])])\n-fi\n-\n-ERROR_CXXFLAGS=\n-if test \"x$enable_werror\" = \"xyes\"; then\n-  if test \"x$CXXFLAG_WERROR\" = \"x\"; then\n-    AC_MSG_ERROR(\"enable-werror set but -Werror is not usable\")\n-  fi\n-  AX_CHECK_COMPILE_FLAG([-Werror=gnu],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=gnu\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=vla\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=shadow-field],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=shadow-field\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=switch],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=switch\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=thread-safety],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=range-loop-analysis],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=range-loop-analysis\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=unused-variable],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=unused-variable\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=date-time],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=date-time\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=return-type],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=return-type\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=conditional-uninitialized],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=conditional-uninitialized\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=sign-compare],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=sign-compare\"],,[[$CXXFLAG_WERROR]])\n-  dnl -Wsuggest-override is broken with GCC before 9.2\n-  dnl https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78010\n-  AX_CHECK_COMPILE_FLAG([-Werror=suggest-override],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=suggest-override\"],,[[$CXXFLAG_WERROR]],\n-                        [AC_LANG_SOURCE([[struct A { virtual void f(); }; struct B : A { void f() final; };]])])\n-  AX_CHECK_COMPILE_FLAG([-Werror=unreachable-code-loop-increment],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=unreachable-code-loop-increment\"],,[[$CXXFLAG_WERROR]])\n-fi\n-\n-if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n-  AX_CHECK_COMPILE_FLAG([-Wall],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wall\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wextra],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wgnu],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wgnu\"],,[[$CXXFLAG_WERROR]])\n-  dnl some compilers will ignore -Wformat-security without -Wformat, so just combine the two here.\n-  AX_CHECK_COMPILE_FLAG([-Wformat -Wformat-security],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wformat -Wformat-security\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wvla],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wvla\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wshadow-field],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wshadow-field\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wswitch],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wswitch\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wthread-safety],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wthread-safety\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wrange-loop-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wrange-loop-analysis\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wredundant-decls],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wredundant-decls\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wunused-variable],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunused-variable\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wdate-time],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wdate-time\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wconditional-uninitialized],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wconditional-uninitialized\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wsign-compare],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wsign-compare\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wduplicated-branches],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wduplicated-branches\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wduplicated-cond],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wduplicated-cond\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wlogical-op],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wlogical-op\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Woverloaded-virtual],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Woverloaded-virtual\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wsuggest-override],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wsuggest-override\"],,[[$CXXFLAG_WERROR]],\n-                        [AC_LANG_SOURCE([[struct A { virtual void f(); }; struct B : A { void f() final; };]])])\n-  AX_CHECK_COMPILE_FLAG([-Wunreachable-code-loop-increment],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunreachable-code-loop-increment\"],,[[$CXXFLAG_WERROR]])\n-\n-  dnl Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n-  dnl unknown options if any other warning is produced. Test the -Wfoo case, and\n-  dnl set the -Wno-foo case if it works.\n-  AX_CHECK_COMPILE_FLAG([-Wunused-parameter],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-parameter\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wself-assign],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-register\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-implicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wdeprecated-copy],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-copy\"],,[[$CXXFLAG_WERROR]])\n-fi\n-\n-dnl Don't allow extended (non-ASCII) symbols in identifiers. This is easier for code review.\n-AX_CHECK_COMPILE_FLAG([-fno-extended-identifiers],[[CXXFLAGS=\"$CXXFLAGS -fno-extended-identifiers\"]],,[[$CXXFLAG_WERROR]])\n-\n-enable_sse42=no\n-enable_sse41=no\n-enable_avx2=no\n-enable_shani=no\n-\n-if test \"x$use_asm\" = \"xyes\"; then\n-\n-dnl Check for optional instruction set support. Enabling these does _not_ imply that all code will\n-dnl be compiled with them, rather that specific objects/libs may use them after checking for runtime\n-dnl compatibility.\n-\n-dnl x86\n-AX_CHECK_COMPILE_FLAG([-msse4.2],[[SSE42_CXXFLAGS=\"-msse4.2\"]],,[[$CXXFLAG_WERROR]])\n-AX_CHECK_COMPILE_FLAG([-msse4.1],[[SSE41_CXXFLAGS=\"-msse4.1\"]],,[[$CXXFLAG_WERROR]])\n-AX_CHECK_COMPILE_FLAG([-mavx -mavx2],[[AVX2_CXXFLAGS=\"-mavx -mavx2\"]],,[[$CXXFLAG_WERROR]])\n-AX_CHECK_COMPILE_FLAG([-msse4 -msha],[[SHANI_CXXFLAGS=\"-msse4 -msha\"]],,[[$CXXFLAG_WERROR]])\n-\n-TEMP_CXXFLAGS=\"$CXXFLAGS\"\n-CXXFLAGS=\"$CXXFLAGS $SSE42_CXXFLAGS\"\n-AC_MSG_CHECKING(for SSE4.2 intrinsics)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    #include <stdint.h>\n-    #if defined(_MSC_VER)\n-    #include <intrin.h>\n-    #elif defined(__GNUC__) && defined(__SSE4_2__)\n-    #include <nmmintrin.h>\n-    #endif\n-  ]],[[\n-    uint64_t l = 0;\n-    l = _mm_crc32_u8(l, 0);\n-    l = _mm_crc32_u32(l, 0);\n-    l = _mm_crc32_u64(l, 0);\n-    return l;\n-  ]])],\n- [ AC_MSG_RESULT(yes); enable_sse42=yes],\n- [ AC_MSG_RESULT(no)]\n-)\n-CXXFLAGS=\"$TEMP_CXXFLAGS\"\n-\n-TEMP_CXXFLAGS=\"$CXXFLAGS\"\n-CXXFLAGS=\"$CXXFLAGS $SSE41_CXXFLAGS\"\n-AC_MSG_CHECKING(for SSE4.1 intrinsics)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    #include <stdint.h>\n-    #include <immintrin.h>\n-  ]],[[\n-    __m128i l = _mm_set1_epi32(0);\n-    return _mm_extract_epi32(l, 3);\n-  ]])],\n- [ AC_MSG_RESULT(yes); enable_sse41=yes; AC_DEFINE(ENABLE_SSE41, 1, [Define this symbol to build code that uses SSE4.1 intrinsics]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-CXXFLAGS=\"$TEMP_CXXFLAGS\"\n-\n-TEMP_CXXFLAGS=\"$CXXFLAGS\"\n-CXXFLAGS=\"$CXXFLAGS $AVX2_CXXFLAGS\"\n-AC_MSG_CHECKING(for AVX2 intrinsics)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    #include <stdint.h>\n-    #include <immintrin.h>\n-  ]],[[\n-    __m256i l = _mm256_set1_epi32(0);\n-    return _mm256_extract_epi32(l, 7);\n-  ]])],\n- [ AC_MSG_RESULT(yes); enable_avx2=yes; AC_DEFINE(ENABLE_AVX2, 1, [Define this symbol to build code that uses AVX2 intrinsics]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-CXXFLAGS=\"$TEMP_CXXFLAGS\"\n-\n-TEMP_CXXFLAGS=\"$CXXFLAGS\"\n-CXXFLAGS=\"$CXXFLAGS $SHANI_CXXFLAGS\"\n-AC_MSG_CHECKING(for SHA-NI intrinsics)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    #include <stdint.h>\n-    #include <immintrin.h>\n-  ]],[[\n-    __m128i i = _mm_set1_epi32(0);\n-    __m128i j = _mm_set1_epi32(1);\n-    __m128i k = _mm_set1_epi32(2);\n-    return _mm_extract_epi32(_mm_sha256rnds2_epu32(i, i, k), 0);\n-  ]])],\n- [ AC_MSG_RESULT(yes); enable_shani=yes; AC_DEFINE(ENABLE_SHANI, 1, [Define this symbol to build code that uses SHA-NI intrinsics]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-CXXFLAGS=\"$TEMP_CXXFLAGS\"\n-\n-# ARM\n-AX_CHECK_COMPILE_FLAG([-march=armv8-a+crc+crypto],[[ARM_CRC_CXXFLAGS=\"-march=armv8-a+crc+crypto\"]],,[[$CXXFLAG_WERROR]])\n-\n-TEMP_CXXFLAGS=\"$CXXFLAGS\"\n-CXXFLAGS=\"$CXXFLAGS $ARM_CRC_CXXFLAGS\"\n-AC_MSG_CHECKING(for ARM CRC32 intrinsics)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    #include <arm_acle.h>\n-    #include <arm_neon.h>\n-  ]],[[\n-    __crc32cb(0, 0); __crc32ch(0, 0); __crc32cw(0, 0); __crc32cd(0, 0);\n-    vmull_p64(0, 0);\n-  ]])],\n- [ AC_MSG_RESULT(yes); enable_arm_crc=yes; ],\n- [ AC_MSG_RESULT(no)]\n-)\n-CXXFLAGS=\"$TEMP_CXXFLAGS\"\n-\n-fi\n-\n-CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n-\n-AC_ARG_WITH([utils],\n-  [AS_HELP_STRING([--with-utils],\n-  [build bitcoin-cli bitcoin-tx bitcoin-wallet (default=yes)])],\n-  [build_bitcoin_utils=$withval],\n-  [build_bitcoin_utils=yes])\n-\n-AC_ARG_ENABLE([util-cli],\n-  [AS_HELP_STRING([--enable-util-cli],\n-  [build bitcoin-cli])],\n-  [build_bitcoin_cli=$enableval],\n-  [build_bitcoin_cli=$build_bitcoin_utils])\n-\n-AC_ARG_ENABLE([util-tx],\n-  [AS_HELP_STRING([--enable-util-tx],\n-  [build bitcoin-tx])],\n-  [build_bitcoin_tx=$enableval],\n-  [build_bitcoin_tx=$build_bitcoin_utils])\n-\n-AC_ARG_ENABLE([util-wallet],\n-  [AS_HELP_STRING([--enable-util-wallet],\n-  [build bitcoin-wallet])],\n-  [build_bitcoin_wallet=$enableval],\n-  [build_bitcoin_wallet=$build_bitcoin_utils])\n-\n-AC_ARG_WITH([libs],\n-  [AS_HELP_STRING([--with-libs],\n-  [build libraries (default=yes)])],\n-  [build_bitcoin_libs=$withval],\n-  [build_bitcoin_libs=yes])\n-\n-AC_ARG_WITH([daemon],\n-  [AS_HELP_STRING([--with-daemon],\n-  [build bitcoind daemon (default=yes)])],\n-  [build_bitcoind=$withval],\n-  [build_bitcoind=yes])\n-\n-case $host in\n-  *mingw*)\n-     TARGET_OS=windows\n-     AC_CHECK_LIB([kernel32], [GetModuleFileNameA],, AC_MSG_ERROR(libkernel32 missing))\n-     AC_CHECK_LIB([user32],   [main],, AC_MSG_ERROR(libuser32 missing))\n-     AC_CHECK_LIB([gdi32],    [main],, AC_MSG_ERROR(libgdi32 missing))\n-     AC_CHECK_LIB([comdlg32], [main],, AC_MSG_ERROR(libcomdlg32 missing))\n-     AC_CHECK_LIB([winmm],    [main],, AC_MSG_ERROR(libwinmm missing))\n-     AC_CHECK_LIB([shell32],  [SHGetSpecialFolderPathW],, AC_MSG_ERROR(libshell32 missing))\n-     AC_CHECK_LIB([comctl32], [main],, AC_MSG_ERROR(libcomctl32 missing))\n-     AC_CHECK_LIB([ole32],    [CoCreateInstance],, AC_MSG_ERROR(libole32 missing))\n-     AC_CHECK_LIB([oleaut32], [main],, AC_MSG_ERROR(liboleaut32 missing))\n-     AC_CHECK_LIB([uuid],     [main],, AC_MSG_ERROR(libuuid missing))\n-     AC_CHECK_LIB([advapi32], [CryptAcquireContextW],, AC_MSG_ERROR(libadvapi32 missing))\n-     AC_CHECK_LIB([ws2_32],   [WSAStartup],, AC_MSG_ERROR(libws2_32 missing))\n-     AC_CHECK_LIB([shlwapi],  [PathRemoveFileSpecW],, AC_MSG_ERROR(libshlwapi missing))\n-     AC_CHECK_LIB([iphlpapi], [GetAdaptersAddresses],, AC_MSG_ERROR(libiphlpapi missing))\n-\n-     dnl -static is interpreted by libtool, where it has a different meaning.\n-     dnl In libtool-speak, it's -all-static.\n-     AX_CHECK_LINK_FLAG([[-static]],[LIBTOOL_APP_LDFLAGS=\"$LIBTOOL_APP_LDFLAGS -all-static\"])\n-\n-     AC_PATH_PROG([MAKENSIS], [makensis], none)\n-     if test x$MAKENSIS = xnone; then\n-       AC_MSG_WARN(\"makensis not found. Cannot create installer.\")\n-     fi\n-\n-     AC_PATH_TOOL(WINDRES, windres, none)\n-     if test x$WINDRES = xnone; then\n-       AC_MSG_ERROR(\"windres not found\")\n-     fi\n-\n-     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -D_WIN32_WINNT=0x0601 -D_WIN32_IE=0x0501 -DWIN32_LEAN_AND_MEAN\"\n-\n-     dnl libtool insists upon adding -nostdlib and a list of objects/libs to link against.\n-     dnl That breaks our ability to build dll's with static libgcc/libstdc++/libssp. Override\n-     dnl its command here, with the predeps/postdeps removed, and -static inserted. Postdeps are\n-     dnl also overridden to prevent their insertion later.\n-     dnl This should only affect dll's.\n-     archive_cmds_CXX=\"\\$CC -shared \\$libobjs \\$deplibs \\$compiler_flags -static -o \\$output_objdir/\\$soname \\${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker \\$lib\"\n-     postdeps_CXX=\n-\n-     dnl We require Windows 7 (NT 6.1) or later\n-     AX_CHECK_LINK_FLAG([[-Wl,--major-subsystem-version -Wl,6 -Wl,--minor-subsystem-version -Wl,1]],[LDFLAGS=\"$LDFLAGS -Wl,--major-subsystem-version -Wl,6 -Wl,--minor-subsystem-version -Wl,1\"],,[[$LDFLAG_WERROR]])\n-     ;;\n-  *darwin*)\n-     TARGET_OS=darwin\n-     if  test x$cross_compiling != xyes; then\n-       BUILD_OS=darwin\n-       AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n-       AC_CHECK_PROG([BREW],brew, brew)\n-       if test x$BREW = xbrew; then\n-         dnl These Homebrew packages may be keg-only, meaning that they won't be found\n-         dnl in expected paths because they may conflict with system files. Ask\n-         dnl Homebrew where each one is located, then adjust paths accordingly.\n-         dnl It's safe to add these paths even if the functionality is disabled by\n-         dnl the user (--without-wallet or --without-gui for example).\n-\n-         bdb_prefix=$($BREW --prefix berkeley-db4 2>/dev/null)\n-         qt5_prefix=$($BREW --prefix qt5 2>/dev/null)\n-         if test x$bdb_prefix != x && test \"x$BDB_CFLAGS\" = \"x\" && test \"x$BDB_LIBS\" = \"x\"; then\n-           dnl This must precede the call to BITCOIN_FIND_BDB48 below.\n-           BDB_CFLAGS=\"-I$bdb_prefix/include\"\n-           BDB_LIBS=\"-L$bdb_prefix/lib -ldb_cxx-4.8\"\n-         fi\n-         if test x$qt5_prefix != x; then\n-           PKG_CONFIG_PATH=\"$qt5_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n-           export PKG_CONFIG_PATH\n-         fi\n-       fi\n-     else\n-       case $build_os in\n-         *darwin*)\n-           BUILD_OS=darwin\n-           ;;\n-         *)\n-           AC_PATH_TOOL([DSYMUTIL], [dsymutil], dsymutil)\n-           AC_PATH_TOOL([INSTALLNAMETOOL], [install_name_tool], install_name_tool)\n-           AC_PATH_TOOL([OTOOL], [otool], otool)\n-           AC_PATH_PROGS([GENISOIMAGE], [genisoimage mkisofs],genisoimage)\n-           AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n-           AC_PATH_PROGS([IMAGEMAGICK_CONVERT], [convert],convert)\n-           AC_PATH_PROGS([TIFFCP], [tiffcp],tiffcp)\n-\n-           dnl libtool will try to strip the static lib, which is a problem for\n-           dnl cross-builds because strip attempts to call a hard-coded ld,\n-           dnl which may not exist in the path. Stripping the .a is not\n-           dnl necessary, so just disable it.\n-           old_striplib=\n-           ;;\n-       esac\n-     fi\n-\n-     AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"],, [[$LDFLAG_WERROR]])\n-     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX -DOBJC_OLD_DISPATCH_PROTOTYPES=0\"\n-     OBJCXXFLAGS=\"$CXXFLAGS\"\n-     ;;\n-   *android*)\n-     dnl make sure android stays above linux for hosts like *linux-android*\n-     TARGET_OS=android\n-     ;;\n-   *linux*)\n-     TARGET_OS=linux\n-     ;;\n-esac\n-\n-if test x$use_extended_functional_tests != xno; then\n-  AC_SUBST(EXTENDED_FUNCTIONAL_TESTS, --extended)\n-fi\n-\n-if test x$use_lcov = xyes; then\n-  if test x$LCOV = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but lcov not found\")\n-  fi\n-  if test x$PYTHON = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but python not found\")\n-  fi\n-  if test x$GENHTML = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but genhtml not found\")\n-  fi\n-\n-  AC_MSG_CHECKING([whether compiler is Clang])\n-  AC_PREPROC_IFELSE([AC_LANG_SOURCE([[\n-      #if defined(__clang__) && defined(__llvm__)\n-      // Compiler is Clang\n-      #else\n-      #  error Compiler is not Clang\n-      #endif\n-    ]])],[\n-      AC_MSG_RESULT([yes])\n-      if test x$LLVM_COV = x; then\n-        AC_MSG_ERROR([lcov testing requested but llvm-cov not found])\n-      fi\n-      COV_TOOL=\"$LLVM_COV gcov\"\n-    ],[\n-      AC_MSG_RESULT([no])\n-      if test x$GCOV = x; then\n-        AC_MSG_ERROR([lcov testing requested but gcov not found])\n-      fi\n-      COV_TOOL=\"$GCOV\"\n-  ])\n-  AC_SUBST(COV_TOOL)\n-  AC_SUBST(COV_TOOL_WRAPPER, \"cov_tool_wrapper.sh\")\n-  LCOV=\"$LCOV --gcov-tool $(pwd)/$COV_TOOL_WRAPPER\"\n-\n-  AX_CHECK_LINK_FLAG([[--coverage]], [LDFLAGS=\"$LDFLAGS --coverage\"],\n-    [AC_MSG_ERROR(\"lcov testing requested but --coverage linker flag does not work\")])\n-  AX_CHECK_COMPILE_FLAG([--coverage],[CXXFLAGS=\"$CXXFLAGS --coverage\"],\n-    [AC_MSG_ERROR(\"lcov testing requested but --coverage flag does not work\")])\n-  CXXFLAGS=\"$CXXFLAGS -Og\"\n-fi\n-\n-if test x$use_lcov_branch != xno; then\n-  AC_SUBST(LCOV_OPTS, \"$LCOV_OPTS --rc lcov_branch_coverage=1\")\n-fi\n-\n-dnl Check for endianness\n-AC_C_BIGENDIAN\n-\n-dnl Check for pthread compile/link requirements\n-AX_PTHREAD\n-\n-dnl The following macro will add the necessary defines to bitcoin-config.h, but\n-dnl they also need to be passed down to any subprojects. Pull the results out of\n-dnl the cache and add them to CPPFLAGS.\n-AC_SYS_LARGEFILE\n-dnl detect POSIX or GNU variant of strerror_r\n-AC_FUNC_STRERROR_R\n-\n-if test x$ac_cv_sys_file_offset_bits != x &&\n-   test x$ac_cv_sys_file_offset_bits != xno &&\n-   test x$ac_cv_sys_file_offset_bits != xunknown; then\n-  CPPFLAGS=\"$CPPFLAGS -D_FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits\"\n-fi\n-\n-if test x$ac_cv_sys_large_files != x &&\n-   test x$ac_cv_sys_large_files != xno &&\n-   test x$ac_cv_sys_large_files != xunknown; then\n-  CPPFLAGS=\"$CPPFLAGS -D_LARGE_FILES=$ac_cv_sys_large_files\"\n-fi\n-\n-AX_GCC_FUNC_ATTRIBUTE([visibility])\n-AX_GCC_FUNC_ATTRIBUTE([dllexport])\n-AX_GCC_FUNC_ATTRIBUTE([dllimport])\n-\n-if test x$use_glibc_compat != xno; then\n-  AX_CHECK_LINK_FLAG([[-Wl,--wrap=__divmoddi4]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=__divmoddi4\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,--wrap=log2f]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=log2f\"])\n-else\n-  AC_SEARCH_LIBS([clock_gettime],[rt])\n-fi\n-\n-if test \"x$enable_gprof\" = xyes; then\n-    dnl -pg is incompatible with -pie. Since hardening and profiling together doesn't make sense,\n-    dnl we simply make them mutually exclusive here. Additionally, hardened toolchains may force\n-    dnl -pie by default, in which case it needs to be turned off with -no-pie.\n-\n-    if test x$use_hardening = xyes; then\n-        AC_MSG_ERROR(gprof profiling is not compatible with hardening. Reconfigure with --disable-hardening or --disable-gprof)\n-    fi\n-    use_hardening=no\n-    AX_CHECK_COMPILE_FLAG([-pg],[GPROF_CXXFLAGS=\"-pg\"],\n-        [AC_MSG_ERROR(gprof profiling requested but not available)], [[$CXXFLAG_WERROR]])\n-\n-    AX_CHECK_LINK_FLAG([[-no-pie]], [GPROF_LDFLAGS=\"-no-pie\"])\n-    AX_CHECK_LINK_FLAG([[-pg]],[GPROF_LDFLAGS=\"$GPROF_LDFLAGS -pg\"],\n-        [AC_MSG_ERROR(gprof profiling requested but not available)], [[$GPROF_LDFLAGS]])\n-fi\n-\n-if test x$TARGET_OS != xwindows; then\n-  dnl All windows code is PIC, forcing it on just adds useless compile warnings\n-  AX_CHECK_COMPILE_FLAG([-fPIC],[PIC_FLAGS=\"-fPIC\"])\n-fi\n-\n-dnl All versions of gcc that we commonly use for building are subject to bug\n-dnl https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n-dnl -fstack-reuse=none for all gcc builds. (Only gcc understands this flag)\n-AX_CHECK_COMPILE_FLAG([-fstack-reuse=none],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-reuse=none\"])\n-if test x$use_hardening != xno; then\n-  use_hardening=yes\n-  AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n-  AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n-\n-  AX_CHECK_COMPILE_FLAG([-fcf-protection=full],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fcf-protection=full\"])\n-\n-  dnl stack-clash-protection does not work properly when building for Windows.\n-  dnl We use the test case from https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90458\n-  dnl to determine if it can be enabled.\n-  AX_CHECK_COMPILE_FLAG([-fstack-clash-protection],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-clash-protection\"],[],[\"-O0\"],\n-    [AC_LANG_SOURCE([[class D {public: unsigned char buf[32768];}; int main() {D d; return 0;}]])])\n-\n-  dnl When enable_debug is yes, all optimizations are disabled.\n-  dnl However, FORTIFY_SOURCE requires that there is some level of optimization, otherwise it does nothing and just creates a compiler warning.\n-  dnl Since FORTIFY_SOURCE is a no-op without optimizations, do not enable it when enable_debug is yes.\n-  if test x$enable_debug != xyes; then\n-    AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n-      AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n-        HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n-      ])\n-      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n-    ])\n-  fi\n-\n-  AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"],, [[$LDFLAG_WERROR]])\n-  AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"],, [[$LDFLAG_WERROR]])\n-  AX_CHECK_LINK_FLAG([[-Wl,--high-entropy-va]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--high-entropy-va\"],, [[$LDFLAG_WERROR]])\n-  AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"],, [[$LDFLAG_WERROR]])\n-  AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"],, [[$LDFLAG_WERROR]])\n-  AX_CHECK_LINK_FLAG([[-Wl,-z,separate-code]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,separate-code\"],, [[$LDFLAG_WERROR]])\n-  AX_CHECK_LINK_FLAG([[-fPIE -pie]], [PIE_FLAGS=\"-fPIE\"; HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"],, [[$CXXFLAG_WERROR]])\n-\n-  case $host in\n-    *mingw*)\n-       AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(libssp missing))\n-    ;;\n-  esac\n-fi\n-\n-dnl These flags are specific to ld64, and may cause issues with other linkers.\n-dnl For example: GNU ld will interpret -dead_strip as -de and then try and use\n-dnl \"ad_strip\" as the symbol for the entry point.\n-if test x$TARGET_OS = xdarwin; then\n-  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"],, [[$LDFLAG_WERROR]])\n-  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip_dylibs]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip_dylibs\"],, [[$LDFLAG_WERROR]])\n-  AX_CHECK_LINK_FLAG([[-Wl,-bind_at_load]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-bind_at_load\"],, [[$LDFLAG_WERROR]])\n-fi\n-\n-if test x$enable_determinism = xyes; then\n-  if test x$TARGET_OS = xwindows; then\n-    AX_CHECK_LINK_FLAG([[-Wl,--no-insert-timestamp]], [LDFLAGS=\"$LDFLAGS -Wl,--no-insert-timestamp\"],, [[$LDFLAG_WERROR]])\n-  fi\n-fi\n-\n-AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h sys/sysctl.h vm/vm_param.h sys/vmmeter.h sys/resources.h])\n-\n-AC_CHECK_DECLS([getifaddrs, freeifaddrs],,,\n-    [#include <sys/types.h>\n-    #include <ifaddrs.h>]\n-)\n-AC_CHECK_DECLS([strnlen])\n-\n-dnl Check for daemon(3), unrelated to --with-daemon (although used by it)\n-AC_CHECK_DECLS([daemon])\n-\n-AC_CHECK_DECLS([le16toh, le32toh, le64toh, htole16, htole32, htole64, be16toh, be32toh, be64toh, htobe16, htobe32, htobe64],,,\n-\t\t[#if HAVE_ENDIAN_H\n-                 #include <endian.h>\n-                 #elif HAVE_SYS_ENDIAN_H\n-                 #include <sys/endian.h>\n-                 #endif])\n-\n-AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,\n-\t\t[#if HAVE_BYTESWAP_H\n-                 #include <byteswap.h>\n-                 #endif])\n-\n-AC_MSG_CHECKING(for __builtin_clzl)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[ ]], [[\n- (void) __builtin_clzl(0);\n-  ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_BUILTIN_CLZL, 1, [Define this symbol if you have __builtin_clzl])],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING(for __builtin_clzll)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[ ]], [[\n-  (void) __builtin_clzll(0);\n-  ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_BUILTIN_CLZLL, 1, [Define this symbol if you have __builtin_clzll])],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-dnl Check for malloc_info (for memory statistics information in getmemoryinfo)\n-AC_MSG_CHECKING(for getmemoryinfo)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n- [[ int f = malloc_info(0, NULL); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOC_INFO, 1,[Define this symbol if you have malloc_info]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-dnl Check for mallopt(M_ARENA_MAX) (to set glibc arenas)\n-AC_MSG_CHECKING(for mallopt M_ARENA_MAX)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n- [[ mallopt(M_ARENA_MAX, 1); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOPT_ARENA_MAX, 1,[Define this symbol if you have mallopt with M_ARENA_MAX]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-dnl Check for posix_fallocate\n-AC_MSG_CHECKING(for posix_fallocate)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-                   // same as in src/util/system.cpp\n-                   #ifdef __linux__\n-                   #ifdef _POSIX_C_SOURCE\n-                   #undef _POSIX_C_SOURCE\n-                   #endif\n-                   #define _POSIX_C_SOURCE 200112L\n-                   #endif // __linux__\n-                   #include <fcntl.h>]],\n-                   [[ int f = posix_fallocate(0, 0, 0); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_POSIX_FALLOCATE, 1,[Define this symbol if you have posix_fallocate]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING([for visibility attribute])\n-AC_LINK_IFELSE([AC_LANG_SOURCE([\n-  int foo_def( void ) __attribute__((visibility(\"default\")));\n-  int main(){}\n-  ])],\n-  [\n-    AC_DEFINE(HAVE_VISIBILITY_ATTRIBUTE,1,[Define if the visibility attribute is supported.])\n-    AC_MSG_RESULT(yes)\n-  ],\n-  [\n-    AC_MSG_RESULT(no)\n-    if test x$use_reduce_exports = xyes; then\n-      AC_MSG_ERROR([Cannot find a working visibility attribute. Use --disable-reduce-exports.])\n-    fi\n-  ]\n-)\n-\n-dnl thread_local is currently disabled when building with glibc back compat.\n-dnl Our minimum supported glibc is 2.17, however support for thread_local\n-dnl did not arrive in glibc until 2.18.\n-if test \"x$use_thread_local\" = xyes || { test \"x$use_thread_local\" = xauto && test \"x$use_glibc_compat\" = xno; }; then\n-  TEMP_LDFLAGS=\"$LDFLAGS\"\n-  LDFLAGS=\"$TEMP_LDFLAGS $PTHREAD_CFLAGS\"\n-  AC_MSG_CHECKING([for thread_local support])\n-  AC_LINK_IFELSE([AC_LANG_SOURCE([\n-    #include <thread>\n-    static thread_local int foo = 0;\n-    static void run_thread() { foo++;}\n-    int main(){\n-    for(int i = 0; i < 10; i++) { std::thread(run_thread).detach();}\n-    return foo;\n-    }\n-    ])],\n-    [\n-     case $host in\n-       *mingw*)\n-          dnl mingw32's implementation of thread_local has also been shown to behave\n-          dnl erroneously under concurrent usage; see:\n-          dnl https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n-          AC_MSG_RESULT(no)\n-          ;;\n-        *freebsd*)\n-          dnl FreeBSD's implementation of thread_local is also buggy (per\n-          dnl https://groups.google.com/d/msg/bsdmailinglist/22ncTZAbDp4/Dii_pII5AwAJ)\n-          AC_MSG_RESULT(no)\n-          ;;\n-        *)\n-          AC_DEFINE(HAVE_THREAD_LOCAL,1,[Define if thread_local is supported.])\n-          AC_MSG_RESULT(yes)\n-          ;;\n-      esac\n-    ],\n-    [\n-      AC_MSG_RESULT(no)\n-    ]\n-  )\n-  LDFLAGS=\"$TEMP_LDFLAGS\"\n-fi\n-\n-dnl check for gmtime_r(), fallback to gmtime_s() if that is unavailable\n-dnl fail if neither are available.\n-AC_MSG_CHECKING(for gmtime_r)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <ctime>]],\n-  [[ gmtime_r((const time_t *) nullptr, (struct tm *) nullptr); ]])],\n-  [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GMTIME_R, 1, [Define this symbol if gmtime_r is available]) ],\n-  [ AC_MSG_RESULT(no);\n-    AC_MSG_CHECKING(for gmtime_s);\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <ctime>]],\n-       [[ gmtime_s((struct tm *) nullptr, (const time_t *) nullptr); ]])],\n-       [ AC_MSG_RESULT(yes)],\n-       [ AC_MSG_RESULT(no); AC_MSG_ERROR(Both gmtime_r and gmtime_s are unavailable) ]\n-    )\n-  ]\n-)\n-\n-dnl Check for different ways of gathering OS randomness\n-AC_MSG_CHECKING(for Linux getrandom syscall)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n-  #include <sys/syscall.h>\n-  #include <linux/random.h>]],\n- [[ syscall(SYS_getrandom, nullptr, 32, 0); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYS_GETRANDOM, 1,[Define this symbol if the Linux getrandom system call is available]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING(for getentropy)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],\n- [[ getentropy(nullptr, 32) ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY, 1,[Define this symbol if the BSD getentropy system call is available]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING(for getentropy via random.h)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n- #include <sys/random.h>]],\n- [[ getentropy(nullptr, 32) ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY_RAND, 1,[Define this symbol if the BSD getentropy system call is available with sys/random.h]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING(for sysctl)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n-  #include <sys/sysctl.h>]],\n- [[ #ifdef __linux__\n-    #error \"Don't use sysctl on Linux, it's deprecated even when it works\"\n-    #endif\n-    sysctl(nullptr, 2, nullptr, nullptr, nullptr, 0); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYSCTL, 1,[Define this symbol if the BSD sysctl() is available]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING(for sysctl KERN_ARND)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n-  #include <sys/sysctl.h>]],\n- [[ #ifdef __linux__\n-    #error \"Don't use sysctl on Linux, it's deprecated even when it works\"\n-    #endif\n-    static int name[2] = {CTL_KERN, KERN_ARND};\n-    sysctl(name, 2, nullptr, nullptr, nullptr, 0); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYSCTL_ARND, 1,[Define this symbol if the BSD sysctl(KERN_ARND) is available]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING(for if type char equals int8_t)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdint.h>\n-  #include <type_traits>]],\n- [[ static_assert(std::is_same<int8_t, char>::value, \"\"); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(CHAR_EQUALS_INT8, 1,[Define this symbol if type char equals int8_t]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING(for fdatasync)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],\n- [[ fdatasync(0); ]])],\n- [ AC_MSG_RESULT(yes); HAVE_FDATASYNC=1 ],\n- [ AC_MSG_RESULT(no); HAVE_FDATASYNC=0 ]\n-)\n-AC_DEFINE_UNQUOTED([HAVE_FDATASYNC], [$HAVE_FDATASYNC], [Define to 1 if fdatasync is available.])\n-\n-AC_MSG_CHECKING(for F_FULLFSYNC)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <fcntl.h>]],\n- [[ fcntl(0, F_FULLFSYNC, 0); ]])],\n- [ AC_MSG_RESULT(yes); HAVE_FULLFSYNC=1 ],\n- [ AC_MSG_RESULT(no); HAVE_FULLFSYNC=0 ]\n-)\n-\n-AC_MSG_CHECKING(for O_CLOEXEC)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <fcntl.h>]],\n- [[ open(\"\", O_CLOEXEC); ]])],\n- [ AC_MSG_RESULT(yes); HAVE_O_CLOEXEC=1 ],\n- [ AC_MSG_RESULT(no); HAVE_O_CLOEXEC=0 ]\n-)\n-\n-dnl crc32c platform checks\n-AC_MSG_CHECKING(for __builtin_prefetch)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[ ]], [[\n-  char data = 0;\n-  const char* address = &data;\n-  __builtin_prefetch(address, 0, 0);\n-  ]])],\n- [ AC_MSG_RESULT(yes); HAVE_BUILTIN_PREFETCH=1 ],\n- [ AC_MSG_RESULT(no); HAVE_BUILTIN_PREFETCH=0 ]\n-)\n-\n-AC_MSG_CHECKING(for _mm_prefetch)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <xmmintrin.h>]], [[\n-  char data = 0;\n-  const char* address = &data;\n-  _mm_prefetch(address, _MM_HINT_NTA);\n-  ]])],\n- [ AC_MSG_RESULT(yes); HAVE_MM_PREFETCH=1 ],\n- [ AC_MSG_RESULT(no); HAVE_MM_PREFETCH=0 ]\n-)\n-\n-AC_MSG_CHECKING(for strong getauxval support in the system headers)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    #include <arm_acle.h>\n-    #include <arm_neon.h>\n-    #include <sys/auxv.h>\n-  ]], [[\n-    getauxval(AT_HWCAP);\n-  ]])],\n- [ AC_MSG_RESULT(yes); HAVE_STRONG_GETAUXVAL=1 ],\n- [ AC_MSG_RESULT(no); HAVE_STRONG_GETAUXVAL=0 ]\n-)\n-\n-AC_MSG_CHECKING(for weak getauxval support in the compiler)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    unsigned long getauxval(unsigned long type) __attribute__((weak));\n-    #define AT_HWCAP 16\n-  ]], [[\n-    getauxval(AT_HWCAP);\n-  ]])],\n- [ AC_MSG_RESULT(yes); HAVE_WEAK_GETAUXVAL=1 ],\n- [ AC_MSG_RESULT(no); HAVE_WEAK_GETAUXVAL=0 ]\n-)\n-\n-dnl Check for reduced exports\n-if test x$use_reduce_exports = xyes; then\n-  AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n-  [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])\n-fi\n-\n-AC_MSG_CHECKING([for std::system])\n-AC_LINK_IFELSE(\n-    [ AC_LANG_PROGRAM(\n-        [[ #include <cstdlib> ]],\n-        [[ int nErr = std::system(\"\"); ]]\n-    )],\n-    [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_STD__SYSTEM, 1, Define to 1 if std::system is available.)],\n-    [ AC_MSG_RESULT(no) ]\n-)\n-\n-AC_MSG_CHECKING([for ::_wsystem])\n-AC_LINK_IFELSE(\n-    [ AC_LANG_PROGRAM(\n-        [[ ]],\n-        [[ int nErr = ::_wsystem(\"\"); ]]\n-    )],\n-    [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_WSYSTEM, 1, Define to 1 if ::wsystem is available.)],\n-    [ AC_MSG_RESULT(no) ]\n-)\n-\n-AC_DEFINE([HAVE_SYSTEM], [HAVE_STD__SYSTEM || HAVE_WSYSTEM], [std::system or ::wsystem])\n-\n-LEVELDB_CPPFLAGS=\n-LIBLEVELDB=\n-LIBMEMENV=\n-AM_CONDITIONAL([EMBEDDED_LEVELDB],[true])\n-AC_SUBST(LEVELDB_CPPFLAGS)\n-AC_SUBST(LIBLEVELDB)\n-AC_SUBST(LIBMEMENV)\n-\n-dnl SUPPRESSED_CPPFLAGS=SUPPRESS_WARNINGS([$SOME_CPPFLAGS])\n-dnl Replace -I with -isystem in $SOME_CPPFLAGS to suppress warnings from\n-dnl headers from its include directories and return the result.\n-dnl See -isystem documentation:\n-dnl https://gcc.gnu.org/onlinedocs/gcc/Directory-Options.html\n-dnl https://clang.llvm.org/docs/ClangCommandLineReference.html#cmdoption-clang-isystem-directory\n-dnl Do not change \"-I/usr/include\" to \"-isystem /usr/include\" because that\n-dnl is not necessary (/usr/include is already a system directory) and because\n-dnl it would break GCC's #include_next.\n-AC_DEFUN([SUPPRESS_WARNINGS],\n-         [$(echo $1 |${SED} -E -e 's/(^| )-I/\\1-isystem /g' -e 's;-isystem /usr/include([/ ]|$);-I/usr/include\\1;g')])\n-\n-dnl enable-fuzz should disable all other targets\n-if test \"x$enable_fuzz\" = \"xyes\"; then\n-  AC_MSG_WARN(enable-fuzz will disable all other targets)\n-  build_bitcoin_utils=no\n-  build_bitcoin_cli=no\n-  build_bitcoin_tx=no\n-  build_bitcoin_wallet=no\n-  build_bitcoind=no\n-  build_bitcoin_libs=no\n-  bitcoin_enable_qt=no\n-  bitcoin_enable_qt_test=no\n-  bitcoin_enable_qt_dbus=no\n-  enable_wallet=no\n-  use_bench=no\n-  use_upnp=no\n-  use_zmq=no\n-\n-  AC_MSG_CHECKING([whether main function is needed])\n-  AX_CHECK_LINK_FLAG(\n-    [[-fsanitize=$use_sanitizers]],\n-    [AC_MSG_RESULT([no])],\n-    [AC_MSG_RESULT([yes])\n-     CPPFLAGS=\"$CPPFLAGS -DPROVIDE_MAIN_FUNCTION\"],\n-    [],\n-    [AC_LANG_PROGRAM([[\n-      #include <cstdint>\n-      #include <cstddef>\n-      extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) { return 0; }\n-      /* unterminated comment to remove the main function ...\n-    ]],[[]])])\n-else\n-  BITCOIN_QT_INIT\n-\n-  dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n-  BITCOIN_QT_CONFIGURE([5.5.1])\n-\n-  dnl Keep a copy of the original $QT_INCLUDES and use it when invoking qt's moc\n-  QT_INCLUDES_UNSUPPRESSED=$QT_INCLUDES\n-  if test x$suppress_external_warnings != xno ; then\n-    QT_INCLUDES=SUPPRESS_WARNINGS($QT_INCLUDES)\n-    QT_DBUS_INCLUDES=SUPPRESS_WARNINGS($QT_DBUS_INCLUDES)\n-    QT_TEST_INCLUDES=SUPPRESS_WARNINGS($QT_TEST_INCLUDES)\n-  fi\n-fi\n-\n-if test x$enable_wallet != xno; then\n-    dnl Check for libdb_cxx only if wallet enabled\n-    BITCOIN_FIND_BDB48\n-    if test x$suppress_external_warnings != xno ; then\n-        BDB_CPPFLAGS=SUPPRESS_WARNINGS($BDB_CPPFLAGS)\n-    fi\n-\n-    dnl Check for sqlite3\n-    if test \"x$use_sqlite\" != \"xno\"; then\n-      PKG_CHECK_MODULES([SQLITE], [sqlite3 >= 3.7.17], [have_sqlite=yes], [have_sqlite=no])\n-    fi\n-    AC_MSG_CHECKING([whether to build wallet with support for sqlite])\n-    if test \"x$use_sqlite\" = \"xno\"; then\n-      use_sqlite=no\n-    elif test \"x$have_sqlite\" = \"xno\"; then\n-      if test \"x$use_sqlite\" = \"xyes\"; then\n-        AC_MSG_ERROR([sqlite support requested but cannot be built. Use --without-sqlite])\n-      fi\n-      use_sqlite=no\n-    else\n-      if test x$use_sqlite != xno; then\n-        AC_DEFINE([USE_SQLITE],[1],[Define if sqlite support should be compiled in])\n-        use_sqlite=yes\n-      fi\n-    fi\n-    AC_MSG_RESULT([$use_sqlite])\n-fi\n-\n-dnl Check for libminiupnpc (optional)\n-if test x$use_upnp != xno; then\n-  AC_CHECK_HEADERS(\n-    [miniupnpc/miniwget.h miniupnpc/miniupnpc.h miniupnpc/upnpcommands.h miniupnpc/upnperrors.h],\n-    [AC_CHECK_LIB([miniupnpc], [upnpDiscover], [MINIUPNPC_LIBS=-lminiupnpc], [have_miniupnpc=no])],\n-    [have_miniupnpc=no]\n-  )\n-dnl The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n-dnl with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n-if test x$have_miniupnpc != xno; then\n-  AC_MSG_CHECKING([whether miniUPnPc API version is supported])\n-  AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[\n-      @%:@include <miniupnpc/miniupnpc.h>\n-    ]], [[\n-      #if MINIUPNPC_API_VERSION >= 10\n-      // Everything is okay\n-      #else\n-      #  error miniUPnPc API version is too old\n-      #endif\n-    ]])],[\n-      AC_MSG_RESULT(yes)\n-    ],[\n-    AC_MSG_RESULT(no)\n-    AC_MSG_WARN([miniUPnPc API version < 10 is unsupported, disabling UPnP support.])\n-    have_miniupnpc=no\n-  ])\n-fi\n-fi\n-\n-if test x$build_bitcoin_wallet$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononononono; then\n-    use_boost=no\n-else\n-    use_boost=yes\n-fi\n-\n-if test x$use_boost = xyes; then\n-\n-dnl Minimum required Boost version\n-define(MINIMUM_REQUIRED_BOOST, 1.58.0)\n-\n-dnl Check for Boost libs\n-AX_BOOST_BASE([MINIMUM_REQUIRED_BOOST])\n-if test x$want_boost = xno; then\n-    AC_MSG_ERROR([[only libbitcoinconsensus can be built without boost]])\n-fi\n-AX_BOOST_SYSTEM\n-AX_BOOST_FILESYSTEM\n-AX_BOOST_THREAD\n-\n-dnl Opt-in to boost-process\n-AS_IF([ test x$with_boost_process != x ], [ AX_BOOST_PROCESS ], [ ax_cv_boost_process=no ] )\n-\n-if test x$suppress_external_warnings != xno; then\n-    BOOST_CPPFLAGS=SUPPRESS_WARNINGS($BOOST_CPPFLAGS)\n-fi\n-\n-dnl Boost 1.56 through 1.62 allow using std::atomic instead of its own atomic\n-dnl counter implementations. In 1.63 and later the std::atomic approach is default.\n-m4_pattern_allow(DBOOST_AC_USE_STD_ATOMIC) dnl otherwise it's treated like a macro\n-BOOST_CPPFLAGS=\"-DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC $BOOST_CPPFLAGS\"\n-\n-BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_THREAD_LIB\"\n-fi\n-\n-if test x$use_reduce_exports = xyes; then\n-    CXXFLAGS=\"$CXXFLAGS $RE_CXXFLAGS\"\n-    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"],, [[$LDFLAG_WERROR]])\n-fi\n-\n-if test x$use_tests = xyes; then\n-\n-  if test x$HEXDUMP = x; then\n-    AC_MSG_ERROR(hexdump is required for tests)\n-  fi\n-\n-  if test x$use_boost = xyes; then\n-\n-  AX_BOOST_UNIT_TEST_FRAMEWORK\n-\n-  dnl Determine if -DBOOST_TEST_DYN_LINK is needed\n-  AC_MSG_CHECKING([for dynamic linked boost test])\n-  TEMP_LIBS=\"$LIBS\"\n-  LIBS=\"$LIBS $BOOST_LDFLAGS $BOOST_UNIT_TEST_FRAMEWORK_LIB\"\n-  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-  CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-  AC_LINK_IFELSE([AC_LANG_SOURCE([\n-       #define BOOST_TEST_DYN_LINK\n-       #define BOOST_TEST_MAIN\n-        #include <boost/test/unit_test.hpp>\n-\n-       ])],\n-    [AC_MSG_RESULT(yes)]\n-    [TESTDEFS=\"$TESTDEFS -DBOOST_TEST_DYN_LINK\"],\n-    [AC_MSG_RESULT(no)])\n-  LIBS=\"$TEMP_LIBS\"\n-  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-\n-  fi\n-fi\n-\n-dnl libevent check\n-\n-if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench != xnonononono; then\n-  PKG_CHECK_MODULES([EVENT], [libevent >= 2.0.21], [use_libevent=yes], [AC_MSG_ERROR([libevent version 2.0.21 or greater not found.])])\n-  if test x$TARGET_OS != xwindows; then\n-    PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads >= 2.0.21],, [AC_MSG_ERROR([libevent_pthreads version 2.0.21 or greater not found.])])\n-  fi\n-fi\n-\n-dnl QR Code encoding library check\n-\n-if test \"x$use_qr\" != xno; then\n-  BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n-fi\n-\n-dnl ZMQ check\n-\n-if test \"x$use_zmq\" = xyes; then\n-  PKG_CHECK_MODULES([ZMQ], [libzmq >= 4],\n-    AC_DEFINE([ENABLE_ZMQ], [1], [Define to 1 to enable ZMQ functions]),\n-    [AC_DEFINE([ENABLE_ZMQ], [0], [Define to 1 to enable ZMQ functions])\n-    AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])\n-    use_zmq=no])\n-else\n-  AC_DEFINE_UNQUOTED([ENABLE_ZMQ], [0], [Define to 1 to enable ZMQ functions])\n-fi\n-\n-if test \"x$use_zmq\" = xyes; then\n-  dnl Assume libzmq was built for static linking\n-  case $host in\n-    *mingw*)\n-      ZMQ_CFLAGS=\"$ZMQ_CFLAGS -DZMQ_STATIC\"\n-    ;;\n-  esac\n-fi\n-\n-dnl univalue check\n-\n-need_bundled_univalue=yes\n-if test x$build_bitcoin_wallet$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononononono; then\n-  need_bundled_univalue=no\n-else\n-  if test x$system_univalue != xno; then\n-    PKG_CHECK_MODULES([UNIVALUE], [libunivalue >= 1.0.4], [found_univalue=yes], [found_univalue=no])\n-    if test x$found_univalue = xyes; then\n-      system_univalue=yes\n-      need_bundled_univalue=no\n-    elif test x$system_univalue = xyes; then\n-      AC_MSG_ERROR([univalue not found])\n-    else\n-      system_univalue=no\n-    fi\n-  fi\n-\n-  if test x$need_bundled_univalue = xyes; then\n-    UNIVALUE_CFLAGS='-I$(srcdir)/univalue/include'\n-    UNIVALUE_LIBS='univalue/libunivalue.la'\n-  fi\n-fi\n-\n-AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$need_bundled_univalue = xyes])\n-AC_SUBST(UNIVALUE_CFLAGS)\n-AC_SUBST(UNIVALUE_LIBS)\n-\n-dnl libmultiprocess library check\n-\n-libmultiprocess_found=no\n-if test \"x$with_libmultiprocess\" = xyes || test \"x$with_libmultiprocess\" = xauto; then\n-  m4_ifdef([PKG_CHECK_MODULES], [PKG_CHECK_MODULES([LIBMULTIPROCESS], [libmultiprocess], [\n-     libmultiprocess_found=yes;\n-     libmultiprocess_prefix=`$PKG_CONFIG --variable=prefix libmultiprocess`;\n-  ], [true])])\n-elif test \"x$with_libmultiprocess\" != xno; then\n-  AC_MSG_ERROR([--with-libmultiprocess=$with_libmultiprocess value is not yes, auto, or no])\n-fi\n-AC_SUBST(LIBMULTIPROCESS_CFLAGS)\n-AC_SUBST(LIBMULTIPROCESS_LIBS)\n-\n-dnl Enable multiprocess check\n-\n-if test \"x$enable_multiprocess\" = xyes; then\n-  if test \"x$libmultiprocess_found\" != xyes; then\n-    AC_MSG_ERROR([--enable-multiprocess=yes option specified but libmultiprocess library was not found. May need to install libmultiprocess library, or specify install path with PKG_CONFIG_PATH environment variable. Running 'pkg-config --debug libmultiprocess' may be helpful for debugging.])\n-  fi\n-  build_multiprocess=yes\n-elif test \"x$enable_multiprocess\" = xauto; then\n-  build_multiprocess=$libmultiprocess_found\n-else\n-  build_multiprocess=no\n-fi\n-\n-AM_CONDITIONAL([BUILD_MULTIPROCESS],[test \"x$build_multiprocess\" = xyes])\n-AM_CONDITIONAL([BUILD_BITCOIN_NODE], [test \"x$build_multiprocess\" = xyes])\n-AM_CONDITIONAL([BUILD_BITCOIN_GUI], [test \"x$build_multiprocess\" = xyes])\n-\n-dnl codegen tools check\n-\n-if test x$build_multiprocess != xno; then\n-  if test \"x$with_mpgen\" = xyes || test \"x$with_mpgen\" = xauto; then\n-    MPGEN_PREFIX=\"$libmultiprocess_prefix\"\n-  elif test \"x$with_mpgen\" != xno; then\n-    MPGEN_PREFIX=\"$with_mpgen\";\n-  fi\n-  AC_SUBST(MPGEN_PREFIX)\n-fi\n-\n-AC_MSG_CHECKING([whether to build bitcoind])\n-AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n-AC_MSG_RESULT($build_bitcoind)\n-\n-AC_MSG_CHECKING([whether to build bitcoin-cli])\n-AM_CONDITIONAL([BUILD_BITCOIN_CLI], [test x$build_bitcoin_cli = xyes])\n-AC_MSG_RESULT($build_bitcoin_cli)\n-\n-AC_MSG_CHECKING([whether to build bitcoin-tx])\n-AM_CONDITIONAL([BUILD_BITCOIN_TX], [test x$build_bitcoin_tx = xyes])\n-AC_MSG_RESULT($build_bitcoin_tx)\n-\n-AC_MSG_CHECKING([whether to build bitcoin-wallet])\n-AM_CONDITIONAL([BUILD_BITCOIN_WALLET], [test x$build_bitcoin_wallet = xyes])\n-AC_MSG_RESULT($build_bitcoin_wallet)\n-\n-AC_MSG_CHECKING([whether to build libraries])\n-AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])\n-if test x$build_bitcoin_libs = xyes; then\n-  AC_DEFINE(HAVE_CONSENSUS_LIB, 1, [Define this symbol if the consensus lib has been built])\n-  AC_CONFIG_FILES([libbitcoinconsensus.pc:libbitcoinconsensus.pc.in])\n-fi\n-AC_MSG_RESULT($build_bitcoin_libs)\n-\n-AC_LANG_POP\n-\n-if test \"x$use_ccache\" != \"xno\"; then\n-  AC_MSG_CHECKING(if ccache should be used)\n-  if test x$CCACHE = x; then\n-    if test \"x$use_ccache\" = \"xyes\"; then\n-      AC_MSG_ERROR([ccache not found.]);\n-    else\n-      use_ccache=no\n-    fi\n-  else\n-    use_ccache=yes\n-    CC=\"$ac_cv_path_CCACHE $CC\"\n-    CXX=\"$ac_cv_path_CCACHE $CXX\"\n-  fi\n-  AC_MSG_RESULT($use_ccache)\n-fi\n-\n-dnl enable wallet\n-AC_MSG_CHECKING([if wallet should be enabled])\n-if test x$enable_wallet != xno; then\n-  AC_MSG_RESULT(yes)\n-  AC_DEFINE_UNQUOTED([ENABLE_WALLET],[1],[Define to 1 to enable wallet functions])\n-\n-else\n-  AC_MSG_RESULT(no)\n-fi\n-\n-dnl enable upnp support\n-AC_MSG_CHECKING([whether to build with support for UPnP])\n-if test x$have_miniupnpc = xno; then\n-  if test x$use_upnp = xyes; then\n-     AC_MSG_ERROR(\"UPnP requested but cannot be built. Use --without-miniupnpc.\")\n-  fi\n-  AC_MSG_RESULT(no)\n-  use_upnp=no\n-else\n-  if test x$use_upnp != xno; then\n-    AC_MSG_RESULT(yes)\n-    AC_MSG_CHECKING([whether to build with UPnP enabled by default])\n-    use_upnp=yes\n-    upnp_setting=0\n-    if test x$use_upnp_default != xno; then\n-      use_upnp_default=yes\n-      upnp_setting=1\n-    fi\n-    AC_MSG_RESULT($use_upnp_default)\n-    AC_DEFINE_UNQUOTED([USE_UPNP],[$upnp_setting],[UPnP support not compiled if undefined, otherwise value (0 or 1) determines default state])\n-    if test x$TARGET_OS = xwindows; then\n-      MINIUPNPC_CPPFLAGS=\"-DSTATICLIB -DMINIUPNP_STATICLIB\"\n-    fi\n-  else\n-    AC_MSG_RESULT(no)\n-  fi\n-fi\n-\n-dnl these are only used when qt is enabled\n-BUILD_TEST_QT=\"\"\n-if test x$bitcoin_enable_qt != xno; then\n-  dnl enable dbus support\n-  AC_MSG_CHECKING([whether to build GUI with support for D-Bus])\n-  if test x$bitcoin_enable_qt_dbus != xno; then\n-    AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n-  fi\n-  AC_MSG_RESULT($bitcoin_enable_qt_dbus)\n-\n-  dnl enable qr support\n-  AC_MSG_CHECKING([whether to build GUI with support for QR codes])\n-  if test x$have_qrencode = xno; then\n-    if test x$use_qr = xyes; then\n-      AC_MSG_ERROR([QR support requested but cannot be built. Use --without-qrencode])\n-    fi\n-    use_qr=no\n-  else\n-    if test x$use_qr != xno; then\n-      AC_DEFINE([USE_QRCODE],[1],[Define if QR support should be compiled in])\n-      use_qr=yes\n-    fi\n-  fi\n-  AC_MSG_RESULT([$use_qr])\n-\n-  if test x$XGETTEXT = x; then\n-    AC_MSG_WARN(\"xgettext is required to update qt translations\")\n-  fi\n-\n-  AC_MSG_CHECKING([whether to build test_bitcoin-qt])\n-  if test x$use_gui_tests$bitcoin_enable_qt_test = xyesyes; then\n-    AC_MSG_RESULT([yes])\n-    BUILD_TEST_QT=\"yes\"\n-  else\n-    AC_MSG_RESULT([no])\n-  fi\n-fi\n-\n-AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n-\n-AC_MSG_CHECKING([whether to build test_bitcoin])\n-if test x$use_tests = xyes; then\n-  AC_MSG_RESULT([yes])\n-  BUILD_TEST=\"yes\"\n-else\n-  AC_MSG_RESULT([no])\n-  BUILD_TEST=\"\"\n-fi\n-\n-AC_MSG_CHECKING([whether to reduce exports])\n-if test x$use_reduce_exports = xyes; then\n-  AC_MSG_RESULT([yes])\n-else\n-  AC_MSG_RESULT([no])\n-fi\n-\n-if test x$build_bitcoin_wallet$build_bitcoin_cli$build_bitcoin_tx$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_bench$use_tests = xnononononononono; then\n-  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui --enable-bench or --enable-tests])\n-fi\n-\n-AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\n-AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\n-AM_CONDITIONAL([TARGET_LINUX], [test x$TARGET_OS = xlinux])\n-AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n-AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\n-AM_CONDITIONAL([USE_SQLITE], [test \"x$use_sqlite\" = \"xyes\"])\n-AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\n-AM_CONDITIONAL([ENABLE_FUZZ],[test x$enable_fuzz = xyes])\n-AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n-AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\n-AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n-AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n-AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n-AM_CONDITIONAL([USE_LIBEVENT],[test x$use_libevent = xyes])\n-AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n-AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\n-AM_CONDITIONAL([ENABLE_SSE42],[test x$enable_sse42 = xyes])\n-AM_CONDITIONAL([ENABLE_SSE41],[test x$enable_sse41 = xyes])\n-AM_CONDITIONAL([ENABLE_AVX2],[test x$enable_avx2 = xyes])\n-AM_CONDITIONAL([ENABLE_SHANI],[test x$enable_shani = xyes])\n-AM_CONDITIONAL([ENABLE_ARM_CRC],[test x$enable_arm_crc = xyes])\n-AM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])\n-AM_CONDITIONAL([WORDS_BIGENDIAN],[test x$ac_cv_c_bigendian = xyes])\n-\n-AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n-AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n-AC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])\n-AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\n-AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\n-AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Copyright year])\n-AC_DEFINE(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\", [Copyright holder(s) before %s replacement])\n-AC_DEFINE(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\", [Replacement for %s in copyright holders string])\n-define(_COPYRIGHT_HOLDERS_FINAL, [patsubst(_COPYRIGHT_HOLDERS, [%s], [_COPYRIGHT_HOLDERS_SUBSTITUTION])])\n-AC_DEFINE(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\", [Copyright holder(s)])\n-AC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)\n-AC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)\n-AC_SUBST(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION)\n-AC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)\n-AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n-AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n-AC_SUBST(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\")\n-AC_SUBST(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\")\n-AC_SUBST(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\")\n-AC_SUBST(BITCOIN_DAEMON_NAME)\n-AC_SUBST(BITCOIN_GUI_NAME)\n-AC_SUBST(BITCOIN_CLI_NAME)\n-AC_SUBST(BITCOIN_TX_NAME)\n-AC_SUBST(BITCOIN_WALLET_TOOL_NAME)\n-\n-AC_SUBST(RELDFLAGS)\n-AC_SUBST(DEBUG_CPPFLAGS)\n-AC_SUBST(WARN_CXXFLAGS)\n-AC_SUBST(NOWARN_CXXFLAGS)\n-AC_SUBST(DEBUG_CXXFLAGS)\n-AC_SUBST(COMPAT_LDFLAGS)\n-AC_SUBST(ERROR_CXXFLAGS)\n-AC_SUBST(GPROF_CXXFLAGS)\n-AC_SUBST(GPROF_LDFLAGS)\n-AC_SUBST(HARDENED_CXXFLAGS)\n-AC_SUBST(HARDENED_CPPFLAGS)\n-AC_SUBST(HARDENED_LDFLAGS)\n-AC_SUBST(PIC_FLAGS)\n-AC_SUBST(PIE_FLAGS)\n-AC_SUBST(SANITIZER_CXXFLAGS)\n-AC_SUBST(SANITIZER_LDFLAGS)\n-AC_SUBST(SSE42_CXXFLAGS)\n-AC_SUBST(SSE41_CXXFLAGS)\n-AC_SUBST(AVX2_CXXFLAGS)\n-AC_SUBST(SHANI_CXXFLAGS)\n-AC_SUBST(ARM_CRC_CXXFLAGS)\n-AC_SUBST(LIBTOOL_APP_LDFLAGS)\n-AC_SUBST(USE_SQLITE)\n-AC_SUBST(USE_UPNP)\n-AC_SUBST(USE_QRCODE)\n-AC_SUBST(BOOST_LIBS)\n-AC_SUBST(SQLITE_LIBS)\n-AC_SUBST(TESTDEFS)\n-AC_SUBST(MINIUPNPC_CPPFLAGS)\n-AC_SUBST(MINIUPNPC_LIBS)\n-AC_SUBST(EVENT_LIBS)\n-AC_SUBST(EVENT_PTHREADS_LIBS)\n-AC_SUBST(ZMQ_LIBS)\n-AC_SUBST(QR_LIBS)\n-AC_SUBST(HAVE_GMTIME_R)\n-AC_SUBST(HAVE_FDATASYNC)\n-AC_SUBST(HAVE_FULLFSYNC)\n-AC_SUBST(HAVE_O_CLOEXEC)\n-AC_SUBST(HAVE_BUILTIN_PREFETCH)\n-AC_SUBST(HAVE_MM_PREFETCH)\n-AC_SUBST(HAVE_STRONG_GETAUXVAL)\n-AC_SUBST(HAVE_WEAK_GETAUXVAL)\n-AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/config.ini])\n-AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n-AM_COND_IF([HAVE_DOXYGEN], [AC_CONFIG_FILES([doc/Doxyfile])])\n-AC_CONFIG_LINKS([contrib/devtools/security-check.py:contrib/devtools/security-check.py])\n-AC_CONFIG_LINKS([contrib/devtools/test-security-check.py:contrib/devtools/test-security-check.py])\n-AC_CONFIG_LINKS([contrib/filter-lcov.py:contrib/filter-lcov.py])\n-AC_CONFIG_LINKS([test/functional/test_runner.py:test/functional/test_runner.py])\n-AC_CONFIG_LINKS([test/fuzz/test_runner.py:test/fuzz/test_runner.py])\n-AC_CONFIG_LINKS([test/util/bitcoin-util-test.py:test/util/bitcoin-util-test.py])\n-AC_CONFIG_LINKS([test/util/rpcauth-test.py:test/util/rpcauth-test.py])\n-\n-dnl boost's m4 checks do something really nasty: they export these vars. As a\n-dnl result, they leak into secp256k1's configure and crazy things happen.\n-dnl Until this is fixed upstream and we've synced, we'll just un-export them.\n-CPPFLAGS_TEMP=\"$CPPFLAGS\"\n-unset CPPFLAGS\n-CPPFLAGS=\"$CPPFLAGS_TEMP\"\n-\n-LDFLAGS_TEMP=\"$LDFLAGS\"\n-unset LDFLAGS\n-LDFLAGS=\"$LDFLAGS_TEMP\"\n-\n-LIBS_TEMP=\"$LIBS\"\n-unset LIBS\n-LIBS=\"$LIBS_TEMP\"\n-\n-PKGCONFIG_PATH_TEMP=\"$PKG_CONFIG_PATH\"\n-unset PKG_CONFIG_PATH\n-PKG_CONFIG_PATH=\"$PKGCONFIG_PATH_TEMP\"\n-\n-PKGCONFIG_LIBDIR_TEMP=\"$PKG_CONFIG_LIBDIR\"\n-unset PKG_CONFIG_LIBDIR\n-PKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\n-\n-if test x$need_bundled_univalue = xyes; then\n-  AC_CONFIG_SUBDIRS([src/univalue])\n-fi\n-\n-ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --enable-benchmark=no --with-bignum=no --enable-module-recovery --enable-module-schnorrsig --enable-experimental\"\n-AC_CONFIG_SUBDIRS([src/secp256k1])\n-\n-AC_OUTPUT\n-\n-dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\n-case ${OS} in\n-   *Windows*)\n-     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  test/config.ini > test/config-2.ini\n-     mv test/config-2.ini test/config.ini\n-   ;;\n-esac\n-\n-echo\n-echo \"Options used to compile and link:\"\n-echo \"  boost process = $ax_cv_boost_process\"\n-echo \"  multiprocess  = $build_multiprocess\"\n-echo \"  with wallet   = $enable_wallet\"\n-if test \"x$enable_wallet\" != \"xno\"; then\n-    echo \"    with sqlite = $use_sqlite\"\n-fi\n-echo \"  with gui / qt = $bitcoin_enable_qt\"\n-if test x$bitcoin_enable_qt != xno; then\n-    echo \"    with qr     = $use_qr\"\n-fi\n-echo \"  with zmq      = $use_zmq\"\n-echo \"  with test     = $use_tests\"\n-if test x$use_tests != xno; then\n-    echo \"    with fuzz   = $enable_fuzz\"\n-fi\n-echo \"  with bench    = $use_bench\"\n-echo \"  with upnp     = $use_upnp\"\n-echo \"  use asm       = $use_asm\"\n-echo \"  sanitizers    = $use_sanitizers\"\n-echo \"  debug enabled = $enable_debug\"\n-echo \"  gprof enabled = $enable_gprof\"\n-echo \"  werror        = $enable_werror\"\n-echo\n-echo \"  target os     = $TARGET_OS\"\n-echo \"  build os      = $build_os\"\n-echo\n-echo \"  CC            = $CC\"\n-echo \"  CFLAGS        = $PTHREAD_CFLAGS $CFLAGS\"\n-echo \"  CPPFLAGS      = $DEBUG_CPPFLAGS $HARDENED_CPPFLAGS $CPPFLAGS\"\n-echo \"  CXX           = $CXX\"\n-echo \"  CXXFLAGS      = $DEBUG_CXXFLAGS $HARDENED_CXXFLAGS $WARN_CXXFLAGS $NOWARN_CXXFLAGS $ERROR_CXXFLAGS $GPROF_CXXFLAGS $CXXFLAGS\"\n-echo \"  LDFLAGS       = $PTHREAD_LIBS $HARDENED_LDFLAGS $GPROF_LDFLAGS $LDFLAGS\"\n-echo \"  ARFLAGS       = $ARFLAGS\"\n-echo"
      },
      {
        "sha": "361975baa4915b26e4e65fecaf359d230a411450",
        "filename": "contrib/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 48,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,48 +0,0 @@\n-Repository Tools\n----------------------\n-\n-### [Developer tools](/contrib/devtools) ###\n-Specific tools for developers working on this repository.\n-Additional tools, including the `github-merge.py` script, are available in the [maintainer-tools](https://github.com/bitcoin-core/bitcoin-maintainer-tools) repository.\n-\n-### [Verify-Commits](/contrib/verify-commits) ###\n-Tool to verify that every merge commit was signed by a developer using the `github-merge.py` script.\n-\n-### [Linearize](/contrib/linearize) ###\n-Construct a linear, no-fork, best version of the blockchain.\n-\n-### [Qos](/contrib/qos) ###\n-\n-A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Bitcoin network. This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n-\n-### [Seeds](/contrib/seeds) ###\n-Utility to generate the pnSeed[] array that is compiled into the client.\n-\n-Build Tools and Keys\n----------------------\n-\n-### Packaging ###\n-The [Debian](/contrib/debian) subfolder contains the copyright file.\n-\n-All other packaging related files can be found in the [bitcoin-core/packaging](https://github.com/bitcoin-core/packaging) repository.\n-\n-### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n-Files used during the gitian build process. For more information about gitian, see the [the Bitcoin Core documentation repository](https://github.com/bitcoin-core/docs).\n-\n-### [Gitian-keys](/contrib/gitian-keys)\n-PGP keys used for signing Bitcoin Core [Gitian release](/doc/release-process.md) results.\n-\n-### [MacDeploy](/contrib/macdeploy) ###\n-Scripts and notes for Mac builds.\n-\n-### [Gitian-build](/contrib/gitian-build.py) ###\n-Script for running full Gitian builds.\n-\n-Test and Verify Tools\n----------------------\n-\n-### [TestGen](/contrib/testgen) ###\n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n-\n-### [Verify Binaries](/contrib/verifybinaries) ###\n-This script attempts to download and verify the signature file SHA256SUMS.asc from bitcoin.org."
      },
      {
        "sha": "ddea58a05cc1a9f0031b53b0d58f8c3801b32492",
        "filename": "contrib/bitcoin-cli.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 141,
        "changes": 141,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/bitcoin-cli.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/bitcoin-cli.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-cli.bash-completion?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,141 +0,0 @@\n-# bash programmable completion for bitcoin-cli(1)\n-# Copyright (c) 2012-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# call $bitcoin-cli for RPC\n-_bitcoin_rpc() {\n-    # determine already specified args necessary for RPC\n-    local rpcargs=()\n-    for i in ${COMP_LINE}; do\n-        case \"$i\" in\n-            -conf=*|-datadir=*|-regtest|-rpc*|-testnet)\n-                rpcargs=( \"${rpcargs[@]}\" \"$i\" )\n-                ;;\n-        esac\n-    done\n-    $bitcoin_cli \"${rpcargs[@]}\" \"$@\"\n-}\n-\n-_bitcoin_cli() {\n-    local cur prev words=() cword\n-    local bitcoin_cli\n-\n-    # save and use original argument to invoke bitcoin-cli for -help, help and RPC\n-    # as bitcoin-cli might not be in $PATH\n-    bitcoin_cli=\"$1\"\n-\n-    COMPREPLY=()\n-    _get_comp_words_by_ref -n = cur prev words cword\n-\n-    if ((cword > 5)); then\n-        case ${words[cword-5]} in\n-            sendtoaddress)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    if ((cword > 4)); then\n-        case ${words[cword-4]} in\n-            importaddress|listtransactions|setban)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            signrawtransactionwithkey|signrawtransactionwithwallet)\n-                COMPREPLY=( $( compgen -W \"ALL NONE SINGLE ALL|ANYONECANPAY NONE|ANYONECANPAY SINGLE|ANYONECANPAY\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    if ((cword > 3)); then\n-        case ${words[cword-3]} in\n-            addmultisigaddress)\n-                return 0\n-                ;;\n-            getbalance|gettxout|importaddress|importpubkey|importprivkey|listreceivedbyaddress|listsinceblock)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    if ((cword > 2)); then\n-        case ${words[cword-2]} in\n-            addnode)\n-                COMPREPLY=( $( compgen -W \"add remove onetry\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            setban)\n-                COMPREPLY=( $( compgen -W \"add remove\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            fundrawtransaction|getblock|getblockheader|getmempoolancestors|getmempooldescendants|getrawtransaction|gettransaction|listreceivedbyaddress|sendrawtransaction)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    case \"$prev\" in\n-        backupwallet|dumpwallet|importwallet)\n-            _filedir\n-            return 0\n-            ;;\n-        getaddednodeinfo|getrawmempool|lockunspent)\n-            COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-            return 0\n-            ;;\n-        getbalance|getnewaddress|listtransactions|sendmany)\n-            return 0\n-            ;;\n-    esac\n-\n-    case \"$cur\" in\n-        -conf=*)\n-            cur=\"${cur#*=}\"\n-            _filedir\n-            return 0\n-            ;;\n-        -datadir=*)\n-            cur=\"${cur#*=}\"\n-            _filedir -d\n-            return 0\n-            ;;\n-        -*=*)\t# prevent nonsense completions\n-            return 0\n-            ;;\n-        *)\n-            local helpopts commands\n-\n-            # only parse -help if senseful\n-            if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n-                helpopts=$($bitcoin_cli -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n-            fi\n-\n-            # only parse help if senseful\n-            if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n-                commands=$(_bitcoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n-            fi\n-\n-            COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n-\n-            # Prevent space if an argument is desired\n-            if [[ $COMPREPLY == *= ]]; then\n-                compopt -o nospace\n-            fi\n-            return 0\n-            ;;\n-    esac\n-} &&\n-complete -F _bitcoin_cli bitcoin-cli\n-\n-# Local variables:\n-# mode: shell-script\n-# sh-basic-offset: 4\n-# sh-indent-comment: t\n-# indent-tabs-mode: nil\n-# End:\n-# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "0e4eeee0a7ad9ebc49c30d30c285ccd41a752771",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,22 +0,0 @@\n-FORMS += \\\n-    ../src/qt/forms/aboutdialog.ui \\\n-    ../src/qt/forms/addressbookpage.ui \\\n-    ../src/qt/forms/askpassphrasedialog.ui \\\n-    ../src/qt/forms/coincontroldialog.ui \\\n-    ../src/qt/forms/editaddressdialog.ui \\\n-    ../src/qt/forms/helpmessagedialog.ui \\\n-    ../src/qt/forms/intro.ui \\\n-    ../src/qt/forms/openuridialog.ui \\\n-    ../src/qt/forms/optionsdialog.ui \\\n-    ../src/qt/forms/overviewpage.ui \\\n-    ../src/qt/forms/receivecoinsdialog.ui \\\n-    ../src/qt/forms/receiverequestdialog.ui \\\n-    ../src/qt/forms/debugwindow.ui \\\n-    ../src/qt/forms/sendcoinsdialog.ui \\\n-    ../src/qt/forms/sendcoinsentry.ui \\\n-    ../src/qt/forms/signverifymessagedialog.ui \\\n-    ../src/qt/forms/transactiondescdialog.ui \\\n-    ../src/qt/forms/createwalletdialog.ui\n-\n-RESOURCES += \\\n-    ../src/qt/bitcoin.qrc"
      },
      {
        "sha": "a83d2979ed3a8f11edea358937e8d5d359d58b4c",
        "filename": "contrib/bitcoin-tx.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 57,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/bitcoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/bitcoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-tx.bash-completion?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,57 +0,0 @@\n-# bash programmable completion for bitcoin-tx(1)\n-# Copyright (c) 2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-_bitcoin_tx() {\n-    local cur prev words=() cword\n-    local bitcoin_tx\n-\n-    # save and use original argument to invoke bitcoin-tx for -help\n-    # it might not be in $PATH\n-    bitcoin_tx=\"$1\"\n-\n-    COMPREPLY=()\n-    _get_comp_words_by_ref -n =: cur prev words cword\n-\n-    case \"$cur\" in\n-        load=*:*)\n-            cur=\"${cur#load=*:}\"\n-            _filedir\n-            return 0\n-            ;;\n-        *=*)\t# prevent attempts to complete other arguments\n-            return 0\n-            ;;\n-    esac\n-\n-    if [[ \"$cword\" == 1 || ( \"$prev\" != \"-create\" && \"$prev\" == -* ) ]]; then\n-        # only options (or an uncompletable hex-string) allowed\n-        # parse bitcoin-tx -help for options\n-        local helpopts\n-        helpopts=$($bitcoin_tx -help | sed -e '/^  -/ p' -e d )\n-        COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n-    else\n-        # only commands are allowed\n-        # parse -help for commands\n-        local helpcmds\n-        helpcmds=$($bitcoin_tx -help | sed -e '1,/Commands:/d' -e 's/=.*/=/' -e '/^  [a-z]/ p' -e d )\n-        COMPREPLY=( $( compgen -W \"$helpcmds\" -- \"$cur\" ) )\n-    fi\n-\n-    # Prevent space if an argument is desired\n-    if [[ $COMPREPLY == *= ]]; then\n-        compopt -o nospace\n-    fi\n-\n-    return 0\n-} &&\n-complete -F _bitcoin_tx bitcoin-tx\n-\n-# Local variables:\n-# mode: shell-script\n-# sh-basic-offset: 4\n-# sh-indent-comment: t\n-# indent-tabs-mode: nil\n-# End:\n-# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "ec1d9512d4759e79ff284ceb09ae0ee16bbdb653",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 56,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,56 +0,0 @@\n-# bash programmable completion for bitcoind(1) and bitcoin-qt(1)\n-# Copyright (c) 2012-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-_bitcoind() {\n-    local cur prev words=() cword\n-    local bitcoind\n-\n-    # save and use original argument to invoke bitcoind for -help\n-    # it might not be in $PATH\n-    bitcoind=\"$1\"\n-\n-    COMPREPLY=()\n-    _get_comp_words_by_ref -n = cur prev words cword\n-\n-    case \"$cur\" in\n-        -conf=*|-pid=*|-loadblock=*|-rpccookiefile=*|-wallet=*)\n-            cur=\"${cur#*=}\"\n-            _filedir\n-            return 0\n-            ;;\n-        -datadir=*)\n-            cur=\"${cur#*=}\"\n-            _filedir -d\n-            return 0\n-            ;;\n-        -*=*)\t# prevent nonsense completions\n-            return 0\n-            ;;\n-        *)\n-\n-            # only parse -help if sensible\n-            if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n-                local helpopts\n-                helpopts=$($bitcoind -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n-                COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n-            fi\n-\n-            # Prevent space if an argument is desired\n-            if [[ $COMPREPLY == *= ]]; then\n-                compopt -o nospace\n-            fi\n-            return 0\n-            ;;\n-    esac\n-} &&\n-complete -F _bitcoind bitcoind bitcoin-qt\n-\n-# Local variables:\n-# mode: shell-script\n-# sh-basic-offset: 4\n-# sh-indent-comment: t\n-# indent-tabs-mode: nil\n-# End:\n-# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "581fe712e96c2cab4839c6bdc49a1b5cdc7bb6e7",
        "filename": "contrib/debian/copyright",
        "status": "removed",
        "additions": 0,
        "deletions": 146,
        "changes": 146,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,146 +0,0 @@\n-Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\n-Upstream-Name: Bitcoin\n-Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n- irc://#bitcoin@freenode.net\n-Source: https://github.com/bitcoin/bitcoin\n-\n-Files: *\n-Copyright: 2009-2020, Bitcoin Core Developers\n-License: Expat\n-Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n-         as well as the numerous contributors to the project.\n-\n-Files: debian/*\n-Copyright: 2010-2011, Jonas Smedegaard <dr@jones.dk>\n-           2011, Matt Corallo <matt@bluematt.me>\n-License: GPL-2+\n-\n-Files: src/secp256k1/build-aux/m4/ax_jni_include_dir.m4\n-Copyright: 2008 Don Anderson <dda@sleepycat.com>\n-License: GNU-All-permissive-License\n-\n-Files: src/secp256k1/build-aux/m4/ax_prog_cc_for_build.m4\n-Copyright: 2008 Paolo Bonzini <bonzini@gnu.org>\n-License: GNU-All-permissive-License\n-\n-Files: src/qt/res/icons/add.png\n-       src/qt/res/icons/address-book.png\n-       src/qt/res/icons/chevron.png\n-       src/qt/res/icons/edit.png\n-       src/qt/res/icons/editcopy.png\n-       src/qt/res/icons/editpaste.png\n-       src/qt/res/icons/export.png\n-       src/qt/res/icons/eye.png\n-       src/qt/res/icons/history.png\n-       src/qt/res/icons/lock_*.png\n-       src/qt/res/icons/overview.png\n-       src/qt/res/icons/receive.png\n-       src/qt/res/icons/remove.png\n-       src/qt/res/icons/send.png\n-       src/qt/res/icons/synced.png\n-       src/qt/res/icons/transaction*.png\n-       src/qt/res/icons/tx_output.png\n-       src/qt/res/icons/warning.png\n-Copyright: Stephen Hutchings (and more)\n-           http://typicons.com\n-License: Expat\n-Comment: Site: https://github.com/stephenhutchings/typicons.font\n-\n-Files: src/qt/res/icons/connect*.png\n-       src/qt/res/src/connect-*.svg\n-       src/qt/res/icons/network_disabled.png\n-       src/qt/res/src/network_disabled.svg\n-Copyright: Marco Falke\n-           Luke Dashjr\n-License: Expat\n-Comment: Inspired by Stephen Hutchings' Typicons\n-\n-Files: src/qt/res/icons/tx_mined.png\n-       src/qt/res/src/mine.svg\n-       src/qt/res/icons/fontbigger.png\n-       src/qt/res/icons/fontsmaller.png\n-       src/qt/res/icons/hd_disabled.png\n-       src/qt/res/src/hd_disabled.svg\n-       src/qt/res/icons/hd_enabled.png\n-       src/qt/res/src/hd_enabled.svg\n-Copyright: Jonas Schnelli\n-License: Expat\n-\n-Files: src/qt/res/icons/clock*.png\n-       src/qt/res/icons/eye_*.png\n-       src/qt/res/icons/tx_in*.png\n-       src/qt/res/src/clock_*.svg\n-       src/qt/res/src/tx_*.svg\n-Copyright: Stephen Hutchings, Jonas Schnelli\n-License: Expat\n-Comment: Modifications of Stephen Hutchings' Typicons\n-\n-Files: src/qt/res/icons/bitcoin.*\n-       share/pixmaps/bitcoin*\n-       src/qt/res/src/bitcoin.svg\n-Copyright: Bitboy, Jonas Schnelli\n-License: public-domain\n-Comment: Site: https://bitcointalk.org/?topic=1756.0\n-\n-Files: src/qt/res/icons/proxy.png\n-       src/qt/res/src/proxy.svg\n-Copyright: Cristian Mircea Messel\n-License: public-domain\n-\n-\n-License: Expat\n- Permission is hereby granted, free of charge, to any person obtaining a\n- copy of this software and associated documentation files (the\n- \"Software\"), to deal in the Software without restriction, including\n- without limitation the rights to use, copy, modify, merge, publish,\n- distribute, sublicense, and/or sell copies of the Software, and to\n- permit persons to whom the Software is furnished to do so, subject to\n- the following conditions:\n- .\n- The above copyright notice and this permission notice shall be included\n- in all copies or substantial portions of the Software.\n- .\n- THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n- OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n- MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n- IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n- CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n- TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n- SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n-\n-License: GNU-All-permissive-License\n- Copying and distribution of this file, with or without modification, are\n- permitted in any medium without royalty provided the copyright notice\n- and this notice are preserved. This file is offered as-is, without any\n- warranty.\n-\n-License: GPL-2+\n- This program is free software; you can redistribute it and/or modify it\n- under the terms of the GNU General Public License as published by the\n- Free Software Foundation; either version 2, or (at your option) any\n- later version.\n- .\n- This program is distributed in the hope that it will be useful, but\n- WITHOUT ANY WARRANTY; without even the implied warranty of\n- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n- General Public License for more details.\n-Comment:\n- On Debian systems the GNU General Public License (GPL) version 2 is\n- located in '/usr/share/common-licenses/GPL-2'.\n- .\n- You should have received a copy of the GNU General Public License along\n- with this program.  If not, see <http://www.gnu.org/licenses/>.\n-\n-License: GPL-3+\n- Permission is granted to copy, distribute and/or modify this document\n- under the terms of the GNU General Public License, Version 3 or any\n- later version published by the Free Software Foundation.\n-Comment:\n- On Debian systems the GNU General Public License (GPL) version 3 is\n- located in '/usr/share/common-licenses/GPL-3'.\n- .\n- You should have received a copy of the GNU General Public License along\n- with this program.  If not, see <http://www.gnu.org/licenses/>.\n-\n-License: public-domain\n- This work is in the public domain."
      },
      {
        "sha": "bdff7a84b098bd430d9e3b3ec8c58106da7bb680",
        "filename": "contrib/devtools/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 130,
        "changes": 130,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,130 +0,0 @@\n-Contents\n-========\n-This directory contains tools for developers working on this repository.\n-\n-clang-format-diff.py\n-===================\n-\n-A script to format unified git diffs according to [.clang-format](../../src/.clang-format).\n-\n-Requires `clang-format`, installed e.g. via `brew install clang-format` on macOS.\n-\n-For instance, to format the last commit with 0 lines of context,\n-the script should be called from the git root folder as follows.\n-\n-```\n-git diff -U0 HEAD~1.. | ./contrib/devtools/clang-format-diff.py -p1 -i -v\n-```\n-\n-copyright\\_header.py\n-====================\n-\n-Provides utilities for managing copyright headers of `The Bitcoin Core\n-developers` in repository source files. It has three subcommands:\n-\n-```\n-$ ./copyright_header.py report <base_directory> [verbose]\n-$ ./copyright_header.py update <base_directory>\n-$ ./copyright_header.py insert <file>\n-```\n-Running these subcommands without arguments displays a usage string.\n-\n-copyright\\_header.py report \\<base\\_directory\\> [verbose]\n----------------------------------------------------------\n-\n-Produces a report of all copyright header notices found inside the source files\n-of a repository. Useful to quickly visualize the state of the headers.\n-Specifying `verbose` will list the full filenames of files of each category.\n-\n-copyright\\_header.py update \\<base\\_directory\\> [verbose]\n----------------------------------------------------------\n-Updates all the copyright headers of `The Bitcoin Core developers` which were\n-changed in a year more recent than is listed. For example:\n-```\n-// Copyright (c) <firstYear>-<lastYear> The Bitcoin Core developers\n-```\n-will be updated to:\n-```\n-// Copyright (c) <firstYear>-<lastModifiedYear> The Bitcoin Core developers\n-```\n-where `<lastModifiedYear>` is obtained from the `git log` history.\n-\n-This subcommand also handles copyright headers that have only a single year. In\n-those cases:\n-```\n-// Copyright (c) <year> The Bitcoin Core developers\n-```\n-will be updated to:\n-```\n-// Copyright (c) <year>-<lastModifiedYear> The Bitcoin Core developers\n-```\n-where the update is appropriate.\n-\n-copyright\\_header.py insert \\<file\\>\n-------------------------------------\n-Inserts a copyright header for `The Bitcoin Core developers` at the top of the\n-file in either Python or C++ style as determined by the file extension. If the\n-file is a Python file and it has  `#!` starting the first line, the header is\n-inserted in the line below it.\n-\n-The copyright dates will be set to be `<year_introduced>-<current_year>` where\n-`<year_introduced>` is according to the `git log` history. If\n-`<year_introduced>` is equal to `<current_year>`, it will be set as a single\n-year rather than two hyphenated years.\n-\n-If the file already has a copyright for `The Bitcoin Core developers`, the\n-script will exit.\n-\n-gen-manpages.sh\n-===============\n-\n-A small script to automatically create manpages in ../../doc/man by running the release binaries with the -help option.\n-This requires help2man which can be found at: https://www.gnu.org/software/help2man/\n-\n-With in-tree builds this tool can be run from any directory within the\n-repostitory. To use this tool with out-of-tree builds set `BUILDDIR`. For\n-example:\n-\n-```bash\n-BUILDDIR=$PWD/build contrib/devtools/gen-manpages.sh\n-```\n-\n-security-check.py and test-security-check.py\n-============================================\n-\n-Perform basic security checks on a series of executables.\n-\n-symbol-check.py\n-===============\n-\n-A script to check that the executables produced by gitian only contain\n-certain symbols and are only linked against allowed libraries.\n-\n-For Linux this means checking for allowed gcc, glibc and libstdc++ version symbols.\n-This makes sure they are still compatible with the minimum supported distribution versions.\n-\n-For macOS and Windows we check that the executables are only linked against libraries we allow.\n-\n-Example usage after a gitian build:\n-\n-    find ../gitian-builder/build -type f -executable | xargs python3 contrib/devtools/symbol-check.py\n-\n-If no errors occur the return value will be 0 and the output will be empty.\n-\n-If there are any errors the return value will be 1 and output like this will be printed:\n-\n-    .../64/test_bitcoin: symbol memcpy from unsupported version GLIBC_2.14\n-    .../64/test_bitcoin: symbol __fdelt_chk from unsupported version GLIBC_2.15\n-    .../64/test_bitcoin: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15\n-    .../64/test_bitcoin: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n-\n-circular-dependencies.py\n-========================\n-\n-Run this script from the root of the source tree (`src/`) to find circular dependencies in the source code.\n-This looks only at which files include other files, treating the `.cpp` and `.h` file as one unit.\n-\n-Example usage:\n-\n-    cd .../src\n-    ../contrib/devtools/circular-dependencies.py {*,*/*,*/*/*}.{h,cpp}"
      },
      {
        "sha": "bc5f09a3e260f6f02d6ea72e90b21a53e003ff0e",
        "filename": "contrib/devtools/circular-dependencies.py",
        "status": "removed",
        "additions": 0,
        "deletions": 91,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/circular-dependencies.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/circular-dependencies.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/circular-dependencies.py?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,91 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-import sys\n-import re\n-\n-MAPPING = {\n-    'core_read.cpp': 'core_io.cpp',\n-    'core_write.cpp': 'core_io.cpp',\n-}\n-\n-# Directories with header-based modules, where the assumption that .cpp files\n-# define functions and variables declared in corresponding .h files is\n-# incorrect.\n-HEADER_MODULE_PATHS = [\n-    'interfaces/'\n-]\n-\n-def module_name(path):\n-    if path in MAPPING:\n-        path = MAPPING[path]\n-    if any(path.startswith(dirpath) for dirpath in HEADER_MODULE_PATHS):\n-        return path\n-    if path.endswith(\".h\"):\n-        return path[:-2]\n-    if path.endswith(\".c\"):\n-        return path[:-2]\n-    if path.endswith(\".cpp\"):\n-        return path[:-4]\n-    return None\n-\n-files = dict()\n-deps = dict()\n-\n-RE = re.compile(\"^#include <(.*)>\")\n-\n-# Iterate over files, and create list of modules\n-for arg in sys.argv[1:]:\n-    module = module_name(arg)\n-    if module is None:\n-        print(\"Ignoring file %s (does not constitute module)\\n\" % arg)\n-    else:\n-        files[arg] = module\n-        deps[module] = set()\n-\n-# Iterate again, and build list of direct dependencies for each module\n-# TODO: implement support for multiple include directories\n-for arg in sorted(files.keys()):\n-    module = files[arg]\n-    with open(arg, 'r', encoding=\"utf8\") as f:\n-        for line in f:\n-            match = RE.match(line)\n-            if match:\n-                include = match.group(1)\n-                included_module = module_name(include)\n-                if included_module is not None and included_module in deps and included_module != module:\n-                    deps[module].add(included_module)\n-\n-# Loop to find the shortest (remaining) circular dependency\n-have_cycle = False\n-while True:\n-    shortest_cycle = None\n-    for module in sorted(deps.keys()):\n-        # Build the transitive closure of dependencies of module\n-        closure = dict()\n-        for dep in deps[module]:\n-            closure[dep] = []\n-        while True:\n-            old_size = len(closure)\n-            old_closure_keys = sorted(closure.keys())\n-            for src in old_closure_keys:\n-                for dep in deps[src]:\n-                    if dep not in closure:\n-                        closure[dep] = closure[src] + [src]\n-            if len(closure) == old_size:\n-                break\n-        # If module is in its own transitive closure, it's a circular dependency; check if it is the shortest\n-        if module in closure and (shortest_cycle is None or len(closure[module]) + 1 < len(shortest_cycle)):\n-            shortest_cycle = [module] + closure[module]\n-    if shortest_cycle is None:\n-        break\n-    # We have the shortest circular dependency; report it\n-    module = shortest_cycle[0]\n-    print(\"Circular dependency: %s\" % (\" -> \".join(shortest_cycle + [module])))\n-    # And then break the dependency to avoid repeating in other cycles\n-    deps[shortest_cycle[-1]] = deps[shortest_cycle[-1]] - set([module])\n-    have_cycle = True\n-\n-sys.exit(1 if have_cycle else 0)"
      },
      {
        "sha": "98eee67f4300853629cc61baaaed13008819038c",
        "filename": "contrib/devtools/clang-format-diff.py",
        "status": "removed",
        "additions": 0,
        "deletions": 166,
        "changes": 166,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/clang-format-diff.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/clang-format-diff.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format-diff.py?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,166 +0,0 @@\n-#!/usr/bin/env python3\n-#\n-#===- clang-format-diff.py - ClangFormat Diff Reformatter ----*- python -*--===#\n-#\n-#                     The LLVM Compiler Infrastructure\n-#\n-# This file is distributed under the University of Illinois Open Source\n-# License.\n-#\n-#           ============================================================\n-#\n-# University of Illinois/NCSA\n-# Open Source License\n-#\n-# Copyright (c) 2007-2015 University of Illinois at Urbana-Champaign.\n-# All rights reserved.\n-#\n-# Developed by:\n-#\n-#     LLVM Team\n-#\n-#     University of Illinois at Urbana-Champaign\n-#\n-#     http://llvm.org\n-#\n-# Permission is hereby granted, free of charge, to any person obtaining a copy of\n-# this software and associated documentation files (the \"Software\"), to deal with\n-# the Software without restriction, including without limitation the rights to\n-# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n-# of the Software, and to permit persons to whom the Software is furnished to do\n-# so, subject to the following conditions:\n-#\n-#     * Redistributions of source code must retain the above copyright notice,\n-#       this list of conditions and the following disclaimers.\n-#\n-#     * Redistributions in binary form must reproduce the above copyright notice,\n-#       this list of conditions and the following disclaimers in the\n-#       documentation and/or other materials provided with the distribution.\n-#\n-#     * Neither the names of the LLVM Team, University of Illinois at\n-#       Urbana-Champaign, nor the names of its contributors may be used to\n-#       endorse or promote products derived from this Software without specific\n-#       prior written permission.\n-#\n-# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n-# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n-# CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\n-# SOFTWARE.\n-#\n-#           ============================================================\n-#\n-#===------------------------------------------------------------------------===#\n-\n-r\"\"\"\n-ClangFormat Diff Reformatter\n-============================\n-\n-This script reads input from a unified diff and reformats all the changed\n-lines. This is useful to reformat all the lines touched by a specific patch.\n-Example usage for git/svn users:\n-\n-  git diff -U0 HEAD^ | clang-format-diff.py -p1 -i\n-  svn diff --diff-cmd=diff -x-U0 | clang-format-diff.py -i\n-\n-\"\"\"\n-\n-import argparse\n-import difflib\n-import io\n-import re\n-import subprocess\n-import sys\n-\n-\n-# Change this to the full path if clang-format is not on the path.\n-binary = 'clang-format'\n-\n-\n-def main():\n-  parser = argparse.ArgumentParser(description=\n-                                   'Reformat changed lines in diff. Without -i '\n-                                   'option just output the diff that would be '\n-                                   'introduced.')\n-  parser.add_argument('-i', action='store_true', default=False,\n-                      help='apply edits to files instead of displaying a diff')\n-  parser.add_argument('-p', metavar='NUM', default=0,\n-                      help='strip the smallest prefix containing P slashes')\n-  parser.add_argument('-regex', metavar='PATTERN', default=None,\n-                      help='custom pattern selecting file paths to reformat '\n-                      '(case sensitive, overrides -iregex)')\n-  parser.add_argument('-iregex', metavar='PATTERN', default=\n-                      r'.*\\.(cpp|cc|c\\+\\+|cxx|c|cl|h|hpp|m|mm|inc|js|ts|proto'\n-                      r'|protodevel|java)',\n-                      help='custom pattern selecting file paths to reformat '\n-                      '(case insensitive, overridden by -regex)')\n-  parser.add_argument('-sort-includes', action='store_true', default=False,\n-                      help='let clang-format sort include blocks')\n-  parser.add_argument('-v', '--verbose', action='store_true',\n-                      help='be more verbose, ineffective without -i')\n-  args = parser.parse_args()\n-\n-  # Extract changed lines for each file.\n-  filename = None\n-  lines_by_file = {}\n-  for line in sys.stdin:\n-    match = re.search(r'^\\+\\+\\+\\ (.*?/){%s}(\\S*)' % args.p, line)\n-    if match:\n-      filename = match.group(2)\n-    if filename is None:\n-      continue\n-\n-    if args.regex is not None:\n-      if not re.match('^%s$' % args.regex, filename):\n-        continue\n-    else:\n-      if not re.match('^%s$' % args.iregex, filename, re.IGNORECASE):\n-        continue\n-\n-    match = re.search(r'^@@.*\\+(\\d+)(,(\\d+))?', line)\n-    if match:\n-      start_line = int(match.group(1))\n-      line_count = 1\n-      if match.group(3):\n-        line_count = int(match.group(3))\n-      if line_count == 0:\n-        continue\n-      end_line = start_line + line_count - 1\n-      lines_by_file.setdefault(filename, []).extend(\n-          ['-lines', str(start_line) + ':' + str(end_line)])\n-\n-  # Reformat files containing changes in place.\n-  for filename, lines in lines_by_file.items():\n-    if args.i and args.verbose:\n-      print('Formatting {}'.format(filename))\n-    command = [binary, filename]\n-    if args.i:\n-      command.append('-i')\n-    if args.sort_includes:\n-      command.append('-sort-includes')\n-    command.extend(lines)\n-    command.extend(['-style=file', '-fallback-style=none'])\n-    p = subprocess.Popen(command,\n-                         stdout=subprocess.PIPE,\n-                         stderr=None,\n-                         stdin=subprocess.PIPE,\n-                         universal_newlines=True)\n-    stdout, stderr = p.communicate()\n-    if p.returncode != 0:\n-      sys.exit(p.returncode)\n-\n-    if not args.i:\n-      with open(filename, encoding=\"utf8\") as f:\n-        code = f.readlines()\n-      formatted_code = io.StringIO(stdout).readlines()\n-      diff = difflib.unified_diff(code, formatted_code,\n-                                  filename, filename,\n-                                  '(before formatting)', '(after formatting)')\n-      diff_string = ''.join(diff)\n-      if len(diff_string) > 0:\n-        sys.stdout.write(diff_string)\n-\n-if __name__ == '__main__':\n-  main()"
      },
      {
        "sha": "9a555c70bb490add4f055da0f58e9100a396584f",
        "filename": "contrib/devtools/copyright_header.py",
        "status": "removed",
        "additions": 0,
        "deletions": 606,
        "changes": 606,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/copyright_header.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/copyright_header.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/copyright_header.py?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,606 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2016-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-import re\n-import fnmatch\n-import sys\n-import subprocess\n-import datetime\n-import os\n-\n-################################################################################\n-# file filtering\n-################################################################################\n-\n-EXCLUDE = [\n-    # auto generated:\n-    'src/qt/bitcoinstrings.cpp',\n-    'src/chainparamsseeds.h',\n-    # other external copyrights:\n-    'src/reverse_iterator.h',\n-    'src/test/fuzz/FuzzedDataProvider.h',\n-    'src/tinyformat.h',\n-    'src/bench/nanobench.h',\n-    'test/functional/test_framework/bignum.py',\n-    # python init:\n-    '*__init__.py',\n-]\n-EXCLUDE_COMPILED = re.compile('|'.join([fnmatch.translate(m) for m in EXCLUDE]))\n-\n-EXCLUDE_DIRS = [\n-    # git subtrees\n-    \"src/crypto/ctaes/\",\n-    \"src/leveldb/\",\n-    \"src/secp256k1/\",\n-    \"src/univalue/\",\n-    \"src/crc32c/\",\n-]\n-\n-INCLUDE = ['*.h', '*.cpp', '*.cc', '*.c', '*.mm', '*.py', '*.sh', '*.bash-completion']\n-INCLUDE_COMPILED = re.compile('|'.join([fnmatch.translate(m) for m in INCLUDE]))\n-\n-def applies_to_file(filename):\n-    for excluded_dir in EXCLUDE_DIRS:\n-        if filename.startswith(excluded_dir):\n-            return False\n-    return ((EXCLUDE_COMPILED.match(filename) is None) and\n-            (INCLUDE_COMPILED.match(filename) is not None))\n-\n-################################################################################\n-# obtain list of files in repo according to INCLUDE and EXCLUDE\n-################################################################################\n-\n-GIT_LS_CMD = 'git ls-files --full-name'.split(' ')\n-GIT_TOPLEVEL_CMD = 'git rev-parse --show-toplevel'.split(' ')\n-\n-def call_git_ls(base_directory):\n-    out = subprocess.check_output([*GIT_LS_CMD, base_directory])\n-    return [f for f in out.decode(\"utf-8\").split('\\n') if f != '']\n-\n-def call_git_toplevel():\n-    \"Returns the absolute path to the project root\"\n-    return subprocess.check_output(GIT_TOPLEVEL_CMD).strip().decode(\"utf-8\")\n-\n-def get_filenames_to_examine(base_directory):\n-    \"Returns an array of absolute paths to any project files in the base_directory that pass the include/exclude filters\"\n-    root = call_git_toplevel()\n-    filenames = call_git_ls(base_directory)\n-    return sorted([os.path.join(root, filename) for filename in filenames if\n-                   applies_to_file(filename)])\n-\n-################################################################################\n-# define and compile regexes for the patterns we are looking for\n-################################################################################\n-\n-\n-COPYRIGHT_WITH_C = r'Copyright \\(c\\)'\n-COPYRIGHT_WITHOUT_C = 'Copyright'\n-ANY_COPYRIGHT_STYLE = '(%s|%s)' % (COPYRIGHT_WITH_C, COPYRIGHT_WITHOUT_C)\n-\n-YEAR = \"20[0-9][0-9]\"\n-YEAR_RANGE = '(%s)(-%s)?' % (YEAR, YEAR)\n-YEAR_LIST = '(%s)(, %s)+' % (YEAR, YEAR)\n-ANY_YEAR_STYLE = '(%s|%s)' % (YEAR_RANGE, YEAR_LIST)\n-ANY_COPYRIGHT_STYLE_OR_YEAR_STYLE = (\"%s %s\" % (ANY_COPYRIGHT_STYLE,\n-                                                ANY_YEAR_STYLE))\n-\n-ANY_COPYRIGHT_COMPILED = re.compile(ANY_COPYRIGHT_STYLE_OR_YEAR_STYLE)\n-\n-def compile_copyright_regex(copyright_style, year_style, name):\n-    return re.compile(r'%s %s,? %s( +\\*)?\\n' % (copyright_style, year_style, name))\n-\n-EXPECTED_HOLDER_NAMES = [\n-    r\"Satoshi Nakamoto\",\n-    r\"The Bitcoin Core developers\",\n-    r\"BitPay Inc\\.\",\n-    r\"University of Illinois at Urbana-Champaign\\.\",\n-    r\"Pieter Wuille\",\n-    r\"Wladimir J\\. van der Laan\",\n-    r\"Jeff Garzik\",\n-    r\"Jan-Klaas Kollhof\",\n-    r\"ArtForz -- public domain half-a-node\",\n-    r\"Intel Corporation ?\",\n-    r\"The Zcash developers\",\n-    r\"Jeremy Rubin\",\n-]\n-\n-DOMINANT_STYLE_COMPILED = {}\n-YEAR_LIST_STYLE_COMPILED = {}\n-WITHOUT_C_STYLE_COMPILED = {}\n-\n-for holder_name in EXPECTED_HOLDER_NAMES:\n-    DOMINANT_STYLE_COMPILED[holder_name] = (\n-        compile_copyright_regex(COPYRIGHT_WITH_C, YEAR_RANGE, holder_name))\n-    YEAR_LIST_STYLE_COMPILED[holder_name] = (\n-        compile_copyright_regex(COPYRIGHT_WITH_C, YEAR_LIST, holder_name))\n-    WITHOUT_C_STYLE_COMPILED[holder_name] = (\n-        compile_copyright_regex(COPYRIGHT_WITHOUT_C, ANY_YEAR_STYLE,\n-                                holder_name))\n-\n-################################################################################\n-# search file contents for copyright message of particular category\n-################################################################################\n-\n-def get_count_of_copyrights_of_any_style_any_holder(contents):\n-    return len(ANY_COPYRIGHT_COMPILED.findall(contents))\n-\n-def file_has_dominant_style_copyright_for_holder(contents, holder_name):\n-    match = DOMINANT_STYLE_COMPILED[holder_name].search(contents)\n-    return match is not None\n-\n-def file_has_year_list_style_copyright_for_holder(contents, holder_name):\n-    match = YEAR_LIST_STYLE_COMPILED[holder_name].search(contents)\n-    return match is not None\n-\n-def file_has_without_c_style_copyright_for_holder(contents, holder_name):\n-    match = WITHOUT_C_STYLE_COMPILED[holder_name].search(contents)\n-    return match is not None\n-\n-################################################################################\n-# get file info\n-################################################################################\n-\n-def read_file(filename):\n-    return open(filename, 'r', encoding=\"utf8\").read()\n-\n-def gather_file_info(filename):\n-    info = {}\n-    info['filename'] = filename\n-    c = read_file(filename)\n-    info['contents'] = c\n-\n-    info['all_copyrights'] = get_count_of_copyrights_of_any_style_any_holder(c)\n-\n-    info['classified_copyrights'] = 0\n-    info['dominant_style'] = {}\n-    info['year_list_style'] = {}\n-    info['without_c_style'] = {}\n-    for holder_name in EXPECTED_HOLDER_NAMES:\n-        has_dominant_style = (\n-            file_has_dominant_style_copyright_for_holder(c, holder_name))\n-        has_year_list_style = (\n-            file_has_year_list_style_copyright_for_holder(c, holder_name))\n-        has_without_c_style = (\n-            file_has_without_c_style_copyright_for_holder(c, holder_name))\n-        info['dominant_style'][holder_name] = has_dominant_style\n-        info['year_list_style'][holder_name] = has_year_list_style\n-        info['without_c_style'][holder_name] = has_without_c_style\n-        if has_dominant_style or has_year_list_style or has_without_c_style:\n-            info['classified_copyrights'] = info['classified_copyrights'] + 1\n-    return info\n-\n-################################################################################\n-# report execution\n-################################################################################\n-\n-SEPARATOR = '-'.join(['' for _ in range(80)])\n-\n-def print_filenames(filenames, verbose):\n-    if not verbose:\n-        return\n-    for filename in filenames:\n-        print(\"\\t%s\" % filename)\n-\n-def print_report(file_infos, verbose):\n-    print(SEPARATOR)\n-    examined = [i['filename'] for i in file_infos]\n-    print(\"%d files examined according to INCLUDE and EXCLUDE fnmatch rules\" %\n-          len(examined))\n-    print_filenames(examined, verbose)\n-\n-    print(SEPARATOR)\n-    print('')\n-    zero_copyrights = [i['filename'] for i in file_infos if\n-                       i['all_copyrights'] == 0]\n-    print(\"%4d with zero copyrights\" % len(zero_copyrights))\n-    print_filenames(zero_copyrights, verbose)\n-    one_copyright = [i['filename'] for i in file_infos if\n-                     i['all_copyrights'] == 1]\n-    print(\"%4d with one copyright\" % len(one_copyright))\n-    print_filenames(one_copyright, verbose)\n-    two_copyrights = [i['filename'] for i in file_infos if\n-                      i['all_copyrights'] == 2]\n-    print(\"%4d with two copyrights\" % len(two_copyrights))\n-    print_filenames(two_copyrights, verbose)\n-    three_copyrights = [i['filename'] for i in file_infos if\n-                        i['all_copyrights'] == 3]\n-    print(\"%4d with three copyrights\" % len(three_copyrights))\n-    print_filenames(three_copyrights, verbose)\n-    four_or_more_copyrights = [i['filename'] for i in file_infos if\n-                               i['all_copyrights'] >= 4]\n-    print(\"%4d with four or more copyrights\" % len(four_or_more_copyrights))\n-    print_filenames(four_or_more_copyrights, verbose)\n-    print('')\n-    print(SEPARATOR)\n-    print('Copyrights with dominant style:\\ne.g. \"Copyright (c)\" and '\n-          '\"<year>\" or \"<startYear>-<endYear>\":\\n')\n-    for holder_name in EXPECTED_HOLDER_NAMES:\n-        dominant_style = [i['filename'] for i in file_infos if\n-                          i['dominant_style'][holder_name]]\n-        if len(dominant_style) > 0:\n-            print(\"%4d with '%s'\" % (len(dominant_style),\n-                                     holder_name.replace('\\n', '\\\\n')))\n-            print_filenames(dominant_style, verbose)\n-    print('')\n-    print(SEPARATOR)\n-    print('Copyrights with year list style:\\ne.g. \"Copyright (c)\" and '\n-          '\"<year1>, <year2>, ...\":\\n')\n-    for holder_name in EXPECTED_HOLDER_NAMES:\n-        year_list_style = [i['filename'] for i in file_infos if\n-                           i['year_list_style'][holder_name]]\n-        if len(year_list_style) > 0:\n-            print(\"%4d with '%s'\" % (len(year_list_style),\n-                                     holder_name.replace('\\n', '\\\\n')))\n-            print_filenames(year_list_style, verbose)\n-    print('')\n-    print(SEPARATOR)\n-    print('Copyrights with no \"(c)\" style:\\ne.g. \"Copyright\" and \"<year>\" or '\n-          '\"<startYear>-<endYear>\":\\n')\n-    for holder_name in EXPECTED_HOLDER_NAMES:\n-        without_c_style = [i['filename'] for i in file_infos if\n-                           i['without_c_style'][holder_name]]\n-        if len(without_c_style) > 0:\n-            print(\"%4d with '%s'\" % (len(without_c_style),\n-                                     holder_name.replace('\\n', '\\\\n')))\n-            print_filenames(without_c_style, verbose)\n-\n-    print('')\n-    print(SEPARATOR)\n-\n-    unclassified_copyrights = [i['filename'] for i in file_infos if\n-                               i['classified_copyrights'] < i['all_copyrights']]\n-    print(\"%d with unexpected copyright holder names\" %\n-          len(unclassified_copyrights))\n-    print_filenames(unclassified_copyrights, verbose)\n-    print(SEPARATOR)\n-\n-def exec_report(base_directory, verbose):\n-    filenames = get_filenames_to_examine(base_directory)\n-    file_infos = [gather_file_info(f) for f in filenames]\n-    print_report(file_infos, verbose)\n-\n-################################################################################\n-# report cmd\n-################################################################################\n-\n-REPORT_USAGE = \"\"\"\n-Produces a report of all copyright header notices found inside the source files\n-of a repository.\n-\n-Usage:\n-    $ ./copyright_header.py report <base_directory> [verbose]\n-\n-Arguments:\n-    <base_directory> - The base directory of a bitcoin source code repository.\n-    [verbose] - Includes a list of every file of each subcategory in the report.\n-\"\"\"\n-\n-def report_cmd(argv):\n-    if len(argv) == 2:\n-        sys.exit(REPORT_USAGE)\n-\n-    base_directory = argv[2]\n-    if not os.path.exists(base_directory):\n-        sys.exit(\"*** bad <base_directory>: %s\" % base_directory)\n-\n-    if len(argv) == 3:\n-        verbose = False\n-    elif argv[3] == 'verbose':\n-        verbose = True\n-    else:\n-        sys.exit(\"*** unknown argument: %s\" % argv[2])\n-\n-    exec_report(base_directory, verbose)\n-\n-################################################################################\n-# query git for year of last change\n-################################################################################\n-\n-GIT_LOG_CMD = \"git log --pretty=format:%%ai %s\"\n-\n-def call_git_log(filename):\n-    out = subprocess.check_output((GIT_LOG_CMD % filename).split(' '))\n-    return out.decode(\"utf-8\").split('\\n')\n-\n-def get_git_change_years(filename):\n-    git_log_lines = call_git_log(filename)\n-    if len(git_log_lines) == 0:\n-        return [datetime.date.today().year]\n-    # timestamp is in ISO 8601 format. e.g. \"2016-09-05 14:25:32 -0600\"\n-    return [line.split(' ')[0].split('-')[0] for line in git_log_lines]\n-\n-def get_most_recent_git_change_year(filename):\n-    return max(get_git_change_years(filename))\n-\n-################################################################################\n-# read and write to file\n-################################################################################\n-\n-def read_file_lines(filename):\n-    f = open(filename, 'r', encoding=\"utf8\")\n-    file_lines = f.readlines()\n-    f.close()\n-    return file_lines\n-\n-def write_file_lines(filename, file_lines):\n-    f = open(filename, 'w', encoding=\"utf8\")\n-    f.write(''.join(file_lines))\n-    f.close()\n-\n-################################################################################\n-# update header years execution\n-################################################################################\n-\n-COPYRIGHT = r'Copyright \\(c\\)'\n-YEAR = \"20[0-9][0-9]\"\n-YEAR_RANGE = '(%s)(-%s)?' % (YEAR, YEAR)\n-HOLDER = 'The Bitcoin Core developers'\n-UPDATEABLE_LINE_COMPILED = re.compile(' '.join([COPYRIGHT, YEAR_RANGE, HOLDER]))\n-\n-def get_updatable_copyright_line(file_lines):\n-    index = 0\n-    for line in file_lines:\n-        if UPDATEABLE_LINE_COMPILED.search(line) is not None:\n-            return index, line\n-        index = index + 1\n-    return None, None\n-\n-def parse_year_range(year_range):\n-    year_split = year_range.split('-')\n-    start_year = year_split[0]\n-    if len(year_split) == 1:\n-        return start_year, start_year\n-    return start_year, year_split[1]\n-\n-def year_range_to_str(start_year, end_year):\n-    if start_year == end_year:\n-        return start_year\n-    return \"%s-%s\" % (start_year, end_year)\n-\n-def create_updated_copyright_line(line, last_git_change_year):\n-    copyright_splitter = 'Copyright (c) '\n-    copyright_split = line.split(copyright_splitter)\n-    # Preserve characters on line that are ahead of the start of the copyright\n-    # notice - they are part of the comment block and vary from file-to-file.\n-    before_copyright = copyright_split[0]\n-    after_copyright = copyright_split[1]\n-\n-    space_split = after_copyright.split(' ')\n-    year_range = space_split[0]\n-    start_year, end_year = parse_year_range(year_range)\n-    if end_year == last_git_change_year:\n-        return line\n-    return (before_copyright + copyright_splitter +\n-            year_range_to_str(start_year, last_git_change_year) + ' ' +\n-            ' '.join(space_split[1:]))\n-\n-def update_updatable_copyright(filename):\n-    file_lines = read_file_lines(filename)\n-    index, line = get_updatable_copyright_line(file_lines)\n-    if not line:\n-        print_file_action_message(filename, \"No updatable copyright.\")\n-        return\n-    last_git_change_year = get_most_recent_git_change_year(filename)\n-    new_line = create_updated_copyright_line(line, last_git_change_year)\n-    if line == new_line:\n-        print_file_action_message(filename, \"Copyright up-to-date.\")\n-        return\n-    file_lines[index] = new_line\n-    write_file_lines(filename, file_lines)\n-    print_file_action_message(filename,\n-                              \"Copyright updated! -> %s\" % last_git_change_year)\n-\n-def exec_update_header_year(base_directory):\n-    for filename in get_filenames_to_examine(base_directory):\n-        update_updatable_copyright(filename)\n-\n-################################################################################\n-# update cmd\n-################################################################################\n-\n-UPDATE_USAGE = \"\"\"\n-Updates all the copyright headers of \"The Bitcoin Core developers\" which were\n-changed in a year more recent than is listed. For example:\n-\n-// Copyright (c) <firstYear>-<lastYear> The Bitcoin Core developers\n-\n-will be updated to:\n-\n-// Copyright (c) <firstYear>-<lastModifiedYear> The Bitcoin Core developers\n-\n-where <lastModifiedYear> is obtained from the 'git log' history.\n-\n-This subcommand also handles copyright headers that have only a single year. In those cases:\n-\n-// Copyright (c) <year> The Bitcoin Core developers\n-\n-will be updated to:\n-\n-// Copyright (c) <year>-<lastModifiedYear> The Bitcoin Core developers\n-\n-where the update is appropriate.\n-\n-Usage:\n-    $ ./copyright_header.py update <base_directory>\n-\n-Arguments:\n-    <base_directory> - The base directory of a bitcoin source code repository.\n-\"\"\"\n-\n-def print_file_action_message(filename, action):\n-    print(\"%-52s %s\" % (filename, action))\n-\n-def update_cmd(argv):\n-    if len(argv) != 3:\n-        sys.exit(UPDATE_USAGE)\n-\n-    base_directory = argv[2]\n-    if not os.path.exists(base_directory):\n-        sys.exit(\"*** bad base_directory: %s\" % base_directory)\n-    exec_update_header_year(base_directory)\n-\n-################################################################################\n-# inserted copyright header format\n-################################################################################\n-\n-def get_header_lines(header, start_year, end_year):\n-    lines = header.split('\\n')[1:-1]\n-    lines[0] = lines[0] % year_range_to_str(start_year, end_year)\n-    return [line + '\\n' for line in lines]\n-\n-CPP_HEADER = '''\n-// Copyright (c) %s The Bitcoin Core developers\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-\n-def get_cpp_header_lines_to_insert(start_year, end_year):\n-    return reversed(get_header_lines(CPP_HEADER, start_year, end_year))\n-\n-SCRIPT_HEADER = '''\n-# Copyright (c) %s The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-\n-def get_script_header_lines_to_insert(start_year, end_year):\n-    return reversed(get_header_lines(SCRIPT_HEADER, start_year, end_year))\n-\n-################################################################################\n-# query git for year of last change\n-################################################################################\n-\n-def get_git_change_year_range(filename):\n-    years = get_git_change_years(filename)\n-    return min(years), max(years)\n-\n-################################################################################\n-# check for existing core copyright\n-################################################################################\n-\n-def file_already_has_core_copyright(file_lines):\n-    index, _ = get_updatable_copyright_line(file_lines)\n-    return index is not None\n-\n-################################################################################\n-# insert header execution\n-################################################################################\n-\n-def file_has_hashbang(file_lines):\n-    if len(file_lines) < 1:\n-        return False\n-    if len(file_lines[0]) <= 2:\n-        return False\n-    return file_lines[0][:2] == '#!'\n-\n-def insert_script_header(filename, file_lines, start_year, end_year):\n-    if file_has_hashbang(file_lines):\n-        insert_idx = 1\n-    else:\n-        insert_idx = 0\n-    header_lines = get_script_header_lines_to_insert(start_year, end_year)\n-    for line in header_lines:\n-        file_lines.insert(insert_idx, line)\n-    write_file_lines(filename, file_lines)\n-\n-def insert_cpp_header(filename, file_lines, start_year, end_year):\n-    file_lines.insert(0, '\\n')\n-    header_lines = get_cpp_header_lines_to_insert(start_year, end_year)\n-    for line in header_lines:\n-        file_lines.insert(0, line)\n-    write_file_lines(filename, file_lines)\n-\n-def exec_insert_header(filename, style):\n-    file_lines = read_file_lines(filename)\n-    if file_already_has_core_copyright(file_lines):\n-        sys.exit('*** %s already has a copyright by The Bitcoin Core developers'\n-                 % (filename))\n-    start_year, end_year = get_git_change_year_range(filename)\n-    if style in ['python', 'shell']:\n-        insert_script_header(filename, file_lines, start_year, end_year)\n-    else:\n-        insert_cpp_header(filename, file_lines, start_year, end_year)\n-\n-################################################################################\n-# insert cmd\n-################################################################################\n-\n-INSERT_USAGE = \"\"\"\n-Inserts a copyright header for \"The Bitcoin Core developers\" at the top of the\n-file in either Python or C++ style as determined by the file extension. If the\n-file is a Python file and it has a '#!' starting the first line, the header is\n-inserted in the line below it.\n-\n-The copyright dates will be set to be:\n-\n-\"<year_introduced>-<current_year>\"\n-\n-where <year_introduced> is according to the 'git log' history. If\n-<year_introduced> is equal to <current_year>, the date will be set to be:\n-\n-\"<current_year>\"\n-\n-If the file already has a copyright for \"The Bitcoin Core developers\", the\n-script will exit.\n-\n-Usage:\n-    $ ./copyright_header.py insert <file>\n-\n-Arguments:\n-    <file> - A source file in the bitcoin repository.\n-\"\"\"\n-\n-def insert_cmd(argv):\n-    if len(argv) != 3:\n-        sys.exit(INSERT_USAGE)\n-\n-    filename = argv[2]\n-    if not os.path.isfile(filename):\n-        sys.exit(\"*** bad filename: %s\" % filename)\n-    _, extension = os.path.splitext(filename)\n-    if extension not in ['.h', '.cpp', '.cc', '.c', '.py', '.sh']:\n-        sys.exit(\"*** cannot insert for file extension %s\" % extension)\n-\n-    if extension == '.py':\n-        style = 'python'\n-    elif extension == '.sh':\n-        style = 'shell'\n-    else:\n-        style = 'cpp'\n-    exec_insert_header(filename, style)\n-\n-################################################################################\n-# UI\n-################################################################################\n-\n-USAGE = \"\"\"\n-copyright_header.py - utilities for managing copyright headers of 'The Bitcoin\n-Core developers' in repository source files.\n-\n-Usage:\n-    $ ./copyright_header <subcommand>\n-\n-Subcommands:\n-    report\n-    update\n-    insert\n-\n-To see subcommand usage, run them without arguments.\n-\"\"\"\n-\n-SUBCOMMANDS = ['report', 'update', 'insert']\n-\n-if __name__ == \"__main__\":\n-    if len(sys.argv) == 1:\n-        sys.exit(USAGE)\n-    subcommand = sys.argv[1]\n-    if subcommand not in SUBCOMMANDS:\n-        sys.exit(USAGE)\n-    if subcommand == 'report':\n-        report_cmd(sys.argv)\n-    elif subcommand == 'update':\n-        update_cmd(sys.argv)\n-    elif subcommand == 'insert':\n-        insert_cmd(sys.argv)"
      },
      {
        "sha": "aa65953d838585aff4f33081b30c1cdb984b2e15",
        "filename": "contrib/devtools/gen-manpages.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 36,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/gen-manpages.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/gen-manpages.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/gen-manpages.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,36 +0,0 @@\n-#!/usr/bin/env bash\n-# Copyright (c) 2016-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-TOPDIR=${TOPDIR:-$(git rev-parse --show-toplevel)}\n-BUILDDIR=${BUILDDIR:-$TOPDIR}\n-\n-BINDIR=${BINDIR:-$BUILDDIR/src}\n-MANDIR=${MANDIR:-$TOPDIR/doc/man}\n-\n-BITCOIND=${BITCOIND:-$BINDIR/bitcoind}\n-BITCOINCLI=${BITCOINCLI:-$BINDIR/bitcoin-cli}\n-BITCOINTX=${BITCOINTX:-$BINDIR/bitcoin-tx}\n-WALLET_TOOL=${WALLET_TOOL:-$BINDIR/bitcoin-wallet}\n-BITCOINQT=${BITCOINQT:-$BINDIR/qt/bitcoin-qt}\n-\n-[ ! -x $BITCOIND ] && echo \"$BITCOIND not found or not executable.\" && exit 1\n-\n-# The autodetected version git tag can screw up manpage output a little bit\n-read -r -a BTCVER <<< \"$($BITCOINCLI --version | head -n1 | awk -F'[ -]' '{ print $6, $7 }')\"\n-\n-# Create a footer file with copyright content.\n-# This gets autodetected fine for bitcoind if --version-string is not set,\n-# but has different outcomes for bitcoin-qt and bitcoin-cli.\n-echo \"[COPYRIGHT]\" > footer.h2m\n-$BITCOIND --version | sed -n '1!p' >> footer.h2m\n-\n-for cmd in $BITCOIND $BITCOINCLI $BITCOINTX $WALLET_TOOL $BITCOINQT; do\n-  cmdname=\"${cmd##*/}\"\n-  help2man -N --version-string=${BTCVER[0]} --include=footer.h2m -o ${MANDIR}/${cmdname}.1 ${cmd}\n-  sed -i \"s/\\\\\\-${BTCVER[1]}//g\" ${MANDIR}/${cmdname}.1\n-done\n-\n-rm -f footer.h2m"
      },
      {
        "sha": "dc74de91980a4cce82b01c915be9e9c8a7d3c62e",
        "filename": "contrib/devtools/security-check.py",
        "status": "removed",
        "additions": 0,
        "deletions": 357,
        "changes": 357,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,357 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Perform basic security checks on a series of executables.\n-Exit status will be 0 if successful, and the program will be silent.\n-Otherwise the exit status will be 1 and it will log which executables failed which checks.\n-Needs `readelf` (for ELF), `objdump` (for PE) and `otool` (for MACHO).\n-'''\n-import subprocess\n-import sys\n-import os\n-\n-from typing import List, Optional\n-\n-READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n-OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n-OTOOL_CMD = os.getenv('OTOOL', '/usr/bin/otool')\n-\n-def run_command(command) -> str:\n-    p = subprocess.run(command, stdout=subprocess.PIPE, check=True, universal_newlines=True)\n-    return p.stdout\n-\n-def check_ELF_PIE(executable) -> bool:\n-    '''\n-    Check for position independent executable (PIE), allowing for address space randomization.\n-    '''\n-    stdout = run_command([READELF_CMD, '-h', '-W', executable])\n-\n-    ok = False\n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        if len(line)>=2 and tokens[0] == 'Type:' and tokens[1] == 'DYN':\n-            ok = True\n-    return ok\n-\n-def get_ELF_program_headers(executable):\n-    '''Return type and flags for ELF program headers'''\n-    stdout = run_command([READELF_CMD, '-l', '-W', executable])\n-\n-    in_headers = False\n-    headers = []\n-    for line in stdout.splitlines():\n-        if line.startswith('Program Headers:'):\n-            in_headers = True\n-            count = 0\n-        if line == '':\n-            in_headers = False\n-        if in_headers:\n-            if count == 1: # header line\n-                header = [x.strip() for x in line.split()]\n-                ofs_typ = header.index('Type')\n-                ofs_flags = header.index('Flg')\n-                # assert readelf output is what we expect\n-                if ofs_typ == -1 or ofs_flags == -1:\n-                    raise ValueError('Cannot parse elfread -lW output')\n-            elif count > 1:\n-                splitline = [x.strip() for x in line.split()]\n-                typ = splitline[ofs_typ]\n-                if not typ.startswith('[R'): # skip [Requesting ...]\n-                    splitline = [x.strip() for x in line.split()]\n-                    flags = splitline[ofs_flags]\n-                    # check for 'R', ' E'\n-                    if splitline[ofs_flags + 1] is 'E':\n-                        flags += ' E'\n-                    headers.append((typ, flags, []))\n-            count += 1\n-\n-        if line.startswith(' Section to Segment mapping:'):\n-            in_mapping = True\n-            count = 0\n-        if line == '':\n-            in_mapping = False\n-        if in_mapping:\n-            if count == 1: # header line\n-                ofs_segment = line.find('Segment')\n-                ofs_sections = line.find('Sections...')\n-                if ofs_segment == -1 or ofs_sections == -1:\n-                    raise ValueError('Cannot parse elfread -lW output')\n-            elif count > 1:\n-                segment = int(line[ofs_segment:ofs_sections].strip())\n-                sections = line[ofs_sections:].strip().split()\n-                headers[segment][2].extend(sections)\n-            count += 1\n-    return headers\n-\n-def check_ELF_NX(executable) -> bool:\n-    '''\n-    Check that no sections are writable and executable (including the stack)\n-    '''\n-    have_wx = False\n-    have_gnu_stack = False\n-    for (typ, flags, _) in get_ELF_program_headers(executable):\n-        if typ == 'GNU_STACK':\n-            have_gnu_stack = True\n-        if 'W' in flags and 'E' in flags: # section is both writable and executable\n-            have_wx = True\n-    return have_gnu_stack and not have_wx\n-\n-def check_ELF_RELRO(executable) -> bool:\n-    '''\n-    Check for read-only relocations.\n-    GNU_RELRO program header must exist\n-    Dynamic section must have BIND_NOW flag\n-    '''\n-    have_gnu_relro = False\n-    for (typ, flags, _) in get_ELF_program_headers(executable):\n-        # Note: not checking flags == 'R': here as linkers set the permission differently\n-        # This does not affect security: the permission flags of the GNU_RELRO program\n-        # header are ignored, the PT_LOAD header determines the effective permissions.\n-        # However, the dynamic linker need to write to this area so these are RW.\n-        # Glibc itself takes care of mprotecting this area R after relocations are finished.\n-        # See also https://marc.info/?l=binutils&m=1498883354122353\n-        if typ == 'GNU_RELRO':\n-            have_gnu_relro = True\n-\n-    have_bindnow = False\n-    stdout = run_command([READELF_CMD, '-d', '-W', executable])\n-\n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        if len(tokens)>1 and tokens[1] == '(BIND_NOW)' or (len(tokens)>2 and tokens[1] == '(FLAGS)' and 'BIND_NOW' in tokens[2:]):\n-            have_bindnow = True\n-    return have_gnu_relro and have_bindnow\n-\n-def check_ELF_Canary(executable) -> bool:\n-    '''\n-    Check for use of stack canary\n-    '''\n-    stdout = run_command([READELF_CMD, '--dyn-syms', '-W', executable])\n-\n-    ok = False\n-    for line in stdout.splitlines():\n-        if '__stack_chk_fail' in line:\n-            ok = True\n-    return ok\n-\n-def check_ELF_separate_code(executable):\n-    '''\n-    Check that sections are appropriately separated in virtual memory,\n-    based on their permissions. This checks for missing -Wl,-z,separate-code\n-    and potentially other problems.\n-    '''\n-    EXPECTED_FLAGS = {\n-        # Read + execute\n-        '.init': 'R E',\n-        '.plt': 'R E',\n-        '.plt.got': 'R E',\n-        '.plt.sec': 'R E',\n-        '.text': 'R E',\n-        '.fini': 'R E',\n-        # Read-only data\n-        '.interp': 'R',\n-        '.note.gnu.property': 'R',\n-        '.note.gnu.build-id': 'R',\n-        '.note.ABI-tag': 'R',\n-        '.gnu.hash': 'R',\n-        '.dynsym': 'R',\n-        '.dynstr': 'R',\n-        '.gnu.version': 'R',\n-        '.gnu.version_r': 'R',\n-        '.rela.dyn': 'R',\n-        '.rela.plt': 'R',\n-        '.rodata': 'R',\n-        '.eh_frame_hdr': 'R',\n-        '.eh_frame': 'R',\n-        '.qtmetadata': 'R',\n-        '.gcc_except_table': 'R',\n-        '.stapsdt.base': 'R',\n-        # Writable data\n-        '.init_array': 'RW',\n-        '.fini_array': 'RW',\n-        '.dynamic': 'RW',\n-        '.got': 'RW',\n-        '.data': 'RW',\n-        '.bss': 'RW',\n-    }\n-    # For all LOAD program headers get mapping to the list of sections,\n-    # and for each section, remember the flags of the associated program header.\n-    flags_per_section = {}\n-    for (typ, flags, sections) in get_ELF_program_headers(executable):\n-        if typ == 'LOAD':\n-            for section in sections:\n-                assert(section not in flags_per_section)\n-                flags_per_section[section] = flags\n-    # Spot-check ELF LOAD program header flags per section\n-    # If these sections exist, check them against the expected R/W/E flags\n-    for (section, flags) in flags_per_section.items():\n-        if section in EXPECTED_FLAGS:\n-            if EXPECTED_FLAGS[section] != flags:\n-                return False\n-    return True\n-\n-def get_PE_dll_characteristics(executable) -> int:\n-    '''Get PE DllCharacteristics bits'''\n-    stdout = run_command([OBJDUMP_CMD, '-x',  executable])\n-\n-    bits = 0\n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        if len(tokens)>=2 and tokens[0] == 'DllCharacteristics':\n-            bits = int(tokens[1],16)\n-    return bits\n-\n-IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA = 0x0020\n-IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE    = 0x0040\n-IMAGE_DLL_CHARACTERISTICS_NX_COMPAT       = 0x0100\n-\n-def check_PE_DYNAMIC_BASE(executable) -> bool:\n-    '''PIE: DllCharacteristics bit 0x40 signifies dynamicbase (ASLR)'''\n-    bits = get_PE_dll_characteristics(executable)\n-    return (bits & IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE) == IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE\n-\n-# Must support high-entropy 64-bit address space layout randomization\n-# in addition to DYNAMIC_BASE to have secure ASLR.\n-def check_PE_HIGH_ENTROPY_VA(executable) -> bool:\n-    '''PIE: DllCharacteristics bit 0x20 signifies high-entropy ASLR'''\n-    bits = get_PE_dll_characteristics(executable)\n-    return (bits & IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA) == IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA\n-\n-def check_PE_RELOC_SECTION(executable) -> bool:\n-    '''Check for a reloc section. This is required for functional ASLR.'''\n-    stdout = run_command([OBJDUMP_CMD, '-h',  executable])\n-\n-    for line in stdout.splitlines():\n-        if '.reloc' in line:\n-            return True\n-    return False\n-\n-def check_PE_NX(executable) -> bool:\n-    '''NX: DllCharacteristics bit 0x100 signifies nxcompat (DEP)'''\n-    bits = get_PE_dll_characteristics(executable)\n-    return (bits & IMAGE_DLL_CHARACTERISTICS_NX_COMPAT) == IMAGE_DLL_CHARACTERISTICS_NX_COMPAT\n-\n-def get_MACHO_executable_flags(executable) -> List[str]:\n-    stdout = run_command([OTOOL_CMD, '-vh', executable])\n-\n-    flags = []\n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        # filter first two header lines\n-        if 'magic' in tokens or 'Mach' in tokens:\n-            continue\n-        # filter ncmds and sizeofcmds values\n-        flags += [t for t in tokens if not t.isdigit()]\n-    return flags\n-\n-def check_MACHO_PIE(executable) -> bool:\n-    '''\n-    Check for position independent executable (PIE), allowing for address space randomization.\n-    '''\n-    flags = get_MACHO_executable_flags(executable)\n-    if 'PIE' in flags:\n-        return True\n-    return False\n-\n-def check_MACHO_NOUNDEFS(executable) -> bool:\n-    '''\n-    Check for no undefined references.\n-    '''\n-    flags = get_MACHO_executable_flags(executable)\n-    if 'NOUNDEFS' in flags:\n-        return True\n-    return False\n-\n-def check_MACHO_NX(executable) -> bool:\n-    '''\n-    Check for no stack execution\n-    '''\n-    flags = get_MACHO_executable_flags(executable)\n-    if 'ALLOW_STACK_EXECUTION' in flags:\n-        return False\n-    return True\n-\n-def check_MACHO_LAZY_BINDINGS(executable) -> bool:\n-    '''\n-    Check for no lazy bindings.\n-    We don't use or check for MH_BINDATLOAD. See #18295.\n-    '''\n-    stdout = run_command([OTOOL_CMD, '-l', executable])\n-\n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        if 'lazy_bind_off' in tokens or 'lazy_bind_size' in tokens:\n-            if tokens[1] != '0':\n-                return False\n-    return True\n-\n-def check_MACHO_Canary(executable) -> bool:\n-    '''\n-    Check for use of stack canary\n-    '''\n-    stdout = run_command([OTOOL_CMD, '-Iv', executable])\n-\n-    ok = False\n-    for line in stdout.splitlines():\n-        if '___stack_chk_fail' in line:\n-            ok = True\n-    return ok\n-\n-CHECKS = {\n-'ELF': [\n-    ('PIE', check_ELF_PIE),\n-    ('NX', check_ELF_NX),\n-    ('RELRO', check_ELF_RELRO),\n-    ('Canary', check_ELF_Canary),\n-    ('separate_code', check_ELF_separate_code),\n-],\n-'PE': [\n-    ('DYNAMIC_BASE', check_PE_DYNAMIC_BASE),\n-    ('HIGH_ENTROPY_VA', check_PE_HIGH_ENTROPY_VA),\n-    ('NX', check_PE_NX),\n-    ('RELOC_SECTION', check_PE_RELOC_SECTION)\n-],\n-'MACHO': [\n-    ('PIE', check_MACHO_PIE),\n-    ('NOUNDEFS', check_MACHO_NOUNDEFS),\n-    ('NX', check_MACHO_NX),\n-    ('LAZY_BINDINGS', check_MACHO_LAZY_BINDINGS),\n-    ('Canary', check_MACHO_Canary)\n-]\n-}\n-\n-def identify_executable(executable) -> Optional[str]:\n-    with open(filename, 'rb') as f:\n-        magic = f.read(4)\n-    if magic.startswith(b'MZ'):\n-        return 'PE'\n-    elif magic.startswith(b'\\x7fELF'):\n-        return 'ELF'\n-    elif magic.startswith(b'\\xcf\\xfa'):\n-        return 'MACHO'\n-    return None\n-\n-if __name__ == '__main__':\n-    retval = 0\n-    for filename in sys.argv[1:]:\n-        try:\n-            etype = identify_executable(filename)\n-            if etype is None:\n-                print('%s: unknown format' % filename)\n-                retval = 1\n-                continue\n-\n-            failed = []\n-            for (name, func) in CHECKS[etype]:\n-                if not func(filename):\n-                    failed.append(name)\n-            if failed:\n-                print('%s: failed %s' % (filename, ' '.join(failed)))\n-                retval = 1\n-        except IOError:\n-            print('%s: cannot open' % filename)\n-            retval = 1\n-    sys.exit(retval)\n-"
      },
      {
        "sha": "92b72b1446cf6bacf92723b6a8da8786c0802557",
        "filename": "contrib/devtools/split-debug.sh.in",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/split-debug.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/split-debug.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/split-debug.sh.in?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,10 +0,0 @@\n-#!/bin/sh\n-set -e\n-if [ $# -ne 3 ];\n-    then echo \"usage: $0 <input> <stripped-binary> <debug-binary>\"\n-fi\n-\n-@OBJCOPY@ --enable-deterministic-archives -p --only-keep-debug $1 $3\n-@OBJCOPY@ --enable-deterministic-archives -p --strip-debug $1 $2\n-@STRIP@ --enable-deterministic-archives -p -s $2\n-@OBJCOPY@ --enable-deterministic-archives -p --add-gnu-debuglink=$3 $2"
      },
      {
        "sha": "6949cb7ced89eda0be2b24dc4de9123ae7403fb1",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "removed",
        "additions": 0,
        "deletions": 306,
        "changes": 306,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,306 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2014 Wladimir J. van der Laan\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-A script to check that the executables produced by gitian only contain\n-certain symbols and are only linked against allowed libraries.\n-\n-Example usage:\n-\n-    find ../gitian-builder/build -type f -executable | xargs python3 contrib/devtools/symbol-check.py\n-'''\n-import subprocess\n-import re\n-import sys\n-import os\n-from typing import List, Optional, Tuple\n-\n-# Debian 8 (Jessie) EOL: 2020. https://wiki.debian.org/DebianReleases#Production_Releases\n-#\n-# - g++ version 4.9.2 (https://packages.debian.org/search?suite=jessie&arch=any&searchon=names&keywords=g%2B%2B)\n-# - libc version 2.19 (https://packages.debian.org/search?suite=jessie&arch=any&searchon=names&keywords=libc6)\n-#\n-# Ubuntu 16.04 (Xenial) EOL: 2024. https://wiki.ubuntu.com/Releases\n-#\n-# - g++ version 5.3.1 (https://packages.ubuntu.com/search?keywords=g%2B%2B&searchon=names&suite=xenial&section=all)\n-# - libc version 2.23.0 (https://packages.ubuntu.com/search?keywords=libc6&searchon=names&suite=xenial&section=all)\n-#\n-# CentOS 7 EOL: 2024. https://wiki.centos.org/FAQ/General\n-#\n-# - g++ version 4.8.5 (http://mirror.centos.org/centos/7/os/x86_64/Packages/)\n-# - libc version 2.17 (http://mirror.centos.org/centos/7/os/x86_64/Packages/)\n-#\n-# Taking the minimum of these as our target.\n-#\n-# According to GNU ABI document (https://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n-#   GCC 4.8.5: GCC_4.8.0\n-#   (glibc)    GLIBC_2_17\n-#\n-MAX_VERSIONS = {\n-'GCC':       (4,8,0),\n-'GLIBC':     (2,17),\n-'LIBATOMIC': (1,0)\n-}\n-# See here for a description of _IO_stdin_used:\n-# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=634261#109\n-\n-# Ignore symbols that are exported as part of every executable\n-IGNORE_EXPORTS = {\n-'_edata', '_end', '__end__', '_init', '__bss_start', '__bss_start__', '_bss_end__', '__bss_end__', '_fini', '_IO_stdin_used', 'stdin', 'stdout', 'stderr',\n-'environ', '_environ', '__environ',\n-}\n-READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n-CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n-OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n-OTOOL_CMD = os.getenv('OTOOL', '/usr/bin/otool')\n-\n-# Allowed NEEDED libraries\n-ELF_ALLOWED_LIBRARIES = {\n-# bitcoind and bitcoin-qt\n-'libgcc_s.so.1', # GCC base support\n-'libc.so.6', # C library\n-'libpthread.so.0', # threading\n-'libm.so.6', # math library\n-'librt.so.1', # real-time (clock)\n-'libatomic.so.1',\n-'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n-'ld-linux.so.2', # 32-bit dynamic linker\n-'ld-linux-aarch64.so.1', # 64-bit ARM dynamic linker\n-'ld-linux-armhf.so.3', # 32-bit ARM dynamic linker\n-'ld-linux-riscv64-lp64d.so.1', # 64-bit RISC-V dynamic linker\n-# bitcoin-qt only\n-'libxcb.so.1', # part of X11\n-'libfontconfig.so.1', # font support\n-'libfreetype.so.6', # font parsing\n-'libdl.so.2' # programming interface to dynamic linker\n-}\n-ARCH_MIN_GLIBC_VER = {\n-'80386':  (2,1),\n-'X86-64': (2,2,5),\n-'ARM':    (2,4),\n-'AArch64':(2,17),\n-'RISC-V': (2,27)\n-}\n-\n-MACHO_ALLOWED_LIBRARIES = {\n-# bitcoind and bitcoin-qt\n-'libc++.1.dylib', # C++ Standard Library\n-'libSystem.B.dylib', # libc, libm, libpthread, libinfo\n-# bitcoin-qt only\n-'AppKit', # user interface\n-'ApplicationServices', # common application tasks.\n-'Carbon', # deprecated c back-compat API\n-'CoreFoundation', # low level func, data types\n-'CoreGraphics', # 2D rendering\n-'CoreServices', # operating system services\n-'CoreText', # interface for laying out text and handling fonts.\n-'Foundation', # base layer functionality for apps/frameworks\n-'ImageIO', # read and write image file formats.\n-'IOKit', # user-space access to hardware devices and drivers.\n-'libobjc.A.dylib', # Objective-C runtime library\n-}\n-\n-PE_ALLOWED_LIBRARIES = {\n-'ADVAPI32.dll', # security & registry\n-'IPHLPAPI.DLL', # IP helper API\n-'KERNEL32.dll', # win32 base APIs\n-'msvcrt.dll', # C standard library for MSVC\n-'SHELL32.dll', # shell API\n-'USER32.dll', # user interface\n-'WS2_32.dll', # sockets\n-# bitcoin-qt only\n-'dwmapi.dll', # desktop window manager\n-'GDI32.dll', # graphics device interface\n-'IMM32.dll', # input method editor\n-'ole32.dll', # component object model\n-'OLEAUT32.dll', # OLE Automation API\n-'SHLWAPI.dll', # light weight shell API\n-'UxTheme.dll',\n-'VERSION.dll', # version checking\n-'WINMM.dll', # WinMM audio API\n-}\n-\n-class CPPFilt(object):\n-    '''\n-    Demangle C++ symbol names.\n-\n-    Use a pipe to the 'c++filt' command.\n-    '''\n-    def __init__(self):\n-        self.proc = subprocess.Popen(CPPFILT_CMD, stdin=subprocess.PIPE, stdout=subprocess.PIPE, universal_newlines=True)\n-\n-    def __call__(self, mangled):\n-        self.proc.stdin.write(mangled + '\\n')\n-        self.proc.stdin.flush()\n-        return self.proc.stdout.readline().rstrip()\n-\n-    def close(self):\n-        self.proc.stdin.close()\n-        self.proc.stdout.close()\n-        self.proc.wait()\n-\n-def read_symbols(executable, imports=True) -> List[Tuple[str, str, str]]:\n-    '''\n-    Parse an ELF executable and return a list of (symbol,version, arch) tuples\n-    for dynamic, imported symbols.\n-    '''\n-    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', '-h', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Could not read symbols for {}: {}'.format(executable, stderr.strip()))\n-    syms = []\n-    for line in stdout.splitlines():\n-        line = line.split()\n-        if 'Machine:' in line:\n-            arch = line[-1]\n-        if len(line)>7 and re.match('[0-9]+:$', line[0]):\n-            (sym, _, version) = line[7].partition('@')\n-            is_import = line[6] == 'UND'\n-            if version.startswith('@'):\n-                version = version[1:]\n-            if is_import == imports:\n-                syms.append((sym, version, arch))\n-    return syms\n-\n-def check_version(max_versions, version, arch) -> bool:\n-    if '_' in version:\n-        (lib, _, ver) = version.rpartition('_')\n-    else:\n-        lib = version\n-        ver = '0'\n-    ver = tuple([int(x) for x in ver.split('.')])\n-    if not lib in max_versions:\n-        return False\n-    return ver <= max_versions[lib] or lib == 'GLIBC' and ver <= ARCH_MIN_GLIBC_VER[arch]\n-\n-def elf_read_libraries(filename) -> List[str]:\n-    p = subprocess.Popen([READELF_CMD, '-d', '-W', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    libraries = []\n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        if len(tokens)>2 and tokens[1] == '(NEEDED)':\n-            match = re.match(r'^Shared library: \\[(.*)\\]$', ' '.join(tokens[2:]))\n-            if match:\n-                libraries.append(match.group(1))\n-            else:\n-                raise ValueError('Unparseable (NEEDED) specification')\n-    return libraries\n-\n-def check_imported_symbols(filename) -> bool:\n-    cppfilt = CPPFilt()\n-    ok = True\n-    for sym, version, arch in read_symbols(filename, True):\n-        if version and not check_version(MAX_VERSIONS, version, arch):\n-            print('{}: symbol {} from unsupported version {}'.format(filename, cppfilt(sym), version))\n-            ok = False\n-    return ok\n-\n-def check_exported_symbols(filename) -> bool:\n-    cppfilt = CPPFilt()\n-    ok = True\n-    for sym,version,arch in read_symbols(filename, False):\n-        if arch == 'RISC-V' or sym in IGNORE_EXPORTS:\n-            continue\n-        print('{}: export of symbol {} not allowed'.format(filename, cppfilt(sym)))\n-        ok = False\n-    return ok\n-\n-def check_ELF_libraries(filename) -> bool:\n-    ok = True\n-    for library_name in elf_read_libraries(filename):\n-        if library_name not in ELF_ALLOWED_LIBRARIES:\n-            print('{}: NEEDED library {} is not allowed'.format(filename, library_name))\n-            ok = False\n-    return ok\n-\n-def macho_read_libraries(filename) -> List[str]:\n-    p = subprocess.Popen([OTOOL_CMD, '-L', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    libraries = []\n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        if len(tokens) == 1: # skip executable name\n-            continue\n-        libraries.append(tokens[0].split('/')[-1])\n-    return libraries\n-\n-def check_MACHO_libraries(filename) -> bool:\n-    ok = True\n-    for dylib in macho_read_libraries(filename):\n-        if dylib not in MACHO_ALLOWED_LIBRARIES:\n-            print('{} is not in ALLOWED_LIBRARIES!'.format(dylib))\n-            ok = False\n-    return ok\n-\n-def pe_read_libraries(filename) -> List[str]:\n-    p = subprocess.Popen([OBJDUMP_CMD, '-x', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    libraries = []\n-    for line in stdout.splitlines():\n-        if 'DLL Name:' in line:\n-            tokens = line.split(': ')\n-            libraries.append(tokens[1])\n-    return libraries\n-\n-def check_PE_libraries(filename) -> bool:\n-    ok = True\n-    for dylib in pe_read_libraries(filename):\n-        if dylib not in PE_ALLOWED_LIBRARIES:\n-            print('{} is not in ALLOWED_LIBRARIES!'.format(dylib))\n-            ok = False\n-    return ok\n-\n-CHECKS = {\n-'ELF': [\n-    ('IMPORTED_SYMBOLS', check_imported_symbols),\n-    ('EXPORTED_SYMBOLS', check_exported_symbols),\n-    ('LIBRARY_DEPENDENCIES', check_ELF_libraries)\n-],\n-'MACHO': [\n-    ('DYNAMIC_LIBRARIES', check_MACHO_libraries)\n-],\n-'PE' : [\n-    ('DYNAMIC_LIBRARIES', check_PE_libraries)\n-]\n-}\n-\n-def identify_executable(executable) -> Optional[str]:\n-    with open(filename, 'rb') as f:\n-        magic = f.read(4)\n-    if magic.startswith(b'MZ'):\n-        return 'PE'\n-    elif magic.startswith(b'\\x7fELF'):\n-        return 'ELF'\n-    elif magic.startswith(b'\\xcf\\xfa'):\n-        return 'MACHO'\n-    return None\n-\n-if __name__ == '__main__':\n-    retval = 0\n-    for filename in sys.argv[1:]:\n-        try:\n-            etype = identify_executable(filename)\n-            if etype is None:\n-                print('{}: unknown format'.format(filename))\n-                retval = 1\n-                continue\n-\n-            failed = []\n-            for (name, func) in CHECKS[etype]:\n-                if not func(filename):\n-                    failed.append(name)\n-            if failed:\n-                print('{}: failed {}'.format(filename, ' '.join(failed)))\n-                retval = 1\n-        except IOError:\n-            print('{}: cannot open'.format(filename))\n-            retval = 1\n-    sys.exit(retval)"
      },
      {
        "sha": "ec2d8866534214c86ebbf112232984ea55e85b0b",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "removed",
        "additions": 0,
        "deletions": 85,
        "changes": 85,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,85 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Test script for security-check.py\n-'''\n-import subprocess\n-import unittest\n-\n-def write_testcode(filename):\n-    with open(filename, 'w', encoding=\"utf8\") as f:\n-        f.write('''\n-    #include <stdio.h>\n-    int main()\n-    {\n-        printf(\"the quick brown fox jumps over the lazy god\\\\n\");\n-        return 0;\n-    }\n-    ''')\n-\n-def call_security_check(cc, source, executable, options):\n-    subprocess.run([cc,source,'-o',executable] + options, check=True)\n-    p = subprocess.run(['./contrib/devtools/security-check.py',executable], stdout=subprocess.PIPE, universal_newlines=True)\n-    return (p.returncode, p.stdout.rstrip())\n-\n-class TestSecurityChecks(unittest.TestCase):\n-    def test_ELF(self):\n-        source = 'test1.c'\n-        executable = 'test1'\n-        cc = 'gcc'\n-        write_testcode(source)\n-\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-zexecstack','-fno-stack-protector','-Wl,-znorelro','-no-pie','-fno-PIE', '-Wl,-z,separate-code']),\n-                (1, executable+': failed PIE NX RELRO Canary'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fno-stack-protector','-Wl,-znorelro','-no-pie','-fno-PIE', '-Wl,-z,separate-code']),\n-                (1, executable+': failed PIE RELRO Canary'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-no-pie','-fno-PIE', '-Wl,-z,separate-code']),\n-                (1, executable+': failed PIE RELRO'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-pie','-fPIE', '-Wl,-z,separate-code']),\n-                (1, executable+': failed RELRO'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE', '-Wl,-z,noseparate-code']),\n-                (1, executable+': failed separate_code'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE', '-Wl,-z,separate-code']),\n-                (0, ''))\n-\n-    def test_PE(self):\n-        source = 'test1.c'\n-        executable = 'test1.exe'\n-        cc = 'x86_64-w64-mingw32-gcc'\n-        write_testcode(source)\n-\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--no-nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n-            (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA NX RELOC_SECTION'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n-            (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA RELOC_SECTION'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n-            (1, executable+': failed HIGH_ENTROPY_VA RELOC_SECTION'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--high-entropy-va','-no-pie','-fno-PIE']),\n-            (1, executable+': failed RELOC_SECTION'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--high-entropy-va','-pie','-fPIE']),\n-            (0, ''))\n-\n-    def test_MACHO(self):\n-        source = 'test1.c'\n-        executable = 'test1'\n-        cc = 'clang'\n-        write_testcode(source)\n-\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-flat_namespace','-Wl,-allow_stack_execute','-fno-stack-protector']),\n-            (1, executable+': failed PIE NOUNDEFS NX LAZY_BINDINGS Canary'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-flat_namespace','-Wl,-allow_stack_execute','-fstack-protector-all']),\n-            (1, executable+': failed PIE NOUNDEFS NX LAZY_BINDINGS'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-flat_namespace','-fstack-protector-all']),\n-            (1, executable+': failed PIE NOUNDEFS LAZY_BINDINGS'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-fstack-protector-all']),\n-            (1, executable+': failed PIE LAZY_BINDINGS'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-bind_at_load','-fstack-protector-all']),\n-            (1, executable+': failed PIE'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-pie','-Wl,-bind_at_load','-fstack-protector-all']),\n-            (0, ''))\n-\n-if __name__ == '__main__':\n-    unittest.main()\n-"
      },
      {
        "sha": "8501c72f04a552bf7cb699890e92c874be43de05",
        "filename": "contrib/devtools/test_deterministic_coverage.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 151,
        "changes": 151,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/test_deterministic_coverage.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/test_deterministic_coverage.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test_deterministic_coverage.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,151 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# Test for deterministic coverage across unit test runs.\n-\n-export LC_ALL=C\n-\n-# Use GCOV_EXECUTABLE=\"gcov\" if compiling with gcc.\n-# Use GCOV_EXECUTABLE=\"llvm-cov gcov\" if compiling with clang.\n-GCOV_EXECUTABLE=\"gcov\"\n-\n-# Disable tests known to cause non-deterministic behaviour and document the source or point of non-determinism.\n-NON_DETERMINISTIC_TESTS=(\n-    \"blockfilter_index_tests/blockfilter_index_initial_sync\"  # src/checkqueue.h: In CCheckQueue::Loop(): while (queue.empty()) { ... }\n-    \"coinselector_tests/knapsack_solver_test\"                 # coinselector_tests.cpp: if (equal_sets(setCoinsRet, setCoinsRet2))\n-    \"fs_tests/fsbridge_fstream\"                               # deterministic test failure?\n-    \"miner_tests/CreateNewBlock_validity\"                     # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"scheduler_tests/manythreads\"                             # scheduler.cpp: CScheduler::serviceQueue()\n-    \"scheduler_tests/singlethreadedscheduler_ordered\"         # scheduler.cpp: CScheduler::serviceQueue()\n-    \"txvalidationcache_tests/checkinputs_test\"                # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"txvalidationcache_tests/tx_mempool_block_doublespend\"    # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"txindex_tests/txindex_initial_sync\"                      # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"txvalidation_tests/tx_mempool_reject_coinbase\"           # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"validation_block_tests/processnewblock_signals_ordering\" # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"wallet_tests/coin_mark_dirty_immature_credit\"            # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"wallet_tests/dummy_input_size_test\"                      # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"wallet_tests/importmulti_rescan\"                         # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"wallet_tests/importwallet_rescan\"                        # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"wallet_tests/ListCoins\"                                  # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"wallet_tests/scan_for_wallet_transactions\"               # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"wallet_tests/wallet_disableprivkeys\"                     # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-)\n-\n-TEST_BITCOIN_BINARY=\"src/test/test_bitcoin\"\n-\n-print_usage() {\n-    echo \"Usage: $0 [custom test filter (default: all but known non-deterministic tests)] [number of test runs (default: 2)]\"\n-}\n-\n-N_TEST_RUNS=2\n-BOOST_TEST_RUN_FILTERS=\"\"\n-if [[ $# != 0 ]]; then\n-    if [[ $1 == \"--help\" ]]; then\n-        print_usage\n-        exit\n-    fi\n-    PARSED_ARGUMENTS=0\n-    if [[ $1 =~ [a-z] ]]; then\n-        BOOST_TEST_RUN_FILTERS=$1\n-        PARSED_ARGUMENTS=$((PARSED_ARGUMENTS + 1))\n-        shift\n-    fi\n-    if [[ $1 =~ ^[0-9]+$ ]]; then\n-        N_TEST_RUNS=$1\n-        PARSED_ARGUMENTS=$((PARSED_ARGUMENTS + 1))\n-        shift\n-    fi\n-    if [[ ${PARSED_ARGUMENTS} == 0 || $# -gt 2 || ${N_TEST_RUNS} -lt 2 ]]; then\n-        print_usage\n-        exit\n-    fi\n-fi\n-if [[ ${BOOST_TEST_RUN_FILTERS} == \"\" ]]; then\n-    BOOST_TEST_RUN_FILTERS=\"$(IFS=\":\"; echo \"!${NON_DETERMINISTIC_TESTS[*]}\" | sed 's/:/:!/g')\"\n-else\n-    echo \"Using Boost test filter: ${BOOST_TEST_RUN_FILTERS}\"\n-    echo\n-fi\n-\n-if ! command -v gcov > /dev/null; then\n-    echo \"Error: gcov not installed. Exiting.\"\n-    exit 1\n-fi\n-\n-if ! command -v gcovr > /dev/null; then\n-    echo \"Error: gcovr not installed. Exiting.\"\n-    exit 1\n-fi\n-\n-if [[ ! -e ${TEST_BITCOIN_BINARY} ]]; then\n-    echo \"Error: Executable ${TEST_BITCOIN_BINARY} not found. Run \\\"./configure --enable-lcov\\\" and compile.\"\n-    exit 1\n-fi\n-\n-get_file_suffix_count() {\n-    find src/ -type f -name \"*.$1\" | wc -l\n-}\n-\n-if [[ $(get_file_suffix_count gcno) == 0 ]]; then\n-    echo \"Error: Could not find any *.gcno files. The *.gcno files are generated by the compiler. Run \\\"./configure --enable-lcov\\\" and re-compile.\"\n-    exit 1\n-fi\n-\n-get_covr_filename() {\n-    echo \"gcovr.run-$1.txt\"\n-}\n-\n-TEST_RUN_ID=0\n-while [[ ${TEST_RUN_ID} -lt ${N_TEST_RUNS} ]]; do\n-    TEST_RUN_ID=$((TEST_RUN_ID + 1))\n-    echo \"[$(date +\"%Y-%m-%d %H:%M:%S\")] Measuring coverage, run #${TEST_RUN_ID} of ${N_TEST_RUNS}\"\n-    find src/ -type f -name \"*.gcda\" -exec rm {} \\;\n-    if [[ $(get_file_suffix_count gcda) != 0 ]]; then\n-        echo \"Error: Stale *.gcda files found. Exiting.\"\n-        exit 1\n-    fi\n-    TEST_OUTPUT_TEMPFILE=$(mktemp)\n-    if ! BOOST_TEST_RUN_FILTERS=\"${BOOST_TEST_RUN_FILTERS}\" ${TEST_BITCOIN_BINARY} > \"${TEST_OUTPUT_TEMPFILE}\" 2>&1; then\n-        cat \"${TEST_OUTPUT_TEMPFILE}\"\n-        rm \"${TEST_OUTPUT_TEMPFILE}\"\n-        exit 1\n-    fi\n-    rm \"${TEST_OUTPUT_TEMPFILE}\"\n-    if [[ $(get_file_suffix_count gcda) == 0 ]]; then\n-        echo \"Error: Running the test suite did not create any *.gcda files. The gcda files are generated when the instrumented test programs are executed. Run \\\"./configure --enable-lcov\\\" and re-compile.\"\n-        exit 1\n-    fi\n-    GCOVR_TEMPFILE=$(mktemp)\n-    if ! gcovr --gcov-executable \"${GCOV_EXECUTABLE}\" -r src/ > \"${GCOVR_TEMPFILE}\"; then\n-        echo \"Error: gcovr failed. Output written to ${GCOVR_TEMPFILE}. Exiting.\"\n-        exit 1\n-    fi\n-    GCOVR_FILENAME=$(get_covr_filename ${TEST_RUN_ID})\n-    mv \"${GCOVR_TEMPFILE}\" \"${GCOVR_FILENAME}\"\n-    if grep -E \"^TOTAL *0 *0 \" \"${GCOVR_FILENAME}\"; then\n-        echo \"Error: Spurious gcovr output. Make sure the correct GCOV_EXECUTABLE variable is set in $0 (\\\"gcov\\\" for gcc, \\\"llvm-cov gcov\\\" for clang).\"\n-        exit 1\n-    fi\n-    if [[ ${TEST_RUN_ID} != 1 ]]; then\n-        COVERAGE_DIFF=$(diff -u \"$(get_covr_filename 1)\" \"${GCOVR_FILENAME}\")\n-        if [[ ${COVERAGE_DIFF} != \"\" ]]; then\n-            echo\n-            echo \"The line coverage is non-deterministic between runs. Exiting.\"\n-            echo\n-            echo \"The test suite must be deterministic in the sense that the set of lines executed at least\"\n-            echo \"once must be identical between runs. This is a necessary condition for meaningful\"\n-            echo \"coverage measuring.\"\n-            echo\n-            echo \"${COVERAGE_DIFF}\"\n-            exit 1\n-        fi\n-        rm \"${GCOVR_FILENAME}\"\n-    fi\n-done\n-\n-echo\n-echo \"Coverage test passed: Deterministic coverage across ${N_TEST_RUNS} runs.\"\n-exit"
      },
      {
        "sha": "dee25ff67b61e3b798cf56f53657536e496cfef8",
        "filename": "contrib/devtools/utxo_snapshot.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 44,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/utxo_snapshot.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/devtools/utxo_snapshot.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/utxo_snapshot.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,44 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-export LC_ALL=C\n-\n-set -ueo pipefail\n-\n-if (( $# < 3 )); then\n-  echo 'Usage: utxo_snapshot.sh <generate-at-height> <snapshot-out-path> <bitcoin-cli-call ...>'\n-  echo\n-  echo \"  if <snapshot-out-path> is '-', don't produce a snapshot file but instead print the \"\n-  echo \"  expected assumeutxo hash\"\n-  echo\n-  echo 'Examples:'\n-  echo\n-  echo \"  ./contrib/devtools/utxo_snapshot.sh 570000 utxo.dat ./src/bitcoin-cli -datadir=\\$(pwd)/testdata\"\n-  echo '  ./contrib/devtools/utxo_snapshot.sh 570000 - ./src/bitcoin-cli'\n-  exit 1\n-fi\n-\n-GENERATE_AT_HEIGHT=\"${1}\"; shift;\n-OUTPUT_PATH=\"${1}\"; shift;\n-# Most of the calls we make take a while to run, so pad with a lengthy timeout.\n-BITCOIN_CLI_CALL=\"${*} -rpcclienttimeout=9999999\"\n-\n-# Block we'll invalidate/reconsider to rewind/fast-forward the chain.\n-PIVOT_BLOCKHASH=$($BITCOIN_CLI_CALL getblockhash $(( GENERATE_AT_HEIGHT + 1 )) )\n-\n-(>&2 echo \"Rewinding chain back to height ${GENERATE_AT_HEIGHT} (by invalidating ${PIVOT_BLOCKHASH}); this may take a while\")\n-${BITCOIN_CLI_CALL} invalidateblock \"${PIVOT_BLOCKHASH}\"\n-\n-if [[ \"${OUTPUT_PATH}\" = \"-\" ]]; then\n-  (>&2 echo \"Generating txoutset info...\")\n-  ${BITCOIN_CLI_CALL} gettxoutsetinfo | grep hash_serialized_2 | sed 's/^.*: \"\\(.\\+\\)\\+\",/\\1/g'\n-else\n-  (>&2 echo \"Generating UTXO snapshot...\")\n-  ${BITCOIN_CLI_CALL} dumptxoutset \"${OUTPUT_PATH}\"\n-fi\n-\n-(>&2 echo \"Restoring chain to original height; this may take a while\")\n-${BITCOIN_CLI_CALL} reconsiderblock \"${PIVOT_BLOCKHASH}\""
      },
      {
        "sha": "e005cb96da62302ba6f099dcad1bcd13ee19e814",
        "filename": "contrib/filter-lcov.py",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/filter-lcov.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/filter-lcov.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/filter-lcov.py?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,28 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2017-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-import argparse\n-\n-parser = argparse.ArgumentParser(description='Remove the coverage data from a tracefile for all files matching the pattern.')\n-parser.add_argument('--pattern', '-p', action='append', help='the pattern of files to remove', required=True)\n-parser.add_argument('tracefile', help='the tracefile to remove the coverage data from')\n-parser.add_argument('outfile', help='filename for the output to be written to')\n-\n-args = parser.parse_args()\n-tracefile = args.tracefile\n-pattern = args.pattern\n-outfile = args.outfile\n-\n-in_remove = False\n-with open(tracefile, 'r', encoding=\"utf8\") as f:\n-    with open(outfile, 'w', encoding=\"utf8\") as wf:\n-        for line in f:\n-            for p in pattern:\n-                if line.startswith(\"SF:\") and p in line:\n-                    in_remove = True\n-            if not in_remove:\n-                wf.write(line)\n-            if line == 'end_of_record\\n':\n-                in_remove = False"
      },
      {
        "sha": "d498c9e2c821ededa6eff14b9b8b78df07f270e5",
        "filename": "contrib/gitian-build.py",
        "status": "removed",
        "additions": 0,
        "deletions": 262,
        "changes": 262,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/gitian-build.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/gitian-build.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.py?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,262 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-import argparse\n-import os\n-import subprocess\n-import sys\n-\n-def setup():\n-    global args, workdir\n-    programs = ['ruby', 'git', 'make', 'wget', 'curl']\n-    if args.kvm:\n-        programs += ['apt-cacher-ng', 'python-vm-builder', 'qemu-kvm', 'qemu-utils']\n-    elif args.docker and not os.path.isfile('/lib/systemd/system/docker.service'):\n-        dockers = ['docker.io', 'docker-ce']\n-        for i in dockers:\n-            return_code = subprocess.call(['sudo', 'apt-get', 'install', '-qq', i])\n-            if return_code == 0:\n-                break\n-        if return_code != 0:\n-            print('Cannot find any way to install Docker.', file=sys.stderr)\n-            sys.exit(1)\n-    else:\n-        programs += ['apt-cacher-ng', 'lxc', 'debootstrap']\n-    subprocess.check_call(['sudo', 'apt-get', 'install', '-qq'] + programs)\n-    if not os.path.isdir('gitian.sigs'):\n-        subprocess.check_call(['git', 'clone', 'https://github.com/bitcoin-core/gitian.sigs.git'])\n-    if not os.path.isdir('bitcoin-detached-sigs'):\n-        subprocess.check_call(['git', 'clone', 'https://github.com/bitcoin-core/bitcoin-detached-sigs.git'])\n-    if not os.path.isdir('gitian-builder'):\n-        subprocess.check_call(['git', 'clone', 'https://github.com/devrandom/gitian-builder.git'])\n-    if not os.path.isdir('bitcoin'):\n-        subprocess.check_call(['git', 'clone', 'https://github.com/bitcoin/bitcoin.git'])\n-    os.chdir('gitian-builder')\n-    make_image_prog = ['bin/make-base-vm', '--suite', 'bionic', '--arch', 'amd64']\n-    if args.docker:\n-        make_image_prog += ['--docker']\n-    elif not args.kvm:\n-        make_image_prog += ['--lxc']\n-    subprocess.check_call(make_image_prog)\n-    os.chdir(workdir)\n-    if args.is_bionic and not args.kvm and not args.docker:\n-        subprocess.check_call(['sudo', 'sed', '-i', 's/lxcbr0/br0/', '/etc/default/lxc-net'])\n-        print('Reboot is required')\n-        sys.exit(0)\n-\n-def build():\n-    global args, workdir\n-\n-    os.makedirs('bitcoin-binaries/' + args.version, exist_ok=True)\n-    print('\\nBuilding Dependencies\\n')\n-    os.chdir('gitian-builder')\n-    os.makedirs('inputs', exist_ok=True)\n-\n-    subprocess.check_call(['wget', '-O', 'inputs/osslsigncode-2.0.tar.gz', 'https://github.com/mtrojnar/osslsigncode/archive/2.0.tar.gz'])\n-    subprocess.check_call([\"echo '5a60e0a4b3e0b4d655317b2f12a810211c50242138322b16e7e01c6fbb89d92f inputs/osslsigncode-2.0.tar.gz' | sha256sum -c\"], shell=True)\n-    subprocess.check_call(['make', '-C', '../bitcoin/depends', 'download', 'SOURCES_PATH=' + os.getcwd() + '/cache/common'])\n-\n-    if args.linux:\n-        print('\\nCompiling ' + args.version + ' Linux')\n-        subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'bitcoin='+args.commit, '--url', 'bitcoin='+args.url, '../bitcoin/contrib/gitian-descriptors/gitian-linux.yml'])\n-        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-linux', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-linux.yml'])\n-        subprocess.check_call('mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/'+args.version, shell=True)\n-\n-    if args.windows:\n-        print('\\nCompiling ' + args.version + ' Windows')\n-        subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'bitcoin='+args.commit, '--url', 'bitcoin='+args.url, '../bitcoin/contrib/gitian-descriptors/gitian-win.yml'])\n-        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-win-unsigned', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-win.yml'])\n-        subprocess.check_call('mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/', shell=True)\n-        subprocess.check_call('mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/'+args.version, shell=True)\n-\n-    if args.macos:\n-        print('\\nCompiling ' + args.version + ' MacOS')\n-        subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'bitcoin='+args.commit, '--url', 'bitcoin='+args.url, '../bitcoin/contrib/gitian-descriptors/gitian-osx.yml'])\n-        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-osx-unsigned', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-osx.yml'])\n-        subprocess.check_call('mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/', shell=True)\n-        subprocess.check_call('mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/'+args.version, shell=True)\n-\n-    os.chdir(workdir)\n-\n-    if args.commit_files:\n-        print('\\nCommitting '+args.version+' Unsigned Sigs\\n')\n-        os.chdir('gitian.sigs')\n-        subprocess.check_call(['git', 'add', args.version+'-linux/'+args.signer])\n-        subprocess.check_call(['git', 'add', args.version+'-win-unsigned/'+args.signer])\n-        subprocess.check_call(['git', 'add', args.version+'-osx-unsigned/'+args.signer])\n-        subprocess.check_call(['git', 'commit', '-m', 'Add '+args.version+' unsigned sigs for '+args.signer])\n-        os.chdir(workdir)\n-\n-def sign():\n-    global args, workdir\n-    os.chdir('gitian-builder')\n-\n-    if args.windows:\n-        print('\\nSigning ' + args.version + ' Windows')\n-        subprocess.check_call('cp inputs/bitcoin-' + args.version + '-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz', shell=True)\n-        subprocess.check_call(['bin/gbuild', '--skip-image', '--upgrade', '--commit', 'signature='+args.commit, '../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml'])\n-        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-win-signed', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml'])\n-        subprocess.check_call('mv build/out/bitcoin-*win64-setup.exe ../bitcoin-binaries/'+args.version, shell=True)\n-\n-    if args.macos:\n-        print('\\nSigning ' + args.version + ' MacOS')\n-        subprocess.check_call('cp inputs/bitcoin-' + args.version + '-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz', shell=True)\n-        subprocess.check_call(['bin/gbuild', '--skip-image', '--upgrade', '--commit', 'signature='+args.commit, '../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml'])\n-        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-osx-signed', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml'])\n-        subprocess.check_call('mv build/out/bitcoin-osx-signed.dmg ../bitcoin-binaries/'+args.version+'/bitcoin-'+args.version+'-osx.dmg', shell=True)\n-\n-    os.chdir(workdir)\n-\n-    if args.commit_files:\n-        print('\\nCommitting '+args.version+' Signed Sigs\\n')\n-        os.chdir('gitian.sigs')\n-        subprocess.check_call(['git', 'add', args.version+'-win-signed/'+args.signer])\n-        subprocess.check_call(['git', 'add', args.version+'-osx-signed/'+args.signer])\n-        subprocess.check_call(['git', 'commit', '-a', '-m', 'Add '+args.version+' signed binary sigs for '+args.signer])\n-        os.chdir(workdir)\n-\n-def verify():\n-    global args, workdir\n-    rc = 0\n-    os.chdir('gitian-builder')\n-\n-    print('\\nVerifying v'+args.version+' Linux\\n')\n-    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-linux', '../bitcoin/contrib/gitian-descriptors/gitian-linux.yml']):\n-        print('Verifying v'+args.version+' Linux FAILED\\n')\n-        rc = 1\n-\n-    print('\\nVerifying v'+args.version+' Windows\\n')\n-    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-win-unsigned', '../bitcoin/contrib/gitian-descriptors/gitian-win.yml']):\n-        print('Verifying v'+args.version+' Windows FAILED\\n')\n-        rc = 1\n-\n-    print('\\nVerifying v'+args.version+' MacOS\\n')\n-    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-osx-unsigned', '../bitcoin/contrib/gitian-descriptors/gitian-osx.yml']):\n-        print('Verifying v'+args.version+' MacOS FAILED\\n')\n-        rc = 1\n-\n-    print('\\nVerifying v'+args.version+' Signed Windows\\n')\n-    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-win-signed', '../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml']):\n-        print('Verifying v'+args.version+' Signed Windows FAILED\\n')\n-        rc = 1\n-\n-    print('\\nVerifying v'+args.version+' Signed MacOS\\n')\n-    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-osx-signed', '../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml']):\n-        print('Verifying v'+args.version+' Signed MacOS FAILED\\n')\n-        rc = 1\n-\n-    os.chdir(workdir)\n-    return rc\n-\n-def main():\n-    global args, workdir\n-\n-    parser = argparse.ArgumentParser(description='Script for running full Gitian builds.')\n-    parser.add_argument('-c', '--commit', action='store_true', dest='commit', help='Indicate that the version argument is for a commit or branch')\n-    parser.add_argument('-p', '--pull', action='store_true', dest='pull', help='Indicate that the version argument is the number of a github repository pull request')\n-    parser.add_argument('-u', '--url', dest='url', default='https://github.com/bitcoin/bitcoin', help='Specify the URL of the repository. Default is %(default)s')\n-    parser.add_argument('-v', '--verify', action='store_true', dest='verify', help='Verify the Gitian build')\n-    parser.add_argument('-b', '--build', action='store_true', dest='build', help='Do a Gitian build')\n-    parser.add_argument('-s', '--sign', action='store_true', dest='sign', help='Make signed binaries for Windows and MacOS')\n-    parser.add_argument('-B', '--buildsign', action='store_true', dest='buildsign', help='Build both signed and unsigned binaries')\n-    parser.add_argument('-o', '--os', dest='os', default='lwm', help='Specify which Operating Systems the build is for. Default is %(default)s. l for Linux, w for Windows, m for MacOS')\n-    parser.add_argument('-j', '--jobs', dest='jobs', default='2', help='Number of processes to use. Default %(default)s')\n-    parser.add_argument('-m', '--memory', dest='memory', default='2000', help='Memory to allocate in MiB. Default %(default)s')\n-    parser.add_argument('-k', '--kvm', action='store_true', dest='kvm', help='Use KVM instead of LXC')\n-    parser.add_argument('-d', '--docker', action='store_true', dest='docker', help='Use Docker instead of LXC')\n-    parser.add_argument('-S', '--setup', action='store_true', dest='setup', help='Set up the Gitian building environment. Only works on Debian-based systems (Ubuntu, Debian)')\n-    parser.add_argument('-D', '--detach-sign', action='store_true', dest='detach_sign', help='Create the assert file for detached signing. Will not commit anything.')\n-    parser.add_argument('-n', '--no-commit', action='store_false', dest='commit_files', help='Do not commit anything to git')\n-    parser.add_argument('signer', nargs='?', help='GPG signer to sign each build assert file')\n-    parser.add_argument('version', nargs='?', help='Version number, commit, or branch to build. If building a commit or branch, the -c option must be specified')\n-\n-    args = parser.parse_args()\n-    workdir = os.getcwd()\n-\n-    args.is_bionic = b'bionic' in subprocess.check_output(['lsb_release', '-cs'])\n-\n-    if args.kvm and args.docker:\n-        raise Exception('Error: cannot have both kvm and docker')\n-\n-    # Ensure no more than one environment variable for gitian-builder (USE_LXC, USE_VBOX, USE_DOCKER) is set as they\n-    # can interfere (e.g., USE_LXC being set shadows USE_DOCKER; for details see gitian-builder/libexec/make-clean-vm).\n-    os.environ['USE_LXC'] = ''\n-    os.environ['USE_VBOX'] = ''\n-    os.environ['USE_DOCKER'] = ''\n-    if args.docker:\n-        os.environ['USE_DOCKER'] = '1'\n-    elif not args.kvm:\n-        os.environ['USE_LXC'] = '1'\n-        if 'GITIAN_HOST_IP' not in os.environ.keys():\n-            os.environ['GITIAN_HOST_IP'] = '10.0.3.1'\n-        if 'LXC_GUEST_IP' not in os.environ.keys():\n-            os.environ['LXC_GUEST_IP'] = '10.0.3.5'\n-\n-    if args.setup:\n-        setup()\n-\n-    if args.buildsign:\n-        args.build = True\n-        args.sign = True\n-\n-    if not args.build and not args.sign and not args.verify:\n-        sys.exit(0)\n-\n-    args.linux = 'l' in args.os\n-    args.windows = 'w' in args.os\n-    args.macos = 'm' in args.os\n-\n-    # Disable for MacOS if no SDK found\n-    if args.macos and not os.path.isfile('gitian-builder/inputs/Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz'):\n-        print('Cannot build for MacOS, SDK does not exist. Will build for other OSes')\n-        args.macos = False\n-\n-    args.sign_prog = 'true' if args.detach_sign else 'gpg --detach-sign'\n-\n-    script_name = os.path.basename(sys.argv[0])\n-    if not args.signer:\n-        print(script_name+': Missing signer')\n-        print('Try '+script_name+' --help for more information')\n-        sys.exit(1)\n-    if not args.version:\n-        print(script_name+': Missing version')\n-        print('Try '+script_name+' --help for more information')\n-        sys.exit(1)\n-\n-    # Add leading 'v' for tags\n-    if args.commit and args.pull:\n-        raise Exception('Cannot have both commit and pull')\n-    args.commit = ('' if args.commit else 'v') + args.version\n-\n-    os.chdir('bitcoin')\n-    if args.pull:\n-        subprocess.check_call(['git', 'fetch', args.url, 'refs/pull/'+args.version+'/merge'])\n-        os.chdir('../gitian-builder/inputs/bitcoin')\n-        subprocess.check_call(['git', 'fetch', args.url, 'refs/pull/'+args.version+'/merge'])\n-        args.commit = subprocess.check_output(['git', 'show', '-s', '--format=%H', 'FETCH_HEAD'], universal_newlines=True, encoding='utf8').strip()\n-        args.version = 'pull-' + args.version\n-    print(args.commit)\n-    subprocess.check_call(['git', 'fetch'])\n-    subprocess.check_call(['git', 'checkout', args.commit])\n-    os.chdir(workdir)\n-\n-    os.chdir('gitian-builder')\n-    subprocess.check_call(['git', 'pull'])\n-    os.chdir(workdir)\n-\n-    if args.build:\n-        build()\n-\n-    if args.sign:\n-        sign()\n-\n-    if args.verify:\n-        os.chdir('gitian.sigs')\n-        subprocess.check_call(['git', 'pull'])\n-        os.chdir(workdir)\n-        sys.exit(verify())\n-\n-if __name__ == '__main__':\n-    main()"
      },
      {
        "sha": "a2ca768aaa70b285d1e7b8654c1094533e6c1190",
        "filename": "contrib/gitian-descriptors/assign_DISTNAME",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/gitian-descriptors/assign_DISTNAME",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/gitian-descriptors/assign_DISTNAME",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/assign_DISTNAME?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,12 +0,0 @@\n-# Copyright (c) 2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# A helper script to be sourced into the gitian descriptors\n-\n-if RECENT_TAG=\"$(git describe --exact-match HEAD)\"; then\n-    VERSION=\"${RECENT_TAG#v}\"\n-else\n-    VERSION=\"$(git rev-parse --short=12 HEAD)\"\n-fi\n-DISTNAME=\"bitcoin-${VERSION}\""
      },
      {
        "sha": "65f9a2e5c91d3b61599e3d6fb492389cd672da3d",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 151,
        "changes": 151,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,151 +0,0 @@\n----\n-name: \"bitcoin-core-linux-0.21\"\n-enable_cache: true\n-distro: \"ubuntu\"\n-suites:\n-- \"bionic\"\n-architectures:\n-- \"amd64\"\n-packages:\n-# Common dependencies.\n-- \"autoconf\"\n-- \"automake\"\n-- \"binutils\"\n-- \"bsdmainutils\"\n-- \"ca-certificates\"\n-- \"curl\"\n-- \"faketime\"\n-- \"git\"\n-- \"libtool\"\n-- \"patch\"\n-- \"pkg-config\"\n-- \"python3\"\n-# Cross compilation HOSTS:\n-#  - arm-linux-gnueabihf\n-- \"binutils-arm-linux-gnueabihf\"\n-- \"g++-8-arm-linux-gnueabihf\"\n-#  - aarch64-linux-gnu\n-- \"binutils-aarch64-linux-gnu\"\n-- \"g++-8-aarch64-linux-gnu\"\n-#  - riscv64-linux-gnu\n-- \"binutils-riscv64-linux-gnu\"\n-- \"g++-8-riscv64-linux-gnu\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n-files: []\n-script: |\n-  set -e -o pipefail\n-\n-  WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu\"\n-  CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests\"\n-  FAKETIME_HOST_PROGS=\"gcc g++\"\n-  FAKETIME_PROGS=\"date ar ranlib nm\"\n-  HOST_CFLAGS=\"-O2 -g\"\n-  HOST_CXXFLAGS=\"-O2 -g\"\n-  HOST_LDFLAGS_BASE=\"-static-libstdc++ -Wl,-O2\"\n-\n-  export QT_RCC_TEST=1\n-  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n-  export TZ=\"UTC\"\n-  export BUILD_DIR=\"$PWD\"\n-  mkdir -p ${WRAP_DIR}\n-  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n-    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n-    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n-    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n-  fi\n-\n-  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n-  function create_global_faketime_wrappers {\n-  for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n-    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n-    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n-    chmod +x ${WRAP_DIR}/${prog}\n-  done\n-  }\n-\n-  function create_per-host_faketime_wrappers {\n-  for i in $HOSTS; do\n-    for prog in ${FAKETIME_HOST_PROGS}; do\n-        if which ${i}-${prog}-8\n-        then\n-            echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n-            echo \"REAL=\\`which -a ${i}-${prog}-8 | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-            echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n-            echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-            echo \"\\$REAL \\\"\\$@\\\"\" >> $WRAP_DIR/${i}-${prog}\n-            chmod +x ${WRAP_DIR}/${i}-${prog}\n-        fi\n-    done\n-  done\n-  }\n-\n-  # Faketime for depends so intermediate results are comparable\n-  export PATH_orig=${PATH}\n-  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n-  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  cd bitcoin\n-  BASEPREFIX=\"${PWD}/depends\"\n-  # Build dependencies for each host\n-  for i in $HOSTS; do\n-    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n-  done\n-\n-  # Faketime for binaries\n-  export PATH=${PATH_orig}\n-  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  # Define DISTNAME variable.\n-  # shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n-  source contrib/gitian-descriptors/assign_DISTNAME\n-\n-  GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n-\n-  # Create the source tarball\n-  mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n-  git archive --output=\"$GIT_ARCHIVE\" HEAD\n-\n-  ORIGPATH=\"$PATH\"\n-  # Extract the git archive into a dir for each host and build\n-  for i in ${HOSTS}; do\n-    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n-    if [ \"${i}\" = \"riscv64-linux-gnu\" ]; then\n-      # Workaround for https://bugs.launchpad.net/ubuntu/+source/gcc-8-cross-ports/+bug/1853740\n-      # TODO: remove this when no longer needed\n-      HOST_LDFLAGS=\"${HOST_LDFLAGS_BASE} -Wl,-z,noexecstack\"\n-    else\n-      HOST_LDFLAGS=\"${HOST_LDFLAGS_BASE}\"\n-    fi\n-    mkdir -p distsrc-${i}\n-    cd distsrc-${i}\n-    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n-    mkdir -p ${INSTALLPATH}\n-    tar -xf $GIT_ARCHIVE\n-\n-    ./autogen.sh\n-    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\" LDFLAGS=\"${HOST_LDFLAGS}\"\n-    make ${MAKEOPTS}\n-    make ${MAKEOPTS} -C src check-security\n-    make ${MAKEOPTS} -C src check-symbols\n-    make install DESTDIR=${INSTALLPATH}\n-    cd installed\n-    find . -name \"lib*.la\" -delete\n-    find . -name \"lib*.a\" -delete\n-    rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME}/bin -type f -executable -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n-    find ${DISTNAME}/lib -type f -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n-    cp ../README.md ${DISTNAME}/\n-    find ${DISTNAME} -not -name \"*.dbg\" | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n-    find ${DISTNAME} -name \"*.dbg\" | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}-debug.tar.gz\n-    cd ../../\n-    rm -rf distsrc-${i}\n-  done"
      },
      {
        "sha": "a4f3219c2291e8164c92d5ba1eedb7a346b1bdb4",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 40,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,40 +0,0 @@\n----\n-name: \"bitcoin-dmg-signer\"\n-distro: \"ubuntu\"\n-suites:\n-- \"bionic\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"faketime\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n-  \"dir\": \"signature\"\n-files:\n-- \"bitcoin-osx-unsigned.tar.gz\"\n-script: |\n-  set -e -o pipefail\n-\n-  WRAP_DIR=$HOME/wrapped\n-  mkdir -p ${WRAP_DIR}\n-  export PATH=\"$PWD\":$PATH\n-  FAKETIME_PROGS=\"dmg genisoimage\"\n-\n-  # Create global faketime wrappers\n-  for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n-    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n-    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n-    chmod +x ${WRAP_DIR}/${prog}\n-  done\n-\n-  UNSIGNED=bitcoin-osx-unsigned.tar.gz\n-  SIGNED=bitcoin-osx-signed.dmg\n-\n-  tar -xf ${UNSIGNED}\n-  OSX_VOLNAME=\"$(cat osx_volname)\"\n-  ./detached-sig-apply.sh ${UNSIGNED} signature/osx\n-  ${WRAP_DIR}/genisoimage -no-cache-inodes -D -l -probe -V \"${OSX_VOLNAME}\" -no-pad -r -dir-mode 0755 -apple -o uncompressed.dmg signed-app\n-  ${WRAP_DIR}/dmg dmg uncompressed.dmg ${OUTDIR}/${SIGNED}"
      },
      {
        "sha": "e0aaafc15ad4005d47becfe03a506ed436867b95",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 159,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,159 +0,0 @@\n----\n-name: \"bitcoin-core-osx-0.21\"\n-enable_cache: true\n-distro: \"ubuntu\"\n-suites:\n-- \"bionic\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"ca-certificates\"\n-- \"curl\"\n-- \"g++\"\n-- \"git\"\n-- \"pkg-config\"\n-- \"autoconf\"\n-- \"librsvg2-bin\"\n-- \"libtiff-tools\"\n-- \"libtool\"\n-- \"automake\"\n-- \"faketime\"\n-- \"bsdmainutils\"\n-- \"cmake\"\n-- \"imagemagick\"\n-- \"libcap-dev\"\n-- \"libz-dev\"\n-- \"libbz2-dev\"\n-- \"python3\"\n-- \"python3-dev\"\n-- \"python3-setuptools\"\n-- \"fonts-tuffy\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n-files:\n-- \"Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz\"\n-script: |\n-  set -e -o pipefail\n-\n-  WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"x86_64-apple-darwin16\"\n-  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests GENISOIMAGE=$WRAP_DIR/genisoimage\"\n-  FAKETIME_HOST_PROGS=\"\"\n-  FAKETIME_PROGS=\"ar ranlib date dmg genisoimage\"\n-\n-  export QT_RCC_TEST=1\n-  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n-  export TZ=\"UTC\"\n-  export BUILD_DIR=\"$PWD\"\n-  mkdir -p ${WRAP_DIR}\n-  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n-    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n-    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n-    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n-  fi\n-\n-  export ZERO_AR_DATE=1\n-\n-  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n-  function create_global_faketime_wrappers {\n-  for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n-    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n-    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n-    chmod +x ${WRAP_DIR}/${prog}\n-  done\n-  }\n-\n-  function create_per-host_faketime_wrappers {\n-  for i in $HOSTS; do\n-    for prog in ${FAKETIME_HOST_PROGS}; do\n-        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n-        chmod +x ${WRAP_DIR}/${i}-${prog}\n-    done\n-  done\n-  }\n-\n-  # Faketime for depends so intermediate results are comparable\n-  export PATH_orig=${PATH}\n-  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n-  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  cd bitcoin\n-  BASEPREFIX=\"${PWD}/depends\"\n-\n-  mkdir -p ${BASEPREFIX}/SDKs\n-  tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz\n-\n-  # Build dependencies for each host\n-  for i in $HOSTS; do\n-    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n-  done\n-\n-  # Faketime for binaries\n-  export PATH=${PATH_orig}\n-  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  # Define DISTNAME variable.\n-  # shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n-  source contrib/gitian-descriptors/assign_DISTNAME\n-\n-  GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n-\n-  # Create the source tarball\n-  mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n-  git archive --output=\"$GIT_ARCHIVE\" HEAD\n-\n-  ORIGPATH=\"$PATH\"\n-  # Extract the git archive into a dir for each host and build\n-  for i in ${HOSTS}; do\n-    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n-    mkdir -p distsrc-${i}\n-    cd distsrc-${i}\n-    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n-    mkdir -p ${INSTALLPATH}\n-    tar -xf $GIT_ARCHIVE\n-\n-    ./autogen.sh\n-    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n-    make ${MAKEOPTS}\n-    make ${MAKEOPTS} -C src check-security\n-    make ${MAKEOPTS} -C src check-symbols\n-    make install-strip DESTDIR=${INSTALLPATH}\n-\n-    make osx_volname\n-    make deploydir\n-    OSX_VOLNAME=\"$(cat osx_volname)\"\n-    mkdir -p unsigned-app-${i}\n-    cp osx_volname unsigned-app-${i}/\n-    cp contrib/macdeploy/detached-sig-apply.sh unsigned-app-${i}\n-    cp contrib/macdeploy/detached-sig-create.sh unsigned-app-${i}\n-    cp ${BASEPREFIX}/${i}/native/bin/dmg ${BASEPREFIX}/${i}/native/bin/genisoimage unsigned-app-${i}\n-    cp ${BASEPREFIX}/${i}/native/bin/${i}-codesign_allocate unsigned-app-${i}/codesign_allocate\n-    cp ${BASEPREFIX}/${i}/native/bin/${i}-pagestuff unsigned-app-${i}/pagestuff\n-    mv dist unsigned-app-${i}\n-    pushd unsigned-app-${i}\n-    find . | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-osx-unsigned.tar.gz\n-    popd\n-\n-    make deploy\n-    ${WRAP_DIR}/dmg dmg \"${OSX_VOLNAME}.dmg\" ${OUTDIR}/${DISTNAME}-osx-unsigned.dmg\n-\n-    cd installed\n-    find . -name \"lib*.la\" -delete\n-    find . -name \"lib*.a\" -delete\n-    rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME} | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n-    cd ../../\n-  done\n-\n-  mv ${OUTDIR}/${DISTNAME}-x86_64-*.tar.gz ${OUTDIR}/${DISTNAME}-osx64.tar.gz"
      },
      {
        "sha": "6bcd126662f3a1e04aa38735f1bcd758d7001fbb",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 42,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,42 +0,0 @@\n----\n-name: \"bitcoin-win-signer\"\n-distro: \"ubuntu\"\n-suites:\n-- \"bionic\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"libssl-dev\"\n-- \"autoconf\"\n-- \"automake\"\n-- \"libtool\"\n-- \"pkg-config\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n-  \"dir\": \"signature\"\n-files:\n-- \"osslsigncode-2.0.tar.gz\"\n-- \"bitcoin-win-unsigned.tar.gz\"\n-script: |\n-  set -e -o pipefail\n-\n-  BUILD_DIR=\"$PWD\"\n-  SIGDIR=${BUILD_DIR}/signature/win\n-  UNSIGNED_DIR=${BUILD_DIR}/unsigned\n-\n-  echo \"5a60e0a4b3e0b4d655317b2f12a810211c50242138322b16e7e01c6fbb89d92f  osslsigncode-2.0.tar.gz\" | sha256sum -c\n-\n-  mkdir -p ${UNSIGNED_DIR}\n-  tar -C ${UNSIGNED_DIR} -xf bitcoin-win-unsigned.tar.gz\n-\n-  tar xf osslsigncode-2.0.tar.gz\n-  cd osslsigncode-2.0\n-\n-  ./autogen.sh\n-  ./configure --without-gsf --without-curl --disable-dependency-tracking\n-  make\n-  find ${UNSIGNED_DIR} -name \"*-unsigned.exe\" | while read i; do\n-    INFILE=\"$(basename \"${i}\")\"\n-    OUTFILE=\"${INFILE/-unsigned}\"\n-    ./osslsigncode attach-signature -in \"${i}\" -out \"${OUTDIR}/${OUTFILE}\" -sigin \"${SIGDIR}/${INFILE}.pem\"\n-  done"
      },
      {
        "sha": "5f671b95ce3df0f77418dba9c556dbd897333025",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 156,
        "changes": 156,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,156 +0,0 @@\n----\n-name: \"bitcoin-core-win-0.21\"\n-enable_cache: true\n-distro: \"ubuntu\"\n-suites:\n-- \"bionic\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"curl\"\n-- \"g++\"\n-- \"git\"\n-- \"pkg-config\"\n-- \"autoconf\"\n-- \"libtool\"\n-- \"automake\"\n-- \"faketime\"\n-- \"bsdmainutils\"\n-- \"mingw-w64\"\n-- \"g++-mingw-w64\"\n-- \"nsis\"\n-- \"zip\"\n-- \"ca-certificates\"\n-- \"python3\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n-files: []\n-script: |\n-  set -e -o pipefail\n-\n-  WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"x86_64-w64-mingw32\"\n-  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n-  FAKETIME_HOST_PROGS=\"ar ranlib nm windres strip objcopy\"\n-  FAKETIME_PROGS=\"date makensis zip\"\n-  HOST_CFLAGS=\"-O2 -g -fno-ident\"\n-  HOST_CXXFLAGS=\"-O2 -g -fno-ident\"\n-\n-  export QT_RCC_TEST=1\n-  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n-  export TZ=\"UTC\"\n-  export BUILD_DIR=\"$PWD\"\n-  mkdir -p ${WRAP_DIR}\n-  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n-    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n-    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n-    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n-  fi\n-\n-  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n-  function create_global_faketime_wrappers {\n-  for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n-    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n-    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n-    chmod +x ${WRAP_DIR}/${prog}\n-  done\n-  }\n-\n-  function create_per-host_faketime_wrappers {\n-  for i in $HOSTS; do\n-    for prog in ${FAKETIME_HOST_PROGS}; do\n-        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n-        chmod +x ${WRAP_DIR}/${i}-${prog}\n-    done\n-  done\n-  }\n-\n-  function create_per-host_compiler_wrapper {\n-  # -posix variant is required for c++11 threading.\n-  for i in $HOSTS; do\n-    for prog in gcc g++; do\n-        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog}-posix | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\\"\\$@\\\"\" >> $WRAP_DIR/${i}-${prog}\n-        chmod +x ${WRAP_DIR}/${i}-${prog}\n-    done\n-  done\n-  }\n-\n-  # Faketime for depends so intermediate results are comparable\n-  export PATH_orig=${PATH}\n-  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n-  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n-  create_per-host_compiler_wrapper \"2000-01-01 12:00:00\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  cd bitcoin\n-  BASEPREFIX=\"${PWD}/depends\"\n-  # Build dependencies for each host\n-  for i in $HOSTS; do\n-    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n-  done\n-\n-  # Faketime for binaries\n-  export PATH=${PATH_orig}\n-  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  create_per-host_compiler_wrapper \"${REFERENCE_DATETIME}\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  # Define DISTNAME variable.\n-  # shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n-  source contrib/gitian-descriptors/assign_DISTNAME\n-\n-  GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n-\n-  # Create the source tarball\n-  mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n-  git archive --output=\"$GIT_ARCHIVE\" HEAD\n-\n-  ORIGPATH=\"$PATH\"\n-  # Extract the git archive into a dir for each host and build\n-  for i in ${HOSTS}; do\n-    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n-    mkdir -p distsrc-${i}\n-    cd distsrc-${i}\n-    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n-    mkdir -p ${INSTALLPATH}\n-    tar -xf $GIT_ARCHIVE\n-\n-    ./autogen.sh\n-    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\"\n-    make ${MAKEOPTS}\n-    make ${MAKEOPTS} -C src check-security\n-    make ${MAKEOPTS} -C src check-symbols\n-    make deploy BITCOIN_WIN_INSTALLER=\"${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe\"\n-    make install DESTDIR=${INSTALLPATH}\n-    cd installed\n-    mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/\n-    find . -name \"lib*.la\" -delete\n-    find . -name \"lib*.a\" -delete\n-    rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME}/bin -type f -executable -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n-    find ${DISTNAME}/lib -type f -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n-    cp ../doc/README_windows.txt ${DISTNAME}/readme.txt\n-    find ${DISTNAME} -not -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i//x86_64-w64-mingw32/win64}.zip\n-    find ${DISTNAME} -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i//x86_64-w64-mingw32/win64}-debug.zip\n-    cd ../../\n-    rm -rf distsrc-${i}\n-  done\n-\n-  cp -rf contrib/windeploy $BUILD_DIR\n-  cd $BUILD_DIR/windeploy\n-  mkdir unsigned\n-  cp ${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe unsigned/\n-  find . | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz"
      },
      {
        "sha": "ffe4fb144b1ae07c7c9bbdcdaea2694978eb18b2",
        "filename": "contrib/gitian-keys/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/gitian-keys/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/gitian-keys/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/README.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,27 +0,0 @@\n-## PGP keys of Gitian builders and Developers\n-\n-The file `keys.txt` contains fingerprints of the public keys of Gitian builders\n-and active developers.\n-\n-The associated keys are mainly used to sign git commits or the build results\n-of Gitian builds.\n-\n-The most recent version of each pgp key can be found on most pgp key servers.\n-\n-Fetch the latest version from the key server to see if any key was revoked in\n-the meantime.\n-To fetch the latest version of all pgp keys in your gpg homedir,\n-\n-```sh\n-gpg --refresh-keys\n-```\n-\n-To fetch keys of Gitian builders and active developers, feed the list of\n-fingerprints of the primary keys into gpg:\n-\n-```sh\n-while read fingerprint keyholder_name; do gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys ${fingerprint}; done < ./keys.txt\n-```\n-\n-Add your key to the list if you provided Gitian signatures for two major or\n-minor releases of Bitcoin Core."
      },
      {
        "sha": "0a2c1302c82f8e13cfe48ec36ff5bd0c9e07f3e6",
        "filename": "contrib/gitian-keys/keys.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 36,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/gitian-keys/keys.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/gitian-keys/keys.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/keys.txt?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,36 +0,0 @@\n-9D3CC86A72F8494342EA5FD10A41BDC3F4FAFF1C Aaron Clauson (sipsorcery)\n-617C90010B3BD370B0AC7D424BB42E31C79111B8 Akira Takizawa\n-E944AE667CF960B1004BC32FCA662BE18B877A60 Andreas Schildbach\n-152812300785C96444D3334D17565732E08E5E41 Andrew Chow\n-912FD3228387123DC97E0E57D5566241A0295FA9 BtcDrak\n-C519EBCF3B926298946783EFF6430754120EC2F4 Christian Decker (cdecker)\n-F20F56EF6A067F70E8A5C99FFF95FAA971697405 centaur\n-C060A6635913D98A3587D7DB1C2491FFEB0EF770 Cory Fields\n-BF6273FAEF7CC0BA1F562E50989F6B3048A116B5 Dev Random\n-6D3170C1DC2C6FD0AEEBCA6743811D1A26623924 Douglas Roark\n-9A1689B60D1B3CCE9262307A2F40A9BF167FBA47 Erik Mossberg (erkmos)\n-D35176BE9264832E4ACA8986BF0792FBE95DC863 fivepiece\n-01CDF4627A3B88AAE4A571C87588242FBE38D3A8 Gavin Andresen\n-D1DBF2C4B96F2DEBF4C16654410108112E7EA81F Hennadii Stepanov (hebasto)\n-D3CC177286005BB8FF673294C5242A1AB3936517 jl2012\n-82921A4B88FD454B7EB8CE3C796C4109063D4EAF Jon Atack\n-32EE5C4C3FA15CCADB46ABE529D4BCB6416F53EC Jonas Schnelli\n-4B4E840451149DD7FB0D633477DFAB5C3108B9A8 Jorge Timon\n-C42AFF7C61B3E44A1454CD3557AF762DB3353322 Karl-Johan Alm (kallewoof)\n-E463A93F5F3117EEDE6C7316BD02942421F4889F Luke Dashjr\n-B8B3F1C0E58C15DB6A81D30C3648A882F4316B9B Marco Falke\n-07DF3E57A548CCFB7530709189BBB8663E2E65CE Matt Corallo (BlueMatt)\n-CA03882CB1FC067B5D3ACFE4D300116E1C875A3D MeshCollider\n-E777299FC265DD04793070EB944D35F9AC3DB76A Michael Ford\n-9692B91BBF0E8D34DFD33B1882C5C009628ECF0C Michagogo\n-77E72E69DA7EE0A148C06B21B34821D4944DE5F7 Nils Schneider\n-D62A803E27E7F43486035ADBBCD04D8E9CCCAC2A Paul Rabahy\n-37EC7D7B0A217CDB4B4E007E7FAB114267E4FA04 Peter Todd\n-D762373D24904A3E42F33B08B9A408E71DAAC974 Pieter Wuille (Location: Leuven, Belgium)\n-133EAC179436F14A5CF1B794860FEB804E669320 Pieter Wuille\n-A8FC55F3B04BA3146F3492E79303B33A305224CB Sebastian Kung (TheCharlatan)\n-ED9BDF7AD6A55E232E84524257FF9BDBCC301009 Sjors Provoost\n-9EDAFF80E080659604F4A76B2EBB056FD847F8A7 Stephan Oeste (Emzy)\n-AEC1884398647C47413C1C3FB1179EB7347DC10D Warren Togami\n-79D00BAC68B56D422F945A8F8E3A8F3247DBCBBF Willy Ko\n-71A3B16735405025D447E8F274810B012346C9A6 Wladimir J. van der Laan"
      },
      {
        "sha": "dffcf99607ae2bb997296ad1e16e124d5da70f4b",
        "filename": "contrib/guix/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 230,
        "changes": 230,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/guix/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/guix/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/README.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,230 +0,0 @@\n-# Bootstrappable Bitcoin Core Builds\n-\n-This directory contains the files necessary to perform bootstrappable Bitcoin\n-Core builds.\n-\n-[Bootstrappability][b17e] furthers our binary security guarantees by allowing us\n-to _audit and reproduce_ our toolchain instead of blindly _trusting_ binary\n-downloads.\n-\n-We achieve bootstrappability by using Guix as a functional package manager.\n-\n-## Requirements\n-\n-Conservatively, a x86_64 machine with:\n-\n-- 4GB of free disk space on the partition that /gnu/store will reside in\n-- 24GB of free disk space on the partition that the Bitcoin Core git repository\n-  resides in\n-\n-> Note: these requirements are slightly less onerous than those of Gitian builds\n-\n-## Setup\n-\n-### Installing Guix\n-\n-If you're just testing this out, you can use the\n-[Dockerfile][fanquake/guix-docker] for convenience. It automatically speeds up\n-your builds by [using substitutes](#speeding-up-builds-with-substitute-servers).\n-If you don't want this behaviour, refer to the [next\n-section](#choosing-your-security-model).\n-\n-Otherwise, follow the [Guix installation guide][guix/bin-install].\n-\n-> Note: For those who like to keep their filesystems clean, Guix is designed to\n-> be very standalone and _will not_ conflict with your system's package\n-> manager/existing setup. It _only_ touches `/var/guix`, `/gnu`, and\n-> `~/.config/guix`.\n-\n-### Choosing your security model\n-\n-Guix allows us to achieve better binary security by using our CPU time to build\n-everything from scratch. However, it doesn't sacrifice user choice in pursuit of\n-this: users can decide whether or not to bootstrap and to use substitutes.\n-\n-After installation, you may want to consider [adding substitute\n-servers](#speeding-up-builds-with-substitute-servers) to speed up your build if\n-that fits your security model (say, if you're just testing that this works).\n-This is skippable if you're using the [Dockerfile][fanquake/guix-docker].\n-\n-If you prefer not to use any substitutes, make sure to set\n-`ADDITIONAL_GUIX_ENVIRONMENT_FLAGS` like the following snippet. The first build\n-will take a while, but the resulting packages will be cached for future builds.\n-\n-```sh\n-export ADDITIONAL_GUIX_ENVIRONMENT_FLAGS='--no-substitutes'\n-```\n-\n-Likewise, to perform a bootstrapped build (takes even longer):\n-\n-```sh\n-export ADDITIONAL_GUIX_ENVIRONMENT_FLAGS='--bootstrap --no-substitutes'\n-```\n-\n-### Using a version of Guix with `guix time-machine` capabilities\n-\n-> Note: This entire section can be skipped if you are already using a version of\n-> Guix that has [the `guix time-machine` command][guix/time-machine].\n-\n-Once Guix is installed, if it doesn't have the `guix time-machine` command, pull\n-the latest `guix`.\n-\n-```sh\n-guix pull --max-jobs=4 # change number of jobs accordingly\n-```\n-\n-Make sure that you are using your current profile. (You are prompted to do this\n-at the end of the `guix pull`)\n-\n-```bash\n-export PATH=\"${HOME}/.config/guix/current/bin${PATH:+:}$PATH\"\n-```\n-\n-## Usage\n-\n-### As a Development Environment\n-\n-For a Bitcoin Core depends development environment, simply invoke\n-\n-```sh\n-guix environment --manifest=contrib/guix/manifest.scm\n-```\n-\n-And you'll land back in your shell with all the build dependencies required for\n-a `depends` build injected into your environment.\n-\n-### As a Tool for Deterministic Builds\n-\n-From the top of a clean Bitcoin Core repository:\n-\n-```sh\n-./contrib/guix/guix-build.sh\n-```\n-\n-After the build finishes successfully (check the status code please), compare\n-hashes:\n-\n-```sh\n-find output/ -type f -print0 | sort -z | xargs -r0 sha256sum\n-```\n-\n-#### Recognized environment variables\n-\n-* _**HOSTS**_\n-\n-  Override the space-separated list of platform triples for which to perform a\n-  bootstrappable build. _(defaults to \"x86\\_64-linux-gnu\n-  arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu\")_\n-\n-  > Windows and OS X platform triplet support are WIP.\n-\n-* _**SOURCES_PATH**_\n-\n-  Set the depends tree download cache for sources. This is passed through to the\n-  depends tree. Setting this to the same directory across multiple builds of the\n-  depends tree can eliminate unnecessary redownloading of package sources.\n-\n-* _**MAX_JOBS**_\n-\n-  Override the maximum number of jobs to run simultaneously, you might want to\n-  do so on a memory-limited machine. This may be passed to `make` as in `make\n-  --jobs=\"$MAX_JOBS\"` or `xargs` as in `xargs -P\"$MAX_JOBS\"`. _(defaults to the\n-  value of `nproc` outside the container)_\n-\n-* _**SOURCE_DATE_EPOCH**_\n-\n-  Override the reference UNIX timestamp used for bit-for-bit reproducibility,\n-  the variable name conforms to [standard][r12e/source-date-epoch]. _(defaults\n-  to the output of `$(git log --format=%at -1)`)_\n-\n-* _**V**_\n-\n-  If non-empty, will pass `V=1` to all `make` invocations, making `make` output\n-  verbose.\n-\n-  Note that any given value is ignored. The variable is only checked for\n-  emptiness. More concretely, this means that `V=` (setting `V` to the empty\n-  string) is interpreted the same way as not setting `V` at all, and that `V=0`\n-  has the same effect as `V=1`.\n-\n-* _**ADDITIONAL_GUIX_ENVIRONMENT_FLAGS**_\n-\n-  Additional flags to be passed to `guix environment`. For a fully-bootstrapped\n-  build, set this to `--bootstrap --no-substitutes` (refer to the [security\n-  model section](#choosing-your-security-model) for more details). Note that a\n-  fully-bootstrapped build will take quite a long time on the first run.\n-\n-## Tips and Tricks\n-\n-### Speeding up builds with substitute servers\n-\n-_This whole section is automatically done in the convenience\n-[Dockerfiles][fanquake/guix-docker]_\n-\n-For those who are used to life in the fast _(and trustful)_ lane, you can use\n-[substitute servers][guix/substitutes] to enable binary downloads of packages.\n-\n-> For those who only want to use substitutes from the official Guix build farm\n-> and have authorized the build farm's signing key during Guix's installation,\n-> you don't need to do anything.\n-\n-#### Authorize the signing keys\n-\n-For the official Guix build farm at https://ci.guix.gnu.org, run as root:\n-\n-```\n-guix archive --authorize < ~root/.config/guix/current/share/guix/ci.guix.gnu.org.pub\n-```\n-\n-For dongcarl's substitute server at https://guix.carldong.io, run as root:\n-\n-```sh\n-wget -qO- 'https://guix.carldong.io/signing-key.pub' | guix archive --authorize\n-```\n-\n-#### Use the substitute servers\n-\n-The official Guix build farm at https://ci.guix.gnu.org is automatically used\n-unless the `--no-substitutes` flag is supplied.\n-\n-This can be overridden for all `guix` invocations by passing the\n-`--substitute-urls` option to your invocation of `guix-daemon`. This can also be\n-overridden on a call-by-call basis by passing the same `--substitute-urls`\n-option to client tools such at `guix environment`.\n-\n-To use dongcarl's substitute server for Bitcoin Core builds after having\n-[authorized his signing key](#authorize-the-signing-keys):\n-\n-```\n-export ADDITIONAL_GUIX_ENVIRONMENT_FLAGS='--substitute-urls=\"https://guix.carldong.io https://ci.guix.gnu.org\"'\n-```\n-\n-## FAQ\n-\n-### How can I trust the binary installation?\n-\n-As mentioned at the bottom of [this manual page][guix/bin-install]:\n-\n-> The binary installation tarballs can be (re)produced and verified simply by\n-> running the following command in the Guix source tree:\n->\n->     make guix-binary.x86_64-linux.tar.xz\n-\n-### When will Guix be packaged in debian?\n-\n-Vagrant Cascadian has been making good progress on this\n-[here][debian/guix-package]. We have all the pieces needed to put up an APT\n-repository and will likely put one up soon.\n-\n-[b17e]: http://bootstrappable.org/\n-[r12e/source-date-epoch]: https://reproducible-builds.org/docs/source-date-epoch/\n-\n-[guix/install.sh]: https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n-[guix/bin-install]: https://www.gnu.org/software/guix/manual/en/html_node/Binary-Installation.html\n-[guix/env-setup]: https://www.gnu.org/software/guix/manual/en/html_node/Build-Environment-Setup.html\n-[guix/substitutes]: https://www.gnu.org/software/guix/manual/en/html_node/Substitutes.html\n-[guix/substitute-server-auth]: https://www.gnu.org/software/guix/manual/en/html_node/Substitute-Server-Authorization.html\n-[guix/time-machine]: https://guix.gnu.org/manual/en/html_node/Invoking-guix-time_002dmachine.html\n-\n-[debian/guix-package]: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=850644\n-[fanquake/guix-docker]: https://github.com/fanquake/core-review/tree/master/guix"
      },
      {
        "sha": "11d2c8b86727eb2a757bc94e532a0d4cc83c45c6",
        "filename": "contrib/guix/guix-build.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 119,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/guix/guix-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/guix/guix-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/guix-build.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,119 +0,0 @@\n-#!/usr/bin/env bash\n-export LC_ALL=C\n-set -e -o pipefail\n-\n-# Determine the maximum number of jobs to run simultaneously (overridable by\n-# environment)\n-MAX_JOBS=\"${MAX_JOBS:-$(nproc)}\"\n-\n-# Download the depends sources now as we won't have internet access in the build\n-# container\n-make -C \"${PWD}/depends\" -j\"$MAX_JOBS\" download ${V:+V=1} ${SOURCES_PATH:+SOURCES_PATH=\"$SOURCES_PATH\"}\n-\n-# Determine the reference time used for determinism (overridable by environment)\n-SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:-$(git log --format=%at -1)}\"\n-\n-# Execute \"$@\" in a pinned, possibly older version of Guix, for reproducibility\n-# across time.\n-time-machine() {\n-    guix time-machine --url=https://github.com/dongcarl/guix.git \\\n-                      --commit=b066c25026f21fb57677aa34692a5034338e7ee3 \\\n-                      -- \"$@\"\n-}\n-\n-# Function to be called when building for host ${1} and the user interrupts the\n-# build\n-int_trap() {\n-cat << EOF\n-** INT received while building ${1}, you may want to clean up the relevant\n-   output, deploy, and distsrc-* directories before rebuilding\n-\n-Hint: To blow everything away, you may want to use:\n-\n-  $ git clean -xdff --exclude='/depends/SDKs/*'\n-\n-Specifically, this will remove all files without an entry in the index,\n-excluding the SDK directory. Practically speaking, this means that all ignored\n-and untracked files and directories will be wiped, allowing you to start anew.\n-EOF\n-}\n-\n-# Deterministically build Bitcoin Core for HOSTs (overridable by environment)\n-# shellcheck disable=SC2153\n-for host in ${HOSTS=x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu x86_64-w64-mingw32}; do\n-\n-    # Display proper warning when the user interrupts the build\n-    trap 'int_trap ${host}' INT\n-\n-    (\n-        # Required for 'contrib/guix/manifest.scm' to output the right manifest\n-        # for the particular $HOST we're building for\n-        export HOST=\"$host\"\n-\n-        # Run the build script 'contrib/guix/libexec/build.sh' in the build\n-        # container specified by 'contrib/guix/manifest.scm'.\n-        #\n-        # Explanation of `guix environment` flags:\n-        #\n-        #   --container        run command within an isolated container\n-        #\n-        #     Running in an isolated container minimizes build-time differences\n-        #     between machines and improves reproducibility\n-        #\n-        #   --pure             unset existing environment variables\n-        #\n-        #     Same rationale as --container\n-        #\n-        #   --no-cwd           do not share current working directory with an\n-        #                      isolated container\n-        #\n-        #     When --container is specified, the default behavior is to share\n-        #     the current working directory with the isolated container at the\n-        #     same exact path (e.g. mapping '/home/satoshi/bitcoin/' to\n-        #     '/home/satoshi/bitcoin/'). This means that the $PWD inside the\n-        #     container becomes a source of irreproducibility. --no-cwd disables\n-        #     this behaviour.\n-        #\n-        #   --share=SPEC       for containers, share writable host file system\n-        #                      according to SPEC\n-        #\n-        #   --share=\"$PWD\"=/bitcoin\n-        #\n-        #                     maps our current working directory to /bitcoin\n-        #                     inside the isolated container, which we later cd\n-        #                     into.\n-        #\n-        #     While we don't want to map our current working directory to the\n-        #     same exact path (as this introduces irreproducibility), we do want\n-        #     it to be at a _fixed_ path _somewhere_ inside the isolated\n-        #     container so that we have something to build. '/bitcoin' was\n-        #     chosen arbitrarily.\n-        #\n-        #   ${SOURCES_PATH:+--share=\"$SOURCES_PATH\"}\n-        #\n-        #                     make the downloaded depends sources path available\n-        #                     inside the isolated container\n-        #\n-        #     The isolated container has no network access as it's in a\n-        #     different network namespace from the main machine, so we have to\n-        #     make the downloaded depends sources available to it. The sources\n-        #     should have been downloaded prior to this invocation.\n-        #\n-        # shellcheck disable=SC2086\n-        time-machine environment --manifest=\"${PWD}/contrib/guix/manifest.scm\" \\\n-                                 --container \\\n-                                 --pure \\\n-                                 --no-cwd \\\n-                                 --share=\"$PWD\"=/bitcoin \\\n-                                 --expose=\"$(git rev-parse --git-common-dir)\" \\\n-                                 ${SOURCES_PATH:+--share=\"$SOURCES_PATH\"} \\\n-                                 ${ADDITIONAL_GUIX_ENVIRONMENT_FLAGS} \\\n-                                 -- env HOST=\"$host\" \\\n-                                        MAX_JOBS=\"$MAX_JOBS\" \\\n-                                        SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:?unable to determine value}\" \\\n-                                        ${V:+V=1} \\\n-                                        ${SOURCES_PATH:+SOURCES_PATH=\"$SOURCES_PATH\"} \\\n-                                      bash -c \"cd /bitcoin && bash contrib/guix/libexec/build.sh\"\n-    )\n-\n-done"
      },
      {
        "sha": "5be3baeefab425c62417106499b672eb0d5696f7",
        "filename": "contrib/guix/libexec/build.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 321,
        "changes": 321,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/guix/libexec/build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/guix/libexec/build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/libexec/build.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,321 +0,0 @@\n-#!/usr/bin/env bash\n-export LC_ALL=C\n-set -e -o pipefail\n-export TZ=UTC\n-\n-if [ -n \"$V\" ]; then\n-    # Print both unexpanded (-v) and expanded (-x) forms of commands as they are\n-    # read from this file.\n-    set -vx\n-    # Set VERBOSE for CMake-based builds\n-    export VERBOSE=\"$V\"\n-fi\n-\n-# Check that environment variables assumed to be set by the environment are set\n-echo \"Building for platform triple ${HOST:?not set} with reference timestamp ${SOURCE_DATE_EPOCH:?not set}...\"\n-echo \"At most ${MAX_JOBS:?not set} jobs will run at once...\"\n-\n-#####################\n-# Environment Setup #\n-#####################\n-\n-# The depends folder also serves as a base-prefix for depends packages for\n-# $HOSTs after successfully building.\n-BASEPREFIX=\"${PWD}/depends\"\n-\n-# Setup an output directory for our build\n-OUTDIR=\"${OUTDIR:-${PWD}/output}\"\n-[ -e \"$OUTDIR\" ] || mkdir -p \"$OUTDIR\"\n-\n-# Setup the directory where our Bitcoin Core build for HOST will occur\n-DISTSRC=\"${DISTSRC:-${PWD}/distsrc-${HOST}}\"\n-if [ -e \"$DISTSRC\" ]; then\n-    echo \"DISTSRC directory '${DISTSRC}' exists, probably because of previous builds... Aborting...\"\n-    exit 1\n-else\n-    mkdir -p \"$DISTSRC\"\n-fi\n-\n-# Given a package name and an output name, return the path of that output in our\n-# current guix environment\n-store_path() {\n-    grep --extended-regexp \"/[^-]{32}-${1}-[^-]+${2:+-${2}}\" \"${GUIX_ENVIRONMENT}/manifest\" \\\n-        | head --lines=1 \\\n-        | sed --expression='s|^[[:space:]]*\"||' \\\n-              --expression='s|\"[[:space:]]*$||'\n-}\n-\n-# Set environment variables to point Guix's cross-toolchain to the right\n-# includes/libs for $HOST\n-case \"$HOST\" in\n-    *mingw*)\n-        # Determine output paths to use in CROSS_* environment variables\n-        CROSS_GLIBC=\"$(store_path \"mingw-w64-x86_64-winpthreads\")\"\n-        CROSS_GCC=\"$(store_path \"gcc-cross-${HOST}\")\"\n-        CROSS_GCC_LIBS=( \"${CROSS_GCC}/lib/gcc/${HOST}\"/* ) # This expands to an array of directories...\n-        CROSS_GCC_LIB=\"${CROSS_GCC_LIBS[0]}\" # ...we just want the first one (there should only be one)\n-\n-        NATIVE_GCC=\"$(store_path gcc-glibc-2.27-toolchain)\"\n-        export LIBRARY_PATH=\"${NATIVE_GCC}/lib:${NATIVE_GCC}/lib64\"\n-        export CPATH=\"${NATIVE_GCC}/include\"\n-\n-        export CROSS_C_INCLUDE_PATH=\"${CROSS_GCC_LIB}/include:${CROSS_GCC_LIB}/include-fixed:${CROSS_GLIBC}/include\"\n-        export CROSS_CPLUS_INCLUDE_PATH=\"${CROSS_GCC}/include/c++:${CROSS_GCC}/include/c++/${HOST}:${CROSS_GCC}/include/c++/backward:${CROSS_C_INCLUDE_PATH}\"\n-        export CROSS_LIBRARY_PATH=\"${CROSS_GCC}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_GCC_LIB}:${CROSS_GLIBC}/lib\"\n-        ;;\n-    *linux*)\n-        CROSS_GLIBC=\"$(store_path \"glibc-cross-${HOST}\")\"\n-        CROSS_GLIBC_STATIC=\"$(store_path \"glibc-cross-${HOST}\" static)\"\n-        CROSS_KERNEL=\"$(store_path \"linux-libre-headers-cross-${HOST}\")\"\n-        CROSS_GCC=\"$(store_path \"gcc-cross-${HOST}\")\"\n-        CROSS_GCC_LIBS=( \"${CROSS_GCC}/lib/gcc/${HOST}\"/* ) # This expands to an array of directories...\n-        CROSS_GCC_LIB=\"${CROSS_GCC_LIBS[0]}\" # ...we just want the first one (there should only be one)\n-\n-        # NOTE: CROSS_C_INCLUDE_PATH is missing ${CROSS_GCC_LIB}/include-fixed, because\n-        # the limits.h in it is missing a '#include_next <limits.h>'\n-        export CROSS_C_INCLUDE_PATH=\"${CROSS_GCC_LIB}/include:${CROSS_GLIBC}/include:${CROSS_KERNEL}/include\"\n-        export CROSS_CPLUS_INCLUDE_PATH=\"${CROSS_GCC}/include/c++:${CROSS_GCC}/include/c++/${HOST}:${CROSS_GCC}/include/c++/backward:${CROSS_C_INCLUDE_PATH}\"\n-        export CROSS_LIBRARY_PATH=\"${CROSS_GCC}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_GCC_LIB}:${CROSS_GLIBC}/lib:${CROSS_GLIBC_STATIC}/lib\"\n-        ;;\n-    *)\n-        exit 1 ;;\n-esac\n-\n-# Sanity check CROSS_*_PATH directories\n-IFS=':' read -ra PATHS <<< \"${CROSS_C_INCLUDE_PATH}:${CROSS_CPLUS_INCLUDE_PATH}:${CROSS_LIBRARY_PATH}\"\n-for p in \"${PATHS[@]}\"; do\n-    if [ ! -d \"$p\" ]; then\n-        echo \"'$p' doesn't exist or isn't a directory... Aborting...\"\n-        exit 1\n-    fi\n-done\n-\n-# Disable Guix ld auto-rpath behavior\n-export GUIX_LD_WRAPPER_DISABLE_RPATH=yes\n-\n-# Make /usr/bin if it doesn't exist\n-[ -e /usr/bin ] || mkdir -p /usr/bin\n-\n-# Symlink file and env to a conventional path\n-[ -e /usr/bin/file ] || ln -s --no-dereference \"$(command -v file)\" /usr/bin/file\n-[ -e /usr/bin/env ]  || ln -s --no-dereference \"$(command -v env)\"  /usr/bin/env\n-\n-# Determine the correct value for -Wl,--dynamic-linker for the current $HOST\n-case \"$HOST\" in\n-    *linux*)\n-        glibc_dynamic_linker=$(\n-            case \"$HOST\" in\n-                i686-linux-gnu)      echo /lib/ld-linux.so.2 ;;\n-                x86_64-linux-gnu)    echo /lib64/ld-linux-x86-64.so.2 ;;\n-                arm-linux-gnueabihf) echo /lib/ld-linux-armhf.so.3 ;;\n-                aarch64-linux-gnu)   echo /lib/ld-linux-aarch64.so.1 ;;\n-                riscv64-linux-gnu)   echo /lib/ld-linux-riscv64-lp64d.so.1 ;;\n-                *)                   exit 1 ;;\n-            esac\n-        )\n-        ;;\n-esac\n-\n-# Environment variables for determinism\n-export QT_RCC_TEST=1\n-export QT_RCC_SOURCE_DATE_OVERRIDE=1\n-export TAR_OPTIONS=\"--owner=0 --group=0 --numeric-owner --mtime='@${SOURCE_DATE_EPOCH}' --sort=name\"\n-export TZ=\"UTC\"\n-\n-####################\n-# Depends Building #\n-####################\n-\n-# Build the depends tree, overriding variables that assume multilib gcc\n-make -C depends --jobs=\"$MAX_JOBS\" HOST=\"$HOST\" \\\n-                                   ${V:+V=1} \\\n-                                   ${SOURCES_PATH+SOURCES_PATH=\"$SOURCES_PATH\"} \\\n-                                   i686_linux_CC=i686-linux-gnu-gcc \\\n-                                   i686_linux_CXX=i686-linux-gnu-g++ \\\n-                                   i686_linux_AR=i686-linux-gnu-ar \\\n-                                   i686_linux_RANLIB=i686-linux-gnu-ranlib \\\n-                                   i686_linux_NM=i686-linux-gnu-nm \\\n-                                   i686_linux_STRIP=i686-linux-gnu-strip \\\n-                                   x86_64_linux_CC=x86_64-linux-gnu-gcc \\\n-                                   x86_64_linux_CXX=x86_64-linux-gnu-g++ \\\n-                                   x86_64_linux_AR=x86_64-linux-gnu-ar \\\n-                                   x86_64_linux_RANLIB=x86_64-linux-gnu-ranlib \\\n-                                   x86_64_linux_NM=x86_64-linux-gnu-nm \\\n-                                   x86_64_linux_STRIP=x86_64-linux-gnu-strip \\\n-                                   qt_config_opts_i686_linux='-platform linux-g++ -xplatform bitcoin-linux-g++'\n-\n-\n-###########################\n-# Source Tarball Building #\n-###########################\n-\n-# Define DISTNAME variable.\n-# shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n-source contrib/gitian-descriptors/assign_DISTNAME\n-\n-GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n-\n-# Create the source tarball if not already there\n-if [ ! -e \"$GIT_ARCHIVE\" ]; then\n-    mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n-    git archive --output=\"$GIT_ARCHIVE\" HEAD\n-fi\n-\n-###########################\n-# Binary Tarball Building #\n-###########################\n-\n-# CONFIGFLAGS\n-CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n-case \"$HOST\" in\n-    *linux*) CONFIGFLAGS+=\" --enable-glibc-back-compat\" ;;\n-esac\n-\n-# CFLAGS\n-HOST_CFLAGS=\"-O2 -g\"\n-case \"$HOST\" in\n-    *linux*)  HOST_CFLAGS+=\" -ffile-prefix-map=${PWD}=.\" ;;\n-    *mingw*)  HOST_CFLAGS+=\" -fno-ident\" ;;\n-esac\n-\n-# CXXFLAGS\n-HOST_CXXFLAGS=\"$HOST_CFLAGS\"\n-\n-# LDFLAGS\n-case \"$HOST\" in\n-    *linux*)  HOST_LDFLAGS=\"-Wl,--as-needed -Wl,--dynamic-linker=$glibc_dynamic_linker -static-libstdc++ -Wl,-O2\" ;;\n-    *mingw*)  HOST_LDFLAGS=\"-Wl,--no-insert-timestamp\" ;;\n-esac\n-\n-# Make $HOST-specific native binaries from depends available in $PATH\n-export PATH=\"${BASEPREFIX}/${HOST}/native/bin:${PATH}\"\n-(\n-    cd \"$DISTSRC\"\n-\n-    # Extract the source tarball\n-    tar -xf \"${GIT_ARCHIVE}\"\n-\n-    ./autogen.sh\n-\n-    # Configure this DISTSRC for $HOST\n-    # shellcheck disable=SC2086\n-    env CONFIG_SITE=\"${BASEPREFIX}/${HOST}/share/config.site\" \\\n-        ./configure --prefix=/ \\\n-                    --disable-ccache \\\n-                    --disable-maintainer-mode \\\n-                    --disable-dependency-tracking \\\n-                    ${CONFIGFLAGS} \\\n-                    CFLAGS=\"${HOST_CFLAGS}\" \\\n-                    CXXFLAGS=\"${HOST_CXXFLAGS}\" \\\n-                    ${HOST_LDFLAGS:+LDFLAGS=\"${HOST_LDFLAGS}\"}\n-\n-    sed -i.old 's/-lstdc++ //g' config.status libtool src/univalue/config.status src/univalue/libtool\n-\n-    # Build Bitcoin Core\n-    make --jobs=\"$MAX_JOBS\" ${V:+V=1}\n-\n-    # Perform basic ELF security checks on a series of executables.\n-    make -C src --jobs=1 check-security ${V:+V=1}\n-\n-    case \"$HOST\" in\n-        *linux*|*mingw*)\n-            # Check that executables only contain allowed gcc, glibc and libstdc++\n-            # version symbols for Linux distro back-compatibility.\n-            make -C src --jobs=1 check-symbols  ${V:+V=1}\n-            ;;\n-    esac\n-\n-    # Make the os-specific installers\n-    case \"$HOST\" in\n-        *mingw*)\n-            make deploy ${V:+V=1} BITCOIN_WIN_INSTALLER=\"${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe\"\n-            ;;\n-    esac\n-\n-    # Setup the directory where our Bitcoin Core build for HOST will be\n-    # installed. This directory will also later serve as the input for our\n-    # binary tarballs.\n-    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n-    mkdir -p \"${INSTALLPATH}\"\n-    # Install built Bitcoin Core to $INSTALLPATH\n-    make install DESTDIR=\"${INSTALLPATH}\" ${V:+V=1}\n-\n-    (\n-        cd installed\n-\n-        case \"$HOST\" in\n-            *mingw*)\n-                mv --target-directory=\"$DISTNAME\"/lib/ \"$DISTNAME\"/bin/*.dll\n-                ;;\n-        esac\n-\n-        # Prune libtool and object archives\n-        find . -name \"lib*.la\" -delete\n-        find . -name \"lib*.a\" -delete\n-\n-        # Prune pkg-config files\n-        rm -r \"${DISTNAME}/lib/pkgconfig\"\n-\n-        # Split binaries and libraries from their debug symbols\n-        {\n-            find \"${DISTNAME}/bin\" -type f -executable -print0\n-            find \"${DISTNAME}/lib\" -type f -print0\n-        } | xargs -0 -n1 -P\"$MAX_JOBS\" -I{} \"${DISTSRC}/contrib/devtools/split-debug.sh\" {} {} {}.dbg\n-\n-        case \"$HOST\" in\n-            *mingw*)\n-                cp \"${DISTSRC}/doc/README_windows.txt\" \"${DISTNAME}/readme.txt\"\n-                ;;\n-            *linux*)\n-                cp \"${DISTSRC}/README.md\" \"${DISTNAME}/\"\n-                ;;\n-        esac\n-\n-        # Finally, deterministically produce {non-,}debug binary tarballs ready\n-        # for release\n-        case \"$HOST\" in\n-            *mingw*)\n-                find \"${DISTNAME}\" -not -name \"*.dbg\" -print0 \\\n-                    | xargs -0r touch --no-dereference --date=\"@${SOURCE_DATE_EPOCH}\"\n-                find \"${DISTNAME}\" -not -name \"*.dbg\" \\\n-                    | sort \\\n-                    | zip -X@ \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-w64-mingw32/win64}.zip\" \\\n-                    || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-w64-mingw32/win64}.zip\" && exit 1 )\n-                find \"${DISTNAME}\" -name \"*.dbg\" -print0 \\\n-                    | xargs -0r touch --no-dereference --date=\"@${SOURCE_DATE_EPOCH}\"\n-                find \"${DISTNAME}\" -name \"*.dbg\" \\\n-                    | sort \\\n-                    | zip -X@ \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-w64-mingw32/win64}-debug.zip\" \\\n-                    || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-w64-mingw32/win64}-debug.zip\" && exit 1 )\n-                ;;\n-            *linux*)\n-                find \"${DISTNAME}\" -not -name \"*.dbg\" -print0 \\\n-                    | sort --zero-terminated \\\n-                    | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n-                    | gzip -9n > \"${OUTDIR}/${DISTNAME}-${HOST}.tar.gz\" \\\n-                    || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST}.tar.gz\" && exit 1 )\n-                find \"${DISTNAME}\" -name \"*.dbg\" -print0 \\\n-                    | sort --zero-terminated \\\n-                    | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n-                    | gzip -9n > \"${OUTDIR}/${DISTNAME}-${HOST}-debug.tar.gz\" \\\n-                    || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST}-debug.tar.gz\" && exit 1 )\n-                ;;\n-        esac\n-    )\n-)\n-\n-case \"$HOST\" in\n-    *mingw*)\n-        cp -rf --target-directory=. contrib/windeploy\n-        (\n-            cd ./windeploy\n-            mkdir unsigned\n-            cp --target-directory=unsigned/ \"${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe\"\n-            find . -print0 \\\n-                | sort --zero-terminated \\\n-                | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n-                | gzip -9n > \"${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\" \\\n-                || ( rm -f \"${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\" && exit 1 )\n-        )\n-        ;;\n-esac"
      },
      {
        "sha": "5e011ea1848982e5ce5e2073ff28443b15d4f39c",
        "filename": "contrib/guix/manifest.scm",
        "status": "removed",
        "additions": 0,
        "deletions": 198,
        "changes": 198,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/guix/manifest.scm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/guix/manifest.scm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/manifest.scm?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,198 +0,0 @@\n-(use-modules (gnu)\n-             (gnu packages)\n-             (gnu packages autotools)\n-             (gnu packages base)\n-             (gnu packages bash)\n-             (gnu packages check)\n-             (gnu packages commencement)\n-             (gnu packages compression)\n-             (gnu packages cross-base)\n-             (gnu packages file)\n-             (gnu packages gawk)\n-             (gnu packages gcc)\n-             (gnu packages installers)\n-             (gnu packages linux)\n-             (gnu packages mingw)\n-             (gnu packages perl)\n-             (gnu packages pkg-config)\n-             (gnu packages python)\n-             (gnu packages shells)\n-             (gnu packages version-control)\n-             (guix build-system gnu)\n-             (guix build-system trivial)\n-             (guix gexp)\n-             (guix packages)\n-             (guix profiles)\n-             (guix utils))\n-\n-(define (make-ssp-fixed-gcc xgcc)\n-  \"Given a XGCC package, return a modified package that uses the SSP function\n-from glibc instead of from libssp.so. Our `symbol-check' script will complain if\n-we link against libssp.so, and thus will ensure that this works properly.\n-\n-Taken from:\n-http://www.linuxfromscratch.org/hlfs/view/development/chapter05/gcc-pass1.html\"\n-  (package\n-   (inherit xgcc)\n-   (arguments\n-    (substitute-keyword-arguments (package-arguments xgcc)\n-      ((#:make-flags flags)\n-       `(cons \"gcc_cv_libc_provides_ssp=yes\" ,flags))))))\n-\n-(define (make-gcc-rpath-link xgcc)\n-  \"Given a XGCC package, return a modified package that replace each instance of\n--rpath in the default system spec that's inserted by Guix with -rpath-link\"\n-  (package\n-   (inherit xgcc)\n-   (arguments\n-    (substitute-keyword-arguments (package-arguments xgcc)\n-      ((#:phases phases)\n-       `(modify-phases ,phases\n-          (add-after 'pre-configure 'replace-rpath-with-rpath-link\n-            (lambda _\n-              (substitute* (cons \"gcc/config/rs6000/sysv4.h\"\n-                                 (find-files \"gcc/config\"\n-                                             \"^gnu-user.*\\\\.h$\"))\n-                ((\"-rpath=\") \"-rpath-link=\"))\n-              #t))))))))\n-\n-(define (make-cross-toolchain target\n-                              base-gcc-for-libc\n-                              base-kernel-headers\n-                              base-libc\n-                              base-gcc)\n-  \"Create a cross-compilation toolchain package for TARGET\"\n-  (let* ((xbinutils (cross-binutils target))\n-         ;; 1. Build a cross-compiling gcc without targeting any libc, derived\n-         ;; from BASE-GCC-FOR-LIBC\n-         (xgcc-sans-libc (cross-gcc target\n-                                    #:xgcc base-gcc-for-libc\n-                                    #:xbinutils xbinutils))\n-         ;; 2. Build cross-compiled kernel headers with XGCC-SANS-LIBC, derived\n-         ;; from BASE-KERNEL-HEADERS\n-         (xkernel (cross-kernel-headers target\n-                                        base-kernel-headers\n-                                        xgcc-sans-libc\n-                                        xbinutils))\n-         ;; 3. Build a cross-compiled libc with XGCC-SANS-LIBC and XKERNEL,\n-         ;; derived from BASE-LIBC\n-         (xlibc (cross-libc target\n-                            base-libc\n-                            xgcc-sans-libc\n-                            xbinutils\n-                            xkernel))\n-         ;; 4. Build a cross-compiling gcc targeting XLIBC, derived from\n-         ;; BASE-GCC\n-         (xgcc (cross-gcc target\n-                          #:xgcc base-gcc\n-                          #:xbinutils xbinutils\n-                          #:libc xlibc)))\n-    ;; Define a meta-package that propagates the resulting XBINUTILS, XLIBC, and\n-    ;; XGCC\n-    (package\n-      (name (string-append target \"-toolchain\"))\n-      (version (package-version xgcc))\n-      (source #f)\n-      (build-system trivial-build-system)\n-      (arguments '(#:builder (begin (mkdir %output) #t)))\n-      (propagated-inputs\n-       `((\"binutils\" ,xbinutils)\n-         (\"libc\" ,xlibc)\n-         (\"libc:static\" ,xlibc \"static\")\n-         (\"gcc\" ,xgcc)))\n-      (synopsis (string-append \"Complete GCC tool chain for \" target))\n-      (description (string-append \"This package provides a complete GCC tool\n-chain for \" target \" development.\"))\n-      (home-page (package-home-page xgcc))\n-      (license (package-license xgcc)))))\n-\n-(define* (make-bitcoin-cross-toolchain target\n-                                  #:key\n-                                  (base-gcc-for-libc gcc-5)\n-                                  (base-kernel-headers linux-libre-headers-4.19)\n-                                  (base-libc glibc-2.27)\n-                                  (base-gcc (make-gcc-rpath-link gcc-9)))\n-  \"Convenience wrapper around MAKE-CROSS-TOOLCHAIN with default values\n-desirable for building Bitcoin Core release binaries.\"\n-  (make-cross-toolchain target\n-                   base-gcc-for-libc\n-                   base-kernel-headers\n-                   base-libc\n-                   base-gcc))\n-\n-(define (make-gcc-with-pthreads gcc)\n-  (package-with-extra-configure-variable gcc \"--enable-threads\" \"posix\"))\n-\n-(define (make-mingw-pthreads-cross-toolchain target)\n-  \"Create a cross-compilation toolchain package for TARGET\"\n-  (let* ((xbinutils (cross-binutils target))\n-         (pthreads-xlibc mingw-w64-x86_64-winpthreads)\n-         (pthreads-xgcc (make-gcc-with-pthreads\n-                         (cross-gcc target\n-                                    #:xgcc (make-ssp-fixed-gcc gcc-9)\n-                                    #:xbinutils xbinutils\n-                                    #:libc pthreads-xlibc))))\n-    ;; Define a meta-package that propagates the resulting XBINUTILS, XLIBC, and\n-    ;; XGCC\n-    (package\n-      (name (string-append target \"-posix-toolchain\"))\n-      (version (package-version pthreads-xgcc))\n-      (source #f)\n-      (build-system trivial-build-system)\n-      (arguments '(#:builder (begin (mkdir %output) #t)))\n-      (propagated-inputs\n-       `((\"binutils\" ,xbinutils)\n-         (\"libc\" ,pthreads-xlibc)\n-         (\"gcc\" ,pthreads-xgcc)))\n-      (synopsis (string-append \"Complete GCC tool chain for \" target))\n-      (description (string-append \"This package provides a complete GCC tool\n-chain for \" target \" development.\"))\n-      (home-page (package-home-page pthreads-xgcc))\n-      (license (package-license pthreads-xgcc)))))\n-\n-\n-(packages->manifest\n- (append\n-  (list ;; The Basics\n-        bash-minimal\n-        which\n-        coreutils\n-        util-linux\n-        ;; File(system) inspection\n-        file\n-        grep\n-        diffutils\n-        findutils\n-        ;; File transformation\n-        patch\n-        gawk\n-        sed\n-        ;; Compression and archiving\n-        tar\n-        bzip2\n-        gzip\n-        xz\n-        zlib\n-        ;; Build tools\n-        gnu-make\n-        libtool\n-        autoconf\n-        automake\n-        pkg-config\n-        ;; Scripting\n-        perl\n-        python-3.7\n-        ;; Git\n-        git\n-        ;; Native gcc 9 toolchain targeting glibc 2.27\n-        (make-gcc-toolchain gcc-9 glibc-2.27))\n-  (let ((target (getenv \"HOST\")))\n-    (cond ((string-suffix? \"-mingw32\" target)\n-           ;; Windows\n-           (list zip (make-mingw-pthreads-cross-toolchain \"x86_64-w64-mingw32\") nsis-x86_64))\n-          ((string-contains target \"riscv64-linux-\")\n-           (list (make-bitcoin-cross-toolchain \"riscv64-linux-gnu\"\n-                                               #:base-gcc-for-libc gcc-7)))\n-          ((string-contains target \"-linux-\")\n-           (list (make-bitcoin-cross-toolchain target)))\n-          (else '())))))"
      },
      {
        "sha": "306a37f75ab7018b0ce015064a7ae0159fd6e015",
        "filename": "contrib/init/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,12 +0,0 @@\n-Sample configuration files for:\n-```\n-SystemD: bitcoind.service\n-Upstart: bitcoind.conf\n-OpenRC:  bitcoind.openrc\n-         bitcoind.openrcconf\n-CentOS:  bitcoind.init\n-macOS:   org.bitcoin.bitcoind.plist\n-```\n-have been made available to assist packagers in creating node packages here.\n-\n-See doc/init.md for more information."
      },
      {
        "sha": "dde1bd0c4d16b7eede11a741b72777a47e0962c7",
        "filename": "contrib/init/bitcoind.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/init/bitcoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/init/bitcoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.conf?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,65 +0,0 @@\n-description \"Bitcoin Core Daemon\"\n-\n-start on runlevel [2345]\n-stop on starting rc RUNLEVEL=[016]\n-\n-env BITCOIND_BIN=\"/usr/bin/bitcoind\"\n-env BITCOIND_USER=\"bitcoin\"\n-env BITCOIND_GROUP=\"bitcoin\"\n-env BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n-# upstart can't handle variables constructed with other variables\n-env BITCOIND_PIDFILE=\"/var/run/bitcoind/bitcoind.pid\"\n-env BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n-env BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n-\n-expect fork\n-\n-respawn\n-respawn limit 5 120\n-kill timeout 600\n-\n-pre-start script\n-    # this will catch non-existent config files\n-    # bitcoind will check and exit with this very warning, but it can do so\n-    # long after forking, leaving upstart to think everything started fine.\n-    # since this is a commonly encountered case on install, just check and\n-    # warn here.\n-    if ! grep -qs '^rpcpassword=' \"$BITCOIND_CONFIGFILE\" ; then\n-        echo \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n-        echo \"The setting must appear in $BITCOIND_CONFIGFILE\"\n-        echo\n-        echo \"This password is security critical to securing wallets \"\n-        echo \"and must not be the same as the rpcuser setting.\"\n-        echo \"You can generate a suitable random password using the following \"\n-        echo \"command from the shell:\"\n-        echo\n-        echo \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n-        echo\n-        echo \"It is recommended that you also set alertnotify so you are \"\n-        echo \"notified of problems:\"\n-        echo\n-        echo \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n-            \"admin@foo.com\"\n-        echo\n-        exit 1\n-    fi\n-\n-    mkdir -p \"$BITCOIND_PIDDIR\"\n-    chmod 0755 \"$BITCOIND_PIDDIR\"\n-    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_PIDDIR\"\n-    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_CONFIGFILE\"\n-    chmod 0660 \"$BITCOIND_CONFIGFILE\"\n-end script\n-\n-exec start-stop-daemon \\\n-    --start \\\n-    --pidfile \"$BITCOIND_PIDFILE\" \\\n-    --chuid $BITCOIND_USER:$BITCOIND_GROUP \\\n-    --exec \"$BITCOIND_BIN\" \\\n-    -- \\\n-    -pid=\"$BITCOIND_PIDFILE\" \\\n-    -conf=\"$BITCOIND_CONFIGFILE\" \\\n-    -datadir=\"$BITCOIND_DATADIR\" \\\n-    -disablewallet \\\n-    -daemon\n-"
      },
      {
        "sha": "19e1f76d094ce4a17f883fca9bd2b8d12d0f6e8c",
        "filename": "contrib/init/bitcoind.init",
        "status": "removed",
        "additions": 0,
        "deletions": 67,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/init/bitcoind.init",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/init/bitcoind.init",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.init?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,67 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-#  bitcoind The bitcoin core server.\n-#\n-#\n-# chkconfig: 345 80 20\n-# description: bitcoind\n-# processname: bitcoind\n-#\n-\n-# Source function library.\n-. /etc/init.d/functions\n-\n-# you can override defaults in /etc/sysconfig/bitcoind, see below\n-if [ -f /etc/sysconfig/bitcoind ]; then\n-        . /etc/sysconfig/bitcoind\n-fi\n-\n-RETVAL=0\n-\n-prog=bitcoind\n-# you can override the lockfile via BITCOIND_LOCKFILE in /etc/sysconfig/bitcoind\n-lockfile=${BITCOIND_LOCKFILE-/var/lock/subsys/bitcoind}\n-\n-# bitcoind defaults to /usr/bin/bitcoind, override with BITCOIND_BIN\n-bitcoind=${BITCOIND_BIN-/usr/bin/bitcoind}\n-\n-# bitcoind opts default to -disablewallet, override with BITCOIND_OPTS\n-bitcoind_opts=${BITCOIND_OPTS--disablewallet}\n-\n-start() {\n-    echo -n $\"Starting $prog: \"\n-    daemon $DAEMONOPTS $bitcoind $bitcoind_opts\n-    RETVAL=$?\n-    echo\n-    [ $RETVAL -eq 0 ] && touch $lockfile\n-    return $RETVAL\n-}\n-\n-stop() {\n-    echo -n $\"Stopping $prog: \"\n-    killproc $prog -t600\n-    RETVAL=$?\n-    echo\n-    [ $RETVAL -eq 0 ] && rm -f $lockfile\n-    return $RETVAL\n-}\n-\n-case \"$1\" in\n-    start)\n-        start\n-        ;;\n-    stop)\n-        stop\n-        ;;\n-    status)\n-        status $prog\n-        ;;\n-    restart)\n-        stop\n-        start\n-        ;;\n-    *)\n-        echo \"Usage: service $prog {start|stop|status|restart}\"\n-        exit 1\n-        ;;\n-esac"
      },
      {
        "sha": "86222295dbe052a5c6455e80dcf830161dccc05f",
        "filename": "contrib/init/bitcoind.openrc",
        "status": "removed",
        "additions": 0,
        "deletions": 92,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/init/bitcoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/init/bitcoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrc?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,92 +0,0 @@\n-#!/sbin/openrc-run\n-\n-# backward compatibility for existing gentoo layout \n-#\n-if [ -d \"/var/lib/bitcoin/.bitcoin\" ]; then\n-\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoin/.bitcoin\"\n-else\n-\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoind\"\n-fi\n-\n-BITCOIND_CONFIGFILE=${BITCOIND_CONFIGFILE:-/etc/bitcoin/bitcoin.conf}\n-BITCOIND_PIDDIR=${BITCOIND_PIDDIR:-/var/run/bitcoind}\n-BITCOIND_PIDFILE=${BITCOIND_PIDFILE:-${BITCOIND_PIDDIR}/bitcoind.pid}\n-BITCOIND_DATADIR=${BITCOIND_DATADIR:-${BITCOIND_DEFAULT_DATADIR}}\n-BITCOIND_USER=${BITCOIND_USER:-${BITCOIN_USER:-bitcoin}}\n-BITCOIND_GROUP=${BITCOIND_GROUP:-bitcoin}\n-BITCOIND_BIN=${BITCOIND_BIN:-/usr/bin/bitcoind}\n-BITCOIND_NICE=${BITCOIND_NICE:-${NICELEVEL:-0}}\n-BITCOIND_OPTS=\"${BITCOIND_OPTS:-${BITCOIN_OPTS}}\"\n-\n-name=\"Bitcoin Core Daemon\"\n-description=\"Bitcoin cryptocurrency P2P network daemon\"\n-\n-command=\"/usr/bin/bitcoind\"\n-command_args=\"-pid=\\\"${BITCOIND_PIDFILE}\\\" \\\n-\t\t-conf=\\\"${BITCOIND_CONFIGFILE}\\\" \\\n-\t\t-datadir=\\\"${BITCOIND_DATADIR}\\\" \\\n-\t\t-daemon \\\n-\t\t${BITCOIND_OPTS}\"\n-\n-required_files=\"${BITCOIND_CONFIGFILE}\"\n-start_stop_daemon_args=\"-u ${BITCOIND_USER} \\\n-\t\t\t-N ${BITCOIND_NICE} -w 2000\"\n-pidfile=\"${BITCOIND_PIDFILE}\"\n-\n-# The retry schedule to use when stopping the daemon. Could be either\n-# a timeout in seconds or multiple signal/timeout pairs (like\n-# \"SIGKILL/180 SIGTERM/300\")\n-retry=\"${BITCOIND_SIGTERM_TIMEOUT}\"\n-\n-depend() {\n-\tneed localmount net\n-}\n-\n-# verify\n-# 1) that the datadir exists and is writable (or create it)\n-# 2) that a directory for the pid exists and is writable\n-# 3) ownership and permissions on the config file\n-start_pre() {\n-\tcheckpath \\\n-\t-d \\\n-\t--mode 0750 \\\n-\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n-\t\"${BITCOIND_DATADIR}\"\n-\n-\tcheckpath \\\n-\t-d \\\n-\t--mode 0755 \\\n-\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n-\t\"${BITCOIND_PIDDIR}\"\n-\n-\tcheckpath -f \\\n-\t-o ${BITCOIND_USER}:${BITCOIND_GROUP} \\\n-\t-m 0660 \\\n-\t${BITCOIND_CONFIGFILE}\n-\n-\tcheckconfig || return 1\n-}\n-\n-checkconfig()\n-{\n-\tif ! grep -qs '^rpcpassword=' \"${BITCOIND_CONFIGFILE}\" ; then\n-\t\teerror \"\"\n-\t\teerror \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n-\t\teerror \"The setting must appear in ${BITCOIND_CONFIGFILE}\"\n-\t\teerror \"\"\n-\t\teerror \"This password is security critical to securing wallets \"\n-\t\teerror \"and must not be the same as the rpcuser setting.\"\n-\t\teerror \"You can generate a suitable random password using the following \"\n-\t\teerror \"command from the shell:\"\n-\t\teerror \"\"\n-\t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n-\t\teerror \"\"\n-\t\teerror \"It is recommended that you also set alertnotify so you are \"\n-\t\teerror \"notified of problems:\"\n-\t\teerror \"\"\n-\t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n-\t\t\t\"admin@foo.com\"\n-\t\teerror \"\"\n-\t\treturn 1\n-\tfi\n-}"
      },
      {
        "sha": "c8a22a08d92419a16f251d1c2b357ca371f68fe5",
        "filename": "contrib/init/bitcoind.openrcconf",
        "status": "removed",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/init/bitcoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/init/bitcoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrcconf?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,33 +0,0 @@\n-# /etc/conf.d/bitcoind: config file for /etc/init.d/bitcoind\n-\n-# Config file location\n-#BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n-\n-# What directory to write pidfile to?  (created and owned by $BITCOIND_USER)\n-#BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n-\n-# What filename to give the pidfile\n-#BITCOIND_PIDFILE=\"${BITCOIND_PIDDIR}/bitcoind.pid\"\n-\n-# Where to write bitcoind data (be mindful that the blockchain is large)\n-#BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n-\n-# User and group to own bitcoind process\n-#BITCOIND_USER=\"bitcoin\"\n-#BITCOIND_GROUP=\"bitcoin\"\n-\n-# Path to bitcoind executable\n-#BITCOIND_BIN=\"/usr/bin/bitcoind\"\n-\n-# Nice value to run bitcoind under\n-#BITCOIND_NICE=0\n-\n-# Additional options (avoid -conf and -datadir, use flags above)\n-#BITCOIND_OPTS=\"\"\n-\n-# The timeout in seconds OpenRC will wait for bitcoind to terminate\n-# after a SIGTERM has been raised.\n-# Note that this will be mapped as argument to start-stop-daemon's\n-# '--retry' option, which means you can specify a retry schedule\n-# here. For more information see man 8 start-stop-daemon.\n-BITCOIND_SIGTERM_TIMEOUT=600"
      },
      {
        "sha": "8b308644b10611ae4e558e08aa003a3a2e1ad370",
        "filename": "contrib/init/bitcoind.service",
        "status": "removed",
        "additions": 0,
        "deletions": 77,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/init/bitcoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/init/bitcoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.service?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,77 +0,0 @@\n-# It is not recommended to modify this file in-place, because it will\n-# be overwritten during package upgrades. If you want to add further\n-# options or overwrite existing ones then use\n-# $ systemctl edit bitcoind.service\n-# See \"man systemd.service\" for details.\n-\n-# Note that almost all daemon options could be specified in\n-# /etc/bitcoin/bitcoin.conf, but keep in mind those explicitly\n-# specified as arguments in ExecStart= will override those in the\n-# config file.\n-\n-[Unit]\n-Description=Bitcoin daemon\n-After=network.target\n-\n-[Service]\n-ExecStart=/usr/bin/bitcoind -daemon \\\n-                            -pid=/run/bitcoind/bitcoind.pid \\\n-                            -conf=/etc/bitcoin/bitcoin.conf \\\n-                            -datadir=/var/lib/bitcoind\n-\n-# Make sure the config directory is readable by the service user\n-PermissionsStartOnly=true\n-ExecStartPre=/bin/chgrp bitcoin /etc/bitcoin\n-\n-# Process management\n-####################\n-\n-Type=forking\n-PIDFile=/run/bitcoind/bitcoind.pid\n-Restart=on-failure\n-TimeoutStopSec=600\n-\n-# Directory creation and permissions\n-####################################\n-\n-# Run as bitcoin:bitcoin\n-User=bitcoin\n-Group=bitcoin\n-\n-# /run/bitcoind\n-RuntimeDirectory=bitcoind\n-RuntimeDirectoryMode=0710\n-\n-# /etc/bitcoin\n-ConfigurationDirectory=bitcoin\n-ConfigurationDirectoryMode=0710\n-\n-# /var/lib/bitcoind\n-StateDirectory=bitcoind\n-StateDirectoryMode=0710\n-\n-# Hardening measures\n-####################\n-\n-# Provide a private /tmp and /var/tmp.\n-PrivateTmp=true\n-\n-# Mount /usr, /boot/ and /etc read-only for the process.\n-ProtectSystem=full\n-\n-# Deny access to /home, /root and /run/user\n-ProtectHome=true\n-\n-# Disallow the process and all of its children to gain\n-# new privileges through execve().\n-NoNewPrivileges=true\n-\n-# Use a new /dev namespace only populated with API pseudo devices\n-# such as /dev/null, /dev/zero and /dev/random.\n-PrivateDevices=true\n-\n-# Deny the creation of writable and executable memory mappings.\n-MemoryDenyWriteExecute=true\n-\n-[Install]\n-WantedBy=multi-user.target"
      },
      {
        "sha": "e9130a21ded67cbb3a9811f2a27a6affe46d3634",
        "filename": "contrib/install_db4.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 106,
        "changes": 106,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/install_db4.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/install_db4.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/install_db4.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,106 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2017-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# Install libdb4.8 (Berkeley DB).\n-\n-export LC_ALL=C\n-set -e\n-\n-if [ -z \"${1}\" ]; then\n-  echo \"Usage: $0 <base-dir> [<extra-bdb-configure-flag> ...]\"\n-  echo\n-  echo \"Must specify a single argument: the directory in which db4 will be built.\"\n-  echo \"This is probably \\`pwd\\` if you're at the root of the bitcoin repository.\"\n-  exit 1\n-fi\n-\n-expand_path() {\n-  cd \"${1}\" && pwd -P\n-}\n-\n-BDB_PREFIX=\"$(expand_path ${1})/db4\"; shift;\n-BDB_VERSION='db-4.8.30.NC'\n-BDB_HASH='12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef'\n-BDB_URL=\"https://download.oracle.com/berkeley-db/${BDB_VERSION}.tar.gz\"\n-\n-check_exists() {\n-  command -v \"$1\" >/dev/null\n-}\n-\n-sha256_check() {\n-  # Args: <sha256_hash> <filename>\n-  #\n-  if check_exists sha256sum; then\n-    echo \"${1}  ${2}\" | sha256sum -c\n-  elif check_exists sha256; then\n-    if [ \"$(uname)\" = \"FreeBSD\" ]; then\n-      sha256 -c \"${1}\" \"${2}\"\n-    else\n-      echo \"${1}  ${2}\" | sha256 -c\n-    fi\n-  else\n-    echo \"${1}  ${2}\" | shasum -a 256 -c\n-  fi\n-}\n-\n-http_get() {\n-  # Args: <url> <filename> <sha256_hash>\n-  #\n-  # It's acceptable that we don't require SSL here because we manually verify\n-  # content hashes below.\n-  #\n-  if [ -f \"${2}\" ]; then\n-    echo \"File ${2} already exists; not downloading again\"\n-  elif check_exists curl; then\n-    curl --insecure --retry 5 \"${1}\" -o \"${2}\"\n-  else\n-    wget --no-check-certificate \"${1}\" -O \"${2}\"\n-  fi\n-\n-  sha256_check \"${3}\" \"${2}\"\n-}\n-\n-mkdir -p \"${BDB_PREFIX}\"\n-http_get \"${BDB_URL}\" \"${BDB_VERSION}.tar.gz\" \"${BDB_HASH}\"\n-tar -xzvf ${BDB_VERSION}.tar.gz -C \"$BDB_PREFIX\"\n-cd \"${BDB_PREFIX}/${BDB_VERSION}/\"\n-\n-# Apply a patch necessary when building with clang and c++11 (see https://community.oracle.com/thread/3952592)\n-CLANG_CXX11_PATCH_URL='https://gist.githubusercontent.com/LnL7/5153b251fd525fe15de69b67e63a6075/raw/7778e9364679093a32dec2908656738e16b6bdcb/clang.patch'\n-CLANG_CXX11_PATCH_HASH='7a9a47b03fd5fb93a16ef42235fa9512db9b0829cfc3bdf90edd3ec1f44d637c'\n-http_get \"${CLANG_CXX11_PATCH_URL}\" clang.patch \"${CLANG_CXX11_PATCH_HASH}\"\n-patch -p2 < clang.patch\n-\n-# The packaged config.guess and config.sub are ancient (2009) and can cause build issues.\n-# Replace them with modern versions.\n-# See https://github.com/bitcoin/bitcoin/issues/16064\n-CONFIG_GUESS_URL='https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=55eaf3e779455c4e5cc9f82efb5278be8f8f900b'\n-CONFIG_GUESS_HASH='2d1ff7bca773d2ec3c6217118129220fa72d8adda67c7d2bf79994b3129232c1'\n-CONFIG_SUB_URL='https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=55eaf3e779455c4e5cc9f82efb5278be8f8f900b'\n-CONFIG_SUB_HASH='3a4befde9bcdf0fdb2763fc1bfa74e8696df94e1ad7aac8042d133c8ff1d2e32'\n-\n-rm -f \"dist/config.guess\"\n-rm -f \"dist/config.sub\"\n-\n-http_get \"${CONFIG_GUESS_URL}\" dist/config.guess \"${CONFIG_GUESS_HASH}\"\n-http_get \"${CONFIG_SUB_URL}\" dist/config.sub \"${CONFIG_SUB_HASH}\"\n-\n-cd build_unix/\n-\n-\"${BDB_PREFIX}/${BDB_VERSION}/dist/configure\" \\\n-  --enable-cxx --disable-shared --disable-replication --with-pic --prefix=\"${BDB_PREFIX}\" \\\n-  \"${@}\"\n-\n-make install\n-\n-echo\n-echo \"db4 build complete.\"\n-echo\n-# shellcheck disable=SC2016\n-echo 'When compiling bitcoind, run `./configure` in the following way:'\n-echo\n-echo \"  export BDB_PREFIX='${BDB_PREFIX}'\"\n-# shellcheck disable=SC2016\n-echo '  ./configure BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" ...'"
      },
      {
        "sha": "25a1c7351a297c751d630acd3f97fff6091710c8",
        "filename": "contrib/linearize/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 54,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,54 +0,0 @@\n-# Linearize\n-Construct a linear, no-fork, best version of the Bitcoin blockchain.\n-\n-## Step 1: Download hash list\n-\n-    $ ./linearize-hashes.py linearize.cfg > hashlist.txt\n-\n-Required configuration file settings for linearize-hashes:\n-* RPC: `datadir` (Required if `rpcuser` and `rpcpassword` are not specified)\n-* RPC: `rpcuser`, `rpcpassword` (Required if `datadir` is not specified)\n-\n-Optional config file setting for linearize-hashes:\n-* RPC: `host`  (Default: `127.0.0.1`)\n-* RPC: `port`  (Default: `8332`)\n-* Blockchain: `min_height`, `max_height`\n-* `rev_hash_bytes`: If true, the written block hash list will be\n-byte-reversed. (In other words, the hash returned by getblockhash will have its\n-bytes reversed.) False by default. Intended for generation of\n-standalone hash lists but safe to use with linearize-data.py, which will output\n-the same data no matter which byte format is chosen.\n-\n-The `linearize-hashes` script requires a connection, local or remote, to a\n-JSON-RPC server. Running `bitcoind` or `bitcoin-qt -server` will be sufficient.\n-\n-## Step 2: Copy local block data\n-\n-    $ ./linearize-data.py linearize.cfg\n-\n-Required configuration file settings:\n-* `output_file`: The file that will contain the final blockchain.\n-      or\n-* `output`: Output directory for linearized `blocks/blkNNNNN.dat` output.\n-\n-Optional config file setting for linearize-data:\n-* `debug_output`: Some printouts may not always be desired. If true, such output\n-will be printed.\n-* `file_timestamp`: Set each file's last-accessed and last-modified times,\n-respectively, to the current time and to the timestamp of the most recent block\n-written to the script's blockchain.\n-* `genesis`: The hash of the genesis block in the blockchain.\n-* `input`: bitcoind blocks/ directory containing blkNNNNN.dat\n-* `hashlist`: text file containing list of block hashes created by\n-linearize-hashes.py.\n-* `max_out_sz`: Maximum size for files created by the `output_file` option.\n-(Default: `1000*1000*1000 bytes`)\n-* `netmagic`: Network magic number.\n-* `out_of_order_cache_sz`: If out-of-order blocks are being read, the block can\n-be written to a cache so that the blockchain doesn't have to be sought again.\n-This option specifies the cache size. (Default: `100*1000*1000 bytes`)\n-* `rev_hash_bytes`: If true, the block hash list written by linearize-hashes.py\n-will be byte-reversed when read by linearize-data.py. See the linearize-hashes\n-entry for more information.\n-* `split_timestamp`: Split blockchain files when a new month is first seen, in\n-addition to reaching a maximum file size (`max_out_sz`)."
      },
      {
        "sha": "5f566261ca6746f15edcf2cf41fb7c46525fa79e",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "removed",
        "additions": 0,
        "deletions": 63,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,63 +0,0 @@\n-# bitcoind RPC settings (linearize-hashes)\n-rpcuser=someuser\n-rpcpassword=somepassword\n-#datadir=~/.bitcoin\n-host=127.0.0.1\n-\n-#mainnet default\n-port=8332\n-\n-#testnet default\n-#port=18332\n-\n-#regtest default\n-#port=18443\n-\n-#signet default\n-#port=38332\n-\n-# bootstrap.dat hashlist settings (linearize-hashes)\n-max_height=313000\n-\n-# bootstrap.dat input/output settings (linearize-data)\n-\n-# mainnet\n-netmagic=f9beb4d9\n-genesis=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n-input=/home/example/.bitcoin/blocks\n-\n-# testnet\n-#netmagic=0b110907\n-#genesis=000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\n-#input=/home/example/.bitcoin/testnet3/blocks\n-\n-# regtest\n-#netmagic=fabfb5da\n-#genesis=0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\n-#input=/home/example/.bitcoin/regtest/blocks\n-\n-# signet\n-#netmagic=0a03cf40\n-#genesis=00000008819873e925422c1ff0f99f7cc9bbb232af63a077a480a3633bee1ef6\n-#input=/home/example/.bitcoin/signet/blocks\n-\n-# \"output\" option causes blockchain files to be written to the given location,\n-# with \"output_file\" ignored. If not used, \"output_file\" is used instead.\n-# output=/home/example/blockchain_directory\n-output_file=/home/example/Downloads/bootstrap.dat\n-hashlist=hashlist.txt\n-\n-# Maximum size in bytes of out-of-order blocks cache in memory\n-out_of_order_cache_sz = 100000000\n-\n-# Do we want the reverse the hash bytes coming from getblockhash?\n-rev_hash_bytes = False\n-\n-# On a new month, do we want to set the access and modify times of the new\n-# blockchain file?\n-file_timestamp = 0\n-# Do we want to split the blockchain files given a new month or specific height?\n-split_timestamp = 0\n-\n-# Do we want debug printouts?\n-debug_output = False"
      },
      {
        "sha": "73f54cd4885e0168a900cc3e4663d1790fe1021a",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "removed",
        "additions": 0,
        "deletions": 350,
        "changes": 350,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,350 +0,0 @@\n-#!/usr/bin/env python3\n-#\n-# linearize-data.py: Construct a linear, no-fork version of the chain.\n-#\n-# Copyright (c) 2013-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-\n-import struct\n-import re\n-import os\n-import os.path\n-import sys\n-import hashlib\n-import datetime\n-import time\n-import glob\n-from collections import namedtuple\n-from binascii import unhexlify\n-\n-settings = {}\n-\n-def hex_switchEndian(s):\n-    \"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n-    pairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n-    return b''.join(pairList[::-1]).decode()\n-\n-def uint32(x):\n-    return x & 0xffffffff\n-\n-def bytereverse(x):\n-    return uint32(( ((x) << 24) | (((x) << 8) & 0x00ff0000) |\n-               (((x) >> 8) & 0x0000ff00) | ((x) >> 24) ))\n-\n-def bufreverse(in_buf):\n-    out_words = []\n-    for i in range(0, len(in_buf), 4):\n-        word = struct.unpack('@I', in_buf[i:i+4])[0]\n-        out_words.append(struct.pack('@I', bytereverse(word)))\n-    return b''.join(out_words)\n-\n-def wordreverse(in_buf):\n-    out_words = []\n-    for i in range(0, len(in_buf), 4):\n-        out_words.append(in_buf[i:i+4])\n-    out_words.reverse()\n-    return b''.join(out_words)\n-\n-def calc_hdr_hash(blk_hdr):\n-    hash1 = hashlib.sha256()\n-    hash1.update(blk_hdr)\n-    hash1_o = hash1.digest()\n-\n-    hash2 = hashlib.sha256()\n-    hash2.update(hash1_o)\n-    hash2_o = hash2.digest()\n-\n-    return hash2_o\n-\n-def calc_hash_str(blk_hdr):\n-    hash = calc_hdr_hash(blk_hdr)\n-    hash = bufreverse(hash)\n-    hash = wordreverse(hash)\n-    hash_str = hash.hex()\n-    return hash_str\n-\n-def get_blk_dt(blk_hdr):\n-    members = struct.unpack(\"<I\", blk_hdr[68:68+4])\n-    nTime = members[0]\n-    dt = datetime.datetime.fromtimestamp(nTime)\n-    dt_ym = datetime.datetime(dt.year, dt.month, 1)\n-    return (dt_ym, nTime)\n-\n-# When getting the list of block hashes, undo any byte reversals.\n-def get_block_hashes(settings):\n-    blkindex = []\n-    f = open(settings['hashlist'], \"r\", encoding=\"utf8\")\n-    for line in f:\n-        line = line.rstrip()\n-        if settings['rev_hash_bytes'] == 'true':\n-            line = hex_switchEndian(line)\n-        blkindex.append(line)\n-\n-    print(\"Read \" + str(len(blkindex)) + \" hashes\")\n-\n-    return blkindex\n-\n-# The block map shouldn't give or receive byte-reversed hashes.\n-def mkblockmap(blkindex):\n-    blkmap = {}\n-    for height,hash in enumerate(blkindex):\n-        blkmap[hash] = height\n-    return blkmap\n-\n-# This gets the first block file ID that exists from the input block\n-# file directory.\n-def getFirstBlockFileId(block_dir_path):\n-    # First, this sets up a pattern to search for block files, for\n-    # example 'blkNNNNN.dat'.\n-    blkFilePattern = os.path.join(block_dir_path, \"blk[0-9][0-9][0-9][0-9][0-9].dat\")\n-\n-    # This search is done with glob\n-    blkFnList = glob.glob(blkFilePattern)\n-\n-    if len(blkFnList) == 0:\n-        print(\"blocks not pruned - starting at 0\")\n-        return 0\n-    # We then get the lexicographic minimum, which should be the first\n-    # block file name.\n-    firstBlkFilePath = min(blkFnList)\n-    firstBlkFn = os.path.basename(firstBlkFilePath)\n-\n-    # now, the string should be ['b','l','k','N','N','N','N','N','.','d','a','t']\n-    # So get the ID by choosing:              3   4   5   6   7\n-    # The ID is not necessarily 0 if this is a pruned node.\n-    blkId = int(firstBlkFn[3:8])\n-    return blkId\n-\n-# Block header and extent on disk\n-BlockExtent = namedtuple('BlockExtent', ['fn', 'offset', 'inhdr', 'blkhdr', 'size'])\n-\n-class BlockDataCopier:\n-    def __init__(self, settings, blkindex, blkmap):\n-        self.settings = settings\n-        self.blkindex = blkindex\n-        self.blkmap = blkmap\n-\n-        # Get first occurring block file id - for pruned nodes this\n-        # will not necessarily be 0\n-        self.inFn = getFirstBlockFileId(self.settings['input'])\n-        self.inF = None\n-        self.outFn = 0\n-        self.outsz = 0\n-        self.outF = None\n-        self.outFname = None\n-        self.blkCountIn = 0\n-        self.blkCountOut = 0\n-\n-        self.lastDate = datetime.datetime(2000, 1, 1)\n-        self.highTS = 1408893517 - 315360000\n-        self.timestampSplit = False\n-        self.fileOutput = True\n-        self.setFileTime = False\n-        self.maxOutSz = settings['max_out_sz']\n-        if 'output' in settings:\n-            self.fileOutput = False\n-        if settings['file_timestamp'] != 0:\n-            self.setFileTime = True\n-        if settings['split_timestamp'] != 0:\n-            self.timestampSplit = True\n-        # Extents and cache for out-of-order blocks\n-        self.blockExtents = {}\n-        self.outOfOrderData = {}\n-        self.outOfOrderSize = 0 # running total size for items in outOfOrderData\n-\n-    def writeBlock(self, inhdr, blk_hdr, rawblock):\n-        blockSizeOnDisk = len(inhdr) + len(blk_hdr) + len(rawblock)\n-        if not self.fileOutput and ((self.outsz + blockSizeOnDisk) > self.maxOutSz):\n-            self.outF.close()\n-            if self.setFileTime:\n-                os.utime(self.outFname, (int(time.time()), self.highTS))\n-            self.outF = None\n-            self.outFname = None\n-            self.outFn = self.outFn + 1\n-            self.outsz = 0\n-\n-        (blkDate, blkTS) = get_blk_dt(blk_hdr)\n-        if self.timestampSplit and (blkDate > self.lastDate):\n-            print(\"New month \" + blkDate.strftime(\"%Y-%m\") + \" @ \" + self.hash_str)\n-            self.lastDate = blkDate\n-            if self.outF:\n-                self.outF.close()\n-                if self.setFileTime:\n-                    os.utime(self.outFname, (int(time.time()), self.highTS))\n-                self.outF = None\n-                self.outFname = None\n-                self.outFn = self.outFn + 1\n-                self.outsz = 0\n-\n-        if not self.outF:\n-            if self.fileOutput:\n-                self.outFname = self.settings['output_file']\n-            else:\n-                self.outFname = os.path.join(self.settings['output'], \"blk%05d.dat\" % self.outFn)\n-            print(\"Output file \" + self.outFname)\n-            self.outF = open(self.outFname, \"wb\")\n-\n-        self.outF.write(inhdr)\n-        self.outF.write(blk_hdr)\n-        self.outF.write(rawblock)\n-        self.outsz = self.outsz + len(inhdr) + len(blk_hdr) + len(rawblock)\n-\n-        self.blkCountOut = self.blkCountOut + 1\n-        if blkTS > self.highTS:\n-            self.highTS = blkTS\n-\n-        if (self.blkCountOut % 1000) == 0:\n-            print('%i blocks scanned, %i blocks written (of %i, %.1f%% complete)' %\n-                    (self.blkCountIn, self.blkCountOut, len(self.blkindex), 100.0 * self.blkCountOut / len(self.blkindex)))\n-\n-    def inFileName(self, fn):\n-        return os.path.join(self.settings['input'], \"blk%05d.dat\" % fn)\n-\n-    def fetchBlock(self, extent):\n-        '''Fetch block contents from disk given extents'''\n-        with open(self.inFileName(extent.fn), \"rb\") as f:\n-            f.seek(extent.offset)\n-            return f.read(extent.size)\n-\n-    def copyOneBlock(self):\n-        '''Find the next block to be written in the input, and copy it to the output.'''\n-        extent = self.blockExtents.pop(self.blkCountOut)\n-        if self.blkCountOut in self.outOfOrderData:\n-            # If the data is cached, use it from memory and remove from the cache\n-            rawblock = self.outOfOrderData.pop(self.blkCountOut)\n-            self.outOfOrderSize -= len(rawblock)\n-        else: # Otherwise look up data on disk\n-            rawblock = self.fetchBlock(extent)\n-\n-        self.writeBlock(extent.inhdr, extent.blkhdr, rawblock)\n-\n-    def run(self):\n-        while self.blkCountOut < len(self.blkindex):\n-            if not self.inF:\n-                fname = self.inFileName(self.inFn)\n-                print(\"Input file \" + fname)\n-                try:\n-                    self.inF = open(fname, \"rb\")\n-                except IOError:\n-                    print(\"Premature end of block data\")\n-                    return\n-\n-            inhdr = self.inF.read(8)\n-            if (not inhdr or (inhdr[0] == \"\\0\")):\n-                self.inF.close()\n-                self.inF = None\n-                self.inFn = self.inFn + 1\n-                continue\n-\n-            inMagic = inhdr[:4]\n-            if (inMagic != self.settings['netmagic']):\n-                # Seek backwards 7 bytes (skipping the first byte in the previous search)\n-                # and continue searching from the new position if the magic bytes are not\n-                # found.\n-                self.inF.seek(-7, os.SEEK_CUR)\n-                continue\n-            inLenLE = inhdr[4:]\n-            su = struct.unpack(\"<I\", inLenLE)\n-            inLen = su[0] - 80 # length without header\n-            blk_hdr = self.inF.read(80)\n-            inExtent = BlockExtent(self.inFn, self.inF.tell(), inhdr, blk_hdr, inLen)\n-\n-            self.hash_str = calc_hash_str(blk_hdr)\n-            if not self.hash_str in blkmap:\n-                # Because blocks can be written to files out-of-order as of 0.10, the script\n-                # may encounter blocks it doesn't know about. Treat as debug output.\n-                if settings['debug_output'] == 'true':\n-                    print(\"Skipping unknown block \" + self.hash_str)\n-                self.inF.seek(inLen, os.SEEK_CUR)\n-                continue\n-\n-            blkHeight = self.blkmap[self.hash_str]\n-            self.blkCountIn += 1\n-\n-            if self.blkCountOut == blkHeight:\n-                # If in-order block, just copy\n-                rawblock = self.inF.read(inLen)\n-                self.writeBlock(inhdr, blk_hdr, rawblock)\n-\n-                # See if we can catch up to prior out-of-order blocks\n-                while self.blkCountOut in self.blockExtents:\n-                    self.copyOneBlock()\n-\n-            else: # If out-of-order, skip over block data for now\n-                self.blockExtents[blkHeight] = inExtent\n-                if self.outOfOrderSize < self.settings['out_of_order_cache_sz']:\n-                    # If there is space in the cache, read the data\n-                    # Reading the data in file sequence instead of seeking and fetching it later is preferred,\n-                    # but we don't want to fill up memory\n-                    self.outOfOrderData[blkHeight] = self.inF.read(inLen)\n-                    self.outOfOrderSize += inLen\n-                else: # If no space in cache, seek forward\n-                    self.inF.seek(inLen, os.SEEK_CUR)\n-\n-        print(\"Done (%i blocks written)\" % (self.blkCountOut))\n-\n-if __name__ == '__main__':\n-    if len(sys.argv) != 2:\n-        print(\"Usage: linearize-data.py CONFIG-FILE\")\n-        sys.exit(1)\n-\n-    f = open(sys.argv[1], encoding=\"utf8\")\n-    for line in f:\n-        # skip comment lines\n-        m = re.search(r'^\\s*#', line)\n-        if m:\n-            continue\n-\n-        # parse key=value lines\n-        m = re.search(r'^(\\w+)\\s*=\\s*(\\S.*)$', line)\n-        if m is None:\n-            continue\n-        settings[m.group(1)] = m.group(2)\n-    f.close()\n-\n-    # Force hash byte format setting to be lowercase to make comparisons easier.\n-    # Also place upfront in case any settings need to know about it.\n-    if 'rev_hash_bytes' not in settings:\n-        settings['rev_hash_bytes'] = 'false'\n-    settings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n-\n-    if 'netmagic' not in settings:\n-        settings['netmagic'] = 'f9beb4d9'\n-    if 'genesis' not in settings:\n-        settings['genesis'] = '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f'\n-    if 'input' not in settings:\n-        settings['input'] = 'input'\n-    if 'hashlist' not in settings:\n-        settings['hashlist'] = 'hashlist.txt'\n-    if 'file_timestamp' not in settings:\n-        settings['file_timestamp'] = 0\n-    if 'split_timestamp' not in settings:\n-        settings['split_timestamp'] = 0\n-    if 'max_out_sz' not in settings:\n-        settings['max_out_sz'] = 1000 * 1000 * 1000\n-    if 'out_of_order_cache_sz' not in settings:\n-        settings['out_of_order_cache_sz'] = 100 * 1000 * 1000\n-    if 'debug_output' not in settings:\n-        settings['debug_output'] = 'false'\n-\n-    settings['max_out_sz'] = int(settings['max_out_sz'])\n-    settings['split_timestamp'] = int(settings['split_timestamp'])\n-    settings['file_timestamp'] = int(settings['file_timestamp'])\n-    settings['netmagic'] = unhexlify(settings['netmagic'].encode('utf-8'))\n-    settings['out_of_order_cache_sz'] = int(settings['out_of_order_cache_sz'])\n-    settings['debug_output'] = settings['debug_output'].lower()\n-\n-    if 'output_file' not in settings and 'output' not in settings:\n-        print(\"Missing output file / directory\")\n-        sys.exit(1)\n-\n-    blkindex = get_block_hashes(settings)\n-    blkmap = mkblockmap(blkindex)\n-\n-    # Block hash map won't be byte-reversed. Neither should the genesis hash.\n-    if not settings['genesis'] in blkmap:\n-        print(\"Genesis block not found in hashlist\")\n-    else:\n-        BlockDataCopier(settings, blkindex, blkmap).run()"
      },
      {
        "sha": "fed6e665b8c934e26729f5cfe192f95f27870754",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "removed",
        "additions": 0,
        "deletions": 152,
        "changes": 152,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,152 +0,0 @@\n-#!/usr/bin/env python3\n-#\n-# linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n-#\n-# Copyright (c) 2013-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-\n-from http.client import HTTPConnection\n-import json\n-import re\n-import base64\n-import sys\n-import os\n-import os.path\n-\n-settings = {}\n-\n-def hex_switchEndian(s):\n-    \"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n-    pairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n-    return b''.join(pairList[::-1]).decode()\n-\n-class BitcoinRPC:\n-    def __init__(self, host, port, username, password):\n-        authpair = \"%s:%s\" % (username, password)\n-        authpair = authpair.encode('utf-8')\n-        self.authhdr = b\"Basic \" + base64.b64encode(authpair)\n-        self.conn = HTTPConnection(host, port=port, timeout=30)\n-\n-    def execute(self, obj):\n-        try:\n-            self.conn.request('POST', '/', json.dumps(obj),\n-                { 'Authorization' : self.authhdr,\n-                  'Content-type' : 'application/json' })\n-        except ConnectionRefusedError:\n-            print('RPC connection refused. Check RPC settings and the server status.',\n-                  file=sys.stderr)\n-            return None\n-\n-        resp = self.conn.getresponse()\n-        if resp is None:\n-            print(\"JSON-RPC: no response\", file=sys.stderr)\n-            return None\n-\n-        body = resp.read().decode('utf-8')\n-        resp_obj = json.loads(body)\n-        return resp_obj\n-\n-    @staticmethod\n-    def build_request(idx, method, params):\n-        obj = { 'version' : '1.1',\n-            'method' : method,\n-            'id' : idx }\n-        if params is None:\n-            obj['params'] = []\n-        else:\n-            obj['params'] = params\n-        return obj\n-\n-    @staticmethod\n-    def response_is_error(resp_obj):\n-        return 'error' in resp_obj and resp_obj['error'] is not None\n-\n-def get_block_hashes(settings, max_blocks_per_call=10000):\n-    rpc = BitcoinRPC(settings['host'], settings['port'],\n-             settings['rpcuser'], settings['rpcpassword'])\n-\n-    height = settings['min_height']\n-    while height < settings['max_height']+1:\n-        num_blocks = min(settings['max_height']+1-height, max_blocks_per_call)\n-        batch = []\n-        for x in range(num_blocks):\n-            batch.append(rpc.build_request(x, 'getblockhash', [height + x]))\n-\n-        reply = rpc.execute(batch)\n-        if reply is None:\n-            print('Cannot continue. Program will halt.')\n-            return None\n-\n-        for x,resp_obj in enumerate(reply):\n-            if rpc.response_is_error(resp_obj):\n-                print('JSON-RPC: error at height', height+x, ': ', resp_obj['error'], file=sys.stderr)\n-                sys.exit(1)\n-            assert(resp_obj['id'] == x) # assume replies are in-sequence\n-            if settings['rev_hash_bytes'] == 'true':\n-                resp_obj['result'] = hex_switchEndian(resp_obj['result'])\n-            print(resp_obj['result'])\n-\n-        height += num_blocks\n-\n-def get_rpc_cookie():\n-    # Open the cookie file\n-    with open(os.path.join(os.path.expanduser(settings['datadir']), '.cookie'), 'r', encoding=\"ascii\") as f:\n-        combined = f.readline()\n-        combined_split = combined.split(\":\")\n-        settings['rpcuser'] = combined_split[0]\n-        settings['rpcpassword'] = combined_split[1]\n-\n-if __name__ == '__main__':\n-    if len(sys.argv) != 2:\n-        print(\"Usage: linearize-hashes.py CONFIG-FILE\")\n-        sys.exit(1)\n-\n-    f = open(sys.argv[1], encoding=\"utf8\")\n-    for line in f:\n-        # skip comment lines\n-        m = re.search(r'^\\s*#', line)\n-        if m:\n-            continue\n-\n-        # parse key=value lines\n-        m = re.search(r'^(\\w+)\\s*=\\s*(\\S.*)$', line)\n-        if m is None:\n-            continue\n-        settings[m.group(1)] = m.group(2)\n-    f.close()\n-\n-    if 'host' not in settings:\n-        settings['host'] = '127.0.0.1'\n-    if 'port' not in settings:\n-        settings['port'] = 8332\n-    if 'min_height' not in settings:\n-        settings['min_height'] = 0\n-    if 'max_height' not in settings:\n-        settings['max_height'] = 313000\n-    if 'rev_hash_bytes' not in settings:\n-        settings['rev_hash_bytes'] = 'false'\n-\n-    use_userpass = True\n-    use_datadir = False\n-    if 'rpcuser' not in settings or 'rpcpassword' not in settings:\n-        use_userpass = False\n-    if 'datadir' in settings and not use_userpass:\n-        use_datadir = True\n-    if not use_userpass and not use_datadir:\n-        print(\"Missing datadir or username and/or password in cfg file\", file=sys.stderr)\n-        sys.exit(1)\n-\n-    settings['port'] = int(settings['port'])\n-    settings['min_height'] = int(settings['min_height'])\n-    settings['max_height'] = int(settings['max_height'])\n-\n-    # Force hash byte format setting to be lowercase to make comparisons easier.\n-    settings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n-\n-    # Get the rpc user and pass from the cookie if the datadir is set\n-    if use_datadir:\n-        get_rpc_cookie()\n-\n-    get_block_hashes(settings)"
      },
      {
        "sha": "94a9ed024d3859793618152ea559a168bbcbb5e2",
        "filename": "contrib/macdeploy/LICENSE",
        "status": "removed",
        "additions": 0,
        "deletions": 674,
        "changes": 674,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/macdeploy/LICENSE",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/macdeploy/LICENSE",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/LICENSE?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,674 +0,0 @@\n-                    GNU GENERAL PUBLIC LICENSE\n-                       Version 3, 29 June 2007\n-\n- Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n- Everyone is permitted to copy and distribute verbatim copies\n- of this license document, but changing it is not allowed.\n-\n-                            Preamble\n-\n-  The GNU General Public License is a free, copyleft license for\n-software and other kinds of works.\n-\n-  The licenses for most software and other practical works are designed\n-to take away your freedom to share and change the works.  By contrast,\n-the GNU General Public License is intended to guarantee your freedom to\n-share and change all versions of a program--to make sure it remains free\n-software for all its users.  We, the Free Software Foundation, use the\n-GNU General Public License for most of our software; it applies also to\n-any other work released this way by its authors.  You can apply it to\n-your programs, too.\n-\n-  When we speak of free software, we are referring to freedom, not\n-price.  Our General Public Licenses are designed to make sure that you\n-have the freedom to distribute copies of free software (and charge for\n-them if you wish), that you receive source code or can get it if you\n-want it, that you can change the software or use pieces of it in new\n-free programs, and that you know you can do these things.\n-\n-  To protect your rights, we need to prevent others from denying you\n-these rights or asking you to surrender the rights.  Therefore, you have\n-certain responsibilities if you distribute copies of the software, or if\n-you modify it: responsibilities to respect the freedom of others.\n-\n-  For example, if you distribute copies of such a program, whether\n-gratis or for a fee, you must pass on to the recipients the same\n-freedoms that you received.  You must make sure that they, too, receive\n-or can get the source code.  And you must show them these terms so they\n-know their rights.\n-\n-  Developers that use the GNU GPL protect your rights with two steps:\n-(1) assert copyright on the software, and (2) offer you this License\n-giving you legal permission to copy, distribute and/or modify it.\n-\n-  For the developers' and authors' protection, the GPL clearly explains\n-that there is no warranty for this free software.  For both users' and\n-authors' sake, the GPL requires that modified versions be marked as\n-changed, so that their problems will not be attributed erroneously to\n-authors of previous versions.\n-\n-  Some devices are designed to deny users access to install or run\n-modified versions of the software inside them, although the manufacturer\n-can do so.  This is fundamentally incompatible with the aim of\n-protecting users' freedom to change the software.  The systematic\n-pattern of such abuse occurs in the area of products for individuals to\n-use, which is precisely where it is most unacceptable.  Therefore, we\n-have designed this version of the GPL to prohibit the practice for those\n-products.  If such problems arise substantially in other domains, we\n-stand ready to extend this provision to those domains in future versions\n-of the GPL, as needed to protect the freedom of users.\n-\n-  Finally, every program is threatened constantly by software patents.\n-States should not allow patents to restrict development and use of\n-software on general-purpose computers, but in those that do, we wish to\n-avoid the special danger that patents applied to a free program could\n-make it effectively proprietary.  To prevent this, the GPL assures that\n-patents cannot be used to render the program non-free.\n-\n-  The precise terms and conditions for copying, distribution and\n-modification follow.\n-\n-                       TERMS AND CONDITIONS\n-\n-  0. Definitions.\n-\n-  \"This License\" refers to version 3 of the GNU General Public License.\n-\n-  \"Copyright\" also means copyright-like laws that apply to other kinds of\n-works, such as semiconductor masks.\n-\n-  \"The Program\" refers to any copyrightable work licensed under this\n-License.  Each licensee is addressed as \"you\".  \"Licensees\" and\n-\"recipients\" may be individuals or organizations.\n-\n-  To \"modify\" a work means to copy from or adapt all or part of the work\n-in a fashion requiring copyright permission, other than the making of an\n-exact copy.  The resulting work is called a \"modified version\" of the\n-earlier work or a work \"based on\" the earlier work.\n-\n-  A \"covered work\" means either the unmodified Program or a work based\n-on the Program.\n-\n-  To \"propagate\" a work means to do anything with it that, without\n-permission, would make you directly or secondarily liable for\n-infringement under applicable copyright law, except executing it on a\n-computer or modifying a private copy.  Propagation includes copying,\n-distribution (with or without modification), making available to the\n-public, and in some countries other activities as well.\n-\n-  To \"convey\" a work means any kind of propagation that enables other\n-parties to make or receive copies.  Mere interaction with a user through\n-a computer network, with no transfer of a copy, is not conveying.\n-\n-  An interactive user interface displays \"Appropriate Legal Notices\"\n-to the extent that it includes a convenient and prominently visible\n-feature that (1) displays an appropriate copyright notice, and (2)\n-tells the user that there is no warranty for the work (except to the\n-extent that warranties are provided), that licensees may convey the\n-work under this License, and how to view a copy of this License.  If\n-the interface presents a list of user commands or options, such as a\n-menu, a prominent item in the list meets this criterion.\n-\n-  1. Source Code.\n-\n-  The \"source code\" for a work means the preferred form of the work\n-for making modifications to it.  \"Object code\" means any non-source\n-form of a work.\n-\n-  A \"Standard Interface\" means an interface that either is an official\n-standard defined by a recognized standards body, or, in the case of\n-interfaces specified for a particular programming language, one that\n-is widely used among developers working in that language.\n-\n-  The \"System Libraries\" of an executable work include anything, other\n-than the work as a whole, that (a) is included in the normal form of\n-packaging a Major Component, but which is not part of that Major\n-Component, and (b) serves only to enable use of the work with that\n-Major Component, or to implement a Standard Interface for which an\n-implementation is available to the public in source code form.  A\n-\"Major Component\", in this context, means a major essential component\n-(kernel, window system, and so on) of the specific operating system\n-(if any) on which the executable work runs, or a compiler used to\n-produce the work, or an object code interpreter used to run it.\n-\n-  The \"Corresponding Source\" for a work in object code form means all\n-the source code needed to generate, install, and (for an executable\n-work) run the object code and to modify the work, including scripts to\n-control those activities.  However, it does not include the work's\n-System Libraries, or general-purpose tools or generally available free\n-programs which are used unmodified in performing those activities but\n-which are not part of the work.  For example, Corresponding Source\n-includes interface definition files associated with source files for\n-the work, and the source code for shared libraries and dynamically\n-linked subprograms that the work is specifically designed to require,\n-such as by intimate data communication or control flow between those\n-subprograms and other parts of the work.\n-\n-  The Corresponding Source need not include anything that users\n-can regenerate automatically from other parts of the Corresponding\n-Source.\n-\n-  The Corresponding Source for a work in source code form is that\n-same work.\n-\n-  2. Basic Permissions.\n-\n-  All rights granted under this License are granted for the term of\n-copyright on the Program, and are irrevocable provided the stated\n-conditions are met.  This License explicitly affirms your unlimited\n-permission to run the unmodified Program.  The output from running a\n-covered work is covered by this License only if the output, given its\n-content, constitutes a covered work.  This License acknowledges your\n-rights of fair use or other equivalent, as provided by copyright law.\n-\n-  You may make, run and propagate covered works that you do not\n-convey, without conditions so long as your license otherwise remains\n-in force.  You may convey covered works to others for the sole purpose\n-of having them make modifications exclusively for you, or provide you\n-with facilities for running those works, provided that you comply with\n-the terms of this License in conveying all material for which you do\n-not control copyright.  Those thus making or running the covered works\n-for you must do so exclusively on your behalf, under your direction\n-and control, on terms that prohibit them from making any copies of\n-your copyrighted material outside their relationship with you.\n-\n-  Conveying under any other circumstances is permitted solely under\n-the conditions stated below.  Sublicensing is not allowed; section 10\n-makes it unnecessary.\n-\n-  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n-\n-  No covered work shall be deemed part of an effective technological\n-measure under any applicable law fulfilling obligations under article\n-11 of the WIPO copyright treaty adopted on 20 December 1996, or\n-similar laws prohibiting or restricting circumvention of such\n-measures.\n-\n-  When you convey a covered work, you waive any legal power to forbid\n-circumvention of technological measures to the extent such circumvention\n-is effected by exercising rights under this License with respect to\n-the covered work, and you disclaim any intention to limit operation or\n-modification of the work as a means of enforcing, against the work's\n-users, your or third parties' legal rights to forbid circumvention of\n-technological measures.\n-\n-  4. Conveying Verbatim Copies.\n-\n-  You may convey verbatim copies of the Program's source code as you\n-receive it, in any medium, provided that you conspicuously and\n-appropriately publish on each copy an appropriate copyright notice;\n-keep intact all notices stating that this License and any\n-non-permissive terms added in accord with section 7 apply to the code;\n-keep intact all notices of the absence of any warranty; and give all\n-recipients a copy of this License along with the Program.\n-\n-  You may charge any price or no price for each copy that you convey,\n-and you may offer support or warranty protection for a fee.\n-\n-  5. Conveying Modified Source Versions.\n-\n-  You may convey a work based on the Program, or the modifications to\n-produce it from the Program, in the form of source code under the\n-terms of section 4, provided that you also meet all of these conditions:\n-\n-    a) The work must carry prominent notices stating that you modified\n-    it, and giving a relevant date.\n-\n-    b) The work must carry prominent notices stating that it is\n-    released under this License and any conditions added under section\n-    7.  This requirement modifies the requirement in section 4 to\n-    \"keep intact all notices\".\n-\n-    c) You must license the entire work, as a whole, under this\n-    License to anyone who comes into possession of a copy.  This\n-    License will therefore apply, along with any applicable section 7\n-    additional terms, to the whole of the work, and all its parts,\n-    regardless of how they are packaged.  This License gives no\n-    permission to license the work in any other way, but it does not\n-    invalidate such permission if you have separately received it.\n-\n-    d) If the work has interactive user interfaces, each must display\n-    Appropriate Legal Notices; however, if the Program has interactive\n-    interfaces that do not display Appropriate Legal Notices, your\n-    work need not make them do so.\n-\n-  A compilation of a covered work with other separate and independent\n-works, which are not by their nature extensions of the covered work,\n-and which are not combined with it such as to form a larger program,\n-in or on a volume of a storage or distribution medium, is called an\n-\"aggregate\" if the compilation and its resulting copyright are not\n-used to limit the access or legal rights of the compilation's users\n-beyond what the individual works permit.  Inclusion of a covered work\n-in an aggregate does not cause this License to apply to the other\n-parts of the aggregate.\n-\n-  6. Conveying Non-Source Forms.\n-\n-  You may convey a covered work in object code form under the terms\n-of sections 4 and 5, provided that you also convey the\n-machine-readable Corresponding Source under the terms of this License,\n-in one of these ways:\n-\n-    a) Convey the object code in, or embodied in, a physical product\n-    (including a physical distribution medium), accompanied by the\n-    Corresponding Source fixed on a durable physical medium\n-    customarily used for software interchange.\n-\n-    b) Convey the object code in, or embodied in, a physical product\n-    (including a physical distribution medium), accompanied by a\n-    written offer, valid for at least three years and valid for as\n-    long as you offer spare parts or customer support for that product\n-    model, to give anyone who possesses the object code either (1) a\n-    copy of the Corresponding Source for all the software in the\n-    product that is covered by this License, on a durable physical\n-    medium customarily used for software interchange, for a price no\n-    more than your reasonable cost of physically performing this\n-    conveying of source, or (2) access to copy the\n-    Corresponding Source from a network server at no charge.\n-\n-    c) Convey individual copies of the object code with a copy of the\n-    written offer to provide the Corresponding Source.  This\n-    alternative is allowed only occasionally and noncommercially, and\n-    only if you received the object code with such an offer, in accord\n-    with subsection 6b.\n-\n-    d) Convey the object code by offering access from a designated\n-    place (gratis or for a charge), and offer equivalent access to the\n-    Corresponding Source in the same way through the same place at no\n-    further charge.  You need not require recipients to copy the\n-    Corresponding Source along with the object code.  If the place to\n-    copy the object code is a network server, the Corresponding Source\n-    may be on a different server (operated by you or a third party)\n-    that supports equivalent copying facilities, provided you maintain\n-    clear directions next to the object code saying where to find the\n-    Corresponding Source.  Regardless of what server hosts the\n-    Corresponding Source, you remain obligated to ensure that it is\n-    available for as long as needed to satisfy these requirements.\n-\n-    e) Convey the object code using peer-to-peer transmission, provided\n-    you inform other peers where the object code and Corresponding\n-    Source of the work are being offered to the general public at no\n-    charge under subsection 6d.\n-\n-  A separable portion of the object code, whose source code is excluded\n-from the Corresponding Source as a System Library, need not be\n-included in conveying the object code work.\n-\n-  A \"User Product\" is either (1) a \"consumer product\", which means any\n-tangible personal property which is normally used for personal, family,\n-or household purposes, or (2) anything designed or sold for incorporation\n-into a dwelling.  In determining whether a product is a consumer product,\n-doubtful cases shall be resolved in favor of coverage.  For a particular\n-product received by a particular user, \"normally used\" refers to a\n-typical or common use of that class of product, regardless of the status\n-of the particular user or of the way in which the particular user\n-actually uses, or expects or is expected to use, the product.  A product\n-is a consumer product regardless of whether the product has substantial\n-commercial, industrial or non-consumer uses, unless such uses represent\n-the only significant mode of use of the product.\n-\n-  \"Installation Information\" for a User Product means any methods,\n-procedures, authorization keys, or other information required to install\n-and execute modified versions of a covered work in that User Product from\n-a modified version of its Corresponding Source.  The information must\n-suffice to ensure that the continued functioning of the modified object\n-code is in no case prevented or interfered with solely because\n-modification has been made.\n-\n-  If you convey an object code work under this section in, or with, or\n-specifically for use in, a User Product, and the conveying occurs as\n-part of a transaction in which the right of possession and use of the\n-User Product is transferred to the recipient in perpetuity or for a\n-fixed term (regardless of how the transaction is characterized), the\n-Corresponding Source conveyed under this section must be accompanied\n-by the Installation Information.  But this requirement does not apply\n-if neither you nor any third party retains the ability to install\n-modified object code on the User Product (for example, the work has\n-been installed in ROM).\n-\n-  The requirement to provide Installation Information does not include a\n-requirement to continue to provide support service, warranty, or updates\n-for a work that has been modified or installed by the recipient, or for\n-the User Product in which it has been modified or installed.  Access to a\n-network may be denied when the modification itself materially and\n-adversely affects the operation of the network or violates the rules and\n-protocols for communication across the network.\n-\n-  Corresponding Source conveyed, and Installation Information provided,\n-in accord with this section must be in a format that is publicly\n-documented (and with an implementation available to the public in\n-source code form), and must require no special password or key for\n-unpacking, reading or copying.\n-\n-  7. Additional Terms.\n-\n-  \"Additional permissions\" are terms that supplement the terms of this\n-License by making exceptions from one or more of its conditions.\n-Additional permissions that are applicable to the entire Program shall\n-be treated as though they were included in this License, to the extent\n-that they are valid under applicable law.  If additional permissions\n-apply only to part of the Program, that part may be used separately\n-under those permissions, but the entire Program remains governed by\n-this License without regard to the additional permissions.\n-\n-  When you convey a copy of a covered work, you may at your option\n-remove any additional permissions from that copy, or from any part of\n-it.  (Additional permissions may be written to require their own\n-removal in certain cases when you modify the work.)  You may place\n-additional permissions on material, added by you to a covered work,\n-for which you have or can give appropriate copyright permission.\n-\n-  Notwithstanding any other provision of this License, for material you\n-add to a covered work, you may (if authorized by the copyright holders of\n-that material) supplement the terms of this License with terms:\n-\n-    a) Disclaiming warranty or limiting liability differently from the\n-    terms of sections 15 and 16 of this License; or\n-\n-    b) Requiring preservation of specified reasonable legal notices or\n-    author attributions in that material or in the Appropriate Legal\n-    Notices displayed by works containing it; or\n-\n-    c) Prohibiting misrepresentation of the origin of that material, or\n-    requiring that modified versions of such material be marked in\n-    reasonable ways as different from the original version; or\n-\n-    d) Limiting the use for publicity purposes of names of licensors or\n-    authors of the material; or\n-\n-    e) Declining to grant rights under trademark law for use of some\n-    trade names, trademarks, or service marks; or\n-\n-    f) Requiring indemnification of licensors and authors of that\n-    material by anyone who conveys the material (or modified versions of\n-    it) with contractual assumptions of liability to the recipient, for\n-    any liability that these contractual assumptions directly impose on\n-    those licensors and authors.\n-\n-  All other non-permissive additional terms are considered \"further\n-restrictions\" within the meaning of section 10.  If the Program as you\n-received it, or any part of it, contains a notice stating that it is\n-governed by this License along with a term that is a further\n-restriction, you may remove that term.  If a license document contains\n-a further restriction but permits relicensing or conveying under this\n-License, you may add to a covered work material governed by the terms\n-of that license document, provided that the further restriction does\n-not survive such relicensing or conveying.\n-\n-  If you add terms to a covered work in accord with this section, you\n-must place, in the relevant source files, a statement of the\n-additional terms that apply to those files, or a notice indicating\n-where to find the applicable terms.\n-\n-  Additional terms, permissive or non-permissive, may be stated in the\n-form of a separately written license, or stated as exceptions;\n-the above requirements apply either way.\n-\n-  8. Termination.\n-\n-  You may not propagate or modify a covered work except as expressly\n-provided under this License.  Any attempt otherwise to propagate or\n-modify it is void, and will automatically terminate your rights under\n-this License (including any patent licenses granted under the third\n-paragraph of section 11).\n-\n-  However, if you cease all violation of this License, then your\n-license from a particular copyright holder is reinstated (a)\n-provisionally, unless and until the copyright holder explicitly and\n-finally terminates your license, and (b) permanently, if the copyright\n-holder fails to notify you of the violation by some reasonable means\n-prior to 60 days after the cessation.\n-\n-  Moreover, your license from a particular copyright holder is\n-reinstated permanently if the copyright holder notifies you of the\n-violation by some reasonable means, this is the first time you have\n-received notice of violation of this License (for any work) from that\n-copyright holder, and you cure the violation prior to 30 days after\n-your receipt of the notice.\n-\n-  Termination of your rights under this section does not terminate the\n-licenses of parties who have received copies or rights from you under\n-this License.  If your rights have been terminated and not permanently\n-reinstated, you do not qualify to receive new licenses for the same\n-material under section 10.\n-\n-  9. Acceptance Not Required for Having Copies.\n-\n-  You are not required to accept this License in order to receive or\n-run a copy of the Program.  Ancillary propagation of a covered work\n-occurring solely as a consequence of using peer-to-peer transmission\n-to receive a copy likewise does not require acceptance.  However,\n-nothing other than this License grants you permission to propagate or\n-modify any covered work.  These actions infringe copyright if you do\n-not accept this License.  Therefore, by modifying or propagating a\n-covered work, you indicate your acceptance of this License to do so.\n-\n-  10. Automatic Licensing of Downstream Recipients.\n-\n-  Each time you convey a covered work, the recipient automatically\n-receives a license from the original licensors, to run, modify and\n-propagate that work, subject to this License.  You are not responsible\n-for enforcing compliance by third parties with this License.\n-\n-  An \"entity transaction\" is a transaction transferring control of an\n-organization, or substantially all assets of one, or subdividing an\n-organization, or merging organizations.  If propagation of a covered\n-work results from an entity transaction, each party to that\n-transaction who receives a copy of the work also receives whatever\n-licenses to the work the party's predecessor in interest had or could\n-give under the previous paragraph, plus a right to possession of the\n-Corresponding Source of the work from the predecessor in interest, if\n-the predecessor has it or can get it with reasonable efforts.\n-\n-  You may not impose any further restrictions on the exercise of the\n-rights granted or affirmed under this License.  For example, you may\n-not impose a license fee, royalty, or other charge for exercise of\n-rights granted under this License, and you may not initiate litigation\n-(including a cross-claim or counterclaim in a lawsuit) alleging that\n-any patent claim is infringed by making, using, selling, offering for\n-sale, or importing the Program or any portion of it.\n-\n-  11. Patents.\n-\n-  A \"contributor\" is a copyright holder who authorizes use under this\n-License of the Program or a work on which the Program is based.  The\n-work thus licensed is called the contributor's \"contributor version\".\n-\n-  A contributor's \"essential patent claims\" are all patent claims\n-owned or controlled by the contributor, whether already acquired or\n-hereafter acquired, that would be infringed by some manner, permitted\n-by this License, of making, using, or selling its contributor version,\n-but do not include claims that would be infringed only as a\n-consequence of further modification of the contributor version.  For\n-purposes of this definition, \"control\" includes the right to grant\n-patent sublicenses in a manner consistent with the requirements of\n-this License.\n-\n-  Each contributor grants you a non-exclusive, worldwide, royalty-free\n-patent license under the contributor's essential patent claims, to\n-make, use, sell, offer for sale, import and otherwise run, modify and\n-propagate the contents of its contributor version.\n-\n-  In the following three paragraphs, a \"patent license\" is any express\n-agreement or commitment, however denominated, not to enforce a patent\n-(such as an express permission to practice a patent or covenant not to\n-sue for patent infringement).  To \"grant\" such a patent license to a\n-party means to make such an agreement or commitment not to enforce a\n-patent against the party.\n-\n-  If you convey a covered work, knowingly relying on a patent license,\n-and the Corresponding Source of the work is not available for anyone\n-to copy, free of charge and under the terms of this License, through a\n-publicly available network server or other readily accessible means,\n-then you must either (1) cause the Corresponding Source to be so\n-available, or (2) arrange to deprive yourself of the benefit of the\n-patent license for this particular work, or (3) arrange, in a manner\n-consistent with the requirements of this License, to extend the patent\n-license to downstream recipients.  \"Knowingly relying\" means you have\n-actual knowledge that, but for the patent license, your conveying the\n-covered work in a country, or your recipient's use of the covered work\n-in a country, would infringe one or more identifiable patents in that\n-country that you have reason to believe are valid.\n-\n-  If, pursuant to or in connection with a single transaction or\n-arrangement, you convey, or propagate by procuring conveyance of, a\n-covered work, and grant a patent license to some of the parties\n-receiving the covered work authorizing them to use, propagate, modify\n-or convey a specific copy of the covered work, then the patent license\n-you grant is automatically extended to all recipients of the covered\n-work and works based on it.\n-\n-  A patent license is \"discriminatory\" if it does not include within\n-the scope of its coverage, prohibits the exercise of, or is\n-conditioned on the non-exercise of one or more of the rights that are\n-specifically granted under this License.  You may not convey a covered\n-work if you are a party to an arrangement with a third party that is\n-in the business of distributing software, under which you make payment\n-to the third party based on the extent of your activity of conveying\n-the work, and under which the third party grants, to any of the\n-parties who would receive the covered work from you, a discriminatory\n-patent license (a) in connection with copies of the covered work\n-conveyed by you (or copies made from those copies), or (b) primarily\n-for and in connection with specific products or compilations that\n-contain the covered work, unless you entered into that arrangement,\n-or that patent license was granted, prior to 28 March 2007.\n-\n-  Nothing in this License shall be construed as excluding or limiting\n-any implied license or other defenses to infringement that may\n-otherwise be available to you under applicable patent law.\n-\n-  12. No Surrender of Others' Freedom.\n-\n-  If conditions are imposed on you (whether by court order, agreement or\n-otherwise) that contradict the conditions of this License, they do not\n-excuse you from the conditions of this License.  If you cannot convey a\n-covered work so as to satisfy simultaneously your obligations under this\n-License and any other pertinent obligations, then as a consequence you may\n-not convey it at all.  For example, if you agree to terms that obligate you\n-to collect a royalty for further conveying from those to whom you convey\n-the Program, the only way you could satisfy both those terms and this\n-License would be to refrain entirely from conveying the Program.\n-\n-  13. Use with the GNU Affero General Public License.\n-\n-  Notwithstanding any other provision of this License, you have\n-permission to link or combine any covered work with a work licensed\n-under version 3 of the GNU Affero General Public License into a single\n-combined work, and to convey the resulting work.  The terms of this\n-License will continue to apply to the part which is the covered work,\n-but the special requirements of the GNU Affero General Public License,\n-section 13, concerning interaction through a network will apply to the\n-combination as such.\n-\n-  14. Revised Versions of this License.\n-\n-  The Free Software Foundation may publish revised and/or new versions of\n-the GNU General Public License from time to time.  Such new versions will\n-be similar in spirit to the present version, but may differ in detail to\n-address new problems or concerns.\n-\n-  Each version is given a distinguishing version number.  If the\n-Program specifies that a certain numbered version of the GNU General\n-Public License \"or any later version\" applies to it, you have the\n-option of following the terms and conditions either of that numbered\n-version or of any later version published by the Free Software\n-Foundation.  If the Program does not specify a version number of the\n-GNU General Public License, you may choose any version ever published\n-by the Free Software Foundation.\n-\n-  If the Program specifies that a proxy can decide which future\n-versions of the GNU General Public License can be used, that proxy's\n-public statement of acceptance of a version permanently authorizes you\n-to choose that version for the Program.\n-\n-  Later license versions may give you additional or different\n-permissions.  However, no additional obligations are imposed on any\n-author or copyright holder as a result of your choosing to follow a\n-later version.\n-\n-  15. Disclaimer of Warranty.\n-\n-  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\n-APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\n-HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\n-OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\n-THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n-PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\n-IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\n-ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n-\n-  16. Limitation of Liability.\n-\n-  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\n-WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\n-THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\n-GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\n-USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\n-DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\n-PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\n-EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\n-SUCH DAMAGES.\n-\n-  17. Interpretation of Sections 15 and 16.\n-\n-  If the disclaimer of warranty and limitation of liability provided\n-above cannot be given local legal effect according to their terms,\n-reviewing courts shall apply local law that most closely approximates\n-an absolute waiver of all civil liability in connection with the\n-Program, unless a warranty or assumption of liability accompanies a\n-copy of the Program in return for a fee.\n-\n-                     END OF TERMS AND CONDITIONS\n-\n-            How to Apply These Terms to Your New Programs\n-\n-  If you develop a new program, and you want it to be of the greatest\n-possible use to the public, the best way to achieve this is to make it\n-free software which everyone can redistribute and change under these terms.\n-\n-  To do so, attach the following notices to the program.  It is safest\n-to attach them to the start of each source file to most effectively\n-state the exclusion of warranty; and each file should have at least\n-the \"copyright\" line and a pointer to where the full notice is found.\n-\n-    <one line to give the program's name and a brief idea of what it does.>\n-    Copyright (C) <year>  <name of author>\n-\n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation, either version 3 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-\n-Also add information on how to contact you by electronic and paper mail.\n-\n-  If the program does terminal interaction, make it output a short\n-notice like this when it starts in an interactive mode:\n-\n-    <program>  Copyright (C) <year>  <name of author>\n-    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n-    This is free software, and you are welcome to redistribute it\n-    under certain conditions; type `show c' for details.\n-\n-The hypothetical commands `show w' and `show c' should show the appropriate\n-parts of the General Public License.  Of course, your program's commands\n-might be different; for a GUI interface, you would use an \"about box\".\n-\n-  You should also get your employer (if you work as a programmer) or school,\n-if any, to sign a \"copyright disclaimer\" for the program, if necessary.\n-For more information on this, and how to apply and follow the GNU GPL, see\n-<http://www.gnu.org/licenses/>.\n-\n-  The GNU General Public License does not permit incorporating your program\n-into proprietary programs.  If your program is a subroutine library, you\n-may consider it more useful to permit linking proprietary applications with\n-the library.  If this is what you want to do, use the GNU Lesser General\n-Public License instead of this License.  But first, please read\n-<http://www.gnu.org/philosophy/why-not-lgpl.html>."
      },
      {
        "sha": "fe677e3a1f89aa961079b8b711f933b8f9009e4f",
        "filename": "contrib/macdeploy/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 128,
        "changes": 128,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,128 +0,0 @@\n-# MacOS Deployment\n-\n-The `macdeployqtplus` script should not be run manually. Instead, after building as usual:\n-\n-```bash\n-make deploy\n-```\n-\n-During the deployment process, the disk image window will pop up briefly\n-when the fancy settings are applied. This is normal, please do not interfere,\n-the process will unmount the DMG and cleanup before finishing.\n-\n-When complete, it will have produced `Bitcoin-Qt.dmg`.\n-\n-## SDK Extraction\n-\n-### Step 1: Obtaining `Xcode.app`\n-\n-Our current macOS SDK\n-(`Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz`) can be\n-extracted from\n-[Xcode_11.3.1.xip](https://download.developer.apple.com/Developer_Tools/Xcode_11.3.1/Xcode_11.3.1.xip).\n-An Apple ID is needed to download this.\n-\n-After Xcode version 7.x, Apple started shipping the `Xcode.app` in a `.xip`\n-archive. This makes the SDK less-trivial to extract on non-macOS machines. One\n-approach (tested on Debian Buster) is outlined below:\n-\n-```bash\n-# Install/clone tools needed for extracting Xcode.app\n-apt install cpio\n-git clone https://github.com/bitcoin-core/apple-sdk-tools.git\n-\n-# Unpack Xcode_11.3.1.xip and place the resulting Xcode.app in your current\n-# working directory\n-python3 apple-sdk-tools/extract_xcode.py -f Xcode_11.3.1.xip | cpio -d -i\n-```\n-\n-On macOS the process is more straightforward:\n-\n-```bash\n-xip -x Xcode_11.3.1.xip\n-```\n-\n-### Step 2: Generating `Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz` from `Xcode.app`\n-\n-To generate `Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz`, run\n-the script [`gen-sdk`](./gen-sdk) with the path to `Xcode.app` (extracted in the\n-previous stage) as the first argument.\n-\n-```bash\n-# Generate a Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz from\n-# the supplied Xcode.app\n-./contrib/macdeploy/gen-sdk '/path/to/Xcode.app'\n-```\n-\n-## Deterministic macOS DMG Notes\n-Working macOS DMGs are created in Linux by combining a recent `clang`, the Apple\n-`binutils` (`ld`, `ar`, etc) and DMG authoring tools.\n-\n-Apple uses `clang` extensively for development and has upstreamed the necessary\n-functionality so that a vanilla clang can take advantage. It supports the use of `-F`,\n-`-target`, `-mmacosx-version-min`, and `--sysroot`, which are all necessary when\n-building for macOS.\n-\n-Apple's version of `binutils` (called `cctools`) contains lots of functionality missing in the\n-FSF's `binutils`. In addition to extra linker options for frameworks and sysroots, several\n-other tools are needed as well such as `install_name_tool`, `lipo`, and `nmedit`. These\n-do not build under Linux, so they have been patched to do so. The work here was used as\n-a starting point: [mingwandroid/toolchain4](https://github.com/mingwandroid/toolchain4).\n-\n-In order to build a working toolchain, the following source packages are needed from\n-Apple: `cctools`, `dyld`, and `ld64`.\n-\n-These tools inject timestamps by default, which produce non-deterministic binaries. The\n-`ZERO_AR_DATE` environment variable is used to disable that.\n-\n-This version of `cctools` has been patched to use the current version of `clang`'s headers\n-and its `libLTO.so` rather than those from `llvmgcc`, as it was originally done in `toolchain4`.\n-\n-To complicate things further, all builds must target an Apple SDK. These SDKs are free to\n-download, but not redistributable. To obtain it, register for an Apple Developer Account,\n-then download [Xcode_11.3.1](https://download.developer.apple.com/Developer_Tools/Xcode_11.3.1/Xcode_11.3.1.xip).\n-\n-This file is many gigabytes in size, but most (but not all) of what we need is\n-contained only in a single directory:\n-\n-```bash\n-Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk\n-```\n-\n-See the SDK Extraction notes above for how to obtain it.\n-\n-The Gitian descriptors build 2 sets of files: Linux tools, then Apple binaries which are\n-created using these tools. The build process has been designed to avoid including the\n-SDK's files in Gitian's outputs. All interim tarballs are fully deterministic and may be freely\n-redistributed.\n-\n-`genisoimage` is used to create the initial DMG. It is not deterministic as-is, so it has been\n-patched. A system `genisoimage` will work fine, but it will not be deterministic because\n-the file-order will change between invocations. The patch can be seen here: [cdrkit-deterministic.patch](https://github.com/bitcoin/bitcoin/blob/master/depends/patches/native_cdrkit/cdrkit-deterministic.patch).\n-No effort was made to fix this cleanly, so it likely leaks memory badly, however it's only used for\n-a single invocation, so that's no real concern.\n-\n-`genisoimage` cannot compress DMGs, so afterwards, the DMG tool from the\n-`libdmg-hfsplus` project is used to compress it. There are several bugs in this tool and its\n-maintainer has seemingly abandoned the project.\n-\n-The DMG tool has the ability to create DMGs from scratch as well, but this functionality is\n-broken. Only the compression feature is currently used. Ideally, the creation could be fixed\n-and `genisoimage` would no longer be necessary.\n-\n-Background images and other features can be added to DMG files by inserting a\n-`.DS_Store` before creation. This is generated by the script `contrib/macdeploy/custom_dsstore.py`.\n-\n-As of OS X 10.9 Mavericks, using an Apple-blessed key to sign binaries is a requirement in\n-order to satisfy the new Gatekeeper requirements. Because this private key cannot be\n-shared, we'll have to be a bit creative in order for the build process to remain somewhat\n-deterministic. Here's how it works:\n-\n-- Builders use Gitian to create an unsigned release. This outputs an unsigned DMG which\n-  users may choose to bless and run. It also outputs an unsigned app structure in the form\n-  of a tarball, which also contains all of the tools that have been previously (deterministically)\n-  built in order to create a final DMG.\n-- The Apple keyholder uses this unsigned app to create a detached signature, using the\n-  script that is also included there. Detached signatures are available from this [repository](https://github.com/bitcoin-core/bitcoin-detached-sigs).\n-- Builders feed the unsigned app + detached signature back into Gitian. It uses the\n-  pre-built tools to recombine the pieces into a deterministic DMG."
      },
      {
        "sha": "9c330af45142e011e78b4b86874ac4b3457ed457",
        "filename": "contrib/macdeploy/background.svg",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/macdeploy/background.svg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/macdeploy/background.svg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.svg?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,34 +0,0 @@\n-<?xml version=\"1.0\" standalone=\"no\"?>\n-<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 20010904//EN\"\n- \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">\n-<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1000pt\" height=\"640pt\" viewBox=\"0 0 1000 640\" preserveAspectRatio=\"xMidYMid meet\">\n-\t<!-- kate: space-indent off;\n-\tCopyright (c) 2015 The Bitcoin Core developers\n-\tDistributed under the MIT software license, see the accompanying\n-\tfile COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\t-->\n-\t<style type=\"text/css\"><![CDATA[\n-\t\ttext {\n-\t\t\tfont-family: \"Tuffy\";\n-\t\t\tfont-size: 86px;\n-\t\t\tfill: gray;\n-\t\t\ttext-anchor: middle;\n-\t\t}\n-\t]]></style>\n-\t<defs>\n-\t\t<linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n-\t\t\t<stop offset=\"0%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n-\t\t\t<stop offset=\"33%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n-\t\t\t<stop offset=\"80%\" style=\"stop-color:rgb(205,205,205);stop-opacity:1\" />\n-\t\t\t<stop offset=\"100%\" style=\"stop-color:rgb(204,204,204);stop-opacity:1\" />\n-\t\t</linearGradient>\n-\t</defs>\n-\t<rect width=\"1000\" height=\"640\" style=\"fill:url(#gradient);stroke-width:0\" />\n-\t<g transform=\"translate(500,0) scale(0.9, 1)\">\n-\t\t<text x=\"0\" y=\"114\">PACKAGE_NAME</text>\n-\t</g>\n-\t<g transform=\"translate(0.000000,640.000000) scale(0.100000,-0.100000)\"\n-\tfill=\"#000000\" stroke=\"none\">\n-\t\t<path d=\"M4995 3705 c-24 -23 -25 -29 -25 -165 l0 -140 -306 0 -306 0 -29 -29 c-29 -29 -29 -31 -29 -141 0 -110 0 -112 29 -141 l29 -29 306 0 306 0 0 -140 c0 -136 1 -142 25 -165 16 -17 35 -25 57 -25 29 0 72 32 306 226 180 149 274 233 278 250 13 53 -2 70 -278 299 -235 194 -277 225 -306 225 -22 0 -41 -8 -57 -25z\" fixlter=\"url(#glow)\"/>\n-\t</g>\n-</svg>"
      },
      {
        "sha": "dc1c1882dd5a21a5358c6f3a65e7c70e22e295a1",
        "filename": "contrib/macdeploy/custom_dsstore.py",
        "status": "removed",
        "additions": 0,
        "deletions": 59,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/macdeploy/custom_dsstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/macdeploy/custom_dsstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/custom_dsstore.py?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,59 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2013-2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-import biplist\n-from ds_store import DSStore\n-from mac_alias import Alias\n-import sys\n-\n-output_file = sys.argv[1]\n-package_name_ns = sys.argv[2]\n-\n-ds = DSStore.open(output_file, 'w+')\n-ds['.']['bwsp'] = {\n-    'ShowStatusBar': False,\n-    'WindowBounds': '{{300, 280}, {500, 343}}',\n-    'ContainerShowSidebar': False,\n-    'SidebarWidth': 0,\n-    'ShowTabView': False,\n-    'PreviewPaneVisibility': False,\n-    'ShowToolbar': False,\n-    'ShowSidebar': False,\n-    'ShowPathbar': True\n-}\n-\n-icvp = {\n-    'gridOffsetX': 0.0,\n-    'textSize': 12.0,\n-    'viewOptionsVersion': 1,\n-    'backgroundImageAlias': b'\\x00\\x00\\x00\\x00\\x02\\x1e\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd1\\x94\\\\\\xb0H+\\x00\\x05\\x00\\x00\\x00\\x98\\x0fbackground.tiff\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x99\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x00\\x00\\r\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b.background\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x98\\x00\\x0e\\x00 \\x00\\x0f\\x00b\\x00a\\x00c\\x00k\\x00g\\x00r\\x00o\\x00u\\x00n\\x00d\\x00.\\x00t\\x00i\\x00f\\x00f\\x00\\x0f\\x00\\x02\\x00\\x00\\x00\\x12\\x00\\x1c/.background/background.tiff\\x00\\x14\\x01\\x06\\x00\\x00\\x00\\x00\\x01\\x06\\x00\\x02\\x00\\x00\\x0cMacintosh HD\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xce\\x97\\xab\\xc3H+\\x00\\x00\\x01\\x88[\\x88\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02u\\xab\\x8d\\xd1\\x94\\\\\\xb0devrddsk\\xff\\xff\\xff\\xff\\x00\\x00\\t \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07bitcoin\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xce\\x97\\xab\\xc3\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x01\\x00\\x14\\x01\\x88[\\x88\\x00\\x16\\xa9\\t\\x00\\x08\\xfaR\\x00\\x08\\xfaQ\\x00\\x02d\\x8e\\x00\\x0e\\x00\\x02\\x00\\x00\\x00\\x0f\\x00\\x1a\\x00\\x0c\\x00M\\x00a\\x00c\\x00i\\x00n\\x00t\\x00o\\x00s\\x00h\\x00 \\x00H\\x00D\\x00\\x13\\x00\\x01/\\x00\\x00\\x15\\x00\\x02\\x00\\x14\\xff\\xff\\x00\\x00\\xff\\xff\\x00\\x00',\n-    'backgroundColorBlue': 1.0,\n-    'iconSize': 96.0,\n-    'backgroundColorGreen': 1.0,\n-    'arrangeBy': 'none',\n-    'showIconPreview': True,\n-    'gridSpacing': 100.0,\n-    'gridOffsetY': 0.0,\n-    'showItemInfo': False,\n-    'labelOnBottom': True,\n-    'backgroundType': 2,\n-    'backgroundColorRed': 1.0\n-}\n-alias = Alias.from_bytes(icvp['backgroundImageAlias'])\n-alias.volume.name = package_name_ns\n-alias.volume.posix_path = '/Volumes/' + package_name_ns\n-alias.volume.disk_image_alias.target.filename = package_name_ns + '.temp.dmg'\n-alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00bitcoinuser:\\x00Documents:\\x00bitcoin:\\x00bitcoin:\\x00' + package_name_ns + '.temp.dmg'\n-alias.volume.disk_image_alias.target.posix_path = 'Users/bitcoinuser/Documents/bitcoin/bitcoin/' + package_name_ns + '.temp.dmg'\n-alias.target.carbon_path = package_name_ns + ':.background:\\x00background.tiff'\n-icvp['backgroundImageAlias'] = biplist.Data(alias.to_bytes())\n-ds['.']['icvp'] = icvp\n-\n-ds['.']['vSrn'] = ('long', 1)\n-\n-ds['Applications']['Iloc'] = (370, 156)\n-ds['Bitcoin-Qt.app']['Iloc'] = (128, 156)\n-\n-ds.flush()\n-ds.close()"
      },
      {
        "sha": "5c5a85d3fe1861a4e5d3300faa04480f17846975",
        "filename": "contrib/macdeploy/detached-sig-apply.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 57,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/macdeploy/detached-sig-apply.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/macdeploy/detached-sig-apply.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-apply.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,57 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2014-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-set -e\n-\n-UNSIGNED=\"$1\"\n-SIGNATURE=\"$2\"\n-ARCH=x86_64\n-ROOTDIR=dist\n-TEMPDIR=signed.temp\n-OUTDIR=signed-app\n-\n-if [ -z \"$UNSIGNED\" ]; then\n-  echo \"usage: $0 <unsigned app> <signature>\"\n-  exit 1\n-fi\n-\n-if [ -z \"$SIGNATURE\" ]; then\n-  echo \"usage: $0 <unsigned app> <signature>\"\n-  exit 1\n-fi\n-\n-rm -rf ${TEMPDIR} && mkdir -p ${TEMPDIR}\n-tar -C ${TEMPDIR} -xf ${UNSIGNED}\n-cp -rf \"${SIGNATURE}\"/* ${TEMPDIR}\n-\n-if [ -z \"${PAGESTUFF}\" ]; then\n-  PAGESTUFF=${TEMPDIR}/pagestuff\n-fi\n-\n-if [ -z \"${CODESIGN_ALLOCATE}\" ]; then\n-  CODESIGN_ALLOCATE=${TEMPDIR}/codesign_allocate\n-fi\n-\n-find ${TEMPDIR} -name \"*.sign\" | while read i; do\n-  SIZE=$(stat -c %s \"${i}\")\n-  TARGET_FILE=\"$(echo \"${i}\" | sed 's/\\.sign$//')\"\n-\n-  echo \"Allocating space for the signature of size ${SIZE} in ${TARGET_FILE}\"\n-  ${CODESIGN_ALLOCATE} -i \"${TARGET_FILE}\" -a ${ARCH} ${SIZE} -o \"${i}.tmp\"\n-\n-  OFFSET=$(${PAGESTUFF} \"${i}.tmp\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g')\n-  if [ -z ${QUIET} ]; then\n-    echo \"Attaching signature at offset ${OFFSET}\"\n-  fi\n-\n-  dd if=\"$i\" of=\"${i}.tmp\" bs=1 seek=${OFFSET} count=${SIZE} 2>/dev/null\n-  mv \"${i}.tmp\" \"${TARGET_FILE}\"\n-  rm \"${i}\"\n-  echo \"Success.\"\n-done\n-mv ${TEMPDIR}/${ROOTDIR} ${OUTDIR}\n-rm -rf ${TEMPDIR}\n-echo \"Signed: ${OUTDIR}\""
      },
      {
        "sha": "31a97f0a24c7238a3c4c53d79e0fe34a783d2a6d",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,52 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2014-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-set -e\n-\n-ROOTDIR=dist\n-BUNDLE=\"${ROOTDIR}/Bitcoin-Qt.app\"\n-CODESIGN=codesign\n-TEMPDIR=sign.temp\n-TEMPLIST=${TEMPDIR}/signatures.txt\n-OUT=signature-osx.tar.gz\n-OUTROOT=osx\n-\n-if [ -z \"$1\" ]; then\n-  echo \"usage: $0 <codesign args>\"\n-  echo \"example: $0 -s MyIdentity\"\n-  exit 1\n-fi\n-\n-rm -rf ${TEMPDIR} ${TEMPLIST}\n-mkdir -p ${TEMPDIR}\n-\n-${CODESIGN} -f --file-list ${TEMPLIST} \"$@\" \"${BUNDLE}\"\n-\n-grep -v CodeResources < \"${TEMPLIST}\" | while read i; do\n-  TARGETFILE=\"${BUNDLE}/$(echo \"${i}\" | sed \"s|.*${BUNDLE}/||\")\"\n-  SIZE=$(pagestuff \"$i\" -p | tail -2 | grep size | sed 's/[^0-9]*//g')\n-  OFFSET=$(pagestuff \"$i\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g')\n-  SIGNFILE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}.sign\"\n-  DIRNAME=\"$(dirname \"${SIGNFILE}\")\"\n-  mkdir -p \"${DIRNAME}\"\n-  echo \"Adding detached signature for: ${TARGETFILE}. Size: ${SIZE}. Offset: ${OFFSET}\"\n-  dd if=\"$i\" of=\"${SIGNFILE}\" bs=1 skip=${OFFSET} count=${SIZE} 2>/dev/null\n-done\n-\n-grep CodeResources < \"${TEMPLIST}\" | while read i; do\n-  TARGETFILE=\"${BUNDLE}/$(echo \"${i}\" | sed \"s|.*${BUNDLE}/||\")\"\n-  RESOURCE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}\"\n-  DIRNAME=\"$(dirname \"${RESOURCE}\")\"\n-  mkdir -p \"${DIRNAME}\"\n-  echo \"Adding resource for: \\\"${TARGETFILE}\\\"\"\n-  cp \"${i}\" \"${RESOURCE}\"\n-done\n-\n-rm ${TEMPLIST}\n-\n-tar -C \"${TEMPDIR}\" -czf \"${OUT}\" .\n-rm -rf \"${TEMPDIR}\"\n-echo \"Created ${OUT}\""
      },
      {
        "sha": "3c7bdf4217c5c9ae13aa9dd3cff55cdb9f0e4577",
        "filename": "contrib/macdeploy/extract-osx-sdk.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/macdeploy/extract-osx-sdk.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/macdeploy/extract-osx-sdk.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/extract-osx-sdk.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,34 +0,0 @@\n-#!/usr/bin/env bash\n-# Copyright (c) 2016-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-set -e\n-\n-INPUTFILE=\"Xcode_7.3.1.dmg\"\n-HFSFILENAME=\"5.hfs\"\n-SDKDIR=\"Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk\"\n-\n-7z x \"${INPUTFILE}\" \"${HFSFILENAME}\"\n-SDKNAME=\"$(basename \"${SDKDIR}\")\"\n-SDKDIRINODE=$(ifind -n \"${SDKDIR}\" \"${HFSFILENAME}\")\n-fls \"${HFSFILENAME}\" -rpF ${SDKDIRINODE} |\n- while read type inode filename; do\n-\tinode=\"${inode::-1}\"\n-\tif [ \"${filename:0:14}\" = \"usr/share/man/\" ]; then\n-\t\tcontinue\n-\tfi\n-\tfilename=\"${SDKNAME}/$filename\"\n-\techo \"Extracting $filename ...\"\n-\tmkdir -p \"$(dirname \"$filename\")\"\n-\tif [ \"$type\" = \"l/l\" ]; then\n-\t\tln -s \"$(icat \"${HFSFILENAME}\" $inode)\" \"$filename\"\n-\telse\n-\t\ticat \"${HFSFILENAME}\" $inode >\"$filename\"\n-\tfi\n-done\n-echo \"Building ${SDKNAME}.tar.gz ...\"\n-MTIME=\"$(istat \"${HFSFILENAME}\" \"${SDKDIRINODE}\" | perl -nle 'm/Content Modified:\\s+(.*?)\\s\\(/ && print $1')\"\n-find \"${SDKNAME}\" | sort | tar --no-recursion --mtime=\"${MTIME}\" --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > \"${SDKNAME}.tar.gz\"\n-echo 'All done!'"
      },
      {
        "sha": "457d8f5e645c8e9a6f1a55edf410599db065feed",
        "filename": "contrib/macdeploy/gen-sdk",
        "status": "removed",
        "additions": 0,
        "deletions": 94,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/macdeploy/gen-sdk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/macdeploy/gen-sdk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/gen-sdk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,94 +0,0 @@\n-#!/usr/bin/env python3\n-import argparse\n-import plistlib\n-import pathlib\n-import sys\n-import tarfile\n-import gzip\n-import os\n-import contextlib\n-\n-@contextlib.contextmanager\n-def cd(path):\n-    \"\"\"Context manager that restores PWD even if an exception was raised.\"\"\"\n-    old_pwd = os.getcwd()\n-    os.chdir(str(path))\n-    try:\n-        yield\n-    finally:\n-        os.chdir(old_pwd)\n-\n-def run():\n-    parser = argparse.ArgumentParser(\n-        description=__doc__, formatter_class=argparse.RawTextHelpFormatter)\n-\n-    parser.add_argument('xcode_app', metavar='XCODEAPP', nargs=1)\n-    parser.add_argument(\"-o\", metavar='OUTSDKTGZ', nargs=1, dest='out_sdktgz', required=False)\n-\n-    args = parser.parse_args()\n-\n-    xcode_app = pathlib.Path(args.xcode_app[0]).resolve()\n-    assert xcode_app.is_dir(), \"The supplied Xcode.app path '{}' either does not exist or is not a directory\".format(xcode_app)\n-\n-    xcode_app_plist = xcode_app.joinpath(\"Contents/version.plist\")\n-    with xcode_app_plist.open('rb') as fp:\n-        pl = plistlib.load(fp)\n-        xcode_version = pl['CFBundleShortVersionString']\n-        xcode_build_id = pl['ProductBuildVersion']\n-    print(\"Found Xcode (version: {xcode_version}, build id: {xcode_build_id})\".format(xcode_version=xcode_version, xcode_build_id=xcode_build_id))\n-\n-    sdk_dir = xcode_app.joinpath(\"Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk\")\n-    sdk_plist = sdk_dir.joinpath(\"System/Library/CoreServices/SystemVersion.plist\")\n-    with sdk_plist.open('rb') as fp:\n-        pl = plistlib.load(fp)\n-        sdk_version = pl['ProductVersion']\n-        sdk_build_id = pl['ProductBuildVersion']\n-    print(\"Found MacOSX SDK (version: {sdk_version}, build id: {sdk_build_id})\".format(sdk_version=sdk_version, sdk_build_id=sdk_build_id))\n-\n-    out_name = \"Xcode-{xcode_version}-{xcode_build_id}-extracted-SDK-with-libcxx-headers\".format(xcode_version=xcode_version, xcode_build_id=xcode_build_id)\n-\n-    xcode_libcxx_dir = xcode_app.joinpath(\"Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1\")\n-    assert xcode_libcxx_dir.is_dir()\n-\n-    if args.out_sdktgz:\n-        out_sdktgz_path = pathlib.Path(args.out_sdktgz_path)\n-    else:\n-        # Construct our own out_sdktgz if not specified on the command line\n-        out_sdktgz_path = pathlib.Path(\"./{}.tar.gz\".format(out_name))\n-\n-    def tarfp_add_with_base_change(tarfp, dir_to_add, alt_base_dir):\n-        \"\"\"Add all files in dir_to_add to tarfp, but prepent MEMBERPREFIX to the files'\n-        names\n-\n-        e.g. if the only file under /root/bazdir is /root/bazdir/qux, invoking:\n-\n-            tarfp_add_with_base_change(tarfp, \"foo/bar\", \"/root/bazdir\")\n-\n-        would result in the following members being added to tarfp:\n-\n-            foo/bar/             -> corresponding to /root/bazdir\n-            foo/bar/qux          -> corresponding to /root/bazdir/qux\n-\n-        \"\"\"\n-        def change_tarinfo_base(tarinfo):\n-            if tarinfo.name and tarinfo.name.startswith(\"./\"):\n-                tarinfo.name = str(pathlib.Path(alt_base_dir, tarinfo.name))\n-            if tarinfo.linkname and tarinfo.linkname.startswith(\"./\"):\n-                tarinfo.linkname = str(pathlib.Path(alt_base_dir, tarinfo.linkname))\n-            return tarinfo\n-        with cd(dir_to_add):\n-            tarfp.add(\".\", recursive=True, filter=change_tarinfo_base)\n-\n-    print(\"Creating output .tar.gz file...\")\n-    with out_sdktgz_path.open(\"wb\") as fp:\n-        with gzip.GzipFile(fileobj=fp, compresslevel=9, mtime=0) as gzf:\n-            with tarfile.open(mode=\"w\", fileobj=gzf) as tarfp:\n-                print(\"Adding MacOSX SDK {} files...\".format(sdk_version))\n-                tarfp_add_with_base_change(tarfp, sdk_dir, out_name)\n-                print(\"Adding libc++ headers...\")\n-                tarfp_add_with_base_change(tarfp, xcode_libcxx_dir, \"{}/usr/include/c++/v1\".format(out_name))\n-    print(\"Done! Find the resulting gzipped tarball at:\")\n-    print(out_sdktgz_path.resolve())\n-\n-if __name__ == '__main__':\n-    run()"
      },
      {
        "sha": "524104398be6ea96e05f7506a6c493a686fa998d",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "removed",
        "additions": 0,
        "deletions": 909,
        "changes": 909,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,909 +0,0 @@\n-#!/usr/bin/env python3\n-#\n-# Copyright (C) 2011  Patrick \"p2k\" Schneider <me@p2k-network.org>\n-#\n-# This program is free software: you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation, either version 3 of the License, or\n-# (at your option) any later version.\n-#\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-#\n-\n-import subprocess, sys, re, os, shutil, stat, os.path, time\n-from string import Template\n-from argparse import ArgumentParser\n-from typing import List, Optional\n-\n-# This is ported from the original macdeployqt with modifications\n-\n-class FrameworkInfo(object):\n-    def __init__(self):\n-        self.frameworkDirectory = \"\"\n-        self.frameworkName = \"\"\n-        self.frameworkPath = \"\"\n-        self.binaryDirectory = \"\"\n-        self.binaryName = \"\"\n-        self.binaryPath = \"\"\n-        self.version = \"\"\n-        self.installName = \"\"\n-        self.deployedInstallName = \"\"\n-        self.sourceFilePath = \"\"\n-        self.destinationDirectory = \"\"\n-        self.sourceResourcesDirectory = \"\"\n-        self.sourceVersionContentsDirectory = \"\"\n-        self.sourceContentsDirectory = \"\"\n-        self.destinationResourcesDirectory = \"\"\n-        self.destinationVersionContentsDirectory = \"\"\n-    \n-    def __eq__(self, other):\n-        if self.__class__ == other.__class__:\n-            return self.__dict__ == other.__dict__\n-        else:\n-            return False\n-    \n-    def __str__(self):\n-        return \"\"\" Framework name: {}\n- Framework directory: {}\n- Framework path: {}\n- Binary name: {}\n- Binary directory: {}\n- Binary path: {}\n- Version: {}\n- Install name: {}\n- Deployed install name: {}\n- Source file Path: {}\n- Deployed Directory (relative to bundle): {}\n-\"\"\".format(self.frameworkName,\n-       self.frameworkDirectory,\n-       self.frameworkPath,\n-       self.binaryName,\n-       self.binaryDirectory,\n-       self.binaryPath,\n-       self.version,\n-       self.installName,\n-       self.deployedInstallName,\n-       self.sourceFilePath,\n-       self.destinationDirectory)\n-    \n-    def isDylib(self):\n-        return self.frameworkName.endswith(\".dylib\")\n-    \n-    def isQtFramework(self):\n-        if self.isDylib():\n-            return self.frameworkName.startswith(\"libQt\")\n-        else:\n-            return self.frameworkName.startswith(\"Qt\")\n-    \n-    reOLine = re.compile(r'^(.+) \\(compatibility version [0-9.]+, current version [0-9.]+\\)$')\n-    bundleFrameworkDirectory = \"Contents/Frameworks\"\n-    bundleBinaryDirectory = \"Contents/MacOS\"\n-    \n-    @classmethod\n-    def fromOtoolLibraryLine(cls, line: str) -> Optional['FrameworkInfo']:\n-        # Note: line must be trimmed\n-        if line == \"\":\n-            return None\n-        \n-        # Don't deploy system libraries (exception for libQtuitools and libQtlucene).\n-        if line.startswith(\"/System/Library/\") or line.startswith(\"@executable_path\") or (line.startswith(\"/usr/lib/\") and \"libQt\" not in line):\n-            return None\n-        \n-        m = cls.reOLine.match(line)\n-        if m is None:\n-            raise RuntimeError(\"otool line could not be parsed: \" + line)\n-        \n-        path = m.group(1)\n-        \n-        info = cls()\n-        info.sourceFilePath = path\n-        info.installName = path\n-        \n-        if path.endswith(\".dylib\"):\n-            dirname, filename = os.path.split(path)\n-            info.frameworkName = filename\n-            info.frameworkDirectory = dirname\n-            info.frameworkPath = path\n-            \n-            info.binaryDirectory = dirname\n-            info.binaryName = filename\n-            info.binaryPath = path\n-            info.version = \"-\"\n-            \n-            info.installName = path\n-            info.deployedInstallName = \"@executable_path/../Frameworks/\" + info.binaryName\n-            info.sourceFilePath = path\n-            info.destinationDirectory = cls.bundleFrameworkDirectory\n-        else:\n-            parts = path.split(\"/\")\n-            i = 0\n-            # Search for the .framework directory\n-            for part in parts:\n-                if part.endswith(\".framework\"):\n-                    break\n-                i += 1\n-            if i == len(parts):\n-                raise RuntimeError(\"Could not find .framework or .dylib in otool line: \" + line)\n-            \n-            info.frameworkName = parts[i]\n-            info.frameworkDirectory = \"/\".join(parts[:i])\n-            info.frameworkPath = os.path.join(info.frameworkDirectory, info.frameworkName)\n-            \n-            info.binaryName = parts[i+3]\n-            info.binaryDirectory = \"/\".join(parts[i+1:i+3])\n-            info.binaryPath = os.path.join(info.binaryDirectory, info.binaryName)\n-            info.version = parts[i+2]\n-            \n-            info.deployedInstallName = \"@executable_path/../Frameworks/\" + os.path.join(info.frameworkName, info.binaryPath)\n-            info.destinationDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, info.binaryDirectory)\n-            \n-            info.sourceResourcesDirectory = os.path.join(info.frameworkPath, \"Resources\")\n-            info.sourceContentsDirectory = os.path.join(info.frameworkPath, \"Contents\")\n-            info.sourceVersionContentsDirectory = os.path.join(info.frameworkPath, \"Versions\", info.version, \"Contents\")\n-            info.destinationResourcesDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Resources\")\n-            info.destinationVersionContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Versions\", info.version, \"Contents\")\n-        \n-        return info\n-\n-class ApplicationBundleInfo(object):\n-    def __init__(self, path: str):\n-        self.path = path\n-        appName = \"Bitcoin-Qt\"\n-        self.binaryPath = os.path.join(path, \"Contents\", \"MacOS\", appName)\n-        if not os.path.exists(self.binaryPath):\n-            raise RuntimeError(\"Could not find bundle binary for \" + path)\n-        self.resourcesPath = os.path.join(path, \"Contents\", \"Resources\")\n-        self.pluginPath = os.path.join(path, \"Contents\", \"PlugIns\")\n-\n-class DeploymentInfo(object):\n-    def __init__(self):\n-        self.qtPath = None\n-        self.pluginPath = None\n-        self.deployedFrameworks = []\n-    \n-    def detectQtPath(self, frameworkDirectory: str):\n-        parentDir = os.path.dirname(frameworkDirectory)\n-        if os.path.exists(os.path.join(parentDir, \"translations\")):\n-            # Classic layout, e.g. \"/usr/local/Trolltech/Qt-4.x.x\"\n-            self.qtPath = parentDir\n-        else:\n-            self.qtPath = os.getenv(\"QTDIR\", None)\n-\n-        if self.qtPath is not None:\n-            pluginPath = os.path.join(self.qtPath, \"plugins\")\n-            if os.path.exists(pluginPath):\n-                self.pluginPath = pluginPath\n-    \n-    def usesFramework(self, name: str) -> bool:\n-        nameDot = \"{}.\".format(name)\n-        libNameDot = \"lib{}.\".format(name)\n-        for framework in self.deployedFrameworks:\n-            if framework.endswith(\".framework\"):\n-                if framework.startswith(nameDot):\n-                    return True\n-            elif framework.endswith(\".dylib\"):\n-                if framework.startswith(libNameDot):\n-                    return True\n-        return False\n-\n-def getFrameworks(binaryPath: str, verbose: int) -> List[FrameworkInfo]:\n-    if verbose >= 3:\n-        print(\"Inspecting with otool: \" + binaryPath)\n-    otoolbin=os.getenv(\"OTOOL\", \"otool\")\n-    otool = subprocess.Popen([otoolbin, \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)\n-    o_stdout, o_stderr = otool.communicate()\n-    if otool.returncode != 0:\n-        if verbose >= 1:\n-            sys.stderr.write(o_stderr)\n-            sys.stderr.flush()\n-            raise RuntimeError(\"otool failed with return code {}\".format(otool.returncode))\n-\n-    otoolLines = o_stdout.split(\"\\n\")\n-    otoolLines.pop(0) # First line is the inspected binary\n-    if \".framework\" in binaryPath or binaryPath.endswith(\".dylib\"):\n-        otoolLines.pop(0) # Frameworks and dylibs list themselves as a dependency.\n-    \n-    libraries = []\n-    for line in otoolLines:\n-        line = line.replace(\"@loader_path\", os.path.dirname(binaryPath))\n-        info = FrameworkInfo.fromOtoolLibraryLine(line.strip())\n-        if info is not None:\n-            if verbose >= 3:\n-                print(\"Found framework:\")\n-                print(info)\n-            libraries.append(info)\n-    \n-    return libraries\n-\n-def runInstallNameTool(action: str, *args):\n-    installnametoolbin=os.getenv(\"INSTALLNAMETOOL\", \"install_name_tool\")\n-    subprocess.check_call([installnametoolbin, \"-\"+action] + list(args))\n-\n-def changeInstallName(oldName: str, newName: str, binaryPath: str, verbose: int):\n-    if verbose >= 3:\n-        print(\"Using install_name_tool:\")\n-        print(\" in\", binaryPath)\n-        print(\" change reference\", oldName)\n-        print(\" to\", newName)\n-    runInstallNameTool(\"change\", oldName, newName, binaryPath)\n-\n-def changeIdentification(id: str, binaryPath: str, verbose: int):\n-    if verbose >= 3:\n-        print(\"Using install_name_tool:\")\n-        print(\" change identification in\", binaryPath)\n-        print(\" to\", id)\n-    runInstallNameTool(\"id\", id, binaryPath)\n-\n-def runStrip(binaryPath: str, verbose: int):\n-    stripbin=os.getenv(\"STRIP\", \"strip\")\n-    if verbose >= 3:\n-        print(\"Using strip:\")\n-        print(\" stripped\", binaryPath)\n-    subprocess.check_call([stripbin, \"-x\", binaryPath])\n-\n-def copyFramework(framework: FrameworkInfo, path: str, verbose: int) -> Optional[str]:\n-    if framework.sourceFilePath.startswith(\"Qt\"):\n-        #standard place for Nokia Qt installer's frameworks\n-        fromPath = \"/Library/Frameworks/\" + framework.sourceFilePath\n-    else:\n-        fromPath = framework.sourceFilePath\n-    toDir = os.path.join(path, framework.destinationDirectory)\n-    toPath = os.path.join(toDir, framework.binaryName)\n-    \n-    if not os.path.exists(fromPath):\n-        raise RuntimeError(\"No file at \" + fromPath)\n-    \n-    if os.path.exists(toPath):\n-        return None # Already there\n-    \n-    if not os.path.exists(toDir):\n-        os.makedirs(toDir)\n-    \n-    shutil.copy2(fromPath, toPath)\n-    if verbose >= 3:\n-        print(\"Copied:\", fromPath)\n-        print(\" to:\", toPath)\n-\n-    permissions = os.stat(toPath)\n-    if not permissions.st_mode & stat.S_IWRITE:\n-      os.chmod(toPath, permissions.st_mode | stat.S_IWRITE)\n-\n-    if not framework.isDylib(): # Copy resources for real frameworks\n-\n-        linkfrom = os.path.join(path, \"Contents\",\"Frameworks\", framework.frameworkName, \"Versions\", \"Current\")\n-        linkto = framework.version\n-        if not os.path.exists(linkfrom):\n-            os.symlink(linkto, linkfrom)\n-            if verbose >= 2:\n-                print(\"Linked:\", linkfrom, \"->\", linkto)\n-        fromResourcesDir = framework.sourceResourcesDirectory\n-        if os.path.exists(fromResourcesDir):\n-            toResourcesDir = os.path.join(path, framework.destinationResourcesDirectory)\n-            shutil.copytree(fromResourcesDir, toResourcesDir, symlinks=True)\n-            if verbose >= 3:\n-                print(\"Copied resources:\", fromResourcesDir)\n-                print(\" to:\", toResourcesDir)\n-        fromContentsDir = framework.sourceVersionContentsDirectory\n-        if not os.path.exists(fromContentsDir):\n-            fromContentsDir = framework.sourceContentsDirectory\n-        if os.path.exists(fromContentsDir):\n-            toContentsDir = os.path.join(path, framework.destinationVersionContentsDirectory)\n-            shutil.copytree(fromContentsDir, toContentsDir, symlinks=True)\n-            if verbose >= 3:\n-                print(\"Copied Contents:\", fromContentsDir)\n-                print(\" to:\", toContentsDir)\n-    elif framework.frameworkName.startswith(\"libQtGui\"): # Copy qt_menu.nib (applies to non-framework layout)\n-        qtMenuNibSourcePath = os.path.join(framework.frameworkDirectory, \"Resources\", \"qt_menu.nib\")\n-        qtMenuNibDestinationPath = os.path.join(path, \"Contents\", \"Resources\", \"qt_menu.nib\")\n-        if os.path.exists(qtMenuNibSourcePath) and not os.path.exists(qtMenuNibDestinationPath):\n-            shutil.copytree(qtMenuNibSourcePath, qtMenuNibDestinationPath, symlinks=True)\n-            if verbose >= 3:\n-                print(\"Copied for libQtGui:\", qtMenuNibSourcePath)\n-                print(\" to:\", qtMenuNibDestinationPath)\n-    \n-    return toPath\n-\n-def deployFrameworks(frameworks: List[FrameworkInfo], bundlePath: str, binaryPath: str, strip: bool, verbose: int, deploymentInfo: Optional[DeploymentInfo] = None) -> DeploymentInfo:\n-    if deploymentInfo is None:\n-        deploymentInfo = DeploymentInfo()\n-    \n-    while len(frameworks) > 0:\n-        framework = frameworks.pop(0)\n-        deploymentInfo.deployedFrameworks.append(framework.frameworkName)\n-        \n-        if verbose >= 2:\n-            print(\"Processing\", framework.frameworkName, \"...\")\n-        \n-        # Get the Qt path from one of the Qt frameworks\n-        if deploymentInfo.qtPath is None and framework.isQtFramework():\n-            deploymentInfo.detectQtPath(framework.frameworkDirectory)\n-        \n-        if framework.installName.startswith(\"@executable_path\") or framework.installName.startswith(bundlePath):\n-            if verbose >= 2:\n-                print(framework.frameworkName, \"already deployed, skipping.\")\n-            continue\n-        \n-        # install_name_tool the new id into the binary\n-        changeInstallName(framework.installName, framework.deployedInstallName, binaryPath, verbose)\n-        \n-        # Copy framework to app bundle.\n-        deployedBinaryPath = copyFramework(framework, bundlePath, verbose)\n-        # Skip the rest if already was deployed.\n-        if deployedBinaryPath is None:\n-            continue\n-        \n-        if strip:\n-            runStrip(deployedBinaryPath, verbose)\n-        \n-        # install_name_tool it a new id.\n-        changeIdentification(framework.deployedInstallName, deployedBinaryPath, verbose)\n-        # Check for framework dependencies\n-        dependencies = getFrameworks(deployedBinaryPath, verbose)\n-        \n-        for dependency in dependencies:\n-            changeInstallName(dependency.installName, dependency.deployedInstallName, deployedBinaryPath, verbose)\n-            \n-            # Deploy framework if necessary.\n-            if dependency.frameworkName not in deploymentInfo.deployedFrameworks and dependency not in frameworks:\n-                frameworks.append(dependency)\n-    \n-    return deploymentInfo\n-\n-def deployFrameworksForAppBundle(applicationBundle: ApplicationBundleInfo, strip: bool, verbose: int) -> DeploymentInfo:\n-    frameworks = getFrameworks(applicationBundle.binaryPath, verbose)\n-    if len(frameworks) == 0 and verbose >= 1:\n-        print(\"Warning: Could not find any external frameworks to deploy in {}.\".format(applicationBundle.path))\n-        return DeploymentInfo()\n-    else:\n-        return deployFrameworks(frameworks, applicationBundle.path, applicationBundle.binaryPath, strip, verbose)\n-\n-def deployPlugins(appBundleInfo: ApplicationBundleInfo, deploymentInfo: DeploymentInfo, strip: bool, verbose: int):\n-    # Lookup available plugins, exclude unneeded\n-    plugins = []\n-    if deploymentInfo.pluginPath is None:\n-        return\n-    for dirpath, dirnames, filenames in os.walk(deploymentInfo.pluginPath):\n-        pluginDirectory = os.path.relpath(dirpath, deploymentInfo.pluginPath)\n-        if pluginDirectory == \"designer\":\n-            # Skip designer plugins\n-            continue\n-        elif pluginDirectory == \"printsupport\":\n-            # Skip printsupport plugins\n-            continue\n-        elif pluginDirectory == \"imageformats\":\n-            # Skip imageformats plugins\n-            continue\n-        elif pluginDirectory == \"sqldrivers\":\n-            # Deploy the sql plugins only if QtSql is in use\n-            if not deploymentInfo.usesFramework(\"QtSql\"):\n-                continue\n-        elif pluginDirectory == \"script\":\n-            # Deploy the script plugins only if QtScript is in use\n-            if not deploymentInfo.usesFramework(\"QtScript\"):\n-                continue\n-        elif pluginDirectory == \"qmltooling\" or pluginDirectory == \"qml1tooling\":\n-            # Deploy the qml plugins only if QtDeclarative is in use\n-            if not deploymentInfo.usesFramework(\"QtDeclarative\"):\n-                continue\n-        elif pluginDirectory == \"bearer\":\n-            # Deploy the bearer plugins only if QtNetwork is in use\n-            if not deploymentInfo.usesFramework(\"QtNetwork\"):\n-                continue\n-        elif pluginDirectory == \"position\":\n-            # Deploy the position plugins only if QtPositioning is in use\n-            if not deploymentInfo.usesFramework(\"QtPositioning\"):\n-                continue\n-        elif pluginDirectory == \"sensors\" or pluginDirectory == \"sensorgestures\":\n-            # Deploy the sensor plugins only if QtSensors is in use\n-            if not deploymentInfo.usesFramework(\"QtSensors\"):\n-                continue\n-        elif pluginDirectory == \"audio\" or pluginDirectory == \"playlistformats\":\n-            # Deploy the audio plugins only if QtMultimedia is in use\n-            if not deploymentInfo.usesFramework(\"QtMultimedia\"):\n-                continue\n-        elif pluginDirectory == \"mediaservice\":\n-            # Deploy the mediaservice plugins only if QtMultimediaWidgets is in use\n-            if not deploymentInfo.usesFramework(\"QtMultimediaWidgets\"):\n-                continue\n-        elif pluginDirectory == \"canbus\":\n-            # Deploy the canbus plugins only if QtSerialBus is in use\n-            if not deploymentInfo.usesFramework(\"QtSerialBus\"):\n-                continue\n-        elif pluginDirectory == \"webview\":\n-            # Deploy the webview plugins only if QtWebView is in use\n-            if not deploymentInfo.usesFramework(\"QtWebView\"):\n-                continue\n-        elif pluginDirectory == \"gamepads\":\n-            # Deploy the webview plugins only if QtGamepad is in use\n-            if not deploymentInfo.usesFramework(\"QtGamepad\"):\n-                continue\n-        elif pluginDirectory == \"geoservices\":\n-            # Deploy the webview plugins only if QtLocation is in use\n-            if not deploymentInfo.usesFramework(\"QtLocation\"):\n-                continue\n-        elif pluginDirectory == \"texttospeech\":\n-            # Deploy the texttospeech plugins only if QtTextToSpeech is in use\n-            if not deploymentInfo.usesFramework(\"QtTextToSpeech\"):\n-                continue\n-        elif pluginDirectory == \"virtualkeyboard\":\n-            # Deploy the virtualkeyboard plugins only if QtVirtualKeyboard is in use\n-            if not deploymentInfo.usesFramework(\"QtVirtualKeyboard\"):\n-                continue\n-        elif pluginDirectory == \"sceneparsers\":\n-            # Deploy the virtualkeyboard plugins only if Qt3DCore is in use\n-            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n-                continue\n-        elif pluginDirectory == \"renderplugins\":\n-            # Deploy the renderplugins plugins only if Qt3DCore is in use\n-            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n-                continue\n-        elif pluginDirectory == \"geometryloaders\":\n-            # Deploy the geometryloaders plugins only if Qt3DCore is in use\n-            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n-                continue\n-\n-        for pluginName in filenames:\n-            pluginPath = os.path.join(pluginDirectory, pluginName)\n-            if pluginName.endswith(\"_debug.dylib\"):\n-                # Skip debug plugins\n-                continue\n-            elif pluginPath == \"imageformats/libqsvg.dylib\" or pluginPath == \"iconengines/libqsvgicon.dylib\":\n-                # Deploy the svg plugins only if QtSvg is in use\n-                if not deploymentInfo.usesFramework(\"QtSvg\"):\n-                    continue\n-            elif pluginPath == \"accessible/libqtaccessiblecompatwidgets.dylib\":\n-                # Deploy accessibility for Qt3Support only if the Qt3Support is in use\n-                if not deploymentInfo.usesFramework(\"Qt3Support\"):\n-                    continue\n-            elif pluginPath == \"graphicssystems/libqglgraphicssystem.dylib\":\n-                # Deploy the opengl graphicssystem plugin only if QtOpenGL is in use\n-                if not deploymentInfo.usesFramework(\"QtOpenGL\"):\n-                    continue\n-            elif pluginPath == \"accessible/libqtaccessiblequick.dylib\":\n-                # Deploy the accessible qtquick plugin only if QtQuick is in use\n-                if not deploymentInfo.usesFramework(\"QtQuick\"):\n-                    continue\n-            elif pluginPath == \"platforminputcontexts/libqtvirtualkeyboardplugin.dylib\":\n-                # Deploy the virtualkeyboardplugin plugin only if QtVirtualKeyboard is in use\n-                if not deploymentInfo.usesFramework(\"QtVirtualKeyboard\"):\n-                    continue\n-\n-            plugins.append((pluginDirectory, pluginName))\n-    \n-    for pluginDirectory, pluginName in plugins:\n-        if verbose >= 2:\n-            print(\"Processing plugin\", os.path.join(pluginDirectory, pluginName), \"...\")\n-        \n-        sourcePath = os.path.join(deploymentInfo.pluginPath, pluginDirectory, pluginName)\n-        destinationDirectory = os.path.join(appBundleInfo.pluginPath, pluginDirectory)\n-        if not os.path.exists(destinationDirectory):\n-            os.makedirs(destinationDirectory)\n-        \n-        destinationPath = os.path.join(destinationDirectory, pluginName)\n-        shutil.copy2(sourcePath, destinationPath)\n-        if verbose >= 3:\n-            print(\"Copied:\", sourcePath)\n-            print(\" to:\", destinationPath)\n-        \n-        if strip:\n-            runStrip(destinationPath, verbose)\n-        \n-        dependencies = getFrameworks(destinationPath, verbose)\n-        \n-        for dependency in dependencies:\n-            changeInstallName(dependency.installName, dependency.deployedInstallName, destinationPath, verbose)\n-            \n-            # Deploy framework if necessary.\n-            if dependency.frameworkName not in deploymentInfo.deployedFrameworks:\n-                deployFrameworks([dependency], appBundleInfo.path, destinationPath, strip, verbose, deploymentInfo)\n-\n-qt_conf=\"\"\"[Paths]\n-Translations=Resources\n-Plugins=PlugIns\n-\"\"\"\n-\n-ap = ArgumentParser(description=\"\"\"Improved version of macdeployqt.\n-\n-Outputs a ready-to-deploy app in a folder \"dist\" and optionally wraps it in a .dmg file.\n-Note, that the \"dist\" folder will be deleted before deploying on each run.\n-\n-Optionally, Qt translation files (.qm) and additional resources can be added to the bundle.\n-\n-Also optionally signs the .app bundle; set the CODESIGNARGS environment variable to pass arguments\n-to the codesign tool.\n-E.g. CODESIGNARGS='--sign \"Developer ID Application: ...\" --keychain /encrypted/foo.keychain'\"\"\")\n-\n-ap.add_argument(\"app_bundle\", nargs=1, metavar=\"app-bundle\", help=\"application bundle to be deployed\")\n-ap.add_argument(\"-verbose\", type=int, nargs=1, default=[1], metavar=\"<0-3>\", help=\"0 = no output, 1 = error/warning (default), 2 = normal, 3 = debug\")\n-ap.add_argument(\"-no-plugins\", dest=\"plugins\", action=\"store_false\", default=True, help=\"skip plugin deployment\")\n-ap.add_argument(\"-no-strip\", dest=\"strip\", action=\"store_false\", default=True, help=\"don't run 'strip' on the binaries\")\n-ap.add_argument(\"-sign\", dest=\"sign\", action=\"store_true\", default=False, help=\"sign .app bundle with codesign tool\")\n-ap.add_argument(\"-dmg\", nargs=\"?\", const=\"\", metavar=\"basename\", help=\"create a .dmg disk image; if basename is not specified, a camel-cased version of the app name is used\")\n-ap.add_argument(\"-fancy\", nargs=1, metavar=\"plist\", default=[], help=\"make a fancy looking disk image using the given plist file with instructions; requires -dmg to work\")\n-ap.add_argument(\"-add-qt-tr\", nargs=1, metavar=\"languages\", default=[], help=\"add Qt translation files to the bundle's resources; the language list must be separated with commas, not with whitespace\")\n-ap.add_argument(\"-translations-dir\", nargs=1, metavar=\"path\", default=None, help=\"Path to Qt's translation files\")\n-ap.add_argument(\"-add-resources\", nargs=\"+\", metavar=\"path\", default=[], help=\"list of additional files or folders to be copied into the bundle's resources; must be the last argument\")\n-ap.add_argument(\"-volname\", nargs=1, metavar=\"volname\", default=[], help=\"custom volume name for dmg\")\n-\n-config = ap.parse_args()\n-\n-verbose = config.verbose[0]\n-\n-# ------------------------------------------------\n-\n-app_bundle = config.app_bundle[0]\n-\n-if not os.path.exists(app_bundle):\n-    if verbose >= 1:\n-        sys.stderr.write(\"Error: Could not find app bundle \\\"{}\\\"\\n\".format(app_bundle))\n-    sys.exit(1)\n-\n-app_bundle_name = os.path.splitext(os.path.basename(app_bundle))[0]\n-\n-# ------------------------------------------------\n-translations_dir = None\n-if config.translations_dir and config.translations_dir[0]:\n-    if os.path.exists(config.translations_dir[0]):\n-        translations_dir = config.translations_dir[0]\n-    else:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not find translation dir \\\"{}\\\"\\n\".format(translations_dir))\n-        sys.exit(1)\n-# ------------------------------------------------\n-\n-for p in config.add_resources:\n-    if verbose >= 3:\n-        print(\"Checking for \\\"%s\\\"...\" % p)\n-    if not os.path.exists(p):\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not find additional resource file \\\"{}\\\"\\n\".format(p))\n-        sys.exit(1)\n-\n-# ------------------------------------------------\n-\n-if len(config.fancy) == 1:\n-    if verbose >= 3:\n-        print(\"Fancy: Importing plistlib...\")\n-    try:\n-        import plistlib\n-    except ImportError:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not import plistlib which is required for fancy disk images.\\n\")\n-        sys.exit(1)\n-    \n-    p = config.fancy[0]\n-    if verbose >= 3:\n-        print(\"Fancy: Loading \\\"{}\\\"...\".format(p))\n-    if not os.path.exists(p):\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not find fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n-        sys.exit(1)\n-    \n-    try:\n-        with open(p, 'rb') as fp:\n-            fancy = plistlib.load(fp, fmt=plistlib.FMT_XML)\n-    except:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not parse fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n-        sys.exit(1)\n-    \n-    try:\n-        assert \"window_bounds\" not in fancy or (isinstance(fancy[\"window_bounds\"], list) and len(fancy[\"window_bounds\"]) == 4)\n-        assert \"background_picture\" not in fancy or isinstance(fancy[\"background_picture\"], str)\n-        assert \"icon_size\" not in fancy or isinstance(fancy[\"icon_size\"], int)\n-        assert \"applications_symlink\" not in fancy or isinstance(fancy[\"applications_symlink\"], bool)\n-        if \"items_position\" in fancy:\n-            assert isinstance(fancy[\"items_position\"], dict)\n-            for key, value in fancy[\"items_position\"].items():\n-                assert isinstance(value, list) and len(value) == 2 and isinstance(value[0], int) and isinstance(value[1], int)\n-    except:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Bad format of fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n-        sys.exit(1)\n-    \n-    if \"background_picture\" in fancy:\n-        bp = fancy[\"background_picture\"]\n-        if verbose >= 3:\n-            print(\"Fancy: Resolving background picture \\\"{}\\\"...\".format(bp))\n-        if not os.path.exists(bp):\n-            bp = os.path.join(os.path.dirname(p), bp)\n-            if not os.path.exists(bp):\n-                if verbose >= 1:\n-                    sys.stderr.write(\"Error: Could not find background picture at \\\"{}\\\" or \\\"{}\\\"\\n\".format(fancy[\"background_picture\"], bp))\n-                sys.exit(1)\n-            else:\n-                fancy[\"background_picture\"] = bp\n-else:\n-    fancy = None\n-\n-# ------------------------------------------------\n-\n-if os.path.exists(\"dist\"):\n-    if verbose >= 2:\n-        print(\"+ Removing old dist folder +\")\n-    \n-    shutil.rmtree(\"dist\")\n-\n-# ------------------------------------------------\n-\n-if len(config.volname) == 1:\n-    volname = config.volname[0]\n-else:\n-    volname = app_bundle_name\n-\n-# ------------------------------------------------\n-\n-target = os.path.join(\"dist\", \"Bitcoin-Qt.app\")\n-\n-if verbose >= 2:\n-    print(\"+ Copying source bundle +\")\n-if verbose >= 3:\n-    print(app_bundle, \"->\", target)\n-\n-os.mkdir(\"dist\")\n-shutil.copytree(app_bundle, target, symlinks=True)\n-\n-applicationBundle = ApplicationBundleInfo(target)\n-\n-# ------------------------------------------------\n-\n-if verbose >= 2:\n-    print(\"+ Deploying frameworks +\")\n-\n-try:\n-    deploymentInfo = deployFrameworksForAppBundle(applicationBundle, config.strip, verbose)\n-    if deploymentInfo.qtPath is None:\n-        deploymentInfo.qtPath = os.getenv(\"QTDIR\", None)\n-        if deploymentInfo.qtPath is None:\n-            if verbose >= 1:\n-                sys.stderr.write(\"Warning: Could not detect Qt's path, skipping plugin deployment!\\n\")\n-            config.plugins = False\n-except RuntimeError as e:\n-    if verbose >= 1:\n-        sys.stderr.write(\"Error: {}\\n\".format(str(e)))\n-    sys.exit(1)\n-\n-# ------------------------------------------------\n-\n-if config.plugins:\n-    if verbose >= 2:\n-        print(\"+ Deploying plugins +\")\n-    \n-    try:\n-        deployPlugins(applicationBundle, deploymentInfo, config.strip, verbose)\n-    except RuntimeError as e:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: {}\\n\".format(str(e)))\n-        sys.exit(1)\n-\n-# ------------------------------------------------\n-\n-if len(config.add_qt_tr) == 0:\n-    add_qt_tr = []\n-else:\n-    if translations_dir is not None:\n-        qt_tr_dir = translations_dir\n-    else:\n-        if deploymentInfo.qtPath is not None:\n-            qt_tr_dir = os.path.join(deploymentInfo.qtPath, \"translations\")\n-        else:\n-            sys.stderr.write(\"Error: Could not find Qt translation path\\n\")\n-            sys.exit(1)\n-    add_qt_tr = [\"qt_{}.qm\".format(lng) for lng in config.add_qt_tr[0].split(\",\")]\n-    for lng_file in add_qt_tr:\n-        p = os.path.join(qt_tr_dir, lng_file)\n-        if verbose >= 3:\n-            print(\"Checking for \\\"{}\\\"...\".format(p))\n-        if not os.path.exists(p):\n-            if verbose >= 1:\n-                sys.stderr.write(\"Error: Could not find Qt translation file \\\"{}\\\"\\n\".format(lng_file))\n-                sys.exit(1)\n-\n-# ------------------------------------------------\n-\n-if verbose >= 2:\n-    print(\"+ Installing qt.conf +\")\n-\n-with open(os.path.join(applicationBundle.resourcesPath, \"qt.conf\"), \"wb\") as f:\n-    f.write(qt_conf.encode())\n-\n-# ------------------------------------------------\n-\n-if len(add_qt_tr) > 0 and verbose >= 2:\n-    print(\"+ Adding Qt translations +\")\n-\n-for lng_file in add_qt_tr:\n-    if verbose >= 3:\n-        print(os.path.join(qt_tr_dir, lng_file), \"->\", os.path.join(applicationBundle.resourcesPath, lng_file))\n-    shutil.copy2(os.path.join(qt_tr_dir, lng_file), os.path.join(applicationBundle.resourcesPath, lng_file))\n-\n-# ------------------------------------------------\n-\n-if len(config.add_resources) > 0 and verbose >= 2:\n-    print(\"+ Adding additional resources +\")\n-\n-for p in config.add_resources:\n-    t = os.path.join(applicationBundle.resourcesPath, os.path.basename(p))\n-    if verbose >= 3:\n-        print(p, \"->\", t)\n-    if os.path.isdir(p):\n-        shutil.copytree(p, t, symlinks=True)\n-    else:\n-        shutil.copy2(p, t)\n-\n-# ------------------------------------------------\n-\n-if config.sign and 'CODESIGNARGS' not in os.environ:\n-    print(\"You must set the CODESIGNARGS environment variable. Skipping signing.\")\n-elif config.sign:\n-    if verbose >= 1:\n-        print(\"Code-signing app bundle {}\".format(target))\n-    subprocess.check_call(\"codesign --force {} {}\".format(os.environ['CODESIGNARGS'], target), shell=True)\n-\n-# ------------------------------------------------\n-\n-if config.dmg is not None:\n-\n-    def runHDIUtil(verb: str, image_basename: str, **kwargs) -> int:\n-        hdiutil_args = [\"hdiutil\", verb, image_basename + \".dmg\"]\n-        if \"capture_stdout\" in kwargs:\n-            del kwargs[\"capture_stdout\"]\n-            run = subprocess.check_output\n-        else:\n-            if verbose < 2:\n-                hdiutil_args.append(\"-quiet\")\n-            elif verbose >= 3:\n-                hdiutil_args.append(\"-verbose\")\n-            run = subprocess.check_call\n-        \n-        for key, value in kwargs.items():\n-            hdiutil_args.append(\"-\" + key)\n-            if value is not True:\n-                hdiutil_args.append(str(value))\n-        \n-        return run(hdiutil_args, universal_newlines=True)\n-    \n-    if verbose >= 2:\n-        if fancy is None:\n-            print(\"+ Creating .dmg disk image +\")\n-        else:\n-            print(\"+ Preparing .dmg disk image +\")\n-    \n-    if config.dmg != \"\":\n-        dmg_name = config.dmg\n-    else:\n-        spl = app_bundle_name.split(\" \")\n-        dmg_name = spl[0] + \"\".join(p.capitalize() for p in spl[1:])\n-    \n-    if fancy is None:\n-        try:\n-            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=volname, ov=True)\n-        except subprocess.CalledProcessError as e:\n-            sys.exit(e.returncode)\n-    else:\n-        if verbose >= 3:\n-            print(\"Determining size of \\\"dist\\\"...\")\n-        size = 0\n-        for path, dirs, files in os.walk(\"dist\"):\n-            for file in files:\n-                size += os.path.getsize(os.path.join(path, file))\n-        size += int(size * 0.15)\n-        \n-        if verbose >= 3:\n-            print(\"Creating temp image for modification...\")\n-        try:\n-            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=volname, ov=True)\n-        except subprocess.CalledProcessError as e:\n-            sys.exit(e.returncode)\n-        \n-        if verbose >= 3:\n-            print(\"Attaching temp image...\")\n-        try:\n-            output = runHDIUtil(\"attach\", dmg_name + \".temp\", readwrite=True, noverify=True, noautoopen=True, capture_stdout=True)\n-        except subprocess.CalledProcessError as e:\n-            sys.exit(e.returncode)\n-\n-        m = re.search(r\"/Volumes/(.+$)\", output)\n-        disk_root = m.group(0)\n-        disk_name = m.group(1)\n-        \n-        if verbose >= 2:\n-            print(\"+ Applying fancy settings +\")\n-        \n-        if \"background_picture\" in fancy:\n-            bg_path = os.path.join(disk_root, \".background\", os.path.basename(fancy[\"background_picture\"]))\n-            os.mkdir(os.path.dirname(bg_path))\n-            if verbose >= 3:\n-                print(fancy[\"background_picture\"], \"->\", bg_path)\n-            shutil.copy2(fancy[\"background_picture\"], bg_path)\n-        else:\n-            bg_path = None\n-        \n-        if fancy.get(\"applications_symlink\", False):\n-            os.symlink(\"/Applications\", os.path.join(disk_root, \"Applications\"))\n-        \n-        # The Python appscript package broke with OSX 10.8 and isn't being fixed.\n-        # So we now build up an AppleScript string and use the osascript command\n-        # to make the .dmg file pretty:\n-        appscript = Template( \"\"\"\n-        on run argv\n-           tell application \"Finder\"\n-             tell disk \"$disk\"\n-                   open\n-                   set current view of container window to icon view\n-                   set toolbar visible of container window to false\n-                   set statusbar visible of container window to false\n-                   set the bounds of container window to {$window_bounds}\n-                   set theViewOptions to the icon view options of container window\n-                   set arrangement of theViewOptions to not arranged\n-                   set icon size of theViewOptions to $icon_size\n-                   $background_commands\n-                   $items_positions\n-                   close -- close/reopen works around a bug...\n-                   open\n-                   update without registering applications\n-                   delay 5\n-                   eject\n-             end tell\n-           end tell\n-        end run\n-        \"\"\")\n-\n-        itemscript = Template('set position of item \"${item}\" of container window to {${position}}')\n-        items_positions = []\n-        if \"items_position\" in fancy:\n-            for name, position in fancy[\"items_position\"].items():\n-                params = { \"item\" : name, \"position\" : \",\".join([str(p) for p in position]) }\n-                items_positions.append(itemscript.substitute(params))\n-\n-        params = {\n-            \"disk\" : volname,\n-            \"window_bounds\" : \"300,300,800,620\",\n-            \"icon_size\" : \"96\",\n-            \"background_commands\" : \"\",\n-            \"items_positions\" : \"\\n                   \".join(items_positions)\n-            }\n-        if \"window_bounds\" in fancy:\n-            params[\"window_bounds\"] = \",\".join([str(p) for p in fancy[\"window_bounds\"]])\n-        if \"icon_size\" in fancy:\n-            params[\"icon_size\"] = str(fancy[\"icon_size\"])\n-        if bg_path is not None:\n-            # Set background file, then call SetFile to make it invisible.\n-            # (note: making it invisible first makes set background picture fail)\n-            bgscript = Template(\"\"\"set background picture of theViewOptions to file \".background:$bgpic\"\n-                   do shell script \"SetFile -a V /Volumes/$disk/.background/$bgpic\" \"\"\")\n-            params[\"background_commands\"] = bgscript.substitute({\"bgpic\" : os.path.basename(bg_path), \"disk\" : params[\"disk\"]})\n-\n-        s = appscript.substitute(params)\n-        if verbose >= 2:\n-            print(\"Running AppleScript:\")\n-            print(s)\n-\n-        p = subprocess.Popen(['osascript', '-'], stdin=subprocess.PIPE)\n-        p.communicate(input=s.encode('utf-8'))\n-        if p.returncode:\n-            print(\"Error running osascript.\")\n-\n-        if verbose >= 2:\n-            print(\"+ Finalizing .dmg disk image +\")\n-            time.sleep(5)\n-        \n-        try:\n-            runHDIUtil(\"convert\", dmg_name + \".temp\", format=\"UDBZ\", o=dmg_name + \".dmg\", ov=True)\n-        except subprocess.CalledProcessError as e:\n-            sys.exit(e.returncode)\n-        \n-        os.unlink(dmg_name + \".temp.dmg\")\n-\n-# ------------------------------------------------\n-\n-if verbose >= 2:\n-    print(\"+ Done +\")\n-\n-sys.exit(0)"
      },
      {
        "sha": "0ded87c58f4ee721058f914682a283f9f9a69787",
        "filename": "contrib/qos/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/qos/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/qos/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/README.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,5 +0,0 @@\n-### QoS (Quality of service) ###\n-\n-This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Bitcoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN.\n-\n-This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it."
      },
      {
        "sha": "8408545a218e4faa4a3fb41951a3afab21ba199a",
        "filename": "contrib/qos/tc.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 62,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,62 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2017-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-#network interface on which to limit traffic\n-IF=\"eth0\"\n-#limit of the network interface in question\n-LINKCEIL=\"1gbit\"\n-#limit outbound Bitcoin protocol traffic to this rate\n-LIMIT=\"160kbit\"\n-#defines the IPv4 address space for which you wish to disable rate limiting\n-LOCALNET_V4=\"192.168.0.0/16\"\n-#defines the IPv6 address space for which you wish to disable rate limiting\n-LOCALNET_V6=\"fe80::/10\"\n-\n-#delete existing rules\n-tc qdisc del dev ${IF} root\n-\n-#add root class\n-tc qdisc add dev ${IF} root handle 1: htb default 10\n-\n-#add parent class\n-tc class add dev ${IF} parent 1: classid 1:1 htb rate ${LINKCEIL} ceil ${LINKCEIL}\n-\n-#add our two classes. one unlimited, another limited\n-tc class add dev ${IF} parent 1:1 classid 1:10 htb rate ${LINKCEIL} ceil ${LINKCEIL} prio 0\n-tc class add dev ${IF} parent 1:1 classid 1:11 htb rate ${LIMIT} ceil ${LIMIT} prio 1\n-\n-#add handles to our classes so packets marked with <x> go into the class with \"... handle <x> fw ...\"\n-tc filter add dev ${IF} parent 1: protocol ip prio 1 handle 1 fw classid 1:10\n-tc filter add dev ${IF} parent 1: protocol ip prio 2 handle 2 fw classid 1:11\n-\n-if [ -n \"${LOCALNET_V6}\" ] ; then\n-\t# v6 cannot have the same priority value as v4\n-\ttc filter add dev ${IF} parent 1: protocol ipv6 prio 3 handle 1 fw classid 1:10\n-\ttc filter add dev ${IF} parent 1: protocol ipv6 prio 4 handle 2 fw classid 1:11\n-fi\n-\n-#delete any existing rules\n-#disable for now\n-#ret=0\n-#while [ $ret -eq 0 ]; do\n-#\tiptables -t mangle -D OUTPUT 1\n-#\tret=$?\n-#done\n-\n-#limit outgoing traffic to and from port 8333. but not when dealing with a host on the local network\n-#\t(defined by $LOCALNET_V4 and $LOCALNET_V6)\n-#\t--set-mark marks packages matching these criteria with the number \"2\" (v4)\n-#\t--set-mark marks packages matching these criteria with the number \"4\" (v6)\n-#\tthese packets are filtered by the tc filter with \"handle 2\"\n-#\tthis filter sends the packages into the 1:11 class, and this class is limited to ${LIMIT}\n-iptables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n-iptables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n-\n-if [ -n \"${LOCALNET_V6}\" ] ; then\n-\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n-\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n-fi"
      },
      {
        "sha": "e4a39d609343699cc54dee0d85e105fbce7088a4",
        "filename": "contrib/seeds/.gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/seeds/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/seeds/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/.gitignore?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1 +0,0 @@\n-seeds_main.txt"
      },
      {
        "sha": "502c20d0d678c59eafbb976d7a1b2537be0217b6",
        "filename": "contrib/seeds/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,21 +0,0 @@\n-# Seeds\n-\n-Utility to generate the seeds.txt list that is compiled into the client\n-(see [src/chainparamsseeds.h](/src/chainparamsseeds.h) and other utilities in [contrib/seeds](/contrib/seeds)).\n-\n-Be sure to update `PATTERN_AGENT` in `makeseeds.py` to include the current version,\n-and remove old versions as necessary (at a minimum when GetDesirableServiceFlags\n-changes its default return value, as those are the services which seeds are added\n-to addrman with).\n-\n-The seeds compiled into the release are created from sipa's DNS seed data, like this:\n-\n-    curl -s http://bitcoin.sipa.be/seeds.txt.gz | gzip -dc > seeds_main.txt\n-    python3 makeseeds.py < seeds_main.txt > nodes_main.txt\n-    python3 generate-seeds.py . > ../../src/chainparamsseeds.h\n-\n-## Dependencies\n-\n-Ubuntu:\n-\n-    sudo apt-get install python3-dnspython"
      },
      {
        "sha": "7630a7a4fa2550396e8e6ee5421a90f640b7be0a",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "removed",
        "additions": 0,
        "deletions": 138,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,138 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2014-2017 Wladimir J. van der Laan\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Script to generate list of seed nodes for chainparams.cpp.\n-\n-This script expects two text files in the directory that is passed as an\n-argument:\n-\n-    nodes_main.txt\n-    nodes_test.txt\n-\n-These files must consist of lines in the format\n-\n-    <ip>\n-    <ip>:<port>\n-    [<ipv6>]\n-    [<ipv6>]:<port>\n-    <onion>.onion\n-    0xDDBBCCAA (IPv4 little-endian old pnSeeds format)\n-\n-The output will be two data structures with the peers in binary format:\n-\n-   static SeedSpec6 pnSeed6_main[]={\n-   ...\n-   }\n-   static SeedSpec6 pnSeed6_test[]={\n-   ...\n-   }\n-\n-These should be pasted into `src/chainparamsseeds.h`.\n-'''\n-\n-from base64 import b32decode\n-from binascii import a2b_hex\n-import sys\n-import os\n-import re\n-\n-# ipv4 in ipv6 prefix\n-pchIPv4 = bytearray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff])\n-# tor-specific ipv6 prefix\n-pchOnionCat = bytearray([0xFD,0x87,0xD8,0x7E,0xEB,0x43])\n-\n-def name_to_ipv6(addr):\n-    if len(addr)>6 and addr.endswith('.onion'):\n-        vchAddr = b32decode(addr[0:-6], True)\n-        if len(vchAddr) != 16-len(pchOnionCat):\n-            raise ValueError('Invalid onion %s' % vchAddr)\n-        return pchOnionCat + vchAddr\n-    elif '.' in addr: # IPv4\n-        return pchIPv4 + bytearray((int(x) for x in addr.split('.')))\n-    elif ':' in addr: # IPv6\n-        sub = [[], []] # prefix, suffix\n-        x = 0\n-        addr = addr.split(':')\n-        for i,comp in enumerate(addr):\n-            if comp == '':\n-                if i == 0 or i == (len(addr)-1): # skip empty component at beginning or end\n-                    continue\n-                x += 1 # :: skips to suffix\n-                assert(x < 2)\n-            else: # two bytes per component\n-                val = int(comp, 16)\n-                sub[x].append(val >> 8)\n-                sub[x].append(val & 0xff)\n-        nullbytes = 16 - len(sub[0]) - len(sub[1])\n-        assert((x == 0 and nullbytes == 0) or (x == 1 and nullbytes > 0))\n-        return bytearray(sub[0] + ([0] * nullbytes) + sub[1])\n-    elif addr.startswith('0x'): # IPv4-in-little-endian\n-        return pchIPv4 + bytearray(reversed(a2b_hex(addr[2:])))\n-    else:\n-        raise ValueError('Could not parse address %s' % addr)\n-\n-def parse_spec(s, defaultport):\n-    match = re.match(r'\\[([0-9a-fA-F:]+)\\](?::([0-9]+))?$', s)\n-    if match: # ipv6\n-        host = match.group(1)\n-        port = match.group(2)\n-    elif s.count(':') > 1: # ipv6, no port\n-        host = s\n-        port = ''\n-    else:\n-        (host,_,port) = s.partition(':')\n-\n-    if not port:\n-        port = defaultport\n-    else:\n-        port = int(port)\n-\n-    host = name_to_ipv6(host)\n-\n-    return (host,port)\n-\n-def process_nodes(g, f, structname, defaultport):\n-    g.write('static SeedSpec6 %s[] = {\\n' % structname)\n-    first = True\n-    for line in f:\n-        comment = line.find('#')\n-        if comment != -1:\n-            line = line[0:comment]\n-        line = line.strip()\n-        if not line:\n-            continue\n-        if not first:\n-            g.write(',\\n')\n-        first = False\n-\n-        (host,port) = parse_spec(line, defaultport)\n-        hoststr = ','.join(('0x%02x' % b) for b in host)\n-        g.write('    {{%s}, %i}' % (hoststr, port))\n-    g.write('\\n};\\n')\n-\n-def main():\n-    if len(sys.argv)<2:\n-        print(('Usage: %s <path_to_nodes_txt>' % sys.argv[0]), file=sys.stderr)\n-        sys.exit(1)\n-    g = sys.stdout\n-    indir = sys.argv[1]\n-    g.write('#ifndef BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-    g.write('#define BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-    g.write('/**\\n')\n-    g.write(' * List of fixed seed nodes for the bitcoin network\\n')\n-    g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n-    g.write(' *\\n')\n-    g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n-    g.write(' * IPv4 as well as onion addresses are wrapped inside an IPv6 address accordingly.\\n')\n-    g.write(' */\\n')\n-    with open(os.path.join(indir,'nodes_main.txt'), 'r', encoding=\"utf8\") as f:\n-        process_nodes(g, f, 'pnSeed6_main', 8333)\n-    g.write('\\n')\n-    with open(os.path.join(indir,'nodes_test.txt'), 'r', encoding=\"utf8\") as f:\n-        process_nodes(g, f, 'pnSeed6_test', 18333)\n-    g.write('#endif // BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-\n-if __name__ == '__main__':\n-    main()"
      },
      {
        "sha": "6d9d49ad2fc1640a2644313cfc81da0d2ed4596b",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "removed",
        "additions": 0,
        "deletions": 228,
        "changes": 228,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,228 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2013-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# Generate seeds.txt from Pieter's DNS seeder\n-#\n-\n-import re\n-import sys\n-import dns.resolver\n-import collections\n-\n-NSEEDS=512\n-\n-MAX_SEEDS_PER_ASN=2\n-\n-MIN_BLOCKS = 337600\n-\n-# These are hosts that have been observed to be behaving strangely (e.g.\n-# aggressively connecting to every node).\n-with open(\"suspicious_hosts.txt\", mode=\"r\", encoding=\"utf-8\") as f:\n-    SUSPICIOUS_HOSTS = {s.strip() for s in f if s.strip()}\n-\n-\n-PATTERN_IPV4 = re.compile(r\"^((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})):(\\d+)$\")\n-PATTERN_IPV6 = re.compile(r\"^\\[([0-9a-z:]+)\\]:(\\d+)$\")\n-PATTERN_ONION = re.compile(r\"^([abcdefghijklmnopqrstuvwxyz234567]{16}\\.onion):(\\d+)$\")\n-PATTERN_AGENT = re.compile(\n-    r\"^/Satoshi:(\"\n-    r\"0.14.(0|1|2|3|99)|\"\n-    r\"0.15.(0|1|2|99)|\"\n-    r\"0.16.(0|1|2|3|99)|\"\n-    r\"0.17.(0|0.1|1|2|99)|\"\n-    r\"0.18.(0|1|99)|\"\n-    r\"0.19.(0|1|99)|\"\n-    r\"0.20.(0|1|99)|\"\n-    r\"0.21.99\"\n-    r\")\")\n-\n-def parseline(line):\n-    sline = line.split()\n-    if len(sline) < 11:\n-       return None\n-    m = PATTERN_IPV4.match(sline[0])\n-    sortkey = None\n-    ip = None\n-    if m is None:\n-        m = PATTERN_IPV6.match(sline[0])\n-        if m is None:\n-            m = PATTERN_ONION.match(sline[0])\n-            if m is None:\n-                return None\n-            else:\n-                net = 'onion'\n-                ipstr = sortkey = m.group(1)\n-                port = int(m.group(2))\n-        else:\n-            net = 'ipv6'\n-            if m.group(1) in ['::']: # Not interested in localhost\n-                return None\n-            ipstr = m.group(1)\n-            sortkey = ipstr # XXX parse IPv6 into number, could use name_to_ipv6 from generate-seeds\n-            port = int(m.group(2))\n-    else:\n-        # Do IPv4 sanity check\n-        ip = 0\n-        for i in range(0,4):\n-            if int(m.group(i+2)) < 0 or int(m.group(i+2)) > 255:\n-                return None\n-            ip = ip + (int(m.group(i+2)) << (8*(3-i)))\n-        if ip == 0:\n-            return None\n-        net = 'ipv4'\n-        sortkey = ip\n-        ipstr = m.group(1)\n-        port = int(m.group(6))\n-    # Skip bad results.\n-    if sline[1] == 0:\n-        return None\n-    # Extract uptime %.\n-    uptime30 = float(sline[7][:-1])\n-    # Extract Unix timestamp of last success.\n-    lastsuccess = int(sline[2])\n-    # Extract protocol version.\n-    version = int(sline[10])\n-    # Extract user agent.\n-    agent = sline[11][1:-1]\n-    # Extract service flags.\n-    service = int(sline[9], 16)\n-    # Extract blocks.\n-    blocks = int(sline[8])\n-    # Construct result.\n-    return {\n-        'net': net,\n-        'ip': ipstr,\n-        'port': port,\n-        'ipnum': ip,\n-        'uptime': uptime30,\n-        'lastsuccess': lastsuccess,\n-        'version': version,\n-        'agent': agent,\n-        'service': service,\n-        'blocks': blocks,\n-        'sortkey': sortkey,\n-    }\n-\n-def dedup(ips):\n-    '''deduplicate by address,port'''\n-    d = {}\n-    for ip in ips:\n-        d[ip['ip'],ip['port']] = ip\n-    return list(d.values())\n-\n-def filtermultiport(ips):\n-    '''Filter out hosts with more nodes per IP'''\n-    hist = collections.defaultdict(list)\n-    for ip in ips:\n-        hist[ip['sortkey']].append(ip)\n-    return [value[0] for (key,value) in list(hist.items()) if len(value)==1]\n-\n-def lookup_asn(net, ip):\n-    '''\n-    Look up the asn for an IP (4 or 6) address by querying cymru.com, or None\n-    if it could not be found.\n-    '''\n-    try:\n-        if net == 'ipv4':\n-            ipaddr = ip\n-            prefix = '.origin'\n-        else:                  # http://www.team-cymru.com/IP-ASN-mapping.html\n-            res = str()                         # 2001:4860:b002:23::68\n-            for nb in ip.split(':')[:4]:  # pick the first 4 nibbles\n-                for c in nb.zfill(4):           # right padded with '0'\n-                    res += c + '.'              # 2001 4860 b002 0023\n-            ipaddr = res.rstrip('.')            # 2.0.0.1.4.8.6.0.b.0.0.2.0.0.2.3\n-            prefix = '.origin6'\n-\n-        asn = int([x.to_text() for x in dns.resolver.query('.'.join(\n-                   reversed(ipaddr.split('.'))) + prefix + '.asn.cymru.com',\n-                   'TXT').response.answer][0].split('\\\"')[1].split(' ')[0])\n-        return asn\n-    except Exception:\n-        sys.stderr.write('ERR: Could not resolve ASN for \"' + ip + '\"\\n')\n-        return None\n-\n-# Based on Greg Maxwell's seed_filter.py\n-def filterbyasn(ips, max_per_asn, max_per_net):\n-    # Sift out ips by type\n-    ips_ipv46 = [ip for ip in ips if ip['net'] in ['ipv4', 'ipv6']]\n-    ips_onion = [ip for ip in ips if ip['net'] == 'onion']\n-\n-    # Filter IPv46 by ASN, and limit to max_per_net per network\n-    result = []\n-    net_count = collections.defaultdict(int)\n-    asn_count = collections.defaultdict(int)\n-    for ip in ips_ipv46:\n-        if net_count[ip['net']] == max_per_net:\n-            continue\n-        asn = lookup_asn(ip['net'], ip['ip'])\n-        if asn is None or asn_count[asn] == max_per_asn:\n-            continue\n-        asn_count[asn] += 1\n-        net_count[ip['net']] += 1\n-        result.append(ip)\n-\n-    # Add back Onions (up to max_per_net)\n-    result.extend(ips_onion[0:max_per_net])\n-    return result\n-\n-def ip_stats(ips):\n-    hist = collections.defaultdict(int)\n-    for ip in ips:\n-        if ip is not None:\n-            hist[ip['net']] += 1\n-\n-    return '%6d %6d %6d' % (hist['ipv4'], hist['ipv6'], hist['onion'])\n-\n-def main():\n-    lines = sys.stdin.readlines()\n-    ips = [parseline(line) for line in lines]\n-\n-    print('\\x1b[7m  IPv4   IPv6  Onion Pass                                               \\x1b[0m', file=sys.stderr)\n-    print('%s Initial' % (ip_stats(ips)), file=sys.stderr)\n-    # Skip entries with invalid address.\n-    ips = [ip for ip in ips if ip is not None]\n-    print('%s Skip entries with invalid address' % (ip_stats(ips)), file=sys.stderr)\n-    # Skip duplicates (in case multiple seeds files were concatenated)\n-    ips = dedup(ips)\n-    print('%s After removing duplicates' % (ip_stats(ips)), file=sys.stderr)\n-    # Skip entries from suspicious hosts.\n-    ips = [ip for ip in ips if ip['ip'] not in SUSPICIOUS_HOSTS]\n-    print('%s Skip entries from suspicious hosts' % (ip_stats(ips)), file=sys.stderr)\n-    # Enforce minimal number of blocks.\n-    ips = [ip for ip in ips if ip['blocks'] >= MIN_BLOCKS]\n-    print('%s Enforce minimal number of blocks' % (ip_stats(ips)), file=sys.stderr)\n-    # Require service bit 1.\n-    ips = [ip for ip in ips if (ip['service'] & 1) == 1]\n-    print('%s Require service bit 1' % (ip_stats(ips)), file=sys.stderr)\n-    # Require at least 50% 30-day uptime for clearnet, 10% for onion.\n-    req_uptime = {\n-        'ipv4': 50,\n-        'ipv6': 50,\n-        'onion': 10,\n-    }\n-    ips = [ip for ip in ips if ip['uptime'] > req_uptime[ip['net']]]\n-    print('%s Require minimum uptime' % (ip_stats(ips)), file=sys.stderr)\n-    # Require a known and recent user agent.\n-    ips = [ip for ip in ips if PATTERN_AGENT.match(ip['agent'])]\n-    print('%s Require a known and recent user agent' % (ip_stats(ips)), file=sys.stderr)\n-    # Sort by availability (and use last success as tie breaker)\n-    ips.sort(key=lambda x: (x['uptime'], x['lastsuccess'], x['ip']), reverse=True)\n-    # Filter out hosts with multiple bitcoin ports, these are likely abusive\n-    ips = filtermultiport(ips)\n-    print('%s Filter out hosts with multiple bitcoin ports' % (ip_stats(ips)), file=sys.stderr)\n-    # Look up ASNs and limit results, both per ASN and globally.\n-    ips = filterbyasn(ips, MAX_SEEDS_PER_ASN, NSEEDS)\n-    print('%s Look up ASNs and limit results per ASN and per net' % (ip_stats(ips)), file=sys.stderr)\n-    # Sort the results by IP address (for deterministic output).\n-    ips.sort(key=lambda x: (x['net'], x['sortkey']))\n-    for ip in ips:\n-        if ip['net'] == 'ipv6':\n-            print('[%s]:%i' % (ip['ip'], ip['port']))\n-        else:\n-            print('%s:%i' % (ip['ip'], ip['port']))\n-\n-if __name__ == '__main__':\n-    main()"
      },
      {
        "sha": "7b97436013871abb6a41ab02f1916cbec4df54c7",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 1164,
        "changes": 1164,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,1164 +0,0 @@\n-2.39.173.126:8333\n-3.14.168.201:48333\n-4.36.112.44:8333\n-5.8.18.31:8333\n-5.14.200.167:8333\n-5.56.20.2:8333\n-5.102.146.99:8333\n-5.103.137.146:9333\n-5.128.87.126:8333\n-5.133.65.82:8333\n-5.187.55.242:8333\n-5.188.62.24:8333\n-5.188.62.33:8333\n-5.199.133.193:8333\n-8.38.89.152:8333\n-13.231.20.249:8333\n-18.27.79.17:8333\n-20.184.15.116:8433\n-23.28.205.97:8333\n-23.106.252.230:8333\n-23.175.0.202:8333\n-23.175.0.212:8333\n-23.241.250.252:8333\n-23.245.24.154:8333\n-24.86.184.66:8333\n-24.116.246.9:8333\n-24.141.34.166:8333\n-24.155.196.246:8333\n-24.157.130.222:8333\n-24.188.176.255:8333\n-24.237.70.53:8333\n-27.124.4.67:8333\n-31.17.70.80:8333\n-31.21.8.32:8333\n-31.45.118.10:8333\n-31.132.17.56:8333\n-31.134.121.223:8333\n-32.214.183.114:8333\n-35.137.236.32:8333\n-35.185.145.105:8333\n-35.209.51.212:8333\n-35.245.175.76:8333\n-37.116.95.41:8333\n-37.143.9.107:8333\n-37.143.116.43:8333\n-37.191.244.149:8333\n-37.211.78.253:8333\n-37.221.209.222:24333\n-37.228.92.110:8333\n-43.225.62.107:8333\n-43.225.157.152:8333\n-45.36.184.6:8333\n-45.48.168.16:8333\n-45.85.85.8:8333\n-45.85.85.9:8333\n-45.129.180.214:8333\n-45.149.78.128:8333\n-45.151.125.218:8333\n-45.154.255.46:8333\n-45.155.157.239:8333\n-46.28.132.34:8333\n-46.28.204.21:8333\n-46.32.50.98:8333\n-46.59.13.35:8333\n-46.128.40.173:8333\n-46.128.140.193:8333\n-46.146.248.89:8333\n-46.166.162.45:20001\n-46.188.15.6:8333\n-46.229.165.142:8333\n-46.229.238.187:8333\n-46.249.83.82:8333\n-46.254.217.169:8333\n-47.74.191.34:8333\n-47.115.53.163:8333\n-47.187.26.135:8333\n-47.222.103.234:8333\n-47.253.5.99:8333\n-49.232.82.76:8333\n-49.247.215.43:8333\n-50.2.13.166:8333\n-50.34.39.72:8333\n-50.45.232.189:8333\n-50.68.104.92:8333\n-51.68.36.57:8333\n-51.154.60.34:8333\n-52.169.238.66:8333\n-54.197.30.223:8333\n-54.227.66.57:8333\n-58.158.0.86:8333\n-58.171.135.242:8333\n-58.229.208.158:8333\n-60.244.109.19:8333\n-62.38.75.208:8333\n-62.74.143.11:8333\n-62.80.227.49:8333\n-62.152.58.16:9421\n-62.210.167.199:8333\n-62.234.188.160:8333\n-62.251.54.163:8333\n-63.227.116.162:8333\n-65.19.155.82:8333\n-65.95.49.102:8333\n-66.18.172.21:8333\n-66.240.237.155:8333\n-67.210.228.203:8333\n-69.30.215.42:8333\n-69.59.18.206:8333\n-69.64.33.71:8333\n-69.119.193.9:8333\n-69.209.23.72:8333\n-70.123.125.237:8333\n-70.185.56.136:8333\n-71.38.90.235:8333\n-72.12.73.70:8333\n-72.53.134.182:8333\n-72.225.7.80:8333\n-72.234.182.39:8333\n-72.250.184.57:8333\n-73.83.103.79:8333\n-74.118.137.119:8333\n-74.133.100.74:8333\n-74.215.219.214:8333\n-74.220.255.190:8333\n-75.158.39.231:8333\n-77.53.53.196:8333\n-77.70.16.245:8333\n-77.105.87.97:8333\n-77.120.113.69:8433\n-77.120.122.22:8433\n-77.166.83.167:8333\n-77.247.178.130:8333\n-78.27.139.13:8333\n-78.63.28.146:8333\n-78.83.103.4:8333\n-78.141.123.99:8333\n-79.77.33.131:8333\n-79.77.133.30:8333\n-79.101.1.25:8333\n-79.117.192.229:8333\n-79.133.228.55:8333\n-79.146.21.163:8333\n-80.89.203.172:8001\n-80.93.213.246:8333\n-80.192.98.110:8334\n-80.229.28.60:8333\n-80.232.247.210:8333\n-80.242.39.76:8333\n-80.253.94.252:8333\n-81.0.198.25:8333\n-81.7.13.84:8333\n-81.117.225.245:8333\n-81.135.137.225:8333\n-81.171.22.143:8333\n-81.191.233.134:8333\n-81.232.78.75:8333\n-81.242.91.23:8333\n-82.29.58.109:8333\n-82.136.99.22:8333\n-82.149.97.25:17567\n-82.165.19.48:8333\n-82.194.153.233:8333\n-82.197.215.125:8333\n-82.199.102.10:8333\n-82.200.205.30:8333\n-82.202.68.231:8333\n-82.221.128.31:8333\n-82.228.6.131:8333\n-83.85.139.94:8333\n-83.99.245.20:8333\n-83.137.41.10:8333\n-83.174.209.87:8333\n-83.217.8.31:44420\n-84.38.3.249:8333\n-84.38.185.122:8333\n-84.92.92.247:8333\n-84.192.16.234:8333\n-84.194.158.124:8333\n-84.212.145.24:8333\n-84.212.244.95:8333\n-84.216.51.36:8333\n-84.255.249.163:8333\n-85.25.255.147:8333\n-85.70.156.209:8333\n-85.145.142.46:8333\n-85.170.233.95:8333\n-85.184.138.108:8333\n-85.190.0.5:8333\n-85.191.200.51:8333\n-85.192.191.6:18500\n-85.194.238.131:8333\n-85.195.54.110:8333\n-85.214.161.252:8333\n-85.214.185.51:8333\n-85.241.106.203:8333\n-85.246.168.252:8333\n-86.56.238.247:8333\n-87.61.90.230:8333\n-87.79.68.86:8333\n-87.79.94.221:8333\n-87.120.8.5:20008\n-87.246.46.132:8333\n-87.247.111.222:8333\n-88.84.222.252:8333\n-88.86.243.241:8333\n-88.87.93.52:1691\n-88.119.197.200:8333\n-88.129.253.94:8333\n-88.147.244.250:8333\n-88.208.3.195:8333\n-88.212.44.33:8333\n-88.214.57.95:8333\n-89.106.199.38:8333\n-89.108.126.228:8333\n-89.115.120.43:8333\n-89.133.68.65:8333\n-89.190.19.162:8333\n-89.248.172.10:8333\n-90.146.153.21:8333\n-90.182.165.18:8333\n-91.106.188.229:8333\n-91.193.237.116:8333\n-91.204.99.178:8333\n-91.204.149.5:8333\n-91.214.70.63:8333\n-91.228.152.236:8333\n-92.12.154.115:8333\n-92.249.143.44:8333\n-93.12.66.98:8333\n-93.46.54.4:8333\n-93.115.20.130:8333\n-93.123.180.164:8333\n-93.189.145.169:8333\n-93.241.228.102:8333\n-94.19.7.55:8333\n-94.19.128.204:8333\n-94.52.112.227:8333\n-94.154.96.130:8333\n-94.156.174.201:8333\n-94.158.246.183:8333\n-94.177.171.73:8333\n-94.199.178.233:8100\n-94.237.125.30:8333\n-94.247.134.77:8333\n-95.48.228.45:8333\n-95.69.249.63:8333\n-95.82.146.70:8333\n-95.83.73.31:8333\n-95.84.164.43:8333\n-95.87.226.56:8333\n-95.110.234.93:8333\n-95.163.71.126:8333\n-95.164.65.194:8333\n-95.174.66.211:8333\n-95.211.174.137:8333\n-95.216.11.156:8433\n-96.47.114.108:8333\n-97.84.232.105:8333\n-97.99.205.241:8333\n-98.25.193.114:8333\n-99.115.25.13:8333\n-101.32.19.184:8333\n-101.100.174.240:8333\n-102.132.245.16:8333\n-103.14.244.190:8333\n-103.76.48.5:8333\n-103.84.84.250:8335\n-103.99.168.150:8333\n-103.109.101.216:8333\n-103.122.247.102:8333\n-103.129.13.45:8333\n-103.198.192.14:20008\n-103.224.119.99:8333\n-103.231.191.7:8333\n-103.235.230.196:8333\n-104.171.242.155:8333\n-104.238.220.199:8333\n-106.163.158.127:8333\n-107.150.41.179:8333\n-107.159.93.103:8333\n-108.183.77.12:8333\n-109.9.175.65:8333\n-109.99.63.159:8333\n-109.110.81.90:8333\n-109.123.213.130:8333\n-109.134.232.81:8333\n-109.169.20.168:8333\n-109.199.241.148:8333\n-109.229.210.6:8333\n-109.236.105.40:8333\n-109.248.206.13:8333\n-111.42.74.65:8333\n-111.90.140.179:8333\n-112.215.205.236:8333\n-113.52.135.125:8333\n-114.23.246.137:8333\n-115.47.141.250:8885\n-115.70.110.4:8333\n-116.34.189.55:8333\n-118.103.126.140:28333\n-118.189.187.219:8333\n-119.3.208.236:8333\n-119.8.47.225:8333\n-119.17.151.61:8333\n-120.25.24.30:8333\n-120.241.34.10:8333\n-121.98.205.100:8333\n-122.112.148.153:8339\n-122.116.42.140:8333\n-124.217.235.180:8333\n-125.236.215.133:8333\n-129.13.189.212:8333\n-130.185.77.105:8333\n-131.188.40.191:8333\n-131.193.220.15:8333\n-135.23.124.239:8333\n-136.33.185.32:8333\n-136.56.170.96:8333\n-137.226.34.46:8333\n-138.229.26.42:8333\n-139.9.249.234:8333\n-141.101.8.36:8333\n-143.176.224.104:8333\n-144.2.69.224:8333\n-144.34.161.65:18333\n-144.91.116.44:8333\n-144.137.29.181:8333\n-148.66.50.50:8335\n-148.72.150.231:8333\n-148.170.212.44:8333\n-149.167.99.190:8333\n-154.92.16.191:8333\n-154.221.27.21:8333\n-156.19.19.90:8333\n-156.241.5.190:8333\n-157.13.61.76:8333\n-157.13.61.80:8333\n-157.230.166.98:14391\n-158.75.203.2:8333\n-158.181.125.150:8333\n-158.181.226.33:8333\n-159.100.242.254:8333\n-159.100.248.234:8333\n-159.138.87.18:8333\n-160.16.0.30:8333\n-162.0.227.54:8333\n-162.0.227.56:8333\n-162.62.18.226:8333\n-162.209.1.233:8333\n-162.243.175.86:8333\n-162.244.80.208:8333\n-162.250.188.87:8333\n-162.250.189.53:8333\n-163.158.202.112:8333\n-163.158.243.230:8333\n-165.73.62.31:8333\n-166.62.82.103:32771\n-166.70.94.106:8333\n-167.86.90.239:8333\n-169.44.34.203:8333\n-172.93.101.73:8333\n-172.105.7.47:8333\n-173.23.103.30:8000\n-173.53.79.6:8333\n-173.70.12.86:8333\n-173.89.28.137:8333\n-173.176.184.54:8333\n-173.208.128.10:8333\n-173.254.204.69:8333\n-173.255.204.124:8333\n-174.94.155.224:8333\n-174.114.102.41:8333\n-174.114.124.12:8333\n-176.10.227.59:8333\n-176.31.224.214:8333\n-176.74.136.237:8333\n-176.99.2.207:8333\n-176.106.191.2:8333\n-176.160.228.9:8333\n-176.191.182.3:8333\n-176.212.185.153:8333\n-176.241.137.183:8333\n-177.38.215.73:8333\n-178.16.222.146:8333\n-178.132.2.246:8333\n-178.143.191.171:8333\n-178.148.172.209:8333\n-178.148.226.180:8333\n-178.150.96.46:8333\n-178.182.227.50:8333\n-178.236.137.63:8333\n-178.255.42.126:8333\n-180.150.52.37:8333\n-181.39.32.99:8333\n-181.48.77.26:8333\n-181.52.223.52:8333\n-181.238.51.152:8333\n-183.88.223.208:8333\n-183.110.220.210:30301\n-184.95.58.166:8336\n-184.164.147.82:41333\n-184.171.208.109:8333\n-185.25.48.39:8333\n-185.25.48.184:8333\n-185.64.116.15:8333\n-185.80.219.132:8333\n-185.85.3.140:8333\n-185.95.219.53:8333\n-185.108.244.41:8333\n-185.134.233.121:8333\n-185.145.128.21:8333\n-185.148.3.227:8333\n-185.153.196.240:8333\n-185.158.114.184:8333\n-185.165.168.196:8333\n-185.181.230.74:8333\n-185.185.26.141:8111\n-185.186.208.162:8333\n-185.189.132.178:57780\n-185.211.59.50:8333\n-185.233.148.146:8333\n-185.238.129.113:8333\n-185.249.199.106:8333\n-185.251.161.54:8333\n-187.189.153.136:8333\n-188.37.24.190:8333\n-188.42.40.234:18333\n-188.61.46.36:8333\n-188.68.45.143:8333\n-188.127.229.105:8333\n-188.134.6.84:8333\n-188.134.8.36:8333\n-188.214.129.65:20012\n-188.230.168.114:8333\n-189.34.14.93:8333\n-189.207.46.32:8333\n-190.211.204.68:8333\n-191.209.21.188:8333\n-192.3.11.20:8333\n-192.3.185.210:8333\n-192.65.170.15:8333\n-192.65.170.50:8333\n-192.146.137.18:8333\n-192.157.202.178:8333\n-192.227.80.83:8333\n-193.10.203.23:8334\n-193.25.6.206:8333\n-193.42.110.30:8333\n-193.58.196.212:8333\n-193.106.28.8:8333\n-193.189.190.123:8333\n-193.194.163.35:8333\n-193.194.163.53:8333\n-194.14.246.205:8333\n-194.36.91.253:8333\n-194.126.113.135:8333\n-194.135.135.69:8333\n-195.56.63.4:8333\n-195.56.63.5:8333\n-195.67.139.54:8333\n-195.135.194.8:8333\n-195.202.169.149:8333\n-195.206.105.42:8333\n-195.209.249.164:8333\n-198.1.231.6:8333\n-198.200.43.215:8333\n-199.182.184.204:8333\n-199.247.7.208:8333\n-199.247.249.188:8333\n-200.7.252.118:8333\n-200.20.186.254:8333\n-200.83.166.136:8333\n-202.55.87.45:8333\n-202.79.167.65:8333\n-202.108.211.135:8333\n-202.169.102.73:8333\n-203.130.48.117:8885\n-203.132.95.10:8333\n-203.151.166.123:8333\n-204.93.113.108:8333\n-204.111.241.195:8333\n-206.124.149.66:8333\n-207.115.102.98:8333\n-207.229.46.150:8333\n-208.76.252.198:8333\n-208.100.13.56:8333\n-208.100.178.175:8333\n-208.110.99.105:8333\n-209.6.210.179:8333\n-209.133.220.74:8333\n-209.141.57.57:8333\n-211.27.147.67:8333\n-212.34.225.118:8333\n-212.89.173.216:8333\n-212.99.226.36:9020\n-212.237.96.98:8333\n-213.89.131.53:8333\n-216.38.129.164:8333\n-216.134.165.55:8333\n-216.146.251.8:8333\n-216.189.190.95:8333\n-216.226.128.189:8333\n-216.236.164.82:8333\n-217.19.216.210:8333\n-217.26.32.10:8333\n-217.64.47.138:8333\n-217.64.133.220:8333\n-217.92.55.246:8333\n-218.31.113.245:8333\n-218.255.242.114:8333\n-220.133.39.61:8333\n-223.16.30.175:8333\n-[2001:19f0:6001:306f:ec4:7aff:fe8f:66ec]:8333\n-[2001:1bc0:cc::a001]:8333\n-[2001:1c02:2f18:d00:b62e:99ff:fe49:d492]:8333\n-[2001:4100:0:64::93]:8333\n-[2001:4100:0:64:dcaf:afff:fe00:6707]:8333\n-[2001:470:a:c13::2]:8333\n-[2001:4801:7819:74:b745:b9d5:ff10:a61a]:8333\n-[2001:4ba0:fffa:5d::93]:8333\n-[2001:610:1908:ff01:f816:3eff:fe33:2e32]:8333\n-[2001:638:a000:4140::ffff:191]:8333\n-[2001:648:2800:131:4b1f:f6fc:20f7:f99f]:8333\n-[2001:678:7dc:8::2]:8333\n-[2001:678:cc8::1:10:88]:20008\n-[2001:67c:1220:80c::93e5:dd2]:8333\n-[2001:67c:1220:80c:e5dc:ad0c:9289:c28f]:8333\n-[2001:67c:16dc:1201:5054:ff:fe17:4dac]:8333\n-[2001:67c:2354:2::22]:8333\n-[2001:67c:26b4:12:7ae3:b5ff:fe04:6f9c]:8333\n-[2001:67c:2f0::20:fa]:8333\n-[2001:718:801:311:5054:ff:fe19:c483]:8333\n-[2001:8d8:87c:7c00::99:3c1]:8333\n-[2001:8f1:1404:3700:8e49:715a:2e09:b634]:9444\n-[2001:b07:5d29:99a5:194b:3874:d65e:a90d]:8333\n-[2001:ba8:1f1:f0fe::2]:8333\n-[2001:bc8:1200:0:dac4:97ff:fe2a:3554]:20008\n-[2001:da8:100d:22:10fa:d85f:10f2:21fd]:8333\n-[2001:da8:8001:7a39:f035:7d:b99f:eb79]:8333\n-[2001:e42:103:100::30]:8333\n-[2400:2412:103:c900:825:8f20:eaff:65c2]:8333\n-[2400:4052:e20:4f00:69fe:bb33:7b1c:a1ca]:8333\n-[2401:1800:7800:105:be76:4eff:fe1c:b35]:8333\n-[2401:3900:2:1::2]:8333\n-[2401:b140::44:150]:8333\n-[2401:d002:4402:0:8f28:591a:6ea0:c683]:8333\n-[2403:6200:8821:3d68:195b:87e9:6819:d5c8]:8333\n-[2405:6580:2140:3a00:c28c:983:364b:5d70]:8333\n-[2405:9800:b911:a18a:58eb:cd3c:9d82:ea4a]:8333\n-[2405:aa00:2::40]:8333\n-[2409:10:ca20:1df0:224:e8ff:fe1f:60d9]:8333\n-[2409:8a1e:a9af:3660:1c5a:5b6b:8a2d:9848]:8333\n-[2409:8a1e:a9af:3660:404:39ba:88f2:e8df]:8333\n-[240b:10:9141:400:49b4:3a2e:1e5:84c]:8333\n-[240d:1a:759:6000:a7b1:451a:8874:e1ac]:8333\n-[240d:1a:759:6000:ddab:3141:4da0:8878]:8333\n-[2600:8805:2400:14e:12dd:b1ff:fef2:3013]:8333\n-[2601:602:8d80:b63:dc3e:24ff:fe92:5eb]:8333\n-[2602:ffb6:4:2798:f816:3eff:fe2f:5441]:8333\n-[2602:ffb6:4:739e:f816:3eff:fe00:c2b3]:8333\n-[2602:ffb8::208:72:57:200]:8333\n-[2604:1380:4111:9300::1]:8333\n-[2604:4300:a:2e:21b:21ff:fe11:392]:8333\n-[2604:4500::2e06]:8112\n-[2604:5500:706a:4000:fc79:b9bb:1d7:c325]:8333\n-[2604:5500:c134:4000::3fc]:32797\n-[2604:6800:5e11:162:5c8f:d2ff:fe26:146f]:8333\n-[2605:4d00::50]:8333\n-[2605:6400:20:13bf:df1d:181c:83bb:22e8]:8333\n-[2605:ae00:203::203]:8333\n-[2605:c000:2a0a:1::102]:8333\n-[2607:f2c0:f00e:300::54]:8333\n-[2607:f2f8:ad40:bc1::1]:8333\n-[2607:f470:8:1048:ae1f:6bff:fe70:7240]:8333\n-[2607:ff28:800f:97:225:90ff:fe75:1110]:8333\n-[2620:11c:5001:1118:d267:e5ff:fee9:e673]:8333\n-[2620:6e:a000:2001::6]:8333\n-[2804:14d:4c93:9809:9769:da80:1832:3480]:8333\n-[2a00:1328:e101:c00::163]:8333\n-[2a00:1398:4:2a03:215:5dff:fed6:1033]:8333\n-[2a00:13a0:3015:1:85:14:79:26]:8333\n-[2a00:1630:14::101]:8333\n-[2a00:1768:2001:27::ef6a]:8333\n-[2a00:1828:a004:2::666]:8333\n-[2a00:1838:36:17::38cb]:8333\n-[2a00:1838:36:7d::d3c6]:8333\n-[2a00:1c10:2:709:58f7:e0ff:fe24:a0ba]:22220\n-[2a00:1c10:2:709::217]:22220\n-[2a00:1f40:5001:100::31]:8333\n-[2a00:6020:1395:1400:baf7:2d43:60b3:198b]:8333\n-[2a00:7c80:0:10b::3faf]:8333\n-[2a00:8a60:e012:a00::21]:8333\n-[2a00:ab00:603:84::3]:8333\n-[2a00:bbe0:cc:0:62a4:4cff:fe23:7510]:8333\n-[2a00:ca8:a1f:3025:f949:e442:c940:13e8]:8333\n-[2a00:d2a0:a:3d00:1cdf:38bb:a7d6:c251]:8333\n-[2a00:d880:11::20e]:8333\n-[2a00:ec0:7207:9100:5f8f:25dd:2574:3982]:8333\n-[2a00:f820:433::36]:8333\n-[2a01:138:a017:b018::42]:8333\n-[2a01:430:17:1::ffff:1153]:8333\n-[2a01:490:16:301::2]:8333\n-[2a01:4b00:807c:1b00:cda1:c6a:2bad:2418]:8333\n-[2a01:4b00:80e7:5405::1]:8333\n-[2a01:4f8:192:4212::2]:8433\n-[2a01:7a0:2:137c::3]:8333\n-[2a01:7a7:2:1467:ec4:7aff:fee2:5690]:8333\n-[2a01:7c8:d002:10f:5054:ff:fe5c:dac7]:8333\n-[2a01:7c8:d002:318:5054:ff:febe:cbb1]:8333\n-[2a01:8740:1:ffc5::8c6a]:8333\n-[2a01:cb00:f98:ca00:5054:ff:fed4:763d]:8333\n-[2a01:cb14:cf6:bc00:21e5:f12e:32c8:145]:8333\n-[2a01:d0:0:1c::245]:8333\n-[2a01:d0:bef2::12]:8333\n-[2a01:e35:2e40:6830:211:32ff:fea6:de3d]:8333\n-[2a02:1205:c6aa:60c0:70d8:aaee:a82d:993c]:8333\n-[2a02:169:502::614]:8333\n-[2a02:180:1:1::5b8f:538c]:8333\n-[2a02:348:62:5ef7::1]:8333\n-[2a02:390:9000:0:218:7dff:fe10:be33]:8333\n-[2a02:7aa0:1619::adc:8de0]:8333\n-[2a02:7b40:b0df:8925::1]:8333\n-[2a02:7b40:b905:37db::1]:8333\n-[2a02:810d:8cbf:f3a8:96c6:91ff:fe17:ae1d]:8333\n-[2a02:8389:1c0:9680:201:2eff:fe82:b3cc]:8333\n-[2a02:a454:a516:1:517:928:7e0d:957c]:8333\n-[2a02:af8:fab0:804:151:236:34:161]:8333\n-[2a02:af8:fab0:808:85:234:145:132]:8333\n-[2a02:e00:fff0:1e2::a]:8333\n-[2a03:2260:3006:d:d307:5d1d:32ca:1fe8]:8333\n-[2a03:6000:870:0:46:23:87:218]:8333\n-[2a03:9da0:f6:1::2]:8333\n-[2a03:c980:db:47::]:8333\n-[2a03:e2c0:1ce::2]:8333\n-[2a04:3544:1000:1510:706c:abff:fe6c:501c]:8333\n-[2a04:52c0:101:383::2a87]:8333\n-[2a04:52c0:101:3fb::4c27]:8333\n-[2a04:ee41:83:50df:d908:f71d:2a86:b337]:8333\n-[2a05:6d40:b94e:d100:225:90ff:fe0d:cfc2]:8333\n-[2a05:e5c0:0:100:250:56ff:feb9:d6cb]:8333\n-[2a05:fc87:1:6::2]:8333\n-[2a05:fc87:4::8]:8333\n-[2a07:5741:0:115d::1]:8333\n-[2a07:a880:4601:1062:b4b4:bd2a:39d4:7acf]:51401\n-[2a07:abc4::1:946]:8333\n-[2a07:b400:1:34c::2:1002]:8333\n-[2a0a:8c41::b4]:8333\n-[2a0a:c801:1:7::183]:8333\n-[2a0b:ae40:3:4a0a::15]:8333\n-[2a0f:df00:0:254::46]:8333\n-[2c0f:f598:5:1:1001::1]:8333\n-[2c0f:fce8:0:400:b7c::1]:8333\n-226eupdnaouu4h2v.onion:8333\n-22h7b6f3caabqqsu.onion:8333\n-23wdfqkzttmenvki.onion:8333\n-23yi3frxymtwdgre.onion:8333\n-2ajon3moyf4i2hbb.onion:8333\n-2bfmlpk55hffpl6e.onion:8333\n-2ckmbf6sglwydeth.onion:8333\n-2hkusi5gcaautwqf.onion:8333\n-2ivhmlbxbgnkcykl.onion:8333\n-2mmxouhv6nebowkq.onion:8333\n-2qsnv6exnuuiar7z.onion:8333\n-2qudbhlnvqpli3sz.onion:8333\n-2ujxdfovfyjpmdto.onion:8333\n-2xdgeufrek3eumkw.onion:8333\n-2xdzsruhsej4tsiw.onion:8333\n-34ran2woq4easmss.onion:8333\n-36q7khhej2lxd3wf.onion:8333\n-373wjdspuo52utzq.onion:8333\n-376klet5xqbrg2jv.onion:8333\n-37kwd7fxop766l5k.onion:8333\n-3e5t7hq4alt5tovx.onion:8333\n-3gbxhebfhouuwgc3.onion:8333\n-3hgbjze2nbwyuewf.onion:8333\n-3iuuvrd2waha2cxo.onion:8333\n-3jtxujdaiwh6iltu.onion:8333\n-3l5eq2du7mvscj4a.onion:8333\n-3nofngnqlqeehn7o.onion:8333\n-3r44ddzjitznyahw.onion:8333\n-3vtbuwmton7vq5qz.onion:8333\n-46ohzttz4peki43g.onion:8333\n-47fl3ivl4v56jstr.onion:8333\n-47i6qrl2ijqcwlg6.onion:8333\n-47uupgzcnrwahoto.onion:8333\n-4c5cki37evofds6d.onion:8333\n-4eq36jrx7xuytfpc.onion:8333\n-4ewkdxvcg57adrni.onion:8333\n-4flvgibnm2nld3na.onion:8333\n-4iaontym47imawe4.onion:8333\n-4jxz37oou5ag763c.onion:8333\n-4mnkvj6ha73eqnbk.onion:8333\n-4nnuyxm5k5tlyjq3.onion:8333\n-4nz2yg4cnote3ej7.onion:8333\n-4pozwh6564ygzddk.onion:8333\n-4qgfb56rvpbmesx7.onion:8333\n-4rsax23taqzwmimj.onion:8333\n-4u5j5ay6rasowt4m.onion:8333\n-4vorvtoyegh4zbvr.onion:8333\n-52s4j5pldwlpzhtw.onion:8333\n-5abpiiqfvekoejro.onion:8333\n-5aydzxx6jyoz3nez.onion:8333\n-5cxzdsrtok5dgo4a.onion:8333\n-5eduikpudie3jyrf.onion:8333\n-5epeafkmya4fv5d5.onion:8333\n-5fyxlztic3t6notz.onion:8333\n-5hd6eyew5ybnq6gb.onion:8333\n-5jyfzhwksb6urrp2.onion:8333\n-5nooqgct567ig57v.onion:8333\n-5nsfm4nqqzzprjrp.onion:8333\n-5oqstxspzhlgjef6.onion:8333\n-5pzzmd4tfonrqzb2.onion:8333\n-5sckmx4yucbnp4io.onion:8333\n-5ue7worzbn6hon3e.onion:8333\n-5wxhx2tozpovf6z3.onion:8333\n-5xk3yun36e32e34i.onion:8333\n-5zght2g7vcsapi65.onion:8333\n-62dcdpvdolfzkdzl.onion:8333\n-63bko2mhixnn2b7d.onion:8333\n-67hjvfv6wictalm5.onion:8333\n-6g6ko4klkf5atldi.onion:8333\n-6k5zreexw4cadxi5.onion:8333\n-6kf5ayhlpenywgas.onion:8333\n-6maigxjvcet4pite.onion:8333\n-6ressv4dvplb5ihh.onion:8333\n-6rjex6gyuaui3c5e.onion:8333\n-6skgnf43pphdvjua.onion:8333\n-6stxaoduwisg5sqh.onion:8333\n-6xqy4ts6bo6u5dgm.onion:8333\n-7avnl3dqpgu23jva.onion:8333\n-7ff4wk266no23txn.onion:8333\n-7hipbuzfdcyzqkkg.onion:8333\n-7sjmlzrthjlpfydk.onion:8333\n-7tut3zt2akwrmw6x.onion:8333\n-7uhsjzj6nx3dfnxt.onion:8333\n-7wm4wso3wvatxnbt.onion:8333\n-7ykmzuybwd2ptzg4.onion:8333\n-a27bvhina4y23jxo.onion:8333\n-a53vtdm7uiet5vdl.onion:8333\n-a56572xjuofnt2dp.onion:8333\n-abp25knifdsnc2rv.onion:8333\n-aefx7ubzpal7clak.onion:8333\n-ai5r2diozoe7rrdz.onion:8333\n-aipupphit3enggpj.onion:8333\n-algpjjygd3gtnmpp.onion:8333\n-alihua7rhyc452hr.onion:8333\n-am3gyyfynxzwyxhx.onion:8333\n-ankozzfhl2r3uc6u.onion:8333\n-at3twjlbtc2lqnq5.onion:8333\n-avqobl72pmc64dyi.onion:8333\n-awmdz2fs3b5h5ut5.onion:8333\n-ayywpiy77butdjrj.onion:8333\n-b2i3pj7c24cvprs7.onion:8333\n-b4ilebyxcu6nttio.onion:8333\n-b4vvkbqipcmkwp4v.onion:8333\n-bddfqxps5ibd3ftw.onion:8333\n-be5bgcpo4ooux5qy.onion:8333\n-bgla4m6zetvtv7ls.onion:8333\n-bh32gzw3nyckzqut.onion:8333\n-bho4kodpehn7xr3x.onion:8333\n-bitcoin4rlfa4wqx.onion:8333\n-biw7s6jf6r2mf3cu.onion:8333\n-bk7yp6epnmcllq72.onion:8333\n-blcktrgve5vetjsk.onion:8333\n-blwbp7gfdffdsx4g.onion:8333\n-bnxn6qqc55gvn5op.onion:8333\n-bp7o22lvcjawelvv.onion:8333\n-bqqyqucgj4tchn64.onion:8333\n-bvdzmutcqf7gzzn5.onion:8333\n-c36zmegjkinftmtf.onion:8333\n-c4fn62gnltlgrptv.onion:8333\n-caael5yedviooqzk.onion:8333\n-caq54ablfbrnumdd.onion:8333\n-cernrmrk5zomzozn.onion:8333\n-chri6itgjaagof4t.onion:8333\n-cncwik3tnd2ejm5z.onion:8333\n-cuyjqoziemcmwaxl.onion:8333\n-cx7qa2gpqyp7pld5.onion:8333\n-czp7wgaus4gvio72.onion:8333\n-d2fn54rfyjdangi4.onion:8333\n-d2sk45u6ca64yeqh.onion:8333\n-d3aowmngvktsziae.onion:8333\n-d5iu4aiz3y2kgcgj.onion:8333\n-d6zbw2sxnxgj5sv3.onion:8333\n-db5rd5e46t7mgini.onion:8333\n-dci2gulorl44yj55.onion:8333\n-ddpth2mwt3rsvoog.onion:8333\n-dfrwza7fcecknnms.onion:8333\n-djwhjfj4rh3oz3yj.onion:8333\n-dkk5mmpe5jtjodk5.onion:8333\n-doj3zgmsbzurmqgp.onion:8333\n-dpce4f3rcqddzbx5.onion:8333\n-drwo3vnxch5ozfbo.onion:8333\n-duikkidxip3lyexn.onion:8333\n-duqdliptc22i6hf5.onion:8333\n-duyp4coh5d7nh3ud.onion:8333\n-duz5two3z7c55lxj.onion:8333\n-dvu6dlar6ezc6xen.onion:8333\n-dy6zqs46ycleayyp.onion:8333\n-dz2ydmj3yqrcm4r7.onion:8333\n-e2b2a5suvdawzxud.onion:8333\n-e33h57j2ewkkqsn5.onion:8333\n-e5kjiay7pzj5qpzv.onion:8333\n-e7iko42d2wzcmvy4.onion:8333\n-ea6boh4kotq56ws5.onion:8333\n-efdx6gc4s5ezyqeg.onion:8333\n-efrpuuic6ukeyqcs.onion:8333\n-egruc3bi3itru6gq.onion:8333\n-erc6tjs2ucyadl23.onion:8333\n-eue2n5sk5tktg5bv.onion:8333\n-ezkr7stq4w7ohjrt.onion:8333\n-f3nyyjba6kpxznhk.onion:8333\n-faq73vj4pcs73thu.onion:8333\n-fdvtlj3pscbxuh75.onion:8333\n-fgdpxov4nzxvhcpv.onion:8333\n-fisqq6vzk3m6t225.onion:8333\n-fkgp3qwegacrd2bj.onion:8333\n-fo3tdfwx27takqq5.onion:8333\n-fqkxtchwypispkpv.onion:8333\n-fqunuhlwvd7rq6d5.onion:8333\n-frwt5mscpyhiuwpe.onion:8333\n-fta4gfjiuv6f2le2.onion:8333\n-fuoy2ipuqrqwe5cf.onion:8333\n-fz6nsij6jiyuwlsc.onion:8333\n-g3vlnaaaog5sgui5.onion:8333\n-g44i6jwsutkwmspz.onion:8333\n-g55t65d5ckjixcnw.onion:8333\n-gajd6eyrl2qwkfmg.onion:8333\n-gblue3hr53p4grx7.onion:8333\n-gbpro5tzduiuff4v.onion:8333\n-gc4l3tql32qhfgmi.onion:8333\n-gcnlorvtpycuajc6.onion:8333\n-gdsib2nk2eeoidgc.onion:8333\n-ge5gm7c6w7yahpz7.onion:8333\n-gegcteeep4cwftl5.onion:8333\n-gfoyraudgv5qjdku.onion:8333\n-ggpbuypmxgi26lc6.onion:8333\n-ghqivye7cfckisnt.onion:8333\n-girakxomne5fby64.onion:8333\n-glz5gfk33tuug5ne.onion:8333\n-gplatxoyg5nxl5rj.onion:8333\n-gripl5xjwy2dcr6c.onion:8333\n-gthhzlmqci22nxru.onion:8333\n-gto2d64swosfmk6c.onion:8333\n-guaciney52mgcbp2.onion:8333\n-gwktgrmtwk6nv5sc.onion:8333\n-gwoxnokdcwc7hy4p.onion:8333\n-h333f4qnwe7mrymn.onion:8333\n-h6a32n4blbwwyn4d.onion:8333\n-hafwtrbooszoembm.onion:8333\n-hbwhgsb3eeinnr6t.onion:8333\n-hcv6foxh5mk7fhb5.onion:8333\n-hd6hktcl6wamzlzm.onion:8333\n-hda6msa4v4rt77gx.onion:8333\n-hdgnxkuqsd6wjwwx.onion:8333\n-hgh3azn3eesddvcg.onion:8333\n-hhyxu6bwkjefejoz.onion:8333\n-hizn6rmofsg3upmn.onion:8333\n-hjqxxsy2osemfvev.onion:8333\n-hkbp7mbgw6klls4s.onion:8333\n-hlojuwiwbkoj4kdz.onion:8333\n-hlzxsjr7ob3qzzqq.onion:8333\n-hniuzplezebyhv7a.onion:8333\n-hondewkj4s4rdcwf.onion:8333\n-hql5nv6vhceid3bn.onion:8333\n-hspjo7mqrre5gyxr.onion:8333\n-hu64s2mdr3x7yxka.onion:8333\n-hvwvq2swkqw3qvyo.onion:8333\n-hwo2biyndrrvpl6f.onion:8333\n-hzxj3dth3y2xt45o.onion:8333\n-i3ufxuw3t7cxfdpq.onion:8333\n-ia3n3q5u45gvpx7a.onion:8333\n-icfgs3fctckd4yeo.onion:8333\n-icpz6thqvdjcwlvb.onion:8333\n-if32zo5u4mhdunfd.onion:8333\n-ig4lguql6vxkbmmr.onion:8333\n-ihhcr7fhczqdac4y.onion:8333\n-ijm2tyxob7vkvazz.onion:8333\n-ip3puuqghumfz5ww.onion:8333\n-iq3ket72f3y2frpg.onion:8333\n-iqagt5co4dt7h6hf.onion:8333\n-iugw42ih6hprqr26.onion:8333\n-ivf774v4t7k63i6d.onion:8333\n-ivfacdf7cig2z2y2.onion:8333\n-ivsxdwku5og2zj4l.onion:8333\n-ixwgrhaklvu4g6o7.onion:8333\n-iz56moo6mkp3g7xo.onion:8333\n-j2cp5muw5j3lumcx.onion:8333\n-j2lrkrwugldwewws.onion:8333\n-j2qtmkd2dablssz4.onion:8333\n-j5e2yuan57v2h5el.onion:8333\n-j5jfrdthqt5g25xz.onion:8333\n-j5lk2uv2bspfqxfk.onion:8333\n-janvvzsmzcsj3fil.onion:8333\n-jenn2tmyl3xxarmq.onion:8333\n-jfoe5f2sczojfp32.onion:8333\n-jgcgi6k2pxooi5q3.onion:8333\n-jhana24s3dzkitzp.onion:8333\n-jitgulb24mvfqrdg.onion:8333\n-jjuvwbjfzljmn7t3.onion:8333\n-jlcfomgr5xfexaif.onion:8333\n-jlehs6ybb26qlnna.onion:8333\n-jljzz4tmbqrxq3q5.onion:8333\n-joc4oqceedkg77vf.onion:8333\n-jr5y6njubcbv6g37.onion:8333\n-jroaos6la4vieho4.onion:8333\n-jsmphgkay7iihbkr.onion:8333\n-jtksnokusbzms7wl.onion:8333\n-ju5duo3r6p6diznc.onion:8333\n-jw6zymxcnebahuuj.onion:8333\n-jxalvhf7w7wevqzw.onion:8333\n-jyzhe3ig44ickysb.onion:8333\n-jze6ukn4idrh44eo.onion:8333\n-k4glotlxnmttb6ct.onion:8333\n-k7uy3iwmvguzygd2.onion:8333\n-kl23ofag3ukb6hxl.onion:8333\n-kokt2qr6d4pmyb2d.onion:8333\n-kpalu3h5ydkoaivs.onion:8333\n-krdpbdvtqw5c5lee.onion:8333\n-kriw6kzjzarzgb3g.onion:8333\n-krp2thcmwrpsoue6.onion:8333\n-kvyvdwjwtae5mo77.onion:8333\n-kyrxri5rbr6ipurs.onion:8333\n-kz3oxg7745dxt62q.onion:8333\n-l3w5fcki2wbro2qb.onion:8333\n-l44bisuxhh7reb5q.onion:8333\n-l565g523emjebusj.onion:8333\n-l6w5kdeigwsgnf5t.onion:8333\n-l7a4emryfxkjgmmb.onion:8333\n-l7sloscjqqbifcsw.onion:8333\n-laafjqvtog7djfl2.onion:8333\n-lah676kxbgbgw3u2.onion:8333\n-lbq2a7pnpmviw2qo.onion:8333\n-lc4wnpql27vymi35.onion:8333\n-ldoffbfpk3j6c7y7.onion:8333\n-lehpmglkivobq2qo.onion:8333\n-lgewpjz7ie7daqqr.onion:8333\n-lgkvbvro67jomosw.onion:8333\n-liw5z4ngic6b7vnv.onion:8333\n-ljs7gwrmmza6q6ga.onion:8333\n-lmvax3e6awaxvhqi.onion:8333\n-lrz77dwf7yq4cgnt.onion:8333\n-lva54pnbq2nsmjyr.onion:8333\n-lxc2uphxyyxflhnf.onion:8333\n-lyjybdr4hmj3bqab.onion:8333\n-lz2zlnmyynwtgwf2.onion:8333\n-m6hcnpikimyh37yp.onion:8333\n-md635omjnrgheed3.onion:8333\n-mdb3oupwf4f2qyjb.onion:8333\n-me6d4esx7ohdnxne.onion:8333\n-mecfkik5ci47wckj.onion:8333\n-mfrvevn7w6rwsp4r.onion:8333\n-mimuutlew5srtduk.onion:8333\n-mnysk3izxvra3huv.onion:8333\n-mqu6gqtrhm6xzwwh.onion:8333\n-mwuc6vom4ngijtb3.onion:8333\n-mxdtrjhe2yfsx3pg.onion:8333\n-n4ibet4piscv22nj.onion:8333\n-n6d46vbzx43bevlb.onion:8333\n-n6t6kfgzlvozxhfm.onion:8333\n-n7rrochwerf2qxze.onion:8333\n-ncsdiqmnxhnnjbsz.onion:8333\n-nitxw3ilffngpumv.onion:8333\n-njlsvubildehluwr.onion:8333\n-njslfsivyyhixbsp.onion:8333\n-nkf5e6b7pl4jfd4a.onion:8333\n-nkppsb3t3ducje6m.onion:8333\n-nlfwyqksmeqe45zz.onion:8333\n-nlyjmpcmpaz5b4aa.onion:8333\n-nnmv7z65k65mcesr.onion:8333\n-nrrfwdmrm3imuebn.onion:8333\n-nrrmkgmulpgsbwlt.onion:8333\n-nw4h7leckut7eapv.onion:8333\n-nwky3wd3ihoidvb5.onion:8333\n-ny4kkemmmqv4lptm.onion:8333\n-o25wkcw7eorg2toi.onion:8333\n-o2gumvbkw6pm45cf.onion:8333\n-o4yjshdwlbshylqw.onion:8333\n-ofx4qgw6lppnvtgv.onion:8333\n-oketipl4gndqcaus.onion:8333\n-oq5q4qrqijr2kpun.onion:8333\n-oqw3mfoiobqcklxh.onion:8333\n-orsy2v63ecrmdj55.onion:8333\n-ot4tzmznyimmlszk.onion:8333\n-owk6c2jfthwkyahe.onion:8333\n-oy7ss3hm2okx4tun.onion:8333\n-p2pc6wbaepvdi6ce.onion:8333\n-p2x24gdhasmgcl5j.onion:8333\n-p6couujr2ndhllv3.onion:8333\n-pa7dw5bln5lqmu53.onion:8333\n-pasmchtoooj2kchd.onion:8333\n-pdapkkhk6pbcy2tj.onion:8333\n-peh5ajouuw6mw4sr.onion:8333\n-pkuuc5pwl5xygwhr.onion:8333\n-pq4wjl7vg7tsfycc.onion:8333\n-ptbwqhusps5qieql.onion:8333\n-ptwpbwyj5lnyew2f.onion:8333\n-pu7w3jfyrzp7sxsi.onion:8333\n-pwylbyvfuc62hhvx.onion:8333\n-q2fhnnyt5b2ayvce.onion:8333\n-q3i3apuionbazmfe.onion:8333\n-qd6fcpu3pvbf2y3x.onion:8333\n-qfewv3y7a3p4i3bd.onion:8333\n-qhytdttflhbc4rsh.onion:8333\n-qkn35rb3x2gxbwq4.onion:8333\n-qlvlexs7pwac2f4b.onion:8333\n-qogcqirtuta6rlxg.onion:8333\n-qrzqfxkhrmu5v5ro.onion:8333\n-qsyjasq46b2syiys.onion:8333\n-quu4b2zjbnr2ue4y.onion:8333\n-quycfj2wenz6bfyd.onion:8333\n-qvdy3cmocnlv5v7c.onion:8333\n-qvwhpqygan2xky5h.onion:8333\n-qyutwc26ullujafb.onion:8333\n-r45qg2d6iwfdhqwl.onion:8333\n-r4xudr6u4r5nyga4.onion:8333\n-r6apa5ssujxbwd34.onion:8333\n-r6z2gcsu37k3gaah.onion:8333\n-rbrjgfcca6v5b7yo.onion:8333\n-rcifxibawqt6rxzz.onion:8333\n-rdo3xctk3zkzjvln.onion:8333\n-rdvlepy6ghgpapzo.onion:8333\n-recs3a27chv2lg65.onion:8333\n-rfmbiy5vztvn6hyn.onion:8333\n-rli5lbje4k77inzw.onion:8333\n-roqwnmepcj453vfh.onion:8333\n-rpbnx54qniivrmh3.onion:8333\n-rsvvogqdlijp77hv.onion:8333\n-rwm5d4hg3hc77kdt.onion:8333\n-s3yelkvc5f5xeysw.onion:8333\n-s6rx52hitmpp4lge.onion:8333\n-sa6m3rvycipgemky.onion:8333\n-savebeesmkivmfbo.onion:8333\n-sbyjr5npk2mlmfw7.onion:8333\n-serwj42jme5xhhmw.onion:8333\n-sg4vmubv3djrzvuh.onion:8333\n-shsgksluz6jkgp6g.onion:8333\n-sjyzmwwu6diiit3r.onion:8333\n-sk3en3reudg3sdg5.onion:8333\n-skoifp4oj7l4osu5.onion:8333\n-sle2caplkln33e7y.onion:8333\n-smdd7q7gonajdmjq.onion:8333\n-spmhuxjb2cd7leun.onion:8333\n-srkgyv5edn2pa7il.onion:8333\n-sslnjjhnmwllysv4.onion:8333\n-su66ygras6rkdtnl.onion:8333\n-sundvmbjrtgdfahx.onion:8333\n-svd65k5jpal2p3lt.onion:8333\n-svua5hiqluw7o2sw.onion:8333\n-sxqjubmum4rmfgpu.onion:8333\n-t245vi742ti3tnka.onion:8333\n-t4fbovvgzpnimd2p.onion:8333\n-t4l4wv3erkhpde2p.onion:8333\n-t5qchwbr6u5v2agk.onion:8333\n-t7jlaj6ggyx7s5vy.onion:8333\n-ta6sjeqyb27f4n4a.onion:8333\n-tav7utpw4pfy7j6k.onion:8333\n-taxg5z2sxfm5c4d6.onion:8333\n-tekwvnbodbzrlufs.onion:8333\n-tg4uwrjmtr2jlbjy.onion:8333\n-th4cjvffjtw6vomu.onion:8333\n-th6fxymtwnfifqeu.onion:8333\n-thtchhl25u26nglq.onion:8333\n-tiiah7csuoklcvi6.onion:8333\n-tk63x5fk3337z3ud.onion:8333\n-tkgootat6cqn7vyy.onion:8333\n-tnj565wwqz5wpjvs.onion:8333\n-ts6qx37mmpu6nj5y.onion:8333\n-ttjisvxydgbtp56f.onion:8333\n-twn54v7ra2xjgd55.onion:8333\n-txem5meug24g2ezd.onion:8333\n-tyiunn36lmfcq5lr.onion:8333\n-tyv56xs6g6ndzqux.onion:8333\n-u47f3hxwq65sgs4o.onion:8333\n-u4r7fnholrdwwlni.onion:8333\n-u556ofb3myarafwn.onion:8333\n-u5q3gbz4qpz4wvlr.onion:8333\n-uakly3ydrevvpxwi.onion:8333\n-ug6hapi4qtekzc7v.onion:8333\n-ui553qotd6ron3rf.onion:8333\n-uir7f3wltoka6bbb.onion:8333\n-ukrjjhwodl44wmof.onion:8333\n-ul5gm2ixy7kqdfwg.onion:8333\n-undd7rsj4pen3wo4.onion:8333\n-uorwpzfehtykrg43.onion:8333\n-uovsp2yltnaojq6l.onion:8333\n-usazmdcs32ny24dy.onion:8333\n-usazs7glm7geyxkl.onion:8333\n-uss2kedg7qkwgdr5.onion:8333\n-utgyrvw75wv2nymi.onion:8333\n-uzwacms7kyzhehbl.onion:8333\n-v2kdcetvslmdfcwr.onion:8333\n-v5lhnzzv6nngfg5d.onion:8333\n-vc44gb4veppobrt3.onion:8333\n-vfwyhju43wxhzvux.onion:8333\n-vgujufk53lqyolio.onion:8333\n-vheejqq2v5dkb4xr.onion:8333\n-vj64edev4jnqfdsb.onion:8333\n-vmai5uigezr2khkj.onion:8333\n-vmuykd7sxbmi7w57.onion:8333\n-vomeacttinx3mpml.onion:8333\n-vpow2xofg3fwzsdq.onion:8333\n-vsawli4l5ifxdzaw.onion:8333\n-vunubqkfms7sifok.onion:8333\n-vuombnevwul4bqsb.onion:8333\n-vxcpvdng65aefz6t.onion:8333\n-vyxoizdzavp3obau.onion:8333\n-wbeon2ci7lfio6ay.onion:8333\n-wbwevew62mgsrrdz.onion:8333\n-wfaydlg6zyfzjcu5.onion:8333\n-wfz56s5lyn5dysez.onion:8333\n-wg3mq4ugyy2gx32b.onion:8333\n-whky54bctkf2n4p3.onion:8333\n-whmjanqoyzizzc4t.onion:8333\n-wlhou2wxgqyi3x3f.onion:8333\n-wlvkfrplfiioz22o.onion:8333\n-x3ngb3va7dovuenw.onion:8333\n-x57x62bmmnylvo7r.onion:8333\n-xgvm57mhgv564dka.onion:8333\n-xhs3glfwnwiumivn.onion:8333\n-xje5fwvyfdue2u6k.onion:8333\n-xlgubgyly2blvsg5.onion:8333\n-xnlu3tvakngy7tkp.onion:8333\n-xo5marilhuyo7but.onion:8333\n-xsaaxihdygnwxrix.onion:8333\n-xu5mlugdsmzfkvzh.onion:8333\n-xvrxqcptqvieedb2.onion:8333\n-xwzhrrygftq3q4w4.onion:8333\n-y4swmsaxdcos2bnu.onion:8333\n-y5tl4lqi365pplud.onion:8333\n-y5wzeqyaets5na6t.onion:8333\n-y73qk2mzkjkhoky7.onion:8333\n-y7oz3ydnvib4xhbb.onion:8333\n-yah7qgfqqrteoche.onion:8333\n-yba4brm555denlt7.onion:8333\n-ygeqkg4inplsace3.onion:8333\n-yjhnfu75lazbi34h.onion:8333\n-yjw7kqapxx5vggoj.onion:8333\n-ym7inmovbrna4gco.onion:8333\n-yq5cusnuokscy64z.onion:8333\n-yrcaioqrqrdwokqt.onion:8333\n-yrcr7pgjuazad254.onion:8333\n-yrksvon3tmvoohdv.onion:8333\n-ytpus4vx5w7j6wp2.onion:8333\n-ytqcigk2hhdl45ho.onion:8333\n-yxojl3xmjus3dik2.onion:8333\n-yzdqdsqx4fdung6w.onion:8333\n-z33nukt7ngik3cpe.onion:8333\n-z3ywbadw46ndnxgh.onion:8333\n-z6mbqq7llxlrn4kq.onion:8333\n-zb3lrcksn4rzhzje.onion:8333\n-ze7odp7pzarjplsr.onion:8333\n-zgbmhtbja4fy2373.onion:8333\n-zh7hvalcgvjpoaqm.onion:8333\n-ziztvxehmj5mehpg.onion:8333\n-zjii3yecdrmq73y3.onion:8333\n-zkrwmgjuvsza6ye2.onion:8333\n-zoz2aopwi3wfuqwg.onion:8333\n-ztdcfnh46773bivu.onion:8333\n-zuxhc6d3nwpgc4af.onion:8333\n-zuytrfevzjcpizli.onion:8333\n-zvq6dpt3i2ofdp3g.onion:8333\n-zwwm6ga7u2hqe2sd.onion:8333\n-zyqb4lenfspntj5m.onion:8333"
      },
      {
        "sha": "98365ee505ced2410cdc7ea841bf52198b405662",
        "filename": "contrib/seeds/nodes_test.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/seeds/nodes_test.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/seeds/nodes_test.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_test.txt?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,11 +0,0 @@\n-# List of fixed seed nodes for testnet\n-\n-# Onion nodes\n-thfsmmn2jbitcoin.onion\n-it2pj4f7657g3rhi.onion\n-nkf5e6b7pl4jfd4a.onion\n-4zhkir2ofl7orfom.onion\n-t6xj6wilh4ytvcs7.onion\n-i6y6ivorwakd7nw3.onion\n-ubqj4rsu3nqtxmtp.onion\n-"
      },
      {
        "sha": "13385cc816209d2c9fc2acf68343dce15e4dd201",
        "filename": "contrib/seeds/suspicious_hosts.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/seeds/suspicious_hosts.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/seeds/suspicious_hosts.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/suspicious_hosts.txt?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,16 +0,0 @@\n-130.211.129.106\n-148.251.238.178\n-176.9.46.6\n-178.63.107.226\n-54.173.72.127\n-54.174.10.182\n-54.183.64.54\n-54.194.231.211\n-54.66.214.167\n-54.66.220.137\n-54.67.33.14\n-54.77.251.214\n-54.94.195.96\n-54.94.200.247\n-83.81.130.26\n-88.198.17.7\n\\ No newline at end of file"
      },
      {
        "sha": "eaca473b400f0e57066d7f13062dc247dab7f41b",
        "filename": "contrib/testgen/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,8 +0,0 @@\n-### TestGen ###\n-\n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n-\n-Usage:\n-\n-    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py valid 50 > ../../src/test/data/key_io_valid.json\n-    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py invalid 50 > ../../src/test/data/key_io_invalid.json"
      },
      {
        "sha": "c7ebac50d4b7753f501aaf2af66fbba178eaac7c",
        "filename": "contrib/testgen/base58.py",
        "status": "removed",
        "additions": 0,
        "deletions": 115,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/testgen/base58.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/testgen/base58.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/base58.py?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,115 +0,0 @@\n-# Copyright (c) 2012-2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Bitcoin base58 encoding and decoding.\n-\n-Based on https://bitcointalk.org/index.php?topic=1026.0 (public domain)\n-'''\n-import hashlib\n-\n-# for compatibility with following code...\n-class SHA256:\n-    new = hashlib.sha256\n-\n-if str != bytes:\n-    # Python 3.x\n-    def ord(c):\n-        return c\n-    def chr(n):\n-        return bytes( (n,) )\n-\n-__b58chars = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n-__b58base = len(__b58chars)\n-b58chars = __b58chars\n-\n-def b58encode(v):\n-    \"\"\" encode v, which is a string of bytes, to base58.\n-    \"\"\"\n-    long_value = 0\n-    for (i, c) in enumerate(v[::-1]):\n-        if isinstance(c, str):\n-            c = ord(c)\n-        long_value += (256**i) * c\n-\n-    result = ''\n-    while long_value >= __b58base:\n-        div, mod = divmod(long_value, __b58base)\n-        result = __b58chars[mod] + result\n-        long_value = div\n-    result = __b58chars[long_value] + result\n-\n-    # Bitcoin does a little leading-zero-compression:\n-    # leading 0-bytes in the input become leading-1s\n-    nPad = 0\n-    for c in v:\n-        if c == 0:\n-            nPad += 1\n-        else:\n-            break\n-\n-    return (__b58chars[0]*nPad) + result\n-\n-def b58decode(v, length = None):\n-    \"\"\" decode v into a string of len bytes\n-    \"\"\"\n-    long_value = 0\n-    for i, c in enumerate(v[::-1]):\n-        pos = __b58chars.find(c)\n-        assert pos != -1\n-        long_value += pos * (__b58base**i)\n-\n-    result = bytes()\n-    while long_value >= 256:\n-        div, mod = divmod(long_value, 256)\n-        result = chr(mod) + result\n-        long_value = div\n-    result = chr(long_value) + result\n-\n-    nPad = 0\n-    for c in v:\n-        if c == __b58chars[0]:\n-            nPad += 1\n-            continue\n-        break\n-\n-    result = bytes(nPad) + result\n-    if length is not None and len(result) != length:\n-        return None\n-\n-    return result\n-\n-def checksum(v):\n-    \"\"\"Return 32-bit checksum based on SHA256\"\"\"\n-    return SHA256.new(SHA256.new(v).digest()).digest()[0:4]\n-\n-def b58encode_chk(v):\n-    \"\"\"b58encode a string, with 32-bit checksum\"\"\"\n-    return b58encode(v + checksum(v))\n-\n-def b58decode_chk(v):\n-    \"\"\"decode a base58 string, check and remove checksum\"\"\"\n-    result = b58decode(v)\n-    if result is None:\n-        return None\n-    if result[-4:] == checksum(result[:-4]):\n-        return result[:-4]\n-    else:\n-        return None\n-\n-def get_bcaddress_version(strAddress):\n-    \"\"\" Returns None if strAddress is invalid.  Otherwise returns integer version of address. \"\"\"\n-    addr = b58decode_chk(strAddress)\n-    if addr is None or len(addr)!=21:\n-        return None\n-    version = addr[0]\n-    return ord(version)\n-\n-if __name__ == '__main__':\n-    # Test case (from http://gitorious.org/bitcoin/python-base58.git)\n-    assert get_bcaddress_version('15VjRaDX9zpbA8LVnbrCAFzrVzN7ixHNsC') == 0\n-    _ohai = 'o hai'.encode('ascii')\n-    _tmp = b58encode(_ohai)\n-    assert _tmp == 'DYB3oMS'\n-    assert b58decode(_tmp, 5) == _ohai\n-    print(\"Tests passed\")"
      },
      {
        "sha": "49320d92e6dafc7a2c173ced1dd2f19ac5e5c481",
        "filename": "contrib/testgen/gen_key_io_test_vectors.py",
        "status": "removed",
        "additions": 0,
        "deletions": 246,
        "changes": 246,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/testgen/gen_key_io_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/testgen/gen_key_io_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_key_io_test_vectors.py?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e",
        "patch": "@@ -1,246 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2012-2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Generate valid and invalid base58 address and private key test vectors.\n-\n-Usage:\n-    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py valid 50 > ../../src/test/data/key_io_valid.json\n-    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py invalid 50 > ../../src/test/data/key_io_invalid.json\n-'''\n-# 2012 Wladimir J. van der Laan\n-# Released under MIT License\n-import os\n-from itertools import islice\n-from base58 import b58encode_chk, b58decode_chk, b58chars\n-import random\n-from segwit_addr import bech32_encode, decode_segwit_address, convertbits, CHARSET\n-\n-# key types\n-PUBKEY_ADDRESS = 0\n-SCRIPT_ADDRESS = 5\n-PUBKEY_ADDRESS_TEST = 111\n-SCRIPT_ADDRESS_TEST = 196\n-PUBKEY_ADDRESS_REGTEST = 111\n-SCRIPT_ADDRESS_REGTEST = 196\n-PRIVKEY = 128\n-PRIVKEY_TEST = 239\n-PRIVKEY_REGTEST = 239\n-\n-# script\n-OP_0 = 0x00\n-OP_1 = 0x51\n-OP_2 = 0x52\n-OP_16 = 0x60\n-OP_DUP = 0x76\n-OP_EQUAL = 0x87\n-OP_EQUALVERIFY = 0x88\n-OP_HASH160 = 0xa9\n-OP_CHECKSIG = 0xac\n-pubkey_prefix = (OP_DUP, OP_HASH160, 20)\n-pubkey_suffix = (OP_EQUALVERIFY, OP_CHECKSIG)\n-script_prefix = (OP_HASH160, 20)\n-script_suffix = (OP_EQUAL,)\n-p2wpkh_prefix = (OP_0, 20)\n-p2wsh_prefix = (OP_0, 32)\n-\n-metadata_keys = ['isPrivkey', 'chain', 'isCompressed', 'tryCaseFlip']\n-# templates for valid sequences\n-templates = [\n-  # prefix, payload_size, suffix, metadata, output_prefix, output_suffix\n-  #                                  None = N/A\n-  ((PUBKEY_ADDRESS,),         20, (),   (False, 'main',    None,  None), pubkey_prefix, pubkey_suffix),\n-  ((SCRIPT_ADDRESS,),         20, (),   (False, 'main',    None,  None), script_prefix, script_suffix),\n-  ((PUBKEY_ADDRESS_TEST,),    20, (),   (False, 'test',    None,  None), pubkey_prefix, pubkey_suffix),\n-  ((SCRIPT_ADDRESS_TEST,),    20, (),   (False, 'test',    None,  None), script_prefix, script_suffix),\n-  ((PUBKEY_ADDRESS_REGTEST,), 20, (),   (False, 'regtest', None,  None), pubkey_prefix, pubkey_suffix),\n-  ((SCRIPT_ADDRESS_REGTEST,), 20, (),   (False, 'regtest', None,  None), script_prefix, script_suffix),\n-  ((PRIVKEY,),                32, (),   (True,  'main',    False, None), (),            ()),\n-  ((PRIVKEY,),                32, (1,), (True,  'main',    True,  None), (),            ()),\n-  ((PRIVKEY_TEST,),           32, (),   (True,  'test',    False, None), (),            ()),\n-  ((PRIVKEY_TEST,),           32, (1,), (True,  'test',    True,  None), (),            ()),\n-  ((PRIVKEY_REGTEST,),        32, (),   (True,  'regtest', False, None), (),            ()),\n-  ((PRIVKEY_REGTEST,),        32, (1,), (True,  'regtest', True,  None), (),            ())\n-]\n-# templates for valid bech32 sequences\n-bech32_templates = [\n-  # hrp, version, witprog_size, metadata, output_prefix\n-  ('bc',    0, 20, (False, 'main',    None, True), p2wpkh_prefix),\n-  ('bc',    0, 32, (False, 'main',    None, True), p2wsh_prefix),\n-  ('bc',    1,  2, (False, 'main',    None, True), (OP_1, 2)),\n-  ('tb',    0, 20, (False, 'test',    None, True), p2wpkh_prefix),\n-  ('tb',    0, 32, (False, 'test',    None, True), p2wsh_prefix),\n-  ('tb',    2, 16, (False, 'test',    None, True), (OP_2, 16)),\n-  ('bcrt',  0, 20, (False, 'regtest', None, True), p2wpkh_prefix),\n-  ('bcrt',  0, 32, (False, 'regtest', None, True), p2wsh_prefix),\n-  ('bcrt', 16, 40, (False, 'regtest', None, True), (OP_16, 40))\n-]\n-# templates for invalid bech32 sequences\n-bech32_ng_templates = [\n-  # hrp, version, witprog_size, invalid_bech32, invalid_checksum, invalid_char\n-  ('tc',    0, 20, False, False, False),\n-  ('tb',   17, 32, False, False, False),\n-  ('bcrt',  3,  1, False, False, False),\n-  ('bc',   15, 41, False, False, False),\n-  ('tb',    0, 16, False, False, False),\n-  ('bcrt',  0, 32, True,  False, False),\n-  ('bc',    0, 16, True,  False, False),\n-  ('tb',    0, 32, False, True,  False),\n-  ('bcrt',  0, 20, False, False, True)\n-]\n-\n-def is_valid(v):\n-    '''Check vector v for validity'''\n-    if len(set(v) - set(b58chars)) > 0:\n-        return is_valid_bech32(v)\n-    result = b58decode_chk(v)\n-    if result is None:\n-        return is_valid_bech32(v)\n-    for template in templates:\n-        prefix = bytearray(template[0])\n-        suffix = bytearray(template[2])\n-        if result.startswith(prefix) and result.endswith(suffix):\n-            if (len(result) - len(prefix) - len(suffix)) == template[1]:\n-                return True\n-    return is_valid_bech32(v)\n-\n-def is_valid_bech32(v):\n-    '''Check vector v for bech32 validity'''\n-    for hrp in ['bc', 'tb', 'bcrt']:\n-        if decode_segwit_address(hrp, v) != (None, None):\n-            return True\n-    return False\n-\n-def gen_valid_base58_vector(template):\n-    '''Generate valid base58 vector'''\n-    prefix = bytearray(template[0])\n-    payload = bytearray(os.urandom(template[1]))\n-    suffix = bytearray(template[2])\n-    dst_prefix = bytearray(template[4])\n-    dst_suffix = bytearray(template[5])\n-    rv = b58encode_chk(prefix + payload + suffix)\n-    return rv, dst_prefix + payload + dst_suffix\n-\n-def gen_valid_bech32_vector(template):\n-    '''Generate valid bech32 vector'''\n-    hrp = template[0]\n-    witver = template[1]\n-    witprog = bytearray(os.urandom(template[2]))\n-    dst_prefix = bytearray(template[4])\n-    rv = bech32_encode(hrp, [witver] + convertbits(witprog, 8, 5))\n-    return rv, dst_prefix + witprog\n-\n-def gen_valid_vectors():\n-    '''Generate valid test vectors'''\n-    glist = [gen_valid_base58_vector, gen_valid_bech32_vector]\n-    tlist = [templates, bech32_templates]\n-    while True:\n-        for template, valid_vector_generator in [(t, g) for g, l in zip(glist, tlist) for t in l]:\n-            rv, payload = valid_vector_generator(template)\n-            assert is_valid(rv)\n-            metadata = {x: y for x, y in zip(metadata_keys,template[3]) if y is not None}\n-            hexrepr = payload.hex()\n-            yield (rv, hexrepr, metadata)\n-\n-def gen_invalid_base58_vector(template):\n-    '''Generate possibly invalid vector'''\n-    # kinds of invalid vectors:\n-    #   invalid prefix\n-    #   invalid payload length\n-    #   invalid (randomized) suffix (add random data)\n-    #   corrupt checksum\n-    corrupt_prefix = randbool(0.2)\n-    randomize_payload_size = randbool(0.2)\n-    corrupt_suffix = randbool(0.2)\n-\n-    if corrupt_prefix:\n-        prefix = os.urandom(1)\n-    else:\n-        prefix = bytearray(template[0])\n-\n-    if randomize_payload_size:\n-        payload = os.urandom(max(int(random.expovariate(0.5)), 50))\n-    else:\n-        payload = os.urandom(template[1])\n-\n-    if corrupt_suffix:\n-        suffix = os.urandom(len(template[2]))\n-    else:\n-        suffix = bytearray(template[2])\n-\n-    val = b58encode_chk(prefix + payload + suffix)\n-    if random.randint(0,10)<1: # line corruption\n-        if randbool(): # add random character to end\n-            val += random.choice(b58chars)\n-        else: # replace random character in the middle\n-            n = random.randint(0, len(val))\n-            val = val[0:n] + random.choice(b58chars) + val[n+1:]\n-\n-    return val\n-\n-def gen_invalid_bech32_vector(template):\n-    '''Generate possibly invalid bech32 vector'''\n-    no_data = randbool(0.1)\n-    to_upper = randbool(0.1)\n-    hrp = template[0]\n-    witver = template[1]\n-    witprog = bytearray(os.urandom(template[2]))\n-\n-    if no_data:\n-        rv = bech32_encode(hrp, [])\n-    else:\n-        data = [witver] + convertbits(witprog, 8, 5)\n-        if template[3] and not no_data:\n-            if template[2] % 5 in {2, 4}:\n-                data[-1] |= 1\n-            else:\n-                data.append(0)\n-        rv = bech32_encode(hrp, data)\n-\n-    if template[4]:\n-        i = len(rv) - random.randrange(1, 7)\n-        rv = rv[:i] + random.choice(CHARSET.replace(rv[i], '')) + rv[i + 1:]\n-    if template[5]:\n-        i = len(hrp) + 1 + random.randrange(0, len(rv) - len(hrp) - 4)\n-        rv = rv[:i] + rv[i:i + 4].upper() + rv[i + 4:]\n-\n-    if to_upper:\n-        rv = rv.swapcase()\n-\n-    return rv\n-\n-def randbool(p = 0.5):\n-    '''Return True with P(p)'''\n-    return random.random() < p\n-\n-def gen_invalid_vectors():\n-    '''Generate invalid test vectors'''\n-    # start with some manual edge-cases\n-    yield \"\",\n-    yield \"x\",\n-    glist = [gen_invalid_base58_vector, gen_invalid_bech32_vector]\n-    tlist = [templates, bech32_ng_templates]\n-    while True:\n-        for template, invalid_vector_generator in [(t, g) for g, l in zip(glist, tlist) for t in l]:\n-            val = invalid_vector_generator(template)\n-            if not is_valid(val):\n-                yield val,\n-\n-if __name__ == '__main__':\n-    import sys\n-    import json\n-    iters = {'valid':gen_valid_vectors, 'invalid':gen_invalid_vectors}\n-    try:\n-        uiter = iters[sys.argv[1]]\n-    except IndexError:\n-        uiter = gen_valid_vectors\n-    try:\n-        count = int(sys.argv[2])\n-    except IndexError:\n-        count = 0\n-\n-    data = list(islice(uiter(), count))\n-    json.dump(data, sys.stdout, sort_keys=True, indent=4)\n-    sys.stdout.write('\\n')\n-"
      },
      {
        "sha": "ece02dc24e8f93f248102c3dd810ed6394792414",
        "filename": "contrib/valgrind.supp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/valgrind.supp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/valgrind.supp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/valgrind.supp?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "e95a57586ff1c34fef56f4d851934f0d881bbd8c",
        "filename": "contrib/verify-commits/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 57,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verify-commits/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verify-commits/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/README.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "c572806f2612e8c6cec07251e232e4d342ab3186",
        "filename": "contrib/verify-commits/allow-incorrect-sha512-commits",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verify-commits/allow-incorrect-sha512-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verify-commits/allow-incorrect-sha512-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-incorrect-sha512-commits?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "3abf82e529cbbbc766d0b7f7c4028d7721eb6755",
        "filename": "contrib/verify-commits/allow-revsig-commits",
        "status": "removed",
        "additions": 0,
        "deletions": 504,
        "changes": 504,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verify-commits/allow-revsig-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verify-commits/allow-revsig-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-revsig-commits?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "7aab274b9a848fce47a53acf71b54dfb1bf3db0e",
        "filename": "contrib/verify-commits/allow-unclean-merge-commits",
        "status": "removed",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verify-commits/allow-unclean-merge-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verify-commits/allow-unclean-merge-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-unclean-merge-commits?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "db5bfce208ef18e72d8643f83e773723ccd39116",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "78873dc0c38ebe6d800ab319c0cc21b9eeb641cd",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "c60f8ab695e9c0fb01feafb1c28074cb98ab122d",
        "filename": "contrib/verify-commits/trusted-git-root",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verify-commits/trusted-git-root",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verify-commits/trusted-git-root",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-git-root?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "27fede6277616c3cfe500c662636e5449e482b5b",
        "filename": "contrib/verify-commits/trusted-keys",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verify-commits/trusted-keys",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verify-commits/trusted-keys",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-keys?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "7d41f90ad70ef87caa0ce40bee269ff9d61d9c05",
        "filename": "contrib/verify-commits/trusted-sha512-root-commit",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verify-commits/trusted-sha512-root-commit",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verify-commits/trusted-sha512-root-commit",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-sha512-root-commit?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "7e46c6fd47733fc35d3194faf0399f96640ca2af",
        "filename": "contrib/verify-commits/verify-commits.py",
        "status": "removed",
        "additions": 0,
        "deletions": 165,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verify-commits/verify-commits.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verify-commits/verify-commits.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.py?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "4209fdb3644e558c029bacc9a02ad9823b120eb6",
        "filename": "contrib/verifybinaries/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 41,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verifybinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verifybinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/README.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "4296998631cff715d429c5b203c41b53f8e722e0",
        "filename": "contrib/verifybinaries/verify.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 177,
        "changes": 177,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verifybinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/verifybinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/verify.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "31720e72e7081d61a6905adbfeabdc8d15a517f6",
        "filename": "contrib/windeploy/detached-sig-create.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/windeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/windeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/detached-sig-create.sh?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "4023a5b638f89f9838990db0700ed9ec5a629e9b",
        "filename": "contrib/windeploy/win-codesign.cert",
        "status": "removed",
        "additions": 0,
        "deletions": 100,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/windeploy/win-codesign.cert",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/windeploy/win-codesign.cert",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/win-codesign.cert?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "8b8503331d2c23abc9514f204bab1771de39b179",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "removed",
        "additions": 0,
        "deletions": 90,
        "changes": 90,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "19c506ce5447d4b9099f741fd33f800d101bcf6d",
        "filename": "depends/.gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/.gitignore?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "1ad21f6821bba036d92208aae32310ae1a1f62bd",
        "filename": "depends/Makefile",
        "status": "removed",
        "additions": 0,
        "deletions": 253,
        "changes": 253,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "5225a6d5c41ef1e1a46820660bcc54aa583ad9e7",
        "filename": "depends/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 153,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "f4103fc1f27eebb9f85a913413d4ff755bab6ea9",
        "filename": "depends/builders/darwin.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/builders/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/builders/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/darwin.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "f097db65d603d596c5ceabeadfe32fa3a296a91d",
        "filename": "depends/builders/default.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/builders/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/builders/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/default.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "b03f42401047adf98bc997a7eece42c2c79a2c2c",
        "filename": "depends/builders/linux.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/builders/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/builders/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/linux.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "7f9ebbe31097dff5e381dceffadbf64502ab3d46",
        "filename": "depends/config.guess",
        "status": "removed",
        "additions": 0,
        "deletions": 1665,
        "changes": 1665,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "87a337930370eca23beee0e4c0456ab290db9f9b",
        "filename": "depends/config.site.in",
        "status": "removed",
        "additions": 0,
        "deletions": 104,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "a318a46868500fbeea993e693e32701041ffad1b",
        "filename": "depends/config.sub",
        "status": "removed",
        "additions": 0,
        "deletions": 1793,
        "changes": 1793,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "0a6f2e644219008dcb4cefe4d7a152e838e9b66d",
        "filename": "depends/description.md",
        "status": "removed",
        "additions": 0,
        "deletions": 53,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/description.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/description.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/description.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "58d882eb053ac571cd05547e951feaaca1854c74",
        "filename": "depends/funcs.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 268,
        "changes": 268,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/funcs.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/funcs.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/funcs.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "eabd84bbbe1020a67273bb27de30209fbefd8b88",
        "filename": "depends/hosts/android.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/hosts/android.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/hosts/android.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/android.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "6099fd4c716b80f4bcf92be048ea8fa328501401",
        "filename": "depends/hosts/darwin.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 50,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/hosts/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/hosts/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/darwin.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "258619a9d059086cb8fb25e4df37617088cc2e32",
        "filename": "depends/hosts/default.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 39,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/hosts/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/hosts/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/default.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "8ab448ce5fd458be142ece6ba7a001a76d8f9033",
        "filename": "depends/hosts/linux.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/hosts/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/hosts/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/linux.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "be5fec570c84cec02844d0faf63bb11b36e708c3",
        "filename": "depends/hosts/mingw32.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/hosts/mingw32.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/hosts/mingw32.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/mingw32.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "7ed20ea1297dcad84173c4ec085dee714f87f22f",
        "filename": "depends/packages.md",
        "status": "removed",
        "additions": 0,
        "deletions": 198,
        "changes": 198,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "5953341d9f774cb3abfbf6a6d8c0aa2b2a4a4536",
        "filename": "depends/packages/bdb.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/bdb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/bdb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/bdb.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "d8bce108b16a5863d600d19270f0f52807d60449",
        "filename": "depends/packages/boost.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 50,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "abeb26545f898e4dffdb18f1452d77197f37a35c",
        "filename": "depends/packages/capnp.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/capnp.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/capnp.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/capnp.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "902fe43be267919d8d71c44d9b6dea5cea9928d1",
        "filename": "depends/packages/expat.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/expat.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/expat.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/expat.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "0d5f94f380c569cb7d09d3541c42467ad59a1fb1",
        "filename": "depends/packages/fontconfig.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/fontconfig.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/fontconfig.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/fontconfig.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "a1584608e19f714ca190875aae124edd33a1456a",
        "filename": "depends/packages/freetype.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/freetype.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/freetype.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/freetype.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "4c55c2df04b5cd50f1af5ae63bab275d7c1284ac",
        "filename": "depends/packages/libXau.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/libXau.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/libXau.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXau.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "1cd5a1749ac88c79f8e667aeac40d23105772219",
        "filename": "depends/packages/libevent.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 39,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "3e5cf5f1603a66c0244667b909cbb0b9f6541376",
        "filename": "depends/packages/libmultiprocess.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/libmultiprocess.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/libmultiprocess.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libmultiprocess.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "2204b381958b8f0be875308764df849b62e9af40",
        "filename": "depends/packages/libxcb.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 49,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/libxcb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/libxcb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libxcb.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "49a584e462b36b09c5b2bcde7b69b1256daf5a2b",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "c3054cbd1a16e66d8ff592b27bdc7fc7a12c0f2c",
        "filename": "depends/packages/native_biplist.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/native_biplist.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/native_biplist.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_biplist.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "ed5a6deee2fdbfbd658ddff8d5aa5c129860bf6f",
        "filename": "depends/packages/native_capnp.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/native_capnp.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/native_capnp.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_capnp.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "d56b636695508699d998191f8220e47fe01df6d1",
        "filename": "depends/packages/native_cctools.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 116,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "7bdf2d7dfda9a221ff75e842ea887f35ca153f42",
        "filename": "depends/packages/native_cdrkit.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/native_cdrkit.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/native_cdrkit.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cdrkit.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "f99b689ecdc7406233dd36191a592be37aeed931",
        "filename": "depends/packages/native_ds_store.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/native_ds_store.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/native_ds_store.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ds_store.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "035b767188a6fc43f6a65c1ec6c1c7617879dd02",
        "filename": "depends/packages/native_libdmg-hfsplus.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/native_libdmg-hfsplus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/native_libdmg-hfsplus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libdmg-hfsplus.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "c50fdc3f6bae8e33cde4c361f28a4eacffd5e992",
        "filename": "depends/packages/native_libmultiprocess.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/native_libmultiprocess.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/native_libmultiprocess.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libmultiprocess.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "e60b99dccc98ce44512e0026a712bca1371f5855",
        "filename": "depends/packages/native_mac_alias.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/native_mac_alias.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/native_mac_alias.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_mac_alias.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "4627acb521879b5546bc3e26a6be4b2803257007",
        "filename": "depends/packages/packages.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "d1687883bcd5197372367e4a9a5f029594f9f273",
        "filename": "depends/packages/qrencode.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/qrencode.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/qrencode.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qrencode.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "083bc68d66c3bb1c2b881747d25ec1827a576077",
        "filename": "depends/packages/qt.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 264,
        "changes": 264,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "5b3a61b239c64b2cbf6c538d0548791c75915490",
        "filename": "depends/packages/sqlite.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/sqlite.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/sqlite.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/sqlite.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "01203a0718af93deff60d84fb337848e79ae661e",
        "filename": "depends/packages/xcb_proto.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/xcb_proto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/xcb_proto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xcb_proto.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "6bd867d02b20f4cf46da0b73baa5fd1fab68f6b9",
        "filename": "depends/packages/xproto.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/xproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/xproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xproto.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "c93aa1a74da831a4c33f1835fe4bdeb24441b845",
        "filename": "depends/packages/zeromq.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/zeromq.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/zeromq.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zeromq.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "acb02020a80b2424fe6080a0b64b8ac54d33df62",
        "filename": "depends/packages/zlib.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 31,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/zlib.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/packages/zlib.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zlib.mk?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "58f7ddc7d502cff2b6cad8a81df5e879e8a3360b",
        "filename": "depends/patches/bdb/clang_cxx_11.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 147,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/bdb/clang_cxx_11.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/bdb/clang_cxx_11.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/bdb/clang_cxx_11.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "722f7bb5ea4707de46a27c61f1b9e531d7bcf97d",
        "filename": "depends/patches/boost/unused_var_in_process.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/boost/unused_var_in_process.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/boost/unused_var_in_process.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/boost/unused_var_in_process.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "7401b83d840ff982d18a070e2a4ee2446e458d99",
        "filename": "depends/patches/fontconfig/gperf_header_regen.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/fontconfig/gperf_header_regen.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/fontconfig/gperf_header_regen.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/fontconfig/gperf_header_regen.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "9f69081890c33d7acd79ec569cc7122d84d316da",
        "filename": "depends/patches/fontconfig/remove_char_width_usage.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 62,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/fontconfig/remove_char_width_usage.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/fontconfig/remove_char_width_usage.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/fontconfig/remove_char_width_usage.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "a98cd90bd58a20072443a11a9c412b447e8e98a1",
        "filename": "depends/patches/libevent/0001-fix-windows-getaddrinfo.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/libevent/0001-fix-windows-getaddrinfo.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/libevent/0001-fix-windows-getaddrinfo.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/libevent/0001-fix-windows-getaddrinfo.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "a1cc9b50d1509379b121ba3f228821cced0485f9",
        "filename": "depends/patches/miniupnpc/dont_use_wingen.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/miniupnpc/dont_use_wingen.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/miniupnpc/dont_use_wingen.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/miniupnpc/dont_use_wingen.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "d6c58c102fb321794eeca68b85afd4207d9bdeca",
        "filename": "depends/patches/native_cctools/ld64_disable_threading.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/native_cctools/ld64_disable_threading.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/native_cctools/ld64_disable_threading.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_cctools/ld64_disable_threading.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "8ab0993dc4de142ab7766a500640be92540fe80f",
        "filename": "depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_cdrkit/cdrkit-deterministic.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "f346c8f2cff8b040cc534c32402ccf92229d8c05",
        "filename": "depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 45,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "a74e9cb09872b9abc82542e67772208413f7284e",
        "filename": "depends/patches/qt/dont_hardcode_pwd.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/dont_hardcode_pwd.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/dont_hardcode_pwd.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/dont_hardcode_pwd.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "f6b2c9fc8015a0eef744bda87ede8e230aa6b3a8",
        "filename": "depends/patches/qt/drop_lrelease_dependency.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/drop_lrelease_dependency.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/drop_lrelease_dependency.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/drop_lrelease_dependency.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "2f6ff00f40c253c95d5bc62e887b032eac22055e",
        "filename": "depends/patches/qt/fix_android_jni_static.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/fix_android_jni_static.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/fix_android_jni_static.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_android_jni_static.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "13bfff9776474028c5165f9e3d5e64bee3d576e5",
        "filename": "depends/patches/qt/fix_android_qmake_conf.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/fix_android_qmake_conf.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/fix_android_qmake_conf.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_android_qmake_conf.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "0d7dd647debca93eb5383ee72f6d4db573dabaac",
        "filename": "depends/patches/qt/fix_configure_mac.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 50,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/fix_configure_mac.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/fix_configure_mac.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_configure_mac.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "f868ca25775547188620644ae02881edeaa06a8d",
        "filename": "depends/patches/qt/fix_no_printer.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/fix_no_printer.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/fix_no_printer.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_no_printer.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "d37b6c777646c39bd09b4ee63e8c98047b49bab4",
        "filename": "depends/patches/qt/fix_powerpc_libpng.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/fix_powerpc_libpng.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/fix_powerpc_libpng.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_powerpc_libpng.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "8c722ffb46cb1d55dfc6a341b2f6dac3abe0f7a5",
        "filename": "depends/patches/qt/fix_qt_pkgconfig.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/fix_qt_pkgconfig.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/fix_qt_pkgconfig.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_qt_pkgconfig.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "c1b07fe23afdbd7a2f204811e2aad132bd2d9dff",
        "filename": "depends/patches/qt/fix_rcc_determinism.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/fix_rcc_determinism.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/fix_rcc_determinism.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_rcc_determinism.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "e7f29f01f9cd7f250b86bbd038175aa6a0fb35b0",
        "filename": "depends/patches/qt/fix_riscv64_arch.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/fix_riscv64_arch.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/fix_riscv64_arch.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_riscv64_arch.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "b0f1c98aa60c9d3442d7c596cd0fd39892a68176",
        "filename": "depends/patches/qt/freetype_back_compat.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/freetype_back_compat.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/freetype_back_compat.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/freetype_back_compat.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "4cd96df29ff307b012d5ae4c49cfff71948cca86",
        "filename": "depends/patches/qt/mac-qmake.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/mac-qmake.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/mac-qmake.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mac-qmake.conf?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "fe82c2c73cb09611da2be6ccbe274d4191bc1ad8",
        "filename": "depends/patches/qt/no-xlib.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 69,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/no-xlib.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/no-xlib.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/no-xlib.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "165abf3e2e7a6d7cdbe7b960ec15dbcfaf0a9dfd",
        "filename": "depends/patches/qt/xkb-default.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/xkb-default.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/qt/xkb-default.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/xkb-default.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "ddf91e6abfaba15442df4812af77379e7349019c",
        "filename": "depends/patches/zeromq/remove_libstd_link.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/zeromq/remove_libstd_link.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/depends/patches/zeromq/remove_libstd_link.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/zeromq/remove_libstd_link.patch?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "38498103bb1704a3f13979c1359649a786d50aef",
        "filename": "doc/.gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/.gitignore?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "2f7916821256f93fbc0ac2837c3afeb21828d2e1",
        "filename": "doc/Doxyfile.in",
        "status": "removed",
        "additions": 0,
        "deletions": 2461,
        "changes": 2461,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/Doxyfile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/Doxyfile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile.in?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "40d8e330e28cd74e377bd52e16de96cf44f5a76e",
        "filename": "doc/JSON-RPC-interface.md",
        "status": "removed",
        "additions": 0,
        "deletions": 129,
        "changes": 129,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/JSON-RPC-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/JSON-RPC-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/JSON-RPC-interface.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "19d8204d83eb7960ae0e91e04ca8404422e564df",
        "filename": "doc/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "6888383a9861eaef1b5b1eb86d8e13712b2be2b0",
        "filename": "doc/README_doxygen.md",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/README_doxygen.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/README_doxygen.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_doxygen.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "07d61b3bda13acb5ac4775db4d23a97586aed646",
        "filename": "doc/README_windows.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "842a3964df625f6bf16ffb84ec3a2b31fb4fbd6b",
        "filename": "doc/REST-interface.md",
        "status": "removed",
        "additions": 0,
        "deletions": 116,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "2dd930d6a4f97debef6dba19040f471f75250b6a",
        "filename": "doc/assets-attribution.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "b6cd86eafe6e7df2f81da7e0835239a40c476a24",
        "filename": "doc/benchmarking.md",
        "status": "removed",
        "additions": 0,
        "deletions": 50,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/benchmarking.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/benchmarking.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/benchmarking.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "8c20533c9bbaea4bcc18f8610713016454267a78",
        "filename": "doc/bips.md",
        "status": "removed",
        "additions": 0,
        "deletions": 48,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "f4a8edec75c5cf9a9bf04d010e5476698856d15c",
        "filename": "doc/bitcoin-conf.md",
        "status": "removed",
        "additions": 0,
        "deletions": 62,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/bitcoin-conf.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/bitcoin-conf.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bitcoin-conf.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "258be86edee2372033763742c513309761248f1b",
        "filename": "doc/bitcoin_logo_doxygen.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/bitcoin_logo_doxygen.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/bitcoin_logo_doxygen.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bitcoin_logo_doxygen.png?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "f48855a344fde73bb7b1cab23f74ce7c137dc264",
        "filename": "doc/build-freebsd.md",
        "status": "removed",
        "additions": 0,
        "deletions": 61,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/build-freebsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/build-freebsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-freebsd.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "47049a780edef5c5e1ef87813eff17eb0060d467",
        "filename": "doc/build-netbsd.md",
        "status": "removed",
        "additions": 0,
        "deletions": 81,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/build-netbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/build-netbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-netbsd.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "2b051c078c8748b9e2988457d724655a7d9f7665",
        "filename": "doc/build-openbsd.md",
        "status": "removed",
        "additions": 0,
        "deletions": 115,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "2a7d71eea6317116527c7d7845c701f7241cb68f",
        "filename": "doc/build-osx.md",
        "status": "removed",
        "additions": 0,
        "deletions": 116,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "ab83ceff3dcf86cbdf5a436d2891cc3642f6191a",
        "filename": "doc/build-unix.md",
        "status": "removed",
        "additions": 0,
        "deletions": 301,
        "changes": 301,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "28b6aceb3cc6208857e73aedd54efa472a094867",
        "filename": "doc/build-windows.md",
        "status": "removed",
        "additions": 0,
        "deletions": 137,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "d1bf4b3a87da9eb669ec5b17d51104b1a3a0f6b0",
        "filename": "doc/dependencies.md",
        "status": "removed",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "181ff77e5080abce1c4f3fb2116afdf8649590e2",
        "filename": "doc/descriptors.md",
        "status": "removed",
        "additions": 0,
        "deletions": 212,
        "changes": 212,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/descriptors.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/descriptors.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/descriptors.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "fa188dbcd603b6eef80d3855ee9aa44c5e4a37f3",
        "filename": "doc/developer-notes.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1309,
        "changes": 1309,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "55a5c28258c67704fb926e0ad71d448440babdaa",
        "filename": "doc/dnsseed-policy.md",
        "status": "removed",
        "additions": 0,
        "deletions": 54,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/dnsseed-policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/dnsseed-policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dnsseed-policy.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "545e8fc92c825af88d32528ee5307ae2eddc538c",
        "filename": "doc/files.md",
        "status": "removed",
        "additions": 0,
        "deletions": 125,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "c97b8d4d50812c3d60e4fe38b88fddcb4a0689a4",
        "filename": "doc/fuzzing.md",
        "status": "removed",
        "additions": 0,
        "deletions": 159,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/fuzzing.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/fuzzing.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/fuzzing.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "3a48f4a0b397770e44f51477df854f8298ce1b75",
        "filename": "doc/gitian-building.md",
        "status": "removed",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "99aa0a0def3d6b91511d53aee17f507ae1f813de",
        "filename": "doc/init.md",
        "status": "removed",
        "additions": 0,
        "deletions": 145,
        "changes": 145,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "edbc0911a16772d4a1b23645795f9f7b4185aecb",
        "filename": "doc/man/Makefile.am",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/man/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/man/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/Makefile.am?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "129651d8e9f2f0795ca484af84518feef4faf3ad",
        "filename": "doc/man/bitcoin-cli.1",
        "status": "removed",
        "additions": 0,
        "deletions": 115,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/man/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/man/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-cli.1?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "f68be21e8d9045094871c2025bc8f82526e49471",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "removed",
        "additions": 0,
        "deletions": 610,
        "changes": 610,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "b4c769889637e51971118e1e3c3dbcf2c9336283",
        "filename": "doc/man/bitcoin-tx.1",
        "status": "removed",
        "additions": 0,
        "deletions": 116,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/man/bitcoin-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/man/bitcoin-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-tx.1?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "aadea09a2b82382fd7f806262a6ef1d9f529da91",
        "filename": "doc/man/bitcoin-wallet.1",
        "status": "removed",
        "additions": 0,
        "deletions": 63,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/man/bitcoin-wallet.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/man/bitcoin-wallet.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-wallet.1?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "211ba10285d3dffb0580a6b1a438495bac19c566",
        "filename": "doc/man/bitcoind.1",
        "status": "removed",
        "additions": 0,
        "deletions": 583,
        "changes": 583,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "471d8561f7a27ff2aa20da9ca750b7a1a646bb72",
        "filename": "doc/multiprocess.md",
        "status": "removed",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/multiprocess.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/multiprocess.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/multiprocess.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "555f0afe3c7b28d0ed88fc0632aa266bbb087497",
        "filename": "doc/productivity.md",
        "status": "removed",
        "additions": 0,
        "deletions": 217,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/productivity.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/productivity.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/productivity.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "c411b31d5d967001f21f189f34cfd1200ddb155b",
        "filename": "doc/psbt.md",
        "status": "removed",
        "additions": 0,
        "deletions": 143,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/psbt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/psbt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/psbt.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "6e7a578ecc4e19bcce131626c8c1e868e678286e",
        "filename": "doc/reduce-memory.md",
        "status": "removed",
        "additions": 0,
        "deletions": 50,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/reduce-memory.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/reduce-memory.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-memory.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "86943b1f727cfff6e8fd3bc343a217ccd48be776",
        "filename": "doc/reduce-traffic.md",
        "status": "removed",
        "additions": 0,
        "deletions": 56,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/reduce-traffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/reduce-traffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-traffic.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "d3983b16899e29fd971a57cb845f27edefda98b0",
        "filename": "doc/release-notes.md",
        "status": "removed",
        "additions": 0,
        "deletions": 486,
        "changes": 486,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "986b8832ec1893a5cc061ea14ac609e7836fbb4f",
        "filename": "doc/release-notes/release-notes-0.10.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 762,
        "changes": 762,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.10.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.10.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.0.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "8f59f1f68c6905f9435b04bd029d3beef2a1f1e8",
        "filename": "doc/release-notes/release-notes-0.10.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 143,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.10.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.10.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.1.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "192ed69d299811b8b662f28905f73479266be820",
        "filename": "doc/release-notes/release-notes-0.10.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.10.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.10.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.2.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "8a110e562c45376daea69efcb0837dc879ada66a",
        "filename": "doc/release-notes/release-notes-0.10.3.md",
        "status": "removed",
        "additions": 0,
        "deletions": 165,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.10.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.10.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.3.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "38a2c1347d0b8afbfe0c0481cd90b9db06854328",
        "filename": "doc/release-notes/release-notes-0.10.4.md",
        "status": "removed",
        "additions": 0,
        "deletions": 172,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.10.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.10.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.4.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "28e49fb7ea64838f81a72424217e755a62e865c8",
        "filename": "doc/release-notes/release-notes-0.11.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 505,
        "changes": 505,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.11.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.11.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.0.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "799205691ed0f26322923693c2cbf523f0b6751e",
        "filename": "doc/release-notes/release-notes-0.11.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 172,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.11.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.11.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.1.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "2351b80656542c3eee9b27c1f3fae5d3a46179d3",
        "filename": "doc/release-notes/release-notes-0.11.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 217,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.11.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.11.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.2.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "bc0d5ea3b0d91a326cc616e624a36ffd0a36e8b6",
        "filename": "doc/release-notes/release-notes-0.12.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 894,
        "changes": 894,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.12.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.12.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.0.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "610cd481de4855f3d0d05e5d7d089f9c41ee9f06",
        "filename": "doc/release-notes/release-notes-0.12.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 198,
        "changes": 198,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.12.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.12.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.1.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "4c3cb97df34cf5e13939e538bd8af50759cc92f6",
        "filename": "doc/release-notes/release-notes-0.13.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 868,
        "changes": 868,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.13.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.13.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.0.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "75c2d61be8d3c1b3c85bf9a89df1821b39d42e56",
        "filename": "doc/release-notes/release-notes-0.13.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 410,
        "changes": 410,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.13.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.13.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.1.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "45fff5c8bbdc1bb2834e204412164f8b34140bde",
        "filename": "doc/release-notes/release-notes-0.13.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 178,
        "changes": 178,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.13.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.13.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.2.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "c41f22979b581f3ba6af58b73b578c8d138fa966",
        "filename": "doc/release-notes/release-notes-0.14.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 873,
        "changes": 873,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.14.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.14.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.0.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "ef072afd4d7fb94d29007038e587eacb40358a98",
        "filename": "doc/release-notes/release-notes-0.14.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 143,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.14.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.14.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.1.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      },
      {
        "sha": "0ad554b7738c17a4017b57234fce1132f9a9ed45",
        "filename": "doc/release-notes/release-notes-0.14.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 102,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.14.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76c535efa44bc5afe70a0962192a348a0d1c51e/doc/release-notes/release-notes-0.14.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.2.md?ref=e76c535efa44bc5afe70a0962192a348a0d1c51e"
      }
    ]
  },
  {
    "sha": "1dc47d660c3879599cdfc224a6e7a0357dc66c95",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZGM0N2Q2NjBjMzg3OTU5OWNkZmMyMjRhNmU3YTAzNTdkYzY2Yzk1",
    "commit": {
      "author": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:52:12Z"
      },
      "committer": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:52:12Z"
      },
      "message": "latest update Mon 09 Nov 2020 02:52:12 PM UTC",
      "tree": {
        "sha": "4b825dc642cb6eb9a060e54bf8d69288fbee4904",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b825dc642cb6eb9a060e54bf8d69288fbee4904"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1dc47d660c3879599cdfc224a6e7a0357dc66c95",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1dc47d660c3879599cdfc224a6e7a0357dc66c95",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1dc47d660c3879599cdfc224a6e7a0357dc66c95",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1dc47d660c3879599cdfc224a6e7a0357dc66c95/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "637d27872095299acb1f5f80cbd5d93e850e2bb8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/637d27872095299acb1f5f80cbd5d93e850e2bb8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/637d27872095299acb1f5f80cbd5d93e850e2bb8"
      }
    ],
    "stats": {
      "total": 164,
      "additions": 0,
      "deletions": 164
    },
    "files": [
      {
        "sha": "eedeeb4e54c58c80ca730dfcefe2c1f5da05c9e6",
        "filename": ".github/ISSUE_TEMPLATE.md",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/637d27872095299acb1f5f80cbd5d93e850e2bb8/.github/ISSUE_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/637d27872095299acb1f5f80cbd5d93e850e2bb8/.github/ISSUE_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE.md?ref=637d27872095299acb1f5f80cbd5d93e850e2bb8",
        "patch": "@@ -1,27 +0,0 @@\n-<!-- This issue tracker is only for technical issues related to Bitcoin Core.\n-\n-General bitcoin questions and/or support requests are best directed to the Bitcoin StackExchange at https://bitcoin.stackexchange.com.\n-\n-For reporting security issues, please read instructions at https://bitcoincore.org/en/contact/.\n-\n-If the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue!\n-\n-Any report, issue or feature request related to the GUI should be reported at\n-https://github.com/bitcoin-core/gui/issues/\n--->\n-\n-<!-- Describe the issue -->\n-<!--- What behavior did you expect? -->\n-\n-<!--- What was the actual behavior (provide screenshots if the issue is GUI-related)? -->\n-\n-<!--- How reliably can you reproduce the issue, what are the steps to do so? -->\n-\n-<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\n-\n-<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\n-\n-<!-- GUI-related issue? What is your operating system and its version? If Linux, what is your desktop environment and graphical shell? -->\n-\n-<!-- Any extra information that might be useful in the debugging process. -->\n-<!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->"
      },
      {
        "sha": "fb91208954ea9698d5610a85a1a9b3efb7311142",
        "filename": ".github/ISSUE_TEMPLATE/bug_report.md",
        "status": "removed",
        "additions": 0,
        "deletions": 41,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/637d27872095299acb1f5f80cbd5d93e850e2bb8/.github/ISSUE_TEMPLATE/bug_report.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/637d27872095299acb1f5f80cbd5d93e850e2bb8/.github/ISSUE_TEMPLATE/bug_report.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/bug_report.md?ref=637d27872095299acb1f5f80cbd5d93e850e2bb8",
        "patch": "@@ -1,41 +0,0 @@\n----\n-name: Bug report\n-about: Create a report to help us improve (use this for suspected bugs only, if not sure, open a regular issue below)\n-title: ''\n-labels: Bug\n-assignees: ''\n-\n----\n-\n-<!-- This issue tracker is only for technical issues related to Bitcoin Core.\n-\n-General bitcoin questions and/or support requests are best directed to the Bitcoin StackExchange at https://bitcoin.stackexchange.com.\n-\n-For reporting security issues, please read instructions at https://bitcoincore.org/en/contact/.\n-\n-If the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue! -->\n-\n-<!-- Describe the issue -->\n-\n-**Expected behavior**\n-\n-<!--- What behavior did you expect? -->\n-\n-**Actual behavior**\n-\n-<!--- What was the actual behavior (provide screenshots if the issue is GUI-related)? -->\n-\n-**To reproduce**\n-\n-<!--- How reliably can you reproduce the issue, what are the steps to do so? -->\n-\n-**System information**\n-\n-<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\n-\n-<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\n-\n-<!-- GUI-related issue? What is your operating system and its version? If Linux, what is your desktop environment and graphical shell? -->\n-\n-<!-- Any extra information that might be useful in the debugging process. -->\n-<!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->"
      },
      {
        "sha": "2d5685185ea3621cb9c7d83e62a628468cb9f786",
        "filename": ".github/ISSUE_TEMPLATE/feature_request.md",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/637d27872095299acb1f5f80cbd5d93e850e2bb8/.github/ISSUE_TEMPLATE/feature_request.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/637d27872095299acb1f5f80cbd5d93e850e2bb8/.github/ISSUE_TEMPLATE/feature_request.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/feature_request.md?ref=637d27872095299acb1f5f80cbd5d93e850e2bb8",
        "patch": "@@ -1,20 +0,0 @@\n----\n-name: Feature request\n-about: Suggest an idea for this project\n-title: ''\n-labels: Feature\n-assignees: ''\n-\n----\n-\n-**Is your feature request related to a problem? Please describe.**\n-<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\n-\n-**Describe the solution you'd like**\n-<!-- A clear and concise description of what you want to happen. -->\n-\n-**Describe alternatives you've considered**\n-<!-- A clear and concise description of any alternative solutions or features you've considered. -->\n-\n-**Additional context**\n-<!-- Add any other context or screenshots about the feature request here. -->"
      },
      {
        "sha": "d32e22d36079ab27228ab036aafe006d26b9c4ce",
        "filename": ".github/ISSUE_TEMPLATE/good_first_issue.md",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/637d27872095299acb1f5f80cbd5d93e850e2bb8/.github/ISSUE_TEMPLATE/good_first_issue.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/637d27872095299acb1f5f80cbd5d93e850e2bb8/.github/ISSUE_TEMPLATE/good_first_issue.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/good_first_issue.md?ref=637d27872095299acb1f5f80cbd5d93e850e2bb8",
        "patch": "@@ -1,22 +0,0 @@\n----\n-name: Good first issue\n-about: '(Regular devs only): Suggest a new good first issue'\n-title: ''\n-labels: ''\n-assignees: ''\n-\n----\n-\n-<!-- Needs the label \"good first issue\" assigned manually before or after opening -->\n-\n-<!-- A good first issue is an uncontroversial issue, that has a relatively unique and obvious solution -->\n-\n-<!-- Motivate the issue and explain the solution briefly -->\n-\n-#### Useful skills:\n-\n-<!-- (For example, \u201cC++11 std::thread\u201d, \u201cQt5 GUI and async GUI design\u201d or \u201cbasic understanding of Bitcoin mining and the Bitcoin Core RPC interface\u201d.) -->\n-\n-#### Want to work on this issue?\n-\n-For guidance on contributing, please read [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md) before opening your pull request."
      },
      {
        "sha": "37acc81e21e6c9e49a89623e016bb6df7002cba6",
        "filename": ".github/ISSUE_TEMPLATE/gui_issue.md",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/637d27872095299acb1f5f80cbd5d93e850e2bb8/.github/ISSUE_TEMPLATE/gui_issue.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/637d27872095299acb1f5f80cbd5d93e850e2bb8/.github/ISSUE_TEMPLATE/gui_issue.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/gui_issue.md?ref=637d27872095299acb1f5f80cbd5d93e850e2bb8",
        "patch": "@@ -1,11 +0,0 @@\n----\n-name: An issue or feature request related to the GUI\n-about: Any report, issue or feature request related to the GUI should be reported at https://github.com/bitcoin-core/gui/issues/\n-title: Any report, issue or feature request related to the GUI should be reported at https://github.com/bitcoin-core/gui/issues/\n-labels: GUI\n-assignees: ''\n-\n----\n-\n-Any report, issue or feature request related to the GUI should be reported at\n-https://github.com/bitcoin-core/gui/issues/"
      },
      {
        "sha": "ae92fc78f2d1cf342d4eb9439d9a0ff91d9092b4",
        "filename": ".github/PULL_REQUEST_TEMPLATE.md",
        "status": "removed",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/637d27872095299acb1f5f80cbd5d93e850e2bb8/.github/PULL_REQUEST_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/637d27872095299acb1f5f80cbd5d93e850e2bb8/.github/PULL_REQUEST_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/PULL_REQUEST_TEMPLATE.md?ref=637d27872095299acb1f5f80cbd5d93e850e2bb8",
        "patch": "@@ -1,43 +0,0 @@\n-<!--\n-*** Please remove the following help text before submitting: ***\n-\n-Pull requests without a rationale and clear improvement may be closed\n-immediately.\n-\n-GUI-related pull requests should be opened against\n-https://github.com/bitcoin-core/gui\n-first. See CONTRIBUTING.md\n--->\n-\n-<!--\n-Please provide clear motivation for your patch and explain how it improves\n-Bitcoin Core user experience or Bitcoin Core developer experience\n-significantly:\n-\n-* Any test improvements or new tests that improve coverage are always welcome.\n-* All other changes should have accompanying unit tests (see `src/test/`) or\n-  functional tests (see `test/`). Contributors should note which tests cover\n-  modified code. If no tests exist for a region of modified code, new tests\n-  should accompany the change.\n-* Bug fixes are most welcome when they come with steps to reproduce or an\n-  explanation of the potential issue as well as reasoning for the way the bug\n-  was fixed.\n-* Features are welcome, but might be rejected due to design or scope issues.\n-  If a feature is based on a lot of dependencies, contributors should first\n-  consider building the system outside of Bitcoin Core, if possible.\n-* Refactoring changes are only accepted if they are required for a feature or\n-  bug fix or otherwise improve developer experience significantly. For example,\n-  most \"code style\" refactoring changes require a thorough explanation why they\n-  are useful, what downsides they have and why they *significantly* improve\n-  developer experience or avoid serious programming bugs. Note that code style\n-  is often a subjective matter. Unless they are explicitly mentioned to be\n-  preferred in the [developer notes](/doc/developer-notes.md), stylistic code\n-  changes are usually rejected.\n--->\n-\n-<!--\n-Bitcoin Core has a thorough review process and even the most trivial change\n-needs to pass a lot of eyes and requires non-zero or even substantial time\n-effort to review. There is a huge lack of active reviewers on the project, so\n-patches often sit for a long time.\n--->"
      }
    ]
  },
  {
    "sha": "57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NzEzMGNiN2Q2YTliZjFlM2Q1MjhjNDQ1OTAzZWQ4ZjRlMGQ1YTEx",
    "commit": {
      "author": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:53:03Z"
      },
      "committer": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T14:53:03Z"
      },
      "message": "latest update Mon 09 Nov 2020 02:53:03 PM UTC",
      "tree": {
        "sha": "854150212099cae2a0728b879ada984ccc8580c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/854150212099cae2a0728b879ada984ccc8580c6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1dc47d660c3879599cdfc224a6e7a0357dc66c95",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1dc47d660c3879599cdfc224a6e7a0357dc66c95",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1dc47d660c3879599cdfc224a6e7a0357dc66c95"
      }
    ],
    "stats": {
      "total": 564351,
      "additions": 564351,
      "deletions": 0
    },
    "files": [
      {
        "sha": "eace0b712119afb911e9404be36737766a36e5cc",
        "filename": ".appveyor.yml",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.appveyor.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.appveyor.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.appveyor.yml?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,62 @@\n+version: '{branch}.{build}'\n+skip_tags: true\n+image: Visual Studio 2019\n+configuration: Release\n+platform: x64\n+clone_depth: 5\n+environment:\n+  PATH: 'C:\\Python37-x64;C:\\Python37-x64\\Scripts;%PATH%'\n+  PYTHONUTF8: 1\n+  QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/v1.6/Qt5.9.8_x64_static_vs2019.zip'\n+  QT_DOWNLOAD_HASH: '9a8c6eb20967873785057fdcd329a657c7f922b0af08c5fde105cc597dd37e21'\n+  QT_LOCAL_PATH: 'C:\\Qt5.9.8_x64_static_vs2019'\n+  VCPKG_INSTALL_PATH: 'C:\\tools\\vcpkg\\installed'\n+  VCPKG_COMMIT_ID: '40230b8e3f6368dcb398d649331be878ca1e9007'\n+install:\n+# Disable zmq test for now since python zmq library on Windows would cause Access violation sometimes.\n+# - cmd: pip install zmq\n+# Powershell block below is to install the c++ dependencies via vcpkg. The pseudo code is:\n+#    a. Checkout the vcpkg source (including port files) for the specific checkout and build the vcpkg binary,\n+#    b. Install the missing packages using the vcpkg manifest.\n+- ps: |\n+      cd c:\\tools\\vcpkg\n+      $env:GIT_REDIRECT_STDERR = '2>&1' # git is writing non-errors to STDERR when doing git pull. Send to STDOUT instead.\n+      git pull origin master > $null\n+      git -c advice.detachedHead=false checkout $env:VCPKG_COMMIT_ID\n+      .\\bootstrap-vcpkg.bat > $null\n+      cd \"$env:APPVEYOR_BUILD_FOLDER\"\n+before_build:\n+# Powershell block below is to download and extract the Qt static libraries. The pseudo code is:\n+#    a. Download the zip file with the prebuilt Qt static libraries.\n+#    b. Check that the downloaded file matches the expected hash.\n+#    c. Extract the zip file to the specific destination path expected by the msbuild projects.\n+- ps: |\n+      Write-Host \"Downloading Qt binaries.\";\n+      Invoke-WebRequest -Uri $env:QT_DOWNLOAD_URL -Out qtdownload.zip;\n+      Write-Host \"Qt binaries successfully downloaded, checking hash against $env:QT_DOWNLOAD_HASH...\";\n+      if((Get-FileHash qtdownload.zip).Hash -eq $env:QT_DOWNLOAD_HASH) {\n+        Expand-Archive qtdownload.zip -DestinationPath $env:QT_LOCAL_PATH;\n+        Write-Host \"Qt binary download matched the expected hash.\";\n+      }\n+      else {\n+        Write-Host \"ERROR: Qt binary download did not match the expected hash.\";\n+        Exit-AppveyorBuild;\n+      }\n+- cmd: python build_msvc\\msvc-autogen.py\n+build_script:\n+- cmd: msbuild /p:TrackFileAccess=false build_msvc\\bitcoin.sln /m /v:q /nologo\n+after_build:\n+#- 7z a bitcoin-%APPVEYOR_BUILD_VERSION%.zip %APPVEYOR_BUILD_FOLDER%\\build_msvc\\%platform%\\%configuration%\\*.exe\n+test_script:\n+- cmd: src\\test_bitcoin.exe -l test_suite\n+- cmd: src\\bench_bitcoin.exe > NUL\n+- ps:  python test\\util\\bitcoin-util-test.py\n+- cmd: python test\\util\\rpcauth-test.py\n+# Fee estimation test failing on appveyor with: WinError 10048] Only one usage of each socket address (protocol/network address/port) is normally permitted.\n+# functional tests disabled for now. See\n+# https://github.com/bitcoin/bitcoin/pull/18626#issuecomment-613396202\n+# https://github.com/bitcoin/bitcoin/issues/18623\n+# - cmd: python test\\functional\\test_runner.py --ci --quiet --combinedlogslen=4000 --failfast --exclude feature_fee_estimation\n+artifacts:\n+#- path: bitcoin-%APPVEYOR_BUILD_VERSION%.zip\n+deploy: off"
      },
      {
        "sha": "916f172a6af7a7828920c7342c5ff00df7140543",
        "filename": ".cirrus.yml",
        "status": "added",
        "additions": 121,
        "deletions": 0,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.cirrus.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.cirrus.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.cirrus.yml?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,121 @@\n+### Global defaults\n+\n+timeout_in: 120m  # https://cirrus-ci.org/faq/#instance-timed-out\n+container:\n+  # https://cirrus-ci.org/faq/#are-there-any-limits\n+  # Each project has 16 CPU in total, assign 2 to each container, so that 8 tasks run in parallel\n+  cpu: 2\n+  memory: 8G  # Set to 8GB to avoid OOM. https://cirrus-ci.org/guide/linux/#linux-containers\n+  kvm: true  # Use kvm to avoid spurious CI failures in the default virtualization cluster, see https://github.com/bitcoin/bitcoin/issues/20093\n+env:\n+  PACKAGE_MANAGER_INSTALL : \"apt-get update && apt-get install -y\"\n+  MAKEJOBS: \"-j4\"\n+  DANGER_RUN_CI_ON_HOST: \"1\"  # Containers will be discarded after the run, so there is no risk that the ci scripts modify the system\n+  TEST_RUNNER_PORT_MIN: \"14000\"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache\n+  CCACHE_SIZE: \"200M\"\n+  CCACHE_DIR: \"/tmp/ccache_dir\"\n+\n+### Global task template\n+\n+# https://cirrus-ci.org/guide/tips-and-tricks/#sharing-configuration-between-tasks\n+global_task_template: &GLOBAL_TASK_TEMPLATE\n+  skip: $CIRRUS_REPO_FULL_NAME == \"bitcoin-core/gui\" && $CIRRUS_PR == \"\"  # No need to run on the read-only mirror, unless it is a PR. https://cirrus-ci.org/guide/writing-tasks/#conditional-task-execution\n+  ccache_cache:\n+    folder: \"/tmp/ccache_dir\"\n+  depends_built_cache:\n+    folder: \"/tmp/cirrus-ci-build/depends/built\"\n+  depends_sdk_cache:\n+    folder: \"/tmp/cirrus-ci-build/depends/sdk-sources\"\n+  depends_releases_cache:\n+    folder: \"/tmp/cirrus-ci-build/releases\"\n+  merge_base_script:\n+    - bash -c \"$PACKAGE_MANAGER_INSTALL git\"\n+    - git fetch $CIRRUS_REPO_CLONE_URL $CIRRUS_BASE_BRANCH\n+    - git config --global user.email \"ci@ci.ci\"\n+    - git config --global user.name \"ci\"\n+    - git merge FETCH_HEAD  # Merge base to detect silent merge conflicts\n+  ci_script:\n+    - ./ci/test_run_all.sh\n+\n+#task:\n+#  name: \"Windows\"\n+#  windows_container:\n+#    image: cirrusci/windowsservercore:2019\n+#  env:\n+#    CIRRUS_SHELL: powershell\n+#    PATH: 'C:\\Python37;C:\\Python37\\Scripts;%PATH%'\n+#    PYTHONUTF8: 1\n+#    QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/v1.6/Qt5.9.8_x64_static_vs2019.zip'\n+#    QT_DOWNLOAD_HASH: '9a8c6eb20967873785057fdcd329a657c7f922b0af08c5fde105cc597dd37e21'\n+#    QT_LOCAL_PATH: 'C:\\Qt5.9.8_x64_static_vs2019'\n+#    VCPKG_INSTALL_PATH: 'C:\\tools\\vcpkg\\installed'\n+#    VCPKG_COMMIT_ID: 'ed0df8ecc4ed7e755ea03e18aaf285fd9b4b4a74'\n+#  install_script:\n+#    - choco install python --version=3.7.7 -y\n+\n+task:\n+  name: 'x86_64 Linux  [GOAL: install]  [bionic]  [C++17, previous releases, uses qt5 dev package and some depends packages] [unsigned char]'\n+  << : *GLOBAL_TASK_TEMPLATE\n+  container:\n+    image: ubuntu:bionic\n+  env:\n+    FILE_ENV: \"./ci/test/00_setup_env_native_qt5.sh\"\n+\n+task:\n+  name: 'x86_64 Linux  [GOAL: install]  [focal]  [depends, sanitizers: thread (TSan), no gui]'\n+  << : *GLOBAL_TASK_TEMPLATE\n+  container:\n+    image: ubuntu:focal\n+    cpu: 4  # Double CPU and Memory to avoid timeout\n+    memory: 16G\n+  env:\n+    MAKEJOBS: \"-j8\"\n+    FILE_ENV: \"./ci/test/00_setup_env_native_tsan.sh\"\n+\n+task:\n+  name: 'x86_64 Linux  [GOAL: install]  [focal]  [depends, sanitizers: memory (MSan)]'\n+  << : *GLOBAL_TASK_TEMPLATE\n+  container:\n+    image: ubuntu:focal\n+  env:\n+    FILE_ENV: \"./ci/test/00_setup_env_native_msan.sh\"\n+\n+task:\n+  name: 'x86_64 Linux  [GOAL: install]  [focal]  [no depends, only system libs, sanitizers: address/leak (ASan + LSan) + undefined (UBSan) + integer]'\n+  << : *GLOBAL_TASK_TEMPLATE\n+  container:\n+    image: ubuntu:focal\n+  env:\n+    FILE_ENV: \"./ci/test/00_setup_env_native_asan.sh\"\n+\n+task:\n+  name: 'x86_64 Linux  [GOAL: install]  [focal]  [no depends, only system libs, sanitizers: fuzzer,address,undefined]'\n+  << : *GLOBAL_TASK_TEMPLATE\n+  container:\n+    image: ubuntu:focal\n+  env:\n+    FILE_ENV: \"./ci/test/00_setup_env_native_fuzz.sh\"\n+\n+task:\n+  name: 'x86_64 Linux  [GOAL: install]  [focal]  [no depends, only system libs, fuzzers under valgrind]'\n+  << : *GLOBAL_TASK_TEMPLATE\n+  container:\n+    image: ubuntu:focal\n+  env:\n+    FILE_ENV: \"./ci/test/00_setup_env_native_fuzz_with_valgrind.sh\"\n+\n+task:\n+  name: 'x86_64 Linux [GOAL: install]  [focal]  [multiprocess]'\n+  << : *GLOBAL_TASK_TEMPLATE\n+  container:\n+    image: ubuntu:focal\n+  env:\n+    FILE_ENV: \"./ci/test/00_setup_env_native_multiprocess.sh\"\n+\n+task:\n+  name: 'macOS 10.12  [GOAL: deploy] [no functional tests]'\n+  << : *GLOBAL_TASK_TEMPLATE\n+  container:\n+    image: ubuntu:bionic\n+  env:\n+    FILE_ENV: \"./ci/test/00_setup_env_mac.sh\""
      },
      {
        "sha": "d44ac27eb9370e0b02b241ee28e67d0d71a947e8",
        "filename": ".fuzzbuzz.yml",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.fuzzbuzz.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.fuzzbuzz.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.fuzzbuzz.yml?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,16 @@\n+base: ubuntu:16.04\n+language: c++\n+engine: libFuzzer\n+environment:\n+  - CXXFLAGS=-fcoverage-mapping -fno-omit-frame-pointer -fprofile-instr-generate -gline-tables-only -O1\n+setup:\n+  - sudo apt-get update\n+  - sudo apt-get install -y autoconf bsdmainutils clang git libboost-all-dev libboost-program-options-dev libc++1 libc++abi1 libc++abi-dev libc++-dev libclang1 libclang-dev libdb5.3++ libevent-dev libllvm-ocaml-dev libomp5 libomp-dev libprotobuf-dev libqt5core5a libqt5dbus5 libqt5gui5 libssl-dev libtool llvm llvm-dev llvm-runtime pkg-config protobuf-compiler qttools5-dev qttools5-dev-tools software-properties-common\n+  - ./autogen.sh\n+  - CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+  - make\n+  - git clone https://github.com/bitcoin-core/qa-assets\n+auto_targets:\n+  find_targets_command: find src/test/fuzz/ -executable -type f ! -name \"*.cpp\" ! -name \"*.h\"\n+  base_corpus_dir: qa-assets/fuzz_seed_corpus/\n+  memory_limit: none"
      },
      {
        "sha": "c9cf4a7d9cd03ed588ba9882d26bfd1dd6800fe7",
        "filename": ".gitattributes",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.gitattributes",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.gitattributes",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitattributes?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1 @@\n+src/clientversion.cpp export-subst"
      },
      {
        "sha": "eedeeb4e54c58c80ca730dfcefe2c1f5da05c9e6",
        "filename": ".github/ISSUE_TEMPLATE.md",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.github/ISSUE_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.github/ISSUE_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,27 @@\n+<!-- This issue tracker is only for technical issues related to Bitcoin Core.\n+\n+General bitcoin questions and/or support requests are best directed to the Bitcoin StackExchange at https://bitcoin.stackexchange.com.\n+\n+For reporting security issues, please read instructions at https://bitcoincore.org/en/contact/.\n+\n+If the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue!\n+\n+Any report, issue or feature request related to the GUI should be reported at\n+https://github.com/bitcoin-core/gui/issues/\n+-->\n+\n+<!-- Describe the issue -->\n+<!--- What behavior did you expect? -->\n+\n+<!--- What was the actual behavior (provide screenshots if the issue is GUI-related)? -->\n+\n+<!--- How reliably can you reproduce the issue, what are the steps to do so? -->\n+\n+<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\n+\n+<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\n+\n+<!-- GUI-related issue? What is your operating system and its version? If Linux, what is your desktop environment and graphical shell? -->\n+\n+<!-- Any extra information that might be useful in the debugging process. -->\n+<!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->"
      },
      {
        "sha": "fb91208954ea9698d5610a85a1a9b3efb7311142",
        "filename": ".github/ISSUE_TEMPLATE/bug_report.md",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.github/ISSUE_TEMPLATE/bug_report.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.github/ISSUE_TEMPLATE/bug_report.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/bug_report.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,41 @@\n+---\n+name: Bug report\n+about: Create a report to help us improve (use this for suspected bugs only, if not sure, open a regular issue below)\n+title: ''\n+labels: Bug\n+assignees: ''\n+\n+---\n+\n+<!-- This issue tracker is only for technical issues related to Bitcoin Core.\n+\n+General bitcoin questions and/or support requests are best directed to the Bitcoin StackExchange at https://bitcoin.stackexchange.com.\n+\n+For reporting security issues, please read instructions at https://bitcoincore.org/en/contact/.\n+\n+If the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue! -->\n+\n+<!-- Describe the issue -->\n+\n+**Expected behavior**\n+\n+<!--- What behavior did you expect? -->\n+\n+**Actual behavior**\n+\n+<!--- What was the actual behavior (provide screenshots if the issue is GUI-related)? -->\n+\n+**To reproduce**\n+\n+<!--- How reliably can you reproduce the issue, what are the steps to do so? -->\n+\n+**System information**\n+\n+<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\n+\n+<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\n+\n+<!-- GUI-related issue? What is your operating system and its version? If Linux, what is your desktop environment and graphical shell? -->\n+\n+<!-- Any extra information that might be useful in the debugging process. -->\n+<!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->"
      },
      {
        "sha": "2d5685185ea3621cb9c7d83e62a628468cb9f786",
        "filename": ".github/ISSUE_TEMPLATE/feature_request.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.github/ISSUE_TEMPLATE/feature_request.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.github/ISSUE_TEMPLATE/feature_request.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/feature_request.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,20 @@\n+---\n+name: Feature request\n+about: Suggest an idea for this project\n+title: ''\n+labels: Feature\n+assignees: ''\n+\n+---\n+\n+**Is your feature request related to a problem? Please describe.**\n+<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\n+\n+**Describe the solution you'd like**\n+<!-- A clear and concise description of what you want to happen. -->\n+\n+**Describe alternatives you've considered**\n+<!-- A clear and concise description of any alternative solutions or features you've considered. -->\n+\n+**Additional context**\n+<!-- Add any other context or screenshots about the feature request here. -->"
      },
      {
        "sha": "d32e22d36079ab27228ab036aafe006d26b9c4ce",
        "filename": ".github/ISSUE_TEMPLATE/good_first_issue.md",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.github/ISSUE_TEMPLATE/good_first_issue.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.github/ISSUE_TEMPLATE/good_first_issue.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/good_first_issue.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,22 @@\n+---\n+name: Good first issue\n+about: '(Regular devs only): Suggest a new good first issue'\n+title: ''\n+labels: ''\n+assignees: ''\n+\n+---\n+\n+<!-- Needs the label \"good first issue\" assigned manually before or after opening -->\n+\n+<!-- A good first issue is an uncontroversial issue, that has a relatively unique and obvious solution -->\n+\n+<!-- Motivate the issue and explain the solution briefly -->\n+\n+#### Useful skills:\n+\n+<!-- (For example, \u201cC++11 std::thread\u201d, \u201cQt5 GUI and async GUI design\u201d or \u201cbasic understanding of Bitcoin mining and the Bitcoin Core RPC interface\u201d.) -->\n+\n+#### Want to work on this issue?\n+\n+For guidance on contributing, please read [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md) before opening your pull request."
      },
      {
        "sha": "37acc81e21e6c9e49a89623e016bb6df7002cba6",
        "filename": ".github/ISSUE_TEMPLATE/gui_issue.md",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.github/ISSUE_TEMPLATE/gui_issue.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.github/ISSUE_TEMPLATE/gui_issue.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/gui_issue.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,11 @@\n+---\n+name: An issue or feature request related to the GUI\n+about: Any report, issue or feature request related to the GUI should be reported at https://github.com/bitcoin-core/gui/issues/\n+title: Any report, issue or feature request related to the GUI should be reported at https://github.com/bitcoin-core/gui/issues/\n+labels: GUI\n+assignees: ''\n+\n+---\n+\n+Any report, issue or feature request related to the GUI should be reported at\n+https://github.com/bitcoin-core/gui/issues/"
      },
      {
        "sha": "ae92fc78f2d1cf342d4eb9439d9a0ff91d9092b4",
        "filename": ".github/PULL_REQUEST_TEMPLATE.md",
        "status": "added",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.github/PULL_REQUEST_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.github/PULL_REQUEST_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/PULL_REQUEST_TEMPLATE.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,43 @@\n+<!--\n+*** Please remove the following help text before submitting: ***\n+\n+Pull requests without a rationale and clear improvement may be closed\n+immediately.\n+\n+GUI-related pull requests should be opened against\n+https://github.com/bitcoin-core/gui\n+first. See CONTRIBUTING.md\n+-->\n+\n+<!--\n+Please provide clear motivation for your patch and explain how it improves\n+Bitcoin Core user experience or Bitcoin Core developer experience\n+significantly:\n+\n+* Any test improvements or new tests that improve coverage are always welcome.\n+* All other changes should have accompanying unit tests (see `src/test/`) or\n+  functional tests (see `test/`). Contributors should note which tests cover\n+  modified code. If no tests exist for a region of modified code, new tests\n+  should accompany the change.\n+* Bug fixes are most welcome when they come with steps to reproduce or an\n+  explanation of the potential issue as well as reasoning for the way the bug\n+  was fixed.\n+* Features are welcome, but might be rejected due to design or scope issues.\n+  If a feature is based on a lot of dependencies, contributors should first\n+  consider building the system outside of Bitcoin Core, if possible.\n+* Refactoring changes are only accepted if they are required for a feature or\n+  bug fix or otherwise improve developer experience significantly. For example,\n+  most \"code style\" refactoring changes require a thorough explanation why they\n+  are useful, what downsides they have and why they *significantly* improve\n+  developer experience or avoid serious programming bugs. Note that code style\n+  is often a subjective matter. Unless they are explicitly mentioned to be\n+  preferred in the [developer notes](/doc/developer-notes.md), stylistic code\n+  changes are usually rejected.\n+-->\n+\n+<!--\n+Bitcoin Core has a thorough review process and even the most trivial change\n+needs to pass a lot of eyes and requires non-zero or even substantial time\n+effort to review. There is a huge lack of active reviewers on the project, so\n+patches often sit for a long time.\n+-->"
      },
      {
        "sha": "5726b18928847149bfcbccbffda97c712392128c",
        "filename": ".gitignore",
        "status": "added",
        "additions": 150,
        "deletions": 0,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,150 @@\n+*.tar.gz\n+\n+*.exe\n+*.pdb\n+src/bitcoin\n+src/bitcoind\n+src/bitcoin-cli\n+src/bitcoin-gui\n+src/bitcoin-node\n+src/bitcoin-tx\n+src/bitcoin-wallet\n+src/test/fuzz/*\n+!src/test/fuzz/*.*\n+src/test/test_bitcoin\n+src/qt/test/test_bitcoin-qt\n+\n+# autoreconf\n+Makefile.in\n+aclocal.m4\n+autom4te.cache/\n+build-aux/config.guess\n+build-aux/config.sub\n+build-aux/depcomp\n+build-aux/install-sh\n+build-aux/ltmain.sh\n+build-aux/m4/libtool.m4\n+build-aux/m4/lt~obsolete.m4\n+build-aux/m4/ltoptions.m4\n+build-aux/m4/ltsugar.m4\n+build-aux/m4/ltversion.m4\n+build-aux/missing\n+build-aux/compile\n+build-aux/test-driver\n+config.cache\n+config.log\n+config.status\n+configure\n+libtool\n+src/config/bitcoin-config.h\n+src/config/bitcoin-config.h.in\n+src/config/stamp-h1\n+src/obj\n+share/setup.nsi\n+share/qt/Info.plist\n+\n+src/univalue/gen\n+\n+src/qt/*.moc\n+src/qt/moc_*.cpp\n+src/qt/forms/ui_*.h\n+\n+src/qt/test/moc*.cpp\n+\n+src/qt/bitcoin-qt.config\n+src/qt/bitcoin-qt.creator\n+src/qt/bitcoin-qt.creator.user\n+src/qt/bitcoin-qt.files\n+src/qt/bitcoin-qt.includes\n+\n+.deps\n+.dirstamp\n+.libs\n+.*.swp\n+*.*~*\n+*.bak\n+*.rej\n+*.orig\n+*.pyc\n+*.o\n+*.o-*\n+*.a\n+*.pb.cc\n+*.pb.h\n+*.dat\n+\n+*.log\n+*.trs\n+*.dmg\n+\n+*.json.h\n+*.raw.h\n+\n+# Only ignore unexpected patches\n+*.patch\n+!depends/patches/**/*.patch\n+\n+#libtool object files\n+*.lo\n+*.la\n+\n+# Compilation and Qt preprocessor part\n+*.qm\n+Makefile\n+!depends/Makefile\n+src/qt/bitcoin-qt\n+Bitcoin-Qt.app\n+background.tiff*\n+\n+# Qt Creator\n+Makefile.am.user\n+\n+# Unit-tests\n+Makefile.test\n+bitcoin-qt_test\n+\n+# Resources cpp\n+qrc_*.cpp\n+\n+# Mac specific\n+.DS_Store\n+build\n+\n+# Previous releases\n+releases\n+\n+#lcov\n+*.gcno\n+*.gcda\n+/*.info\n+test_bitcoin.coverage/\n+total.coverage/\n+fuzz.coverage/\n+coverage_percent.txt\n+/cov_tool_wrapper.sh\n+qa-assets/\n+\n+#build tests\n+linux-coverage-build\n+linux-build\n+win32-build\n+test/config.ini\n+test/cache/*\n+test/.mypy_cache/\n+\n+!src/leveldb*/Makefile\n+\n+/doc/doxygen/\n+\n+libbitcoinconsensus.pc\n+contrib/devtools/split-debug.sh\n+\n+# Output from running db4 installation\n+db4/\n+\n+# clang-check\n+*.plist\n+\n+osx_volname\n+dist/\n+*.background.tiff"
      },
      {
        "sha": "c49282585a030b902316d2b71a73b15b5840aaa2",
        "filename": ".python-version",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.python-version",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.python-version",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.python-version?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1 @@\n+3.5.6"
      },
      {
        "sha": "69d8c6aee417d6fd300990e3c34ae719f16406a2",
        "filename": ".style.yapf",
        "status": "added",
        "additions": 261,
        "deletions": 0,
        "changes": 261,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.style.yapf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.style.yapf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.style.yapf?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,261 @@\n+[style]\n+# Align closing bracket with visual indentation.\n+align_closing_bracket_with_visual_indent=True\n+\n+# Allow dictionary keys to exist on multiple lines. For example:\n+#\n+#   x = {\n+#       ('this is the first element of a tuple',\n+#        'this is the second element of a tuple'):\n+#            value,\n+#   }\n+allow_multiline_dictionary_keys=False\n+\n+# Allow lambdas to be formatted on more than one line.\n+allow_multiline_lambdas=False\n+\n+# Allow splits before the dictionary value.\n+allow_split_before_dict_value=True\n+\n+# Number of blank lines surrounding top-level function and class\n+# definitions.\n+blank_lines_around_top_level_definition=2\n+\n+# Insert a blank line before a class-level docstring.\n+blank_line_before_class_docstring=False\n+\n+# Insert a blank line before a module docstring.\n+blank_line_before_module_docstring=False\n+\n+# Insert a blank line before a 'def' or 'class' immediately nested\n+# within another 'def' or 'class'. For example:\n+#\n+#   class Foo:\n+#                      # <------ this blank line\n+#     def method():\n+#       ...\n+blank_line_before_nested_class_or_def=False\n+\n+# Do not split consecutive brackets. Only relevant when\n+# dedent_closing_brackets is set. For example:\n+#\n+#    call_func_that_takes_a_dict(\n+#        {\n+#            'key1': 'value1',\n+#            'key2': 'value2',\n+#        }\n+#    )\n+#\n+# would reformat to:\n+#\n+#    call_func_that_takes_a_dict({\n+#        'key1': 'value1',\n+#        'key2': 'value2',\n+#    })\n+coalesce_brackets=False\n+\n+# The column limit.\n+column_limit=160\n+\n+# The style for continuation alignment. Possible values are:\n+#\n+# - SPACE: Use spaces for continuation alignment. This is default behavior.\n+# - FIXED: Use fixed number (CONTINUATION_INDENT_WIDTH) of columns\n+#   (ie: CONTINUATION_INDENT_WIDTH/INDENT_WIDTH tabs) for continuation\n+#   alignment.\n+# - LESS: Slightly left if cannot vertically align continuation lines with\n+#   indent characters.\n+# - VALIGN-RIGHT: Vertically align continuation lines with indent\n+#   characters. Slightly right (one more indent character) if cannot\n+#   vertically align continuation lines with indent characters.\n+#\n+# For options FIXED, and VALIGN-RIGHT are only available when USE_TABS is\n+# enabled.\n+continuation_align_style=SPACE\n+\n+# Indent width used for line continuations.\n+continuation_indent_width=4\n+\n+# Put closing brackets on a separate line, dedented, if the bracketed\n+# expression can't fit in a single line. Applies to all kinds of brackets,\n+# including function definitions and calls. For example:\n+#\n+#   config = {\n+#       'key1': 'value1',\n+#       'key2': 'value2',\n+#   }        # <--- this bracket is dedented and on a separate line\n+#\n+#   time_series = self.remote_client.query_entity_counters(\n+#       entity='dev3246.region1',\n+#       key='dns.query_latency_tcp',\n+#       transform=Transformation.AVERAGE(window=timedelta(seconds=60)),\n+#       start_ts=now()-timedelta(days=3),\n+#       end_ts=now(),\n+#   )        # <--- this bracket is dedented and on a separate line\n+dedent_closing_brackets=False\n+\n+# Disable the heuristic which places each list element on a separate line\n+# if the list is comma-terminated.\n+disable_ending_comma_heuristic=False\n+\n+# Place each dictionary entry onto its own line.\n+each_dict_entry_on_separate_line=True\n+\n+# The regex for an i18n comment. The presence of this comment stops\n+# reformatting of that line, because the comments are required to be\n+# next to the string they translate.\n+i18n_comment=\n+\n+# The i18n function call names. The presence of this function stops\n+# reformattting on that line, because the string it has cannot be moved\n+# away from the i18n comment.\n+i18n_function_call=\n+\n+# Indent the dictionary value if it cannot fit on the same line as the\n+# dictionary key. For example:\n+#\n+#   config = {\n+#       'key1':\n+#           'value1',\n+#       'key2': value1 +\n+#               value2,\n+#   }\n+indent_dictionary_value=False\n+\n+# The number of columns to use for indentation.\n+indent_width=4\n+\n+# Join short lines into one line. E.g., single line 'if' statements.\n+join_multiple_lines=True\n+\n+# Do not include spaces around selected binary operators. For example:\n+#\n+#   1 + 2 * 3 - 4 / 5\n+#\n+# will be formatted as follows when configured with \"*,/\":\n+#\n+#   1 + 2*3 - 4/5\n+#\n+no_spaces_around_selected_binary_operators=\n+\n+# Use spaces around default or named assigns.\n+spaces_around_default_or_named_assign=False\n+\n+# Use spaces around the power operator.\n+spaces_around_power_operator=False\n+\n+# The number of spaces required before a trailing comment.\n+spaces_before_comment=2\n+\n+# Insert a space between the ending comma and closing bracket of a list,\n+# etc.\n+space_between_ending_comma_and_closing_bracket=True\n+\n+# Split before arguments\n+split_all_comma_separated_values=False\n+\n+# Split before arguments if the argument list is terminated by a\n+# comma.\n+split_arguments_when_comma_terminated=False\n+\n+# Set to True to prefer splitting before '&', '|' or '^' rather than\n+# after.\n+split_before_bitwise_operator=True\n+\n+# Split before the closing bracket if a list or dict literal doesn't fit on\n+# a single line.\n+split_before_closing_bracket=True\n+\n+# Split before a dictionary or set generator (comp_for). For example, note\n+# the split before the 'for':\n+#\n+#   foo = {\n+#       variable: 'Hello world, have a nice day!'\n+#       for variable in bar if variable != 42\n+#   }\n+split_before_dict_set_generator=True\n+\n+# Split before the '.' if we need to split a longer expression:\n+#\n+#   foo = ('This is a really long string: {}, {}, {}, {}'.format(a, b, c, d))\n+#\n+# would reformat to something like:\n+#\n+#   foo = ('This is a really long string: {}, {}, {}, {}'\n+#          .format(a, b, c, d))\n+split_before_dot=False\n+\n+# Split after the opening paren which surrounds an expression if it doesn't\n+# fit on a single line.\n+split_before_expression_after_opening_paren=False\n+\n+# If an argument / parameter list is going to be split, then split before\n+# the first argument.\n+split_before_first_argument=False\n+\n+# Set to True to prefer splitting before 'and' or 'or' rather than\n+# after.\n+split_before_logical_operator=True\n+\n+# Split named assignments onto individual lines.\n+split_before_named_assigns=True\n+\n+# Set to True to split list comprehensions and generators that have\n+# non-trivial expressions and multiple clauses before each of these\n+# clauses. For example:\n+#\n+#   result = [\n+#       a_long_var + 100 for a_long_var in xrange(1000)\n+#       if a_long_var % 10]\n+#\n+# would reformat to something like:\n+#\n+#   result = [\n+#       a_long_var + 100\n+#       for a_long_var in xrange(1000)\n+#       if a_long_var % 10]\n+split_complex_comprehension=False\n+\n+# The penalty for splitting right after the opening bracket.\n+split_penalty_after_opening_bracket=30\n+\n+# The penalty for splitting the line after a unary operator.\n+split_penalty_after_unary_operator=10000\n+\n+# The penalty for splitting right before an if expression.\n+split_penalty_before_if_expr=0\n+\n+# The penalty of splitting the line around the '&', '|', and '^'\n+# operators.\n+split_penalty_bitwise_operator=300\n+\n+# The penalty for splitting a list comprehension or generator\n+# expression.\n+split_penalty_comprehension=80\n+\n+# The penalty for characters over the column limit.\n+split_penalty_excess_character=7000\n+\n+# The penalty incurred by adding a line split to the unwrapped line. The\n+# more line splits added the higher the penalty.\n+split_penalty_for_added_line_split=30\n+\n+# The penalty of splitting a list of \"import as\" names. For example:\n+#\n+#   from a_very_long_or_indented_module_name_yada_yad import (long_argument_1,\n+#                                                             long_argument_2,\n+#                                                             long_argument_3)\n+#\n+# would reformat to something like:\n+#\n+#   from a_very_long_or_indented_module_name_yada_yad import (\n+#       long_argument_1, long_argument_2, long_argument_3)\n+split_penalty_import_names=0\n+\n+# The penalty of splitting the line around the 'and' and 'or'\n+# operators.\n+split_penalty_logical_operator=300\n+\n+# Use the Tab character for indentation.\n+use_tabs=False\n+"
      },
      {
        "sha": "55b34ae422d2fb828a70a0b518061c06333a725a",
        "filename": ".travis.yml",
        "status": "added",
        "additions": 109,
        "deletions": 0,
        "changes": 109,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,109 @@\n+# Travis caches can be manually removed if necessary. This is one of the very\n+# few manual operations that is possible with Travis, and it can be done by a\n+# Bitcoin Core GitHub member via the Travis web interface [0].\n+#\n+# Travis CI uploads the cache after the script phase of the build [1].\n+# However, the build is terminated without saving the cache if it takes over\n+# 50 minutes [2]. Thus, if we spent too much time in early build stages, fail\n+# with an error and save the cache.\n+#\n+# [0] https://travis-ci.org/bitcoin/bitcoin/caches\n+# [1] https://docs.travis-ci.com/user/caching/#build-phases\n+# [2] https://docs.travis-ci.com/user/customizing-the-build#build-timeouts\n+\n+version: ~> 1.0\n+\n+dist: bionic\n+os: linux\n+language: minimal\n+arch: amd64\n+cache:\n+  directories:\n+    - $TRAVIS_BUILD_DIR/depends/built\n+    - $TRAVIS_BUILD_DIR/depends/sdk-sources\n+    - $TRAVIS_BUILD_DIR/ci/scratch/.ccache\n+    - $TRAVIS_BUILD_DIR/releases/$HOST\n+stages:\n+  - lint\n+  - test\n+env:\n+  global:\n+    - CI_RETRY_EXE=\"travis_retry\"\n+    - CACHE_ERR_MSG=\"Error! Initial build successful, but not enough time remains to run later build stages and tests. See https://docs.travis-ci.com/user/customizing-the-build#build-timeouts . Please manually re-run this job by using the travis restart button. The next run should not time out because the build cache has been saved.\"\n+before_install:\n+  - set -o errexit; source ./ci/test/00_setup_env.sh\n+  - set -o errexit; source ./ci/test/03_before_install.sh\n+install:\n+  - set -o errexit; source ./ci/test/04_install.sh\n+before_script:\n+  # Temporary workaround for https://github.com/bitcoin/bitcoin/issues/16368\n+  - for i in {1..4}; do echo \"$(sleep 500)\" ; done &\n+  - set -o errexit; source ./ci/test/05_before_script.sh &> \"/dev/null\"\n+script:\n+  - export CONTINUE=1\n+  - if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long\n+  - if [ $TRAVIS_REPO_SLUG = \"bitcoin/bitcoin\" ]; then export CONTINUE=1; fi  # continue on repos with extended build time (90 minutes)\n+  - if [ $CONTINUE = \"1\" ]; then set -o errexit; source ./ci/test/06_script_a.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n+  - if [[ $SECONDS -gt 50*60-$EXPECTED_TESTS_DURATION_IN_SECONDS ]]; then export CONTINUE=0; fi\n+  - if [ $TRAVIS_REPO_SLUG = \"bitcoin/bitcoin\" ]; then export CONTINUE=1; fi  # continue on repos with extended build time (90 minutes)\n+  - if [ $CONTINUE = \"1\" ]; then set -o errexit; source ./ci/test/06_script_b.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n+after_script:\n+  - echo $TRAVIS_COMMIT_RANGE\n+jobs:\n+  include:\n+\n+    - stage: lint\n+      name: 'lint'\n+      env:\n+      cache: pip\n+      language: python\n+      python: '3.5' # Oldest supported version according to doc/dependencies.md\n+      install:\n+        - set -o errexit; source ./ci/lint/04_install.sh\n+      before_script:\n+        - set -o errexit; source ./ci/lint/05_before_script.sh\n+      script:\n+        - set -o errexit; source ./ci/lint/06_script.sh\n+\n+    - stage: test\n+      name: 'ARM  [GOAL: install]  [buster]  [unit tests, no functional tests]'\n+      arch: arm64  # Can disable QEMU_USER_CMD and run the tests natively without qemu\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_arm.sh\"\n+        QEMU_USER_CMD=\"\"\n+\n+    - stage: test\n+      name: 'Win64  [GOAL: deploy]  [unit tests, no gui, no boost::process, no functional tests]'\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_win64.sh\"\n+\n+    - stage: test\n+      name: '32-bit + dash  [GOAL: install]  [CentOS 7]  [gui]'\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_i686_centos.sh\"\n+\n+    - stage: test\n+      name: 'x86_64 Linux  [GOAL: install]  [xenial]  [no wallet]'\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_native_nowallet.sh\"\n+\n+    - stage: test\n+      name: 'macOS 10.14 native [GOAL: install] [GUI] [no depends]'\n+      os: osx\n+      # Use the most recent version:\n+      # Xcode 11.3.1, macOS 10.14, SDK 10.15\n+      # https://docs.travis-ci.com/user/reference/osx/#macos-version\n+      osx_image: xcode11.3\n+      addons:\n+        homebrew:\n+          packages:\n+          - berkeley-db4\n+          - miniupnpc\n+          - qrencode\n+          - sqlite\n+          - ccache\n+          - zeromq\n+      env: >-\n+        DANGER_RUN_CI_ON_HOST=true\n+        CI_USE_APT_INSTALL=no\n+        FILE_ENV=\"./ci/test/00_setup_env_mac_host.sh\""
      },
      {
        "sha": "86b517a6120ccf7036aef3e1bea936612cc5b3b0",
        "filename": ".tx/config",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,7 @@\n+[main]\n+host = https://www.transifex.com\n+\n+[bitcoin.qt-translation-021x]\n+file_filter = src/qt/locale/bitcoin_<lang>.ts\n+source_file = src/qt/locale/bitcoin_en.ts\n+source_lang = en"
      },
      {
        "sha": "24a80fb35d28a2427628d8dc35ff5ec0ac4fb4b1",
        "filename": "CODEOWNERS",
        "status": "added",
        "additions": 136,
        "deletions": 0,
        "changes": 136,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/CODEOWNERS",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/CODEOWNERS",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CODEOWNERS?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,136 @@\n+# ==============================================================================\n+#                          Bitcoin Core CODEOWNERS\n+# ==============================================================================\n+\n+# Configuration of code ownership and review approvals for the bitcoin/bitcoin\n+# repo.\n+\n+# Order is important; the last matching pattern takes the most precedence.\n+# More info on how this file works can be found at:\n+# https://help.github.com/articles/about-codeowners/\n+\n+# This file is called CODEOWNERS because it is a magic file for GitHub to\n+# automatically suggest reviewers. In this project's case, the names below\n+# should be thought of as code reviewers rather than owners. Regular\n+# contributors are free to add their names to specific directories or files\n+# provided that they are willing to provide a review when automatically\n+# assigned.\n+\n+# Absence from this list should not be interpreted as a discouragement to\n+# review a pull request. Peer review is always welcome and is a critical\n+# component of the progress of the codebase. Information on peer review\n+# guidelines can be found in the CONTRIBUTING.md doc.\n+\n+\n+# Maintainers\n+#   @laanwj\n+#   @sipa\n+#   @fanquake\n+#   @jonasschnelli\n+#   @marcofalke\n+#   @meshcollider\n+\n+# Docs\n+/doc/*[a-zA-Z-].md                          @harding\n+/doc/Doxyfile.in                            @fanquake\n+/doc/REST-interface.md                      @jonasschnelli\n+/doc/benchmarking.md                        @ariard\n+/doc/bitcoin-conf.md                        @hebasto\n+/doc/build-freebsd.md                       @fanquake\n+/doc/build-netbsd.md                        @fanquake\n+/doc/build-openbsd.md                       @laanwj\n+/doc/build-osx.md                           @fanquake\n+/doc/build-unix.md                          @laanwj\n+/doc/build-windows.md                       @sipsorcery\n+/doc/dependencies.md                        @fanquake\n+/doc/developer-notes.md                     @laanwj\n+/doc/files.md                               @hebasto\n+/doc/gitian-building.md                     @laanwj\n+/doc/reduce-memory.md                       @fanquake\n+/doc/reduce-traffic.md                      @jonasschnelli\n+/doc/release-process.md                     @laanwj\n+/doc/translation_strings_policy.md          @laanwj\n+\n+# Build aux\n+/build-aux/m4/bitcoin_qt.m4                 @hebasto\n+\n+# MSVC build system\n+/build_msvc/                                @sipsorcery\n+\n+# Settings\n+/src/util/settings.*                        @ryanofsky\n+\n+# Fuzzing\n+/src/test/fuzz/                             @practicalswift\n+/doc/fuzzing.md                             @practicalswift\n+\n+# Test framework\n+/test/functional/mempool_updatefromblock.py @hebasto\n+/test/functional/feature_asmap.py           @jonatack\n+/test/functional/interface_bitcoin_cli.py   @jonatack\n+/test/functional/tool_wallet.py             @jonatack\n+\n+# Translations\n+/src/util/translation.h                     @hebasto\n+\n+# Dev Tools\n+/contrib/devtools/security-check.py         @fanquake\n+/contrib/devtools/test-security-check.py    @fanquake\n+/contrib/devtools/symbol-check.py           @fanquake\n+\n+# Gitian/Guix\n+/contrib/gitian-build.py                    @hebasto\n+/contrib/guix/                              @dongcarl\n+\n+# Compatibility\n+/src/compat/glibc_*                         @fanquake\n+\n+# GUI\n+/src/qt/forms/                              @hebasto\n+\n+# Wallet\n+/src/wallet/                                @achow101\n+\n+# CLI\n+/src/bitcoin-cli.cpp                        @jonatack\n+\n+# Coinstats\n+/src/node/coinstats.*                       @fjahr\n+\n+# Index\n+/src/index/                                 @fjahr\n+\n+# Descriptors\n+*descriptor*                                @achow101 @sipa\n+\n+# Interfaces\n+/src/interfaces/                            @ryanofsky\n+\n+# DB\n+/src/txdb.*                                 @jamesob\n+/src/dbwrapper.*                            @jamesob\n+\n+# Scripts/Linter\n+*.sh                                        @practicalswift\n+/test/lint/                                 @practicalswift\n+/test/lint/lint-shell.sh                    @hebasto\n+\n+# Bech32\n+/src/bech32.*                               @sipa\n+/src/bench/bech32.*                         @sipa\n+\n+# PSBT\n+/src/psbt*                                  @achow101\n+/src/node/psbt*                             @achow101\n+/doc/psbt.md                                @achow101\n+\n+# P2P\n+/src/net_processing.*                       @sipa\n+/src/protocol.*                             @sipa\n+\n+# Consensus\n+/src/coins.*                                @sipa @jamesob\n+/src/script/script.*                        @sipa\n+/src/script/interpreter.*                   @sipa\n+/src/validation.*                           @sipa\n+/src/consensus/                             @sipa"
      },
      {
        "sha": "2e114743822562f45432d1f9f634eec70e49022a",
        "filename": "CONTRIBUTING.md",
        "status": "added",
        "additions": 436,
        "deletions": 0,
        "changes": 436,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,436 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is\n+welcome to contribute towards development in the form of peer review, testing\n+and patches. This document explains the practical process and guidelines for\n+contributing.\n+\n+First, in terms of structure, there is no particular concept of \"Bitcoin Core\n+developers\" in the sense of privileged people. Open source often naturally\n+revolves around a meritocracy where contributors earn trust from the developer\n+community over time. Nevertheless, some hierarchy is necessary for practical\n+purposes. As such, there are repository \"maintainers\" who are responsible for\n+merging pull requests, as well as a \"lead maintainer\" who is responsible for the\n+release cycle as well as overall merging, moderation and appointment of\n+maintainers.\n+\n+Getting Started\n+---------------\n+\n+New contributors are very welcome and needed.\n+\n+Reviewing and testing is highly valued and the most effective way you can contribute\n+as a new contributor. It also will teach you much more about the code and\n+process than opening pull requests. Please refer to the [peer review](#peer-review)\n+section below.\n+\n+Before you start contributing, familiarize yourself with the Bitcoin Core build\n+system and tests. Refer to the documentation in the repository on how to build\n+Bitcoin Core and how to run the unit tests, functional tests, and fuzz tests.\n+\n+There are many open issues of varying difficulty waiting to be fixed.\n+If you're looking for somewhere to start contributing, check out the\n+[good first issue](https://github.com/bitcoin/bitcoin/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22)\n+list or changes that are\n+[up for grabs](https://github.com/bitcoin/bitcoin/issues?utf8=%E2%9C%93&q=label%3A%22Up+for+grabs%22).\n+Some of them might no longer be applicable. So if you are interested, but\n+unsure, you might want to leave a comment on the issue first.\n+\n+You may also participate in the weekly\n+[Bitcoin Core PR Review Club](https://bitcoincore.reviews/) meeting.\n+\n+### Good First Issue Label\n+\n+The purpose of the `good first issue` label is to highlight which issues are\n+suitable for a new contributor without a deep understanding of the codebase.\n+\n+However, good first issues can be solved by anyone. If they remain unsolved\n+for a longer time, a frequent contributor might address them.\n+\n+You do not need to request permission to start working on an issue. However,\n+you are encouraged to leave a comment if you are planning to work on it. This\n+will help other contributors monitor which issues are actively being addressed\n+and is also an effective way to request assistance if and when you need it.\n+\n+Communication Channels\n+----------------------\n+\n+Most communication about Bitcoin Core development happens on IRC, in the\n+`#bitcoin-core-dev` channel on Freenode. The easiest way to participate on IRC is\n+with the web client, [webchat.freenode.net](https://webchat.freenode.net/). Chat\n+history logs can be found\n+on [http://www.erisian.com.au/bitcoin-core-dev/](http://www.erisian.com.au/bitcoin-core-dev/)\n+and [http://gnusha.org/bitcoin-core-dev/](http://gnusha.org/bitcoin-core-dev/).\n+\n+Discussion about codebase improvements happens in GitHub issues and pull\n+requests.\n+\n+The developer\n+[mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n+should be used to discuss complicated or controversial consensus or P2P protocol changes before working on\n+a patch set.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the \"contributor workflow\" where everyone\n+without exception contributes patch proposals using \"pull requests\" (PRs). This\n+facilitates social contribution, easy testing and peer review.\n+\n+To contribute a patch, the workflow is as follows:\n+\n+  1. Fork repository ([only for the first time](https://help.github.com/en/articles/fork-a-repo))\n+  1. Create topic branch\n+  1. Commit patches\n+\n+For GUI-related issues or pull requests, the https://github.com/bitcoin-core/gui repository should be used.\n+For all other issues and pull requests, the https://github.com/bitcoin/bitcoin node repository should be used.\n+\n+The master branch for all monotree repositories is identical.\n+\n+As a rule of thumb, everything that only modifies `src/qt` is a GUI-only pull\n+request. However:\n+\n+* For global refactoring or other transversal changes the node repository\n+  should be used.\n+* For GUI-related build system changes, the node repository should be used\n+  because the change needs review by the build systems reviewers.\n+* Changes in `src/interfaces` need to go to the node repository because they\n+  might affect other components like the wallet.\n+\n+For large GUI changes that include build system and interface changes, it is\n+recommended to first open a pull request against the GUI repository. When there\n+is agreement to proceed with the changes, a pull request with the build system\n+and interfaces changes can be submitted to the node repository.\n+\n+The project coding conventions in the [developer notes](doc/developer-notes.md)\n+must be followed.\n+\n+### Committing Patches\n+\n+In general, [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention)\n+and diffs should be easy to read. For this reason, do not mix any formatting\n+fixes or code moves with actual code changes.\n+\n+Make sure each individual commit is hygienic: that it builds successfully on its\n+own without warnings, errors, regressions, or test failures.\n+\n+Commit messages should be verbose by default consisting of a short subject line\n+(50 chars max), a blank line and detailed explanatory text as separate\n+paragraph(s), unless the title alone is self-explanatory (like \"Corrected typo\n+in init.cpp\") in which case a single title line is sufficient. Commit messages should be\n+helpful to people reading your code in the future, so explain the reasoning for\n+your decisions. Further explanation [here](https://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference. For\n+example: `refs #1234` or `fixes #4321`. Using the `fixes` or `closes` keywords\n+will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Commit messages should never contain any `@` mentions (usernames prefixed with \"@\").\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information\n+about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+### Creating the Pull Request\n+\n+The title of the pull request should be prefixed by the component or area that\n+the pull request affects. Valid areas as:\n+\n+  - `consensus` for changes to consensus critical code\n+  - `doc` for changes to the documentation\n+  - `qt` or `gui` for changes to bitcoin-qt\n+  - `log` for changes to log messages\n+  - `mining` for changes to the mining code\n+  - `net` or `p2p` for changes to the peer-to-peer network code\n+  - `refactor` for structural changes that do not change behavior\n+  - `rpc`, `rest` or `zmq` for changes to the RPC, REST or ZMQ APIs\n+  - `script` for changes to the scripts and tools\n+  - `test`, `qa` or `ci` for changes to the unit tests, QA tests or CI code\n+  - `util` or `lib` for changes to the utils or libraries\n+  - `wallet` for changes to the wallet code\n+  - `build` for changes to the GNU Autotools or reproducible builds\n+\n+Examples:\n+\n+    consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    net: Automatically create onion service, listen on Tor\n+    qt: Add feed bump button\n+    log: Fix typo in log message\n+\n+The body of the pull request should contain sufficient description of *what* the\n+patch does, and even more importantly, *why*, with justification and reasoning.\n+You should include references to any discussions (for example, other issues or\n+mailing list discussions).\n+\n+The description for a new pull request should not contain any `@` mentions. The\n+PR description will be included in the commit message when the PR is merged and\n+any users mentioned in the description will be annoyingly notified each time a\n+fork of Bitcoin Core copies the merge. Instead, make any username mentions in a\n+subsequent comment to the PR.\n+\n+### Translation changes\n+\n+Note that translations should not be submitted as pull requests. Please see\n+[Translation Process](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md)\n+for more information on helping with translations.\n+\n+### Work in Progress Changes and Requests for Comments\n+\n+If a pull request is not to be considered for merging (yet), please\n+prefix the title with [WIP] or use [Tasks Lists](https://help.github.com/articles/basic-writing-and-formatting-syntax/#task-lists)\n+in the body of the pull request to indicate tasks are pending.\n+\n+### Address Feedback\n+\n+At this stage, one should expect comments and review from other contributors. You\n+can add more commits to your pull request by committing them locally and pushing\n+to your fork until you have satisfied all feedback.\n+\n+Note: Code review is a burdensome but important part of the development process, and as such, certain types of pull requests are rejected. In general, if the **improvements** do not warrant the **review effort** required, the PR has a high chance of being rejected. It is up to the PR author to convince the reviewers that the changes warrant the review effort, and if reviewers are \"Concept NACK'ing\" the PR, the author may need to present arguments and/or do research backing their suggested changes.\n+\n+### Squashing Commits\n+\n+If your pull request contains fixup commits (commits that change the same line of code repeatedly) or too fine-grained\n+commits, you may be asked to [squash](https://git-scm.com/docs/git-rebase#_interactive_mode) your commits\n+before it will be merged. The basic squashing workflow is shown below.\n+\n+    git checkout your_branch_name\n+    git rebase -i HEAD~n\n+    # n is normally the number of commits in the pull request.\n+    # Set commits (except the one in the first line) from 'pick' to 'squash', save and quit.\n+    # On the next screen, edit/refine commit messages.\n+    # Save and quit.\n+    git push -f # (force push to GitHub)\n+\n+Please update the resulting commit message, if needed. It should read as a\n+coherent message. In most cases, this means not just listing the interim\n+commits.\n+\n+If you have problems with squashing or other git workflows, you can enable\n+\"Allow edits from maintainers\" in the right-hand sidebar of the GitHub web\n+interface and ask for help in the pull request.\n+\n+Please refrain from creating several pull requests for the same change.\n+Use the pull request that is already open (or was created earlier) to amend\n+changes. This preserves the discussion and review that happened earlier for\n+the respective change set.\n+\n+The length of time required for peer review is unpredictable and will vary from\n+pull request to pull request.\n+\n+### Rebasing Changes\n+\n+When a pull request conflicts with the target branch, you may be asked to rebase it on top of the current target branch.\n+The `git rebase` command will take care of rebuilding your commits on top of the new base.\n+\n+This project aims to have a clean git history, where code changes are only made in non-merge commits. This simplifies\n+auditability because merge commits can be assumed to not contain arbitrary code changes. Merge commits should be signed,\n+and the resulting git tree hash must be deterministic and reproducible. The script in\n+[/contrib/verify-commits](/contrib/verify-commits) checks that.\n+\n+After a rebase, reviewers are encouraged to sign off on the force push. This should be relatively straightforward with\n+the `git range-diff` tool explained in the [productivity\n+notes](/doc/productivity.md#diff-the-diffs-with-git-range-diff). To avoid needless review churn, maintainers will\n+generally merge pull requests that received the most review attention first.\n+\n+Pull Request Philosophy\n+-----------------------\n+\n+Patchsets should always be focused. For example, a pull request could add a\n+feature, fix a bug, or refactor code; but not a mixture. Please also avoid super\n+pull requests which attempt to do too much, are overly large, or overly complex\n+as this makes review difficult.\n+\n+\n+### Features\n+\n+When adding a new feature, thought must be given to the long term technical debt\n+and maintenance that feature may require after inclusion. Before proposing a new\n+feature that will require maintenance, please consider if you are willing to\n+maintain it (including bug fixing). If features get orphaned with no maintainer\n+in the future, they may be removed by the Repository Maintainer.\n+\n+\n+### Refactoring\n+\n+Refactoring is a necessary part of any software project's evolution. The\n+following guidelines cover refactoring pull requests for the project.\n+\n+There are three categories of refactoring: code-only moves, code style fixes, and\n+code refactoring. In general, refactoring pull requests should not mix these\n+three kinds of activities in order to make refactoring pull requests easy to\n+review and uncontroversial. In all cases, refactoring PRs must not change the\n+behaviour of code within the pull request (bugs must be preserved as is).\n+\n+Project maintainers aim for a quick turnaround on refactoring pull requests, so\n+where possible keep them short, uncomplex and easy to verify.\n+\n+Pull requests that refactor the code should not be made by new contributors. It\n+requires a certain level of experience to know where the code belongs to and to\n+understand the full ramification (including rebase effort of open pull requests).\n+\n+Trivial pull requests or pull requests that refactor the code with no clear\n+benefits may be immediately closed by the maintainers to reduce unnecessary\n+workload on reviewing.\n+\n+\n+\"Decision Making\" Process\n+-------------------------\n+\n+The following applies to code changes to the Bitcoin Core project (and related\n+projects such as libsecp256k1), and is not to be confused with overall Bitcoin\n+Network Protocol consensus changes.\n+\n+Whether a pull request is merged into Bitcoin Core rests with the project merge\n+maintainers and ultimately the project lead.\n+\n+Maintainers will take into consideration if a patch is in line with the general\n+principles of the project; meets the minimum standards for inclusion; and will\n+judge the general consensus of contributors.\n+\n+In general, all pull requests must:\n+\n+  - Have a clear use case, fix a demonstrable bug or serve the greater good of\n+    the project (for example refactoring for modularisation);\n+  - Be well peer-reviewed;\n+  - Have unit tests, functional tests, and fuzz tests, where appropriate;\n+  - Follow code style guidelines ([C++](doc/developer-notes.md), [functional tests](test/functional/README.md));\n+  - Not break the existing test suite;\n+  - Where bugs are fixed, where possible, there should be unit tests\n+    demonstrating the bug and also proving the fix. This helps prevent regression.\n+  - Change relevant comments and documentation when behaviour of code changes.\n+\n+Patches that change Bitcoin consensus rules are considerably more involved than\n+normal because they affect the entire ecosystem and so must be preceded by\n+extensive mailing list discussions and have a numbered BIP. While each case will\n+be different, one should be prepared to expend more time and effort than for\n+other kinds of patches because of increased peer review and consensus building\n+requirements.\n+\n+\n+### Peer Review\n+\n+Anyone may participate in peer review which is expressed by comments in the pull\n+request. Typically reviewers will review the code for obvious errors, as well as\n+test out the patch set and opine on the technical merits of the patch. Project\n+maintainers take into account the peer review when determining if there is\n+consensus to merge a pull request (remember that discussions may have been\n+spread out over GitHub, mailing list and IRC discussions).\n+\n+#### Conceptual Review\n+\n+A review can be a conceptual review, where the reviewer leaves a comment\n+ * `Concept (N)ACK`, meaning \"I do (not) agree with the general goal of this pull\n+   request\",\n+ * `Approach (N)ACK`, meaning `Concept ACK`, but \"I do (not) agree with the\n+   approach of this change\".\n+\n+A `NACK` needs to include a rationale why the change is not worthwhile.\n+NACKs without accompanying reasoning may be disregarded.\n+\n+#### Code Review\n+\n+After conceptual agreement on the change, code review can be provided. A review\n+begins with `ACK BRANCH_COMMIT`, where `BRANCH_COMMIT` is the top of the PR\n+branch, followed by a description of how the reviewer did the review. The\n+following language is used within pull request comments:\n+\n+  - \"I have tested the code\", involving change-specific manual testing in\n+    addition to running the unit, functional, or fuzz tests, and in case it is\n+    not obvious how the manual testing was done, it should be described;\n+  - \"I have not tested the code, but I have reviewed it and it looks\n+    OK, I agree it can be merged\";\n+  - A \"nit\" refers to a trivial, often non-blocking issue.\n+\n+Project maintainers reserve the right to weigh the opinions of peer reviewers\n+using common sense judgement and may also weigh based on merit. Reviewers that\n+have demonstrated a deeper commitment and understanding of the project over time\n+or who have clear domain expertise may naturally have more weight, as one would\n+expect in all walks of life.\n+\n+Where a patch set affects consensus-critical code, the bar will be much\n+higher in terms of discussion and peer review requirements, keeping in mind that\n+mistakes could be very costly to the wider community. This includes refactoring\n+of consensus-critical code.\n+\n+Where a patch set proposes to change the Bitcoin consensus, it must have been\n+discussed extensively on the mailing list and IRC, be accompanied by a widely\n+discussed BIP and have a generally widely perceived technical consensus of being\n+a worthwhile change based on the judgement of the maintainers.\n+\n+### Finding Reviewers\n+\n+As most reviewers are themselves developers with their own projects, the review\n+process can be quite lengthy, and some amount of patience is required. If you find\n+that you've been waiting for a pull request to be given attention for several\n+months, there may be a number of reasons for this, some of which you can do something\n+about:\n+\n+  - It may be because of a feature freeze due to an upcoming release. During this time,\n+    only bug fixes are taken into consideration. If your pull request is a new feature,\n+    it will not be prioritized until after the release. Wait for the release.\n+  - It may be because the changes you are suggesting do not appeal to people. Rather than\n+    nits and critique, which require effort and means they care enough to spend time on your\n+    contribution, thundering silence is a good sign of widespread (mild) dislike of a given change\n+    (because people don't assume *others* won't actually like the proposal). Don't take\n+    that personally, though! Instead, take another critical look at what you are suggesting\n+    and see if it: changes too much, is too broad, doesn't adhere to the\n+    [developer notes](doc/developer-notes.md), is dangerous or insecure, is messily written, etc.\n+    Identify and address any of the issues you find. Then ask e.g. on IRC if someone could give\n+    their opinion on the concept itself.\n+  - It may be because your code is too complex for all but a few people, and those people\n+    may not have realized your pull request even exists. A great way to find people who\n+    are qualified and care about the code you are touching is the\n+    [Git Blame feature](https://help.github.com/articles/tracing-changes-in-a-file/). Simply\n+    look up who last modified the code you are changing and see if you can find\n+    them and give them a nudge. Don't be incessant about the nudging, though.\n+  - Finally, if all else fails, ask on IRC or elsewhere for someone to give your pull request\n+    a look. If you think you've been waiting for an unreasonably long time (say,\n+    more than a month) for no particular reason (a few lines changed, etc.),\n+    this is totally fine. Try to return the favor when someone else is asking\n+    for feedback on their code, and the universe balances out.\n+  - Remember that the best thing you can do while waiting is give review to others!\n+\n+\n+Backporting\n+-----------\n+\n+Security and bug fixes can be backported from `master` to release\n+branches.\n+If the backport is non-trivial, it may be appropriate to open an\n+additional PR to backport the change, but only after the original PR\n+has been merged.\n+Otherwise, backports will be done in batches and\n+the maintainers will use the proper `Needs backport (...)` labels\n+when needed (the original author does not need to worry about it).\n+\n+A backport should contain the following metadata in the commit body:\n+\n+```\n+Github-Pull: #<PR number>\n+Rebased-From: <commit hash of the original commit>\n+```\n+\n+Have a look at [an example backport PR](\n+https://github.com/bitcoin/bitcoin/pull/16189).\n+\n+Also see the [backport.py script](\n+https://github.com/bitcoin-core/bitcoin-maintainer-tools#backport).\n+\n+Release Policy\n+--------------\n+\n+The project leader is the release manager for each Bitcoin Core release.\n+\n+Copyright\n+---------\n+\n+By contributing to this repository, you agree to license your work under the\n+MIT license unless specified otherwise in `contrib/debian/copyright` or at\n+the top of the file itself. Any work contributed where you are not the original\n+author must contain its license header with the original author(s) and source."
      },
      {
        "sha": "5ea3b90c531137d5feb363cdf28206cea091b314",
        "filename": "COPYING",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,27 @@\n+The MIT License (MIT)\n+\n+<<<<<<< HEAD\n+Copyright (c) 2009-2020 The Bitcoin Core developers\n+Copyright (c) 2009-2020 Bitcoin Developers\n+=======\n+Copyright (c) 2009-2017 The Satoshi Bitcoin Core developers\n+Copyright (c) 2009-2017 Satoshi Bitcoin Developers\n+>>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n+\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in\n+all copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+THE SOFTWARE."
      },
      {
        "sha": "520a47d96078dfa80cec83d03146c9349d6369c1",
        "filename": "INSTALL.md",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/INSTALL.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/INSTALL.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,5 @@\n+Building Bitcoin\n+================\n+\n+See doc/build-*.md for instructions on building the various\n+elements of the Bitcoin Core reference implementation of Bitcoin."
      },
      {
        "sha": "c8af4228f35c76aa18ce0b9eb9a90f4aa1cb1a72",
        "filename": "Makefile.am",
        "status": "added",
        "additions": 362,
        "deletions": 0,
        "changes": 362,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,362 @@\n+# Copyright (c) 2013-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Pattern rule to print variables, e.g. make print-top_srcdir\n+print-%:\n+\t@echo $* = $($*)\n+\n+ACLOCAL_AMFLAGS = -I build-aux/m4\n+SUBDIRS = src\n+if ENABLE_MAN\n+SUBDIRS += doc/man\n+endif\n+.PHONY: deploy FORCE\n+\n+export PYTHONPATH\n+\n+if BUILD_BITCOIN_LIBS\n+pkgconfigdir = $(libdir)/pkgconfig\n+pkgconfig_DATA = libbitcoinconsensus.pc\n+endif\n+\n+BITCOIND_BIN=$(top_builddir)/src/$(BITCOIN_DAEMON_NAME)$(EXEEXT)\n+BITCOIN_QT_BIN=$(top_builddir)/src/qt/$(BITCOIN_GUI_NAME)$(EXEEXT)\n+BITCOIN_CLI_BIN=$(top_builddir)/src/$(BITCOIN_CLI_NAME)$(EXEEXT)\n+BITCOIN_TX_BIN=$(top_builddir)/src/$(BITCOIN_TX_NAME)$(EXEEXT)\n+BITCOIN_WALLET_BIN=$(top_builddir)/src/$(BITCOIN_WALLET_TOOL_NAME)$(EXEEXT)\n+BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win64-setup$(EXEEXT)\n+\n+empty :=\n+space := $(empty) $(empty)\n+\n+OSX_APP=Bitcoin-Qt.app\n+OSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))\n+OSX_DMG = $(OSX_VOLNAME).dmg\n+OSX_BACKGROUND_SVG=background.svg\n+OSX_BACKGROUND_IMAGE=background.tiff\n+OSX_BACKGROUND_IMAGE_DPIS=36 72\n+OSX_DSSTORE_GEN=$(top_srcdir)/contrib/macdeploy/custom_dsstore.py\n+OSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus\n+OSX_FANCY_PLIST=$(top_srcdir)/contrib/macdeploy/fancy.plist\n+OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n+OSX_PLIST=$(top_builddir)/share/qt/Info.plist #not installed\n+OSX_QT_TRANSLATIONS = ar,bg,ca,cs,da,de,es,fa,fi,fr,gd,gl,he,hu,it,ja,ko,lt,lv,pl,pt,ru,sk,sl,sv,uk,zh_CN,zh_TW\n+\n+DIST_CONTRIB = \\\n+\t       $(top_srcdir)/contrib/linearize/linearize-data.py \\\n+\t       $(top_srcdir)/contrib/linearize/linearize-hashes.py\n+\n+DIST_SHARE = \\\n+  $(top_srcdir)/share/genbuild.sh \\\n+  $(top_srcdir)/share/rpcauth\n+\n+BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n+           $(top_srcdir)/contrib/devtools/security-check.py\n+\n+WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n+  $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n+  $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n+  $(top_srcdir)/doc/README_windows.txt\n+\n+OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n+  $(top_srcdir)/contrib/macdeploy/$(OSX_BACKGROUND_SVG) \\\n+  $(OSX_DSSTORE_GEN) \\\n+  $(top_srcdir)/contrib/macdeploy/detached-sig-apply.sh \\\n+  $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n+\n+COVERAGE_INFO = $(COV_TOOL_WRAPPER) baseline.info \\\n+  test_bitcoin_filtered.info total_coverage.info \\\n+  baseline_filtered.info functional_test.info functional_test_filtered.info \\\n+  test_bitcoin_coverage.info test_bitcoin.info fuzz.info fuzz_filtered.info fuzz_coverage.info\n+\n+dist-hook:\n+\t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n+\n+$(BITCOIN_WIN_INSTALLER): all-recursive\n+\t$(MKDIR_P) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_TX_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_WALLET_BIN) $(top_builddir)/release\n+\t@test -f $(MAKENSIS) && echo 'OutFile \"$@\"' | cat $(top_builddir)/share/setup.nsi - | $(MAKENSIS) -V2 - || \\\n+\t  echo error: could not build $@\n+\t@echo built $@\n+\n+$(OSX_APP)/Contents/PkgInfo:\n+\t$(MKDIR_P) $(@D)\n+\t@echo \"APPL????\" > $@\n+\n+$(OSX_APP)/Contents/Resources/empty.lproj:\n+\t$(MKDIR_P) $(@D)\n+\t@touch $@\n+\n+$(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n+\t$(MKDIR_P) $(@D)\n+\t$(INSTALL_DATA) $< $@\n+\n+$(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n+\t$(MKDIR_P) $(@D)\n+\t$(INSTALL_DATA) $< $@\n+\n+$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: all-recursive\n+\t$(MKDIR_P) $(@D)\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $(BITCOIN_QT_BIN) $@\n+\n+$(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n+\t$(MKDIR_P) $(@D)\n+\techo '{\tCFBundleDisplayName = \"$(PACKAGE_NAME)\"; CFBundleName = \"$(PACKAGE_NAME)\"; }' > $@\n+\n+OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n+  $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n+  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n+\n+osx_volname:\n+\techo $(OSX_VOLNAME) >$@\n+\n+if BUILD_DARWIN\n+$(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING) $(OSX_BACKGROUND_IMAGE)\n+\t$(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2 -volname $(OSX_VOLNAME)\n+\n+$(OSX_BACKGROUND_IMAGE).png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n+\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 36 -p 36 -o $@\n+$(OSX_BACKGROUND_IMAGE)@2x.png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n+\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 72 -p 72 -o $@\n+$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE).png $(OSX_BACKGROUND_IMAGE)@2x.png\n+\ttiffutil -cathidpicheck $^ -out $@\n+\n+deploydir: $(OSX_DMG)\n+else\n+APP_DIST_DIR=$(top_builddir)/dist\n+APP_DIST_EXTRAS=$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE) $(APP_DIST_DIR)/.DS_Store $(APP_DIST_DIR)/Applications\n+\n+$(APP_DIST_DIR)/Applications:\n+\t@rm -f $@\n+\t@cd $(@D); $(LN_S) /Applications $(@F)\n+\n+$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n+\n+$(OSX_DMG): $(APP_DIST_EXTRAS)\n+\t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n+\n+dpi%.$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n+\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d $* -p $* | $(IMAGEMAGICK_CONVERT) - $@\n+OSX_BACKGROUND_IMAGE_DPIFILES := $(foreach dpi,$(OSX_BACKGROUND_IMAGE_DPIS),dpi$(dpi).$(OSX_BACKGROUND_IMAGE))\n+$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIFILES)\n+\t$(MKDIR_P) $(@D)\n+\t$(TIFFCP) -c none $(OSX_BACKGROUND_IMAGE_DPIFILES) $@\n+\n+$(APP_DIST_DIR)/.DS_Store: $(OSX_DSSTORE_GEN)\n+\t$(PYTHON) $< \"$@\" \"$(OSX_VOLNAME)\"\n+\n+$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n+\tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n+\n+deploydir: $(APP_DIST_EXTRAS)\n+endif\n+\n+if TARGET_DARWIN\n+appbundle: $(OSX_APP_BUILT)\n+deploy: $(OSX_DMG)\n+endif\n+if TARGET_WINDOWS\n+deploy: $(BITCOIN_WIN_INSTALLER)\n+endif\n+\n+$(BITCOIN_QT_BIN): FORCE\n+\t$(MAKE) -C src qt/$(@F)\n+\n+$(BITCOIND_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n+$(BITCOIN_CLI_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n+$(BITCOIN_TX_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n+$(BITCOIN_WALLET_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n+if USE_LCOV\n+LCOV_FILTER_PATTERN = \\\n+\t-p \"/usr/local/\" \\\n+\t-p \"/usr/include/\" \\\n+\t-p \"/usr/lib/\" \\\n+\t-p \"/usr/lib64/\" \\\n+\t-p \"src/leveldb/\" \\\n+\t-p \"src/crc32c/\" \\\n+\t-p \"src/bench/\" \\\n+\t-p \"src/univalue\" \\\n+\t-p \"src/crypto/ctaes\" \\\n+\t-p \"src/secp256k1\" \\\n+\t-p \"depends\"\n+\n+DIR_FUZZ_SEED_CORPUS ?= qa-assets/fuzz_seed_corpus\n+\n+$(COV_TOOL_WRAPPER):\n+\t@echo 'exec $(COV_TOOL) \"$$@\"' > $(COV_TOOL_WRAPPER)\n+\t@chmod +x $(COV_TOOL_WRAPPER)\n+\n+baseline.info: $(COV_TOOL_WRAPPER)\n+\t$(LCOV) -c -i -d $(abs_builddir)/src -o $@\n+\n+baseline_filtered.info: baseline.info\n+\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n+\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n+\n+fuzz.info: baseline_filtered.info\n+\t@TIMEOUT=15 test/fuzz/test_runner.py $(DIR_FUZZ_SEED_CORPUS) -l DEBUG\n+\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src --t fuzz-tests -o $@\n+\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n+\n+fuzz_filtered.info: fuzz.info\n+\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n+\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n+\n+test_bitcoin.info: baseline_filtered.info\n+\t$(MAKE) -C src/ check\n+\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src -t test_bitcoin -o $@\n+\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n+\n+test_bitcoin_filtered.info: test_bitcoin.info\n+\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n+\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n+\n+functional_test.info: test_bitcoin_filtered.info\n+\t@TIMEOUT=15 test/functional/test_runner.py $(EXTENDED_FUNCTIONAL_TESTS)\n+\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src --t functional-tests -o $@\n+\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n+\n+functional_test_filtered.info: functional_test.info\n+\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n+\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n+\n+fuzz_coverage.info: fuzz_filtered.info\n+\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a fuzz_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+\n+test_bitcoin_coverage.info: baseline_filtered.info test_bitcoin_filtered.info\n+\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n+\n+total_coverage.info: test_bitcoin_filtered.info functional_test_filtered.info\n+\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -a functional_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+\n+fuzz.coverage/.dirstamp: fuzz_coverage.info\n+\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n+\t@touch $@\n+\n+test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n+\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n+\t@touch $@\n+\n+total.coverage/.dirstamp: total_coverage.info\n+\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n+\t@touch $@\n+\n+cov_fuzz: fuzz.coverage/.dirstamp\n+\n+cov: test_bitcoin.coverage/.dirstamp total.coverage/.dirstamp\n+\n+endif\n+\n+dist_noinst_SCRIPTS = autogen.sh\n+\n+EXTRA_DIST = $(DIST_SHARE) $(DIST_CONTRIB) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n+\n+EXTRA_DIST += \\\n+    test/functional \\\n+    test/fuzz\n+\n+EXTRA_DIST += \\\n+    test/util/bitcoin-util-test.py \\\n+    test/util/data/bitcoin-util-test.json \\\n+    test/util/data/blanktxv1.hex \\\n+    test/util/data/blanktxv1.json \\\n+    test/util/data/blanktxv2.hex \\\n+    test/util/data/blanktxv2.json \\\n+    test/util/data/tt-delin1-out.hex \\\n+    test/util/data/tt-delin1-out.json \\\n+    test/util/data/tt-delout1-out.hex \\\n+    test/util/data/tt-delout1-out.json \\\n+    test/util/data/tt-locktime317000-out.hex \\\n+    test/util/data/tt-locktime317000-out.json \\\n+    test/util/data/tx394b54bb.hex \\\n+    test/util/data/txcreate1.hex \\\n+    test/util/data/txcreate1.json \\\n+    test/util/data/txcreate2.hex \\\n+    test/util/data/txcreate2.json \\\n+    test/util/data/txcreatedata1.hex \\\n+    test/util/data/txcreatedata1.json \\\n+    test/util/data/txcreatedata2.hex \\\n+    test/util/data/txcreatedata2.json \\\n+    test/util/data/txcreatedata_seq0.hex \\\n+    test/util/data/txcreatedata_seq0.json \\\n+    test/util/data/txcreatedata_seq1.hex \\\n+    test/util/data/txcreatedata_seq1.json \\\n+    test/util/data/txcreatemultisig1.hex \\\n+    test/util/data/txcreatemultisig1.json \\\n+    test/util/data/txcreatemultisig2.hex \\\n+    test/util/data/txcreatemultisig2.json \\\n+    test/util/data/txcreatemultisig3.hex \\\n+    test/util/data/txcreatemultisig3.json \\\n+    test/util/data/txcreatemultisig4.hex \\\n+    test/util/data/txcreatemultisig4.json \\\n+    test/util/data/txcreatemultisig5.json \\\n+    test/util/data/txcreateoutpubkey1.hex \\\n+    test/util/data/txcreateoutpubkey1.json \\\n+    test/util/data/txcreateoutpubkey2.hex \\\n+    test/util/data/txcreateoutpubkey2.json \\\n+    test/util/data/txcreateoutpubkey3.hex \\\n+    test/util/data/txcreateoutpubkey3.json \\\n+    test/util/data/txcreatescript1.hex \\\n+    test/util/data/txcreatescript1.json \\\n+    test/util/data/txcreatescript2.hex \\\n+    test/util/data/txcreatescript2.json \\\n+    test/util/data/txcreatescript3.hex \\\n+    test/util/data/txcreatescript3.json \\\n+    test/util/data/txcreatescript4.hex \\\n+    test/util/data/txcreatescript4.json \\\n+    test/util/data/txcreatescript5.hex \\\n+    test/util/data/txcreatescript6.hex \\\n+    test/util/data/txcreatesignv1.hex \\\n+    test/util/data/txcreatesignv1.json \\\n+    test/util/data/txcreatesignv2.hex \\\n+    test/util/rpcauth-test.py\n+\n+CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n+\n+.INTERMEDIATE: $(COVERAGE_INFO)\n+\n+DISTCHECK_CONFIGURE_FLAGS = --enable-man\n+\n+doc/doxygen/.stamp: doc/Doxyfile FORCE\n+\t$(MKDIR_P) $(@D)\n+\t$(DOXYGEN) $^\n+\t$(AM_V_at) touch $@\n+\n+if HAVE_DOXYGEN\n+docs: doc/doxygen/.stamp\n+else\n+docs:\n+\t@echo \"error: doxygen not found\"\n+endif\n+\n+clean-docs:\n+\trm -rf doc/doxygen\n+\n+clean-local: clean-docs\n+\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ fuzz.coverage/ test/tmp/ cache/ $(OSX_APP)\n+\trm -rf test/functional/__pycache__ test/functional/test_framework/__pycache__ test/cache share/rpcauth/__pycache__\n+\trm -rf osx_volname dist/ dpi36.background.tiff dpi72.background.tiff\n+\n+test-security-check:\n+if TARGET_DARWIN\n+\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_MACHO\n+endif\n+if TARGET_WINDOWS\n+\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_PE\n+endif\n+if TARGET_LINUX\n+\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_ELF\n+endif"
      },
      {
        "sha": "a41ef5cd1a2bbd75a8f0399bbaba0be1151aea30",
        "filename": "README.md",
        "status": "added",
        "additions": 95,
        "deletions": 0,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,95 @@\n+Satoshi Bitcoin 2 0 Core integration/staging tree\n+=====================================\n+\n+https://bitcoincore.org\n+\n+What is Satoshi Bitcoin?\n+----------------\n+\n+Satoshi Bitcoin is an experimental digital currency that enables instant payments to\n+anyone, anywhere in the world. Satoshi Bitcoin uses peer-to-peer technology to operate\n+with no central authority: managing transactions and issuing money are carried\n+out collectively by the network. Satoshi Bitcoin Core is the name of open source\n+software which enables the use of this currency.\n+\n+<<<<<<< HEAD\n+For more information, as well as an immediately usable, binary version of\n+the Bitcoin Core software, see https://bitcoincore.org/en/download/, or read the\n+=======\n+For more information, as well as an immediately useable, binary version of\n+the Satoshi Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n+>>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n+[original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n+\n+License\n+-------\n+\n+Satoshi Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n+information or see https://opensource.org/licenses/MIT.\n+\n+Development Process\n+-------------------\n+\n+The `master` branch is regularly built (see `doc/build-*.md` for instructions) and tested, but it is not guaranteed to be\n+completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n+<<<<<<< HEAD\n+regularly from release branches to indicate new official, stable release versions of Bitcoin Core.\n+=======\n+regularly to indicate new official, stable release versions of Satoshi Bitcoin Core.\n+\n+The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n+>>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n+\n+The https://github.com/bitcoin-core/gui repository is used exclusively for the\n+development of the GUI. Its master branch is identical in all monotree\n+repositories. Release branches and tags do not exist, so please do not fork\n+that repository unless it is for development reasons.\n+\n+The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md)\n+and useful hints for developers can be found in [doc/developer-notes.md](doc/developer-notes.md).\n+\n+Testing\n+-------\n+\n+Testing and code review is the bottleneck for development; we get more pull\n+requests than we can review and test on short notice. Please be patient and help out by testing\n+other people's pull requests, and remember this is a security-critical project where any mistake might cost people\n+lots of money.\n+\n+### Automated Testing\n+\n+Developers are strongly encouraged to write [unit tests](src/test/README.md) for new code, and to\n+submit new unit tests for old code. Unit tests can be compiled and run\n+(assuming they weren't disabled in configure) with: `make check`. Further details on running\n+and extending unit tests can be found in [/src/test/README.md](/src/test/README.md).\n+\n+There are also [regression and integration tests](/test), written\n+in Python, that are run automatically on the build server.\n+These tests can be run (if the [test dependencies](/test) are installed) with: `test/functional/test_runner.py`\n+\n+The Travis CI system makes sure that every pull request is built for Windows, Linux, and macOS, and that unit/sanity tests are run automatically.\n+\n+### Manual Quality Assurance (QA) Testing\n+\n+Changes should be tested by somebody other than the developer who wrote the\n+code. This is especially important for large or high-risk changes. It is useful\n+to add a test plan to the pull request description if testing the changes is\n+not straightforward.\n+\n+Translations\n+------------\n+\n+Changes to translations as well as new translations can be submitted to\n+<<<<<<< HEAD\n+[Bitcoin Core's Transifex page](https://www.transifex.com/bitcoin/bitcoin/).\n+=======\n+[Satoshi Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n+>>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n+\n+Translations are periodically pulled from Transifex and merged into the git repository. See the\n+[translation process](doc/translation_process.md) for details on how this works.\n+\n+**Important**: We do not accept translation changes as GitHub pull requests because the next\n+pull from Transifex would automatically overwrite them again.\n+\n+Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators)."
      },
      {
        "sha": "7ed96c7cea392323b4b50245087794f5cc7810f7",
        "filename": "SECURITY.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/SECURITY.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/SECURITY.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/SECURITY.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,20 @@\n+# Security Policy\n+\n+## Supported Versions\n+\n+See our website for versions of Bitcoin Core that are currently supported with\n+security updates: https://bitcoincore.org/en/lifecycle/#schedule\n+\n+## Reporting a Vulnerability\n+\n+To report security issues send an email to security@bitcoincore.org (not for support).\n+\n+The following keys may be used to communicate sensitive information to developers:\n+\n+| Name | Fingerprint |\n+|------|-------------|\n+| Wladimir van der Laan | 71A3 B167 3540 5025 D447  E8F2 7481 0B01 2346 C9A6 |\n+| Jonas Schnelli | 32EE 5C4C 3FA1 5CCA DB46  ABE5 29D4 BCB6 416F 53EC |\n+| Pieter Wuille | 133E AC17 9436 F14A 5CF1  B794 860F EB80 4E66 9320 |\n+\n+You can import a key by running the following command with that individual\u2019s fingerprint: `gpg --recv-keys \"<fingerprint>\"` Ensure that you put quotes around fingerprints containing spaces."
      },
      {
        "sha": "de16260b563279aea0ae038ecd4250964e8bd540",
        "filename": "autogen.sh",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,16 @@\n+#!/bin/sh\n+# Copyright (c) 2013-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+set -e\n+srcdir=\"$(dirname \"$0\")\"\n+cd \"$srcdir\"\n+if [ -z \"${LIBTOOLIZE}\" ] && GLIBTOOLIZE=\"$(command -v glibtoolize)\"; then\n+  LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n+  export LIBTOOLIZE\n+fi\n+command -v autoreconf >/dev/null || \\\n+  (echo \"configuration failed, please install autoconf first\" && exit 1)\n+autoreconf --install --force --warnings=all"
      },
      {
        "sha": "2ae33f71402aaf6a4c70212f3493354ecfb01ec8",
        "filename": "build-aux/m4/ax_boost_base.m4",
        "status": "added",
        "additions": 303,
        "deletions": 0,
        "changes": 303,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_base.m4?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,303 @@\n+# ===========================================================================\n+#      https://www.gnu.org/software/autoconf-archive/ax_boost_base.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_BASE([MINIMUM-VERSION], [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n+#\n+# DESCRIPTION\n+#\n+#   Test for the Boost C++ libraries of a particular version (or newer)\n+#\n+#   If no path to the installed boost library is given the macro searchs\n+#   under /usr, /usr/local, /opt and /opt/local and evaluates the\n+#   $BOOST_ROOT environment variable. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_CPPFLAGS) / AC_SUBST(BOOST_LDFLAGS)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Peter Adolphs\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 48\n+\n+# example boost program (need to pass version)\n+m4_define([_AX_BOOST_BASE_PROGRAM],\n+          [AC_LANG_PROGRAM([[\n+#include <boost/version.hpp>\n+]],[[\n+(void) ((void)sizeof(char[1 - 2*!!((BOOST_VERSION) < ($1))]));\n+]])])\n+\n+AC_DEFUN([AX_BOOST_BASE],\n+[\n+AC_ARG_WITH([boost],\n+  [AS_HELP_STRING([--with-boost@<:@=ARG@:>@],\n+    [use Boost library from a standard location (ARG=yes),\n+     from the specified location (ARG=<path>),\n+     or disable it (ARG=no)\n+     @<:@ARG=yes@:>@ ])],\n+    [\n+     AS_CASE([$withval],\n+       [no],[want_boost=\"no\";_AX_BOOST_BASE_boost_path=\"\"],\n+       [yes],[want_boost=\"yes\";_AX_BOOST_BASE_boost_path=\"\"],\n+       [want_boost=\"yes\";_AX_BOOST_BASE_boost_path=\"$withval\"])\n+    ],\n+    [want_boost=\"yes\"])\n+\n+\n+AC_ARG_WITH([boost-libdir],\n+  [AS_HELP_STRING([--with-boost-libdir=LIB_DIR],\n+    [Force given directory for boost libraries.\n+     Note that this will override library path detection,\n+     so use this parameter only if default library detection fails\n+     and you know exactly where your boost libraries are located.])],\n+  [\n+   AS_IF([test -d \"$withval\"],\n+         [_AX_BOOST_BASE_boost_lib_path=\"$withval\"],\n+    [AC_MSG_ERROR([--with-boost-libdir expected directory name])])\n+  ],\n+  [_AX_BOOST_BASE_boost_lib_path=\"\"])\n+\n+BOOST_LDFLAGS=\"\"\n+BOOST_CPPFLAGS=\"\"\n+AS_IF([test \"x$want_boost\" = \"xyes\"],\n+      [_AX_BOOST_BASE_RUNDETECT([$1],[$2],[$3])])\n+AC_SUBST(BOOST_CPPFLAGS)\n+AC_SUBST(BOOST_LDFLAGS)\n+])\n+\n+\n+# convert a version string in $2 to numeric and affect to polymorphic var $1\n+AC_DEFUN([_AX_BOOST_BASE_TONUMERICVERSION],[\n+  AS_IF([test \"x$2\" = \"x\"],[_AX_BOOST_BASE_TONUMERICVERSION_req=\"1.20.0\"],[_AX_BOOST_BASE_TONUMERICVERSION_req=\"$2\"])\n+  _AX_BOOST_BASE_TONUMERICVERSION_req_shorten=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n+  _AX_BOOST_BASE_TONUMERICVERSION_req_major=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '\\([[0-9]]*\\)'`\n+  AS_IF([test \"x$_AX_BOOST_BASE_TONUMERICVERSION_req_major\" = \"x\"],\n+        [AC_MSG_ERROR([You should at least specify libboost major version])])\n+  _AX_BOOST_BASE_TONUMERICVERSION_req_minor=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '[[0-9]]*\\.\\([[0-9]]*\\)'`\n+  AS_IF([test \"x$_AX_BOOST_BASE_TONUMERICVERSION_req_minor\" = \"x\"],\n+        [_AX_BOOST_BASE_TONUMERICVERSION_req_minor=\"0\"])\n+  _AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '[[0-9]]*\\.[[0-9]]*\\.\\([[0-9]]*\\)'`\n+  AS_IF([test \"X$_AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor\" = \"X\"],\n+        [_AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor=\"0\"])\n+  _AX_BOOST_BASE_TONUMERICVERSION_RET=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req_major \\* 100000 \\+  $_AX_BOOST_BASE_TONUMERICVERSION_req_minor \\* 100 \\+ $_AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor`\n+  AS_VAR_SET($1,$_AX_BOOST_BASE_TONUMERICVERSION_RET)\n+])\n+\n+dnl Run the detection of boost should be run only if $want_boost\n+AC_DEFUN([_AX_BOOST_BASE_RUNDETECT],[\n+    _AX_BOOST_BASE_TONUMERICVERSION(WANT_BOOST_VERSION,[$1])\n+    succeeded=no\n+\n+\n+    AC_REQUIRE([AC_CANONICAL_HOST])\n+    dnl On 64-bit systems check for system libraries in both lib64 and lib.\n+    dnl The former is specified by FHS, but e.g. Debian does not adhere to\n+    dnl this (as it rises problems for generic multi-arch support).\n+    dnl The last entry in the list is chosen by default when no libraries\n+    dnl are found, e.g. when only header-only libraries are installed!\n+    AS_CASE([${host_cpu}],\n+      [x86_64],[libsubdirs=\"lib64 libx32 lib lib64\"],\n+      [mips*64*],[libsubdirs=\"lib64 lib32 lib lib64\"],\n+      [ppc64|powerpc64|s390x|sparc64|aarch64|ppc64le|powerpc64le|riscv64],[libsubdirs=\"lib64 lib lib64\"],\n+      [libsubdirs=\"lib\"]\n+    )\n+\n+    dnl allow for real multi-arch paths e.g. /usr/lib/x86_64-linux-gnu. Give\n+    dnl them priority over the other paths since, if libs are found there, they\n+    dnl are almost assuredly the ones desired.\n+    AS_CASE([${host_cpu}],\n+      [i?86],[multiarch_libsubdir=\"lib/i386-${host_os}\"],\n+      [armv7l],[multiarch_libsubdir=\"lib/arm-${host_os}\"],\n+      [multiarch_libsubdir=\"lib/${host_cpu}-${host_os}\"]\n+    )\n+\n+    dnl first we check the system location for boost libraries\n+    dnl this location ist chosen if boost libraries are installed with the --layout=system option\n+    dnl or if you install boost with RPM\n+    AS_IF([test \"x$_AX_BOOST_BASE_boost_path\" != \"x\"],[\n+        AC_MSG_CHECKING([for boostlib >= $1 ($WANT_BOOST_VERSION) includes in \"$_AX_BOOST_BASE_boost_path/include\"])\n+         AS_IF([test -d \"$_AX_BOOST_BASE_boost_path/include\" && test -r \"$_AX_BOOST_BASE_boost_path/include\"],[\n+           AC_MSG_RESULT([yes])\n+           BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path/include\"\n+           for _AX_BOOST_BASE_boost_path_tmp in $multiarch_libsubdir $libsubdirs; do\n+                AC_MSG_CHECKING([for boostlib >= $1 ($WANT_BOOST_VERSION) lib path in \"$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\"])\n+                AS_IF([test -d \"$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\" && test -r \"$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\" ],[\n+                        AC_MSG_RESULT([yes])\n+                        BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\";\n+                        break;\n+                ],\n+      [AC_MSG_RESULT([no])])\n+           done],[\n+      AC_MSG_RESULT([no])])\n+    ],[\n+        if test X\"$cross_compiling\" = Xyes; then\n+            search_libsubdirs=$multiarch_libsubdir\n+        else\n+            search_libsubdirs=\"$multiarch_libsubdir $libsubdirs\"\n+        fi\n+        for _AX_BOOST_BASE_boost_path_tmp in /usr /usr/local /opt /opt/local ; do\n+            if test -d \"$_AX_BOOST_BASE_boost_path_tmp/include/boost\" && test -r \"$_AX_BOOST_BASE_boost_path_tmp/include/boost\" ; then\n+                for libsubdir in $search_libsubdirs ; do\n+                    if ls \"$_AX_BOOST_BASE_boost_path_tmp/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                done\n+                BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_path_tmp/$libsubdir\"\n+                BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path_tmp/include\"\n+                break;\n+            fi\n+        done\n+    ])\n+\n+    dnl overwrite ld flags if we have required special directory with\n+    dnl --with-boost-libdir parameter\n+    AS_IF([test \"x$_AX_BOOST_BASE_boost_lib_path\" != \"x\"],\n+          [BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_lib_path\"])\n+\n+    AC_MSG_CHECKING([for boostlib >= $1 ($WANT_BOOST_VERSION)])\n+    CPPFLAGS_SAVED=\"$CPPFLAGS\"\n+    CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+    export CPPFLAGS\n+\n+    LDFLAGS_SAVED=\"$LDFLAGS\"\n+    LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+    export LDFLAGS\n+\n+    AC_REQUIRE([AC_PROG_CXX])\n+    AC_LANG_PUSH(C++)\n+        AC_COMPILE_IFELSE([_AX_BOOST_BASE_PROGRAM($WANT_BOOST_VERSION)],[\n+        AC_MSG_RESULT(yes)\n+    succeeded=yes\n+    found_system=yes\n+        ],[\n+        ])\n+    AC_LANG_POP([C++])\n+\n+\n+\n+    dnl if we found no boost with system layout we search for boost libraries\n+    dnl built and installed without the --layout=system option or for a staged(not installed) version\n+    if test \"x$succeeded\" != \"xyes\" ; then\n+        CPPFLAGS=\"$CPPFLAGS_SAVED\"\n+        LDFLAGS=\"$LDFLAGS_SAVED\"\n+        BOOST_CPPFLAGS=\n+        if test -z \"$_AX_BOOST_BASE_boost_lib_path\" ; then\n+            BOOST_LDFLAGS=\n+        fi\n+        _version=0\n+        if test -n \"$_AX_BOOST_BASE_boost_path\" ; then\n+            if test -d \"$_AX_BOOST_BASE_boost_path\" && test -r \"$_AX_BOOST_BASE_boost_path\"; then\n+                for i in `ls -d $_AX_BOOST_BASE_boost_path/include/boost-* 2>/dev/null`; do\n+                    _version_tmp=`echo $i | sed \"s#$_AX_BOOST_BASE_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n+                    V_CHECK=`expr $_version_tmp \\> $_version`\n+                    if test \"x$V_CHECK\" = \"x1\" ; then\n+                        _version=$_version_tmp\n+                    fi\n+                    VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n+                    BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path/include/boost-$VERSION_UNDERSCORE\"\n+                done\n+                dnl if nothing found search for layout used in Windows distributions\n+                if test -z \"$BOOST_CPPFLAGS\"; then\n+                    if test -d \"$_AX_BOOST_BASE_boost_path/boost\" && test -r \"$_AX_BOOST_BASE_boost_path/boost\"; then\n+                        BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path\"\n+                    fi\n+                fi\n+                dnl if we found something and BOOST_LDFLAGS was unset before\n+                dnl (because \"$_AX_BOOST_BASE_boost_lib_path\" = \"\"), set it here.\n+                if test -n \"$BOOST_CPPFLAGS\" && test -z \"$BOOST_LDFLAGS\"; then\n+                    for libsubdir in $libsubdirs ; do\n+                        if ls \"$_AX_BOOST_BASE_boost_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                    done\n+                    BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_path/$libsubdir\"\n+                fi\n+            fi\n+        else\n+            if test \"x$cross_compiling\" != \"xyes\" ; then\n+                for _AX_BOOST_BASE_boost_path in /usr /usr/local /opt /opt/local ; do\n+                    if test -d \"$_AX_BOOST_BASE_boost_path\" && test -r \"$_AX_BOOST_BASE_boost_path\" ; then\n+                        for i in `ls -d $_AX_BOOST_BASE_boost_path/include/boost-* 2>/dev/null`; do\n+                            _version_tmp=`echo $i | sed \"s#$_AX_BOOST_BASE_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n+                            V_CHECK=`expr $_version_tmp \\> $_version`\n+                            if test \"x$V_CHECK\" = \"x1\" ; then\n+                                _version=$_version_tmp\n+                                best_path=$_AX_BOOST_BASE_boost_path\n+                            fi\n+                        done\n+                    fi\n+                done\n+\n+                VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n+                BOOST_CPPFLAGS=\"-I$best_path/include/boost-$VERSION_UNDERSCORE\"\n+                if test -z \"$_AX_BOOST_BASE_boost_lib_path\" ; then\n+                    for libsubdir in $libsubdirs ; do\n+                        if ls \"$best_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                    done\n+                    BOOST_LDFLAGS=\"-L$best_path/$libsubdir\"\n+                fi\n+            fi\n+\n+            if test -n \"$BOOST_ROOT\" ; then\n+                for libsubdir in $libsubdirs ; do\n+                    if ls \"$BOOST_ROOT/stage/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                done\n+                if test -d \"$BOOST_ROOT\" && test -r \"$BOOST_ROOT\" && test -d \"$BOOST_ROOT/stage/$libsubdir\" && test -r \"$BOOST_ROOT/stage/$libsubdir\"; then\n+                    version_dir=`expr //$BOOST_ROOT : '.*/\\(.*\\)'`\n+                    stage_version=`echo $version_dir | sed 's/boost_//' | sed 's/_/./g'`\n+                        stage_version_shorten=`expr $stage_version : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n+                    V_CHECK=`expr $stage_version_shorten \\>\\= $_version`\n+                    if test \"x$V_CHECK\" = \"x1\" && test -z \"$_AX_BOOST_BASE_boost_lib_path\" ; then\n+                        AC_MSG_NOTICE(We will use a staged boost library from $BOOST_ROOT)\n+                        BOOST_CPPFLAGS=\"-I$BOOST_ROOT\"\n+                        BOOST_LDFLAGS=\"-L$BOOST_ROOT/stage/$libsubdir\"\n+                    fi\n+                fi\n+            fi\n+        fi\n+\n+        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+        export CPPFLAGS\n+        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+        export LDFLAGS\n+\n+        AC_LANG_PUSH(C++)\n+            AC_COMPILE_IFELSE([_AX_BOOST_BASE_PROGRAM($WANT_BOOST_VERSION)],[\n+            AC_MSG_RESULT(yes)\n+        succeeded=yes\n+        found_system=yes\n+            ],[\n+            ])\n+        AC_LANG_POP([C++])\n+    fi\n+\n+    if test \"x$succeeded\" != \"xyes\" ; then\n+        if test \"x$_version\" = \"x0\" ; then\n+            AC_MSG_NOTICE([[We could not detect the boost libraries (version $1 or higher). If you have a staged boost library (still not installed) please specify \\$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])\n+        else\n+            AC_MSG_NOTICE([Your boost libraries seems to old (version $_version).])\n+        fi\n+        # execute ACTION-IF-NOT-FOUND (if present):\n+        ifelse([$3], , :, [$3])\n+    else\n+        AC_DEFINE(HAVE_BOOST,,[define if the Boost library is available])\n+        # execute ACTION-IF-FOUND (if present):\n+        ifelse([$2], , :, [$2])\n+    fi\n+\n+    CPPFLAGS=\"$CPPFLAGS_SAVED\"\n+    LDFLAGS=\"$LDFLAGS_SAVED\"\n+\n+])"
      },
      {
        "sha": "12f7bc5e2ebc18f70537f3d271802e107bfacdad",
        "filename": "build-aux/m4/ax_boost_filesystem.m4",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_boost_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_boost_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_filesystem.m4?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,118 @@\n+# ===========================================================================\n+#   https://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_FILESYSTEM\n+#\n+# DESCRIPTION\n+#\n+#   Test for Filesystem library from the Boost C++ libraries. The macro\n+#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n+#   available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_FILESYSTEM_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_FILESYSTEM\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Michael Tindal\n+#   Copyright (c) 2009 Roman Rybalko <libtorrent@romanr.info>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 28\n+\n+AC_DEFUN([AX_BOOST_FILESYSTEM],\n+[\n+\tAC_ARG_WITH([boost-filesystem],\n+\tAS_HELP_STRING([--with-boost-filesystem@<:@=special-lib@:>@],\n+                   [use the Filesystem library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-filesystem=boost_filesystem-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_filesystem_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_filesystem_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+\t\tLIBS_SAVED=$LIBS\n+\t\tLIBS=\"$LIBS $BOOST_SYSTEM_LIB\"\n+\t\texport LIBS\n+\n+        AC_CACHE_CHECK(whether the Boost::Filesystem library is available,\n+\t\t\t\t\t   ax_cv_boost_filesystem,\n+        [AC_LANG_PUSH([C++])\n+         AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/filesystem/path.hpp>]],\n+                                   [[using namespace boost::filesystem;\n+                                   path my_path( \"foo/bar/data.txt\" );\n+                                   return 0;]])],\n+\t\t\t\t\t       ax_cv_boost_filesystem=yes, ax_cv_boost_filesystem=no)\n+         AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_filesystem\" = \"xyes\"; then\n+\t\t\tAC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+            if test \"x$ax_boost_user_filesystem_lib\" = \"x\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/libboost_filesystem* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                 [link_filesystem=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_filesystem\" != \"xyes\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/boost_filesystem* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                 [link_filesystem=\"no\"])\n+\t\t\t\tdone\n+\t\t    fi\n+            else\n+               for ax_lib in $ax_boost_user_filesystem_lib boost_filesystem-$ax_boost_user_filesystem_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                   [link_filesystem=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the Boost::Filesystem library!)\n+            fi\n+\t\t\tif test \"x$link_filesystem\" != \"xyes\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\t\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\t\tLIBS=\"$LIBS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "5d20e67464fcde6ee00f2582607e59f0759115b8",
        "filename": "build-aux/m4/ax_boost_process.m4",
        "status": "added",
        "additions": 121,
        "deletions": 0,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_boost_process.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_boost_process.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_process.m4?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,121 @@\n+# ===========================================================================\n+#     https://www.gnu.org/software/autoconf-archive/ax_boost_process.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_PROCESS\n+#\n+# DESCRIPTION\n+#\n+#   Test for Process library from the Boost C++ libraries. The macro\n+#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n+#   available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_PROCESS_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_PROCESS\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2008 Michael Tindal\n+#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 2\n+\n+AC_DEFUN([AX_BOOST_PROCESS],\n+[\n+\tAC_ARG_WITH([boost-process],\n+\tAS_HELP_STRING([--with-boost-process@<:@=special-lib@:>@],\n+                   [use the Process library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-process=boost_process-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost_process=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost_process=\"yes\"\n+            ax_boost_user_process_lib=\"\"\n+        else\n+\t\t    want_boost_process=\"yes\"\n+\t\tax_boost_user_process_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost_process=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost_process\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Process library is available,\n+\t\t\t\t\t   ax_cv_boost_process,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\t\t\t CXXFLAGS=\n+\n+             AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/process.hpp>]],\n+                [[boost::process::child* child = new boost::process::child; delete child;]])],\n+                ax_cv_boost_process=yes, ax_cv_boost_process=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_process\" = \"xyes\"; then\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_PROCESS,,[define if the Boost::Process library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            if test \"x$ax_boost_user_process_lib\" = \"x\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/libboost_process* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_PROCESS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROCESS_LIB) link_process=\"yes\"; break],\n+                                 [link_process=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_process\" != \"xyes\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/boost_process* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_PROCESS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROCESS_LIB) link_process=\"yes\"; break],\n+                                 [link_process=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_process_lib boost_process-$ax_boost_user_process_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_PROCESS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROCESS_LIB) link_process=\"yes\"; break],\n+                                   [link_process=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the Boost::Process library!)\n+            fi\n+\t\t\tif test \"x$link_process\" = \"xno\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "323e2a676a8e0428008dd4563416ce141e278f33",
        "filename": "build-aux/m4/ax_boost_system.m4",
        "status": "added",
        "additions": 121,
        "deletions": 0,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_system.m4?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,121 @@\n+# ===========================================================================\n+#     https://www.gnu.org/software/autoconf-archive/ax_boost_system.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_SYSTEM\n+#\n+# DESCRIPTION\n+#\n+#   Test for System library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_SYSTEM_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_SYSTEM\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2008 Michael Tindal\n+#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 20\n+\n+AC_DEFUN([AX_BOOST_SYSTEM],\n+[\n+\tAC_ARG_WITH([boost-system],\n+\tAS_HELP_STRING([--with-boost-system@<:@=special-lib@:>@],\n+                   [use the System library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-system=boost_system-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_system_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_system_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::System library is available,\n+\t\t\t\t\t   ax_cv_boost_system,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\t\t\t CXXFLAGS=\n+\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/system/error_code.hpp>]],\n+\t\t\t\t    [[boost::system::error_category *a = 0;]])],\n+                   ax_cv_boost_system=yes, ax_cv_boost_system=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_system\" = \"xyes\"; then\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_SYSTEM,,[define if the Boost::System library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            if test \"x$ax_boost_user_system_lib\" = \"x\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/libboost_system* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                 [link_system=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_system\" != \"xyes\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/boost_system* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                 [link_system=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_system_lib boost_system-$ax_boost_user_system_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                   [link_system=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the Boost::System library!)\n+            fi\n+\t\t\tif test \"x$link_system\" = \"xno\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "75e80e6e75aa9f6c22387d0dabce11e5fce9526b",
        "filename": "build-aux/m4/ax_boost_thread.m4",
        "status": "added",
        "additions": 187,
        "deletions": 0,
        "changes": 187,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_boost_thread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_boost_thread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_thread.m4?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,187 @@\n+# ===========================================================================\n+#     https://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_THREAD\n+#\n+# DESCRIPTION\n+#\n+#   Test for Thread library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_THREAD_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_THREAD\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Michael Tindal\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 33\n+\n+AC_DEFUN([AX_BOOST_THREAD],\n+[\n+    AC_ARG_WITH([boost-thread],\n+    AS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n+                   [use the Thread library from boost -\n+                    it is possible to specify a certain library for the linker\n+                    e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_thread_lib=\"\"\n+        else\n+            want_boost=\"yes\"\n+            ax_boost_user_thread_lib=\"$withval\"\n+        fi\n+        ],\n+        [want_boost=\"yes\"]\n+    )\n+\n+    if test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+        CPPFLAGS_SAVED=\"$CPPFLAGS\"\n+        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+        export CPPFLAGS\n+\n+        LDFLAGS_SAVED=\"$LDFLAGS\"\n+        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+        export LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Thread library is available,\n+                       ax_cv_boost_thread,\n+        [AC_LANG_PUSH([C++])\n+             CXXFLAGS_SAVE=$CXXFLAGS\n+\n+             case \"x$host_os\" in\n+                 xsolaris )\n+                     CXXFLAGS=\"-pthreads $CXXFLAGS\"\n+                     break;\n+                     ;;\n+                 xmingw32 )\n+                     CXXFLAGS=\"-mthreads $CXXFLAGS\"\n+                     break;\n+                     ;;\n+                 *android* )\n+                     break;\n+                     ;;\n+                 * )\n+                     CXXFLAGS=\"-pthread $CXXFLAGS\"\n+                     break;\n+                     ;;\n+             esac\n+\n+             AC_COMPILE_IFELSE([\n+                 AC_LANG_PROGRAM(\n+                     [[@%:@include <boost/thread/thread.hpp>]],\n+                     [[boost::thread_group thrds;\n+                       return 0;]])],\n+                 ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n+             CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+        ])\n+        if test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n+            case \"x$host_os\" in\n+                xsolaris )\n+                    BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n+                    break;\n+                    ;;\n+                xmingw32 )\n+                    BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n+                    break;\n+                    ;;\n+                *android* )\n+                    break;\n+                    ;;\n+                * )\n+                    BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n+                    break;\n+                    ;;\n+            esac\n+\n+            AC_SUBST(BOOST_CPPFLAGS)\n+\n+            AC_DEFINE(HAVE_BOOST_THREAD,,\n+                      [define if the Boost::Thread library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+            LDFLAGS_SAVE=$LDFLAGS\n+                        case \"x$host_os\" in\n+                          *bsd* )\n+                               LDFLAGS=\"-pthread $LDFLAGS\"\n+                          break;\n+                          ;;\n+                        esac\n+            if test \"x$ax_boost_user_thread_lib\" = \"x\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/libboost_thread* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'`; do\n+                     ax_lib=${libextension}\n+                    AC_CHECK_LIB($ax_lib, exit,\n+                                 [link_thread=\"yes\"; break],\n+                                 [link_thread=\"no\"])\n+                done\n+                if test \"x$link_thread\" != \"xyes\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/boost_thread* 2>/dev/null | sed 's,.*/,,' | sed 's,\\..*,,'`; do\n+                     ax_lib=${libextension}\n+                    AC_CHECK_LIB($ax_lib, exit,\n+                                 [link_thread=\"yes\"; break],\n+                                 [link_thread=\"no\"])\n+                done\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do\n+                      AC_CHECK_LIB($ax_lib, exit,\n+                                   [link_thread=\"yes\"; break],\n+                                   [link_thread=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the Boost::Thread library!)\n+            fi\n+            if test \"x$link_thread\" = \"xno\"; then\n+                AC_MSG_ERROR(Could not link against $ax_lib !)\n+            else\n+                BOOST_THREAD_LIB=\"-l$ax_lib\"\n+                case \"x$host_os\" in\n+                    *bsd* )\n+                        BOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n+                        break;\n+                        ;;\n+                    xsolaris )\n+                        BOOST_THREAD_LIB=\"$BOOST_THREAD_LIB -lpthread\"\n+                        break;\n+                        ;;\n+                    xmingw32 )\n+                        break;\n+                        ;;\n+                    *android* )\n+                        break;\n+                        ;;\n+                    * )\n+                        BOOST_THREAD_LIB=\"$BOOST_THREAD_LIB -lpthread\"\n+                        break;\n+                        ;;\n+                esac\n+                AC_SUBST(BOOST_THREAD_LIB)\n+            fi\n+        fi\n+\n+        CPPFLAGS=\"$CPPFLAGS_SAVED\"\n+        LDFLAGS=\"$LDFLAGS_SAVED\"\n+    fi\n+])"
      },
      {
        "sha": "4cca32fcfd6539b53e0a55c02544342d1d03ae75",
        "filename": "build-aux/m4/ax_boost_unit_test_framework.m4",
        "status": "added",
        "additions": 137,
        "deletions": 0,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_boost_unit_test_framework.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_boost_unit_test_framework.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_unit_test_framework.m4?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,137 @@\n+# =================================================================================\n+#  https://www.gnu.org/software/autoconf-archive/ax_boost_unit_test_framework.html\n+# =================================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_UNIT_TEST_FRAMEWORK\n+#\n+# DESCRIPTION\n+#\n+#   Test for Unit_Test_Framework library from the Boost C++ libraries. The\n+#   macro requires a preceding call to AX_BOOST_BASE. Further documentation\n+#   is available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_UNIT_TEST_FRAMEWORK\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 22\n+\n+AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n+[\n+\tAC_ARG_WITH([boost-unit-test-framework],\n+\tAS_HELP_STRING([--with-boost-unit-test-framework@<:@=special-lib@:>@],\n+                   [use the Unit_Test_Framework library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-unit-test-framework=boost_unit_test_framework-gcc ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_unit_test_framework_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_unit_test_framework_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Unit_Test_Framework library is available,\n+\t\t\t\t\t   ax_cv_boost_unit_test_framework,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/test/unit_test.hpp>]],\n+                                    [[using boost::unit_test::test_suite;\n+\t\t\t\t\t\t\t test_suite* test= BOOST_TEST_SUITE( \"Unit test example 1\" ); if (test == NULL) { return 1; } else { return 0; }]])],\n+                   ax_cv_boost_unit_test_framework=yes, ax_cv_boost_unit_test_framework=no)\n+         AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_unit_test_framework\" = \"xyes\"; then\n+\t\t\tAC_DEFINE(HAVE_BOOST_UNIT_TEST_FRAMEWORK,,[define if the Boost::Unit_Test_Framework library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+            if test \"x$ax_boost_user_unit_test_framework_lib\" = \"x\"; then\n+\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n+                for monitor_library in `ls $BOOSTLIBDIR/libboost_unit_test_framework*.so* $BOOSTLIBDIR/libboost_unit_test_framework*.dylib* $BOOSTLIBDIR/libboost_unit_test_framework*.a* 2>/dev/null` ; do\n+                    if test -r $monitor_library ; then\n+                       libextension=`echo $monitor_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'`\n+                       ax_lib=${libextension}\n+                       link_unit_test_framework=\"yes\"\n+                    else\n+                       link_unit_test_framework=\"no\"\n+                    fi\n+\n+\t\t\t    if test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                      BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n+                      AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+\t\t\t\t\t  break\n+\t\t\t\t    fi\n+                done\n+                if test \"x$link_unit_test_framework\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_unit_test_framework*.dll* $BOOSTLIBDIR/boost_unit_test_framework*.a* 2>/dev/null  | sed 's,.*/,,' | sed -e 's;^\\(boost_unit_test_framework.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB) link_unit_test_framework=\"yes\"; break],\n+                                 [link_unit_test_framework=\"no\"])\n+\t\t\t\tdone\n+                fi\n+            else\n+                link_unit_test_framework=\"no\"\n+\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n+                for ax_lib in boost_unit_test_framework-$ax_boost_user_unit_test_framework_lib $ax_boost_user_unit_test_framework_lib ; do\n+                   if test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                      break;\n+                   fi\n+                   for unittest_library in `ls $BOOSTLIBDIR/lib${ax_lib}.so* $BOOSTLIBDIR/lib${ax_lib}.a* 2>/dev/null` ; do\n+                   if test -r $unittest_library ; then\n+                       libextension=`echo $unittest_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a*$;\\1;'`\n+                       ax_lib=${libextension}\n+                       link_unit_test_framework=\"yes\"\n+                    else\n+                       link_unit_test_framework=\"no\"\n+                    fi\n+\n+\t\t\t\tif test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                        BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n+                        AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+\t\t\t\t\t    break\n+\t\t\t\t    fi\n+                  done\n+               done\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the Boost::Unit_Test_Framework library!)\n+            fi\n+\t\t\tif test \"x$link_unit_test_framework\" != \"xyes\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "ca3639715e7243fa4343eb2e7f3de53927cc9d4a",
        "filename": "build-aux/m4/ax_check_compile_flag.m4",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_check_compile_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_check_compile_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_compile_flag.m4?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,74 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_check_compile_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the current language's compiler\n+#   or gives an error.  (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the current language's default\n+#   flags (e.g. CFLAGS) when the check is done.  The check is thus made with\n+#   the flags: \"CFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to\n+#   force the compiler to issue an error when a bad flag is given.\n+#\n+#   INPUT gives an alternative input source to AC_COMPILE_IFELSE.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 4\n+\n+AC_DEFUN([AX_CHECK_COMPILE_FLAG],\n+[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl\n+AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS\n+  _AC_LANG_PREFIX[]FLAGS=\"$[]_AC_LANG_PREFIX[]FLAGS $4 $1\"\n+  AC_COMPILE_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])\n+AS_VAR_IF(CACHEVAR,yes,\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_COMPILE_FLAGS"
      },
      {
        "sha": "eb01a6ce135eca0fdde834b00c21b12202b09f3d",
        "filename": "build-aux/m4/ax_check_link_flag.m4",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_check_link_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_check_link_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_link_flag.m4?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,74 @@\n+# ===========================================================================\n+#    http://www.gnu.org/software/autoconf-archive/ax_check_link_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the linker or gives an error.\n+#   (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the linker's default flags\n+#   when the check is done.  The check is thus made with the flags: \"LDFLAGS\n+#   EXTRA-FLAGS FLAG\".  This can for example be used to force the linker to\n+#   issue an error when a bad flag is given.\n+#\n+#   INPUT gives an alternative input source to AC_LINK_IFELSE.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{PREPROC,COMPILE}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 4\n+\n+AC_DEFUN([AX_CHECK_LINK_FLAG],\n+[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl\n+AC_CACHE_CHECK([whether the linker accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$LDFLAGS\n+  LDFLAGS=\"$LDFLAGS $4 $1\"\n+  AC_LINK_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  LDFLAGS=$ax_check_save_flags])\n+AS_VAR_IF(CACHEVAR,yes,\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_LINK_FLAGS"
      },
      {
        "sha": "ca1d5ee2b6d1ae107504d4ab433bc5f6fd629f61",
        "filename": "build-aux/m4/ax_check_preproc_flag.m4",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_check_preproc_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_check_preproc_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_preproc_flag.m4?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,74 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_check_preproc_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_PREPROC_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the current language's\n+#   preprocessor or gives an error.  (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the preprocessor's default\n+#   flags when the check is done.  The check is thus made with the flags:\n+#   \"CPPFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to force the\n+#   preprocessor to issue an error when a bad flag is given.\n+#\n+#   INPUT gives an alternative input source to AC_PREPROC_IFELSE.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{COMPILE,LINK}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 4\n+\n+AC_DEFUN([AX_CHECK_PREPROC_FLAG],\n+[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]cppflags_$4_$1])dnl\n+AC_CACHE_CHECK([whether _AC_LANG preprocessor accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$CPPFLAGS\n+  CPPFLAGS=\"$CPPFLAGS $4 $1\"\n+  AC_PREPROC_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  CPPFLAGS=$ax_check_save_flags])\n+AS_VAR_IF(CACHEVAR,yes,\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_PREPROC_FLAGS"
      },
      {
        "sha": "43087b2e6889ec6f8ebd2f8ba77f4a9a716f8ac2",
        "filename": "build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "status": "added",
        "additions": 951,
        "deletions": 0,
        "changes": 951,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_cxx_compile_stdcxx.m4?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,951 @@\n+# ===========================================================================\n+#  https://www.gnu.org/software/autoconf-archive/ax_cxx_compile_stdcxx.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CXX_COMPILE_STDCXX(VERSION, [ext|noext], [mandatory|optional])\n+#\n+# DESCRIPTION\n+#\n+#   Check for baseline language coverage in the compiler for the specified\n+#   version of the C++ standard.  If necessary, add switches to CXX and\n+#   CXXCPP to enable support.  VERSION may be '11' (for the C++11 standard)\n+#   or '14' (for the C++14 standard).\n+#\n+#   The second argument, if specified, indicates whether you insist on an\n+#   extended mode (e.g. -std=gnu++11) or a strict conformance mode (e.g.\n+#   -std=c++11).  If neither is specified, you get whatever works, with\n+#   preference for an extended mode.\n+#\n+#   The third argument, if specified 'mandatory' or if left unspecified,\n+#   indicates that baseline support for the specified C++ standard is\n+#   required and that the macro should error out if no mode with that\n+#   support is found.  If specified 'optional', then configuration proceeds\n+#   regardless, after defining HAVE_CXX${VERSION} if and only if a\n+#   supporting mode is found.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Benjamin Kosnik <bkoz@redhat.com>\n+#   Copyright (c) 2012 Zack Weinberg <zackw@panix.com>\n+#   Copyright (c) 2013 Roy Stogner <roystgnr@ices.utexas.edu>\n+#   Copyright (c) 2014, 2015 Google Inc.; contributed by Alexey Sokolov <sokolov@google.com>\n+#   Copyright (c) 2015 Paul Norman <penorman@mac.com>\n+#   Copyright (c) 2015 Moritz Klammler <moritz@klammler.eu>\n+#   Copyright (c) 2016, 2018 Krzesimir Nowak <qdlacz@gmail.com>\n+#   Copyright (c) 2019 Enji Cooper <yaneurabeya@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved.  This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 11\n+\n+dnl  This macro is based on the code from the AX_CXX_COMPILE_STDCXX_11 macro\n+dnl  (serial version number 13).\n+\n+AC_DEFUN([AX_CXX_COMPILE_STDCXX], [dnl\n+  m4_if([$1], [11], [ax_cxx_compile_alternatives=\"11 0x\"],\n+        [$1], [14], [ax_cxx_compile_alternatives=\"14 1y\"],\n+        [$1], [17], [ax_cxx_compile_alternatives=\"17 1z\"],\n+        [m4_fatal([invalid first argument `$1' to AX_CXX_COMPILE_STDCXX])])dnl\n+  m4_if([$2], [], [],\n+        [$2], [ext], [],\n+        [$2], [noext], [],\n+        [m4_fatal([invalid second argument `$2' to AX_CXX_COMPILE_STDCXX])])dnl\n+  m4_if([$3], [], [ax_cxx_compile_cxx$1_required=true],\n+        [$3], [mandatory], [ax_cxx_compile_cxx$1_required=true],\n+        [$3], [optional], [ax_cxx_compile_cxx$1_required=false],\n+        [m4_fatal([invalid third argument `$3' to AX_CXX_COMPILE_STDCXX])])\n+  AC_LANG_PUSH([C++])dnl\n+  ac_success=no\n+\n+  m4_if([$2], [noext], [], [dnl\n+  if test x$ac_success = xno; then\n+    for alternative in ${ax_cxx_compile_alternatives}; do\n+      switch=\"-std=gnu++${alternative}\"\n+      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n+      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n+                     $cachevar,\n+        [ac_save_CXX=\"$CXX\"\n+         CXX=\"$CXX $switch\"\n+         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n+          [eval $cachevar=yes],\n+          [eval $cachevar=no])\n+         CXX=\"$ac_save_CXX\"])\n+      if eval test x\\$$cachevar = xyes; then\n+        CXX=\"$CXX $switch\"\n+        if test -n \"$CXXCPP\" ; then\n+          CXXCPP=\"$CXXCPP $switch\"\n+        fi\n+        ac_success=yes\n+        break\n+      fi\n+    done\n+  fi])\n+\n+  m4_if([$2], [ext], [], [dnl\n+  if test x$ac_success = xno; then\n+    dnl HP's aCC needs +std=c++11 according to:\n+    dnl http://h21007.www2.hp.com/portal/download/files/unprot/aCxx/PDF_Release_Notes/769149-001.pdf\n+    dnl Cray's crayCC needs \"-h std=c++11\"\n+    for alternative in ${ax_cxx_compile_alternatives}; do\n+      for switch in -std=c++${alternative} +std=c++${alternative} \"-h std=c++${alternative}\"; do\n+        cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n+        AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n+                       $cachevar,\n+          [ac_save_CXX=\"$CXX\"\n+           CXX=\"$CXX $switch\"\n+           AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n+            [eval $cachevar=yes],\n+            [eval $cachevar=no])\n+           CXX=\"$ac_save_CXX\"])\n+        if eval test x\\$$cachevar = xyes; then\n+          CXX=\"$CXX $switch\"\n+          if test -n \"$CXXCPP\" ; then\n+            CXXCPP=\"$CXXCPP $switch\"\n+          fi\n+          ac_success=yes\n+          break\n+        fi\n+      done\n+      if test x$ac_success = xyes; then\n+        break\n+      fi\n+    done\n+  fi])\n+  AC_LANG_POP([C++])\n+  if test x$ax_cxx_compile_cxx$1_required = xtrue; then\n+    if test x$ac_success = xno; then\n+      AC_MSG_ERROR([*** A compiler with support for C++$1 language features is required.])\n+    fi\n+  fi\n+  if test x$ac_success = xno; then\n+    HAVE_CXX$1=0\n+    AC_MSG_NOTICE([No compiler with C++$1 support was found])\n+  else\n+    HAVE_CXX$1=1\n+    AC_DEFINE(HAVE_CXX$1,1,\n+              [define if the compiler supports basic C++$1 syntax])\n+  fi\n+  AC_SUBST(HAVE_CXX$1)\n+])\n+\n+\n+dnl  Test body for checking C++11 support\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_11],\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n+)\n+\n+\n+dnl  Test body for checking C++14 support\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_14],\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_14\n+)\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_17],\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_14\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_17\n+)\n+\n+dnl  Tests for new features in C++11\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_11], [[\n+\n+// If the compiler admits that it is not ready for C++11, why torture it?\n+// Hopefully, this will speed up the test.\n+\n+#ifndef __cplusplus\n+\n+#error \"This is not a C++ compiler\"\n+\n+#elif __cplusplus < 201103L\n+\n+#error \"This is not a C++11 compiler\"\n+\n+#else\n+\n+namespace cxx11\n+{\n+\n+  namespace test_static_assert\n+  {\n+\n+    template <typename T>\n+    struct check\n+    {\n+      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n+    };\n+\n+  }\n+\n+  namespace test_final_override\n+  {\n+\n+    struct Base\n+    {\n+      virtual ~Base() {}\n+      virtual void f() {}\n+    };\n+\n+    struct Derived : public Base\n+    {\n+      virtual ~Derived() override {}\n+      virtual void f() override {}\n+    };\n+\n+  }\n+\n+  namespace test_double_right_angle_brackets\n+  {\n+\n+    template < typename T >\n+    struct check {};\n+\n+    typedef check<void> single_type;\n+    typedef check<check<void>> double_type;\n+    typedef check<check<check<void>>> triple_type;\n+    typedef check<check<check<check<void>>>> quadruple_type;\n+\n+  }\n+\n+  namespace test_decltype\n+  {\n+\n+    int\n+    f()\n+    {\n+      int a = 1;\n+      decltype(a) b = 2;\n+      return a + b;\n+    }\n+\n+  }\n+\n+  namespace test_type_deduction\n+  {\n+\n+    template < typename T1, typename T2 >\n+    struct is_same\n+    {\n+      static const bool value = false;\n+    };\n+\n+    template < typename T >\n+    struct is_same<T, T>\n+    {\n+      static const bool value = true;\n+    };\n+\n+    template < typename T1, typename T2 >\n+    auto\n+    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n+    {\n+      return a1 + a2;\n+    }\n+\n+    int\n+    test(const int c, volatile int v)\n+    {\n+      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n+      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n+      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n+      auto ac = c;\n+      auto av = v;\n+      auto sumi = ac + av + 'x';\n+      auto sumf = ac + av + 1.0;\n+      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n+      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n+      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n+      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n+      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n+      return (sumf > 0.0) ? sumi : add(c, v);\n+    }\n+\n+  }\n+\n+  namespace test_noexcept\n+  {\n+\n+    int f() { return 0; }\n+    int g() noexcept { return 0; }\n+\n+    static_assert(noexcept(f()) == false, \"\");\n+    static_assert(noexcept(g()) == true, \"\");\n+\n+  }\n+\n+  namespace test_constexpr\n+  {\n+\n+    template < typename CharT >\n+    unsigned long constexpr\n+    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n+    {\n+      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n+    }\n+\n+    template < typename CharT >\n+    unsigned long constexpr\n+    strlen_c(const CharT *const s) noexcept\n+    {\n+      return strlen_c_r(s, 0UL);\n+    }\n+\n+    static_assert(strlen_c(\"\") == 0UL, \"\");\n+    static_assert(strlen_c(\"1\") == 1UL, \"\");\n+    static_assert(strlen_c(\"example\") == 7UL, \"\");\n+    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n+\n+  }\n+\n+  namespace test_rvalue_references\n+  {\n+\n+    template < int N >\n+    struct answer\n+    {\n+      static constexpr int value = N;\n+    };\n+\n+    answer<1> f(int&)       { return answer<1>(); }\n+    answer<2> f(const int&) { return answer<2>(); }\n+    answer<3> f(int&&)      { return answer<3>(); }\n+\n+    void\n+    test()\n+    {\n+      int i = 0;\n+      const int c = 0;\n+      static_assert(decltype(f(i))::value == 1, \"\");\n+      static_assert(decltype(f(c))::value == 2, \"\");\n+      static_assert(decltype(f(0))::value == 3, \"\");\n+    }\n+\n+  }\n+\n+  namespace test_uniform_initialization\n+  {\n+\n+    struct test\n+    {\n+      static const int zero {};\n+      static const int one {1};\n+    };\n+\n+    static_assert(test::zero == 0, \"\");\n+    static_assert(test::one == 1, \"\");\n+\n+  }\n+\n+  namespace test_lambdas\n+  {\n+\n+    void\n+    test1()\n+    {\n+      auto lambda1 = [](){};\n+      auto lambda2 = lambda1;\n+      lambda1();\n+      lambda2();\n+    }\n+\n+    int\n+    test2()\n+    {\n+      auto a = [](int i, int j){ return i + j; }(1, 2);\n+      auto b = []() -> int { return '0'; }();\n+      auto c = [=](){ return a + b; }();\n+      auto d = [&](){ return c; }();\n+      auto e = [a, &b](int x) mutable {\n+        const auto identity = [](int y){ return y; };\n+        for (auto i = 0; i < a; ++i)\n+          a += b--;\n+        return x + identity(a + b);\n+      }(0);\n+      return a + b + c + d + e;\n+    }\n+\n+    int\n+    test3()\n+    {\n+      const auto nullary = [](){ return 0; };\n+      const auto unary = [](int x){ return x; };\n+      using nullary_t = decltype(nullary);\n+      using unary_t = decltype(unary);\n+      const auto higher1st = [](nullary_t f){ return f(); };\n+      const auto higher2nd = [unary](nullary_t f1){\n+        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n+      };\n+      return higher1st(nullary) + higher2nd(nullary)(unary);\n+    }\n+\n+  }\n+\n+  namespace test_variadic_templates\n+  {\n+\n+    template <int...>\n+    struct sum;\n+\n+    template <int N0, int... N1toN>\n+    struct sum<N0, N1toN...>\n+    {\n+      static constexpr auto value = N0 + sum<N1toN...>::value;\n+    };\n+\n+    template <>\n+    struct sum<>\n+    {\n+      static constexpr auto value = 0;\n+    };\n+\n+    static_assert(sum<>::value == 0, \"\");\n+    static_assert(sum<1>::value == 1, \"\");\n+    static_assert(sum<23>::value == 23, \"\");\n+    static_assert(sum<1, 2>::value == 3, \"\");\n+    static_assert(sum<5, 5, 11>::value == 21, \"\");\n+    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n+\n+  }\n+\n+  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n+  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n+  // because of this.\n+  namespace test_template_alias_sfinae\n+  {\n+\n+    struct foo {};\n+\n+    template<typename T>\n+    using member = typename T::member_type;\n+\n+    template<typename T>\n+    void func(...) {}\n+\n+    template<typename T>\n+    void func(member<T>*) {}\n+\n+    void test();\n+\n+    void test() { func<foo>(0); }\n+\n+  }\n+\n+}  // namespace cxx11\n+\n+#endif  // __cplusplus >= 201103L\n+\n+]])\n+\n+\n+dnl  Tests for new features in C++14\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_14], [[\n+\n+// If the compiler admits that it is not ready for C++14, why torture it?\n+// Hopefully, this will speed up the test.\n+\n+#ifndef __cplusplus\n+\n+#error \"This is not a C++ compiler\"\n+\n+#elif __cplusplus < 201402L\n+\n+#error \"This is not a C++14 compiler\"\n+\n+#else\n+\n+namespace cxx14\n+{\n+\n+  namespace test_polymorphic_lambdas\n+  {\n+\n+    int\n+    test()\n+    {\n+      const auto lambda = [](auto&&... args){\n+        const auto istiny = [](auto x){\n+          return (sizeof(x) == 1UL) ? 1 : 0;\n+        };\n+        const int aretiny[] = { istiny(args)... };\n+        return aretiny[0];\n+      };\n+      return lambda(1, 1L, 1.0f, '1');\n+    }\n+\n+  }\n+\n+  namespace test_binary_literals\n+  {\n+\n+    constexpr auto ivii = 0b0000000000101010;\n+    static_assert(ivii == 42, \"wrong value\");\n+\n+  }\n+\n+  namespace test_generalized_constexpr\n+  {\n+\n+    template < typename CharT >\n+    constexpr unsigned long\n+    strlen_c(const CharT *const s) noexcept\n+    {\n+      auto length = 0UL;\n+      for (auto p = s; *p; ++p)\n+        ++length;\n+      return length;\n+    }\n+\n+    static_assert(strlen_c(\"\") == 0UL, \"\");\n+    static_assert(strlen_c(\"x\") == 1UL, \"\");\n+    static_assert(strlen_c(\"test\") == 4UL, \"\");\n+    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n+\n+  }\n+\n+  namespace test_lambda_init_capture\n+  {\n+\n+    int\n+    test()\n+    {\n+      auto x = 0;\n+      const auto lambda1 = [a = x](int b){ return a + b; };\n+      const auto lambda2 = [a = lambda1(x)](){ return a; };\n+      return lambda2();\n+    }\n+\n+  }\n+\n+  namespace test_digit_separators\n+  {\n+\n+    constexpr auto ten_million = 100'000'000;\n+    static_assert(ten_million == 100000000, \"\");\n+\n+  }\n+\n+  namespace test_return_type_deduction\n+  {\n+\n+    auto f(int& x) { return x; }\n+    decltype(auto) g(int& x) { return x; }\n+\n+    template < typename T1, typename T2 >\n+    struct is_same\n+    {\n+      static constexpr auto value = false;\n+    };\n+\n+    template < typename T >\n+    struct is_same<T, T>\n+    {\n+      static constexpr auto value = true;\n+    };\n+\n+    int\n+    test()\n+    {\n+      auto x = 0;\n+      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n+      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n+      return x;\n+    }\n+\n+  }\n+\n+}  // namespace cxx14\n+\n+#endif  // __cplusplus >= 201402L\n+\n+]])\n+\n+\n+dnl  Tests for new features in C++17\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_17], [[\n+\n+// If the compiler admits that it is not ready for C++17, why torture it?\n+// Hopefully, this will speed up the test.\n+\n+#ifndef __cplusplus\n+\n+#error \"This is not a C++ compiler\"\n+\n+#elif __cplusplus < 201703L\n+\n+#error \"This is not a C++17 compiler\"\n+\n+#else\n+\n+#include <initializer_list>\n+#include <utility>\n+#include <type_traits>\n+\n+namespace cxx17\n+{\n+\n+  namespace test_constexpr_lambdas\n+  {\n+\n+    constexpr int foo = [](){return 42;}();\n+\n+  }\n+\n+  namespace test::nested_namespace::definitions\n+  {\n+\n+  }\n+\n+  namespace test_fold_expression\n+  {\n+\n+    template<typename... Args>\n+    int multiply(Args... args)\n+    {\n+      return (args * ... * 1);\n+    }\n+\n+    template<typename... Args>\n+    bool all(Args... args)\n+    {\n+      return (args && ...);\n+    }\n+\n+  }\n+\n+  namespace test_extended_static_assert\n+  {\n+\n+    static_assert (true);\n+\n+  }\n+\n+  namespace test_auto_brace_init_list\n+  {\n+\n+    auto foo = {5};\n+    auto bar {5};\n+\n+    static_assert(std::is_same<std::initializer_list<int>, decltype(foo)>::value);\n+    static_assert(std::is_same<int, decltype(bar)>::value);\n+  }\n+\n+  namespace test_typename_in_template_template_parameter\n+  {\n+\n+    template<template<typename> typename X> struct D;\n+\n+  }\n+\n+  namespace test_fallthrough_nodiscard_maybe_unused_attributes\n+  {\n+\n+    int f1()\n+    {\n+      return 42;\n+    }\n+\n+    [[nodiscard]] int f2()\n+    {\n+      [[maybe_unused]] auto unused = f1();\n+\n+      switch (f1())\n+      {\n+      case 17:\n+        f1();\n+        [[fallthrough]];\n+      case 42:\n+        f1();\n+      }\n+      return f1();\n+    }\n+\n+  }\n+\n+  namespace test_extended_aggregate_initialization\n+  {\n+\n+    struct base1\n+    {\n+      int b1, b2 = 42;\n+    };\n+\n+    struct base2\n+    {\n+      base2() {\n+        b3 = 42;\n+      }\n+      int b3;\n+    };\n+\n+    struct derived : base1, base2\n+    {\n+        int d;\n+    };\n+\n+    derived d1 {{1, 2}, {}, 4};  // full initialization\n+    derived d2 {{}, {}, 4};      // value-initialized bases\n+\n+  }\n+\n+  namespace test_general_range_based_for_loop\n+  {\n+\n+    struct iter\n+    {\n+      int i;\n+\n+      int& operator* ()\n+      {\n+        return i;\n+      }\n+\n+      const int& operator* () const\n+      {\n+        return i;\n+      }\n+\n+      iter& operator++()\n+      {\n+        ++i;\n+        return *this;\n+      }\n+    };\n+\n+    struct sentinel\n+    {\n+      int i;\n+    };\n+\n+    bool operator== (const iter& i, const sentinel& s)\n+    {\n+      return i.i == s.i;\n+    }\n+\n+    bool operator!= (const iter& i, const sentinel& s)\n+    {\n+      return !(i == s);\n+    }\n+\n+    struct range\n+    {\n+      iter begin() const\n+      {\n+        return {0};\n+      }\n+\n+      sentinel end() const\n+      {\n+        return {5};\n+      }\n+    };\n+\n+    void f()\n+    {\n+      range r {};\n+\n+      for (auto i : r)\n+      {\n+        [[maybe_unused]] auto v = i;\n+      }\n+    }\n+\n+  }\n+\n+  namespace test_lambda_capture_asterisk_this_by_value\n+  {\n+\n+    struct t\n+    {\n+      int i;\n+      int foo()\n+      {\n+        return [*this]()\n+        {\n+          return i;\n+        }();\n+      }\n+    };\n+\n+  }\n+\n+  namespace test_enum_class_construction\n+  {\n+\n+    enum class byte : unsigned char\n+    {};\n+\n+    byte foo {42};\n+\n+  }\n+\n+  namespace test_constexpr_if\n+  {\n+\n+    template <bool cond>\n+    int f ()\n+    {\n+      if constexpr(cond)\n+      {\n+        return 13;\n+      }\n+      else\n+      {\n+        return 42;\n+      }\n+    }\n+\n+  }\n+\n+  namespace test_selection_statement_with_initializer\n+  {\n+\n+    int f()\n+    {\n+      return 13;\n+    }\n+\n+    int f2()\n+    {\n+      if (auto i = f(); i > 0)\n+      {\n+        return 3;\n+      }\n+\n+      switch (auto i = f(); i + 4)\n+      {\n+      case 17:\n+        return 2;\n+\n+      default:\n+        return 1;\n+      }\n+    }\n+\n+  }\n+\n+  namespace test_template_argument_deduction_for_class_templates\n+  {\n+\n+    template <typename T1, typename T2>\n+    struct pair\n+    {\n+      pair (T1 p1, T2 p2)\n+        : m1 {p1},\n+          m2 {p2}\n+      {}\n+\n+      T1 m1;\n+      T2 m2;\n+    };\n+\n+    void f()\n+    {\n+      [[maybe_unused]] auto p = pair{13, 42u};\n+    }\n+\n+  }\n+\n+  namespace test_non_type_auto_template_parameters\n+  {\n+\n+    template <auto n>\n+    struct B\n+    {};\n+\n+    B<5> b1;\n+    B<'a'> b2;\n+\n+  }\n+\n+  namespace test_structured_bindings\n+  {\n+\n+    int arr[2] = { 1, 2 };\n+    std::pair<int, int> pr = { 1, 2 };\n+\n+    auto f1() -> int(&)[2]\n+    {\n+      return arr;\n+    }\n+\n+    auto f2() -> std::pair<int, int>&\n+    {\n+      return pr;\n+    }\n+\n+    struct S\n+    {\n+      int x1 : 2;\n+      volatile double y1;\n+    };\n+\n+    S f3()\n+    {\n+      return {};\n+    }\n+\n+    auto [ x1, y1 ] = f1();\n+    auto& [ xr1, yr1 ] = f1();\n+    auto [ x2, y2 ] = f2();\n+    auto& [ xr2, yr2 ] = f2();\n+    const auto [ x3, y3 ] = f3();\n+\n+  }\n+\n+  namespace test_exception_spec_type_system\n+  {\n+\n+    struct Good {};\n+    struct Bad {};\n+\n+    void g1() noexcept;\n+    void g2();\n+\n+    template<typename T>\n+    Bad\n+    f(T*, T*);\n+\n+    template<typename T1, typename T2>\n+    Good\n+    f(T1*, T2*);\n+\n+    static_assert (std::is_same_v<Good, decltype(f(g1, g2))>);\n+\n+  }\n+\n+  namespace test_inline_variables\n+  {\n+\n+    template<class T> void f(T)\n+    {}\n+\n+    template<class T> inline T g(T)\n+    {\n+      return T{};\n+    }\n+\n+    template<> inline void f<>(int)\n+    {}\n+\n+    template<> int g<>(int)\n+    {\n+      return 5;\n+    }\n+\n+  }\n+\n+}  // namespace cxx17\n+\n+#endif  // __cplusplus < 201703L\n+\n+]])"
      },
      {
        "sha": "c788ca9bd435fbfe4e1642281aabd7f9492786ff",
        "filename": "build-aux/m4/ax_gcc_func_attribute.m4",
        "status": "added",
        "additions": 223,
        "deletions": 0,
        "changes": 223,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_gcc_func_attribute.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_gcc_func_attribute.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_gcc_func_attribute.m4?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,223 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_gcc_func_attribute.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_GCC_FUNC_ATTRIBUTE(ATTRIBUTE)\n+#\n+# DESCRIPTION\n+#\n+#   This macro checks if the compiler supports one of GCC's function\n+#   attributes; many other compilers also provide function attributes with\n+#   the same syntax. Compiler warnings are used to detect supported\n+#   attributes as unsupported ones are ignored by default so quieting\n+#   warnings when using this macro will yield false positives.\n+#\n+#   The ATTRIBUTE parameter holds the name of the attribute to be checked.\n+#\n+#   If ATTRIBUTE is supported define HAVE_FUNC_ATTRIBUTE_<ATTRIBUTE>.\n+#\n+#   The macro caches its result in the ax_cv_have_func_attribute_<attribute>\n+#   variable.\n+#\n+#   The macro currently supports the following function attributes:\n+#\n+#    alias\n+#    aligned\n+#    alloc_size\n+#    always_inline\n+#    artificial\n+#    cold\n+#    const\n+#    constructor\n+#    constructor_priority for constructor attribute with priority\n+#    deprecated\n+#    destructor\n+#    dllexport\n+#    dllimport\n+#    error\n+#    externally_visible\n+#    flatten\n+#    format\n+#    format_arg\n+#    gnu_inline\n+#    hot\n+#    ifunc\n+#    leaf\n+#    malloc\n+#    noclone\n+#    noinline\n+#    nonnull\n+#    noreturn\n+#    nothrow\n+#    optimize\n+#    pure\n+#    unused\n+#    used\n+#    visibility\n+#    warning\n+#    warn_unused_result\n+#    weak\n+#    weakref\n+#\n+#   Unsuppored function attributes will be tested with a prototype returning\n+#   an int and not accepting any arguments and the result of the check might\n+#   be wrong or meaningless so use with care.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2013 Gabriele Svelto <gabriele.svelto@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved.  This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 3\n+\n+AC_DEFUN([AX_GCC_FUNC_ATTRIBUTE], [\n+    AS_VAR_PUSHDEF([ac_var], [ax_cv_have_func_attribute_$1])\n+\n+    AC_CACHE_CHECK([for __attribute__(($1))], [ac_var], [\n+        AC_LINK_IFELSE([AC_LANG_PROGRAM([\n+            m4_case([$1],\n+                [alias], [\n+                    int foo( void ) { return 0; }\n+                    int bar( void ) __attribute__(($1(\"foo\")));\n+                ],\n+                [aligned], [\n+                    int foo( void ) __attribute__(($1(32)));\n+                ],\n+                [alloc_size], [\n+                    void *foo(int a) __attribute__(($1(1)));\n+                ],\n+                [always_inline], [\n+                    inline __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [artificial], [\n+                    inline __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [cold], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [const], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [constructor_priority], [\n+                    int foo( void ) __attribute__((__constructor__(65535/2)));\n+                ],\n+                [constructor], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [deprecated], [\n+                    int foo( void ) __attribute__(($1(\"\")));\n+                ],\n+                [destructor], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [dllexport], [\n+                    __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [dllimport], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [error], [\n+                    int foo( void ) __attribute__(($1(\"\")));\n+                ],\n+                [externally_visible], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [flatten], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [format], [\n+                    int foo(const char *p, ...) __attribute__(($1(printf, 1, 2)));\n+                ],\n+                [format_arg], [\n+                    char *foo(const char *p) __attribute__(($1(1)));\n+                ],\n+                [gnu_inline], [\n+                    inline __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [hot], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [ifunc], [\n+                    int my_foo( void ) { return 0; }\n+                    static int (*resolve_foo(void))(void) { return my_foo; }\n+                    int foo( void ) __attribute__(($1(\"resolve_foo\")));\n+                ],\n+                [leaf], [\n+                    __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [malloc], [\n+                    void *foo( void ) __attribute__(($1));\n+                ],\n+                [noclone], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [noinline], [\n+                    __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [nonnull], [\n+                    int foo(char *p) __attribute__(($1(1)));\n+                ],\n+                [noreturn], [\n+                    void foo( void ) __attribute__(($1));\n+                ],\n+                [nothrow], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [optimize], [\n+                    __attribute__(($1(3))) int foo( void ) { return 0; }\n+                ],\n+                [pure], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [unused], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [used], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [visibility], [\n+                    int foo_def( void ) __attribute__(($1(\"default\")));\n+                    int foo_hid( void ) __attribute__(($1(\"hidden\")));\n+                    int foo_int( void ) __attribute__(($1(\"internal\")));\n+                    int foo_pro( void ) __attribute__(($1(\"protected\")));\n+                ],\n+                [warning], [\n+                    int foo( void ) __attribute__(($1(\"\")));\n+                ],\n+                [warn_unused_result], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [weak], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [weakref], [\n+                    static int foo( void ) { return 0; }\n+                    static int bar( void ) __attribute__(($1(\"foo\")));\n+                ],\n+                [\n+                 m4_warn([syntax], [Unsupported attribute $1, the test may fail])\n+                 int foo( void ) __attribute__(($1));\n+                ]\n+            )], [])\n+            ],\n+            dnl GCC doesn't exit with an error if an unknown attribute is\n+            dnl provided but only outputs a warning, so accept the attribute\n+            dnl only if no warning were issued.\n+            [AS_IF([test -s conftest.err],\n+                [AS_VAR_SET([ac_var], [no])],\n+                [AS_VAR_SET([ac_var], [yes])])],\n+            [AS_VAR_SET([ac_var], [no])])\n+    ])\n+\n+    AS_IF([test yes = AS_VAR_GET([ac_var])],\n+        [AC_DEFINE_UNQUOTED(AS_TR_CPP(HAVE_FUNC_ATTRIBUTE_$1), 1,\n+            [Define to 1 if the system has the `$1' function attribute])], [])\n+\n+    AS_VAR_POPDEF([ac_var])\n+])"
      },
      {
        "sha": "1598d077ff020f1f0be8388fded01c871c946354",
        "filename": "build-aux/m4/ax_pthread.m4",
        "status": "added",
        "additions": 507,
        "deletions": 0,
        "changes": 507,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_pthread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/ax_pthread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_pthread.m4?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,507 @@\n+# ===========================================================================\n+#        https://www.gnu.org/software/autoconf-archive/ax_pthread.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_PTHREAD([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])\n+#\n+# DESCRIPTION\n+#\n+#   This macro figures out how to build C programs using POSIX threads. It\n+#   sets the PTHREAD_LIBS output variable to the threads library and linker\n+#   flags, and the PTHREAD_CFLAGS output variable to any special C compiler\n+#   flags that are needed. (The user can also force certain compiler\n+#   flags/libs to be tested by setting these environment variables.)\n+#\n+#   Also sets PTHREAD_CC to any special C compiler that is needed for\n+#   multi-threaded programs (defaults to the value of CC otherwise). (This\n+#   is necessary on AIX to use the special cc_r compiler alias.)\n+#\n+#   NOTE: You are assumed to not only compile your program with these flags,\n+#   but also to link with them as well. For example, you might link with\n+#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n+#\n+#   If you are only building threaded programs, you may wish to use these\n+#   variables in your default LIBS, CFLAGS, and CC:\n+#\n+#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n+#     CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+#     CC=\"$PTHREAD_CC\"\n+#\n+#   In addition, if the PTHREAD_CREATE_JOINABLE thread-attribute constant\n+#   has a nonstandard name, this macro defines PTHREAD_CREATE_JOINABLE to\n+#   that name (e.g. PTHREAD_CREATE_UNDETACHED on AIX).\n+#\n+#   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the\n+#   PTHREAD_PRIO_INHERIT symbol is defined when compiling with\n+#   PTHREAD_CFLAGS.\n+#\n+#   ACTION-IF-FOUND is a list of shell commands to run if a threads library\n+#   is found, and ACTION-IF-NOT-FOUND is a list of commands to run it if it\n+#   is not found. If ACTION-IF-FOUND is not specified, the default action\n+#   will define HAVE_PTHREAD.\n+#\n+#   Please let the authors know if this macro fails on any platform, or if\n+#   you have any other suggestions or comments. This macro was based on work\n+#   by SGJ on autoconf scripts for FFTW (http://www.fftw.org/) (with help\n+#   from M. Frigo), as well as ac_pthread and hb_pthread macros posted by\n+#   Alejandro Forero Cuervo to the autoconf macro repository. We are also\n+#   grateful for the helpful feedback of numerous users.\n+#\n+#   Updated for Autoconf 2.68 by Daniel Richard G.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Steven G. Johnson <stevenj@alum.mit.edu>\n+#   Copyright (c) 2011 Daniel Richard G. <skunk@iSKUNK.ORG>\n+#   Copyright (c) 2019 Marc Stevens <marc.stevens@cwi.nl>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <https://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 27\n+\n+AU_ALIAS([ACX_PTHREAD], [AX_PTHREAD])\n+AC_DEFUN([AX_PTHREAD], [\n+AC_REQUIRE([AC_CANONICAL_HOST])\n+AC_REQUIRE([AC_PROG_CC])\n+AC_REQUIRE([AC_PROG_SED])\n+AC_LANG_PUSH([C])\n+ax_pthread_ok=no\n+\n+# We used to check for pthread.h first, but this fails if pthread.h\n+# requires special compiler flags (e.g. on Tru64 or Sequent).\n+# It gets checked for in the link test anyway.\n+\n+# First of all, check if the user has set any of the PTHREAD_LIBS,\n+# etcetera environment variables, and if threads linking works using\n+# them:\n+if test \"x$PTHREAD_CFLAGS$PTHREAD_LIBS\" != \"x\"; then\n+        ax_pthread_save_CC=\"$CC\"\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n+        AS_IF([test \"x$PTHREAD_CC\" != \"x\"], [CC=\"$PTHREAD_CC\"])\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+        AC_MSG_CHECKING([for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS])\n+        AC_LINK_IFELSE([AC_LANG_CALL([], [pthread_join])], [ax_pthread_ok=yes])\n+        AC_MSG_RESULT([$ax_pthread_ok])\n+        if test \"x$ax_pthread_ok\" = \"xno\"; then\n+                PTHREAD_LIBS=\"\"\n+                PTHREAD_CFLAGS=\"\"\n+        fi\n+        CC=\"$ax_pthread_save_CC\"\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n+fi\n+\n+# We must check for the threads library under a number of different\n+# names; the ordering is very important because some systems\n+# (e.g. DEC) have both -lpthread and -lpthreads, where one of the\n+# libraries is broken (non-POSIX).\n+\n+# Create a list of thread flags to try. Items with a \",\" contain both\n+# C compiler flags (before \",\") and linker flags (after \",\"). Other items\n+# starting with a \"-\" are C compiler flags, and remaining items are\n+# library names, except for \"none\" which indicates that we try without\n+# any flags at all, and \"pthread-config\" which is a program returning\n+# the flags for the Pth emulation library.\n+\n+ax_pthread_flags=\"pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n+\n+# The ordering *is* (sometimes) important.  Some notes on the\n+# individual items follow:\n+\n+# pthreads: AIX (must check this before -lpthread)\n+# none: in case threads are in libc; should be tried before -Kthread and\n+#       other compiler flags to prevent continual compiler warnings\n+# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n+# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads), Tru64\n+#           (Note: HP C rejects this with \"bad form for `-t' option\")\n+# -pthreads: Solaris/gcc (Note: HP C also rejects)\n+# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n+#      doesn't hurt to check since this sometimes defines pthreads and\n+#      -D_REENTRANT too), HP C (must be checked before -lpthread, which\n+#      is present but should not be used directly; and before -mthreads,\n+#      because the compiler interprets this as \"-mt\" + \"-hreads\")\n+# -mthreads: Mingw32/gcc, Lynx/gcc\n+# pthread: Linux, etcetera\n+# --thread-safe: KAI C++\n+# pthread-config: use pthread-config program (for GNU Pth library)\n+\n+case $host_os in\n+\n+        freebsd*)\n+\n+        # -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n+        # lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n+\n+        ax_pthread_flags=\"-kthread lthread $ax_pthread_flags\"\n+        ;;\n+\n+        hpux*)\n+\n+        # From the cc(1) man page: \"[-mt] Sets various -D flags to enable\n+        # multi-threading and also sets -lpthread.\"\n+\n+        ax_pthread_flags=\"-mt -pthread pthread $ax_pthread_flags\"\n+        ;;\n+\n+        openedition*)\n+\n+        # IBM z/OS requires a feature-test macro to be defined in order to\n+        # enable POSIX threads at all, so give the user a hint if this is\n+        # not set. (We don't define these ourselves, as they can affect\n+        # other portions of the system API in unpredictable ways.)\n+\n+        AC_EGREP_CPP([AX_PTHREAD_ZOS_MISSING],\n+            [\n+#            if !defined(_OPEN_THREADS) && !defined(_UNIX03_THREADS)\n+             AX_PTHREAD_ZOS_MISSING\n+#            endif\n+            ],\n+            [AC_MSG_WARN([IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.])])\n+        ;;\n+\n+        solaris*)\n+\n+        # On Solaris (at least, for some versions), libc contains stubbed\n+        # (non-functional) versions of the pthreads routines, so link-based\n+        # tests will erroneously succeed. (N.B.: The stubs are missing\n+        # pthread_cleanup_push, or rather a function called by this macro,\n+        # so we could check for that, but who knows whether they'll stub\n+        # that too in a future libc.)  So we'll check first for the\n+        # standard Solaris way of linking pthreads (-mt -lpthread).\n+\n+        ax_pthread_flags=\"-mt,-lpthread pthread $ax_pthread_flags\"\n+        ;;\n+esac\n+\n+# Are we compiling with Clang?\n+\n+AC_CACHE_CHECK([whether $CC is Clang],\n+    [ax_cv_PTHREAD_CLANG],\n+    [ax_cv_PTHREAD_CLANG=no\n+     # Note that Autoconf sets GCC=yes for Clang as well as GCC\n+     if test \"x$GCC\" = \"xyes\"; then\n+        AC_EGREP_CPP([AX_PTHREAD_CC_IS_CLANG],\n+            [/* Note: Clang 2.7 lacks __clang_[a-z]+__ */\n+#            if defined(__clang__) && defined(__llvm__)\n+             AX_PTHREAD_CC_IS_CLANG\n+#            endif\n+            ],\n+            [ax_cv_PTHREAD_CLANG=yes])\n+     fi\n+    ])\n+ax_pthread_clang=\"$ax_cv_PTHREAD_CLANG\"\n+\n+\n+# GCC generally uses -pthread, or -pthreads on some platforms (e.g. SPARC)\n+\n+# Note that for GCC and Clang -pthread generally implies -lpthread,\n+# except when -nostdlib is passed.\n+# This is problematic using libtool to build C++ shared libraries with pthread:\n+# [1] https://gcc.gnu.org/bugzilla/show_bug.cgi?id=25460\n+# [2] https://bugzilla.redhat.com/show_bug.cgi?id=661333\n+# [3] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=468555\n+# To solve this, first try -pthread together with -lpthread for GCC\n+\n+AS_IF([test \"x$GCC\" = \"xyes\"],\n+      [ax_pthread_flags=\"-pthread,-lpthread -pthread -pthreads $ax_pthread_flags\"])\n+\n+# Clang takes -pthread (never supported any other flag), but we'll try with -lpthread first\n+\n+AS_IF([test \"x$ax_pthread_clang\" = \"xyes\"],\n+      [ax_pthread_flags=\"-pthread,-lpthread -pthread\"])\n+\n+\n+# The presence of a feature test macro requesting re-entrant function\n+# definitions is, on some systems, a strong hint that pthreads support is\n+# correctly enabled\n+\n+case $host_os in\n+        darwin* | hpux* | linux* | osf* | solaris*)\n+        ax_pthread_check_macro=\"_REENTRANT\"\n+        ;;\n+\n+        aix*)\n+        ax_pthread_check_macro=\"_THREAD_SAFE\"\n+        ;;\n+\n+        *)\n+        ax_pthread_check_macro=\"--\"\n+        ;;\n+esac\n+AS_IF([test \"x$ax_pthread_check_macro\" = \"x--\"],\n+      [ax_pthread_check_cond=0],\n+      [ax_pthread_check_cond=\"!defined($ax_pthread_check_macro)\"])\n+\n+\n+if test \"x$ax_pthread_ok\" = \"xno\"; then\n+for ax_pthread_try_flag in $ax_pthread_flags; do\n+\n+        case $ax_pthread_try_flag in\n+                none)\n+                AC_MSG_CHECKING([whether pthreads work without any flags])\n+                ;;\n+\n+                *,*)\n+                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\1/\"`\n+                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\2/\"`\n+                AC_MSG_CHECKING([whether pthreads work with \"$PTHREAD_CFLAGS\" and \"$PTHREAD_LIBS\"])\n+                ;;\n+\n+                -*)\n+                AC_MSG_CHECKING([whether pthreads work with $ax_pthread_try_flag])\n+                PTHREAD_CFLAGS=\"$ax_pthread_try_flag\"\n+                ;;\n+\n+                pthread-config)\n+                AC_CHECK_PROG([ax_pthread_config], [pthread-config], [yes], [no])\n+                AS_IF([test \"x$ax_pthread_config\" = \"xno\"], [continue])\n+                PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n+                PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n+                ;;\n+\n+                *)\n+                AC_MSG_CHECKING([for the pthreads library -l$ax_pthread_try_flag])\n+                PTHREAD_LIBS=\"-l$ax_pthread_try_flag\"\n+                ;;\n+        esac\n+\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+\n+        # Check for various functions.  We must include pthread.h,\n+        # since some functions may be macros.  (On the Sequent, we\n+        # need a special flag -Kthread to make this header compile.)\n+        # We check for pthread_join because it is in -lpthread on IRIX\n+        # while pthread_create is in libc.  We check for pthread_attr_init\n+        # due to DEC craziness with -lpthreads.  We check for\n+        # pthread_cleanup_push because it is one of the few pthread\n+        # functions on Solaris that doesn't have a non-functional libc stub.\n+        # We try pthread_create on general principles.\n+\n+        AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>\n+#                       if $ax_pthread_check_cond\n+#                        error \"$ax_pthread_check_macro must be defined\"\n+#                       endif\n+                        static void *some_global = NULL;\n+                        static void routine(void *a)\n+                          {\n+                             /* To avoid any unused-parameter or\n+                                unused-but-set-parameter warning.  */\n+                             some_global = a;\n+                          }\n+                        static void *start_routine(void *a) { return a; }],\n+                       [pthread_t th; pthread_attr_t attr;\n+                        pthread_create(&th, 0, start_routine, 0);\n+                        pthread_join(th, 0);\n+                        pthread_attr_init(&attr);\n+                        pthread_cleanup_push(routine, 0);\n+                        pthread_cleanup_pop(0) /* ; */])],\n+            [ax_pthread_ok=yes],\n+            [])\n+\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n+\n+        AC_MSG_RESULT([$ax_pthread_ok])\n+        AS_IF([test \"x$ax_pthread_ok\" = \"xyes\"], [break])\n+\n+        PTHREAD_LIBS=\"\"\n+        PTHREAD_CFLAGS=\"\"\n+done\n+fi\n+\n+\n+# Clang needs special handling, because older versions handle the -pthread\n+# option in a rather... idiosyncratic way\n+\n+if test \"x$ax_pthread_clang\" = \"xyes\"; then\n+\n+        # Clang takes -pthread; it has never supported any other flag\n+\n+        # (Note 1: This will need to be revisited if a system that Clang\n+        # supports has POSIX threads in a separate library.  This tends not\n+        # to be the way of modern systems, but it's conceivable.)\n+\n+        # (Note 2: On some systems, notably Darwin, -pthread is not needed\n+        # to get POSIX threads support; the API is always present and\n+        # active.  We could reasonably leave PTHREAD_CFLAGS empty.  But\n+        # -pthread does define _REENTRANT, and while the Darwin headers\n+        # ignore this macro, third-party headers might not.)\n+\n+        # However, older versions of Clang make a point of warning the user\n+        # that, in an invocation where only linking and no compilation is\n+        # taking place, the -pthread option has no effect (\"argument unused\n+        # during compilation\").  They expect -pthread to be passed in only\n+        # when source code is being compiled.\n+        #\n+        # Problem is, this is at odds with the way Automake and most other\n+        # C build frameworks function, which is that the same flags used in\n+        # compilation (CFLAGS) are also used in linking.  Many systems\n+        # supported by AX_PTHREAD require exactly this for POSIX threads\n+        # support, and in fact it is often not straightforward to specify a\n+        # flag that is used only in the compilation phase and not in\n+        # linking.  Such a scenario is extremely rare in practice.\n+        #\n+        # Even though use of the -pthread flag in linking would only print\n+        # a warning, this can be a nuisance for well-run software projects\n+        # that build with -Werror.  So if the active version of Clang has\n+        # this misfeature, we search for an option to squash it.\n+\n+        AC_CACHE_CHECK([whether Clang needs flag to prevent \"argument unused\" warning when linking with -pthread],\n+            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG],\n+            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=unknown\n+             # Create an alternate version of $ac_link that compiles and\n+             # links in two steps (.c -> .o, .o -> exe) instead of one\n+             # (.c -> exe), because the warning occurs only in the second\n+             # step\n+             ax_pthread_save_ac_link=\"$ac_link\"\n+             ax_pthread_sed='s/conftest\\.\\$ac_ext/conftest.$ac_objext/g'\n+             ax_pthread_link_step=`$as_echo \"$ac_link\" | sed \"$ax_pthread_sed\"`\n+             ax_pthread_2step_ac_link=\"($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)\"\n+             ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do\n+                AS_IF([test \"x$ax_pthread_try\" = \"xunknown\"], [break])\n+                CFLAGS=\"-Werror -Wunknown-warning-option $ax_pthread_try -pthread $ax_pthread_save_CFLAGS\"\n+                ac_link=\"$ax_pthread_save_ac_link\"\n+                AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],\n+                    [ac_link=\"$ax_pthread_2step_ac_link\"\n+                     AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],\n+                         [break])\n+                    ])\n+             done\n+             ac_link=\"$ax_pthread_save_ac_link\"\n+             CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+             AS_IF([test \"x$ax_pthread_try\" = \"x\"], [ax_pthread_try=no])\n+             ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=\"$ax_pthread_try\"\n+            ])\n+\n+        case \"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" in\n+                no | unknown) ;;\n+                *) PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG $PTHREAD_CFLAGS\" ;;\n+        esac\n+\n+fi # $ax_pthread_clang = yes\n+\n+\n+\n+# Various other checks:\n+if test \"x$ax_pthread_ok\" = \"xyes\"; then\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+\n+        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.\n+        AC_CACHE_CHECK([for joinable pthread attribute],\n+            [ax_cv_PTHREAD_JOINABLE_ATTR],\n+            [ax_cv_PTHREAD_JOINABLE_ATTR=unknown\n+             for ax_pthread_attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n+                 AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],\n+                                                 [int attr = $ax_pthread_attr; return attr /* ; */])],\n+                                [ax_cv_PTHREAD_JOINABLE_ATTR=$ax_pthread_attr; break],\n+                                [])\n+             done\n+            ])\n+        AS_IF([test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xunknown\" && \\\n+               test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xPTHREAD_CREATE_JOINABLE\" && \\\n+               test \"x$ax_pthread_joinable_attr_defined\" != \"xyes\"],\n+              [AC_DEFINE_UNQUOTED([PTHREAD_CREATE_JOINABLE],\n+                                  [$ax_cv_PTHREAD_JOINABLE_ATTR],\n+                                  [Define to necessary symbol if this constant\n+                                   uses a non-standard name on your system.])\n+               ax_pthread_joinable_attr_defined=yes\n+              ])\n+\n+        AC_CACHE_CHECK([whether more special flags are required for pthreads],\n+            [ax_cv_PTHREAD_SPECIAL_FLAGS],\n+            [ax_cv_PTHREAD_SPECIAL_FLAGS=no\n+             case $host_os in\n+             solaris*)\n+             ax_cv_PTHREAD_SPECIAL_FLAGS=\"-D_POSIX_PTHREAD_SEMANTICS\"\n+             ;;\n+             esac\n+            ])\n+        AS_IF([test \"x$ax_cv_PTHREAD_SPECIAL_FLAGS\" != \"xno\" && \\\n+               test \"x$ax_pthread_special_flags_added\" != \"xyes\"],\n+              [PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_SPECIAL_FLAGS $PTHREAD_CFLAGS\"\n+               ax_pthread_special_flags_added=yes])\n+\n+        AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],\n+            [ax_cv_PTHREAD_PRIO_INHERIT],\n+            [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],\n+                                             [[int i = PTHREAD_PRIO_INHERIT;\n+                                               return i;]])],\n+                            [ax_cv_PTHREAD_PRIO_INHERIT=yes],\n+                            [ax_cv_PTHREAD_PRIO_INHERIT=no])\n+            ])\n+        AS_IF([test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\" && \\\n+               test \"x$ax_pthread_prio_inherit_defined\" != \"xyes\"],\n+              [AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], [1], [Have PTHREAD_PRIO_INHERIT.])\n+               ax_pthread_prio_inherit_defined=yes\n+              ])\n+\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n+\n+        # More AIX lossage: compile with *_r variant\n+        if test \"x$GCC\" != \"xyes\"; then\n+            case $host_os in\n+                aix*)\n+                AS_CASE([\"x/$CC\"],\n+                    [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],\n+                    [#handle absolute path differently from PATH based program lookup\n+                     AS_CASE([\"x$CC\"],\n+                         [x/*],\n+                         [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC=\"${CC}_r\"])],\n+                         [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])\n+                ;;\n+            esac\n+        fi\n+fi\n+\n+test -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n+\n+AC_SUBST([PTHREAD_LIBS])\n+AC_SUBST([PTHREAD_CFLAGS])\n+AC_SUBST([PTHREAD_CC])\n+\n+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\n+if test \"x$ax_pthread_ok\" = \"xyes\"; then\n+        ifelse([$1],,[AC_DEFINE([HAVE_PTHREAD],[1],[Define if you have POSIX threads libraries and header files.])],[$1])\n+        :\n+else\n+        ax_pthread_ok=no\n+        $2\n+fi\n+AC_LANG_POP\n+])dnl AX_PTHREAD"
      },
      {
        "sha": "aa0111e5a20f0c2bfd7c8de310dd0102ee1a2c6d",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "added",
        "additions": 78,
        "deletions": 0,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,78 @@\n+dnl Copyright (c) 2013-2015 The Bitcoin Core developers\n+dnl Distributed under the MIT software license, see the accompanying\n+dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+AC_DEFUN([BITCOIN_FIND_BDB48],[\n+  AC_ARG_VAR(BDB_CFLAGS, [C compiler flags for BerkeleyDB, bypasses autodetection])\n+  AC_ARG_VAR(BDB_LIBS, [Linker flags for BerkeleyDB, bypasses autodetection])\n+\n+  if test \"x$BDB_CFLAGS\" = \"x\"; then\n+    AC_MSG_CHECKING([for Berkeley DB C++ headers])\n+    BDB_CPPFLAGS=\n+    bdbpath=X\n+    bdb48path=X\n+    bdbdirlist=\n+    for _vn in 4.8 48 4 5 5.3 ''; do\n+      for _pfx in b lib ''; do\n+        bdbdirlist=\"$bdbdirlist ${_pfx}db${_vn}\"\n+      done\n+    done\n+    for searchpath in $bdbdirlist ''; do\n+      test -n \"${searchpath}\" && searchpath=\"${searchpath}/\"\n+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <${searchpath}db_cxx.h>\n+      ]],[[\n+        #if !((DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 8) || DB_VERSION_MAJOR > 4)\n+          #error \"failed to find bdb 4.8+\"\n+        #endif\n+      ]])],[\n+        if test \"x$bdbpath\" = \"xX\"; then\n+          bdbpath=\"${searchpath}\"\n+        fi\n+      ],[\n+        continue\n+      ])\n+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <${searchpath}db_cxx.h>\n+      ]],[[\n+        #if !(DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR == 8)\n+          #error \"failed to find bdb 4.8\"\n+        #endif\n+      ]])],[\n+        bdb48path=\"${searchpath}\"\n+        break\n+      ],[])\n+    done\n+    if test \"x$bdbpath\" = \"xX\"; then\n+      AC_MSG_RESULT([no])\n+      AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n+    elif test \"x$bdb48path\" = \"xX\"; then\n+      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n+      AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n+        AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n+      ],[\n+        AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n+      ])\n+    else\n+      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n+      bdbpath=\"${bdb48path}\"\n+    fi\n+  else\n+    BDB_CPPFLAGS=${BDB_CFLAGS}\n+  fi\n+  AC_SUBST(BDB_CPPFLAGS)\n+\n+  if test \"x$BDB_LIBS\" = \"x\"; then\n+    # TODO: Ideally this could find the library version and make sure it matches the headers being used\n+    for searchlib in db_cxx-4.8 db_cxx db4_cxx; do\n+      AC_CHECK_LIB([$searchlib],[main],[\n+        BDB_LIBS=\"-l${searchlib}\"\n+        break\n+      ])\n+    done\n+    if test \"x$BDB_LIBS\" = \"x\"; then\n+        AC_MSG_ERROR([libdb_cxx missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n+    fi\n+  fi\n+  AC_SUBST(BDB_LIBS)\n+])"
      },
      {
        "sha": "6c7665830b30325e0c8a9e477cdd64d13236c212",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "added",
        "additions": 357,
        "deletions": 0,
        "changes": 357,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,357 @@\n+dnl Copyright (c) 2013-2016 The Bitcoin Core developers\n+dnl Distributed under the MIT software license, see the accompanying\n+dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+dnl Helper for cases where a qt dependency is not met.\n+dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n+AC_DEFUN([BITCOIN_QT_FAIL],[\n+  if test \"x$bitcoin_qt_want_version\" = xauto && test \"x$bitcoin_qt_force\" != xyes; then\n+    if test \"x$bitcoin_enable_qt\" != xno; then\n+      AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n+    fi\n+    bitcoin_enable_qt=no\n+    bitcoin_enable_qt_test=no\n+  else\n+    AC_MSG_ERROR([$1])\n+  fi\n+])\n+\n+AC_DEFUN([BITCOIN_QT_CHECK],[\n+  if test \"x$bitcoin_enable_qt\" != xno && test \"x$bitcoin_qt_want_version\" != xno; then\n+    true\n+    $1\n+  else\n+    true\n+    $2\n+  fi\n+])\n+\n+dnl BITCOIN_QT_PATH_PROGS([FOO], [foo foo2], [/path/to/search/first], [continue if missing])\n+dnl Helper for finding the path of programs needed for Qt.\n+dnl Inputs: $1: Variable to be set\n+dnl Inputs: $2: List of programs to search for\n+dnl Inputs: $3: Look for $2 here before $PATH\n+dnl Inputs: $4: If \"yes\", don't fail if $2 is not found.\n+dnl Output: $1 is set to the path of $2 if found. $2 are searched in order.\n+AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n+  BITCOIN_QT_CHECK([\n+    if test \"x$3\" != x; then\n+      AC_PATH_PROGS($1,$2,,$3)\n+    else\n+      AC_PATH_PROGS($1,$2)\n+    fi\n+    if test \"x$$1\" = x && test \"x$4\" != xyes; then\n+      BITCOIN_QT_FAIL([$1 not found])\n+    fi\n+  ])\n+])\n+\n+dnl Initialize qt input.\n+dnl This must be called before any other BITCOIN_QT* macros to ensure that\n+dnl input variables are set correctly.\n+dnl CAUTION: Do not use this inside of a conditional.\n+AC_DEFUN([BITCOIN_QT_INIT],[\n+  dnl enable qt support\n+  AC_ARG_WITH([gui],\n+    [AS_HELP_STRING([--with-gui@<:@=no|qt5|auto@:>@],\n+    [build bitcoin-qt GUI (default=auto)])],\n+    [\n+     bitcoin_qt_want_version=$withval\n+     if test \"x$bitcoin_qt_want_version\" = xyes; then\n+       bitcoin_qt_force=yes\n+       bitcoin_qt_want_version=auto\n+     fi\n+    ],\n+    [bitcoin_qt_want_version=auto])\n+\n+  AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n+  AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n+  AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n+  AC_ARG_WITH([qt-translationdir],[AS_HELP_STRING([--with-qt-translationdir=PLUGIN_DIR],[specify qt translation path (overridden by pkgconfig)])], [qt_translation_path=$withval], [])\n+  AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path])], [qt_bin_path=$withval], [])\n+\n+  AC_ARG_WITH([qtdbus],\n+    [AS_HELP_STRING([--with-qtdbus],\n+    [enable DBus support (default is yes if qt is enabled and QtDBus is found, except on Android)])],\n+    [use_dbus=$withval],\n+    [use_dbus=auto])\n+\n+  dnl Android doesn't support D-Bus and certainly doesn't use it for notifications\n+  case $host in\n+    *android*)\n+      if test \"x$use_dbus\" != xyes; then\n+        use_dbus=no\n+      fi\n+    ;;\n+  esac\n+\n+  AC_SUBST(QT_TRANSLATION_DIR,$qt_translation_path)\n+])\n+\n+dnl Find Qt libraries and includes.\n+dnl\n+dnl   BITCOIN_QT_CONFIGURE([MINIMUM-VERSION])\n+dnl\n+dnl Outputs: See _BITCOIN_QT_FIND_LIBS\n+dnl Outputs: Sets variables for all qt-related tools.\n+dnl Outputs: bitcoin_enable_qt, bitcoin_enable_qt_dbus, bitcoin_enable_qt_test\n+AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n+  qt_version=\">= $1\"\n+  qt_lib_prefix=\"Qt5\"\n+  BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS])\n+\n+  dnl This is ugly and complicated. Yuck. Works as follows:\n+  dnl For Qt5, we can check a header to find out whether Qt is build\n+  dnl statically. When Qt is built statically, some plugins must be linked into\n+  dnl the final binary as well.\n+  dnl With Qt5, languages moved into core and the WindowsIntegration plugin was\n+  dnl added.\n+  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n+  dnl results to QT_LIBS.\n+  BITCOIN_QT_CHECK([\n+  TEMP_CPPFLAGS=$CPPFLAGS\n+  TEMP_CXXFLAGS=$CXXFLAGS\n+  CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n+  _BITCOIN_QT_IS_STATIC\n+  if test \"x$bitcoin_cv_static_qt\" = xyes; then\n+    _BITCOIN_QT_FIND_STATIC_PLUGINS\n+    AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n+    if test \"x$TARGET_OS\" != xandroid; then\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n+      AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n+    fi\n+    if test \"x$TARGET_OS\" = xwindows; then\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n+      AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n+    elif test \"x$TARGET_OS\" = xlinux; then\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n+      AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n+    elif test \"x$TARGET_OS\" = xdarwin; then\n+      AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n+      AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n+    elif test \"x$TARGET_OS\" = xandroid; then\n+      QT_LIBS=\"-Wl,--export-dynamic,--undefined=JNI_OnLoad -lqtforandroid -ljnigraphics -landroid -lqtfreetype -lQt5EglSupport $QT_LIBS\"\n+      AC_DEFINE(QT_QPA_PLATFORM_ANDROID, 1, [Define this symbol if the qt platform is android])\n+    fi\n+  fi\n+  CPPFLAGS=$TEMP_CPPFLAGS\n+  CXXFLAGS=$TEMP_CXXFLAGS\n+  ])\n+\n+  if test \"x$qt_bin_path\" = x; then\n+    qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n+  fi\n+\n+  if test \"x$use_hardening\" != xno; then\n+    BITCOIN_QT_CHECK([\n+    AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)\n+    TEMP_CPPFLAGS=$CPPFLAGS\n+    TEMP_CXXFLAGS=$CXXFLAGS\n+    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+    CXXFLAGS=\"$PIE_FLAGS $CXXFLAGS\"\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <QtCore/qconfig.h>\n+        #ifndef QT_VERSION\n+        #  include <QtCore/qglobal.h>\n+        #endif\n+      ]],\n+      [[\n+        #if defined(QT_REDUCE_RELOCATIONS)\n+        choke\n+        #endif\n+      ]])],\n+      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIE_FLAGS ],\n+      [ AC_MSG_RESULT(no); QT_PIE_FLAGS=$PIC_FLAGS]\n+    )\n+    CPPFLAGS=$TEMP_CPPFLAGS\n+    CXXFLAGS=$TEMP_CXXFLAGS\n+    ])\n+  else\n+    BITCOIN_QT_CHECK([\n+    AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)\n+    TEMP_CPPFLAGS=$CPPFLAGS\n+    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <QtCore/qconfig.h>\n+        #ifndef QT_VERSION\n+        #  include <QtCore/qglobal.h>\n+        #endif\n+      ]],\n+      [[\n+        #if defined(QT_REDUCE_RELOCATIONS)\n+        choke\n+        #endif\n+      ]])],\n+      [ AC_MSG_RESULT(no)],\n+      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIC_FLAGS]\n+    )\n+    CPPFLAGS=$TEMP_CPPFLAGS\n+    ])\n+  fi\n+\n+  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt5 moc5 moc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt5 uic5 uic], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt5 rcc5 rcc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt5 lrelease5 lrelease], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt5 lupdate5 lupdate],$qt_bin_path, yes)\n+\n+  MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'\n+  case $host in\n+    *darwin*)\n+     BITCOIN_QT_CHECK([\n+       MOC_DEFS=\"${MOC_DEFS} -DQ_OS_MAC\"\n+       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n+       AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS=\"$QT_LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n+     ])\n+    ;;\n+    *mingw*)\n+       BITCOIN_QT_CHECK([\n+         AX_CHECK_LINK_FLAG([[-mwindows]],[QT_LDFLAGS=\"$QT_LDFLAGS -mwindows\"],[AC_MSG_WARN(-mwindows linker support not detected)])\n+       ])\n+  esac\n+\n+\n+  dnl enable qt support\n+  AC_MSG_CHECKING([whether to build ]AC_PACKAGE_NAME[ GUI])\n+  BITCOIN_QT_CHECK([\n+    bitcoin_enable_qt=yes\n+    bitcoin_enable_qt_test=yes\n+    if test \"x$have_qt_test\" = xno; then\n+      bitcoin_enable_qt_test=no\n+    fi\n+    bitcoin_enable_qt_dbus=no\n+    if test \"x$use_dbus\" != xno && test \"x$have_qt_dbus\" = xyes; then\n+      bitcoin_enable_qt_dbus=yes\n+    fi\n+    if test \"x$use_dbus\" = xyes && test \"x$have_qt_dbus\" = xno; then\n+      AC_MSG_ERROR([libQtDBus not found. Install libQtDBus or remove --with-qtdbus.])\n+    fi\n+    if test \"x$LUPDATE\" = x; then\n+      AC_MSG_WARN([lupdate is required to update qt translations])\n+    fi\n+  ],[\n+    bitcoin_enable_qt=no\n+  ])\n+  if test x$bitcoin_enable_qt = xyes; then\n+    AC_MSG_RESULT([$bitcoin_enable_qt ($qt_lib_prefix)])\n+  else\n+    AC_MSG_RESULT([$bitcoin_enable_qt])\n+  fi\n+\n+  AC_SUBST(QT_PIE_FLAGS)\n+  AC_SUBST(QT_INCLUDES)\n+  AC_SUBST(QT_LIBS)\n+  AC_SUBST(QT_LDFLAGS)\n+  AC_SUBST(QT_DBUS_INCLUDES)\n+  AC_SUBST(QT_DBUS_LIBS)\n+  AC_SUBST(QT_TEST_INCLUDES)\n+  AC_SUBST(QT_TEST_LIBS)\n+  AC_SUBST(QT_SELECT, qt5)\n+  AC_SUBST(MOC_DEFS)\n+])\n+\n+dnl All macros below are internal and should _not_ be used from the main\n+dnl configure.ac.\n+dnl ----\n+\n+dnl Internal. Check if the linked version of Qt was built as static libs.\n+dnl Requires: Qt5.\n+dnl Requires: INCLUDES and LIBS must be populated as necessary.\n+dnl Output: bitcoin_cv_static_qt=yes|no\n+AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n+  AC_CACHE_CHECK(for static Qt, bitcoin_cv_static_qt,[\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <QtCore/qconfig.h>\n+        #ifndef QT_VERSION\n+        #  include <QtCore/qglobal.h>\n+        #endif\n+      ]],\n+      [[\n+        #if !defined(QT_STATIC)\n+        choke\n+        #endif\n+      ]])],\n+      [bitcoin_cv_static_qt=yes],\n+      [bitcoin_cv_static_qt=no])\n+    ])\n+])\n+\n+dnl Internal. Check if the link-requirements for static plugins are met.\n+dnl Requires: INCLUDES and LIBS must be populated as necessary.\n+dnl Inputs: $1: A series of Q_IMPORT_PLUGIN().\n+dnl Inputs: $2: The libraries that resolve $1.\n+dnl Output: QT_LIBS is prepended or configure exits.\n+AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n+  AC_MSG_CHECKING(for static Qt plugins: $2)\n+  CHECK_STATIC_PLUGINS_TEMP_LIBS=\"$LIBS\"\n+  LIBS=\"$2 $QT_LIBS $LIBS\"\n+  AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n+    #define QT_STATICPLUGIN\n+    #include <QtPlugin>\n+    $1]],\n+    [[return 0;]])],\n+    [AC_MSG_RESULT(yes); QT_LIBS=\"$2 $QT_LIBS\"],\n+    [AC_MSG_RESULT(no); BITCOIN_QT_FAIL(Could not resolve: $2)])\n+  LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n+])\n+\n+dnl Internal. Find paths necessary for linking qt static plugins\n+dnl Inputs: qt_plugin_path. optional.\n+dnl Outputs: QT_LIBS is appended\n+AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n+    if test \"x$qt_plugin_path\" != x; then\n+      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n+      if test -d \"$qt_plugin_path/accessible\"; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n+      fi\n+      if test -d \"$qt_plugin_path/platforms/android\"; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms/android -lqtfreetype -lEGL\"\n+      fi\n+      PKG_CHECK_MODULES([QTFONTDATABASE], [Qt5FontDatabaseSupport], [QT_LIBS=\"-lQt5FontDatabaseSupport $QT_LIBS\"])\n+      PKG_CHECK_MODULES([QTEVENTDISPATCHER], [Qt5EventDispatcherSupport], [QT_LIBS=\"-lQt5EventDispatcherSupport $QT_LIBS\"])\n+      PKG_CHECK_MODULES([QTTHEME], [Qt5ThemeSupport], [QT_LIBS=\"-lQt5ThemeSupport $QT_LIBS\"])\n+      PKG_CHECK_MODULES([QTDEVICEDISCOVERY], [Qt5DeviceDiscoverySupport], [QT_LIBS=\"-lQt5DeviceDiscoverySupport $QT_LIBS\"])\n+      PKG_CHECK_MODULES([QTACCESSIBILITY], [Qt5AccessibilitySupport], [QT_LIBS=\"-lQt5AccessibilitySupport $QT_LIBS\"])\n+      PKG_CHECK_MODULES([QTFB], [Qt5FbSupport], [QT_LIBS=\"-lQt5FbSupport $QT_LIBS\"])\n+      if test \"x$TARGET_OS\" = xlinux; then\n+        PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n+      elif test \"x$TARGET_OS\" = xdarwin; then\n+        PKG_CHECK_MODULES([QTCLIPBOARD], [Qt5ClipboardSupport], [QT_LIBS=\"-lQt5ClipboardSupport $QT_LIBS\"])\n+        PKG_CHECK_MODULES([QTGRAPHICS], [Qt5GraphicsSupport], [QT_LIBS=\"-lQt5GraphicsSupport $QT_LIBS\"])\n+        PKG_CHECK_MODULES([QTCGL], [Qt5CglSupport], [QT_LIBS=\"-lQt5CglSupport $QT_LIBS\"])\n+      fi\n+    fi\n+])\n+\n+dnl Internal. Find Qt libraries using pkg-config.\n+dnl Outputs: All necessary QT_* variables are set.\n+dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n+AC_DEFUN([_BITCOIN_QT_FIND_LIBS],[\n+  BITCOIN_QT_CHECK([\n+    PKG_CHECK_MODULES([QT_CORE], [${qt_lib_prefix}Core $qt_version], [],\n+                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Core $qt_version not found])])\n+  ])\n+  BITCOIN_QT_CHECK([\n+    PKG_CHECK_MODULES([QT_GUI], [${qt_lib_prefix}Gui $qt_version], [],\n+                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Gui $qt_version not found])])\n+  ])\n+  BITCOIN_QT_CHECK([\n+    PKG_CHECK_MODULES([QT_WIDGETS], [${qt_lib_prefix}Widgets $qt_version], [],\n+                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Widgets $qt_version not found])])\n+  ])\n+  BITCOIN_QT_CHECK([\n+    PKG_CHECK_MODULES([QT_NETWORK], [${qt_lib_prefix}Network $qt_version], [],\n+                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Network $qt_version not found])])\n+  ])\n+  QT_INCLUDES=\"$QT_CORE_CFLAGS $QT_GUI_CFLAGS $QT_WIDGETS_CFLAGS $QT_NETWORK_CFLAGS\"\n+  QT_LIBS=\"$QT_CORE_LIBS $QT_GUI_LIBS $QT_WIDGETS_LIBS $QT_NETWORK_LIBS\"\n+\n+  BITCOIN_QT_CHECK([\n+    PKG_CHECK_MODULES([QT_TEST], [${qt_lib_prefix}Test $qt_version], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n+    if test \"x$use_dbus\" != xno; then\n+      PKG_CHECK_MODULES([QT_DBUS], [${qt_lib_prefix}DBus $qt_version], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n+    fi\n+  ])\n+])"
      },
      {
        "sha": "7841042ac877b20ea8b35e634f1b4088aae1647f",
        "filename": "build-aux/m4/bitcoin_subdir_to_include.m4",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/bitcoin_subdir_to_include.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/bitcoin_subdir_to_include.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_subdir_to_include.m4?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,18 @@\n+dnl Copyright (c) 2013-2014 The Bitcoin Core developers\n+dnl Distributed under the MIT software license, see the accompanying\n+dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+dnl BITCOIN_SUBDIR_TO_INCLUDE([CPPFLAGS-VARIABLE-NAME],[SUBDIRECTORY-NAME],[HEADER-FILE])\n+dnl SUBDIRECTORY-NAME must end with a path separator\n+AC_DEFUN([BITCOIN_SUBDIR_TO_INCLUDE],[\n+  if test \"x$2\" = \"x\"; then\n+    AC_MSG_RESULT([default])\n+  else\n+    echo \"#include <$2$3.h>\" >conftest.cpp\n+    newinclpath=`${CXXCPP} ${CPPFLAGS} -M conftest.cpp 2>/dev/null | [ tr -d '\\\\n\\\\r\\\\\\\\' | sed -e 's/^.*[[:space:]:]\\(\\/[^[:space:]]*\\)]$3[\\.h[[:space:]].*$/\\1/' -e t -e d`]\n+    AC_MSG_RESULT([${newinclpath}])\n+    if test \"x${newinclpath}\" != \"x\"; then\n+      eval \"$1=\\\"\\$$1\\\"' -I${newinclpath}'\"\n+    fi\n+  fi\n+])"
      },
      {
        "sha": "75c43f9a92d3d6ac2a5d1aee89e97bab7a89f545",
        "filename": "build-aux/m4/l_atomic.m4",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/l_atomic.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build-aux/m4/l_atomic.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/l_atomic.m4?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,46 @@\n+dnl Copyright (c) 2015 Tim Kosse <tim.kosse@filezilla-project.org>\n+dnl Copying and distribution of this file, with or without modification, are\n+dnl permitted in any medium without royalty provided the copyright notice\n+dnl and this notice are preserved. This file is offered as-is, without any\n+dnl warranty.\n+\n+# Some versions of gcc/libstdc++ require linking with -latomic if\n+# using the C++ atomic library.\n+#\n+# Sourced from http://bugs.debian.org/797228\n+\n+m4_define([_CHECK_ATOMIC_testbody], [[\n+  #include <atomic>\n+  #include <cstdint>\n+\n+  int main() {\n+    std::atomic<int64_t> a{};\n+\n+    int64_t v = 5;\n+    int64_t r = a.fetch_add(v);\n+    return static_cast<int>(r);\n+  }\n+]])\n+\n+AC_DEFUN([CHECK_ATOMIC], [\n+\n+  AC_LANG_PUSH(C++)\n+\n+  AC_MSG_CHECKING([whether std::atomic can be used without link library])\n+\n+  AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_ATOMIC_testbody])],[\n+      AC_MSG_RESULT([yes])\n+    ],[\n+      AC_MSG_RESULT([no])\n+      LIBS=\"$LIBS -latomic\"\n+      AC_MSG_CHECKING([whether std::atomic needs -latomic])\n+      AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_ATOMIC_testbody])],[\n+          AC_MSG_RESULT([yes])\n+        ],[\n+          AC_MSG_RESULT([no])\n+          AC_MSG_FAILURE([cannot figure out how to use std::atomic])\n+        ])\n+    ])\n+\n+  AC_LANG_POP\n+])"
      },
      {
        "sha": "ae8120fdf3a44ab47700fe40a3a3cd93f3cb8d96",
        "filename": "build_msvc/.gitignore",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/.gitignore?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,27 @@\n+# Build directories\n+Debug/*\n+Release/*\n+.vs\n+packages/*\n+*/Obj\n+*/Debug\n+*/Release\n+*/x64\n+*.vcxproj.user\n+\n+# .vcxproj files that are auto-generated by the msvc-autogen.py script.\n+libbitcoin_cli/libbitcoin_cli.vcxproj\n+libbitcoin_common/libbitcoin_common.vcxproj\n+libbitcoin_crypto/libbitcoin_crypto.vcxproj\n+libbitcoin_server/libbitcoin_server.vcxproj\n+libbitcoin_util/libbitcoin_util.vcxproj\n+libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj\n+libbitcoin_wallet/libbitcoin_wallet.vcxproj\n+libbitcoin_zmq/libbitcoin_zmq.vcxproj\n+bench_bitcoin/bench_bitcoin.vcxproj\n+libtest_util/libtest_util.vcxproj\n+\n+*/Win32\n+libbitcoin_qt/QtGeneratedFiles/*\n+test_bitcoin-qt/QtGeneratedFiles/*\n+vcpkg_installed\n\\ No newline at end of file"
      },
      {
        "sha": "87ea556a23b31897ac72907ebb5f9ee9516b7a1b",
        "filename": "build_msvc/README.md",
        "status": "added",
        "additions": 79,
        "deletions": 0,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/README.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,79 @@\n+Building Bitcoin Core with Visual Studio\n+========================================\n+\n+Introduction\n+---------------------\n+Solution and project files to build the Bitcoin Core applications `msbuild` or Visual Studio can be found in the `build_msvc` directory. The build has been tested with Visual Studio 2017 and 2019.\n+\n+Building with Visual Studio is an alternative to the Linux based [cross-compiler build](https://github.com/bitcoin/bitcoin/blob/master/doc/build-windows.md).\n+\n+Quick Start\n+---------------------\n+The minimal steps required to build Bitcoin Core with the msbuild toolchain are below. More detailed instructions are contained in the following sections.\n+\n+```\n+cd build_msvc\n+py -3 msvc-autogen.py\n+msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /t:build\n+```\n+\n+Dependencies\n+---------------------\n+A number of [open source libraries](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) are required in order to be able to build Bitcoin Core.\n+\n+Options for installing the dependencies in a Visual Studio compatible manner are:\n+\n+- Use Microsoft's [vcpkg](https://docs.microsoft.com/en-us/cpp/vcpkg) to download the source packages and build locally. This is the recommended approach.\n+- Download the source code, build each dependency, add the required include paths, link libraries and binary tools to the Visual Studio project files.\n+- Use [nuget](https://www.nuget.org/) packages with the understanding that any binary files have been compiled by an untrusted third party.\n+\n+The [external dependencies](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) required for building are listed in the `build_msvc/vcpkg.json` file. The `msbuild` project files are configured to automatically install the `vcpkg` dependencies.\n+\n+Qt\n+---------------------\n+In order to build the Bitcoin Core a static build of Qt is required. The runtime library version (e.g. v141, v142) and platform type (x86 or x64) must also match.\n+\n+Some prebuilt x64 versions of Qt can be downloaded from [here](https://github.com/sipsorcery/qt_win_binary/releases). Please be aware these downloads are NOT officially sanctioned by Bitcoin Core and are provided for developer convenience only. They should NOT be used for builds that will be used in a production environment or with real funds.\n+\n+To determine which Qt prebuilt version to download open the `.appveyor.yml` file and note the `QT_DOWNLOAD_URL`. When extracting the zip file the destination path must be set to `C:\\`. This is due to the way that Qt includes, libraries and tools use internal paths.\n+\n+To build Bitcoin Core without Qt unload or disable the `bitcoin-qt`, `libbitcoin_qt` and `test_bitcoin-qt` projects.\n+\n+Building\n+---------------------\n+The instructions below use `vcpkg` to install the dependencies.\n+\n+- Install [`vcpkg`](https://github.com/Microsoft/vcpkg).\n+\n+- Use Python to generate `*.vcxproj` from Makefile\n+\n+```\n+PS >py -3 msvc-autogen.py\n+```\n+\n+- An optional step is to adjust the settings in the `build_msvc` directory and the `common.init.vcxproj` file. This project file contains settings that are common to all projects such as the runtime library version and target Windows SDK version. The Qt directories can also be set.\n+\n+- To build from the command line with the Visual Studio 2017 toolchain use:\n+\n+```\n+msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /p:PlatformToolset=v141 /t:build\n+```\n+\n+- To build from the command line with the Visual Studio 2019 toolchain use:\n+\n+```\n+msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /t:build\n+```\n+\n+- Alternatively open the `build_msvc/bitcoin.sln` file in Visual Studio.\n+\n+AppVeyor\n+---------------------\n+The .appveyor.yml in the root directory is suitable to perform builds on [AppVeyor](https://www.appveyor.com/) Continuous Integration servers. The simplest way to perform an AppVeyor build is to fork Bitcoin Core and then configure a new AppVeyor Project pointing to the forked repository.\n+\n+For safety reasons the Bitcoin Core .appveyor.yml file has the artifact options disabled. The build will be performed but no executable files will be available. To enable artifacts on a forked repository uncomment the lines shown below:\n+\n+```\n+    #- 7z a bitcoin-%APPVEYOR_BUILD_VERSION%.zip %APPVEYOR_BUILD_FOLDER%\\build_msvc\\%platform%\\%configuration%\\*.exe\n+    #- path: bitcoin-%APPVEYOR_BUILD_VERSION%.zip\n+```"
      },
      {
        "sha": "128c1bd8e7b6bd0622eefee3b5be73c47907b1e8",
        "filename": "build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,62 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{1125654E-E1B2-4431-8B5C-62EA9A2FEECB}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup>\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libtest_util\\libtest_util.vcxproj\">\n+      <Project>{1e065f03-3566-47d0-8fa9-daa72b084e7d}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Target Name=\"RawBenchHeaderGen\" BeforeTargets=\"PrepareForBuild\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the raw bench header generation task.</ErrorText>\n+    </PropertyGroup>\n+    <ItemGroup>\n+      <RawBenchFile Include=\"..\\..\\src\\bench\\data\\*.raw\" />\n+    </ItemGroup>\n+    <HeaderFromHexdump RawFilePath=\"%(RawBenchFile.FullPath)\" HeaderFilePath=\"%(RawBenchFile.FullPath).h\" SourceHeader=\"static unsigned const char %(RawBenchFile.Filename)_raw[] = {\" SourceFooter=\"};\" />\n+  </Target>\n+  <Import Label=\"hexdumpTarget\" Project=\"..\\msbuild\\tasks\\hexdump.targets\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "e5e0e978f89819af98f55803da8e8368f2815d86",
        "filename": "build_msvc/bitcoin-cli/bitcoin-cli.vcxproj",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/bitcoin-cli/bitcoin-cli.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/bitcoin-cli/bitcoin-cli.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-cli/bitcoin-cli.vcxproj?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{0B2D7431-F876-4A58-87BF-F748338CD3BF}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup>\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\bitcoin-cli.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "17cd31a52ef27db296d34fd810a98d7dc515ad61",
        "filename": "build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "status": "added",
        "additions": 83,
        "deletions": 0,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,83 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <Import Project=\"..\\common.qt.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{7E99172D-7FF2-4CB6-B736-AC9B76ED412A}</ProjectGuid>\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\qt\\main.cpp\" />\n+    <ResourceCompile Include=\"..\\..\\src\\qt\\res\\bitcoin-qt-res.rc\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_qt\\libbitcoin_qt.vcxproj\">\n+      <Project>{2b4abff8-d1fd-4845-88c9-1f3c0a6512bf}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Release'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>$(QtReleaseLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n+      <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+    </Link>\n+    <ResourceCompile>\n+      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+    </ResourceCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Debug'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>$(QtDebugLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n+      <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+    </Link>\n+    <ResourceCompile>\n+      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+    </ResourceCompile>\n+  </ItemDefinitionGroup>\n+\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+</Project>"
      },
      {
        "sha": "4e9b4916a0fc9e909ff06662ca28d1bf502736af",
        "filename": "build_msvc/bitcoin-tx/bitcoin-tx.vcxproj",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/bitcoin-tx/bitcoin-tx.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/bitcoin-tx/bitcoin-tx.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-tx/bitcoin-tx.vcxproj?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,37 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\bitcoin-tx.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "40c5db5522881ef14b9090009e50d9b90b394395",
        "filename": "build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj",
        "status": "added",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{84DE8790-EDE3-4483-81AC-C32F15E861F4}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\bitcoin-wallet.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet_tool\\libbitcoin_wallet_tool.vcxproj\">\n+      <Project>{f91ac55e-6f5e-4c58-9ac5-b40db7deef93}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "5e9715451f5a9309ae2d4989cfed2e5ec337e929",
        "filename": "build_msvc/bitcoin.sln",
        "status": "added",
        "additions": 252,
        "deletions": 0,
        "changes": 252,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/bitcoin.sln",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/bitcoin.sln",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin.sln?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,252 @@\n+Microsoft Visual Studio Solution File, Format Version 12.00\n+# Visual Studio Version 16\n+VisualStudioVersion = 16.0.28803.452\n+MinimumVisualStudioVersion = 10.0.40219.1\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoinconsensus\", \"libbitcoinconsensus\\libbitcoinconsensus.vcxproj\", \"{2B384FA8-9EE1-4544-93CB-0D733C25E8CE}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"testconsensus\", \"testconsensus\\testconsensus.vcxproj\", \"{E78473E9-B850-456C-9120-276301E04C06}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoind\", \"bitcoind\\bitcoind.vcxproj\", \"{D4513DDF-6013-44DC-ADCC-12EAF6D1F038}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_util\", \"libbitcoin_util\\libbitcoin_util.vcxproj\", \"{B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_common\", \"libbitcoin_common\\libbitcoin_common.vcxproj\", \"{7C87E378-DF58-482E-AA2F-1BC129BC19CE}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_crypto\", \"libbitcoin_crypto\\libbitcoin_crypto.vcxproj\", \"{6190199C-6CF4-4DAD-BFBD-93FA72A760C1}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_server\", \"libbitcoin_server\\libbitcoin_server.vcxproj\", \"{460FEE33-1FE1-483F-B3BF-931FF8E969A5}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libunivalue\", \"libunivalue\\libunivalue.vcxproj\", \"{5724BA7D-A09A-4BA8-800B-C4C1561B3D69}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_wallet\", \"libbitcoin_wallet\\libbitcoin_wallet.vcxproj\", \"{93B86837-B543-48A5-A89B-7C87ABB77DF2}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_zmq\", \"libbitcoin_zmq\\libbitcoin_zmq.vcxproj\", \"{792D487F-F14C-49FC-A9DE-3FC150F31C3F}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"test_bitcoin\", \"test_bitcoin\\test_bitcoin.vcxproj\", \"{A56B73DB-D46D-4882-8374-1FE3FFA08F07}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_cli\", \"libbitcoin_cli\\libbitcoin_cli.vcxproj\", \"{0667528C-D734-4009-ADF9-C0D6C4A5A5A6}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-cli\", \"bitcoin-cli\\bitcoin-cli.vcxproj\", \"{0B2D7431-F876-4A58-87BF-F748338CD3BF}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bench_bitcoin\", \"bench_bitcoin\\bench_bitcoin.vcxproj\", \"{1125654E-E1B2-4431-8B5C-62EA9A2FEECB}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-tx\", \"bitcoin-tx\\bitcoin-tx.vcxproj\", \"{D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-wallet\", \"bitcoin-wallet\\bitcoin-wallet.vcxproj\", \"{84DE8790-EDE3-4483-81AC-C32F15E861F4}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_wallet_tool\", \"libbitcoin_wallet_tool\\libbitcoin_wallet_tool.vcxproj\", \"{F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libsecp256k1\", \"libsecp256k1\\libsecp256k1.vcxproj\", \"{BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libleveldb\", \"libleveldb\\libleveldb.vcxproj\", \"{18430FEF-6B61-4C53-B396-718E02850F1B}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_qt\", \"libbitcoin_qt\\libbitcoin_qt.vcxproj\", \"{2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-qt\", \"bitcoin-qt\\bitcoin-qt.vcxproj\", \"{7E99172D-7FF2-4CB6-B736-AC9B76ED412A}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libtest_util\", \"libtest_util\\libtest_util.vcxproj\", \"{868474FD-35F6-4400-8EED-30A33E7521D4}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"test_bitcoin-qt\", \"test_bitcoin-qt\\test_bitcoin-qt.vcxproj\", \"{51201D5E-D939-4854-AE9D-008F03FF518E}\"\n+EndProject\n+Global\n+    GlobalSection(SolutionConfigurationPlatforms) = preSolution\n+        Debug|x64 = Debug|x64\n+        Debug|x86 = Debug|x86\n+        Release|x64 = Release|x64\n+        Release|x86 = Release|x86\n+    EndGlobalSection\n+    GlobalSection(ProjectConfigurationPlatforms) = postSolution\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x64.ActiveCfg = Debug|x64\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x64.Build.0 = Debug|x64\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x86.ActiveCfg = Debug|Win32\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x86.Build.0 = Debug|Win32\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x64.ActiveCfg = Release|x64\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x64.Build.0 = Release|x64\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x86.ActiveCfg = Release|Win32\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x86.Build.0 = Release|Win32\n+        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x64.ActiveCfg = Debug|x64\n+        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x64.Build.0 = Debug|x64\n+        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x86.ActiveCfg = Debug|Win32\n+        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x86.Build.0 = Debug|Win32\n+        {E78473E9-B850-456C-9120-276301E04C06}.Release|x64.ActiveCfg = Release|x64\n+        {E78473E9-B850-456C-9120-276301E04C06}.Release|x64.Build.0 = Release|x64\n+        {E78473E9-B850-456C-9120-276301E04C06}.Release|x86.ActiveCfg = Release|Win32\n+        {E78473E9-B850-456C-9120-276301E04C06}.Release|x86.Build.0 = Release|Win32\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x64.ActiveCfg = Debug|x64\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x64.Build.0 = Debug|x64\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x86.ActiveCfg = Debug|Win32\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x86.Build.0 = Debug|Win32\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x64.ActiveCfg = Release|x64\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x64.Build.0 = Release|x64\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x86.ActiveCfg = Release|Win32\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x86.Build.0 = Release|Win32\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x64.ActiveCfg = Debug|x64\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x64.Build.0 = Debug|x64\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x86.ActiveCfg = Debug|Win32\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x86.Build.0 = Debug|Win32\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x64.ActiveCfg = Release|x64\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x64.Build.0 = Release|x64\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x86.ActiveCfg = Release|Win32\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x86.Build.0 = Release|Win32\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x64.ActiveCfg = Debug|x64\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x64.Build.0 = Debug|x64\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x86.ActiveCfg = Debug|Win32\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x86.Build.0 = Debug|Win32\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x64.ActiveCfg = Release|x64\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x64.Build.0 = Release|x64\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x86.ActiveCfg = Release|Win32\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x86.Build.0 = Release|Win32\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x64.ActiveCfg = Debug|x64\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x64.Build.0 = Debug|x64\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x86.ActiveCfg = Debug|Win32\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x86.Build.0 = Debug|Win32\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x64.ActiveCfg = Release|x64\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x64.Build.0 = Release|x64\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x86.ActiveCfg = Release|Win32\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x86.Build.0 = Release|Win32\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x64.ActiveCfg = Debug|x64\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x64.Build.0 = Debug|x64\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x86.ActiveCfg = Debug|Win32\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x86.Build.0 = Debug|Win32\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x64.ActiveCfg = Release|x64\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x64.Build.0 = Release|x64\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x86.ActiveCfg = Release|Win32\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x86.Build.0 = Release|Win32\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x64.ActiveCfg = Debug|x64\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x64.Build.0 = Debug|x64\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x86.ActiveCfg = Debug|Win32\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x86.Build.0 = Debug|Win32\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x64.ActiveCfg = Release|x64\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x64.Build.0 = Release|x64\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x86.ActiveCfg = Release|Win32\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x86.Build.0 = Release|Win32\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x64.ActiveCfg = Debug|x64\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x64.Build.0 = Debug|x64\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x86.ActiveCfg = Debug|Win32\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x86.Build.0 = Debug|Win32\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x64.ActiveCfg = Release|x64\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x64.Build.0 = Release|x64\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x86.ActiveCfg = Release|Win32\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x86.Build.0 = Release|Win32\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x64.ActiveCfg = Debug|x64\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x64.Build.0 = Debug|x64\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x86.ActiveCfg = Debug|Win32\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x86.Build.0 = Debug|Win32\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x64.ActiveCfg = Release|x64\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x64.Build.0 = Release|x64\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x86.ActiveCfg = Release|Win32\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x86.Build.0 = Release|Win32\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x64.ActiveCfg = Debug|x64\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x64.Build.0 = Debug|x64\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x86.ActiveCfg = Debug|Win32\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x86.Build.0 = Debug|Win32\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x64.ActiveCfg = Release|x64\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x64.Build.0 = Release|x64\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x86.ActiveCfg = Release|Win32\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x86.Build.0 = Release|Win32\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x64.ActiveCfg = Debug|x64\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x64.Build.0 = Debug|x64\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x86.ActiveCfg = Debug|Win32\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x86.Build.0 = Debug|Win32\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x64.ActiveCfg = Release|x64\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x64.Build.0 = Release|x64\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x86.ActiveCfg = Release|Win32\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x86.Build.0 = Release|Win32\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x64.ActiveCfg = Debug|x64\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x64.Build.0 = Debug|x64\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x86.ActiveCfg = Debug|Win32\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x86.Build.0 = Debug|Win32\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x64.ActiveCfg = Release|x64\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x64.Build.0 = Release|x64\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x86.ActiveCfg = Release|Win32\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x86.Build.0 = Release|Win32\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x64.ActiveCfg = Debug|x64\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x64.Build.0 = Debug|x64\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x86.ActiveCfg = Debug|Win32\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x86.Build.0 = Debug|Win32\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x64.ActiveCfg = Release|x64\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x64.Build.0 = Release|x64\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x86.ActiveCfg = Release|Win32\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x86.Build.0 = Release|Win32\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x64.ActiveCfg = Debug|x64\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x64.Build.0 = Debug|x64\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x86.ActiveCfg = Debug|Win32\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x86.Build.0 = Debug|Win32\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x64.ActiveCfg = Release|x64\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x64.Build.0 = Release|x64\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x86.ActiveCfg = Release|Win32\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x86.Build.0 = Release|Win32\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x64.ActiveCfg = Debug|x64\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x64.Build.0 = Debug|x64\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x86.ActiveCfg = Debug|Win32\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x86.Build.0 = Debug|Win32\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x64.ActiveCfg = Release|x64\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x64.Build.0 = Release|x64\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x86.ActiveCfg = Release|Win32\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x86.Build.0 = Release|Win32\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x64.ActiveCfg = Debug|x64\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x64.Build.0 = Debug|x64\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x86.ActiveCfg = Debug|Win32\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x86.Build.0 = Debug|Win32\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x64.ActiveCfg = Release|x64\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x64.Build.0 = Release|x64\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x86.ActiveCfg = Release|Win32\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x86.Build.0 = Release|Win32\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Debug|x64.ActiveCfg = Debug|x64\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Debug|x64.Build.0 = Debug|x64\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Debug|x86.ActiveCfg = Debug|Win32\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Debug|x86.Build.0 = Debug|Win32\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Release|x64.ActiveCfg = Release|x64\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Release|x64.Build.0 = Release|x64\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Release|x86.ActiveCfg = Release|Win32\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Release|x86.Build.0 = Release|Win32\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Debug|x64.ActiveCfg = Debug|x64\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Debug|x64.Build.0 = Debug|x64\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Debug|x86.ActiveCfg = Debug|Win32\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Debug|x86.Build.0 = Debug|Win32\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x64.ActiveCfg = Release|x64\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x64.Build.0 = Release|x64\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x86.ActiveCfg = Release|Win32\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x86.Build.0 = Release|Win32\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x64.ActiveCfg = Debug|x64\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x64.Build.0 = Debug|x64\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x86.ActiveCfg = Debug|Win32\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x86.Build.0 = Debug|Win32\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x64.ActiveCfg = Release|x64\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x64.Build.0 = Release|x64\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x86.ActiveCfg = Release|Win32\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x86.Build.0 = Release|Win32\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x64.ActiveCfg = Debug|x64\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x64.Build.0 = Debug|x64\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x86.ActiveCfg = Debug|Win32\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x86.Build.0 = Debug|Win32\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x64.ActiveCfg = Release|x64\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x64.Build.0 = Release|x64\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x86.ActiveCfg = Release|Win32\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x86.Build.0 = Release|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x64.ActiveCfg = Debug|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x64.Build.0 = Debug|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x86.ActiveCfg = Debug|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x86.Build.0 = Debug|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x64.ActiveCfg = Release|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x64.Build.0 = Release|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x86.ActiveCfg = Release|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x86.Build.0 = Release|Win32\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x64.ActiveCfg = Debug|x64\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x64.Build.0 = Debug|x64\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x86.ActiveCfg = Debug|Win32\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x86.Build.0 = Debug|Win32\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x64.ActiveCfg = Release|x64\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x64.Build.0 = Release|x64\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x86.ActiveCfg = Release|Win32\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x86.Build.0 = Release|Win32\n+    EndGlobalSection\n+    GlobalSection(SolutionProperties) = preSolution\n+        HideSolutionNode = FALSE\n+    EndGlobalSection\n+    GlobalSection(ExtensibilityGlobals) = postSolution\n+                        SolutionGuid = {8AA72EDA-2CD4-4564-B1E4-688B760EEEE9}\n+                SolutionGuid = {8607C0F4-F33D-41B8-8D51-18E366A0F8DF}\n+        SolutionGuid = {58AAB032-7274-49BD-845E-5EF4DBB69B70}\n+    EndGlobalSection\n+EndGlobal"
      },
      {
        "sha": "9d0b50a0b4bfe463fb4b6bff36cc5381363b4527",
        "filename": "build_msvc/bitcoin_config.h",
        "status": "added",
        "additions": 338,
        "deletions": 0,
        "changes": 338,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/bitcoin_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/bitcoin_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin_config.h?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,338 @@\n+// Copyright (c) 2018-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BITCOIN_CONFIG_H\n+#define BITCOIN_BITCOIN_CONFIG_H\n+\n+/* Define if building universal (internal helper macro) */\n+/* #undef AC_APPLE_UNIVERSAL_BUILD */\n+\n+/* Version Build */\n+#define CLIENT_VERSION_BUILD 0\n+\n+/* Version is release */\n+#define CLIENT_VERSION_IS_RELEASE false\n+\n+/* Major version */\n+#define CLIENT_VERSION_MAJOR 0\n+\n+/* Minor version */\n+#define CLIENT_VERSION_MINOR 20\n+\n+/* Build revision */\n+#define CLIENT_VERSION_REVISION 99\n+\n+/* Copyright holder(s) before %s replacement */\n+#define COPYRIGHT_HOLDERS \"The %s developers\"\n+\n+/* Copyright holder(s) */\n+#define COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\"\n+\n+/* Replacement for %s in copyright holders string */\n+#define COPYRIGHT_HOLDERS_SUBSTITUTION \"Bitcoin Core\"\n+\n+/* Copyright year */\n+#define COPYRIGHT_YEAR 2019\n+\n+/* Define to 1 to enable wallet functions */\n+#define ENABLE_WALLET 1\n+\n+/* Define to 1 to enable ZMQ functions */\n+#define ENABLE_ZMQ 1\n+\n+/* define if the Boost library is available */\n+#define HAVE_BOOST /**/\n+\n+/* define if the Boost::Filesystem library is available */\n+#define HAVE_BOOST_FILESYSTEM /**/\n+\n+/* define if the Boost::Process library is available */\n+#define HAVE_BOOST_PROCESS /**/\n+\n+/* define if the Boost::System library is available */\n+#define HAVE_BOOST_SYSTEM /**/\n+\n+/* define if the Boost::Thread library is available */\n+#define HAVE_BOOST_THREAD /**/\n+\n+/* define if the Boost::Unit_Test_Framework library is available */\n+#define HAVE_BOOST_UNIT_TEST_FRAMEWORK /**/\n+\n+/* Define to 1 if you have the <byteswap.h> header file. */\n+/* #undef HAVE_BYTESWAP_H */\n+\n+/* Define this symbol if the consensus lib has been built */\n+#define HAVE_CONSENSUS_LIB 1\n+\n+/* define if the compiler supports basic C++11 syntax */\n+#define HAVE_CXX11 1\n+\n+/* Define to 1 if you have the declaration of `be16toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BE16TOH 0\n+\n+/* Define to 1 if you have the declaration of `be32toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BE32TOH 0\n+\n+/* Define to 1 if you have the declaration of `be64toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BE64TOH 0\n+\n+/* Define to 1 if you have the declaration of `bswap_16', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BSWAP_16 0\n+\n+/* Define to 1 if you have the declaration of `bswap_32', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BSWAP_32 0\n+\n+/* Define to 1 if you have the declaration of `bswap_64', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BSWAP_64 0\n+\n+/* Define to 1 if you have the declaration of `daemon', and to 0 if you don't.\n+   */\n+#define HAVE_DECL_DAEMON 0\n+\n+/* Define to 1 if you have the declaration of `htobe16', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOBE16 0\n+\n+/* Define to 1 if you have the declaration of `htobe32', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOBE32 0\n+\n+/* Define to 1 if you have the declaration of `htobe64', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOBE64 0\n+\n+/* Define to 1 if you have the declaration of `htole16', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOLE16 0\n+\n+/* Define to 1 if you have the declaration of `htole32', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOLE32 0\n+\n+/* Define to 1 if you have the declaration of `htole64', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOLE64 0\n+\n+/* Define to 1 if you have the declaration of `le16toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_LE16TOH 0\n+\n+/* Define to 1 if you have the declaration of `le32toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_LE32TOH 0\n+\n+/* Define to 1 if you have the declaration of `le64toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_LE64TOH 0\n+\n+/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_STRERROR_R 0\n+\n+/* Define to 1 if you have the declaration of `strnlen', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_STRNLEN 1\n+\n+/* Define to 1 if you have the <dlfcn.h> header file. */\n+/* #undef HAVE_DLFCN_H */\n+\n+/* Define to 1 if you have the <endian.h> header file. */\n+/* #undef HAVE_ENDIAN_H */\n+\n+/* Define to 1 if the system has the `dllexport' function attribute */\n+#define HAVE_FUNC_ATTRIBUTE_DLLEXPORT 1\n+\n+/* Define to 1 if the system has the `dllimport' function attribute */\n+#define HAVE_FUNC_ATTRIBUTE_DLLIMPORT 1\n+\n+/* Define to 1 if the system has the `visibility' function attribute */\n+#define HAVE_FUNC_ATTRIBUTE_VISIBILITY 1\n+\n+/* Define this symbol if the BSD getentropy system call is available */\n+/* #undef HAVE_GETENTROPY */\n+\n+/* Define this symbol if the BSD getentropy system call is available with\n+   sys/random.h */\n+/* #undef HAVE_GETENTROPY_RAND */\n+\n+/* Define to 1 if you have the <inttypes.h> header file. */\n+#define HAVE_INTTYPES_H 1\n+\n+/* Define this symbol if you have malloc_info */\n+/* #undef HAVE_MALLOC_INFO */\n+\n+/* Define this symbol if you have mallopt with M_ARENA_MAX */\n+/* #undef HAVE_MALLOPT_ARENA_MAX */\n+\n+/* Define to 1 if you have the <memory.h> header file. */\n+#define HAVE_MEMORY_H 1\n+\n+/* Define to 1 if you have the <miniupnpc/miniupnpc.h> header file. */\n+#define HAVE_MINIUPNPC_MINIUPNPC_H 1\n+\n+/* Define to 1 if you have the <miniupnpc/miniwget.h> header file. */\n+#define HAVE_MINIUPNPC_MINIWGET_H 1\n+\n+/* Define to 1 if you have the <miniupnpc/upnpcommands.h> header file. */\n+#define HAVE_MINIUPNPC_UPNPCOMMANDS_H 1\n+\n+/* Define to 1 if you have the <miniupnpc/upnperrors.h> header file. */\n+#define HAVE_MINIUPNPC_UPNPERRORS_H 1\n+\n+/* Define this symbol if you have MSG_DONTWAIT */\n+/* #undef HAVE_MSG_DONTWAIT */\n+\n+/* Define this symbol if you have MSG_NOSIGNAL */\n+/* #undef HAVE_MSG_NOSIGNAL */\n+\n+/* Define if you have POSIX threads libraries and header files. */\n+//#define HAVE_PTHREAD 1\n+\n+/* Have PTHREAD_PRIO_INHERIT. */\n+//#define HAVE_PTHREAD_PRIO_INHERIT 1\n+\n+/* Define to 1 if you have the <stdint.h> header file. */\n+#define HAVE_STDINT_H 1\n+\n+/* Define to 1 if you have the <stdio.h> header file. */\n+#define HAVE_STDIO_H 1\n+\n+/* Define to 1 if you have the <stdlib.h> header file. */\n+#define HAVE_STDLIB_H 1\n+\n+/* Define to 1 if you have the `strerror_r' function. */\n+/* #undef HAVE_STRERROR_R */\n+\n+/* Define to 1 if you have the <strings.h> header file. */\n+#define HAVE_STRINGS_H 1\n+\n+/* Define to 1 if you have the <string.h> header file. */\n+#define HAVE_STRING_H 1\n+\n+/* Define this symbol if the BSD sysctl(KERN_ARND) is available */\n+/* #undef HAVE_SYSCTL_ARND */\n+\n+/* Define to 1 if you have the <sys/endian.h> header file. */\n+/* #undef HAVE_SYS_ENDIAN_H */\n+\n+/* Define this symbol if the Linux getrandom system call is available */\n+/* #undef HAVE_SYS_GETRANDOM */\n+\n+/* Define to 1 if you have the <sys/prctl.h> header file. */\n+/* #undef HAVE_SYS_PRCTL_H */\n+\n+/* Define to 1 if you have the <sys/select.h> header file. */\n+/* #undef HAVE_SYS_SELECT_H */\n+\n+/* Define to 1 if you have the <sys/stat.h> header file. */\n+#define HAVE_SYS_STAT_H 1\n+\n+/* Define to 1 if you have the <sys/types.h> header file. */\n+#define HAVE_SYS_TYPES_H 1\n+\n+/* Define to 1 if you have the <unistd.h> header file. */\n+//#define HAVE_UNISTD_H 1\n+\n+/* Define if the visibility attribute is supported. */\n+#define HAVE_VISIBILITY_ATTRIBUTE 1\n+\n+/* Define to the sub-directory where libtool stores uninstalled libraries. */\n+#define LT_OBJDIR \".libs/\"\n+\n+/* Define to the address where bug reports for this package should be sent. */\n+#define PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\"\n+\n+/* Define to the full name of this package. */\n+#define PACKAGE_NAME \"Bitcoin Core\"\n+\n+/* Define to the full name and version of this package. */\n+#define PACKAGE_STRING \"Bitcoin Core 0.19.99\"\n+\n+/* Define to the one symbol short name of this package. */\n+#define PACKAGE_TARNAME \"bitcoin\"\n+\n+/* Define to the home page for this package. */\n+#define PACKAGE_URL \"https://bitcoincore.org/\"\n+\n+/* Define to the version of this package. */\n+#define PACKAGE_VERSION \"0.19.99\"\n+\n+/* Define to necessary symbol if this constant uses a non-standard name on\n+   your system. */\n+/* #undef PTHREAD_CREATE_JOINABLE */\n+\n+/* Define this symbol if the qt platform is cocoa */\n+/* #undef QT_QPA_PLATFORM_COCOA */\n+\n+/* Define this symbol if the minimal qt platform exists */\n+#define QT_QPA_PLATFORM_MINIMAL 1\n+\n+/* Define this symbol if the qt platform is windows */\n+#define QT_QPA_PLATFORM_WINDOWS 1\n+\n+/* Define this symbol if the qt platform is xcb */\n+/* #undef QT_QPA_PLATFORM_XCB */\n+\n+/* Define this symbol if qt plugins are static */\n+#define QT_STATICPLUGIN 1\n+\n+/* Define to 1 if you have the ANSI C header files. */\n+#define STDC_HEADERS 1\n+\n+/* Define to 1 if strerror_r returns char *. */\n+/* #undef STRERROR_R_CHAR_P */\n+\n+/* Define this symbol to build in assembly routines */\n+//#define USE_ASM 1\n+\n+/* Define if dbus support should be compiled in */\n+/* #undef USE_DBUS */\n+\n+/* Define if QR support should be compiled in */\n+//#define USE_QRCODE 1\n+\n+/* UPnP support not compiled if undefined, otherwise value (0 or 1) determines\n+   default state */\n+//#define USE_UPNP 0\n+\n+/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most\n+   significant byte first (like Motorola and SPARC, unlike Intel). */\n+#if defined AC_APPLE_UNIVERSAL_BUILD\n+# if defined __BIG_ENDIAN__\n+#  define WORDS_BIGENDIAN 1\n+# endif\n+#else\n+# ifndef WORDS_BIGENDIAN\n+/* #  undef WORDS_BIGENDIAN */\n+# endif\n+#endif\n+\n+/* Enable large inode numbers on Mac OS X 10.5.  */\n+#ifndef _DARWIN_USE_64_BIT_INODE\n+# define _DARWIN_USE_64_BIT_INODE 1\n+#endif\n+\n+/* Number of bits in a file offset, on hosts where this is settable. */\n+#define _FILE_OFFSET_BITS 64\n+\n+/* Define for large files, on AIX-style hosts. */\n+/* #undef _LARGE_FILES */\n+\n+/* Windows Universal Platform constraints */\n+#if !defined(WINAPI_FAMILY) || (WINAPI_FAMILY == WINAPI_FAMILY_DESKTOP_APP)\n+/* Either a desktop application without API restrictions, or and older system\n+   before these macros were defined. */\n+\n+/* ::wsystem is available */\n+#define HAVE_SYSTEM 1\n+\n+#endif // !WINAPI_FAMILY || WINAPI_FAMILY_DESKTOP_APP\n+\n+#endif //BITCOIN_BITCOIN_CONFIG_H"
      },
      {
        "sha": "ae24cb100e68fc465bd612517d47ed8a96c6bfe2",
        "filename": "build_msvc/bitcoind/bitcoind.vcxproj",
        "status": "added",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/bitcoind/bitcoind.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/bitcoind/bitcoind.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoind/bitcoind.vcxproj?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,75 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{D4513DDF-6013-44DC-ADCC-12EAF6D1F038}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\bitcoind.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Label=\"ReplaceInFile\" Project=\"..\\msbuild\\tasks\\replaceinfile.targets\" />\n+  <PropertyGroup>\n+    <ConfigIniIn>..\\..\\test\\config.ini.in</ConfigIniIn>\n+    <ConfigIniOut>..\\..\\test\\config.ini</ConfigIniOut>\n+  </PropertyGroup>\n+  <Target Name=\"AfterBuild\">\n+    <Copy SourceFiles=\"$(ConfigIniIn)\" DestinationFiles=\"$(ConfigIniOut)\" ></Copy>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                   Replace=\"@PACKAGE_NAME@\" By=\"Bitcoin Core\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                   Replace=\"@abs_top_srcdir@\" By=\"..\\..\" ToFullPath=\"true\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                   Replace=\"@abs_top_builddir@\" By=\"..\\..\" ToFullPath=\"true\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                   Replace=\"@EXEEXT@\" By=\".exe\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                  Replace=\"@ENABLE_WALLET_TRUE@\" By=\"\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                  Replace=\"@BUILD_BITCOIN_CLI_TRUE@\" By=\"\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                  Replace=\"@BUILD_BITCOIND_TRUE@\" By=\"\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                  Replace=\"@ENABLE_FUZZ_TRUE@\" By=\"\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                  Replace=\"@ENABLE_ZMQ_TRUE@\" By=\"\"></ReplaceInFile>\n+  </Target>\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "ed227519ae10181a24145d33e131358e5c49a477",
        "filename": "build_msvc/common.init.vcxproj",
        "status": "added",
        "additions": 135,
        "deletions": 0,
        "changes": 135,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/common.init.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/common.init.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.init.vcxproj?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,135 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+<Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>16.0</VCProjectVersion>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n+    <UseNativeEnvironment>true</UseNativeEnvironment>\n+   </PropertyGroup>\n+\n+   <PropertyGroup Label=\"Vcpkg\">\n+    <VcpkgEnabled>true</VcpkgEnabled>\n+    <VcpkgEnableManifest>true</VcpkgEnableManifest>\n+    <VcpkgManifestInstall>true</VcpkgManifestInstall>\n+    <VcpkgUseStatic>true</VcpkgUseStatic>\n+    <VcpkgAutoLink>true</VcpkgAutoLink>\n+    <VcpkgConfiguration>$(Configuration)</VcpkgConfiguration>\n+  </PropertyGroup>\n+\n+  <PropertyGroup Condition=\"'$(WindowsTargetPlatformVersion)'=='' and !Exists('$(WindowsSdkDir)\\DesignTime\\CommonConfiguration\\Neutral\\Windows.props')\">\n+     <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' == ''\">$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v10.0@ProductVersion)</WindowsTargetPlatformVersion_10>\n+     <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' == ''\">$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Microsoft SDKs\\Windows\\v10.0@ProductVersion)</WindowsTargetPlatformVersion_10>\n+     <!-- Sometimes the version in the registry has to .0 suffix, and sometimes it doesn't. Check and add it -->\n+     <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' != '' and !$(WindowsTargetPlatformVersion_10.EndsWith('.0'))\">$(WindowsTargetPlatformVersion_10).0</WindowsTargetPlatformVersion_10>\n+     <WindowsTargetPlatformVersion>$(WindowsTargetPlatformVersion_10)</WindowsTargetPlatformVersion>\n+   </PropertyGroup>\n+\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+\n+  <PropertyGroup Condition=\"'$(Configuration)'=='Debug'\" Label=\"Configuration\">\n+    <LinkIncremental>true</LinkIncremental>\n+    <WholeProgramOptimization>false</WholeProgramOptimization>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v142</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\$(ProjectName)\\</OutDir>\n+    <IntDir>$(Platform)\\$(Configuration)\\$(ProjectName)\\</IntDir>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)'=='Release'\" Label=\"Configuration\">\n+    <LinkIncremental>false</LinkIncremental>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v142</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\$(ProjectName)\\</OutDir>\n+    <IntDir>$(Platform)\\$(Configuration)\\$(ProjectName)\\</IntDir>\n+  </PropertyGroup>\n+\n+<ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <SDLCheck>true</SDLCheck>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+    </Link>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <SDLCheck>true</SDLCheck>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+    </Link>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup>\n+    <ClCompile>\n+      <WarningLevel>Level3</WarningLevel>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <AdditionalOptions>/utf-8 /std:c++17 %(AdditionalOptions)</AdditionalOptions>\n+      <DisableSpecificWarnings>4018;4221;4244;4267;4334;4715;4805;4834</DisableSpecificWarnings>\n+      <TreatWarningAsError>true</TreatWarningAsError>\n+      <PreprocessorDefinitions>_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING;_SILENCE_CXX17_OLD_ALLOCATOR_MEMBERS_DEPRECATION_WARNING;ZMQ_STATIC;NOMINMAX;WIN32;HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;_CONSOLE;_WIN32_WINNT=0x0601;_WIN32_IE=0x0501;WIN32_LEAN_AND_MEAN;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;..\\..\\src\\secp256k1\\include;..\\..\\src\\leveldb\\include;..\\..\\src\\leveldb\\helpers\\memenv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+    <Lib>\n+      <AdditionalOptions>/ignore:4221</AdditionalOptions>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <Import Project=\"common.init.vcxproj.user\" Condition=\"Exists('common.init.vcxproj.user')\" />\n+</Project>"
      },
      {
        "sha": "42150a23103773a96de2f25f86de7ccb589e821e",
        "filename": "build_msvc/common.qt.init.vcxproj",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/common.qt.init.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/common.qt.init.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.qt.init.vcxproj?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+\n+  <PropertyGroup Label=\"QtGlobals\">\n+    <QtBaseDir>C:\\Qt5.9.8_x64_static_vs2019</QtBaseDir>\n+    <QtPluginsLibraryDir>$(QtBaseDir)\\plugins</QtPluginsLibraryDir>\n+    <QtLibraryDir>$(QtBaseDir)\\lib</QtLibraryDir>\n+    <QtIncludeDir>$(QtBaseDir)\\include</QtIncludeDir>\n+    <QtIncludes>$(QtIncludeDir);$(QtIncludeDir)\\QtNetwork;$(QtIncludeDir)\\QtCore;$(QtIncludeDir)\\QtWidgets;$(QtIncludeDir)\\QtGui;</QtIncludes>\n+    <GeneratedFilesOutDir>.\\QtGeneratedFiles\\qt</GeneratedFilesOutDir>\n+    <QtToolsDir>$(QtBaseDir)\\bin</QtToolsDir>\n+    <QtReleaseLibraries>$(QtPluginsLibraryDir)\\platforms\\qminimal.lib;$(QtPluginsLibraryDir)\\platforms\\qwindows.lib;$(QtLibraryDir)\\qtfreetype.lib;$(QtLibraryDir)\\qtharfbuzz.lib;$(QtLibraryDir)\\qtlibpng.lib;$(QtLibraryDir)\\qtpcre2.lib;$(QtLibraryDir)\\Qt5AccessibilitySupport.lib;$(QtLibraryDir)\\Qt5Core.lib;$(QtLibraryDir)\\Qt5Concurrent.lib;$(QtLibraryDir)\\Qt5EventDispatcherSupport.lib;$(QtLibraryDir)\\Qt5FontDatabaseSupport.lib;$(QtLibraryDir)\\Qt5Gui.lib;$(QtLibraryDir)\\Qt5Network.lib;$(QtLibraryDir)\\Qt5PlatformCompositorSupport.lib;$(QtLibraryDir)\\Qt5ThemeSupport.lib;$(QtLibraryDir)\\Qt5Widgets.lib;$(QtLibraryDir)\\Qt5WinExtras.lib;$(QtLibraryDir)\\qtmain.lib;userenv.lib;netapi32.lib;imm32.lib;Dwmapi.lib;version.lib;winmm.lib;UxTheme.lib</QtReleaseLibraries>\n+    <QtDebugLibraries>$(QtPluginsLibraryDir)\\platforms\\qwindowsd.lib;$(QtPluginsLibraryDir)\\platforms\\qminimald.lib;$(QtLibraryDir)\\*d.lib;crypt32.lib;userenv.lib;netapi32.lib;imm32.lib;Dwmapi.lib;version.lib;winmm.lib;UxTheme.lib</QtDebugLibraries>\n+  </PropertyGroup>\n+\n+</Project>"
      },
      {
        "sha": "4bbcc3767f63b23225a70f672764947637d9666c",
        "filename": "build_msvc/common.vcxproj",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/common.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/common.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.vcxproj?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+<PropertyGroup><BuildDependsOn>$(BuildDependsOn);CopyBuildArtifacts</BuildDependsOn></PropertyGroup>\n+  <Target Name=\"CopyBuildArtifacts\" Condition=\"'$(ConfigurationType)' != 'StaticLibrary'\">\n+    <ItemGroup>\n+      <BuildArtifacts Include=\"$(OutDir)$(TargetName)$(TargetExt)\"></BuildArtifacts>\n+      <BuildArtifacts Include=\"$(OutDir)$(TargetName).pdb\"></BuildArtifacts>\n+    </ItemGroup>\n+    <Copy SourceFiles=\"@(BuildArtifacts)\" SkipUnchangedFiles=\"true\" DestinationFolder=\"..\\..\\src\\\" Condition=\"'$(OutDir)' != ''\"></Copy>\n+  </Target>\n+  <Import Project=\"common.vcxproj.user\" Condition=\"Exists('common.vcxproj.user')\" />\n+</Project>"
      },
      {
        "sha": "620df72a2f76480b7645befdb8e889bf8c779046",
        "filename": "build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{0667528C-D734-4009-ADF9-C0D6C4A5A5A6}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup>\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "b47d62b29587ee85536232e599c1c9c4a1429b9a",
        "filename": "build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{7C87E378-DF58-482E-AA2F-1BC129BC19CE}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "32cb75bf871c180dafb4a0b5c0fbd4a0722fa18f",
        "filename": "build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{6190199C-6CF4-4DAD-BFBD-93FA72A760C1}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "6a3c9f1dc125b9e44fb27b11f4bdab81f12dd5fc",
        "filename": "build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "status": "added",
        "additions": 232,
        "deletions": 0,
        "changes": 232,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,232 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <Import Project=\"..\\common.qt.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}</ProjectGuid>\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\qt\\addressbookpage.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\addresstablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\askpassphrasedialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bantablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoin.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinaddressvalidator.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinamountfield.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoingui.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinstrings.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinunits.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\clientmodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\coincontroldialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\coincontroltreewidget.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\createwalletdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\csvmodelwriter.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\editaddressdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\guiutil.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\intro.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\modaloverlay.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\networkstyle.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\notificator.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\openuridialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\optionsdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\optionsmodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\overviewpage.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\paymentserver.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\peertablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\platformstyle.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\psbtoperationsdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\qrimagewidget.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\qvalidatedlineedit.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\qvaluecombobox.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\receivecoinsdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\receiverequestdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\recentrequeststablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\rpcconsole.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\sendcoinsdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\sendcoinsentry.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\signverifymessagedialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\splashscreen.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\trafficgraphwidget.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactiondesc.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactiondescdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactionfilterproxy.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactionrecord.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactiontablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactionview.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\utilitydialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletcontroller.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletframe.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletmodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletmodeltransaction.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletview.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\winshutdownmonitor.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addressbookpage.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addresstablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_askpassphrasedialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bantablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoin.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinaddressvalidator.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinamountfield.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoingui.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinunits.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_clientmodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_coincontroldialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_coincontroltreewidget.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_createwalletdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_csvmodelwriter.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_editaddressdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_guiutil.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_intro.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_modaloverlay.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_networkstyle.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_notificator.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_openuridialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_optionsdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_optionsmodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_overviewpage.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_paymentserver.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_peertablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_platformstyle.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_psbtoperationsdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qrimagewidget.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qvalidatedlineedit.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qvaluecombobox.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_receivecoinsdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_receiverequestdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_recentrequeststablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_rpcconsole.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_sendcoinsdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_sendcoinsentry.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_signverifymessagedialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_splashscreen.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_trafficgraphwidget.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiondesc.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiondescdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionfilterproxy.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionrecord.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiontablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionview.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_utilitydialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletcontroller.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletframe.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletmodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletmodeltransaction.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletview.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_winshutdownmonitor.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\rcc\\qrc_bitcoin.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\rcc\\qrc_bitcoin_locale.cpp\" />\n+  </ItemGroup>\n+\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PreprocessorDefinitions>_AMD64_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PreprocessorDefinitions>_AMD64_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PreprocessorDefinitions>_X86_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PreprocessorDefinitions>_X86_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemGroup>\n+    <QT_MOC Include=\"..\\..\\src\\qt\\bitcoinamountfield.cpp\" />\n+    <QT_MOC Include=\"..\\..\\src\\qt\\intro.cpp\" />\n+    <QT_MOC Include=\"..\\..\\src\\qt\\overviewpage.cpp\" />\n+    <QT_MOC Include=\"..\\..\\src\\qt\\rpcconsole.cpp\" />\n+    <MocHeaderFiles Include=\"..\\..\\src\\qt\\*.h\" />\n+    <ResourceTemplates Include=\"..\\..\\src\\qt\\*.qrc\" />\n+    <UiFormFiles Include=\"..\\..\\src\\qt\\forms\\*.ui\" />\n+    <TranslationFiles Include=\"..\\..\\src\\qt\\locale\\*.ts\" />\n+  </ItemGroup>\n+\n+  <Target Name=\"moccode\" Inputs=\"@(QT_MOC)\" Outputs=\"@(QT_MOC->'$(GeneratedFilesOutDir)\\%(Filename).moc')\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the libbitcoin_qt moc code include generation task.</ErrorText>\n+    </PropertyGroup>\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\" />\n+    <Exec Command=\"echo Performing libbitcoin_qt moc code include generation task, output path $(GeneratedFilesOutDir).\" />\n+    <Exec Command=\"echo $(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(QT_MOC.Identity)&quot; -o $(GeneratedFilesOutDir)\\%(Filename).moc.\" />\n+    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(QT_MOC.Identity)&quot; -o $(GeneratedFilesOutDir)\\%(Filename).moc\" />\n+  </Target>\n+\n+  <Target Name=\"mocheader\" Inputs=\"@(MocHeaderFiles)\" Outputs=\"@(MocHeaderFiles->'$(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp')\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the libbitcoin_qt moc header generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing libbitcoin_qt moc header generation task, output path $(GeneratedFilesOutDir)\\moc.\" />\n+    <Exec Command=\"echo $(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocHeaderFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp.\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\moc\\\" />\n+    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocHeaderFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp\" />\n+  </Target>\n+\n+  <Target Name=\"forms\" Inputs=\"@(UiFormFiles)\" Outputs=\"@(UiFormFiles->'$(GeneratedFilesOutDir)\\forms\\ui_%(Filename).h')\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the libbitcoin_qt forms header generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing libbitcoin_qt forms header generation task, output path $(GeneratedFilesOutDir)\\forms.\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\forms\\\" />\n+    <Exec Command=\"$(QtToolsDir)\\uic.exe &quot;%(UiFormFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\forms\\ui_%(Filename).h\" />\n+  </Target>\n+\n+  <Target Name=\"translation\" Inputs=\"@(TranslationFiles)\" Outputs=\"@(TranslationFiles->'..\\..\\src\\qt\\locale\\%(Filename).qm')\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the libbitcoin_qt translation file generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing libbitcoin_qt translation file generation task.\" />\n+    <Exec Command=\"$(QtToolsDir)\\lrelease.exe &quot;%(TranslationFiles.Identity)&quot; -qm ..\\..\\src\\qt\\locale\\%(Filename).qm\" />\n+  </Target>\n+\n+  <Target Name=\"resource\" Inputs=\"@(ResourceTemplates)\" Outputs=\"@(ResourceTemplates->'$(GeneratedFilesOutDir)\\rcc\\qrc_%(Filename).cpp')\" DependsOnTargets=\"translation\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the libbitcoin_qt resource code generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing libbitcoin_qt resource code generation task, output path $(GeneratedFilesOutDir)\\rcc.\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\rcc\\\" />\n+    <Exec Command=\"$(QtToolsDir)\\rcc.exe --verbose --name %(Filename) &quot;%(ResourceTemplates.Identity)&quot; -o $(GeneratedFilesOutDir)\\rcc\\qrc_%(Filename).cpp\" />\n+  </Target>\n+\n+  <Target Name=\"qtclean\">\n+    <Exec Command=\"echo Clean libbitcoin_qt generated files from $(GeneratedFilesOutDir).\" />\n+    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\forms;$(GeneratedFilesOutDir)\\moc;$(GeneratedFilesOutDir)\\rcc;\" />\n+    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\" />\n+  </Target>\n+\n+  <PropertyGroup>\n+    <BuildDependsOn>\n+        moccode;\n+        mocheader;\n+        forms;\n+        translation;\n+        resource;\n+        $(BuildDependsOn);\n+    </BuildDependsOn>\n+  </PropertyGroup>\n+  <PropertyGroup>\n+    <CleanDependsOn>\n+        qtclean;\n+        $(CleanDependsOn);\n+    </CleanDependsOn>\n+  </PropertyGroup>\n+\n+</Project>"
      },
      {
        "sha": "58e90dbaeb438623922423bfd1890d16e84543cc",
        "filename": "build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{460FEE33-1FE1-483F-B3BF-931FF8E969A5}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+    <ItemGroup>\n+@SOURCE_FILES@\n+    <ClCompile Include=\"..\\..\\src\\wallet\\init.cpp\">\n+      <ObjectFileName>$(IntDir)wallet_init.obj</ObjectFileName>\n+    </ClCompile>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "6ec40461c2adcd99965486308e490ed09ff8de03",
        "filename": "build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,17 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\util\\url.cpp\" />\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "9c8279c72abad60972a59d19cd663765e590cd01",
        "filename": "build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{93B86837-B543-48A5-A89B-7C87ABB77DF2}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "1a6b7b6b92670f31d4ae6ad79685744e85358b9f",
        "filename": "build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "e86eea81e6567b0306577ddc761a66b0221f2442",
        "filename": "build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{792D487F-F14C-49FC-A9DE-3FC150F31C3F}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "4cb0bdc90218add3a0cbfb365e15a7ba8d955e5c",
        "filename": "build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,37 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{2B384FA8-9EE1-4544-93CB-0D733C25E8CE}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\arith_uint256.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\consensus\\merkle.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\consensus\\tx_check.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\aes.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\chacha20.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\hmac_sha256.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\hmac_sha512.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\ripemd160.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\sha1.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\sha256.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\sha256_sse4.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\sha512.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\hash.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\primitives\\block.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\primitives\\transaction.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\pubkey.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\bitcoinconsensus.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\interpreter.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\script.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\script_error.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\uint256.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\util\\strencodings.cpp\" />\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "1610ae7d8661f421df97c103ae57bf80e9399371",
        "filename": "build_msvc/libleveldb/libleveldb.vcxproj",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libleveldb/libleveldb.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libleveldb/libleveldb.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libleveldb/libleveldb.vcxproj?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,61 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{18430FEF-6B61-4C53-B396-718E02850F1B}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\builder.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\c.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\dbformat.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\db_impl.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\db_iter.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\dumpfile.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\filename.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\log_reader.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\log_writer.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\memtable.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\repair.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\table_cache.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\version_edit.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\version_set.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\write_batch.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\helpers\\memenv\\memenv.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\block.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\block_builder.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\filter_block.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\format.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\iterator.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\merger.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\table.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\table_builder.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\two_level_iterator.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\arena.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\bloom.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\cache.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\coding.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\comparator.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\crc32c.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\env.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\env_windows.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\filter_policy.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\hash.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\histogram.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\logging.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\options.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\status.cc\" />\n+  </ItemGroup>\n+  <ItemDefinitionGroup>\n+     <ClCompile>\n+       <PreprocessorDefinitions>HAVE_CRC32C=0;HAVE_SNAPPY=0;__STDC_LIMIT_MACROS;LEVELDB_IS_BIG_ENDIAN=0;_UNICODE;UNICODE;_CRT_NONSTDC_NO_DEPRECATE;LEVELDB_PLATFORM_WINDOWS;LEVELDB_ATOMIC_PRESENT;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+       <DisableSpecificWarnings>4244;4267;4312;4722;</DisableSpecificWarnings>\n+       <AdditionalIncludeDirectories>..\\..\\src\\leveldb;..\\..\\src\\leveldb\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+     </ClCompile>\n+  </ItemDefinitionGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "c42918d6e17737ad8a473a5d597e4c162108e42f",
        "filename": "build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libsecp256k1/libsecp256k1.vcxproj?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\secp256k1\\src\\secp256k1.c\" />\n+  </ItemGroup>\n+    <ItemDefinitionGroup>\n+    <ClCompile>\n+      <PreprocessorDefinitions>ENABLE_MODULE_ECDH;ENABLE_MODULE_RECOVERY;ENABLE_MODULE_EXTRAKEYS;ENABLE_MODULE_SCHNORRSIG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+       <AdditionalIncludeDirectories>..\\..\\src\\secp256k1;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+     </ClCompile>\n+  </ItemDefinitionGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "5978b9a0d96f0c107da6c2beae79dae4c7536749",
        "filename": "build_msvc/libsecp256k1_config.h",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libsecp256k1_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libsecp256k1_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libsecp256k1_config.h?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,32 @@\n+/**********************************************************************\n+ * Copyright (c) 2013, 2014 Pieter Wuille                             *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef BITCOIN_LIBSECP256K1_CONFIG_H\n+#define BITCOIN_LIBSECP256K1_CONFIG_H\n+\n+#undef USE_ASM_X86_64\n+#undef USE_ENDOMORPHISM\n+#undef USE_FIELD_10X26\n+#undef USE_FIELD_5X52\n+#undef USE_FIELD_INV_BUILTIN\n+#undef USE_FIELD_INV_NUM\n+#undef USE_NUM_GMP\n+#undef USE_NUM_NONE\n+#undef USE_SCALAR_4X64\n+#undef USE_SCALAR_8X32\n+#undef USE_SCALAR_INV_BUILTIN\n+#undef USE_SCALAR_INV_NUM\n+\n+#define USE_NUM_NONE 1\n+#define USE_FIELD_INV_BUILTIN 1\n+#define USE_SCALAR_INV_BUILTIN 1\n+#define USE_FIELD_10X26 1\n+#define USE_SCALAR_8X32 1\n+\n+#define ECMULT_GEN_PREC_BITS 4\n+#define ECMULT_WINDOW_SIZE 15\n+\n+#endif /* BITCOIN_LIBSECP256K1_CONFIG_H */"
      },
      {
        "sha": "b5e844010e9197706dc0d75582fe2d3983bebfb5",
        "filename": "build_msvc/libtest_util/libtest_util.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libtest_util/libtest_util.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libtest_util/libtest_util.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libtest_util/libtest_util.vcxproj.in?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{868474FD-35F6-4400-8EED-30A33E7521D4}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "0f13a57241350d9bb8a37def99f0d5b2f91ad589",
        "filename": "build_msvc/libunivalue/libunivalue.vcxproj",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libunivalue/libunivalue.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/libunivalue/libunivalue.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libunivalue/libunivalue.vcxproj?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{5724BA7D-A09A-4BA8-800B-C4C1561B3D69}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue_get.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue_read.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue_write.cpp\" />\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "12868a987418158684c5aa5dd6eceef6b7116ba3",
        "filename": "build_msvc/msbuild/tasks/hexdump.targets",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/msbuild/tasks/hexdump.targets",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/msbuild/tasks/hexdump.targets",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msbuild/tasks/hexdump.targets?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,53 @@\n+<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <UsingTask\n+    TaskName=\"HeaderFromHexdump\"\n+    TaskFactory=\"CodeTaskFactory\"\n+    AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll\" >\n+    <ParameterGroup>\n+        <RawFilePath Required=\"true\" />\n+        <HeaderFilePath Required=\"true\" />\n+        <SourceHeader Required=\"true\" />\n+        <SourceFooter Required=\"true\" />\n+    </ParameterGroup>\n+    <Task>\n+      <Using Namespace=\"System\"/>\n+      <Using Namespace=\"System.IO\"/>\n+      <Code Type=\"Fragment\" Language=\"cs\">\n+<![CDATA[\n+Log.LogMessage(\"msbuild inline hexdump task for \" + RawFilePath + \".\");\n+if(File.Exists(RawFilePath) == false) {\n+    Log.LogError(\"hexdump task could not locate \" + RawFilePath + \".\");\n+}\n+else {\n+    FileInfo inFileInfo = new FileInfo(RawFilePath);\n+    FileInfo outFileInfo = new FileInfo(HeaderFilePath);\n+\n+    if (outFileInfo.Exists == false || inFileInfo.LastWriteTime > outFileInfo.LastWriteTime)\n+    {\n+      using (Stream inStm = File.OpenRead(RawFilePath))\n+      {\n+          using (StreamWriter sw = new StreamWriter(HeaderFilePath))\n+          {\n+              sw.WriteLine(SourceHeader);\n+              int count = 0;\n+              int rawChar = inStm.ReadByte();\n+              while(rawChar != -1)\n+              {\n+                  sw.Write(\"0x{0:x2}, \", rawChar);\n+                  count++;\n+                  if(count % 8 == 0)\n+                  {\n+                      sw.WriteLine();\n+                  }\n+                  rawChar = inStm.ReadByte();\n+              }\n+              sw.WriteLine(SourceFooter);\n+          }\n+      }\n+   }\n+}\n+]]>\n+      </Code>\n+    </Task>\n+  </UsingTask>\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "2ccb8b30e053f425e2b590a2ae5ee6d51523a957",
        "filename": "build_msvc/msbuild/tasks/replaceinfile.targets",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/msbuild/tasks/replaceinfile.targets",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/msbuild/tasks/replaceinfile.targets",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msbuild/tasks/replaceinfile.targets?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,35 @@\n+<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <UsingTask\n+    TaskName=\"ReplaceInFile\"\n+    TaskFactory=\"CodeTaskFactory\"\n+    AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll\" >\n+    <ParameterGroup>\n+        <FilePath Required=\"true\" />\n+        <Replace Required=\"true\" />\n+        <By Required=\"false\" />\n+        <ToFullPath Required=\"false\" />\n+    </ParameterGroup>\n+    <Task>\n+      <Using Namespace=\"System\"/>\n+      <Using Namespace=\"System.IO\"/>\n+      <Code Type=\"Fragment\" Language=\"cs\">\n+<![CDATA[\n+if(File.Exists(FilePath) == false) {\n+    Log.LogError(\"replaceinfile task could not locate \" + FilePath + \".\");\n+}\n+else {\n+    var data = File.ReadAllText(FilePath);\n+    var by = By;\n+    if (ToFullPath == \"true\")\n+    {\n+       by = Path.GetFullPath(by);\n+    }\n+    data = data.Replace(Replace, by);\n+    Log.LogMessage(\"Replace '\" + Replace + \"' by '\" + by + \"' in \" + FilePath);\n+    File.WriteAllText(FilePath, data, new System.Text.UTF8Encoding(false));\n+}\n+]]>\n+      </Code>\n+    </Task>\n+  </UsingTask>\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "d99b17d38127bec2623a42552f461979cee61531",
        "filename": "build_msvc/msvc-autogen.py",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/msvc-autogen.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/msvc-autogen.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msvc-autogen.py?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,86 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2016-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import os\n+import re\n+import argparse\n+from shutil import copyfile\n+\n+SOURCE_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'src'))\n+DEFAULT_PLATFORM_TOOLSET = R'v141'\n+\n+libs = [\n+    'libbitcoin_cli',\n+    'libbitcoin_common',\n+    'libbitcoin_crypto',\n+    'libbitcoin_server',\n+    'libbitcoin_util',\n+    'libbitcoin_wallet_tool',\n+    'libbitcoin_wallet',\n+    'libbitcoin_zmq',\n+    'bench_bitcoin',\n+    'libtest_util',\n+]\n+\n+ignore_list = [\n+]\n+\n+lib_sources = {}\n+\n+\n+def parse_makefile(makefile):\n+    with open(makefile, 'r', encoding='utf-8') as file:\n+        current_lib = ''\n+        for line in file.read().splitlines():\n+            if current_lib:\n+                source = line.split()[0]\n+                if source.endswith('.cpp') and not source.startswith('$') and source not in ignore_list:\n+                    source_filename = source.replace('/', '\\\\')\n+                    object_filename = source.replace('/', '_')[:-4] + \".obj\"\n+                    lib_sources[current_lib].append((source_filename, object_filename))\n+                if not line.endswith('\\\\'):\n+                    current_lib = ''\n+                continue\n+            for lib in libs:\n+                _lib = lib.replace('-', '_')\n+                if re.search(_lib + '.*_SOURCES \\\\= \\\\\\\\', line):\n+                    current_lib = lib\n+                    lib_sources[current_lib] = []\n+                    break\n+\n+def set_common_properties(toolset):\n+    with open(os.path.join(SOURCE_DIR, '../build_msvc/common.init.vcxproj'), 'r', encoding='utf-8') as rfile:\n+        s = rfile.read()\n+        s = re.sub('<PlatformToolset>.*?</PlatformToolset>', '<PlatformToolset>'+toolset+'</PlatformToolset>', s)\n+    with open(os.path.join(SOURCE_DIR, '../build_msvc/common.init.vcxproj'), 'w', encoding='utf-8',newline='\\n') as wfile:\n+        wfile.write(s)\n+\n+def main():\n+    parser = argparse.ArgumentParser(description='Bitcoin-core msbuild configuration initialiser.')\n+    parser.add_argument('-toolset', nargs='?',help='Optionally sets the msbuild platform toolset, e.g. v142 for Visual Studio 2019.'\n+         ' default is %s.'%DEFAULT_PLATFORM_TOOLSET)\n+    args = parser.parse_args()\n+    if args.toolset:\n+        set_common_properties(args.toolset)\n+\n+    for makefile_name in os.listdir(SOURCE_DIR):\n+        if 'Makefile' in makefile_name:\n+            parse_makefile(os.path.join(SOURCE_DIR, makefile_name))\n+    for key, value in lib_sources.items():\n+        vcxproj_filename = os.path.abspath(os.path.join(os.path.dirname(__file__), key, key + '.vcxproj'))\n+        content = ''\n+        for source_filename, object_filename in value:\n+            content += '    <ClCompile Include=\"..\\\\..\\\\src\\\\' + source_filename + '\">\\n'\n+            content += '      <ObjectFileName>$(IntDir)' + object_filename + '</ObjectFileName>\\n'\n+            content += '    </ClCompile>\\n'\n+        with open(vcxproj_filename + '.in', 'r', encoding='utf-8') as vcxproj_in_file:\n+            with open(vcxproj_filename, 'w', encoding='utf-8') as vcxproj_file:\n+                vcxproj_file.write(vcxproj_in_file.read().replace(\n+                    '@SOURCE_FILES@\\n', content))\n+    copyfile(os.path.join(SOURCE_DIR,'../build_msvc/bitcoin_config.h'), os.path.join(SOURCE_DIR, 'config/bitcoin-config.h'))\n+    copyfile(os.path.join(SOURCE_DIR,'../build_msvc/libsecp256k1_config.h'), os.path.join(SOURCE_DIR, 'secp256k1/src/libsecp256k1-config.h'))\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "2095c0c3213513510eb6106852943fc991d8e2b1",
        "filename": "build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "status": "added",
        "additions": 122,
        "deletions": 0,
        "changes": 122,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,122 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <Import Project=\"..\\common.qt.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{51201D5E-D939-4854-AE9D-008F03FF518E}</ProjectGuid>\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\test\\util\\setup_common.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\addressbooktests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\apptests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\compattests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\rpcnestedtests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\test_main.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\uritests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\util.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\wallettests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\test\\wallet_test_fixture.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addressbooktests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_apptests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_compattests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_rpcnestedtests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_uritests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_wallettests.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_qt\\libbitcoin_qt.vcxproj\">\n+      <Project>{2b4abff8-d1fd-4845-88c9-1f3c0a6512bf}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Release'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>..\\libbitcoin_qt\\$(GeneratedFilesOutDir)\\..\\;$(QtIncludeDir)\\QtTest;$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>$(QtLibraryDir)\\Qt5Test.lib;$(QtReleaseLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n+\t  <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+    </Link>\n+  </ItemDefinitionGroup>\n+\n+    <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Debug'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>..\\libbitcoin_qt\\$(GeneratedFilesOutDir)\\..\\;$(QtIncludeDir)\\QtTest;$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>$(QtDebugLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n+\t  <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\addressbooktests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\apptests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\compattests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\rpcnestedtests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\uritests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\wallettests.h\" />\n+  </ItemGroup>\n+  <Target Name=\"moccode\" Inputs=\"@(MocTestFiles)\" Outputs=\"@(MocTestFiles->'$(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp')\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the test_bitcoin-qt moc code generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing test_bitcoin-qt moc generation task, output path $(GeneratedFilesOutDir)\\moc.\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\moc\\\" />\n+    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocTestFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp\" />\n+  </Target>\n+  <Target Name=\"QtTestCleanGeneratedFiles\">\n+    <Exec Command=\"echo Clean test_bitcoin-qt generated files from $(GeneratedFilesOutDir).\" />\n+    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\moc\\*\" />\n+    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\moc\" />\n+  </Target>\n+  <PropertyGroup>\n+    <BuildDependsOn>\n+       moccode;\n+       $(BuildDependsOn);\n+    </BuildDependsOn>\n+  </PropertyGroup>\n+  <PropertyGroup>\n+    <CleanDependsOn>\n+        QtTestCleanGeneratedFiles;\n+        $(CleanDependsOn);\n+    </CleanDependsOn>\n+  </PropertyGroup>\n+</Project>"
      },
      {
        "sha": "5c4b777d5164bbc3354b26f262310e9a385a99cd",
        "filename": "build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "status": "added",
        "additions": 73,
        "deletions": 0,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin/test_bitcoin.vcxproj?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,73 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{A56B73DB-D46D-4882-8374-1FE3FFA08F07}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\test\\*_properties.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\test\\*_tests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\test\\gen\\*_gen.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\test\\main.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\test\\util\\*.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_fixture.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_tests.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libtest_util\\libtest_util.vcxproj\">\n+      <Project>{1e065f03-3566-47d0-8fa9-daa72b084e7d}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Target Name=\"RawBenchHeaderGen\" BeforeTargets=\"PrepareForBuild\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the JSON test header generation task.</ErrorText>\n+    </PropertyGroup>\n+    <ItemGroup>\n+      <JsonTestFile Include=\"..\\..\\src\\test\\data\\*.json\" />\n+      <RawTestFile Include=\"..\\..\\src\\test\\data\\*.raw\" />\n+    </ItemGroup>\n+    <HeaderFromHexdump RawFilePath=\"%(RawTestFile.FullPath)\" HeaderFilePath=\"%(RawTestFile.FullPath).h\" SourceHeader=\"static unsigned const char %(RawTestFile.Filename)_raw[] = {\" SourceFooter=\"};\" />\n+    <HeaderFromHexdump RawFilePath=\"%(JsonTestFile.FullPath)\" HeaderFilePath=\"%(JsonTestFile.FullPath).h\" SourceHeader=\"namespace json_tests{ static unsigned const char %(JsonTestFile.Filename)[] = {\" SourceFooter=\"};}\" />\n+  </Target>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Label=\"hexdumpTarget\" Project=\"..\\msbuild\\tasks\\hexdump.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "5fdd97dc783e587ab68c49fd5ee06a53df2ec88f",
        "filename": "build_msvc/testconsensus/testconsensus.cpp",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/testconsensus/testconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/testconsensus/testconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/testconsensus/testconsensus.cpp?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,54 @@\n+// Copyright (c) 2018-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iostream>\n+\n+// bitcoin includes.\n+#include <..\\src\\script\\bitcoinconsensus.h>\n+#include <..\\src\\primitives\\transaction.h>\n+#include <..\\src\\script\\script.h>\n+#include <..\\src\\streams.h>\n+#include <..\\src\\version.h>\n+\n+CMutableTransaction BuildSpendingTransaction(const CScript& scriptSig, const CScriptWitness& scriptWitness, int nValue = 0)\n+{\n+    CMutableTransaction txSpend;\n+    txSpend.nVersion = 1;\n+    txSpend.nLockTime = 0;\n+    txSpend.vin.resize(1);\n+    txSpend.vout.resize(1);\n+    txSpend.vin[0].scriptWitness = scriptWitness;\n+    txSpend.vin[0].prevout.hash = uint256();\n+    txSpend.vin[0].prevout.n = 0;\n+    txSpend.vin[0].scriptSig = scriptSig;\n+    txSpend.vin[0].nSequence = CTxIn::SEQUENCE_FINAL;\n+    txSpend.vout[0].scriptPubKey = CScript();\n+    txSpend.vout[0].nValue = nValue;\n+\n+    return txSpend;\n+}\n+\n+int main()\n+{\n+    std::cout << \"bitcoinconsensus version: \" << bitcoinconsensus_version() << std::endl;\n+\n+    CScript pubKeyScript;\n+    pubKeyScript << OP_1 << OP_0 << OP_1;\n+\n+    int amount = 0; // 600000000;\n+\n+    CScript scriptSig;\n+    CScriptWitness scriptWitness;\n+    CTransaction vanillaSpendTx = BuildSpendingTransaction(scriptSig, scriptWitness, amount);\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << vanillaSpendTx;\n+\n+    bitcoinconsensus_error err;\n+    auto op0Result = bitcoinconsensus_verify_script_with_amount(pubKeyScript.data(), pubKeyScript.size(), amount, (const unsigned char*)&stream[0], stream.size(), 0, bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL, &err);\n+    std::cout << \"Op0 result: \" << op0Result << \", error code \" << err << std::endl;\n+\n+    getchar();\n+\n+    return 0;\n+}"
      },
      {
        "sha": "776c40920abdd43ca179132ad31c77dd3b2685a3",
        "filename": "build_msvc/testconsensus/testconsensus.vcxproj",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/testconsensus/testconsensus.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/testconsensus/testconsensus.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/testconsensus/testconsensus.vcxproj?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,28 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{E78473E9-B850-456C-9120-276301E04C06}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"testconsensus.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2B384FA8-9EE1-4544-93CB-0D733C25E8CE}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "dfd3929c4410b92364a6f314295ddbaab7912bf7",
        "filename": "build_msvc/vcpkg.json",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/vcpkg.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/build_msvc/vcpkg.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/vcpkg.json?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,20 @@\n+{\n+  \"name\": \"bitcoin-core\",\n+  \"version-string\": \"1\",\n+  \"dependencies\": [\n+    \"berkeleydb\",\n+    \"boost-filesystem\",\n+    \"boost-multi-index\",\n+    \"boost-process\",\n+    \"boost-signals2\",\n+    \"boost-test\",\n+    \"boost-thread\",\n+    \"sqlite3\",\n+    \"double-conversion\",\n+    {\n+      \"name\": \"libevent\",\n+      \"features\": [\"thread\"]\n+    },\n+    \"zeromq\"\n+  ]\n+}"
      },
      {
        "sha": "3c5f04c39e348d407718c7fce8cd4c69ab6cf0db",
        "filename": "ci/README.md",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/README.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,65 @@\n+## CI Scripts\n+\n+This directory contains scripts for each build step in each build stage.\n+\n+### Running a Stage Locally\n+\n+Be aware that the tests will be built and run in-place, so please run at your own risk.\n+If the repository is not a fresh git clone, you might have to clean files from previous builds or test runs first.\n+\n+The ci needs to perform various sysadmin tasks such as installing packages or writing to the user's home directory.\n+While most of the actions are done inside a docker container, this is not possible for all. Thus, cache directories,\n+such as the depends cache, previous release binaries, or ccache, are mounted as read-write into the docker container. While it should be fine to run\n+the ci system locally on you development box, the ci scripts can generally be assumed to have received less review and\n+testing compared to other parts of the codebase. If you want to keep the work tree clean, you might want to run the ci\n+system in a virtual machine with a Linux operating system of your choice.\n+\n+To allow for a wide range of tested environments, but also ensure reproducibility to some extent, the test stage\n+requires `docker` to be installed. To install all requirements on Ubuntu, run\n+\n+```\n+sudo apt install docker.io bash\n+```\n+\n+To run the default test stage,\n+\n+```\n+./ci/test_run_all.sh\n+```\n+\n+To run the test stage with a specific configuration,\n+\n+```\n+FILE_ENV=\"./ci/test/00_setup_env_arm.sh\" ./ci/test_run_all.sh\n+```\n+\n+### Configurations\n+\n+The test files (`FILE_ENV`) are constructed to test a wide range of\n+configurations, rather than a single pass/fail. This helps to catch build\n+failures and logic errors that present on platforms other than the ones the\n+author has tested.\n+\n+Some builders use the dependency-generator in `./depends`, rather than using\n+the system package manager to install build dependencies. This guarantees that\n+the tester is using the same versions as the release builds, which also use\n+`./depends`.\n+\n+If no `FILE_ENV` has been specified or values are left out, `00_setup_env.sh`\n+is used as the default configuration with fallback values.\n+\n+It is also possible to force a specific configuration without modifying the\n+file. For example,\n+\n+```\n+MAKEJOBS=\"-j1\" FILE_ENV=\"./ci/test/00_setup_env_arm.sh\" ./ci/test_run_all.sh\n+```\n+\n+The files starting with `0n` (`n` greater than 0) are the scripts that are run\n+in order.\n+\n+### Cache\n+\n+In order to avoid rebuilding all dependencies for each build, the binaries are\n+cached and re-used when possible. Changes in the dependency-generator will\n+trigger cache-invalidation and rebuilds as necessary."
      },
      {
        "sha": "fae424051db6fbab7cfef56d701a77b4c06b24b6",
        "filename": "ci/lint/04_install.sh",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/lint/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/lint/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/04_install.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,20 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+\n+travis_retry sudo apt update && sudo apt install -y clang-format-9\n+sudo update-alternatives --install /usr/bin/clang-format      clang-format      $(which clang-format-9     ) 100\n+sudo update-alternatives --install /usr/bin/clang-format-diff clang-format-diff $(which clang-format-diff-9) 100\n+\n+travis_retry pip3 install codespell==1.17.1\n+travis_retry pip3 install flake8==3.8.3\n+travis_retry pip3 install yq\n+travis_retry pip3 install mypy==0.781\n+\n+SHELLCHECK_VERSION=v0.7.1\n+curl -sL \"https://github.com/koalaman/shellcheck/releases/download/${SHELLCHECK_VERSION}/shellcheck-${SHELLCHECK_VERSION}.linux.x86_64.tar.xz\" | tar --xz -xf - --directory /tmp/\n+export PATH=\"/tmp/shellcheck-${SHELLCHECK_VERSION}:${PATH}\""
      },
      {
        "sha": "2987812c8e64bab1648a3dc04492b1d338cdf047",
        "filename": "ci/lint/05_before_script.sh",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/lint/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/lint/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/05_before_script.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,9 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+\n+git fetch --unshallow"
      },
      {
        "sha": "dc0f9b923bb14a66f6d83c52f5f0aa2eabdf392d",
        "filename": "ci/lint/06_script.sh",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/lint/06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/lint/06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/06_script.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,30 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+\n+if [ \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then\n+  # TRAVIS_BRANCH will be present in a Travis environment. For builds triggered\n+  # by a pull request this is the name of the branch targeted by the pull request.\n+  # https://docs.travis-ci.com/user/environment-variables/\n+  COMMIT_RANGE=\"$TRAVIS_BRANCH..HEAD\"\n+  test/lint/commit-script-check.sh $COMMIT_RANGE\n+fi\n+\n+test/lint/git-subtree-check.sh src/crypto/ctaes\n+test/lint/git-subtree-check.sh src/secp256k1\n+test/lint/git-subtree-check.sh src/univalue\n+test/lint/git-subtree-check.sh src/leveldb\n+test/lint/git-subtree-check.sh src/crc32c\n+test/lint/check-doc.py\n+test/lint/check-rpc-mappings.py .\n+test/lint/lint-all.sh\n+\n+if [ \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" ] && [ \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then\n+    git log --merges --before=\"2 days ago\" -1 --format='%H' > ./contrib/verify-commits/trusted-sha512-root-commit\n+    travis_retry gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys $(<contrib/verify-commits/trusted-keys) &&\n+    ./contrib/verify-commits/verify-commits.py --clean-merge=2;\n+fi"
      },
      {
        "sha": "1b03c652dbbf5b51f8c05e85090ad6b3ce4a1a85",
        "filename": "ci/retry/README.md",
        "status": "added",
        "additions": 123,
        "deletions": 0,
        "changes": 123,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/retry/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/retry/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/retry/README.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,123 @@\n+retry - The command line retry tool\n+------------------------------------------\n+\n+Retry any shell command with exponential backoff or constant delay.\n+\n+### Instructions\n+\n+Install:\n+\n+retry is a shell script, so drop it somewhere and make sure it's added to your $PATH. Or you can use the following one-liner:\n+\n+```sh\n+sudo sh -c \"curl https://raw.githubusercontent.com/kadwanev/retry/master/retry -o /usr/local/bin/retry && chmod +x /usr/local/bin/retry\"\n+```\n+\n+If you're on OS X, retry is also on Homebrew:\n+\n+```\n+brew pull 27283\n+brew install retry\n+```\n+Not popular enough for homebrew-core. Please star this project to help.\n+\n+### Usage\n+\n+Help:\n+\n+`retry -?`\n+\n+    Usage: retry [options] -- execute command\n+        -h, -?, --help\n+        -v, --verbose                    Verbose output\n+        -t, --tries=#                    Set max retries: Default 10\n+        -s, --sleep=secs                 Constant sleep amount (seconds)\n+        -m, --min=secs                   Exponential Backoff: minimum sleep amount (seconds): Default 0.3\n+        -x, --max=secs                   Exponential Backoff: maximum sleep amount (seconds): Default 60\n+        -f, --fail=\"script +cmds\"        Fail Script: run in case of final failure\n+\n+### Examples\n+\n+No problem:\n+\n+`retry echo u work good`\n+\n+    u work good\n+\n+Test functionality:\n+\n+`retry 'echo \"y u no work\"; false'`\n+\n+    y u no work\n+    Before retry #1: sleeping 0.3 seconds\n+    y u no work\n+    Before retry #2: sleeping 0.6 seconds\n+    y u no work\n+    Before retry #3: sleeping 1.2 seconds\n+    y u no work\n+    Before retry #4: sleeping 2.4 seconds\n+    y u no work\n+    Before retry #5: sleeping 4.8 seconds\n+    y u no work\n+    Before retry #6: sleeping 9.6 seconds\n+    y u no work\n+    Before retry #7: sleeping 19.2 seconds\n+    y u no work\n+    Before retry #8: sleeping 38.4 seconds\n+    y u no work\n+    Before retry #9: sleeping 60.0 seconds\n+    y u no work\n+    Before retry #10: sleeping 60.0 seconds\n+    y u no work\n+    etc..\n+\n+Limit retries:\n+\n+`retry -t 4 'echo \"y u no work\"; false'`\n+\n+    y u no work\n+    Before retry #1: sleeping 0.3 seconds\n+    y u no work\n+    Before retry #2: sleeping 0.6 seconds\n+    y u no work\n+    Before retry #3: sleeping 1.2 seconds\n+    y u no work\n+    Before retry #4: sleeping 2.4 seconds\n+    y u no work\n+    Retries exhausted\n+\n+Bad command:\n+\n+`retry poop`\n+\n+    bash: poop: command not found\n+\n+Fail command:\n+\n+`retry -t 3 -f 'echo \"oh poopsickles\"' 'echo \"y u no work\"; false'`\n+\n+    y u no work\n+    Before retry #1: sleeping 0.3 seconds\n+    y u no work\n+    Before retry #2: sleeping 0.6 seconds\n+    y u no work\n+    Before retry #3: sleeping 1.2 seconds\n+    y u no work\n+    Retries exhausted, running fail script\n+    oh poopsickles\n+\n+Last attempt passed:\n+\n+`retry -t 3 -- 'if [ $RETRY_ATTEMPT -eq 3 ]; then echo Passed at attempt $RETRY_ATTEMPT; true; else echo Failed at attempt $RETRY_ATTEMPT; false; fi;'`\n+\n+    Failed at attempt 0\n+    Before retry #1: sleeping 0.3 seconds\n+    Failed at attempt 1\n+    Before retry #2: sleeping 0.6 seconds\n+    Failed at attempt 2\n+    Before retry #3: sleeping 1.2 seconds\n+    Passed at attempt 3\n+\n+### License\n+\n+Apache 2.0 - go nuts"
      },
      {
        "sha": "3c06519dbdfebececdfe030cc60cab72d62658a2",
        "filename": "ci/retry/retry",
        "status": "added",
        "additions": 163,
        "deletions": 0,
        "changes": 163,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/retry/retry",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/retry/retry",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/retry/retry?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,163 @@\n+#!/usr/bin/env bash\n+\n+GETOPT_BIN=$IN_GETOPT_BIN\n+GETOPT_BIN=${GETOPT_BIN:-getopt}\n+\n+__sleep_amount() {\n+  if [ -n \"$constant_sleep\" ]; then\n+    sleep_time=$constant_sleep\n+  else\n+    #TODO: check for awk\n+    #TODO: check if user would rather use one of the other possible dependencies: python, ruby, bc, dc\n+    sleep_time=`awk \"BEGIN {t = $min_sleep * $(( (1<<($attempts -1)) )); print (t > $max_sleep ? $max_sleep : t)}\"`\n+  fi\n+}\n+\n+__log_out() {\n+  echo \"$1\" 1>&2\n+}\n+\n+# Parameters: max_tries min_sleep max_sleep constant_sleep fail_script EXECUTION_COMMAND\n+retry()\n+{\n+  local max_tries=\"$1\"; shift\n+  local min_sleep=\"$1\"; shift\n+  local max_sleep=\"$1\"; shift\n+  local constant_sleep=\"$1\"; shift\n+  local fail_script=\"$1\"; shift\n+  if [ -n \"$VERBOSE\" ]; then\n+    __log_out \"Retry Parameters: max_tries=$max_tries min_sleep=$min_sleep max_sleep=$max_sleep constant_sleep=$constant_sleep\"\n+    if [ -n \"$fail_script\" ]; then __log_out \"Fail script: $fail_script\"; fi\n+    __log_out \"\"\n+    __log_out \"Execution Command: $*\"\n+    __log_out \"\"\n+  fi\n+\n+  local attempts=0\n+  local return_code=1\n+\n+\n+  while [[ $return_code -ne 0 && $attempts -le $max_tries ]]; do\n+    if [ $attempts -gt 0 ]; then\n+      __sleep_amount\n+      __log_out \"Before retry #$attempts: sleeping $sleep_time seconds\"\n+      sleep $sleep_time\n+    fi\n+\n+    P=\"$1\"\n+    for param in \"${@:2}\"; do P=\"$P '$param'\"; done\n+    #TODO: replace single quotes in each arg with '\"'\"' ?\n+    export RETRY_ATTEMPT=$attempts\n+    bash -c \"$P\"\n+    return_code=$?\n+    #__log_out \"Process returned $return_code on attempt $attempts\"\n+    if [ $return_code -eq 127 ]; then\n+      # command not found\n+      exit $return_code\n+    elif [ $return_code -ne 0 ]; then\n+      attempts=$[$attempts +1]\n+    fi\n+  done\n+\n+  if [ $attempts -gt $max_tries ]; then\n+    if [ -n \"$fail_script\" ]; then\n+      __log_out \"Retries exhausted, running fail script\"\n+      eval $fail_script\n+    else\n+      __log_out \"Retries exhausted\"\n+    fi\n+  fi\n+\n+  exit $return_code\n+}\n+\n+# If we're being sourced, don't worry about such things\n+if [ \"$BASH_SOURCE\" == \"$0\" ]; then\n+  # Prints the help text\n+  help()\n+  {\n+    local retry=$(basename $0)\n+    cat <<EOF\n+Usage: $retry [options] -- execute command\n+    -h, -?, --help\n+    -v, --verbose                    Verbose output\n+    -t, --tries=#                    Set max retries: Default 10\n+    -s, --sleep=secs                 Constant sleep amount (seconds)\n+    -m, --min=secs                   Exponential Backoff: minimum sleep amount (seconds): Default 0.3\n+    -x, --max=secs                   Exponential Backoff: maximum sleep amount (seconds): Default 60\n+    -f, --fail=\"script +cmds\"        Fail Script: run in case of final failure\n+EOF\n+  }\n+\n+  # show help for no arguments if stdin is a terminal\n+  if { [ -z \"$1\" ] && [ -t 0 ] ; } || [ \"$1\" == '-h' ] || [ \"$1\" == '-?' ] || [ \"$1\" == '--help' ]\n+  then\n+    help\n+    exit 0\n+  fi\n+\n+  $GETOPT_BIN --test > /dev/null\n+  if [[ $? -ne 4 ]]; then\n+      echo \"I\u2019m sorry, 'getopt --test' failed in this environment. Please load GNU getopt.\"\n+      exit 1\n+  fi\n+\n+  OPTIONS=vt:s:m:x:f:\n+  LONGOPTIONS=verbose,tries:,sleep:,min:,max:,fail:\n+\n+  PARSED=$($GETOPT_BIN --options=\"$OPTIONS\" --longoptions=\"$LONGOPTIONS\" --name \"$0\" -- \"$@\")\n+  if [[ $? -ne 0 ]]; then\n+    # e.g. $? == 1\n+    #  then getopt has complained about wrong arguments to stdout\n+    exit 2\n+  fi\n+  # read getopt\u2019s output this way to handle the quoting right:\n+  eval set -- \"$PARSED\"\n+\n+  max_tries=10\n+  min_sleep=0.3\n+  max_sleep=60.0\n+  constant_sleep=\n+  fail_script=\n+\n+  # now enjoy the options in order and nicely split until we see --\n+  while true; do\n+      case \"$1\" in\n+          -v|--verbose)\n+              VERBOSE=true\n+              shift\n+              ;;\n+          -t|--tries)\n+              max_tries=\"$2\"\n+              shift 2\n+              ;;\n+          -s|--sleep)\n+              constant_sleep=\"$2\"\n+              shift 2\n+              ;;\n+          -m|--min)\n+              min_sleep=\"$2\"\n+              shift 2\n+              ;;\n+          -x|--max)\n+              max_sleep=\"$2\"\n+              shift 2\n+              ;;\n+          -f|--fail)\n+              fail_script=\"$2\"\n+              shift 2\n+              ;;\n+          --)\n+              shift\n+              break\n+              ;;\n+          *)\n+              echo \"Programming error\"\n+              exit 3\n+              ;;\n+      esac\n+  done\n+\n+  retry \"$max_tries\" \"$min_sleep\" \"$max_sleep\" \"$constant_sleep\" \"$fail_script\" \"$@\"\n+\n+fi"
      },
      {
        "sha": "702e88186252621e5b8787ef8d89788556173c26",
        "filename": "ci/test/00_setup_env.sh",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,72 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+# The root dir.\n+# The ci system copies this folder.\n+# This is where the depends build is done.\n+BASE_ROOT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\"/../../ >/dev/null 2>&1 && pwd )\n+export BASE_ROOT_DIR\n+\n+echo \"Setting specific values in env\"\n+if [ -n \"${FILE_ENV}\" ]; then\n+  set -o errexit;\n+  # shellcheck disable=SC1090\n+  source \"${FILE_ENV}\"\n+fi\n+\n+echo \"Fallback to default values in env (if not yet set)\"\n+# The number of parallel jobs to pass down to make and test_runner.py\n+export MAKEJOBS=${MAKEJOBS:--j4}\n+# A folder for the ci system to put temporary files (ccache, datadirs for tests, ...)\n+# This folder only exists on the ci host.\n+export BASE_SCRATCH_DIR=${BASE_SCRATCH_DIR:-$BASE_ROOT_DIR/ci/scratch}\n+# What host to compile for. See also ./depends/README.md\n+# Tests that need cross-compilation export the appropriate HOST.\n+# Tests that run natively guess the host\n+export HOST=${HOST:-$(\"$BASE_ROOT_DIR/depends/config.guess\")}\n+# Whether to prefer BusyBox over GNU utilities\n+export USE_BUSY_BOX=${USE_BUSY_BOX:-false}\n+\n+export RUN_UNIT_TESTS=${RUN_UNIT_TESTS:-true}\n+export RUN_FUNCTIONAL_TESTS=${RUN_FUNCTIONAL_TESTS:-true}\n+export RUN_SECURITY_TESTS=${RUN_SECURITY_TESTS:-false}\n+# By how much to scale the test_runner timeouts (option --timeout-factor).\n+# This is needed because some ci machines have slow CPU or disk, so sanitizers\n+# might be slow or a reindex might be waiting on disk IO.\n+export TEST_RUNNER_TIMEOUT_FACTOR=${TEST_RUNNER_TIMEOUT_FACTOR:-4}\n+export TEST_RUNNER_ENV=${TEST_RUNNER_ENV:-}\n+export RUN_FUZZ_TESTS=${RUN_FUZZ_TESTS:-false}\n+export EXPECTED_TESTS_DURATION_IN_SECONDS=${EXPECTED_TESTS_DURATION_IN_SECONDS:-1000}\n+\n+export CONTAINER_NAME=${CONTAINER_NAME:-ci_unnamed}\n+export DOCKER_NAME_TAG=${DOCKER_NAME_TAG:-ubuntu:18.04}\n+# Randomize test order.\n+# See https://www.boost.org/doc/libs/1_71_0/libs/test/doc/html/boost_test/utf_reference/rt_param_reference/random.html\n+export BOOST_TEST_RANDOM=${BOOST_TEST_RANDOM:-1}\n+# See man 7 debconf\n+export DEBIAN_FRONTEND=noninteractive\n+export CCACHE_SIZE=${CCACHE_SIZE:-100M}\n+export CCACHE_TEMPDIR=${CCACHE_TEMPDIR:-/tmp/.ccache-temp}\n+export CCACHE_COMPRESS=${CCACHE_COMPRESS:-1}\n+# The cache dir.\n+# This folder exists on the ci host and ci guest. Changes are propagated back and forth.\n+export CCACHE_DIR=${CCACHE_DIR:-$BASE_SCRATCH_DIR/.ccache}\n+# The depends dir.\n+# This folder exists on the ci host and ci guest. Changes are propagated back and forth.\n+export DEPENDS_DIR=${DEPENDS_DIR:-$BASE_ROOT_DIR/depends}\n+# Folder where the build result is put (bin and lib).\n+export BASE_OUTDIR=${BASE_OUTDIR:-$BASE_SCRATCH_DIR/out/$HOST}\n+# Folder where the build is done (dist and out-of-tree build).\n+export BASE_BUILD_DIR=${BASE_BUILD_DIR:-$BASE_SCRATCH_DIR/build}\n+export PREVIOUS_RELEASES_DIR=${PREVIOUS_RELEASES_DIR:-$BASE_ROOT_DIR/releases/$HOST}\n+export SDK_URL=${SDK_URL:-https://bitcoincore.org/depends-sources/sdks}\n+export DOCKER_PACKAGES=${DOCKER_PACKAGES:-build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3 rsync git procps}\n+export GOAL=${GOAL:-install}\n+export DIR_QA_ASSETS=${DIR_QA_ASSETS:-${BASE_SCRATCH_DIR}/qa-assets}\n+export PATH=${BASE_ROOT_DIR}/ci/retry:$PATH\n+export CI_RETRY_EXE=${CI_RETRY_EXE:-\"retry --\"}"
      },
      {
        "sha": "610e55c4c3e4b9840d0d0b6631f94c669e313fd7",
        "filename": "ci/test/00_setup_env_arm.sh",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_arm.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_arm.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_arm.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,28 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=arm-linux-gnueabihf\n+# The host arch is unknown, so we run the tests through qemu.\n+# If the host is arm and wants to run the tests natively, it can set QEMU_USER_CMD to the empty string.\n+if [ -z ${QEMU_USER_CMD+x} ]; then export QEMU_USER_CMD=\"${QEMU_USER_CMD:-\"qemu-arm -L /usr/arm-linux-gnueabihf/\"}\"; fi\n+export DPKG_ADD_ARCH=\"armhf\"\n+export PACKAGES=\"python3-zmq g++-arm-linux-gnueabihf busybox libc6:armhf libstdc++6:armhf libfontconfig1:armhf libxcb1:armhf\"\n+if [ -n \"$QEMU_USER_CMD\" ]; then\n+  # Likely cross-compiling, so install the needed gcc and qemu-user\n+  export PACKAGES=\"$PACKAGES qemu-user\"\n+fi\n+export CONTAINER_NAME=ci_arm_linux\n+# Use debian to avoid 404 apt errors when cross compiling\n+export DOCKER_NAME_TAG=\"debian:buster\"\n+export USE_BUSY_BOX=true\n+export RUN_UNIT_TESTS=true\n+export RUN_FUNCTIONAL_TESTS=false\n+export GOAL=\"install\"\n+# -Wno-psabi is to disable ABI warnings: \"note: parameter passing for argument of type ... changed in GCC 7.1\"\n+# This could be removed once the ABI change warning does not show up by default\n+export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi --enable-werror --with-boost-process\""
      },
      {
        "sha": "e58003ab19e33ae2da6454f95ba1ddd277b11b3d",
        "filename": "ci/test/00_setup_env_i686_centos.sh",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_i686_centos.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_i686_centos.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_i686_centos.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,15 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=i686-pc-linux-gnu\n+export CONTAINER_NAME=ci_i686_centos_7\n+export DOCKER_NAME_TAG=centos:7\n+export DOCKER_PACKAGES=\"gcc-c++ glibc-devel.x86_64 libstdc++-devel.x86_64 glibc-devel.i686 libstdc++-devel.i686 ccache libtool make git python3 python36-zmq which patch lbzip2 dash\"\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-reduce-exports --with-boost-process\"\n+export CONFIG_SHELL=\"/bin/dash\""
      },
      {
        "sha": "b62f1603f42ec34c8d3aee6e3cb6f16a27785693",
        "filename": "ci/test/00_setup_env_mac.sh",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_mac.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_mac.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,17 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export CONTAINER_NAME=ci_macos_cross\n+export HOST=x86_64-apple-darwin16\n+export PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev python3-setuptools\"\n+export XCODE_VERSION=11.3.1\n+export XCODE_BUILD_ID=11C505\n+export RUN_UNIT_TESTS=false\n+export RUN_FUNCTIONAL_TESTS=false\n+export GOAL=\"deploy\"\n+export BITCOIN_CONFIG=\"--with-gui --enable-reduce-exports --enable-werror --with-boost-process\""
      },
      {
        "sha": "5fb127b7627978c24d67aefd9ab8350f077c6cc6",
        "filename": "ci/test/00_setup_env_mac_host.sh",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_mac_host.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_mac_host.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac_host.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,22 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=x86_64-apple-darwin16\n+export DOCKER_NAME_TAG=ubuntu:18.04  # Check that bionic can cross-compile to macos (bionic is used in the gitian build as well)\n+export PIP_PACKAGES=\"zmq\"\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--with-gui --enable-reduce-exports --enable-werror --with-boost-process\"\n+export NO_DEPENDS=1\n+export OSX_SDK=\"\"\n+export CCACHE_SIZE=300M\n+\n+export RUN_SECURITY_TESTS=\"true\"\n+if [ \"$TRAVIS_REPO_SLUG\" != \"bitcoin/bitcoin\" ]; then\n+  export RUN_FUNCTIONAL_TESTS=\"false\"\n+  export EXPECTED_TESTS_DURATION_IN_SECONDS=200\n+fi"
      },
      {
        "sha": "191b8049b02e746035dd5b3eb525d8dbb120684c",
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,14 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export CONTAINER_NAME=ci_native_asan\n+export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev libsqlite3-dev\"\n+export DOCKER_NAME_TAG=ubuntu:20.04\n+export NO_DEPENDS=1\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=address,integer,undefined CC=clang CXX=clang++ --with-boost-process\""
      },
      {
        "sha": "a32de4a6b52667a301618861b438f3f8ecb86592",
        "filename": "ci/test/00_setup_env_native_fuzz.sh",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_native_fuzz.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_native_fuzz.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,18 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n+export CONTAINER_NAME=ci_native_fuzz\n+export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev\"\n+export NO_DEPENDS=1\n+export RUN_UNIT_TESTS=false\n+export RUN_FUNCTIONAL_TESTS=false\n+export RUN_FUZZ_TESTS=true\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=clang CXX=clang++ --with-boost-process\"\n+export CCACHE_SIZE=200M"
      },
      {
        "sha": "e06a40eb23b20f97859363b29f5a20b7cc30594a",
        "filename": "ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz_with_valgrind.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,19 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n+export CONTAINER_NAME=ci_native_fuzz_valgrind\n+export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev valgrind\"\n+export NO_DEPENDS=1\n+export RUN_UNIT_TESTS=false\n+export RUN_FUNCTIONAL_TESTS=false\n+export RUN_FUZZ_TESTS=true\n+export FUZZ_TESTS_CONFIG=\"--valgrind\"\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer CC=clang CXX=clang++\"\n+export CCACHE_SIZE=200M"
      },
      {
        "sha": "b88ee2b50fb195f8ea6a7684dacb7e780c535ac4",
        "filename": "ci/test/00_setup_env_native_msan.sh",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_native_msan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_native_msan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_msan.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,23 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n+LIBCXX_DIR=\"${BASE_ROOT_DIR}/ci/scratch/msan/build/\"\n+export MSAN_FLAGS=\"-fsanitize=memory -fsanitize-memory-track-origins=2 -fno-omit-frame-pointer -g -O1 -fno-optimize-sibling-calls\"\n+LIBCXX_FLAGS=\"-nostdinc++ -stdlib=libc++ -L${LIBCXX_DIR}lib -lc++abi -I${LIBCXX_DIR}include -I${LIBCXX_DIR}include/c++/v1 -lpthread -Wl,-rpath,${LIBCXX_DIR}lib -Wno-unused-command-line-argument\"\n+export MSAN_AND_LIBCXX_FLAGS=\"${MSAN_FLAGS} ${LIBCXX_FLAGS}\"\n+export BDB_PREFIX=\"${BASE_ROOT_DIR}/db4\"\n+\n+export CONTAINER_NAME=\"ci_native_msan\"\n+export PACKAGES=\"clang-9 llvm-9 cmake\"\n+export DEP_OPTS=\"NO_BDB=1 NO_QT=1 CC='clang' CXX='clang++' CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}' boost_cxxflags='-std=c++11 -fvisibility=hidden -fPIC ${MSAN_AND_LIBCXX_FLAGS}' zeromq_cxxflags='-std=c++11 ${MSAN_AND_LIBCXX_FLAGS}'\"\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-wallet --with-sanitizers=memory --with-asm=no --prefix=${BASE_ROOT_DIR}/depends/x86_64-pc-linux-gnu/ CC=clang CXX=clang++ CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}' BDB_LIBS='-L${BDB_PREFIX}/lib -ldb_cxx-4.8' BDB_CFLAGS='-I${BDB_PREFIX}/include'\"\n+export USE_MEMORY_SANITIZER=\"true\"\n+export RUN_FUNCTIONAL_TESTS=\"false\"\n+export CCACHE_SIZE=250M"
      },
      {
        "sha": "522a5d9fc28e6f9e0c38f4b8209d06cf668ab776",
        "filename": "ci/test/00_setup_env_native_multiprocess.sh",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_native_multiprocess.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_native_multiprocess.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_multiprocess.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,15 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export CONTAINER_NAME=ci_native_multiprocess\n+export DOCKER_NAME_TAG=ubuntu:20.04\n+export PACKAGES=\"cmake python3\"\n+export DEP_OPTS=\"MULTIPROCESS=1\"\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--with-boost-process\"\n+export TEST_RUNNER_ENV=\"BITCOIND=bitcoin-node\""
      },
      {
        "sha": "0a09bfe23007569c2c5059915509d71302e4eed5",
        "filename": "ci/test/00_setup_env_native_nowallet.sh",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_native_nowallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_native_nowallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_nowallet.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,14 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export CONTAINER_NAME=ci_native_nowallet\n+export DOCKER_NAME_TAG=ubuntu:16.04  # Use xenial to have one config run the tests in python3.5, see doc/dependencies.md\n+export PACKAGES=\"python3-zmq clang-3.8 llvm-3.8\"  # Use clang-3.8 to test C++11 compatibility, see doc/dependencies.md\n+export DEP_OPTS=\"NO_WALLET=1\"\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CC=clang-3.8 CXX=clang++-3.8 --with-boost-process\""
      },
      {
        "sha": "866866229992a9ecd4fe9f47b9c1ead04ef00f5d",
        "filename": "ci/test/00_setup_env_native_qt5.sh",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_native_qt5.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_native_qt5.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_qt5.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,19 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export CONTAINER_NAME=ci_native_qt5\n+export DOCKER_NAME_TAG=ubuntu:18.04  # Check that bionic can compile our c++17 and run our functional tests in python3\n+export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libdbus-1-dev libharfbuzz-dev\"\n+export DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n+export TEST_RUNNER_EXTRA=\"--previous-releases --coverage --extended --exclude feature_dbcrash\"  # Run extended tests so that coverage does not fail, but exclude the very slow dbcrash\n+export RUN_SECURITY_TESTS=\"true\"\n+export RUN_UNIT_TESTS_SEQUENTIAL=\"true\"\n+export RUN_UNIT_TESTS=\"false\"\n+export GOAL=\"install\"\n+export PREVIOUS_RELEASES_TO_DOWNLOAD=\"v0.15.2 v0.16.3 v0.17.2 v0.18.1 v0.19.1\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-libs=no --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-c++17 --enable-debug CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\" --with-boost-process\""
      },
      {
        "sha": "b14a46562c58c2bbf5c4eaf7abd65338ca1c008d",
        "filename": "ci/test/00_setup_env_native_tsan.sh",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_native_tsan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_native_tsan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_tsan.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,15 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export CONTAINER_NAME=ci_native_tsan\n+export DOCKER_NAME_TAG=ubuntu:20.04\n+export PACKAGES=\"clang llvm libc++abi-dev libc++-dev python3-zmq\"\n+export DEP_OPTS=\"CC=clang CXX='clang++ -stdlib=libc++'\"\n+export TEST_RUNNER_EXTRA=\"--exclude feature_block\"  # Low memory on Travis machines, exclude feature_block.\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-gui=no CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' CXXFLAGS='-g' --with-sanitizers=thread CC=clang CXX='clang++ -stdlib=libc++' --with-boost-process\""
      },
      {
        "sha": "bfaea13a2505530afa14df5a2ebb55c954b2576d",
        "filename": "ci/test/00_setup_env_native_valgrind.sh",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_native_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_native_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_valgrind.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,15 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export CONTAINER_NAME=ci_native_valgrind\n+export PACKAGES=\"valgrind clang llvm python3-zmq libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libsqlite3-dev\"\n+export USE_VALGRIND=1\n+export NO_DEPENDS=1\n+export TEST_RUNNER_EXTRA=\"--exclude rpc_bind\"  # Excluded for now, see https://github.com/bitcoin/bitcoin/issues/17765#issuecomment-602068547\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=no CC=clang CXX=clang++\"  # TODO enable GUI"
      },
      {
        "sha": "accbd07e22b9c25b6480627be17ed6fb17b90d58",
        "filename": "ci/test/00_setup_env_s390x.sh",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_s390x.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_s390x.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_s390x.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,26 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=s390x-linux-gnu\n+# The host arch is unknown, so we run the tests through qemu.\n+# If the host is s390x and wants to run the tests natively, it can set QEMU_USER_CMD to the empty string.\n+if [ -z ${QEMU_USER_CMD+x} ]; then export QEMU_USER_CMD=\"${QEMU_USER_CMD:-\"qemu-s390x\"}\"; fi\n+export PACKAGES=\"python3-zmq\"\n+if [ -n \"$QEMU_USER_CMD\" ]; then\n+  # Likely cross-compiling, so install the needed gcc and qemu-user\n+  export DPKG_ADD_ARCH=\"s390x\"\n+  export PACKAGES=\"$PACKAGES g++-s390x-linux-gnu qemu-user libc6:s390x libstdc++6:s390x libfontconfig1:s390x libxcb1:s390x\"\n+fi\n+# Use debian to avoid 404 apt errors\n+export CONTAINER_NAME=ci_s390x\n+export DOCKER_NAME_TAG=\"debian:buster\"\n+export RUN_UNIT_TESTS=true\n+export TEST_RUNNER_ENV=\"LC_ALL=C\"\n+export RUN_FUNCTIONAL_TESTS=true\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-reduce-exports --with-incompatible-bdb --with-boost-process\""
      },
      {
        "sha": "2b351dff6d92f9631b9d64cc4da97b33ad2369d7",
        "filename": "ci/test/00_setup_env_win64.sh",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_win64.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/00_setup_env_win64.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_win64.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,16 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export CONTAINER_NAME=ci_win64\n+export DOCKER_NAME_TAG=ubuntu:18.04  # Check that bionic can cross-compile to win64 (bionic is used in the gitian build as well)\n+export HOST=x86_64-w64-mingw32\n+export PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64\"\n+export RUN_FUNCTIONAL_TESTS=false\n+export RUN_SECURITY_TESTS=\"true\"\n+export GOAL=\"deploy\"\n+export BITCOIN_CONFIG=\"--enable-reduce-exports --disable-gui-tests --without-boost-process\""
      },
      {
        "sha": "80806aab75ba6819b8d77a6857bdc40350eeffc9",
        "filename": "ci/test/03_before_install.sh",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/03_before_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/03_before_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/03_before_install.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,22 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+BEGIN_FOLD () {\n+  echo \"\"\n+  CURRENT_FOLD_NAME=$1\n+  echo \"travis_fold:start:${CURRENT_FOLD_NAME}\"\n+}\n+\n+END_FOLD () {\n+  RET=$?\n+  echo \"travis_fold:end:${CURRENT_FOLD_NAME}\"\n+  if [ $RET != 0 ]; then\n+    echo \"${CURRENT_FOLD_NAME} failed with status code ${RET}\"\n+  fi\n+}\n+"
      },
      {
        "sha": "632bccf574bd5f4a2cfa56aca30c821b9208ca0e",
        "filename": "ci/test/04_install.sh",
        "status": "added",
        "additions": 115,
        "deletions": 0,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,115 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+if [[ $DOCKER_NAME_TAG == centos* ]]; then\n+  export LC_ALL=en_US.utf8\n+fi\n+if [[ $QEMU_USER_CMD == qemu-s390* ]]; then\n+  export LC_ALL=C\n+fi\n+\n+if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n+  ${CI_RETRY_EXE} pip3 install $PIP_PACKAGES\n+fi\n+\n+# Create folders that are mounted into the docker\n+mkdir -p \"${CCACHE_DIR}\"\n+mkdir -p \"${PREVIOUS_RELEASES_DIR}\"\n+\n+export ASAN_OPTIONS=\"detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1\"\n+export LSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/lsan\"\n+export TSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/tsan:halt_on_error=1:log_path=${BASE_SCRATCH_DIR}/sanitizer-output/tsan\"\n+export UBSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1:report_error_type=1\"\n+env | grep -E '^(BITCOIN_CONFIG|BASE_|QEMU_|CCACHE_|LC_ALL|BOOST_TEST_RANDOM|DEBIAN_FRONTEND|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS|PREVIOUS_RELEASES_DIR)' | tee /tmp/env\n+if [[ $HOST = *-mingw32 ]]; then\n+  DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"\n+elif [[ $BITCOIN_CONFIG = *--with-sanitizers=*address* ]]; then # If ran with (ASan + LSan), Docker needs access to ptrace (https://github.com/google/sanitizers/issues/764)\n+  DOCKER_ADMIN=\"--cap-add SYS_PTRACE\"\n+fi\n+\n+export P_CI_DIR=\"$PWD\"\n+\n+if [ -z \"$DANGER_RUN_CI_ON_HOST\" ]; then\n+  echo \"Creating $DOCKER_NAME_TAG container to run in\"\n+  ${CI_RETRY_EXE} docker pull \"$DOCKER_NAME_TAG\"\n+\n+  DOCKER_ID=$(docker run $DOCKER_ADMIN -idt \\\n+                  --mount type=bind,src=$BASE_ROOT_DIR,dst=/ro_base,readonly \\\n+                  --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR \\\n+                  --mount type=bind,src=$DEPENDS_DIR,dst=$DEPENDS_DIR \\\n+                  --mount type=bind,src=$PREVIOUS_RELEASES_DIR,dst=$PREVIOUS_RELEASES_DIR \\\n+                  -w $BASE_ROOT_DIR \\\n+                  --env-file /tmp/env \\\n+                  --name $CONTAINER_NAME \\\n+                  $DOCKER_NAME_TAG)\n+  export DOCKER_CI_CMD_PREFIX=\"docker exec $DOCKER_ID\"\n+else\n+  echo \"Running on host system without docker wrapper\"\n+fi\n+\n+DOCKER_EXEC () {\n+  $DOCKER_CI_CMD_PREFIX bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd $P_CI_DIR && $*\"\n+}\n+export -f DOCKER_EXEC\n+\n+if [ -n \"$DPKG_ADD_ARCH\" ]; then\n+  DOCKER_EXEC dpkg --add-architecture \"$DPKG_ADD_ARCH\"\n+fi\n+\n+if [[ $DOCKER_NAME_TAG == centos* ]]; then\n+  ${CI_RETRY_EXE} DOCKER_EXEC yum -y install epel-release\n+  ${CI_RETRY_EXE} DOCKER_EXEC yum -y install $DOCKER_PACKAGES $PACKAGES\n+elif [ \"$CI_USE_APT_INSTALL\" != \"no\" ]; then\n+  ${CI_RETRY_EXE} DOCKER_EXEC apt-get update\n+  ${CI_RETRY_EXE} DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -y $PACKAGES $DOCKER_PACKAGES\n+fi\n+\n+if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n+  top -l 1 -s 0 | awk ' /PhysMem/ {print}'\n+  echo \"Number of CPUs: $(sysctl -n hw.logicalcpu)\"\n+else\n+  DOCKER_EXEC free -m -h\n+  DOCKER_EXEC echo \"Number of CPUs \\(nproc\\):\" \\$\\(nproc\\)\n+  DOCKER_EXEC echo $(lscpu | grep Endian)\n+  DOCKER_EXEC echo \"Free disk space:\"\n+  DOCKER_EXEC df -h\n+fi\n+\n+if [ ! -d ${DIR_QA_ASSETS} ]; then\n+  DOCKER_EXEC git clone --depth=1 https://github.com/bitcoin-core/qa-assets ${DIR_QA_ASSETS}\n+fi\n+export DIR_FUZZ_IN=${DIR_QA_ASSETS}/fuzz_seed_corpus/\n+export DIR_UNIT_TEST_DATA=${DIR_QA_ASSETS}/unit_test_data/\n+\n+DOCKER_EXEC mkdir -p \"${BASE_SCRATCH_DIR}/sanitizer-output/\"\n+\n+if [[ ${USE_MEMORY_SANITIZER} == \"true\" ]]; then\n+  DOCKER_EXEC \"update-alternatives --install /usr/bin/clang++ clang++ \\$(which clang++-9) 100\"\n+  DOCKER_EXEC \"update-alternatives --install /usr/bin/clang clang \\$(which clang-9) 100\"\n+  DOCKER_EXEC \"mkdir -p ${BASE_SCRATCH_DIR}/msan/build/\"\n+  DOCKER_EXEC \"git clone --depth=1 https://github.com/llvm/llvm-project -b llvmorg-10.0.0 ${BASE_SCRATCH_DIR}/msan/llvm-project\"\n+  DOCKER_EXEC \"cd ${BASE_SCRATCH_DIR}/msan/build/ && cmake -DLLVM_ENABLE_PROJECTS='libcxx;libcxxabi' -DCMAKE_BUILD_TYPE=Release -DLLVM_USE_SANITIZER=Memory -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DLLVM_TARGETS_TO_BUILD=X86 ../llvm-project/llvm/\"\n+  DOCKER_EXEC \"cd ${BASE_SCRATCH_DIR}/msan/build/ && make $MAKEJOBS cxx\"\n+fi\n+\n+if [ -z \"$DANGER_RUN_CI_ON_HOST\" ]; then\n+  echo \"Create $BASE_ROOT_DIR\"\n+  DOCKER_EXEC rsync -a /ro_base/ $BASE_ROOT_DIR\n+fi\n+\n+if [ \"$USE_BUSY_BOX\" = \"true\" ]; then\n+  echo \"Setup to use BusyBox utils\"\n+  DOCKER_EXEC mkdir -p $BASE_SCRATCH_DIR/bins/\n+  # tar excluded for now because it requires passing in the exact archive type in ./depends (fixed in later BusyBox version)\n+  # find excluded for now because it does not recognize the -delete option in ./depends (fixed in later BusyBox version)\n+  # ar excluded for now because it does not recognize the -q option in ./depends (unknown if fixed)\n+  # shellcheck disable=SC1010\n+  DOCKER_EXEC for util in \\$\\(busybox --list \\| grep -v \"^ar$\" \\| grep -v \"^tar$\" \\| grep -v \"^find$\"\\)\\; do ln -s \\$\\(command -v busybox\\) $BASE_SCRATCH_DIR/bins/\\$util\\; done\n+  # Print BusyBox version\n+  DOCKER_EXEC patch --help\n+fi"
      },
      {
        "sha": "8ce839fc0464d34cae076ebdb717be11a870330e",
        "filename": "ci/test/05_before_script.sh",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/05_before_script.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,53 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+# Make sure default datadir does not exist and is never read by creating a dummy file\n+if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n+  echo > $HOME/Library/Application\\ Support/Bitcoin\n+else\n+  DOCKER_EXEC echo \\> \\$HOME/.bitcoin\n+fi\n+\n+DOCKER_EXEC mkdir -p ${DEPENDS_DIR}/SDKs ${DEPENDS_DIR}/sdk-sources\n+\n+OSX_SDK_BASENAME=\"Xcode-${XCODE_VERSION}-${XCODE_BUILD_ID}-extracted-SDK-with-libcxx-headers.tar.gz\"\n+OSX_SDK_PATH=\"${DEPENDS_DIR}/sdk-sources/${OSX_SDK_BASENAME}\"\n+\n+if [ -n \"$XCODE_VERSION\" ] && [ ! -f \"$OSX_SDK_PATH\" ]; then\n+  curl --location --fail \"${SDK_URL}/${OSX_SDK_BASENAME}\" -o \"$OSX_SDK_PATH\"\n+fi\n+\n+if [[ ${USE_MEMORY_SANITIZER} == \"true\" ]]; then\n+  # Use BDB compiled using install_db4.sh script to work around linking issue when using BDB\n+  # from depends. See https://github.com/bitcoin/bitcoin/pull/18288#discussion_r433189350 for\n+  # details.\n+  DOCKER_EXEC \"contrib/install_db4.sh \\$(pwd) --enable-umrw CC=clang CXX=clang++ CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}'\"\n+fi\n+\n+if [ -n \"$XCODE_VERSION\" ] && [ -f \"$OSX_SDK_PATH\" ]; then\n+  DOCKER_EXEC tar -C \"${DEPENDS_DIR}/SDKs\" -xf \"$OSX_SDK_PATH\"\n+fi\n+if [[ $HOST = *-mingw32 ]]; then\n+  DOCKER_EXEC update-alternatives --set $HOST-g++ \\$\\(which $HOST-g++-posix\\)\n+fi\n+if [ -z \"$NO_DEPENDS\" ]; then\n+  if [[ $DOCKER_NAME_TAG == centos* ]]; then\n+    # CentOS has problems building the depends if the config shell is not explicitly set\n+    # (i.e. for libevent a Makefile with an empty SHELL variable is generated, leading to\n+    #  an error as the first command is executed)\n+    SHELL_OPTS=\"CONFIG_SHELL=/bin/bash\"\n+  else\n+    SHELL_OPTS=\"CONFIG_SHELL=\"\n+  fi\n+  DOCKER_EXEC $SHELL_OPTS make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n+fi\n+if [ -n \"$PREVIOUS_RELEASES_TO_DOWNLOAD\" ]; then\n+  BEGIN_FOLD previous-versions\n+  DOCKER_EXEC test/get_previous_releases.py -b -t \"$PREVIOUS_RELEASES_DIR\" \"${PREVIOUS_RELEASES_TO_DOWNLOAD}\"\n+  END_FOLD\n+fi"
      },
      {
        "sha": "17d765b862d36f32f2dd3a295bfd8592d865016a",
        "filename": "ci/test/06_script_a.sh",
        "status": "added",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/06_script_a.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/06_script_a.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_a.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,56 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$DEPENDS_DIR/$HOST --bindir=$BASE_OUTDIR/bin --libdir=$BASE_OUTDIR/lib\"\n+DOCKER_EXEC \"ccache --zero-stats --max-size=$CCACHE_SIZE\"\n+\n+BEGIN_FOLD autogen\n+if [ -n \"$CONFIG_SHELL\" ]; then\n+  DOCKER_EXEC \"$CONFIG_SHELL\" -c \"./autogen.sh\"\n+else\n+  DOCKER_EXEC ./autogen.sh\n+fi\n+END_FOLD\n+\n+DOCKER_EXEC mkdir -p \"${BASE_BUILD_DIR}\"\n+export P_CI_DIR=\"${BASE_BUILD_DIR}\"\n+\n+BEGIN_FOLD configure\n+DOCKER_EXEC \"${BASE_ROOT_DIR}/configure\" --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( (DOCKER_EXEC cat config.log) && false)\n+END_FOLD\n+\n+BEGIN_FOLD distdir\n+DOCKER_EXEC make distdir VERSION=$HOST\n+END_FOLD\n+\n+export P_CI_DIR=\"${BASE_BUILD_DIR}/bitcoin-$HOST\"\n+\n+BEGIN_FOLD configure\n+DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( (DOCKER_EXEC cat config.log) && false)\n+END_FOLD\n+\n+set -o errtrace\n+trap 'DOCKER_EXEC \"cat ${BASE_SCRATCH_DIR}/sanitizer-output/* 2> /dev/null\"' ERR\n+\n+if [[ ${USE_MEMORY_SANITIZER} == \"true\" ]]; then\n+  # MemorySanitizer (MSAN) does not support tracking memory initialization done by\n+  # using the Linux getrandom syscall. Avoid using getrandom by undefining\n+  # HAVE_SYS_GETRANDOM. See https://github.com/google/sanitizers/issues/852 for\n+  # details.\n+  DOCKER_EXEC 'grep -v HAVE_SYS_GETRANDOM src/config/bitcoin-config.h > src/config/bitcoin-config.h.tmp && mv src/config/bitcoin-config.h.tmp src/config/bitcoin-config.h'\n+fi\n+\n+BEGIN_FOLD build\n+DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && DOCKER_EXEC make $GOAL V=1 ; false )\n+END_FOLD\n+\n+BEGIN_FOLD cache_stats\n+DOCKER_EXEC \"ccache --version | head -n 1 && ccache --show-stats\"\n+DOCKER_EXEC du -sh \"${DEPENDS_DIR}\"/*/\n+DOCKER_EXEC du -sh \"${PREVIOUS_RELEASES_DIR}\"\n+END_FOLD"
      },
      {
        "sha": "87e9f31d0f46d914363db264b5685f8d8b663364",
        "filename": "ci/test/06_script_b.sh",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/06_script_b.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/06_script_b.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_b.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,52 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+if [ -n \"$QEMU_USER_CMD\" ]; then\n+  BEGIN_FOLD wrap-qemu\n+  # Generate all binaries, so that they can be wrapped\n+  DOCKER_EXEC make $MAKEJOBS -C src/secp256k1 VERBOSE=1\n+  DOCKER_EXEC make $MAKEJOBS -C src/univalue VERBOSE=1\n+  DOCKER_EXEC \"${BASE_ROOT_DIR}/ci/test/wrap-qemu.sh\"\n+  END_FOLD\n+fi\n+\n+if [ -n \"$USE_VALGRIND\" ]; then\n+  BEGIN_FOLD wrap-valgrind\n+  DOCKER_EXEC \"${BASE_ROOT_DIR}/ci/test/wrap-valgrind.sh\"\n+  END_FOLD\n+fi\n+\n+if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n+  BEGIN_FOLD unit-tests\n+  DOCKER_EXEC ${TEST_RUNNER_ENV} DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA} LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib make $MAKEJOBS check VERBOSE=1\n+  END_FOLD\n+fi\n+\n+if [ \"$RUN_UNIT_TESTS_SEQUENTIAL\" = \"true\" ]; then\n+  BEGIN_FOLD unit-tests-seq\n+  DOCKER_EXEC ${TEST_RUNNER_ENV} DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA} LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib \"${BASE_BUILD_DIR}/bitcoin-*/src/test/test_bitcoin*\" --catch_system_errors=no -l test_suite\n+  END_FOLD\n+fi\n+\n+if [ \"$RUN_FUNCTIONAL_TESTS\" = \"true\" ]; then\n+  BEGIN_FOLD functional-tests\n+  DOCKER_EXEC LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib ${TEST_RUNNER_ENV} test/functional/test_runner.py --ci $MAKEJOBS --tmpdirprefix \"${BASE_SCRATCH_DIR}/test_runner/\" --ansi --combinedlogslen=4000 --timeout-factor=${TEST_RUNNER_TIMEOUT_FACTOR} ${TEST_RUNNER_EXTRA} --quiet --failfast\n+  END_FOLD\n+fi\n+\n+if [ \"$RUN_SECURITY_TESTS\" = \"true\" ]; then\n+  BEGIN_FOLD security-tests\n+  DOCKER_EXEC make test-security-check\n+  END_FOLD\n+fi\n+\n+if [ \"$RUN_FUZZ_TESTS\" = \"true\" ]; then\n+  BEGIN_FOLD fuzz-tests\n+  DOCKER_EXEC LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib test/fuzz/test_runner.py ${FUZZ_TESTS_CONFIG} $MAKEJOBS -l DEBUG ${DIR_FUZZ_IN}\n+  END_FOLD\n+fi"
      },
      {
        "sha": "be7d7fcc1fe19e32e4cf54a14849fbddb14b29cf",
        "filename": "ci/test/wrap-qemu.sh",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/wrap-qemu.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/wrap-qemu.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/wrap-qemu.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,18 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+for b_name in {\"${BASE_OUTDIR}/bin\"/*,src/secp256k1/*tests,src/univalue/{no_nul,test_json,unitester,object}}; do\n+    # shellcheck disable=SC2044\n+    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename $b_name)); do\n+      echo \"Wrap $b ...\"\n+      mv \"$b\" \"${b}_orig\"\n+      echo '#!/usr/bin/env bash' > \"$b\"\n+      echo \"$QEMU_USER_CMD \\\"${b}_orig\\\" \\\"\\$@\\\"\" >> \"$b\"\n+      chmod +x \"$b\"\n+    done\n+done"
      },
      {
        "sha": "6b3e6eb7e7412f1f4d1fe5de4bdfb0eeb97a1fba",
        "filename": "ci/test/wrap-valgrind.sh",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/wrap-valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test/wrap-valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/wrap-valgrind.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,18 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+for b_name in \"${BASE_OUTDIR}/bin\"/*; do\n+    # shellcheck disable=SC2044\n+    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename $b_name)); do\n+      echo \"Wrap $b ...\"\n+      mv \"$b\" \"${b}_orig\"\n+      echo '#!/usr/bin/env bash' > \"$b\"\n+      echo \"valgrind --gen-suppressions=all --quiet --error-exitcode=1 --suppressions=${BASE_ROOT_DIR}/contrib/valgrind.supp \\\"${b}_orig\\\" \\\"\\$@\\\"\" >> \"$b\"\n+      chmod +x \"$b\"\n+    done\n+done"
      },
      {
        "sha": "a1d4bd19524daefccee252ec22fbcdd780c2c3d1",
        "filename": "ci/test_run_all.sh",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test_run_all.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/ci/test_run_all.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test_run_all.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,14 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+set -o errexit; source ./ci/test/00_setup_env.sh\n+set -o errexit; source ./ci/test/03_before_install.sh\n+set -o errexit; source ./ci/test/04_install.sh\n+set -o errexit; source ./ci/test/05_before_script.sh\n+set -o errexit; source ./ci/test/06_script_a.sh\n+set -o errexit; source ./ci/test/06_script_b.sh"
      },
      {
        "sha": "9a16b7c8806ee40bae93de32aef67cb553a2b123",
        "filename": "configure.ac",
        "status": "added",
        "additions": 1776,
        "deletions": 0,
        "changes": 1776,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,1776 @@\n+AC_PREREQ([2.69])\n+define(_CLIENT_VERSION_MAJOR, 0)\n+define(_CLIENT_VERSION_MINOR, 20)\n+define(_CLIENT_VERSION_REVISION, 99)\n+define(_CLIENT_VERSION_BUILD, 0)\n+define(_CLIENT_VERSION_RC, 0)\n+define(_CLIENT_VERSION_IS_RELEASE, false)\n+define(_COPYRIGHT_YEAR, 2020)\n+define(_COPYRIGHT_HOLDERS,[The %s developers])\n+define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\n+AC_INIT([Bitcoin Core],m4_join([.], _CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MINOR, _CLIENT_VERSION_REVISION, m4_if(_CLIENT_VERSION_BUILD, [0], [], _CLIENT_VERSION_BUILD))m4_if(_CLIENT_VERSION_RC, [0], [], [rc]_CLIENT_VERSION_RC),[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n+AC_CONFIG_SRCDIR([src/validation.cpp])\n+AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n+AC_CONFIG_AUX_DIR([build-aux])\n+AC_CONFIG_MACRO_DIR([build-aux/m4])\n+\n+m4_ifndef([PKG_PROG_PKG_CONFIG], [AC_MSG_ERROR([PKG_PROG_PKG_CONFIG macro not found. Please install pkg-config and re-run autogen.sh])])\n+PKG_PROG_PKG_CONFIG\n+if test \"x$PKG_CONFIG\" = x; then\n+  AC_MSG_ERROR([pkg-config not found])\n+fi\n+\n+BITCOIN_DAEMON_NAME=bitcoind\n+BITCOIN_GUI_NAME=bitcoin-qt\n+BITCOIN_CLI_NAME=bitcoin-cli\n+BITCOIN_TX_NAME=bitcoin-tx\n+BITCOIN_WALLET_TOOL_NAME=bitcoin-wallet\n+\n+dnl Unless the user specified ARFLAGS, force it to be cr\n+AC_ARG_VAR(ARFLAGS, [Flags for the archiver, defaults to <cr> if not set])\n+if test \"x${ARFLAGS+set}\" != \"xset\"; then\n+  ARFLAGS=\"cr\"\n+fi\n+\n+AC_CANONICAL_HOST\n+\n+AH_TOP([#ifndef BITCOIN_CONFIG_H])\n+AH_TOP([#define BITCOIN_CONFIG_H])\n+AH_BOTTOM([#endif //BITCOIN_CONFIG_H])\n+\n+dnl faketime breaks configure and is only needed for make. Disable it here.\n+unset FAKETIME\n+\n+dnl Automake init set-up and checks\n+AM_INIT_AUTOMAKE([1.13 no-define subdir-objects foreign])\n+\n+dnl faketime messes with timestamps and causes configure to be re-run.\n+dnl --disable-maintainer-mode can be used to bypass this.\n+AM_MAINTAINER_MODE([enable])\n+\n+dnl make the compilation flags quiet unless V=1 is used\n+AM_SILENT_RULES([yes])\n+\n+dnl Compiler checks (here before libtool).\n+if test \"x${CXXFLAGS+set}\" = \"xset\"; then\n+  CXXFLAGS_overridden=yes\n+else\n+  CXXFLAGS_overridden=no\n+fi\n+AC_PROG_CXX\n+\n+dnl By default, libtool for mingw refuses to link static libs into a dll for\n+dnl fear of mixing pic/non-pic objects, and import/export complications. Since\n+dnl we have those under control, re-enable that functionality.\n+case $host in\n+  *mingw*)\n+     lt_cv_deplibs_check_method=\"pass_all\"\n+  ;;\n+esac\n+\n+AC_ARG_ENABLE([c++17],\n+  [AS_HELP_STRING([--enable-c++17],\n+  [enable compilation in c++17 mode (disabled by default)])],\n+  [use_cxx17=$enableval],\n+  [use_cxx17=no])\n+\n+dnl Require C++11 or C++17 compiler (no GNU extensions)\n+if test \"x$use_cxx17\" = xyes -o \"x$enable_fuzz\" = xyes ; then\n+  AX_CXX_COMPILE_STDCXX([17], [noext], [mandatory])\n+else\n+  AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory])\n+fi\n+\n+dnl Check if -latomic is required for <std::atomic>\n+CHECK_ATOMIC\n+\n+dnl Unless the user specified OBJCXX, force it to be the same as CXX. This ensures\n+dnl that we get the same -std flags for both.\n+m4_ifdef([AC_PROG_OBJCXX],[\n+if test \"x${OBJCXX+set}\" = \"x\"; then\n+  OBJCXX=\"${CXX}\"\n+fi\n+AC_PROG_OBJCXX\n+])\n+\n+dnl Since libtool 1.5.2 (released 2004-01-25), on Linux libtool no longer\n+dnl sets RPATH for any directories in the dynamic linker search path.\n+dnl See more: https://wiki.debian.org/RpathIssue\n+LT_PREREQ([1.5.2])\n+dnl Libtool init checks.\n+LT_INIT([pic-only])\n+\n+dnl Check/return PATH for base programs.\n+AC_PATH_TOOL(AR, ar)\n+AC_PATH_TOOL(RANLIB, ranlib)\n+AC_PATH_TOOL(STRIP, strip)\n+AC_PATH_TOOL(GCOV, gcov)\n+AC_PATH_TOOL(LLVM_COV, llvm-cov)\n+AC_PATH_PROG(LCOV, lcov)\n+dnl Python 3.5 is specified in .python-version and should be used if available, see doc/dependencies.md\n+AC_PATH_PROGS([PYTHON], [python3.5 python3.6 python3.7 python3.8 python3 python])\n+AC_PATH_PROG(GENHTML, genhtml)\n+AC_PATH_PROG([GIT], [git])\n+AC_PATH_PROG(CCACHE,ccache)\n+AC_PATH_PROG(XGETTEXT,xgettext)\n+AC_PATH_PROG(HEXDUMP,hexdump)\n+AC_PATH_TOOL(READELF, readelf)\n+AC_PATH_TOOL(CPPFILT, c++filt)\n+AC_PATH_TOOL(OBJCOPY, objcopy)\n+AC_PATH_PROG(DOXYGEN, doxygen)\n+AM_CONDITIONAL([HAVE_DOXYGEN], [test -n \"$DOXYGEN\"])\n+\n+AC_ARG_VAR(PYTHONPATH, Augments the default search path for python module files)\n+\n+AC_ARG_ENABLE([wallet],\n+  [AS_HELP_STRING([--disable-wallet],\n+  [disable wallet (enabled by default)])],\n+  [enable_wallet=$enableval],\n+  [enable_wallet=yes])\n+\n+AC_ARG_WITH([sqlite],\n+  [AS_HELP_STRING([--with-sqlite=yes|no|auto],\n+  [enable sqlite wallet support (default: auto, i.e., enabled if wallet is enabled and sqlite is found)])],\n+  [use_sqlite=$withval],\n+  [use_sqlite=auto])\n+\n+AC_ARG_WITH([miniupnpc],\n+  [AS_HELP_STRING([--with-miniupnpc],\n+  [enable UPNP (default is yes if libminiupnpc is found)])],\n+  [use_upnp=$withval],\n+  [use_upnp=auto])\n+\n+AC_ARG_ENABLE([upnp-default],\n+  [AS_HELP_STRING([--enable-upnp-default],\n+  [if UPNP is enabled, turn it on at startup (default is no)])],\n+  [use_upnp_default=$enableval],\n+  [use_upnp_default=no])\n+\n+AC_ARG_ENABLE(tests,\n+    AS_HELP_STRING([--disable-tests],[do not compile tests (default is to compile)]),\n+    [use_tests=$enableval],\n+    [use_tests=yes])\n+\n+AC_ARG_ENABLE(gui-tests,\n+    AS_HELP_STRING([--disable-gui-tests],[do not compile GUI tests (default is to compile if GUI and tests enabled)]),\n+    [use_gui_tests=$enableval],\n+    [use_gui_tests=$use_tests])\n+\n+AC_ARG_ENABLE(bench,\n+    AS_HELP_STRING([--disable-bench],[do not compile benchmarks (default is to compile)]),\n+    [use_bench=$enableval],\n+    [use_bench=yes])\n+\n+AC_ARG_ENABLE([extended-functional-tests],\n+    AS_HELP_STRING([--enable-extended-functional-tests],[enable expensive functional tests when using lcov (default no)]),\n+    [use_extended_functional_tests=$enableval],\n+    [use_extended_functional_tests=no])\n+\n+AC_ARG_ENABLE([fuzz],\n+    AS_HELP_STRING([--enable-fuzz],\n+    [enable building of fuzz targets (default no). enabling this will disable all other targets]),\n+    [enable_fuzz=$enableval],\n+    [enable_fuzz=no])\n+\n+AC_ARG_WITH([qrencode],\n+  [AS_HELP_STRING([--with-qrencode],\n+  [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n+  [use_qr=$withval],\n+  [use_qr=auto])\n+\n+AC_ARG_ENABLE([hardening],\n+  [AS_HELP_STRING([--disable-hardening],\n+  [do not attempt to harden the resulting executables (default is to harden when possible)])],\n+  [use_hardening=$enableval],\n+  [use_hardening=auto])\n+\n+AC_ARG_ENABLE([reduce-exports],\n+  [AS_HELP_STRING([--enable-reduce-exports],\n+  [attempt to reduce exported symbols in the resulting executables (default is no)])],\n+  [use_reduce_exports=$enableval],\n+  [use_reduce_exports=no])\n+\n+AC_ARG_ENABLE([ccache],\n+  [AS_HELP_STRING([--disable-ccache],\n+  [do not use ccache for building (default is to use if found)])],\n+  [use_ccache=$enableval],\n+  [use_ccache=auto])\n+\n+dnl Suppress warnings from external headers (e.g. Boost, Qt).\n+dnl May be useful if warnings from external headers clutter the build output\n+dnl too much, so that it becomes difficult to spot Bitcoin Core warnings\n+dnl or if they cause a build failure with --enable-werror.\n+AC_ARG_ENABLE([suppress-external-warnings],\n+  [AS_HELP_STRING([--enable-suppress-external-warnings],\n+                  [Suppress warnings from external headers (default is no)])],\n+  [suppress_external_warnings=$enableval],\n+  [suppress_external_warnings=no])\n+\n+AC_ARG_ENABLE([lcov],\n+  [AS_HELP_STRING([--enable-lcov],\n+  [enable lcov testing (default is no)])],\n+  [use_lcov=$enableval],\n+  [use_lcov=no])\n+\n+AC_ARG_ENABLE([lcov-branch-coverage],\n+  [AS_HELP_STRING([--enable-lcov-branch-coverage],\n+  [enable lcov testing branch coverage (default is no)])],\n+  [use_lcov_branch=yes],\n+  [use_lcov_branch=no])\n+\n+AC_ARG_ENABLE([glibc-back-compat],\n+  [AS_HELP_STRING([--enable-glibc-back-compat],\n+  [enable backwards compatibility with glibc])],\n+  [use_glibc_compat=$enableval],\n+  [use_glibc_compat=no])\n+\n+AC_ARG_ENABLE([threadlocal],\n+  [AS_HELP_STRING([--enable-threadlocal],\n+  [enable features that depend on the c++ thread_local keyword (currently just thread names in debug logs). (default is to enabled if there is platform support and glibc-back-compat is not enabled)])],\n+  [use_thread_local=$enableval],\n+  [use_thread_local=auto])\n+\n+AC_ARG_ENABLE([asm],\n+  [AS_HELP_STRING([--disable-asm],\n+  [disable assembly routines (enabled by default)])],\n+  [use_asm=$enableval],\n+  [use_asm=yes])\n+\n+if test \"x$use_asm\" = xyes; then\n+  AC_DEFINE(USE_ASM, 1, [Define this symbol to build in assembly routines])\n+fi\n+\n+AC_ARG_WITH([system-univalue],\n+  [AS_HELP_STRING([--with-system-univalue],\n+  [Build with system UniValue (default is no)])],\n+  [system_univalue=$withval],\n+  [system_univalue=no]\n+)\n+AC_ARG_ENABLE([zmq],\n+  [AS_HELP_STRING([--disable-zmq],\n+  [disable ZMQ notifications])],\n+  [use_zmq=$enableval],\n+  [use_zmq=yes])\n+\n+AC_ARG_WITH([libmultiprocess],\n+  [AS_HELP_STRING([--with-libmultiprocess=yes|no|auto],\n+  [Build with libmultiprocess library. (default: auto, i.e. detect with pkg-config)])],\n+  [with_libmultiprocess=$withval],\n+  [with_libmultiprocess=auto])\n+\n+AC_ARG_WITH([mpgen],\n+  [AS_HELP_STRING([--with-mpgen=yes|no|auto|PREFIX],\n+  [Build with libmultiprocess codegen tool. Useful to specify different libmultiprocess host system library and build system codegen tool prefixes when cross-compiling (default is host system libmultiprocess prefix)])],\n+  [with_mpgen=$withval],\n+  [with_mpgen=auto])\n+\n+AC_ARG_ENABLE([multiprocess],\n+  [AS_HELP_STRING([--enable-multiprocess],\n+  [build multiprocess bitcoin-node, bitcoin-wallet, and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental (default is no)])],\n+  [enable_multiprocess=$enableval],\n+  [enable_multiprocess=no])\n+\n+AC_ARG_ENABLE(man,\n+    [AS_HELP_STRING([--disable-man],\n+                    [do not install man pages (default is to install)])],,\n+    enable_man=yes)\n+AM_CONDITIONAL(ENABLE_MAN, test \"$enable_man\" != no)\n+\n+dnl Enable debug\n+AC_ARG_ENABLE([debug],\n+    [AS_HELP_STRING([--enable-debug],\n+                    [use compiler flags and macros suited for debugging (default is no)])],\n+    [enable_debug=$enableval],\n+    [enable_debug=no])\n+\n+dnl Enable different -fsanitize options\n+AC_ARG_WITH([sanitizers],\n+    [AS_HELP_STRING([--with-sanitizers],\n+                    [comma separated list of extra sanitizers to build with (default is none enabled)])],\n+    [use_sanitizers=$withval])\n+\n+dnl Enable gprof profiling\n+AC_ARG_ENABLE([gprof],\n+    [AS_HELP_STRING([--enable-gprof],\n+                    [use gprof profiling compiler flags (default is no)])],\n+    [enable_gprof=$enableval],\n+    [enable_gprof=no])\n+\n+dnl Pass compiler & linker flags that make builds deterministic\n+AC_ARG_ENABLE([determinism],\n+    [AS_HELP_STRING([--enable-determinism],\n+                    [Enable compilation flags that make builds deterministic (default is no)])],\n+    [enable_determinism=$enableval],\n+    [enable_determinism=no])\n+\n+dnl Turn warnings into errors\n+AC_ARG_ENABLE([werror],\n+    [AS_HELP_STRING([--enable-werror],\n+                    [Treat certain compiler warnings as errors (default is no)])],\n+    [enable_werror=$enableval],\n+    [enable_werror=no])\n+\n+AC_LANG_PUSH([C++])\n+\n+dnl Check for a flag to turn compiler warnings into errors. This is helpful for checks which may\n+dnl appear to succeed because by default they merely emit warnings when they fail.\n+dnl\n+dnl Note that this is not necessarily a check to see if -Werror is supported, but rather to see if\n+dnl a compile with -Werror can succeed. This is important because the compiler may already be\n+dnl warning about something unrelated, for example about some path issue. If that is the case,\n+dnl -Werror cannot be used because all of those warnings would be turned into errors.\n+AX_CHECK_COMPILE_FLAG([-Werror],[CXXFLAG_WERROR=\"-Werror\"],[CXXFLAG_WERROR=\"\"])\n+\n+dnl Check for a flag to turn linker warnings into errors. When flags are passed to linkers via the\n+dnl compiler driver using a -Wl,-foo flag, linker warnings may be swallowed rather than bubbling up.\n+dnl See note above, the same applies here as well.\n+dnl\n+dnl LDFLAG_WERROR Should only be used when testing -Wl,*\n+case $host in\n+ *darwin*)\n+    AX_CHECK_LINK_FLAG([-Wl,-fatal_warnings],[LDFLAG_WERROR=\"-Wl,-fatal_warnings\"],[LDFLAG_WERROR=\"\"])\n+    ;;\n+  *)\n+    AX_CHECK_LINK_FLAG([-Wl,--fatal-warnings],[LDFLAG_WERROR=\"-Wl,--fatal-warnings\"],[LDFLAG_WERROR=\"\"])\n+    ;;\n+esac\n+\n+if test \"x$enable_debug\" = xyes; then\n+  dnl Clear default -g -O2 flags\n+  if test \"x$CXXFLAGS_overridden\" = xno; then\n+\tCXXFLAGS=\"\"\n+  fi\n+\n+  dnl Disable all optimizations\n+  AX_CHECK_COMPILE_FLAG([-O0], [[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -O0\"]],,[[$CXXFLAG_WERROR]])\n+\n+  dnl Prefer -g3, fall back to -g if that is unavailable.\n+  AX_CHECK_COMPILE_FLAG(\n+    [-g3],\n+    [[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -g3\"]],\n+    [AX_CHECK_COMPILE_FLAG([-g],[[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -g\"]],,[[$CXXFLAG_WERROR]])],\n+    [[$CXXFLAG_WERROR]])\n+\n+  AX_CHECK_PREPROC_FLAG([-DDEBUG],[[DEBUG_CPPFLAGS=\"$DEBUG_CPPFLAGS -DDEBUG\"]],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_PREPROC_FLAG([-DDEBUG_LOCKORDER],[[DEBUG_CPPFLAGS=\"$DEBUG_CPPFLAGS -DDEBUG_LOCKORDER\"]],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-ftrapv],[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -ftrapv\"],,[[$CXXFLAG_WERROR]])\n+fi\n+\n+if test x$use_sanitizers != x; then\n+  dnl First check if the compiler accepts flags. If an incompatible pair like\n+  dnl -fsanitize=address,thread is used here, this check will fail. This will also\n+  dnl fail if a bad argument is passed, e.g. -fsanitize=undfeined\n+  AX_CHECK_COMPILE_FLAG(\n+    [[-fsanitize=$use_sanitizers]],\n+    [[SANITIZER_CXXFLAGS=-fsanitize=$use_sanitizers]],\n+    [AC_MSG_ERROR([compiler did not accept requested flags])])\n+\n+  dnl Some compilers (e.g. GCC) require additional libraries like libasan,\n+  dnl libtsan, libubsan, etc. Make sure linking still works with the sanitize\n+  dnl flag. This is a separate check so we can give a better error message when\n+  dnl the sanitize flags are supported by the compiler but the actual sanitizer\n+  dnl libs are missing.\n+  AX_CHECK_LINK_FLAG(\n+    [[-fsanitize=$use_sanitizers]],\n+    [[SANITIZER_LDFLAGS=-fsanitize=$use_sanitizers]],\n+    [AC_MSG_ERROR([linker did not accept requested flags, you are missing required libraries])],\n+    [],\n+    [AC_LANG_PROGRAM([[\n+    #include <cstdint>\n+    #include <cstddef>\n+    extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) { return 0; }\n+    __attribute__((weak)) // allow for libFuzzer linking\n+    ]],[[]])])\n+fi\n+\n+ERROR_CXXFLAGS=\n+if test \"x$enable_werror\" = \"xyes\"; then\n+  if test \"x$CXXFLAG_WERROR\" = \"x\"; then\n+    AC_MSG_ERROR(\"enable-werror set but -Werror is not usable\")\n+  fi\n+  AX_CHECK_COMPILE_FLAG([-Werror=gnu],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=gnu\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=vla\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=shadow-field],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=shadow-field\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=switch],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=switch\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=thread-safety],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=range-loop-analysis],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=range-loop-analysis\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=unused-variable],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=unused-variable\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=date-time],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=date-time\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=return-type],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=return-type\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=conditional-uninitialized],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=conditional-uninitialized\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=sign-compare],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=sign-compare\"],,[[$CXXFLAG_WERROR]])\n+  dnl -Wsuggest-override is broken with GCC before 9.2\n+  dnl https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78010\n+  AX_CHECK_COMPILE_FLAG([-Werror=suggest-override],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=suggest-override\"],,[[$CXXFLAG_WERROR]],\n+                        [AC_LANG_SOURCE([[struct A { virtual void f(); }; struct B : A { void f() final; };]])])\n+  AX_CHECK_COMPILE_FLAG([-Werror=unreachable-code-loop-increment],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=unreachable-code-loop-increment\"],,[[$CXXFLAG_WERROR]])\n+fi\n+\n+if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n+  AX_CHECK_COMPILE_FLAG([-Wall],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wall\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wextra],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wgnu],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wgnu\"],,[[$CXXFLAG_WERROR]])\n+  dnl some compilers will ignore -Wformat-security without -Wformat, so just combine the two here.\n+  AX_CHECK_COMPILE_FLAG([-Wformat -Wformat-security],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wformat -Wformat-security\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wvla],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wvla\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wshadow-field],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wshadow-field\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wswitch],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wswitch\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wthread-safety],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wthread-safety\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wrange-loop-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wrange-loop-analysis\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wredundant-decls],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wredundant-decls\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wunused-variable],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunused-variable\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wdate-time],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wdate-time\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wconditional-uninitialized],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wconditional-uninitialized\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wsign-compare],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wsign-compare\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wduplicated-branches],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wduplicated-branches\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wduplicated-cond],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wduplicated-cond\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wlogical-op],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wlogical-op\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Woverloaded-virtual],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Woverloaded-virtual\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wsuggest-override],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wsuggest-override\"],,[[$CXXFLAG_WERROR]],\n+                        [AC_LANG_SOURCE([[struct A { virtual void f(); }; struct B : A { void f() final; };]])])\n+  AX_CHECK_COMPILE_FLAG([-Wunreachable-code-loop-increment],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunreachable-code-loop-increment\"],,[[$CXXFLAG_WERROR]])\n+\n+  dnl Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n+  dnl unknown options if any other warning is produced. Test the -Wfoo case, and\n+  dnl set the -Wno-foo case if it works.\n+  AX_CHECK_COMPILE_FLAG([-Wunused-parameter],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-parameter\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wself-assign],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-register\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-implicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wdeprecated-copy],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-copy\"],,[[$CXXFLAG_WERROR]])\n+fi\n+\n+dnl Don't allow extended (non-ASCII) symbols in identifiers. This is easier for code review.\n+AX_CHECK_COMPILE_FLAG([-fno-extended-identifiers],[[CXXFLAGS=\"$CXXFLAGS -fno-extended-identifiers\"]],,[[$CXXFLAG_WERROR]])\n+\n+enable_sse42=no\n+enable_sse41=no\n+enable_avx2=no\n+enable_shani=no\n+\n+if test \"x$use_asm\" = \"xyes\"; then\n+\n+dnl Check for optional instruction set support. Enabling these does _not_ imply that all code will\n+dnl be compiled with them, rather that specific objects/libs may use them after checking for runtime\n+dnl compatibility.\n+\n+dnl x86\n+AX_CHECK_COMPILE_FLAG([-msse4.2],[[SSE42_CXXFLAGS=\"-msse4.2\"]],,[[$CXXFLAG_WERROR]])\n+AX_CHECK_COMPILE_FLAG([-msse4.1],[[SSE41_CXXFLAGS=\"-msse4.1\"]],,[[$CXXFLAG_WERROR]])\n+AX_CHECK_COMPILE_FLAG([-mavx -mavx2],[[AVX2_CXXFLAGS=\"-mavx -mavx2\"]],,[[$CXXFLAG_WERROR]])\n+AX_CHECK_COMPILE_FLAG([-msse4 -msha],[[SHANI_CXXFLAGS=\"-msse4 -msha\"]],,[[$CXXFLAG_WERROR]])\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $SSE42_CXXFLAGS\"\n+AC_MSG_CHECKING(for SSE4.2 intrinsics)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <stdint.h>\n+    #if defined(_MSC_VER)\n+    #include <intrin.h>\n+    #elif defined(__GNUC__) && defined(__SSE4_2__)\n+    #include <nmmintrin.h>\n+    #endif\n+  ]],[[\n+    uint64_t l = 0;\n+    l = _mm_crc32_u8(l, 0);\n+    l = _mm_crc32_u32(l, 0);\n+    l = _mm_crc32_u64(l, 0);\n+    return l;\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_sse42=yes],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $SSE41_CXXFLAGS\"\n+AC_MSG_CHECKING(for SSE4.1 intrinsics)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <stdint.h>\n+    #include <immintrin.h>\n+  ]],[[\n+    __m128i l = _mm_set1_epi32(0);\n+    return _mm_extract_epi32(l, 3);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_sse41=yes; AC_DEFINE(ENABLE_SSE41, 1, [Define this symbol to build code that uses SSE4.1 intrinsics]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $AVX2_CXXFLAGS\"\n+AC_MSG_CHECKING(for AVX2 intrinsics)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <stdint.h>\n+    #include <immintrin.h>\n+  ]],[[\n+    __m256i l = _mm256_set1_epi32(0);\n+    return _mm256_extract_epi32(l, 7);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_avx2=yes; AC_DEFINE(ENABLE_AVX2, 1, [Define this symbol to build code that uses AVX2 intrinsics]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $SHANI_CXXFLAGS\"\n+AC_MSG_CHECKING(for SHA-NI intrinsics)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <stdint.h>\n+    #include <immintrin.h>\n+  ]],[[\n+    __m128i i = _mm_set1_epi32(0);\n+    __m128i j = _mm_set1_epi32(1);\n+    __m128i k = _mm_set1_epi32(2);\n+    return _mm_extract_epi32(_mm_sha256rnds2_epu32(i, i, k), 0);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_shani=yes; AC_DEFINE(ENABLE_SHANI, 1, [Define this symbol to build code that uses SHA-NI intrinsics]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n+# ARM\n+AX_CHECK_COMPILE_FLAG([-march=armv8-a+crc+crypto],[[ARM_CRC_CXXFLAGS=\"-march=armv8-a+crc+crypto\"]],,[[$CXXFLAG_WERROR]])\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $ARM_CRC_CXXFLAGS\"\n+AC_MSG_CHECKING(for ARM CRC32 intrinsics)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <arm_acle.h>\n+    #include <arm_neon.h>\n+  ]],[[\n+    __crc32cb(0, 0); __crc32ch(0, 0); __crc32cw(0, 0); __crc32cd(0, 0);\n+    vmull_p64(0, 0);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_arm_crc=yes; ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n+fi\n+\n+CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n+\n+AC_ARG_WITH([utils],\n+  [AS_HELP_STRING([--with-utils],\n+  [build bitcoin-cli bitcoin-tx bitcoin-wallet (default=yes)])],\n+  [build_bitcoin_utils=$withval],\n+  [build_bitcoin_utils=yes])\n+\n+AC_ARG_ENABLE([util-cli],\n+  [AS_HELP_STRING([--enable-util-cli],\n+  [build bitcoin-cli])],\n+  [build_bitcoin_cli=$enableval],\n+  [build_bitcoin_cli=$build_bitcoin_utils])\n+\n+AC_ARG_ENABLE([util-tx],\n+  [AS_HELP_STRING([--enable-util-tx],\n+  [build bitcoin-tx])],\n+  [build_bitcoin_tx=$enableval],\n+  [build_bitcoin_tx=$build_bitcoin_utils])\n+\n+AC_ARG_ENABLE([util-wallet],\n+  [AS_HELP_STRING([--enable-util-wallet],\n+  [build bitcoin-wallet])],\n+  [build_bitcoin_wallet=$enableval],\n+  [build_bitcoin_wallet=$build_bitcoin_utils])\n+\n+AC_ARG_WITH([libs],\n+  [AS_HELP_STRING([--with-libs],\n+  [build libraries (default=yes)])],\n+  [build_bitcoin_libs=$withval],\n+  [build_bitcoin_libs=yes])\n+\n+AC_ARG_WITH([daemon],\n+  [AS_HELP_STRING([--with-daemon],\n+  [build bitcoind daemon (default=yes)])],\n+  [build_bitcoind=$withval],\n+  [build_bitcoind=yes])\n+\n+case $host in\n+  *mingw*)\n+     TARGET_OS=windows\n+     AC_CHECK_LIB([kernel32], [GetModuleFileNameA],, AC_MSG_ERROR(libkernel32 missing))\n+     AC_CHECK_LIB([user32],   [main],, AC_MSG_ERROR(libuser32 missing))\n+     AC_CHECK_LIB([gdi32],    [main],, AC_MSG_ERROR(libgdi32 missing))\n+     AC_CHECK_LIB([comdlg32], [main],, AC_MSG_ERROR(libcomdlg32 missing))\n+     AC_CHECK_LIB([winmm],    [main],, AC_MSG_ERROR(libwinmm missing))\n+     AC_CHECK_LIB([shell32],  [SHGetSpecialFolderPathW],, AC_MSG_ERROR(libshell32 missing))\n+     AC_CHECK_LIB([comctl32], [main],, AC_MSG_ERROR(libcomctl32 missing))\n+     AC_CHECK_LIB([ole32],    [CoCreateInstance],, AC_MSG_ERROR(libole32 missing))\n+     AC_CHECK_LIB([oleaut32], [main],, AC_MSG_ERROR(liboleaut32 missing))\n+     AC_CHECK_LIB([uuid],     [main],, AC_MSG_ERROR(libuuid missing))\n+     AC_CHECK_LIB([advapi32], [CryptAcquireContextW],, AC_MSG_ERROR(libadvapi32 missing))\n+     AC_CHECK_LIB([ws2_32],   [WSAStartup],, AC_MSG_ERROR(libws2_32 missing))\n+     AC_CHECK_LIB([shlwapi],  [PathRemoveFileSpecW],, AC_MSG_ERROR(libshlwapi missing))\n+     AC_CHECK_LIB([iphlpapi], [GetAdaptersAddresses],, AC_MSG_ERROR(libiphlpapi missing))\n+\n+     dnl -static is interpreted by libtool, where it has a different meaning.\n+     dnl In libtool-speak, it's -all-static.\n+     AX_CHECK_LINK_FLAG([[-static]],[LIBTOOL_APP_LDFLAGS=\"$LIBTOOL_APP_LDFLAGS -all-static\"])\n+\n+     AC_PATH_PROG([MAKENSIS], [makensis], none)\n+     if test x$MAKENSIS = xnone; then\n+       AC_MSG_WARN(\"makensis not found. Cannot create installer.\")\n+     fi\n+\n+     AC_PATH_TOOL(WINDRES, windres, none)\n+     if test x$WINDRES = xnone; then\n+       AC_MSG_ERROR(\"windres not found\")\n+     fi\n+\n+     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -D_WIN32_WINNT=0x0601 -D_WIN32_IE=0x0501 -DWIN32_LEAN_AND_MEAN\"\n+\n+     dnl libtool insists upon adding -nostdlib and a list of objects/libs to link against.\n+     dnl That breaks our ability to build dll's with static libgcc/libstdc++/libssp. Override\n+     dnl its command here, with the predeps/postdeps removed, and -static inserted. Postdeps are\n+     dnl also overridden to prevent their insertion later.\n+     dnl This should only affect dll's.\n+     archive_cmds_CXX=\"\\$CC -shared \\$libobjs \\$deplibs \\$compiler_flags -static -o \\$output_objdir/\\$soname \\${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker \\$lib\"\n+     postdeps_CXX=\n+\n+     dnl We require Windows 7 (NT 6.1) or later\n+     AX_CHECK_LINK_FLAG([[-Wl,--major-subsystem-version -Wl,6 -Wl,--minor-subsystem-version -Wl,1]],[LDFLAGS=\"$LDFLAGS -Wl,--major-subsystem-version -Wl,6 -Wl,--minor-subsystem-version -Wl,1\"],,[[$LDFLAG_WERROR]])\n+     ;;\n+  *darwin*)\n+     TARGET_OS=darwin\n+     if  test x$cross_compiling != xyes; then\n+       BUILD_OS=darwin\n+       AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n+       AC_CHECK_PROG([BREW],brew, brew)\n+       if test x$BREW = xbrew; then\n+         dnl These Homebrew packages may be keg-only, meaning that they won't be found\n+         dnl in expected paths because they may conflict with system files. Ask\n+         dnl Homebrew where each one is located, then adjust paths accordingly.\n+         dnl It's safe to add these paths even if the functionality is disabled by\n+         dnl the user (--without-wallet or --without-gui for example).\n+\n+         bdb_prefix=$($BREW --prefix berkeley-db4 2>/dev/null)\n+         qt5_prefix=$($BREW --prefix qt5 2>/dev/null)\n+         if test x$bdb_prefix != x && test \"x$BDB_CFLAGS\" = \"x\" && test \"x$BDB_LIBS\" = \"x\"; then\n+           dnl This must precede the call to BITCOIN_FIND_BDB48 below.\n+           BDB_CFLAGS=\"-I$bdb_prefix/include\"\n+           BDB_LIBS=\"-L$bdb_prefix/lib -ldb_cxx-4.8\"\n+         fi\n+         if test x$qt5_prefix != x; then\n+           PKG_CONFIG_PATH=\"$qt5_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n+           export PKG_CONFIG_PATH\n+         fi\n+       fi\n+     else\n+       case $build_os in\n+         *darwin*)\n+           BUILD_OS=darwin\n+           ;;\n+         *)\n+           AC_PATH_TOOL([DSYMUTIL], [dsymutil], dsymutil)\n+           AC_PATH_TOOL([INSTALLNAMETOOL], [install_name_tool], install_name_tool)\n+           AC_PATH_TOOL([OTOOL], [otool], otool)\n+           AC_PATH_PROGS([GENISOIMAGE], [genisoimage mkisofs],genisoimage)\n+           AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n+           AC_PATH_PROGS([IMAGEMAGICK_CONVERT], [convert],convert)\n+           AC_PATH_PROGS([TIFFCP], [tiffcp],tiffcp)\n+\n+           dnl libtool will try to strip the static lib, which is a problem for\n+           dnl cross-builds because strip attempts to call a hard-coded ld,\n+           dnl which may not exist in the path. Stripping the .a is not\n+           dnl necessary, so just disable it.\n+           old_striplib=\n+           ;;\n+       esac\n+     fi\n+\n+     AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"],, [[$LDFLAG_WERROR]])\n+     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX -DOBJC_OLD_DISPATCH_PROTOTYPES=0\"\n+     OBJCXXFLAGS=\"$CXXFLAGS\"\n+     ;;\n+   *android*)\n+     dnl make sure android stays above linux for hosts like *linux-android*\n+     TARGET_OS=android\n+     ;;\n+   *linux*)\n+     TARGET_OS=linux\n+     ;;\n+esac\n+\n+if test x$use_extended_functional_tests != xno; then\n+  AC_SUBST(EXTENDED_FUNCTIONAL_TESTS, --extended)\n+fi\n+\n+if test x$use_lcov = xyes; then\n+  if test x$LCOV = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but lcov not found\")\n+  fi\n+  if test x$PYTHON = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but python not found\")\n+  fi\n+  if test x$GENHTML = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but genhtml not found\")\n+  fi\n+\n+  AC_MSG_CHECKING([whether compiler is Clang])\n+  AC_PREPROC_IFELSE([AC_LANG_SOURCE([[\n+      #if defined(__clang__) && defined(__llvm__)\n+      // Compiler is Clang\n+      #else\n+      #  error Compiler is not Clang\n+      #endif\n+    ]])],[\n+      AC_MSG_RESULT([yes])\n+      if test x$LLVM_COV = x; then\n+        AC_MSG_ERROR([lcov testing requested but llvm-cov not found])\n+      fi\n+      COV_TOOL=\"$LLVM_COV gcov\"\n+    ],[\n+      AC_MSG_RESULT([no])\n+      if test x$GCOV = x; then\n+        AC_MSG_ERROR([lcov testing requested but gcov not found])\n+      fi\n+      COV_TOOL=\"$GCOV\"\n+  ])\n+  AC_SUBST(COV_TOOL)\n+  AC_SUBST(COV_TOOL_WRAPPER, \"cov_tool_wrapper.sh\")\n+  LCOV=\"$LCOV --gcov-tool $(pwd)/$COV_TOOL_WRAPPER\"\n+\n+  AX_CHECK_LINK_FLAG([[--coverage]], [LDFLAGS=\"$LDFLAGS --coverage\"],\n+    [AC_MSG_ERROR(\"lcov testing requested but --coverage linker flag does not work\")])\n+  AX_CHECK_COMPILE_FLAG([--coverage],[CXXFLAGS=\"$CXXFLAGS --coverage\"],\n+    [AC_MSG_ERROR(\"lcov testing requested but --coverage flag does not work\")])\n+  CXXFLAGS=\"$CXXFLAGS -Og\"\n+fi\n+\n+if test x$use_lcov_branch != xno; then\n+  AC_SUBST(LCOV_OPTS, \"$LCOV_OPTS --rc lcov_branch_coverage=1\")\n+fi\n+\n+dnl Check for endianness\n+AC_C_BIGENDIAN\n+\n+dnl Check for pthread compile/link requirements\n+AX_PTHREAD\n+\n+dnl The following macro will add the necessary defines to bitcoin-config.h, but\n+dnl they also need to be passed down to any subprojects. Pull the results out of\n+dnl the cache and add them to CPPFLAGS.\n+AC_SYS_LARGEFILE\n+dnl detect POSIX or GNU variant of strerror_r\n+AC_FUNC_STRERROR_R\n+\n+if test x$ac_cv_sys_file_offset_bits != x &&\n+   test x$ac_cv_sys_file_offset_bits != xno &&\n+   test x$ac_cv_sys_file_offset_bits != xunknown; then\n+  CPPFLAGS=\"$CPPFLAGS -D_FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits\"\n+fi\n+\n+if test x$ac_cv_sys_large_files != x &&\n+   test x$ac_cv_sys_large_files != xno &&\n+   test x$ac_cv_sys_large_files != xunknown; then\n+  CPPFLAGS=\"$CPPFLAGS -D_LARGE_FILES=$ac_cv_sys_large_files\"\n+fi\n+\n+AX_GCC_FUNC_ATTRIBUTE([visibility])\n+AX_GCC_FUNC_ATTRIBUTE([dllexport])\n+AX_GCC_FUNC_ATTRIBUTE([dllimport])\n+\n+if test x$use_glibc_compat != xno; then\n+  AX_CHECK_LINK_FLAG([[-Wl,--wrap=__divmoddi4]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=__divmoddi4\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,--wrap=log2f]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=log2f\"])\n+else\n+  AC_SEARCH_LIBS([clock_gettime],[rt])\n+fi\n+\n+if test \"x$enable_gprof\" = xyes; then\n+    dnl -pg is incompatible with -pie. Since hardening and profiling together doesn't make sense,\n+    dnl we simply make them mutually exclusive here. Additionally, hardened toolchains may force\n+    dnl -pie by default, in which case it needs to be turned off with -no-pie.\n+\n+    if test x$use_hardening = xyes; then\n+        AC_MSG_ERROR(gprof profiling is not compatible with hardening. Reconfigure with --disable-hardening or --disable-gprof)\n+    fi\n+    use_hardening=no\n+    AX_CHECK_COMPILE_FLAG([-pg],[GPROF_CXXFLAGS=\"-pg\"],\n+        [AC_MSG_ERROR(gprof profiling requested but not available)], [[$CXXFLAG_WERROR]])\n+\n+    AX_CHECK_LINK_FLAG([[-no-pie]], [GPROF_LDFLAGS=\"-no-pie\"])\n+    AX_CHECK_LINK_FLAG([[-pg]],[GPROF_LDFLAGS=\"$GPROF_LDFLAGS -pg\"],\n+        [AC_MSG_ERROR(gprof profiling requested but not available)], [[$GPROF_LDFLAGS]])\n+fi\n+\n+if test x$TARGET_OS != xwindows; then\n+  dnl All windows code is PIC, forcing it on just adds useless compile warnings\n+  AX_CHECK_COMPILE_FLAG([-fPIC],[PIC_FLAGS=\"-fPIC\"])\n+fi\n+\n+dnl All versions of gcc that we commonly use for building are subject to bug\n+dnl https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+dnl -fstack-reuse=none for all gcc builds. (Only gcc understands this flag)\n+AX_CHECK_COMPILE_FLAG([-fstack-reuse=none],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-reuse=none\"])\n+if test x$use_hardening != xno; then\n+  use_hardening=yes\n+  AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n+  AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n+\n+  AX_CHECK_COMPILE_FLAG([-fcf-protection=full],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fcf-protection=full\"])\n+\n+  dnl stack-clash-protection does not work properly when building for Windows.\n+  dnl We use the test case from https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90458\n+  dnl to determine if it can be enabled.\n+  AX_CHECK_COMPILE_FLAG([-fstack-clash-protection],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-clash-protection\"],[],[\"-O0\"],\n+    [AC_LANG_SOURCE([[class D {public: unsigned char buf[32768];}; int main() {D d; return 0;}]])])\n+\n+  dnl When enable_debug is yes, all optimizations are disabled.\n+  dnl However, FORTIFY_SOURCE requires that there is some level of optimization, otherwise it does nothing and just creates a compiler warning.\n+  dnl Since FORTIFY_SOURCE is a no-op without optimizations, do not enable it when enable_debug is yes.\n+  if test x$enable_debug != xyes; then\n+    AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n+      AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n+        HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n+      ])\n+      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n+    ])\n+  fi\n+\n+  AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,--high-entropy-va]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--high-entropy-va\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,-z,separate-code]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,separate-code\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-fPIE -pie]], [PIE_FLAGS=\"-fPIE\"; HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"],, [[$CXXFLAG_WERROR]])\n+\n+  case $host in\n+    *mingw*)\n+       AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(libssp missing))\n+    ;;\n+  esac\n+fi\n+\n+dnl These flags are specific to ld64, and may cause issues with other linkers.\n+dnl For example: GNU ld will interpret -dead_strip as -de and then try and use\n+dnl \"ad_strip\" as the symbol for the entry point.\n+if test x$TARGET_OS = xdarwin; then\n+  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip_dylibs]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip_dylibs\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,-bind_at_load]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-bind_at_load\"],, [[$LDFLAG_WERROR]])\n+fi\n+\n+if test x$enable_determinism = xyes; then\n+  if test x$TARGET_OS = xwindows; then\n+    AX_CHECK_LINK_FLAG([[-Wl,--no-insert-timestamp]], [LDFLAGS=\"$LDFLAGS -Wl,--no-insert-timestamp\"],, [[$LDFLAG_WERROR]])\n+  fi\n+fi\n+\n+AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h sys/sysctl.h vm/vm_param.h sys/vmmeter.h sys/resources.h])\n+\n+AC_CHECK_DECLS([getifaddrs, freeifaddrs],,,\n+    [#include <sys/types.h>\n+    #include <ifaddrs.h>]\n+)\n+AC_CHECK_DECLS([strnlen])\n+\n+dnl Check for daemon(3), unrelated to --with-daemon (although used by it)\n+AC_CHECK_DECLS([daemon])\n+\n+AC_CHECK_DECLS([le16toh, le32toh, le64toh, htole16, htole32, htole64, be16toh, be32toh, be64toh, htobe16, htobe32, htobe64],,,\n+\t\t[#if HAVE_ENDIAN_H\n+                 #include <endian.h>\n+                 #elif HAVE_SYS_ENDIAN_H\n+                 #include <sys/endian.h>\n+                 #endif])\n+\n+AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,\n+\t\t[#if HAVE_BYTESWAP_H\n+                 #include <byteswap.h>\n+                 #endif])\n+\n+AC_MSG_CHECKING(for __builtin_clzl)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[ ]], [[\n+ (void) __builtin_clzl(0);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_BUILTIN_CLZL, 1, [Define this symbol if you have __builtin_clzl])],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for __builtin_clzll)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[ ]], [[\n+  (void) __builtin_clzll(0);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_BUILTIN_CLZLL, 1, [Define this symbol if you have __builtin_clzll])],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+dnl Check for malloc_info (for memory statistics information in getmemoryinfo)\n+AC_MSG_CHECKING(for getmemoryinfo)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n+ [[ int f = malloc_info(0, NULL); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOC_INFO, 1,[Define this symbol if you have malloc_info]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+dnl Check for mallopt(M_ARENA_MAX) (to set glibc arenas)\n+AC_MSG_CHECKING(for mallopt M_ARENA_MAX)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n+ [[ mallopt(M_ARENA_MAX, 1); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOPT_ARENA_MAX, 1,[Define this symbol if you have mallopt with M_ARENA_MAX]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+dnl Check for posix_fallocate\n+AC_MSG_CHECKING(for posix_fallocate)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+                   // same as in src/util/system.cpp\n+                   #ifdef __linux__\n+                   #ifdef _POSIX_C_SOURCE\n+                   #undef _POSIX_C_SOURCE\n+                   #endif\n+                   #define _POSIX_C_SOURCE 200112L\n+                   #endif // __linux__\n+                   #include <fcntl.h>]],\n+                   [[ int f = posix_fallocate(0, 0, 0); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_POSIX_FALLOCATE, 1,[Define this symbol if you have posix_fallocate]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING([for visibility attribute])\n+AC_LINK_IFELSE([AC_LANG_SOURCE([\n+  int foo_def( void ) __attribute__((visibility(\"default\")));\n+  int main(){}\n+  ])],\n+  [\n+    AC_DEFINE(HAVE_VISIBILITY_ATTRIBUTE,1,[Define if the visibility attribute is supported.])\n+    AC_MSG_RESULT(yes)\n+  ],\n+  [\n+    AC_MSG_RESULT(no)\n+    if test x$use_reduce_exports = xyes; then\n+      AC_MSG_ERROR([Cannot find a working visibility attribute. Use --disable-reduce-exports.])\n+    fi\n+  ]\n+)\n+\n+dnl thread_local is currently disabled when building with glibc back compat.\n+dnl Our minimum supported glibc is 2.17, however support for thread_local\n+dnl did not arrive in glibc until 2.18.\n+if test \"x$use_thread_local\" = xyes || { test \"x$use_thread_local\" = xauto && test \"x$use_glibc_compat\" = xno; }; then\n+  TEMP_LDFLAGS=\"$LDFLAGS\"\n+  LDFLAGS=\"$TEMP_LDFLAGS $PTHREAD_CFLAGS\"\n+  AC_MSG_CHECKING([for thread_local support])\n+  AC_LINK_IFELSE([AC_LANG_SOURCE([\n+    #include <thread>\n+    static thread_local int foo = 0;\n+    static void run_thread() { foo++;}\n+    int main(){\n+    for(int i = 0; i < 10; i++) { std::thread(run_thread).detach();}\n+    return foo;\n+    }\n+    ])],\n+    [\n+     case $host in\n+       *mingw*)\n+          dnl mingw32's implementation of thread_local has also been shown to behave\n+          dnl erroneously under concurrent usage; see:\n+          dnl https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n+          AC_MSG_RESULT(no)\n+          ;;\n+        *freebsd*)\n+          dnl FreeBSD's implementation of thread_local is also buggy (per\n+          dnl https://groups.google.com/d/msg/bsdmailinglist/22ncTZAbDp4/Dii_pII5AwAJ)\n+          AC_MSG_RESULT(no)\n+          ;;\n+        *)\n+          AC_DEFINE(HAVE_THREAD_LOCAL,1,[Define if thread_local is supported.])\n+          AC_MSG_RESULT(yes)\n+          ;;\n+      esac\n+    ],\n+    [\n+      AC_MSG_RESULT(no)\n+    ]\n+  )\n+  LDFLAGS=\"$TEMP_LDFLAGS\"\n+fi\n+\n+dnl check for gmtime_r(), fallback to gmtime_s() if that is unavailable\n+dnl fail if neither are available.\n+AC_MSG_CHECKING(for gmtime_r)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <ctime>]],\n+  [[ gmtime_r((const time_t *) nullptr, (struct tm *) nullptr); ]])],\n+  [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GMTIME_R, 1, [Define this symbol if gmtime_r is available]) ],\n+  [ AC_MSG_RESULT(no);\n+    AC_MSG_CHECKING(for gmtime_s);\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <ctime>]],\n+       [[ gmtime_s((struct tm *) nullptr, (const time_t *) nullptr); ]])],\n+       [ AC_MSG_RESULT(yes)],\n+       [ AC_MSG_RESULT(no); AC_MSG_ERROR(Both gmtime_r and gmtime_s are unavailable) ]\n+    )\n+  ]\n+)\n+\n+dnl Check for different ways of gathering OS randomness\n+AC_MSG_CHECKING(for Linux getrandom syscall)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n+  #include <sys/syscall.h>\n+  #include <linux/random.h>]],\n+ [[ syscall(SYS_getrandom, nullptr, 32, 0); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYS_GETRANDOM, 1,[Define this symbol if the Linux getrandom system call is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for getentropy)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],\n+ [[ getentropy(nullptr, 32) ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY, 1,[Define this symbol if the BSD getentropy system call is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for getentropy via random.h)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n+ #include <sys/random.h>]],\n+ [[ getentropy(nullptr, 32) ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY_RAND, 1,[Define this symbol if the BSD getentropy system call is available with sys/random.h]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for sysctl)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n+  #include <sys/sysctl.h>]],\n+ [[ #ifdef __linux__\n+    #error \"Don't use sysctl on Linux, it's deprecated even when it works\"\n+    #endif\n+    sysctl(nullptr, 2, nullptr, nullptr, nullptr, 0); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYSCTL, 1,[Define this symbol if the BSD sysctl() is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for sysctl KERN_ARND)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n+  #include <sys/sysctl.h>]],\n+ [[ #ifdef __linux__\n+    #error \"Don't use sysctl on Linux, it's deprecated even when it works\"\n+    #endif\n+    static int name[2] = {CTL_KERN, KERN_ARND};\n+    sysctl(name, 2, nullptr, nullptr, nullptr, 0); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYSCTL_ARND, 1,[Define this symbol if the BSD sysctl(KERN_ARND) is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for if type char equals int8_t)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdint.h>\n+  #include <type_traits>]],\n+ [[ static_assert(std::is_same<int8_t, char>::value, \"\"); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(CHAR_EQUALS_INT8, 1,[Define this symbol if type char equals int8_t]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for fdatasync)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],\n+ [[ fdatasync(0); ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_FDATASYNC=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_FDATASYNC=0 ]\n+)\n+AC_DEFINE_UNQUOTED([HAVE_FDATASYNC], [$HAVE_FDATASYNC], [Define to 1 if fdatasync is available.])\n+\n+AC_MSG_CHECKING(for F_FULLFSYNC)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <fcntl.h>]],\n+ [[ fcntl(0, F_FULLFSYNC, 0); ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_FULLFSYNC=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_FULLFSYNC=0 ]\n+)\n+\n+AC_MSG_CHECKING(for O_CLOEXEC)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <fcntl.h>]],\n+ [[ open(\"\", O_CLOEXEC); ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_O_CLOEXEC=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_O_CLOEXEC=0 ]\n+)\n+\n+dnl crc32c platform checks\n+AC_MSG_CHECKING(for __builtin_prefetch)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[ ]], [[\n+  char data = 0;\n+  const char* address = &data;\n+  __builtin_prefetch(address, 0, 0);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_BUILTIN_PREFETCH=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_BUILTIN_PREFETCH=0 ]\n+)\n+\n+AC_MSG_CHECKING(for _mm_prefetch)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <xmmintrin.h>]], [[\n+  char data = 0;\n+  const char* address = &data;\n+  _mm_prefetch(address, _MM_HINT_NTA);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_MM_PREFETCH=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_MM_PREFETCH=0 ]\n+)\n+\n+AC_MSG_CHECKING(for strong getauxval support in the system headers)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <arm_acle.h>\n+    #include <arm_neon.h>\n+    #include <sys/auxv.h>\n+  ]], [[\n+    getauxval(AT_HWCAP);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_STRONG_GETAUXVAL=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_STRONG_GETAUXVAL=0 ]\n+)\n+\n+AC_MSG_CHECKING(for weak getauxval support in the compiler)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    unsigned long getauxval(unsigned long type) __attribute__((weak));\n+    #define AT_HWCAP 16\n+  ]], [[\n+    getauxval(AT_HWCAP);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_WEAK_GETAUXVAL=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_WEAK_GETAUXVAL=0 ]\n+)\n+\n+dnl Check for reduced exports\n+if test x$use_reduce_exports = xyes; then\n+  AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n+  [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])\n+fi\n+\n+AC_MSG_CHECKING([for std::system])\n+AC_LINK_IFELSE(\n+    [ AC_LANG_PROGRAM(\n+        [[ #include <cstdlib> ]],\n+        [[ int nErr = std::system(\"\"); ]]\n+    )],\n+    [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_STD__SYSTEM, 1, Define to 1 if std::system is available.)],\n+    [ AC_MSG_RESULT(no) ]\n+)\n+\n+AC_MSG_CHECKING([for ::_wsystem])\n+AC_LINK_IFELSE(\n+    [ AC_LANG_PROGRAM(\n+        [[ ]],\n+        [[ int nErr = ::_wsystem(\"\"); ]]\n+    )],\n+    [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_WSYSTEM, 1, Define to 1 if ::wsystem is available.)],\n+    [ AC_MSG_RESULT(no) ]\n+)\n+\n+AC_DEFINE([HAVE_SYSTEM], [HAVE_STD__SYSTEM || HAVE_WSYSTEM], [std::system or ::wsystem])\n+\n+LEVELDB_CPPFLAGS=\n+LIBLEVELDB=\n+LIBMEMENV=\n+AM_CONDITIONAL([EMBEDDED_LEVELDB],[true])\n+AC_SUBST(LEVELDB_CPPFLAGS)\n+AC_SUBST(LIBLEVELDB)\n+AC_SUBST(LIBMEMENV)\n+\n+dnl SUPPRESSED_CPPFLAGS=SUPPRESS_WARNINGS([$SOME_CPPFLAGS])\n+dnl Replace -I with -isystem in $SOME_CPPFLAGS to suppress warnings from\n+dnl headers from its include directories and return the result.\n+dnl See -isystem documentation:\n+dnl https://gcc.gnu.org/onlinedocs/gcc/Directory-Options.html\n+dnl https://clang.llvm.org/docs/ClangCommandLineReference.html#cmdoption-clang-isystem-directory\n+dnl Do not change \"-I/usr/include\" to \"-isystem /usr/include\" because that\n+dnl is not necessary (/usr/include is already a system directory) and because\n+dnl it would break GCC's #include_next.\n+AC_DEFUN([SUPPRESS_WARNINGS],\n+         [$(echo $1 |${SED} -E -e 's/(^| )-I/\\1-isystem /g' -e 's;-isystem /usr/include([/ ]|$);-I/usr/include\\1;g')])\n+\n+dnl enable-fuzz should disable all other targets\n+if test \"x$enable_fuzz\" = \"xyes\"; then\n+  AC_MSG_WARN(enable-fuzz will disable all other targets)\n+  build_bitcoin_utils=no\n+  build_bitcoin_cli=no\n+  build_bitcoin_tx=no\n+  build_bitcoin_wallet=no\n+  build_bitcoind=no\n+  build_bitcoin_libs=no\n+  bitcoin_enable_qt=no\n+  bitcoin_enable_qt_test=no\n+  bitcoin_enable_qt_dbus=no\n+  enable_wallet=no\n+  use_bench=no\n+  use_upnp=no\n+  use_zmq=no\n+\n+  AC_MSG_CHECKING([whether main function is needed])\n+  AX_CHECK_LINK_FLAG(\n+    [[-fsanitize=$use_sanitizers]],\n+    [AC_MSG_RESULT([no])],\n+    [AC_MSG_RESULT([yes])\n+     CPPFLAGS=\"$CPPFLAGS -DPROVIDE_MAIN_FUNCTION\"],\n+    [],\n+    [AC_LANG_PROGRAM([[\n+      #include <cstdint>\n+      #include <cstddef>\n+      extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) { return 0; }\n+      /* unterminated comment to remove the main function ...\n+    ]],[[]])])\n+else\n+  BITCOIN_QT_INIT\n+\n+  dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n+  BITCOIN_QT_CONFIGURE([5.5.1])\n+\n+  dnl Keep a copy of the original $QT_INCLUDES and use it when invoking qt's moc\n+  QT_INCLUDES_UNSUPPRESSED=$QT_INCLUDES\n+  if test x$suppress_external_warnings != xno ; then\n+    QT_INCLUDES=SUPPRESS_WARNINGS($QT_INCLUDES)\n+    QT_DBUS_INCLUDES=SUPPRESS_WARNINGS($QT_DBUS_INCLUDES)\n+    QT_TEST_INCLUDES=SUPPRESS_WARNINGS($QT_TEST_INCLUDES)\n+  fi\n+fi\n+\n+if test x$enable_wallet != xno; then\n+    dnl Check for libdb_cxx only if wallet enabled\n+    BITCOIN_FIND_BDB48\n+    if test x$suppress_external_warnings != xno ; then\n+        BDB_CPPFLAGS=SUPPRESS_WARNINGS($BDB_CPPFLAGS)\n+    fi\n+\n+    dnl Check for sqlite3\n+    if test \"x$use_sqlite\" != \"xno\"; then\n+      PKG_CHECK_MODULES([SQLITE], [sqlite3 >= 3.7.17], [have_sqlite=yes], [have_sqlite=no])\n+    fi\n+    AC_MSG_CHECKING([whether to build wallet with support for sqlite])\n+    if test \"x$use_sqlite\" = \"xno\"; then\n+      use_sqlite=no\n+    elif test \"x$have_sqlite\" = \"xno\"; then\n+      if test \"x$use_sqlite\" = \"xyes\"; then\n+        AC_MSG_ERROR([sqlite support requested but cannot be built. Use --without-sqlite])\n+      fi\n+      use_sqlite=no\n+    else\n+      if test x$use_sqlite != xno; then\n+        AC_DEFINE([USE_SQLITE],[1],[Define if sqlite support should be compiled in])\n+        use_sqlite=yes\n+      fi\n+    fi\n+    AC_MSG_RESULT([$use_sqlite])\n+fi\n+\n+dnl Check for libminiupnpc (optional)\n+if test x$use_upnp != xno; then\n+  AC_CHECK_HEADERS(\n+    [miniupnpc/miniwget.h miniupnpc/miniupnpc.h miniupnpc/upnpcommands.h miniupnpc/upnperrors.h],\n+    [AC_CHECK_LIB([miniupnpc], [upnpDiscover], [MINIUPNPC_LIBS=-lminiupnpc], [have_miniupnpc=no])],\n+    [have_miniupnpc=no]\n+  )\n+dnl The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+dnl with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+if test x$have_miniupnpc != xno; then\n+  AC_MSG_CHECKING([whether miniUPnPc API version is supported])\n+  AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[\n+      @%:@include <miniupnpc/miniupnpc.h>\n+    ]], [[\n+      #if MINIUPNPC_API_VERSION >= 10\n+      // Everything is okay\n+      #else\n+      #  error miniUPnPc API version is too old\n+      #endif\n+    ]])],[\n+      AC_MSG_RESULT(yes)\n+    ],[\n+    AC_MSG_RESULT(no)\n+    AC_MSG_WARN([miniUPnPc API version < 10 is unsupported, disabling UPnP support.])\n+    have_miniupnpc=no\n+  ])\n+fi\n+fi\n+\n+if test x$build_bitcoin_wallet$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononononono; then\n+    use_boost=no\n+else\n+    use_boost=yes\n+fi\n+\n+if test x$use_boost = xyes; then\n+\n+dnl Minimum required Boost version\n+define(MINIMUM_REQUIRED_BOOST, 1.58.0)\n+\n+dnl Check for Boost libs\n+AX_BOOST_BASE([MINIMUM_REQUIRED_BOOST])\n+if test x$want_boost = xno; then\n+    AC_MSG_ERROR([[only libbitcoinconsensus can be built without boost]])\n+fi\n+AX_BOOST_SYSTEM\n+AX_BOOST_FILESYSTEM\n+AX_BOOST_THREAD\n+\n+dnl Opt-in to boost-process\n+AS_IF([ test x$with_boost_process != x ], [ AX_BOOST_PROCESS ], [ ax_cv_boost_process=no ] )\n+\n+if test x$suppress_external_warnings != xno; then\n+    BOOST_CPPFLAGS=SUPPRESS_WARNINGS($BOOST_CPPFLAGS)\n+fi\n+\n+dnl Boost 1.56 through 1.62 allow using std::atomic instead of its own atomic\n+dnl counter implementations. In 1.63 and later the std::atomic approach is default.\n+m4_pattern_allow(DBOOST_AC_USE_STD_ATOMIC) dnl otherwise it's treated like a macro\n+BOOST_CPPFLAGS=\"-DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC $BOOST_CPPFLAGS\"\n+\n+BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_THREAD_LIB\"\n+fi\n+\n+if test x$use_reduce_exports = xyes; then\n+    CXXFLAGS=\"$CXXFLAGS $RE_CXXFLAGS\"\n+    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"],, [[$LDFLAG_WERROR]])\n+fi\n+\n+if test x$use_tests = xyes; then\n+\n+  if test x$HEXDUMP = x; then\n+    AC_MSG_ERROR(hexdump is required for tests)\n+  fi\n+\n+  if test x$use_boost = xyes; then\n+\n+  AX_BOOST_UNIT_TEST_FRAMEWORK\n+\n+  dnl Determine if -DBOOST_TEST_DYN_LINK is needed\n+  AC_MSG_CHECKING([for dynamic linked boost test])\n+  TEMP_LIBS=\"$LIBS\"\n+  LIBS=\"$LIBS $BOOST_LDFLAGS $BOOST_UNIT_TEST_FRAMEWORK_LIB\"\n+  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+  CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+  AC_LINK_IFELSE([AC_LANG_SOURCE([\n+       #define BOOST_TEST_DYN_LINK\n+       #define BOOST_TEST_MAIN\n+        #include <boost/test/unit_test.hpp>\n+\n+       ])],\n+    [AC_MSG_RESULT(yes)]\n+    [TESTDEFS=\"$TESTDEFS -DBOOST_TEST_DYN_LINK\"],\n+    [AC_MSG_RESULT(no)])\n+  LIBS=\"$TEMP_LIBS\"\n+  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+\n+  fi\n+fi\n+\n+dnl libevent check\n+\n+if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench != xnonononono; then\n+  PKG_CHECK_MODULES([EVENT], [libevent >= 2.0.21], [use_libevent=yes], [AC_MSG_ERROR([libevent version 2.0.21 or greater not found.])])\n+  if test x$TARGET_OS != xwindows; then\n+    PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads >= 2.0.21],, [AC_MSG_ERROR([libevent_pthreads version 2.0.21 or greater not found.])])\n+  fi\n+fi\n+\n+dnl QR Code encoding library check\n+\n+if test \"x$use_qr\" != xno; then\n+  BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n+fi\n+\n+dnl ZMQ check\n+\n+if test \"x$use_zmq\" = xyes; then\n+  PKG_CHECK_MODULES([ZMQ], [libzmq >= 4],\n+    AC_DEFINE([ENABLE_ZMQ], [1], [Define to 1 to enable ZMQ functions]),\n+    [AC_DEFINE([ENABLE_ZMQ], [0], [Define to 1 to enable ZMQ functions])\n+    AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])\n+    use_zmq=no])\n+else\n+  AC_DEFINE_UNQUOTED([ENABLE_ZMQ], [0], [Define to 1 to enable ZMQ functions])\n+fi\n+\n+if test \"x$use_zmq\" = xyes; then\n+  dnl Assume libzmq was built for static linking\n+  case $host in\n+    *mingw*)\n+      ZMQ_CFLAGS=\"$ZMQ_CFLAGS -DZMQ_STATIC\"\n+    ;;\n+  esac\n+fi\n+\n+dnl univalue check\n+\n+need_bundled_univalue=yes\n+if test x$build_bitcoin_wallet$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononononono; then\n+  need_bundled_univalue=no\n+else\n+  if test x$system_univalue != xno; then\n+    PKG_CHECK_MODULES([UNIVALUE], [libunivalue >= 1.0.4], [found_univalue=yes], [found_univalue=no])\n+    if test x$found_univalue = xyes; then\n+      system_univalue=yes\n+      need_bundled_univalue=no\n+    elif test x$system_univalue = xyes; then\n+      AC_MSG_ERROR([univalue not found])\n+    else\n+      system_univalue=no\n+    fi\n+  fi\n+\n+  if test x$need_bundled_univalue = xyes; then\n+    UNIVALUE_CFLAGS='-I$(srcdir)/univalue/include'\n+    UNIVALUE_LIBS='univalue/libunivalue.la'\n+  fi\n+fi\n+\n+AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$need_bundled_univalue = xyes])\n+AC_SUBST(UNIVALUE_CFLAGS)\n+AC_SUBST(UNIVALUE_LIBS)\n+\n+dnl libmultiprocess library check\n+\n+libmultiprocess_found=no\n+if test \"x$with_libmultiprocess\" = xyes || test \"x$with_libmultiprocess\" = xauto; then\n+  m4_ifdef([PKG_CHECK_MODULES], [PKG_CHECK_MODULES([LIBMULTIPROCESS], [libmultiprocess], [\n+     libmultiprocess_found=yes;\n+     libmultiprocess_prefix=`$PKG_CONFIG --variable=prefix libmultiprocess`;\n+  ], [true])])\n+elif test \"x$with_libmultiprocess\" != xno; then\n+  AC_MSG_ERROR([--with-libmultiprocess=$with_libmultiprocess value is not yes, auto, or no])\n+fi\n+AC_SUBST(LIBMULTIPROCESS_CFLAGS)\n+AC_SUBST(LIBMULTIPROCESS_LIBS)\n+\n+dnl Enable multiprocess check\n+\n+if test \"x$enable_multiprocess\" = xyes; then\n+  if test \"x$libmultiprocess_found\" != xyes; then\n+    AC_MSG_ERROR([--enable-multiprocess=yes option specified but libmultiprocess library was not found. May need to install libmultiprocess library, or specify install path with PKG_CONFIG_PATH environment variable. Running 'pkg-config --debug libmultiprocess' may be helpful for debugging.])\n+  fi\n+  build_multiprocess=yes\n+elif test \"x$enable_multiprocess\" = xauto; then\n+  build_multiprocess=$libmultiprocess_found\n+else\n+  build_multiprocess=no\n+fi\n+\n+AM_CONDITIONAL([BUILD_MULTIPROCESS],[test \"x$build_multiprocess\" = xyes])\n+AM_CONDITIONAL([BUILD_BITCOIN_NODE], [test \"x$build_multiprocess\" = xyes])\n+AM_CONDITIONAL([BUILD_BITCOIN_GUI], [test \"x$build_multiprocess\" = xyes])\n+\n+dnl codegen tools check\n+\n+if test x$build_multiprocess != xno; then\n+  if test \"x$with_mpgen\" = xyes || test \"x$with_mpgen\" = xauto; then\n+    MPGEN_PREFIX=\"$libmultiprocess_prefix\"\n+  elif test \"x$with_mpgen\" != xno; then\n+    MPGEN_PREFIX=\"$with_mpgen\";\n+  fi\n+  AC_SUBST(MPGEN_PREFIX)\n+fi\n+\n+AC_MSG_CHECKING([whether to build bitcoind])\n+AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n+AC_MSG_RESULT($build_bitcoind)\n+\n+AC_MSG_CHECKING([whether to build bitcoin-cli])\n+AM_CONDITIONAL([BUILD_BITCOIN_CLI], [test x$build_bitcoin_cli = xyes])\n+AC_MSG_RESULT($build_bitcoin_cli)\n+\n+AC_MSG_CHECKING([whether to build bitcoin-tx])\n+AM_CONDITIONAL([BUILD_BITCOIN_TX], [test x$build_bitcoin_tx = xyes])\n+AC_MSG_RESULT($build_bitcoin_tx)\n+\n+AC_MSG_CHECKING([whether to build bitcoin-wallet])\n+AM_CONDITIONAL([BUILD_BITCOIN_WALLET], [test x$build_bitcoin_wallet = xyes])\n+AC_MSG_RESULT($build_bitcoin_wallet)\n+\n+AC_MSG_CHECKING([whether to build libraries])\n+AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])\n+if test x$build_bitcoin_libs = xyes; then\n+  AC_DEFINE(HAVE_CONSENSUS_LIB, 1, [Define this symbol if the consensus lib has been built])\n+  AC_CONFIG_FILES([libbitcoinconsensus.pc:libbitcoinconsensus.pc.in])\n+fi\n+AC_MSG_RESULT($build_bitcoin_libs)\n+\n+AC_LANG_POP\n+\n+if test \"x$use_ccache\" != \"xno\"; then\n+  AC_MSG_CHECKING(if ccache should be used)\n+  if test x$CCACHE = x; then\n+    if test \"x$use_ccache\" = \"xyes\"; then\n+      AC_MSG_ERROR([ccache not found.]);\n+    else\n+      use_ccache=no\n+    fi\n+  else\n+    use_ccache=yes\n+    CC=\"$ac_cv_path_CCACHE $CC\"\n+    CXX=\"$ac_cv_path_CCACHE $CXX\"\n+  fi\n+  AC_MSG_RESULT($use_ccache)\n+fi\n+\n+dnl enable wallet\n+AC_MSG_CHECKING([if wallet should be enabled])\n+if test x$enable_wallet != xno; then\n+  AC_MSG_RESULT(yes)\n+  AC_DEFINE_UNQUOTED([ENABLE_WALLET],[1],[Define to 1 to enable wallet functions])\n+\n+else\n+  AC_MSG_RESULT(no)\n+fi\n+\n+dnl enable upnp support\n+AC_MSG_CHECKING([whether to build with support for UPnP])\n+if test x$have_miniupnpc = xno; then\n+  if test x$use_upnp = xyes; then\n+     AC_MSG_ERROR(\"UPnP requested but cannot be built. Use --without-miniupnpc.\")\n+  fi\n+  AC_MSG_RESULT(no)\n+  use_upnp=no\n+else\n+  if test x$use_upnp != xno; then\n+    AC_MSG_RESULT(yes)\n+    AC_MSG_CHECKING([whether to build with UPnP enabled by default])\n+    use_upnp=yes\n+    upnp_setting=0\n+    if test x$use_upnp_default != xno; then\n+      use_upnp_default=yes\n+      upnp_setting=1\n+    fi\n+    AC_MSG_RESULT($use_upnp_default)\n+    AC_DEFINE_UNQUOTED([USE_UPNP],[$upnp_setting],[UPnP support not compiled if undefined, otherwise value (0 or 1) determines default state])\n+    if test x$TARGET_OS = xwindows; then\n+      MINIUPNPC_CPPFLAGS=\"-DSTATICLIB -DMINIUPNP_STATICLIB\"\n+    fi\n+  else\n+    AC_MSG_RESULT(no)\n+  fi\n+fi\n+\n+dnl these are only used when qt is enabled\n+BUILD_TEST_QT=\"\"\n+if test x$bitcoin_enable_qt != xno; then\n+  dnl enable dbus support\n+  AC_MSG_CHECKING([whether to build GUI with support for D-Bus])\n+  if test x$bitcoin_enable_qt_dbus != xno; then\n+    AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n+  fi\n+  AC_MSG_RESULT($bitcoin_enable_qt_dbus)\n+\n+  dnl enable qr support\n+  AC_MSG_CHECKING([whether to build GUI with support for QR codes])\n+  if test x$have_qrencode = xno; then\n+    if test x$use_qr = xyes; then\n+      AC_MSG_ERROR([QR support requested but cannot be built. Use --without-qrencode])\n+    fi\n+    use_qr=no\n+  else\n+    if test x$use_qr != xno; then\n+      AC_DEFINE([USE_QRCODE],[1],[Define if QR support should be compiled in])\n+      use_qr=yes\n+    fi\n+  fi\n+  AC_MSG_RESULT([$use_qr])\n+\n+  if test x$XGETTEXT = x; then\n+    AC_MSG_WARN(\"xgettext is required to update qt translations\")\n+  fi\n+\n+  AC_MSG_CHECKING([whether to build test_bitcoin-qt])\n+  if test x$use_gui_tests$bitcoin_enable_qt_test = xyesyes; then\n+    AC_MSG_RESULT([yes])\n+    BUILD_TEST_QT=\"yes\"\n+  else\n+    AC_MSG_RESULT([no])\n+  fi\n+fi\n+\n+AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n+\n+AC_MSG_CHECKING([whether to build test_bitcoin])\n+if test x$use_tests = xyes; then\n+  AC_MSG_RESULT([yes])\n+  BUILD_TEST=\"yes\"\n+else\n+  AC_MSG_RESULT([no])\n+  BUILD_TEST=\"\"\n+fi\n+\n+AC_MSG_CHECKING([whether to reduce exports])\n+if test x$use_reduce_exports = xyes; then\n+  AC_MSG_RESULT([yes])\n+else\n+  AC_MSG_RESULT([no])\n+fi\n+\n+if test x$build_bitcoin_wallet$build_bitcoin_cli$build_bitcoin_tx$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_bench$use_tests = xnononononononono; then\n+  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui --enable-bench or --enable-tests])\n+fi\n+\n+AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\n+AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\n+AM_CONDITIONAL([TARGET_LINUX], [test x$TARGET_OS = xlinux])\n+AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n+AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\n+AM_CONDITIONAL([USE_SQLITE], [test \"x$use_sqlite\" = \"xyes\"])\n+AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\n+AM_CONDITIONAL([ENABLE_FUZZ],[test x$enable_fuzz = xyes])\n+AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n+AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\n+AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n+AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n+AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n+AM_CONDITIONAL([USE_LIBEVENT],[test x$use_libevent = xyes])\n+AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n+AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\n+AM_CONDITIONAL([ENABLE_SSE42],[test x$enable_sse42 = xyes])\n+AM_CONDITIONAL([ENABLE_SSE41],[test x$enable_sse41 = xyes])\n+AM_CONDITIONAL([ENABLE_AVX2],[test x$enable_avx2 = xyes])\n+AM_CONDITIONAL([ENABLE_SHANI],[test x$enable_shani = xyes])\n+AM_CONDITIONAL([ENABLE_ARM_CRC],[test x$enable_arm_crc = xyes])\n+AM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])\n+AM_CONDITIONAL([WORDS_BIGENDIAN],[test x$ac_cv_c_bigendian = xyes])\n+\n+AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n+AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n+AC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])\n+AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\n+AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\n+AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Copyright year])\n+AC_DEFINE(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\", [Copyright holder(s) before %s replacement])\n+AC_DEFINE(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\", [Replacement for %s in copyright holders string])\n+define(_COPYRIGHT_HOLDERS_FINAL, [patsubst(_COPYRIGHT_HOLDERS, [%s], [_COPYRIGHT_HOLDERS_SUBSTITUTION])])\n+AC_DEFINE(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\", [Copyright holder(s)])\n+AC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)\n+AC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)\n+AC_SUBST(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION)\n+AC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)\n+AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n+AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n+AC_SUBST(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\")\n+AC_SUBST(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\")\n+AC_SUBST(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\")\n+AC_SUBST(BITCOIN_DAEMON_NAME)\n+AC_SUBST(BITCOIN_GUI_NAME)\n+AC_SUBST(BITCOIN_CLI_NAME)\n+AC_SUBST(BITCOIN_TX_NAME)\n+AC_SUBST(BITCOIN_WALLET_TOOL_NAME)\n+\n+AC_SUBST(RELDFLAGS)\n+AC_SUBST(DEBUG_CPPFLAGS)\n+AC_SUBST(WARN_CXXFLAGS)\n+AC_SUBST(NOWARN_CXXFLAGS)\n+AC_SUBST(DEBUG_CXXFLAGS)\n+AC_SUBST(COMPAT_LDFLAGS)\n+AC_SUBST(ERROR_CXXFLAGS)\n+AC_SUBST(GPROF_CXXFLAGS)\n+AC_SUBST(GPROF_LDFLAGS)\n+AC_SUBST(HARDENED_CXXFLAGS)\n+AC_SUBST(HARDENED_CPPFLAGS)\n+AC_SUBST(HARDENED_LDFLAGS)\n+AC_SUBST(PIC_FLAGS)\n+AC_SUBST(PIE_FLAGS)\n+AC_SUBST(SANITIZER_CXXFLAGS)\n+AC_SUBST(SANITIZER_LDFLAGS)\n+AC_SUBST(SSE42_CXXFLAGS)\n+AC_SUBST(SSE41_CXXFLAGS)\n+AC_SUBST(AVX2_CXXFLAGS)\n+AC_SUBST(SHANI_CXXFLAGS)\n+AC_SUBST(ARM_CRC_CXXFLAGS)\n+AC_SUBST(LIBTOOL_APP_LDFLAGS)\n+AC_SUBST(USE_SQLITE)\n+AC_SUBST(USE_UPNP)\n+AC_SUBST(USE_QRCODE)\n+AC_SUBST(BOOST_LIBS)\n+AC_SUBST(SQLITE_LIBS)\n+AC_SUBST(TESTDEFS)\n+AC_SUBST(MINIUPNPC_CPPFLAGS)\n+AC_SUBST(MINIUPNPC_LIBS)\n+AC_SUBST(EVENT_LIBS)\n+AC_SUBST(EVENT_PTHREADS_LIBS)\n+AC_SUBST(ZMQ_LIBS)\n+AC_SUBST(QR_LIBS)\n+AC_SUBST(HAVE_GMTIME_R)\n+AC_SUBST(HAVE_FDATASYNC)\n+AC_SUBST(HAVE_FULLFSYNC)\n+AC_SUBST(HAVE_O_CLOEXEC)\n+AC_SUBST(HAVE_BUILTIN_PREFETCH)\n+AC_SUBST(HAVE_MM_PREFETCH)\n+AC_SUBST(HAVE_STRONG_GETAUXVAL)\n+AC_SUBST(HAVE_WEAK_GETAUXVAL)\n+AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/config.ini])\n+AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n+AM_COND_IF([HAVE_DOXYGEN], [AC_CONFIG_FILES([doc/Doxyfile])])\n+AC_CONFIG_LINKS([contrib/devtools/security-check.py:contrib/devtools/security-check.py])\n+AC_CONFIG_LINKS([contrib/devtools/test-security-check.py:contrib/devtools/test-security-check.py])\n+AC_CONFIG_LINKS([contrib/filter-lcov.py:contrib/filter-lcov.py])\n+AC_CONFIG_LINKS([test/functional/test_runner.py:test/functional/test_runner.py])\n+AC_CONFIG_LINKS([test/fuzz/test_runner.py:test/fuzz/test_runner.py])\n+AC_CONFIG_LINKS([test/util/bitcoin-util-test.py:test/util/bitcoin-util-test.py])\n+AC_CONFIG_LINKS([test/util/rpcauth-test.py:test/util/rpcauth-test.py])\n+\n+dnl boost's m4 checks do something really nasty: they export these vars. As a\n+dnl result, they leak into secp256k1's configure and crazy things happen.\n+dnl Until this is fixed upstream and we've synced, we'll just un-export them.\n+CPPFLAGS_TEMP=\"$CPPFLAGS\"\n+unset CPPFLAGS\n+CPPFLAGS=\"$CPPFLAGS_TEMP\"\n+\n+LDFLAGS_TEMP=\"$LDFLAGS\"\n+unset LDFLAGS\n+LDFLAGS=\"$LDFLAGS_TEMP\"\n+\n+LIBS_TEMP=\"$LIBS\"\n+unset LIBS\n+LIBS=\"$LIBS_TEMP\"\n+\n+PKGCONFIG_PATH_TEMP=\"$PKG_CONFIG_PATH\"\n+unset PKG_CONFIG_PATH\n+PKG_CONFIG_PATH=\"$PKGCONFIG_PATH_TEMP\"\n+\n+PKGCONFIG_LIBDIR_TEMP=\"$PKG_CONFIG_LIBDIR\"\n+unset PKG_CONFIG_LIBDIR\n+PKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\n+\n+if test x$need_bundled_univalue = xyes; then\n+  AC_CONFIG_SUBDIRS([src/univalue])\n+fi\n+\n+ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --enable-benchmark=no --with-bignum=no --enable-module-recovery --enable-module-schnorrsig --enable-experimental\"\n+AC_CONFIG_SUBDIRS([src/secp256k1])\n+\n+AC_OUTPUT\n+\n+dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\n+case ${OS} in\n+   *Windows*)\n+     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  test/config.ini > test/config-2.ini\n+     mv test/config-2.ini test/config.ini\n+   ;;\n+esac\n+\n+echo\n+echo \"Options used to compile and link:\"\n+echo \"  boost process = $ax_cv_boost_process\"\n+echo \"  multiprocess  = $build_multiprocess\"\n+echo \"  with wallet   = $enable_wallet\"\n+if test \"x$enable_wallet\" != \"xno\"; then\n+    echo \"    with sqlite = $use_sqlite\"\n+fi\n+echo \"  with gui / qt = $bitcoin_enable_qt\"\n+if test x$bitcoin_enable_qt != xno; then\n+    echo \"    with qr     = $use_qr\"\n+fi\n+echo \"  with zmq      = $use_zmq\"\n+echo \"  with test     = $use_tests\"\n+if test x$use_tests != xno; then\n+    echo \"    with fuzz   = $enable_fuzz\"\n+fi\n+echo \"  with bench    = $use_bench\"\n+echo \"  with upnp     = $use_upnp\"\n+echo \"  use asm       = $use_asm\"\n+echo \"  sanitizers    = $use_sanitizers\"\n+echo \"  debug enabled = $enable_debug\"\n+echo \"  gprof enabled = $enable_gprof\"\n+echo \"  werror        = $enable_werror\"\n+echo\n+echo \"  target os     = $TARGET_OS\"\n+echo \"  build os      = $build_os\"\n+echo\n+echo \"  CC            = $CC\"\n+echo \"  CFLAGS        = $PTHREAD_CFLAGS $CFLAGS\"\n+echo \"  CPPFLAGS      = $DEBUG_CPPFLAGS $HARDENED_CPPFLAGS $CPPFLAGS\"\n+echo \"  CXX           = $CXX\"\n+echo \"  CXXFLAGS      = $DEBUG_CXXFLAGS $HARDENED_CXXFLAGS $WARN_CXXFLAGS $NOWARN_CXXFLAGS $ERROR_CXXFLAGS $GPROF_CXXFLAGS $CXXFLAGS\"\n+echo \"  LDFLAGS       = $PTHREAD_LIBS $HARDENED_LDFLAGS $GPROF_LDFLAGS $LDFLAGS\"\n+echo \"  ARFLAGS       = $ARFLAGS\"\n+echo"
      },
      {
        "sha": "361975baa4915b26e4e65fecaf359d230a411450",
        "filename": "contrib/README.md",
        "status": "added",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,48 @@\n+Repository Tools\n+---------------------\n+\n+### [Developer tools](/contrib/devtools) ###\n+Specific tools for developers working on this repository.\n+Additional tools, including the `github-merge.py` script, are available in the [maintainer-tools](https://github.com/bitcoin-core/bitcoin-maintainer-tools) repository.\n+\n+### [Verify-Commits](/contrib/verify-commits) ###\n+Tool to verify that every merge commit was signed by a developer using the `github-merge.py` script.\n+\n+### [Linearize](/contrib/linearize) ###\n+Construct a linear, no-fork, best version of the blockchain.\n+\n+### [Qos](/contrib/qos) ###\n+\n+A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Bitcoin network. This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n+\n+### [Seeds](/contrib/seeds) ###\n+Utility to generate the pnSeed[] array that is compiled into the client.\n+\n+Build Tools and Keys\n+---------------------\n+\n+### Packaging ###\n+The [Debian](/contrib/debian) subfolder contains the copyright file.\n+\n+All other packaging related files can be found in the [bitcoin-core/packaging](https://github.com/bitcoin-core/packaging) repository.\n+\n+### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n+Files used during the gitian build process. For more information about gitian, see the [the Bitcoin Core documentation repository](https://github.com/bitcoin-core/docs).\n+\n+### [Gitian-keys](/contrib/gitian-keys)\n+PGP keys used for signing Bitcoin Core [Gitian release](/doc/release-process.md) results.\n+\n+### [MacDeploy](/contrib/macdeploy) ###\n+Scripts and notes for Mac builds.\n+\n+### [Gitian-build](/contrib/gitian-build.py) ###\n+Script for running full Gitian builds.\n+\n+Test and Verify Tools\n+---------------------\n+\n+### [TestGen](/contrib/testgen) ###\n+Utilities to generate test vectors for the data-driven Bitcoin tests.\n+\n+### [Verify Binaries](/contrib/verifybinaries) ###\n+This script attempts to download and verify the signature file SHA256SUMS.asc from bitcoin.org."
      },
      {
        "sha": "ddea58a05cc1a9f0031b53b0d58f8c3801b32492",
        "filename": "contrib/bitcoin-cli.bash-completion",
        "status": "added",
        "additions": 141,
        "deletions": 0,
        "changes": 141,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/bitcoin-cli.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/bitcoin-cli.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-cli.bash-completion?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,141 @@\n+# bash programmable completion for bitcoin-cli(1)\n+# Copyright (c) 2012-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# call $bitcoin-cli for RPC\n+_bitcoin_rpc() {\n+    # determine already specified args necessary for RPC\n+    local rpcargs=()\n+    for i in ${COMP_LINE}; do\n+        case \"$i\" in\n+            -conf=*|-datadir=*|-regtest|-rpc*|-testnet)\n+                rpcargs=( \"${rpcargs[@]}\" \"$i\" )\n+                ;;\n+        esac\n+    done\n+    $bitcoin_cli \"${rpcargs[@]}\" \"$@\"\n+}\n+\n+_bitcoin_cli() {\n+    local cur prev words=() cword\n+    local bitcoin_cli\n+\n+    # save and use original argument to invoke bitcoin-cli for -help, help and RPC\n+    # as bitcoin-cli might not be in $PATH\n+    bitcoin_cli=\"$1\"\n+\n+    COMPREPLY=()\n+    _get_comp_words_by_ref -n = cur prev words cword\n+\n+    if ((cword > 5)); then\n+        case ${words[cword-5]} in\n+            sendtoaddress)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    if ((cword > 4)); then\n+        case ${words[cword-4]} in\n+            importaddress|listtransactions|setban)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            signrawtransactionwithkey|signrawtransactionwithwallet)\n+                COMPREPLY=( $( compgen -W \"ALL NONE SINGLE ALL|ANYONECANPAY NONE|ANYONECANPAY SINGLE|ANYONECANPAY\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    if ((cword > 3)); then\n+        case ${words[cword-3]} in\n+            addmultisigaddress)\n+                return 0\n+                ;;\n+            getbalance|gettxout|importaddress|importpubkey|importprivkey|listreceivedbyaddress|listsinceblock)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    if ((cword > 2)); then\n+        case ${words[cword-2]} in\n+            addnode)\n+                COMPREPLY=( $( compgen -W \"add remove onetry\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            setban)\n+                COMPREPLY=( $( compgen -W \"add remove\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            fundrawtransaction|getblock|getblockheader|getmempoolancestors|getmempooldescendants|getrawtransaction|gettransaction|listreceivedbyaddress|sendrawtransaction)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    case \"$prev\" in\n+        backupwallet|dumpwallet|importwallet)\n+            _filedir\n+            return 0\n+            ;;\n+        getaddednodeinfo|getrawmempool|lockunspent)\n+            COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+            return 0\n+            ;;\n+        getbalance|getnewaddress|listtransactions|sendmany)\n+            return 0\n+            ;;\n+    esac\n+\n+    case \"$cur\" in\n+        -conf=*)\n+            cur=\"${cur#*=}\"\n+            _filedir\n+            return 0\n+            ;;\n+        -datadir=*)\n+            cur=\"${cur#*=}\"\n+            _filedir -d\n+            return 0\n+            ;;\n+        -*=*)\t# prevent nonsense completions\n+            return 0\n+            ;;\n+        *)\n+            local helpopts commands\n+\n+            # only parse -help if senseful\n+            if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n+                helpopts=$($bitcoin_cli -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+            fi\n+\n+            # only parse help if senseful\n+            if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n+                commands=$(_bitcoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n+            fi\n+\n+            COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n+\n+            # Prevent space if an argument is desired\n+            if [[ $COMPREPLY == *= ]]; then\n+                compopt -o nospace\n+            fi\n+            return 0\n+            ;;\n+    esac\n+} &&\n+complete -F _bitcoin_cli bitcoin-cli\n+\n+# Local variables:\n+# mode: shell-script\n+# sh-basic-offset: 4\n+# sh-indent-comment: t\n+# indent-tabs-mode: nil\n+# End:\n+# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "0e4eeee0a7ad9ebc49c30d30c285ccd41a752771",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,22 @@\n+FORMS += \\\n+    ../src/qt/forms/aboutdialog.ui \\\n+    ../src/qt/forms/addressbookpage.ui \\\n+    ../src/qt/forms/askpassphrasedialog.ui \\\n+    ../src/qt/forms/coincontroldialog.ui \\\n+    ../src/qt/forms/editaddressdialog.ui \\\n+    ../src/qt/forms/helpmessagedialog.ui \\\n+    ../src/qt/forms/intro.ui \\\n+    ../src/qt/forms/openuridialog.ui \\\n+    ../src/qt/forms/optionsdialog.ui \\\n+    ../src/qt/forms/overviewpage.ui \\\n+    ../src/qt/forms/receivecoinsdialog.ui \\\n+    ../src/qt/forms/receiverequestdialog.ui \\\n+    ../src/qt/forms/debugwindow.ui \\\n+    ../src/qt/forms/sendcoinsdialog.ui \\\n+    ../src/qt/forms/sendcoinsentry.ui \\\n+    ../src/qt/forms/signverifymessagedialog.ui \\\n+    ../src/qt/forms/transactiondescdialog.ui \\\n+    ../src/qt/forms/createwalletdialog.ui\n+\n+RESOURCES += \\\n+    ../src/qt/bitcoin.qrc"
      },
      {
        "sha": "a83d2979ed3a8f11edea358937e8d5d359d58b4c",
        "filename": "contrib/bitcoin-tx.bash-completion",
        "status": "added",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/bitcoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/bitcoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-tx.bash-completion?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,57 @@\n+# bash programmable completion for bitcoin-tx(1)\n+# Copyright (c) 2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+_bitcoin_tx() {\n+    local cur prev words=() cword\n+    local bitcoin_tx\n+\n+    # save and use original argument to invoke bitcoin-tx for -help\n+    # it might not be in $PATH\n+    bitcoin_tx=\"$1\"\n+\n+    COMPREPLY=()\n+    _get_comp_words_by_ref -n =: cur prev words cword\n+\n+    case \"$cur\" in\n+        load=*:*)\n+            cur=\"${cur#load=*:}\"\n+            _filedir\n+            return 0\n+            ;;\n+        *=*)\t# prevent attempts to complete other arguments\n+            return 0\n+            ;;\n+    esac\n+\n+    if [[ \"$cword\" == 1 || ( \"$prev\" != \"-create\" && \"$prev\" == -* ) ]]; then\n+        # only options (or an uncompletable hex-string) allowed\n+        # parse bitcoin-tx -help for options\n+        local helpopts\n+        helpopts=$($bitcoin_tx -help | sed -e '/^  -/ p' -e d )\n+        COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n+    else\n+        # only commands are allowed\n+        # parse -help for commands\n+        local helpcmds\n+        helpcmds=$($bitcoin_tx -help | sed -e '1,/Commands:/d' -e 's/=.*/=/' -e '/^  [a-z]/ p' -e d )\n+        COMPREPLY=( $( compgen -W \"$helpcmds\" -- \"$cur\" ) )\n+    fi\n+\n+    # Prevent space if an argument is desired\n+    if [[ $COMPREPLY == *= ]]; then\n+        compopt -o nospace\n+    fi\n+\n+    return 0\n+} &&\n+complete -F _bitcoin_tx bitcoin-tx\n+\n+# Local variables:\n+# mode: shell-script\n+# sh-basic-offset: 4\n+# sh-indent-comment: t\n+# indent-tabs-mode: nil\n+# End:\n+# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "ec1d9512d4759e79ff284ceb09ae0ee16bbdb653",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "added",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,56 @@\n+# bash programmable completion for bitcoind(1) and bitcoin-qt(1)\n+# Copyright (c) 2012-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+_bitcoind() {\n+    local cur prev words=() cword\n+    local bitcoind\n+\n+    # save and use original argument to invoke bitcoind for -help\n+    # it might not be in $PATH\n+    bitcoind=\"$1\"\n+\n+    COMPREPLY=()\n+    _get_comp_words_by_ref -n = cur prev words cword\n+\n+    case \"$cur\" in\n+        -conf=*|-pid=*|-loadblock=*|-rpccookiefile=*|-wallet=*)\n+            cur=\"${cur#*=}\"\n+            _filedir\n+            return 0\n+            ;;\n+        -datadir=*)\n+            cur=\"${cur#*=}\"\n+            _filedir -d\n+            return 0\n+            ;;\n+        -*=*)\t# prevent nonsense completions\n+            return 0\n+            ;;\n+        *)\n+\n+            # only parse -help if sensible\n+            if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n+                local helpopts\n+                helpopts=$($bitcoind -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+                COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n+            fi\n+\n+            # Prevent space if an argument is desired\n+            if [[ $COMPREPLY == *= ]]; then\n+                compopt -o nospace\n+            fi\n+            return 0\n+            ;;\n+    esac\n+} &&\n+complete -F _bitcoind bitcoind bitcoin-qt\n+\n+# Local variables:\n+# mode: shell-script\n+# sh-basic-offset: 4\n+# sh-indent-comment: t\n+# indent-tabs-mode: nil\n+# End:\n+# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "581fe712e96c2cab4839c6bdc49a1b5cdc7bb6e7",
        "filename": "contrib/debian/copyright",
        "status": "added",
        "additions": 146,
        "deletions": 0,
        "changes": 146,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,146 @@\n+Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\n+Upstream-Name: Bitcoin\n+Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n+ irc://#bitcoin@freenode.net\n+Source: https://github.com/bitcoin/bitcoin\n+\n+Files: *\n+Copyright: 2009-2020, Bitcoin Core Developers\n+License: Expat\n+Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n+         as well as the numerous contributors to the project.\n+\n+Files: debian/*\n+Copyright: 2010-2011, Jonas Smedegaard <dr@jones.dk>\n+           2011, Matt Corallo <matt@bluematt.me>\n+License: GPL-2+\n+\n+Files: src/secp256k1/build-aux/m4/ax_jni_include_dir.m4\n+Copyright: 2008 Don Anderson <dda@sleepycat.com>\n+License: GNU-All-permissive-License\n+\n+Files: src/secp256k1/build-aux/m4/ax_prog_cc_for_build.m4\n+Copyright: 2008 Paolo Bonzini <bonzini@gnu.org>\n+License: GNU-All-permissive-License\n+\n+Files: src/qt/res/icons/add.png\n+       src/qt/res/icons/address-book.png\n+       src/qt/res/icons/chevron.png\n+       src/qt/res/icons/edit.png\n+       src/qt/res/icons/editcopy.png\n+       src/qt/res/icons/editpaste.png\n+       src/qt/res/icons/export.png\n+       src/qt/res/icons/eye.png\n+       src/qt/res/icons/history.png\n+       src/qt/res/icons/lock_*.png\n+       src/qt/res/icons/overview.png\n+       src/qt/res/icons/receive.png\n+       src/qt/res/icons/remove.png\n+       src/qt/res/icons/send.png\n+       src/qt/res/icons/synced.png\n+       src/qt/res/icons/transaction*.png\n+       src/qt/res/icons/tx_output.png\n+       src/qt/res/icons/warning.png\n+Copyright: Stephen Hutchings (and more)\n+           http://typicons.com\n+License: Expat\n+Comment: Site: https://github.com/stephenhutchings/typicons.font\n+\n+Files: src/qt/res/icons/connect*.png\n+       src/qt/res/src/connect-*.svg\n+       src/qt/res/icons/network_disabled.png\n+       src/qt/res/src/network_disabled.svg\n+Copyright: Marco Falke\n+           Luke Dashjr\n+License: Expat\n+Comment: Inspired by Stephen Hutchings' Typicons\n+\n+Files: src/qt/res/icons/tx_mined.png\n+       src/qt/res/src/mine.svg\n+       src/qt/res/icons/fontbigger.png\n+       src/qt/res/icons/fontsmaller.png\n+       src/qt/res/icons/hd_disabled.png\n+       src/qt/res/src/hd_disabled.svg\n+       src/qt/res/icons/hd_enabled.png\n+       src/qt/res/src/hd_enabled.svg\n+Copyright: Jonas Schnelli\n+License: Expat\n+\n+Files: src/qt/res/icons/clock*.png\n+       src/qt/res/icons/eye_*.png\n+       src/qt/res/icons/tx_in*.png\n+       src/qt/res/src/clock_*.svg\n+       src/qt/res/src/tx_*.svg\n+Copyright: Stephen Hutchings, Jonas Schnelli\n+License: Expat\n+Comment: Modifications of Stephen Hutchings' Typicons\n+\n+Files: src/qt/res/icons/bitcoin.*\n+       share/pixmaps/bitcoin*\n+       src/qt/res/src/bitcoin.svg\n+Copyright: Bitboy, Jonas Schnelli\n+License: public-domain\n+Comment: Site: https://bitcointalk.org/?topic=1756.0\n+\n+Files: src/qt/res/icons/proxy.png\n+       src/qt/res/src/proxy.svg\n+Copyright: Cristian Mircea Messel\n+License: public-domain\n+\n+\n+License: Expat\n+ Permission is hereby granted, free of charge, to any person obtaining a\n+ copy of this software and associated documentation files (the\n+ \"Software\"), to deal in the Software without restriction, including\n+ without limitation the rights to use, copy, modify, merge, publish,\n+ distribute, sublicense, and/or sell copies of the Software, and to\n+ permit persons to whom the Software is furnished to do so, subject to\n+ the following conditions:\n+ .\n+ The above copyright notice and this permission notice shall be included\n+ in all copies or substantial portions of the Software.\n+ .\n+ THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+ OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+ MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+ IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n+ CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n+ TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n+ SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n+\n+License: GNU-All-permissive-License\n+ Copying and distribution of this file, with or without modification, are\n+ permitted in any medium without royalty provided the copyright notice\n+ and this notice are preserved. This file is offered as-is, without any\n+ warranty.\n+\n+License: GPL-2+\n+ This program is free software; you can redistribute it and/or modify it\n+ under the terms of the GNU General Public License as published by the\n+ Free Software Foundation; either version 2, or (at your option) any\n+ later version.\n+ .\n+ This program is distributed in the hope that it will be useful, but\n+ WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ General Public License for more details.\n+Comment:\n+ On Debian systems the GNU General Public License (GPL) version 2 is\n+ located in '/usr/share/common-licenses/GPL-2'.\n+ .\n+ You should have received a copy of the GNU General Public License along\n+ with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+License: GPL-3+\n+ Permission is granted to copy, distribute and/or modify this document\n+ under the terms of the GNU General Public License, Version 3 or any\n+ later version published by the Free Software Foundation.\n+Comment:\n+ On Debian systems the GNU General Public License (GPL) version 3 is\n+ located in '/usr/share/common-licenses/GPL-3'.\n+ .\n+ You should have received a copy of the GNU General Public License along\n+ with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+License: public-domain\n+ This work is in the public domain."
      },
      {
        "sha": "bdff7a84b098bd430d9e3b3ec8c58106da7bb680",
        "filename": "contrib/devtools/README.md",
        "status": "added",
        "additions": 130,
        "deletions": 0,
        "changes": 130,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,130 @@\n+Contents\n+========\n+This directory contains tools for developers working on this repository.\n+\n+clang-format-diff.py\n+===================\n+\n+A script to format unified git diffs according to [.clang-format](../../src/.clang-format).\n+\n+Requires `clang-format`, installed e.g. via `brew install clang-format` on macOS.\n+\n+For instance, to format the last commit with 0 lines of context,\n+the script should be called from the git root folder as follows.\n+\n+```\n+git diff -U0 HEAD~1.. | ./contrib/devtools/clang-format-diff.py -p1 -i -v\n+```\n+\n+copyright\\_header.py\n+====================\n+\n+Provides utilities for managing copyright headers of `The Bitcoin Core\n+developers` in repository source files. It has three subcommands:\n+\n+```\n+$ ./copyright_header.py report <base_directory> [verbose]\n+$ ./copyright_header.py update <base_directory>\n+$ ./copyright_header.py insert <file>\n+```\n+Running these subcommands without arguments displays a usage string.\n+\n+copyright\\_header.py report \\<base\\_directory\\> [verbose]\n+---------------------------------------------------------\n+\n+Produces a report of all copyright header notices found inside the source files\n+of a repository. Useful to quickly visualize the state of the headers.\n+Specifying `verbose` will list the full filenames of files of each category.\n+\n+copyright\\_header.py update \\<base\\_directory\\> [verbose]\n+---------------------------------------------------------\n+Updates all the copyright headers of `The Bitcoin Core developers` which were\n+changed in a year more recent than is listed. For example:\n+```\n+// Copyright (c) <firstYear>-<lastYear> The Bitcoin Core developers\n+```\n+will be updated to:\n+```\n+// Copyright (c) <firstYear>-<lastModifiedYear> The Bitcoin Core developers\n+```\n+where `<lastModifiedYear>` is obtained from the `git log` history.\n+\n+This subcommand also handles copyright headers that have only a single year. In\n+those cases:\n+```\n+// Copyright (c) <year> The Bitcoin Core developers\n+```\n+will be updated to:\n+```\n+// Copyright (c) <year>-<lastModifiedYear> The Bitcoin Core developers\n+```\n+where the update is appropriate.\n+\n+copyright\\_header.py insert \\<file\\>\n+------------------------------------\n+Inserts a copyright header for `The Bitcoin Core developers` at the top of the\n+file in either Python or C++ style as determined by the file extension. If the\n+file is a Python file and it has  `#!` starting the first line, the header is\n+inserted in the line below it.\n+\n+The copyright dates will be set to be `<year_introduced>-<current_year>` where\n+`<year_introduced>` is according to the `git log` history. If\n+`<year_introduced>` is equal to `<current_year>`, it will be set as a single\n+year rather than two hyphenated years.\n+\n+If the file already has a copyright for `The Bitcoin Core developers`, the\n+script will exit.\n+\n+gen-manpages.sh\n+===============\n+\n+A small script to automatically create manpages in ../../doc/man by running the release binaries with the -help option.\n+This requires help2man which can be found at: https://www.gnu.org/software/help2man/\n+\n+With in-tree builds this tool can be run from any directory within the\n+repostitory. To use this tool with out-of-tree builds set `BUILDDIR`. For\n+example:\n+\n+```bash\n+BUILDDIR=$PWD/build contrib/devtools/gen-manpages.sh\n+```\n+\n+security-check.py and test-security-check.py\n+============================================\n+\n+Perform basic security checks on a series of executables.\n+\n+symbol-check.py\n+===============\n+\n+A script to check that the executables produced by gitian only contain\n+certain symbols and are only linked against allowed libraries.\n+\n+For Linux this means checking for allowed gcc, glibc and libstdc++ version symbols.\n+This makes sure they are still compatible with the minimum supported distribution versions.\n+\n+For macOS and Windows we check that the executables are only linked against libraries we allow.\n+\n+Example usage after a gitian build:\n+\n+    find ../gitian-builder/build -type f -executable | xargs python3 contrib/devtools/symbol-check.py\n+\n+If no errors occur the return value will be 0 and the output will be empty.\n+\n+If there are any errors the return value will be 1 and output like this will be printed:\n+\n+    .../64/test_bitcoin: symbol memcpy from unsupported version GLIBC_2.14\n+    .../64/test_bitcoin: symbol __fdelt_chk from unsupported version GLIBC_2.15\n+    .../64/test_bitcoin: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15\n+    .../64/test_bitcoin: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n+\n+circular-dependencies.py\n+========================\n+\n+Run this script from the root of the source tree (`src/`) to find circular dependencies in the source code.\n+This looks only at which files include other files, treating the `.cpp` and `.h` file as one unit.\n+\n+Example usage:\n+\n+    cd .../src\n+    ../contrib/devtools/circular-dependencies.py {*,*/*,*/*/*}.{h,cpp}"
      },
      {
        "sha": "bc5f09a3e260f6f02d6ea72e90b21a53e003ff0e",
        "filename": "contrib/devtools/circular-dependencies.py",
        "status": "added",
        "additions": 91,
        "deletions": 0,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/circular-dependencies.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/circular-dependencies.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/circular-dependencies.py?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,91 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import sys\n+import re\n+\n+MAPPING = {\n+    'core_read.cpp': 'core_io.cpp',\n+    'core_write.cpp': 'core_io.cpp',\n+}\n+\n+# Directories with header-based modules, where the assumption that .cpp files\n+# define functions and variables declared in corresponding .h files is\n+# incorrect.\n+HEADER_MODULE_PATHS = [\n+    'interfaces/'\n+]\n+\n+def module_name(path):\n+    if path in MAPPING:\n+        path = MAPPING[path]\n+    if any(path.startswith(dirpath) for dirpath in HEADER_MODULE_PATHS):\n+        return path\n+    if path.endswith(\".h\"):\n+        return path[:-2]\n+    if path.endswith(\".c\"):\n+        return path[:-2]\n+    if path.endswith(\".cpp\"):\n+        return path[:-4]\n+    return None\n+\n+files = dict()\n+deps = dict()\n+\n+RE = re.compile(\"^#include <(.*)>\")\n+\n+# Iterate over files, and create list of modules\n+for arg in sys.argv[1:]:\n+    module = module_name(arg)\n+    if module is None:\n+        print(\"Ignoring file %s (does not constitute module)\\n\" % arg)\n+    else:\n+        files[arg] = module\n+        deps[module] = set()\n+\n+# Iterate again, and build list of direct dependencies for each module\n+# TODO: implement support for multiple include directories\n+for arg in sorted(files.keys()):\n+    module = files[arg]\n+    with open(arg, 'r', encoding=\"utf8\") as f:\n+        for line in f:\n+            match = RE.match(line)\n+            if match:\n+                include = match.group(1)\n+                included_module = module_name(include)\n+                if included_module is not None and included_module in deps and included_module != module:\n+                    deps[module].add(included_module)\n+\n+# Loop to find the shortest (remaining) circular dependency\n+have_cycle = False\n+while True:\n+    shortest_cycle = None\n+    for module in sorted(deps.keys()):\n+        # Build the transitive closure of dependencies of module\n+        closure = dict()\n+        for dep in deps[module]:\n+            closure[dep] = []\n+        while True:\n+            old_size = len(closure)\n+            old_closure_keys = sorted(closure.keys())\n+            for src in old_closure_keys:\n+                for dep in deps[src]:\n+                    if dep not in closure:\n+                        closure[dep] = closure[src] + [src]\n+            if len(closure) == old_size:\n+                break\n+        # If module is in its own transitive closure, it's a circular dependency; check if it is the shortest\n+        if module in closure and (shortest_cycle is None or len(closure[module]) + 1 < len(shortest_cycle)):\n+            shortest_cycle = [module] + closure[module]\n+    if shortest_cycle is None:\n+        break\n+    # We have the shortest circular dependency; report it\n+    module = shortest_cycle[0]\n+    print(\"Circular dependency: %s\" % (\" -> \".join(shortest_cycle + [module])))\n+    # And then break the dependency to avoid repeating in other cycles\n+    deps[shortest_cycle[-1]] = deps[shortest_cycle[-1]] - set([module])\n+    have_cycle = True\n+\n+sys.exit(1 if have_cycle else 0)"
      },
      {
        "sha": "98eee67f4300853629cc61baaaed13008819038c",
        "filename": "contrib/devtools/clang-format-diff.py",
        "status": "added",
        "additions": 166,
        "deletions": 0,
        "changes": 166,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/clang-format-diff.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/clang-format-diff.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format-diff.py?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,166 @@\n+#!/usr/bin/env python3\n+#\n+#===- clang-format-diff.py - ClangFormat Diff Reformatter ----*- python -*--===#\n+#\n+#                     The LLVM Compiler Infrastructure\n+#\n+# This file is distributed under the University of Illinois Open Source\n+# License.\n+#\n+#           ============================================================\n+#\n+# University of Illinois/NCSA\n+# Open Source License\n+#\n+# Copyright (c) 2007-2015 University of Illinois at Urbana-Champaign.\n+# All rights reserved.\n+#\n+# Developed by:\n+#\n+#     LLVM Team\n+#\n+#     University of Illinois at Urbana-Champaign\n+#\n+#     http://llvm.org\n+#\n+# Permission is hereby granted, free of charge, to any person obtaining a copy of\n+# this software and associated documentation files (the \"Software\"), to deal with\n+# the Software without restriction, including without limitation the rights to\n+# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n+# of the Software, and to permit persons to whom the Software is furnished to do\n+# so, subject to the following conditions:\n+#\n+#     * Redistributions of source code must retain the above copyright notice,\n+#       this list of conditions and the following disclaimers.\n+#\n+#     * Redistributions in binary form must reproduce the above copyright notice,\n+#       this list of conditions and the following disclaimers in the\n+#       documentation and/or other materials provided with the distribution.\n+#\n+#     * Neither the names of the LLVM Team, University of Illinois at\n+#       Urbana-Champaign, nor the names of its contributors may be used to\n+#       endorse or promote products derived from this Software without specific\n+#       prior written permission.\n+#\n+# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n+# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n+# CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\n+# SOFTWARE.\n+#\n+#           ============================================================\n+#\n+#===------------------------------------------------------------------------===#\n+\n+r\"\"\"\n+ClangFormat Diff Reformatter\n+============================\n+\n+This script reads input from a unified diff and reformats all the changed\n+lines. This is useful to reformat all the lines touched by a specific patch.\n+Example usage for git/svn users:\n+\n+  git diff -U0 HEAD^ | clang-format-diff.py -p1 -i\n+  svn diff --diff-cmd=diff -x-U0 | clang-format-diff.py -i\n+\n+\"\"\"\n+\n+import argparse\n+import difflib\n+import io\n+import re\n+import subprocess\n+import sys\n+\n+\n+# Change this to the full path if clang-format is not on the path.\n+binary = 'clang-format'\n+\n+\n+def main():\n+  parser = argparse.ArgumentParser(description=\n+                                   'Reformat changed lines in diff. Without -i '\n+                                   'option just output the diff that would be '\n+                                   'introduced.')\n+  parser.add_argument('-i', action='store_true', default=False,\n+                      help='apply edits to files instead of displaying a diff')\n+  parser.add_argument('-p', metavar='NUM', default=0,\n+                      help='strip the smallest prefix containing P slashes')\n+  parser.add_argument('-regex', metavar='PATTERN', default=None,\n+                      help='custom pattern selecting file paths to reformat '\n+                      '(case sensitive, overrides -iregex)')\n+  parser.add_argument('-iregex', metavar='PATTERN', default=\n+                      r'.*\\.(cpp|cc|c\\+\\+|cxx|c|cl|h|hpp|m|mm|inc|js|ts|proto'\n+                      r'|protodevel|java)',\n+                      help='custom pattern selecting file paths to reformat '\n+                      '(case insensitive, overridden by -regex)')\n+  parser.add_argument('-sort-includes', action='store_true', default=False,\n+                      help='let clang-format sort include blocks')\n+  parser.add_argument('-v', '--verbose', action='store_true',\n+                      help='be more verbose, ineffective without -i')\n+  args = parser.parse_args()\n+\n+  # Extract changed lines for each file.\n+  filename = None\n+  lines_by_file = {}\n+  for line in sys.stdin:\n+    match = re.search(r'^\\+\\+\\+\\ (.*?/){%s}(\\S*)' % args.p, line)\n+    if match:\n+      filename = match.group(2)\n+    if filename is None:\n+      continue\n+\n+    if args.regex is not None:\n+      if not re.match('^%s$' % args.regex, filename):\n+        continue\n+    else:\n+      if not re.match('^%s$' % args.iregex, filename, re.IGNORECASE):\n+        continue\n+\n+    match = re.search(r'^@@.*\\+(\\d+)(,(\\d+))?', line)\n+    if match:\n+      start_line = int(match.group(1))\n+      line_count = 1\n+      if match.group(3):\n+        line_count = int(match.group(3))\n+      if line_count == 0:\n+        continue\n+      end_line = start_line + line_count - 1\n+      lines_by_file.setdefault(filename, []).extend(\n+          ['-lines', str(start_line) + ':' + str(end_line)])\n+\n+  # Reformat files containing changes in place.\n+  for filename, lines in lines_by_file.items():\n+    if args.i and args.verbose:\n+      print('Formatting {}'.format(filename))\n+    command = [binary, filename]\n+    if args.i:\n+      command.append('-i')\n+    if args.sort_includes:\n+      command.append('-sort-includes')\n+    command.extend(lines)\n+    command.extend(['-style=file', '-fallback-style=none'])\n+    p = subprocess.Popen(command,\n+                         stdout=subprocess.PIPE,\n+                         stderr=None,\n+                         stdin=subprocess.PIPE,\n+                         universal_newlines=True)\n+    stdout, stderr = p.communicate()\n+    if p.returncode != 0:\n+      sys.exit(p.returncode)\n+\n+    if not args.i:\n+      with open(filename, encoding=\"utf8\") as f:\n+        code = f.readlines()\n+      formatted_code = io.StringIO(stdout).readlines()\n+      diff = difflib.unified_diff(code, formatted_code,\n+                                  filename, filename,\n+                                  '(before formatting)', '(after formatting)')\n+      diff_string = ''.join(diff)\n+      if len(diff_string) > 0:\n+        sys.stdout.write(diff_string)\n+\n+if __name__ == '__main__':\n+  main()"
      },
      {
        "sha": "9a555c70bb490add4f055da0f58e9100a396584f",
        "filename": "contrib/devtools/copyright_header.py",
        "status": "added",
        "additions": 606,
        "deletions": 0,
        "changes": 606,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/copyright_header.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/copyright_header.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/copyright_header.py?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,606 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2016-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import re\n+import fnmatch\n+import sys\n+import subprocess\n+import datetime\n+import os\n+\n+################################################################################\n+# file filtering\n+################################################################################\n+\n+EXCLUDE = [\n+    # auto generated:\n+    'src/qt/bitcoinstrings.cpp',\n+    'src/chainparamsseeds.h',\n+    # other external copyrights:\n+    'src/reverse_iterator.h',\n+    'src/test/fuzz/FuzzedDataProvider.h',\n+    'src/tinyformat.h',\n+    'src/bench/nanobench.h',\n+    'test/functional/test_framework/bignum.py',\n+    # python init:\n+    '*__init__.py',\n+]\n+EXCLUDE_COMPILED = re.compile('|'.join([fnmatch.translate(m) for m in EXCLUDE]))\n+\n+EXCLUDE_DIRS = [\n+    # git subtrees\n+    \"src/crypto/ctaes/\",\n+    \"src/leveldb/\",\n+    \"src/secp256k1/\",\n+    \"src/univalue/\",\n+    \"src/crc32c/\",\n+]\n+\n+INCLUDE = ['*.h', '*.cpp', '*.cc', '*.c', '*.mm', '*.py', '*.sh', '*.bash-completion']\n+INCLUDE_COMPILED = re.compile('|'.join([fnmatch.translate(m) for m in INCLUDE]))\n+\n+def applies_to_file(filename):\n+    for excluded_dir in EXCLUDE_DIRS:\n+        if filename.startswith(excluded_dir):\n+            return False\n+    return ((EXCLUDE_COMPILED.match(filename) is None) and\n+            (INCLUDE_COMPILED.match(filename) is not None))\n+\n+################################################################################\n+# obtain list of files in repo according to INCLUDE and EXCLUDE\n+################################################################################\n+\n+GIT_LS_CMD = 'git ls-files --full-name'.split(' ')\n+GIT_TOPLEVEL_CMD = 'git rev-parse --show-toplevel'.split(' ')\n+\n+def call_git_ls(base_directory):\n+    out = subprocess.check_output([*GIT_LS_CMD, base_directory])\n+    return [f for f in out.decode(\"utf-8\").split('\\n') if f != '']\n+\n+def call_git_toplevel():\n+    \"Returns the absolute path to the project root\"\n+    return subprocess.check_output(GIT_TOPLEVEL_CMD).strip().decode(\"utf-8\")\n+\n+def get_filenames_to_examine(base_directory):\n+    \"Returns an array of absolute paths to any project files in the base_directory that pass the include/exclude filters\"\n+    root = call_git_toplevel()\n+    filenames = call_git_ls(base_directory)\n+    return sorted([os.path.join(root, filename) for filename in filenames if\n+                   applies_to_file(filename)])\n+\n+################################################################################\n+# define and compile regexes for the patterns we are looking for\n+################################################################################\n+\n+\n+COPYRIGHT_WITH_C = r'Copyright \\(c\\)'\n+COPYRIGHT_WITHOUT_C = 'Copyright'\n+ANY_COPYRIGHT_STYLE = '(%s|%s)' % (COPYRIGHT_WITH_C, COPYRIGHT_WITHOUT_C)\n+\n+YEAR = \"20[0-9][0-9]\"\n+YEAR_RANGE = '(%s)(-%s)?' % (YEAR, YEAR)\n+YEAR_LIST = '(%s)(, %s)+' % (YEAR, YEAR)\n+ANY_YEAR_STYLE = '(%s|%s)' % (YEAR_RANGE, YEAR_LIST)\n+ANY_COPYRIGHT_STYLE_OR_YEAR_STYLE = (\"%s %s\" % (ANY_COPYRIGHT_STYLE,\n+                                                ANY_YEAR_STYLE))\n+\n+ANY_COPYRIGHT_COMPILED = re.compile(ANY_COPYRIGHT_STYLE_OR_YEAR_STYLE)\n+\n+def compile_copyright_regex(copyright_style, year_style, name):\n+    return re.compile(r'%s %s,? %s( +\\*)?\\n' % (copyright_style, year_style, name))\n+\n+EXPECTED_HOLDER_NAMES = [\n+    r\"Satoshi Nakamoto\",\n+    r\"The Bitcoin Core developers\",\n+    r\"BitPay Inc\\.\",\n+    r\"University of Illinois at Urbana-Champaign\\.\",\n+    r\"Pieter Wuille\",\n+    r\"Wladimir J\\. van der Laan\",\n+    r\"Jeff Garzik\",\n+    r\"Jan-Klaas Kollhof\",\n+    r\"ArtForz -- public domain half-a-node\",\n+    r\"Intel Corporation ?\",\n+    r\"The Zcash developers\",\n+    r\"Jeremy Rubin\",\n+]\n+\n+DOMINANT_STYLE_COMPILED = {}\n+YEAR_LIST_STYLE_COMPILED = {}\n+WITHOUT_C_STYLE_COMPILED = {}\n+\n+for holder_name in EXPECTED_HOLDER_NAMES:\n+    DOMINANT_STYLE_COMPILED[holder_name] = (\n+        compile_copyright_regex(COPYRIGHT_WITH_C, YEAR_RANGE, holder_name))\n+    YEAR_LIST_STYLE_COMPILED[holder_name] = (\n+        compile_copyright_regex(COPYRIGHT_WITH_C, YEAR_LIST, holder_name))\n+    WITHOUT_C_STYLE_COMPILED[holder_name] = (\n+        compile_copyright_regex(COPYRIGHT_WITHOUT_C, ANY_YEAR_STYLE,\n+                                holder_name))\n+\n+################################################################################\n+# search file contents for copyright message of particular category\n+################################################################################\n+\n+def get_count_of_copyrights_of_any_style_any_holder(contents):\n+    return len(ANY_COPYRIGHT_COMPILED.findall(contents))\n+\n+def file_has_dominant_style_copyright_for_holder(contents, holder_name):\n+    match = DOMINANT_STYLE_COMPILED[holder_name].search(contents)\n+    return match is not None\n+\n+def file_has_year_list_style_copyright_for_holder(contents, holder_name):\n+    match = YEAR_LIST_STYLE_COMPILED[holder_name].search(contents)\n+    return match is not None\n+\n+def file_has_without_c_style_copyright_for_holder(contents, holder_name):\n+    match = WITHOUT_C_STYLE_COMPILED[holder_name].search(contents)\n+    return match is not None\n+\n+################################################################################\n+# get file info\n+################################################################################\n+\n+def read_file(filename):\n+    return open(filename, 'r', encoding=\"utf8\").read()\n+\n+def gather_file_info(filename):\n+    info = {}\n+    info['filename'] = filename\n+    c = read_file(filename)\n+    info['contents'] = c\n+\n+    info['all_copyrights'] = get_count_of_copyrights_of_any_style_any_holder(c)\n+\n+    info['classified_copyrights'] = 0\n+    info['dominant_style'] = {}\n+    info['year_list_style'] = {}\n+    info['without_c_style'] = {}\n+    for holder_name in EXPECTED_HOLDER_NAMES:\n+        has_dominant_style = (\n+            file_has_dominant_style_copyright_for_holder(c, holder_name))\n+        has_year_list_style = (\n+            file_has_year_list_style_copyright_for_holder(c, holder_name))\n+        has_without_c_style = (\n+            file_has_without_c_style_copyright_for_holder(c, holder_name))\n+        info['dominant_style'][holder_name] = has_dominant_style\n+        info['year_list_style'][holder_name] = has_year_list_style\n+        info['without_c_style'][holder_name] = has_without_c_style\n+        if has_dominant_style or has_year_list_style or has_without_c_style:\n+            info['classified_copyrights'] = info['classified_copyrights'] + 1\n+    return info\n+\n+################################################################################\n+# report execution\n+################################################################################\n+\n+SEPARATOR = '-'.join(['' for _ in range(80)])\n+\n+def print_filenames(filenames, verbose):\n+    if not verbose:\n+        return\n+    for filename in filenames:\n+        print(\"\\t%s\" % filename)\n+\n+def print_report(file_infos, verbose):\n+    print(SEPARATOR)\n+    examined = [i['filename'] for i in file_infos]\n+    print(\"%d files examined according to INCLUDE and EXCLUDE fnmatch rules\" %\n+          len(examined))\n+    print_filenames(examined, verbose)\n+\n+    print(SEPARATOR)\n+    print('')\n+    zero_copyrights = [i['filename'] for i in file_infos if\n+                       i['all_copyrights'] == 0]\n+    print(\"%4d with zero copyrights\" % len(zero_copyrights))\n+    print_filenames(zero_copyrights, verbose)\n+    one_copyright = [i['filename'] for i in file_infos if\n+                     i['all_copyrights'] == 1]\n+    print(\"%4d with one copyright\" % len(one_copyright))\n+    print_filenames(one_copyright, verbose)\n+    two_copyrights = [i['filename'] for i in file_infos if\n+                      i['all_copyrights'] == 2]\n+    print(\"%4d with two copyrights\" % len(two_copyrights))\n+    print_filenames(two_copyrights, verbose)\n+    three_copyrights = [i['filename'] for i in file_infos if\n+                        i['all_copyrights'] == 3]\n+    print(\"%4d with three copyrights\" % len(three_copyrights))\n+    print_filenames(three_copyrights, verbose)\n+    four_or_more_copyrights = [i['filename'] for i in file_infos if\n+                               i['all_copyrights'] >= 4]\n+    print(\"%4d with four or more copyrights\" % len(four_or_more_copyrights))\n+    print_filenames(four_or_more_copyrights, verbose)\n+    print('')\n+    print(SEPARATOR)\n+    print('Copyrights with dominant style:\\ne.g. \"Copyright (c)\" and '\n+          '\"<year>\" or \"<startYear>-<endYear>\":\\n')\n+    for holder_name in EXPECTED_HOLDER_NAMES:\n+        dominant_style = [i['filename'] for i in file_infos if\n+                          i['dominant_style'][holder_name]]\n+        if len(dominant_style) > 0:\n+            print(\"%4d with '%s'\" % (len(dominant_style),\n+                                     holder_name.replace('\\n', '\\\\n')))\n+            print_filenames(dominant_style, verbose)\n+    print('')\n+    print(SEPARATOR)\n+    print('Copyrights with year list style:\\ne.g. \"Copyright (c)\" and '\n+          '\"<year1>, <year2>, ...\":\\n')\n+    for holder_name in EXPECTED_HOLDER_NAMES:\n+        year_list_style = [i['filename'] for i in file_infos if\n+                           i['year_list_style'][holder_name]]\n+        if len(year_list_style) > 0:\n+            print(\"%4d with '%s'\" % (len(year_list_style),\n+                                     holder_name.replace('\\n', '\\\\n')))\n+            print_filenames(year_list_style, verbose)\n+    print('')\n+    print(SEPARATOR)\n+    print('Copyrights with no \"(c)\" style:\\ne.g. \"Copyright\" and \"<year>\" or '\n+          '\"<startYear>-<endYear>\":\\n')\n+    for holder_name in EXPECTED_HOLDER_NAMES:\n+        without_c_style = [i['filename'] for i in file_infos if\n+                           i['without_c_style'][holder_name]]\n+        if len(without_c_style) > 0:\n+            print(\"%4d with '%s'\" % (len(without_c_style),\n+                                     holder_name.replace('\\n', '\\\\n')))\n+            print_filenames(without_c_style, verbose)\n+\n+    print('')\n+    print(SEPARATOR)\n+\n+    unclassified_copyrights = [i['filename'] for i in file_infos if\n+                               i['classified_copyrights'] < i['all_copyrights']]\n+    print(\"%d with unexpected copyright holder names\" %\n+          len(unclassified_copyrights))\n+    print_filenames(unclassified_copyrights, verbose)\n+    print(SEPARATOR)\n+\n+def exec_report(base_directory, verbose):\n+    filenames = get_filenames_to_examine(base_directory)\n+    file_infos = [gather_file_info(f) for f in filenames]\n+    print_report(file_infos, verbose)\n+\n+################################################################################\n+# report cmd\n+################################################################################\n+\n+REPORT_USAGE = \"\"\"\n+Produces a report of all copyright header notices found inside the source files\n+of a repository.\n+\n+Usage:\n+    $ ./copyright_header.py report <base_directory> [verbose]\n+\n+Arguments:\n+    <base_directory> - The base directory of a bitcoin source code repository.\n+    [verbose] - Includes a list of every file of each subcategory in the report.\n+\"\"\"\n+\n+def report_cmd(argv):\n+    if len(argv) == 2:\n+        sys.exit(REPORT_USAGE)\n+\n+    base_directory = argv[2]\n+    if not os.path.exists(base_directory):\n+        sys.exit(\"*** bad <base_directory>: %s\" % base_directory)\n+\n+    if len(argv) == 3:\n+        verbose = False\n+    elif argv[3] == 'verbose':\n+        verbose = True\n+    else:\n+        sys.exit(\"*** unknown argument: %s\" % argv[2])\n+\n+    exec_report(base_directory, verbose)\n+\n+################################################################################\n+# query git for year of last change\n+################################################################################\n+\n+GIT_LOG_CMD = \"git log --pretty=format:%%ai %s\"\n+\n+def call_git_log(filename):\n+    out = subprocess.check_output((GIT_LOG_CMD % filename).split(' '))\n+    return out.decode(\"utf-8\").split('\\n')\n+\n+def get_git_change_years(filename):\n+    git_log_lines = call_git_log(filename)\n+    if len(git_log_lines) == 0:\n+        return [datetime.date.today().year]\n+    # timestamp is in ISO 8601 format. e.g. \"2016-09-05 14:25:32 -0600\"\n+    return [line.split(' ')[0].split('-')[0] for line in git_log_lines]\n+\n+def get_most_recent_git_change_year(filename):\n+    return max(get_git_change_years(filename))\n+\n+################################################################################\n+# read and write to file\n+################################################################################\n+\n+def read_file_lines(filename):\n+    f = open(filename, 'r', encoding=\"utf8\")\n+    file_lines = f.readlines()\n+    f.close()\n+    return file_lines\n+\n+def write_file_lines(filename, file_lines):\n+    f = open(filename, 'w', encoding=\"utf8\")\n+    f.write(''.join(file_lines))\n+    f.close()\n+\n+################################################################################\n+# update header years execution\n+################################################################################\n+\n+COPYRIGHT = r'Copyright \\(c\\)'\n+YEAR = \"20[0-9][0-9]\"\n+YEAR_RANGE = '(%s)(-%s)?' % (YEAR, YEAR)\n+HOLDER = 'The Bitcoin Core developers'\n+UPDATEABLE_LINE_COMPILED = re.compile(' '.join([COPYRIGHT, YEAR_RANGE, HOLDER]))\n+\n+def get_updatable_copyright_line(file_lines):\n+    index = 0\n+    for line in file_lines:\n+        if UPDATEABLE_LINE_COMPILED.search(line) is not None:\n+            return index, line\n+        index = index + 1\n+    return None, None\n+\n+def parse_year_range(year_range):\n+    year_split = year_range.split('-')\n+    start_year = year_split[0]\n+    if len(year_split) == 1:\n+        return start_year, start_year\n+    return start_year, year_split[1]\n+\n+def year_range_to_str(start_year, end_year):\n+    if start_year == end_year:\n+        return start_year\n+    return \"%s-%s\" % (start_year, end_year)\n+\n+def create_updated_copyright_line(line, last_git_change_year):\n+    copyright_splitter = 'Copyright (c) '\n+    copyright_split = line.split(copyright_splitter)\n+    # Preserve characters on line that are ahead of the start of the copyright\n+    # notice - they are part of the comment block and vary from file-to-file.\n+    before_copyright = copyright_split[0]\n+    after_copyright = copyright_split[1]\n+\n+    space_split = after_copyright.split(' ')\n+    year_range = space_split[0]\n+    start_year, end_year = parse_year_range(year_range)\n+    if end_year == last_git_change_year:\n+        return line\n+    return (before_copyright + copyright_splitter +\n+            year_range_to_str(start_year, last_git_change_year) + ' ' +\n+            ' '.join(space_split[1:]))\n+\n+def update_updatable_copyright(filename):\n+    file_lines = read_file_lines(filename)\n+    index, line = get_updatable_copyright_line(file_lines)\n+    if not line:\n+        print_file_action_message(filename, \"No updatable copyright.\")\n+        return\n+    last_git_change_year = get_most_recent_git_change_year(filename)\n+    new_line = create_updated_copyright_line(line, last_git_change_year)\n+    if line == new_line:\n+        print_file_action_message(filename, \"Copyright up-to-date.\")\n+        return\n+    file_lines[index] = new_line\n+    write_file_lines(filename, file_lines)\n+    print_file_action_message(filename,\n+                              \"Copyright updated! -> %s\" % last_git_change_year)\n+\n+def exec_update_header_year(base_directory):\n+    for filename in get_filenames_to_examine(base_directory):\n+        update_updatable_copyright(filename)\n+\n+################################################################################\n+# update cmd\n+################################################################################\n+\n+UPDATE_USAGE = \"\"\"\n+Updates all the copyright headers of \"The Bitcoin Core developers\" which were\n+changed in a year more recent than is listed. For example:\n+\n+// Copyright (c) <firstYear>-<lastYear> The Bitcoin Core developers\n+\n+will be updated to:\n+\n+// Copyright (c) <firstYear>-<lastModifiedYear> The Bitcoin Core developers\n+\n+where <lastModifiedYear> is obtained from the 'git log' history.\n+\n+This subcommand also handles copyright headers that have only a single year. In those cases:\n+\n+// Copyright (c) <year> The Bitcoin Core developers\n+\n+will be updated to:\n+\n+// Copyright (c) <year>-<lastModifiedYear> The Bitcoin Core developers\n+\n+where the update is appropriate.\n+\n+Usage:\n+    $ ./copyright_header.py update <base_directory>\n+\n+Arguments:\n+    <base_directory> - The base directory of a bitcoin source code repository.\n+\"\"\"\n+\n+def print_file_action_message(filename, action):\n+    print(\"%-52s %s\" % (filename, action))\n+\n+def update_cmd(argv):\n+    if len(argv) != 3:\n+        sys.exit(UPDATE_USAGE)\n+\n+    base_directory = argv[2]\n+    if not os.path.exists(base_directory):\n+        sys.exit(\"*** bad base_directory: %s\" % base_directory)\n+    exec_update_header_year(base_directory)\n+\n+################################################################################\n+# inserted copyright header format\n+################################################################################\n+\n+def get_header_lines(header, start_year, end_year):\n+    lines = header.split('\\n')[1:-1]\n+    lines[0] = lines[0] % year_range_to_str(start_year, end_year)\n+    return [line + '\\n' for line in lines]\n+\n+CPP_HEADER = '''\n+// Copyright (c) %s The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+\n+def get_cpp_header_lines_to_insert(start_year, end_year):\n+    return reversed(get_header_lines(CPP_HEADER, start_year, end_year))\n+\n+SCRIPT_HEADER = '''\n+# Copyright (c) %s The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+\n+def get_script_header_lines_to_insert(start_year, end_year):\n+    return reversed(get_header_lines(SCRIPT_HEADER, start_year, end_year))\n+\n+################################################################################\n+# query git for year of last change\n+################################################################################\n+\n+def get_git_change_year_range(filename):\n+    years = get_git_change_years(filename)\n+    return min(years), max(years)\n+\n+################################################################################\n+# check for existing core copyright\n+################################################################################\n+\n+def file_already_has_core_copyright(file_lines):\n+    index, _ = get_updatable_copyright_line(file_lines)\n+    return index is not None\n+\n+################################################################################\n+# insert header execution\n+################################################################################\n+\n+def file_has_hashbang(file_lines):\n+    if len(file_lines) < 1:\n+        return False\n+    if len(file_lines[0]) <= 2:\n+        return False\n+    return file_lines[0][:2] == '#!'\n+\n+def insert_script_header(filename, file_lines, start_year, end_year):\n+    if file_has_hashbang(file_lines):\n+        insert_idx = 1\n+    else:\n+        insert_idx = 0\n+    header_lines = get_script_header_lines_to_insert(start_year, end_year)\n+    for line in header_lines:\n+        file_lines.insert(insert_idx, line)\n+    write_file_lines(filename, file_lines)\n+\n+def insert_cpp_header(filename, file_lines, start_year, end_year):\n+    file_lines.insert(0, '\\n')\n+    header_lines = get_cpp_header_lines_to_insert(start_year, end_year)\n+    for line in header_lines:\n+        file_lines.insert(0, line)\n+    write_file_lines(filename, file_lines)\n+\n+def exec_insert_header(filename, style):\n+    file_lines = read_file_lines(filename)\n+    if file_already_has_core_copyright(file_lines):\n+        sys.exit('*** %s already has a copyright by The Bitcoin Core developers'\n+                 % (filename))\n+    start_year, end_year = get_git_change_year_range(filename)\n+    if style in ['python', 'shell']:\n+        insert_script_header(filename, file_lines, start_year, end_year)\n+    else:\n+        insert_cpp_header(filename, file_lines, start_year, end_year)\n+\n+################################################################################\n+# insert cmd\n+################################################################################\n+\n+INSERT_USAGE = \"\"\"\n+Inserts a copyright header for \"The Bitcoin Core developers\" at the top of the\n+file in either Python or C++ style as determined by the file extension. If the\n+file is a Python file and it has a '#!' starting the first line, the header is\n+inserted in the line below it.\n+\n+The copyright dates will be set to be:\n+\n+\"<year_introduced>-<current_year>\"\n+\n+where <year_introduced> is according to the 'git log' history. If\n+<year_introduced> is equal to <current_year>, the date will be set to be:\n+\n+\"<current_year>\"\n+\n+If the file already has a copyright for \"The Bitcoin Core developers\", the\n+script will exit.\n+\n+Usage:\n+    $ ./copyright_header.py insert <file>\n+\n+Arguments:\n+    <file> - A source file in the bitcoin repository.\n+\"\"\"\n+\n+def insert_cmd(argv):\n+    if len(argv) != 3:\n+        sys.exit(INSERT_USAGE)\n+\n+    filename = argv[2]\n+    if not os.path.isfile(filename):\n+        sys.exit(\"*** bad filename: %s\" % filename)\n+    _, extension = os.path.splitext(filename)\n+    if extension not in ['.h', '.cpp', '.cc', '.c', '.py', '.sh']:\n+        sys.exit(\"*** cannot insert for file extension %s\" % extension)\n+\n+    if extension == '.py':\n+        style = 'python'\n+    elif extension == '.sh':\n+        style = 'shell'\n+    else:\n+        style = 'cpp'\n+    exec_insert_header(filename, style)\n+\n+################################################################################\n+# UI\n+################################################################################\n+\n+USAGE = \"\"\"\n+copyright_header.py - utilities for managing copyright headers of 'The Bitcoin\n+Core developers' in repository source files.\n+\n+Usage:\n+    $ ./copyright_header <subcommand>\n+\n+Subcommands:\n+    report\n+    update\n+    insert\n+\n+To see subcommand usage, run them without arguments.\n+\"\"\"\n+\n+SUBCOMMANDS = ['report', 'update', 'insert']\n+\n+if __name__ == \"__main__\":\n+    if len(sys.argv) == 1:\n+        sys.exit(USAGE)\n+    subcommand = sys.argv[1]\n+    if subcommand not in SUBCOMMANDS:\n+        sys.exit(USAGE)\n+    if subcommand == 'report':\n+        report_cmd(sys.argv)\n+    elif subcommand == 'update':\n+        update_cmd(sys.argv)\n+    elif subcommand == 'insert':\n+        insert_cmd(sys.argv)"
      },
      {
        "sha": "aa65953d838585aff4f33081b30c1cdb984b2e15",
        "filename": "contrib/devtools/gen-manpages.sh",
        "status": "added",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/gen-manpages.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/gen-manpages.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/gen-manpages.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,36 @@\n+#!/usr/bin/env bash\n+# Copyright (c) 2016-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+TOPDIR=${TOPDIR:-$(git rev-parse --show-toplevel)}\n+BUILDDIR=${BUILDDIR:-$TOPDIR}\n+\n+BINDIR=${BINDIR:-$BUILDDIR/src}\n+MANDIR=${MANDIR:-$TOPDIR/doc/man}\n+\n+BITCOIND=${BITCOIND:-$BINDIR/bitcoind}\n+BITCOINCLI=${BITCOINCLI:-$BINDIR/bitcoin-cli}\n+BITCOINTX=${BITCOINTX:-$BINDIR/bitcoin-tx}\n+WALLET_TOOL=${WALLET_TOOL:-$BINDIR/bitcoin-wallet}\n+BITCOINQT=${BITCOINQT:-$BINDIR/qt/bitcoin-qt}\n+\n+[ ! -x $BITCOIND ] && echo \"$BITCOIND not found or not executable.\" && exit 1\n+\n+# The autodetected version git tag can screw up manpage output a little bit\n+read -r -a BTCVER <<< \"$($BITCOINCLI --version | head -n1 | awk -F'[ -]' '{ print $6, $7 }')\"\n+\n+# Create a footer file with copyright content.\n+# This gets autodetected fine for bitcoind if --version-string is not set,\n+# but has different outcomes for bitcoin-qt and bitcoin-cli.\n+echo \"[COPYRIGHT]\" > footer.h2m\n+$BITCOIND --version | sed -n '1!p' >> footer.h2m\n+\n+for cmd in $BITCOIND $BITCOINCLI $BITCOINTX $WALLET_TOOL $BITCOINQT; do\n+  cmdname=\"${cmd##*/}\"\n+  help2man -N --version-string=${BTCVER[0]} --include=footer.h2m -o ${MANDIR}/${cmdname}.1 ${cmd}\n+  sed -i \"s/\\\\\\-${BTCVER[1]}//g\" ${MANDIR}/${cmdname}.1\n+done\n+\n+rm -f footer.h2m"
      },
      {
        "sha": "dc74de91980a4cce82b01c915be9e9c8a7d3c62e",
        "filename": "contrib/devtools/security-check.py",
        "status": "added",
        "additions": 357,
        "deletions": 0,
        "changes": 357,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,357 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+Perform basic security checks on a series of executables.\n+Exit status will be 0 if successful, and the program will be silent.\n+Otherwise the exit status will be 1 and it will log which executables failed which checks.\n+Needs `readelf` (for ELF), `objdump` (for PE) and `otool` (for MACHO).\n+'''\n+import subprocess\n+import sys\n+import os\n+\n+from typing import List, Optional\n+\n+READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n+OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n+OTOOL_CMD = os.getenv('OTOOL', '/usr/bin/otool')\n+\n+def run_command(command) -> str:\n+    p = subprocess.run(command, stdout=subprocess.PIPE, check=True, universal_newlines=True)\n+    return p.stdout\n+\n+def check_ELF_PIE(executable) -> bool:\n+    '''\n+    Check for position independent executable (PIE), allowing for address space randomization.\n+    '''\n+    stdout = run_command([READELF_CMD, '-h', '-W', executable])\n+\n+    ok = False\n+    for line in stdout.splitlines():\n+        tokens = line.split()\n+        if len(line)>=2 and tokens[0] == 'Type:' and tokens[1] == 'DYN':\n+            ok = True\n+    return ok\n+\n+def get_ELF_program_headers(executable):\n+    '''Return type and flags for ELF program headers'''\n+    stdout = run_command([READELF_CMD, '-l', '-W', executable])\n+\n+    in_headers = False\n+    headers = []\n+    for line in stdout.splitlines():\n+        if line.startswith('Program Headers:'):\n+            in_headers = True\n+            count = 0\n+        if line == '':\n+            in_headers = False\n+        if in_headers:\n+            if count == 1: # header line\n+                header = [x.strip() for x in line.split()]\n+                ofs_typ = header.index('Type')\n+                ofs_flags = header.index('Flg')\n+                # assert readelf output is what we expect\n+                if ofs_typ == -1 or ofs_flags == -1:\n+                    raise ValueError('Cannot parse elfread -lW output')\n+            elif count > 1:\n+                splitline = [x.strip() for x in line.split()]\n+                typ = splitline[ofs_typ]\n+                if not typ.startswith('[R'): # skip [Requesting ...]\n+                    splitline = [x.strip() for x in line.split()]\n+                    flags = splitline[ofs_flags]\n+                    # check for 'R', ' E'\n+                    if splitline[ofs_flags + 1] is 'E':\n+                        flags += ' E'\n+                    headers.append((typ, flags, []))\n+            count += 1\n+\n+        if line.startswith(' Section to Segment mapping:'):\n+            in_mapping = True\n+            count = 0\n+        if line == '':\n+            in_mapping = False\n+        if in_mapping:\n+            if count == 1: # header line\n+                ofs_segment = line.find('Segment')\n+                ofs_sections = line.find('Sections...')\n+                if ofs_segment == -1 or ofs_sections == -1:\n+                    raise ValueError('Cannot parse elfread -lW output')\n+            elif count > 1:\n+                segment = int(line[ofs_segment:ofs_sections].strip())\n+                sections = line[ofs_sections:].strip().split()\n+                headers[segment][2].extend(sections)\n+            count += 1\n+    return headers\n+\n+def check_ELF_NX(executable) -> bool:\n+    '''\n+    Check that no sections are writable and executable (including the stack)\n+    '''\n+    have_wx = False\n+    have_gnu_stack = False\n+    for (typ, flags, _) in get_ELF_program_headers(executable):\n+        if typ == 'GNU_STACK':\n+            have_gnu_stack = True\n+        if 'W' in flags and 'E' in flags: # section is both writable and executable\n+            have_wx = True\n+    return have_gnu_stack and not have_wx\n+\n+def check_ELF_RELRO(executable) -> bool:\n+    '''\n+    Check for read-only relocations.\n+    GNU_RELRO program header must exist\n+    Dynamic section must have BIND_NOW flag\n+    '''\n+    have_gnu_relro = False\n+    for (typ, flags, _) in get_ELF_program_headers(executable):\n+        # Note: not checking flags == 'R': here as linkers set the permission differently\n+        # This does not affect security: the permission flags of the GNU_RELRO program\n+        # header are ignored, the PT_LOAD header determines the effective permissions.\n+        # However, the dynamic linker need to write to this area so these are RW.\n+        # Glibc itself takes care of mprotecting this area R after relocations are finished.\n+        # See also https://marc.info/?l=binutils&m=1498883354122353\n+        if typ == 'GNU_RELRO':\n+            have_gnu_relro = True\n+\n+    have_bindnow = False\n+    stdout = run_command([READELF_CMD, '-d', '-W', executable])\n+\n+    for line in stdout.splitlines():\n+        tokens = line.split()\n+        if len(tokens)>1 and tokens[1] == '(BIND_NOW)' or (len(tokens)>2 and tokens[1] == '(FLAGS)' and 'BIND_NOW' in tokens[2:]):\n+            have_bindnow = True\n+    return have_gnu_relro and have_bindnow\n+\n+def check_ELF_Canary(executable) -> bool:\n+    '''\n+    Check for use of stack canary\n+    '''\n+    stdout = run_command([READELF_CMD, '--dyn-syms', '-W', executable])\n+\n+    ok = False\n+    for line in stdout.splitlines():\n+        if '__stack_chk_fail' in line:\n+            ok = True\n+    return ok\n+\n+def check_ELF_separate_code(executable):\n+    '''\n+    Check that sections are appropriately separated in virtual memory,\n+    based on their permissions. This checks for missing -Wl,-z,separate-code\n+    and potentially other problems.\n+    '''\n+    EXPECTED_FLAGS = {\n+        # Read + execute\n+        '.init': 'R E',\n+        '.plt': 'R E',\n+        '.plt.got': 'R E',\n+        '.plt.sec': 'R E',\n+        '.text': 'R E',\n+        '.fini': 'R E',\n+        # Read-only data\n+        '.interp': 'R',\n+        '.note.gnu.property': 'R',\n+        '.note.gnu.build-id': 'R',\n+        '.note.ABI-tag': 'R',\n+        '.gnu.hash': 'R',\n+        '.dynsym': 'R',\n+        '.dynstr': 'R',\n+        '.gnu.version': 'R',\n+        '.gnu.version_r': 'R',\n+        '.rela.dyn': 'R',\n+        '.rela.plt': 'R',\n+        '.rodata': 'R',\n+        '.eh_frame_hdr': 'R',\n+        '.eh_frame': 'R',\n+        '.qtmetadata': 'R',\n+        '.gcc_except_table': 'R',\n+        '.stapsdt.base': 'R',\n+        # Writable data\n+        '.init_array': 'RW',\n+        '.fini_array': 'RW',\n+        '.dynamic': 'RW',\n+        '.got': 'RW',\n+        '.data': 'RW',\n+        '.bss': 'RW',\n+    }\n+    # For all LOAD program headers get mapping to the list of sections,\n+    # and for each section, remember the flags of the associated program header.\n+    flags_per_section = {}\n+    for (typ, flags, sections) in get_ELF_program_headers(executable):\n+        if typ == 'LOAD':\n+            for section in sections:\n+                assert(section not in flags_per_section)\n+                flags_per_section[section] = flags\n+    # Spot-check ELF LOAD program header flags per section\n+    # If these sections exist, check them against the expected R/W/E flags\n+    for (section, flags) in flags_per_section.items():\n+        if section in EXPECTED_FLAGS:\n+            if EXPECTED_FLAGS[section] != flags:\n+                return False\n+    return True\n+\n+def get_PE_dll_characteristics(executable) -> int:\n+    '''Get PE DllCharacteristics bits'''\n+    stdout = run_command([OBJDUMP_CMD, '-x',  executable])\n+\n+    bits = 0\n+    for line in stdout.splitlines():\n+        tokens = line.split()\n+        if len(tokens)>=2 and tokens[0] == 'DllCharacteristics':\n+            bits = int(tokens[1],16)\n+    return bits\n+\n+IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA = 0x0020\n+IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE    = 0x0040\n+IMAGE_DLL_CHARACTERISTICS_NX_COMPAT       = 0x0100\n+\n+def check_PE_DYNAMIC_BASE(executable) -> bool:\n+    '''PIE: DllCharacteristics bit 0x40 signifies dynamicbase (ASLR)'''\n+    bits = get_PE_dll_characteristics(executable)\n+    return (bits & IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE) == IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE\n+\n+# Must support high-entropy 64-bit address space layout randomization\n+# in addition to DYNAMIC_BASE to have secure ASLR.\n+def check_PE_HIGH_ENTROPY_VA(executable) -> bool:\n+    '''PIE: DllCharacteristics bit 0x20 signifies high-entropy ASLR'''\n+    bits = get_PE_dll_characteristics(executable)\n+    return (bits & IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA) == IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA\n+\n+def check_PE_RELOC_SECTION(executable) -> bool:\n+    '''Check for a reloc section. This is required for functional ASLR.'''\n+    stdout = run_command([OBJDUMP_CMD, '-h',  executable])\n+\n+    for line in stdout.splitlines():\n+        if '.reloc' in line:\n+            return True\n+    return False\n+\n+def check_PE_NX(executable) -> bool:\n+    '''NX: DllCharacteristics bit 0x100 signifies nxcompat (DEP)'''\n+    bits = get_PE_dll_characteristics(executable)\n+    return (bits & IMAGE_DLL_CHARACTERISTICS_NX_COMPAT) == IMAGE_DLL_CHARACTERISTICS_NX_COMPAT\n+\n+def get_MACHO_executable_flags(executable) -> List[str]:\n+    stdout = run_command([OTOOL_CMD, '-vh', executable])\n+\n+    flags = []\n+    for line in stdout.splitlines():\n+        tokens = line.split()\n+        # filter first two header lines\n+        if 'magic' in tokens or 'Mach' in tokens:\n+            continue\n+        # filter ncmds and sizeofcmds values\n+        flags += [t for t in tokens if not t.isdigit()]\n+    return flags\n+\n+def check_MACHO_PIE(executable) -> bool:\n+    '''\n+    Check for position independent executable (PIE), allowing for address space randomization.\n+    '''\n+    flags = get_MACHO_executable_flags(executable)\n+    if 'PIE' in flags:\n+        return True\n+    return False\n+\n+def check_MACHO_NOUNDEFS(executable) -> bool:\n+    '''\n+    Check for no undefined references.\n+    '''\n+    flags = get_MACHO_executable_flags(executable)\n+    if 'NOUNDEFS' in flags:\n+        return True\n+    return False\n+\n+def check_MACHO_NX(executable) -> bool:\n+    '''\n+    Check for no stack execution\n+    '''\n+    flags = get_MACHO_executable_flags(executable)\n+    if 'ALLOW_STACK_EXECUTION' in flags:\n+        return False\n+    return True\n+\n+def check_MACHO_LAZY_BINDINGS(executable) -> bool:\n+    '''\n+    Check for no lazy bindings.\n+    We don't use or check for MH_BINDATLOAD. See #18295.\n+    '''\n+    stdout = run_command([OTOOL_CMD, '-l', executable])\n+\n+    for line in stdout.splitlines():\n+        tokens = line.split()\n+        if 'lazy_bind_off' in tokens or 'lazy_bind_size' in tokens:\n+            if tokens[1] != '0':\n+                return False\n+    return True\n+\n+def check_MACHO_Canary(executable) -> bool:\n+    '''\n+    Check for use of stack canary\n+    '''\n+    stdout = run_command([OTOOL_CMD, '-Iv', executable])\n+\n+    ok = False\n+    for line in stdout.splitlines():\n+        if '___stack_chk_fail' in line:\n+            ok = True\n+    return ok\n+\n+CHECKS = {\n+'ELF': [\n+    ('PIE', check_ELF_PIE),\n+    ('NX', check_ELF_NX),\n+    ('RELRO', check_ELF_RELRO),\n+    ('Canary', check_ELF_Canary),\n+    ('separate_code', check_ELF_separate_code),\n+],\n+'PE': [\n+    ('DYNAMIC_BASE', check_PE_DYNAMIC_BASE),\n+    ('HIGH_ENTROPY_VA', check_PE_HIGH_ENTROPY_VA),\n+    ('NX', check_PE_NX),\n+    ('RELOC_SECTION', check_PE_RELOC_SECTION)\n+],\n+'MACHO': [\n+    ('PIE', check_MACHO_PIE),\n+    ('NOUNDEFS', check_MACHO_NOUNDEFS),\n+    ('NX', check_MACHO_NX),\n+    ('LAZY_BINDINGS', check_MACHO_LAZY_BINDINGS),\n+    ('Canary', check_MACHO_Canary)\n+]\n+}\n+\n+def identify_executable(executable) -> Optional[str]:\n+    with open(filename, 'rb') as f:\n+        magic = f.read(4)\n+    if magic.startswith(b'MZ'):\n+        return 'PE'\n+    elif magic.startswith(b'\\x7fELF'):\n+        return 'ELF'\n+    elif magic.startswith(b'\\xcf\\xfa'):\n+        return 'MACHO'\n+    return None\n+\n+if __name__ == '__main__':\n+    retval = 0\n+    for filename in sys.argv[1:]:\n+        try:\n+            etype = identify_executable(filename)\n+            if etype is None:\n+                print('%s: unknown format' % filename)\n+                retval = 1\n+                continue\n+\n+            failed = []\n+            for (name, func) in CHECKS[etype]:\n+                if not func(filename):\n+                    failed.append(name)\n+            if failed:\n+                print('%s: failed %s' % (filename, ' '.join(failed)))\n+                retval = 1\n+        except IOError:\n+            print('%s: cannot open' % filename)\n+            retval = 1\n+    sys.exit(retval)\n+"
      },
      {
        "sha": "92b72b1446cf6bacf92723b6a8da8786c0802557",
        "filename": "contrib/devtools/split-debug.sh.in",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/split-debug.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/split-debug.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/split-debug.sh.in?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,10 @@\n+#!/bin/sh\n+set -e\n+if [ $# -ne 3 ];\n+    then echo \"usage: $0 <input> <stripped-binary> <debug-binary>\"\n+fi\n+\n+@OBJCOPY@ --enable-deterministic-archives -p --only-keep-debug $1 $3\n+@OBJCOPY@ --enable-deterministic-archives -p --strip-debug $1 $2\n+@STRIP@ --enable-deterministic-archives -p -s $2\n+@OBJCOPY@ --enable-deterministic-archives -p --add-gnu-debuglink=$3 $2"
      },
      {
        "sha": "6949cb7ced89eda0be2b24dc4de9123ae7403fb1",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "added",
        "additions": 306,
        "deletions": 0,
        "changes": 306,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,306 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014 Wladimir J. van der Laan\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+A script to check that the executables produced by gitian only contain\n+certain symbols and are only linked against allowed libraries.\n+\n+Example usage:\n+\n+    find ../gitian-builder/build -type f -executable | xargs python3 contrib/devtools/symbol-check.py\n+'''\n+import subprocess\n+import re\n+import sys\n+import os\n+from typing import List, Optional, Tuple\n+\n+# Debian 8 (Jessie) EOL: 2020. https://wiki.debian.org/DebianReleases#Production_Releases\n+#\n+# - g++ version 4.9.2 (https://packages.debian.org/search?suite=jessie&arch=any&searchon=names&keywords=g%2B%2B)\n+# - libc version 2.19 (https://packages.debian.org/search?suite=jessie&arch=any&searchon=names&keywords=libc6)\n+#\n+# Ubuntu 16.04 (Xenial) EOL: 2024. https://wiki.ubuntu.com/Releases\n+#\n+# - g++ version 5.3.1 (https://packages.ubuntu.com/search?keywords=g%2B%2B&searchon=names&suite=xenial&section=all)\n+# - libc version 2.23.0 (https://packages.ubuntu.com/search?keywords=libc6&searchon=names&suite=xenial&section=all)\n+#\n+# CentOS 7 EOL: 2024. https://wiki.centos.org/FAQ/General\n+#\n+# - g++ version 4.8.5 (http://mirror.centos.org/centos/7/os/x86_64/Packages/)\n+# - libc version 2.17 (http://mirror.centos.org/centos/7/os/x86_64/Packages/)\n+#\n+# Taking the minimum of these as our target.\n+#\n+# According to GNU ABI document (https://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n+#   GCC 4.8.5: GCC_4.8.0\n+#   (glibc)    GLIBC_2_17\n+#\n+MAX_VERSIONS = {\n+'GCC':       (4,8,0),\n+'GLIBC':     (2,17),\n+'LIBATOMIC': (1,0)\n+}\n+# See here for a description of _IO_stdin_used:\n+# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=634261#109\n+\n+# Ignore symbols that are exported as part of every executable\n+IGNORE_EXPORTS = {\n+'_edata', '_end', '__end__', '_init', '__bss_start', '__bss_start__', '_bss_end__', '__bss_end__', '_fini', '_IO_stdin_used', 'stdin', 'stdout', 'stderr',\n+'environ', '_environ', '__environ',\n+}\n+READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n+CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n+OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n+OTOOL_CMD = os.getenv('OTOOL', '/usr/bin/otool')\n+\n+# Allowed NEEDED libraries\n+ELF_ALLOWED_LIBRARIES = {\n+# bitcoind and bitcoin-qt\n+'libgcc_s.so.1', # GCC base support\n+'libc.so.6', # C library\n+'libpthread.so.0', # threading\n+'libm.so.6', # math library\n+'librt.so.1', # real-time (clock)\n+'libatomic.so.1',\n+'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n+'ld-linux.so.2', # 32-bit dynamic linker\n+'ld-linux-aarch64.so.1', # 64-bit ARM dynamic linker\n+'ld-linux-armhf.so.3', # 32-bit ARM dynamic linker\n+'ld-linux-riscv64-lp64d.so.1', # 64-bit RISC-V dynamic linker\n+# bitcoin-qt only\n+'libxcb.so.1', # part of X11\n+'libfontconfig.so.1', # font support\n+'libfreetype.so.6', # font parsing\n+'libdl.so.2' # programming interface to dynamic linker\n+}\n+ARCH_MIN_GLIBC_VER = {\n+'80386':  (2,1),\n+'X86-64': (2,2,5),\n+'ARM':    (2,4),\n+'AArch64':(2,17),\n+'RISC-V': (2,27)\n+}\n+\n+MACHO_ALLOWED_LIBRARIES = {\n+# bitcoind and bitcoin-qt\n+'libc++.1.dylib', # C++ Standard Library\n+'libSystem.B.dylib', # libc, libm, libpthread, libinfo\n+# bitcoin-qt only\n+'AppKit', # user interface\n+'ApplicationServices', # common application tasks.\n+'Carbon', # deprecated c back-compat API\n+'CoreFoundation', # low level func, data types\n+'CoreGraphics', # 2D rendering\n+'CoreServices', # operating system services\n+'CoreText', # interface for laying out text and handling fonts.\n+'Foundation', # base layer functionality for apps/frameworks\n+'ImageIO', # read and write image file formats.\n+'IOKit', # user-space access to hardware devices and drivers.\n+'libobjc.A.dylib', # Objective-C runtime library\n+}\n+\n+PE_ALLOWED_LIBRARIES = {\n+'ADVAPI32.dll', # security & registry\n+'IPHLPAPI.DLL', # IP helper API\n+'KERNEL32.dll', # win32 base APIs\n+'msvcrt.dll', # C standard library for MSVC\n+'SHELL32.dll', # shell API\n+'USER32.dll', # user interface\n+'WS2_32.dll', # sockets\n+# bitcoin-qt only\n+'dwmapi.dll', # desktop window manager\n+'GDI32.dll', # graphics device interface\n+'IMM32.dll', # input method editor\n+'ole32.dll', # component object model\n+'OLEAUT32.dll', # OLE Automation API\n+'SHLWAPI.dll', # light weight shell API\n+'UxTheme.dll',\n+'VERSION.dll', # version checking\n+'WINMM.dll', # WinMM audio API\n+}\n+\n+class CPPFilt(object):\n+    '''\n+    Demangle C++ symbol names.\n+\n+    Use a pipe to the 'c++filt' command.\n+    '''\n+    def __init__(self):\n+        self.proc = subprocess.Popen(CPPFILT_CMD, stdin=subprocess.PIPE, stdout=subprocess.PIPE, universal_newlines=True)\n+\n+    def __call__(self, mangled):\n+        self.proc.stdin.write(mangled + '\\n')\n+        self.proc.stdin.flush()\n+        return self.proc.stdout.readline().rstrip()\n+\n+    def close(self):\n+        self.proc.stdin.close()\n+        self.proc.stdout.close()\n+        self.proc.wait()\n+\n+def read_symbols(executable, imports=True) -> List[Tuple[str, str, str]]:\n+    '''\n+    Parse an ELF executable and return a list of (symbol,version, arch) tuples\n+    for dynamic, imported symbols.\n+    '''\n+    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', '-h', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Could not read symbols for {}: {}'.format(executable, stderr.strip()))\n+    syms = []\n+    for line in stdout.splitlines():\n+        line = line.split()\n+        if 'Machine:' in line:\n+            arch = line[-1]\n+        if len(line)>7 and re.match('[0-9]+:$', line[0]):\n+            (sym, _, version) = line[7].partition('@')\n+            is_import = line[6] == 'UND'\n+            if version.startswith('@'):\n+                version = version[1:]\n+            if is_import == imports:\n+                syms.append((sym, version, arch))\n+    return syms\n+\n+def check_version(max_versions, version, arch) -> bool:\n+    if '_' in version:\n+        (lib, _, ver) = version.rpartition('_')\n+    else:\n+        lib = version\n+        ver = '0'\n+    ver = tuple([int(x) for x in ver.split('.')])\n+    if not lib in max_versions:\n+        return False\n+    return ver <= max_versions[lib] or lib == 'GLIBC' and ver <= ARCH_MIN_GLIBC_VER[arch]\n+\n+def elf_read_libraries(filename) -> List[str]:\n+    p = subprocess.Popen([READELF_CMD, '-d', '-W', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    libraries = []\n+    for line in stdout.splitlines():\n+        tokens = line.split()\n+        if len(tokens)>2 and tokens[1] == '(NEEDED)':\n+            match = re.match(r'^Shared library: \\[(.*)\\]$', ' '.join(tokens[2:]))\n+            if match:\n+                libraries.append(match.group(1))\n+            else:\n+                raise ValueError('Unparseable (NEEDED) specification')\n+    return libraries\n+\n+def check_imported_symbols(filename) -> bool:\n+    cppfilt = CPPFilt()\n+    ok = True\n+    for sym, version, arch in read_symbols(filename, True):\n+        if version and not check_version(MAX_VERSIONS, version, arch):\n+            print('{}: symbol {} from unsupported version {}'.format(filename, cppfilt(sym), version))\n+            ok = False\n+    return ok\n+\n+def check_exported_symbols(filename) -> bool:\n+    cppfilt = CPPFilt()\n+    ok = True\n+    for sym,version,arch in read_symbols(filename, False):\n+        if arch == 'RISC-V' or sym in IGNORE_EXPORTS:\n+            continue\n+        print('{}: export of symbol {} not allowed'.format(filename, cppfilt(sym)))\n+        ok = False\n+    return ok\n+\n+def check_ELF_libraries(filename) -> bool:\n+    ok = True\n+    for library_name in elf_read_libraries(filename):\n+        if library_name not in ELF_ALLOWED_LIBRARIES:\n+            print('{}: NEEDED library {} is not allowed'.format(filename, library_name))\n+            ok = False\n+    return ok\n+\n+def macho_read_libraries(filename) -> List[str]:\n+    p = subprocess.Popen([OTOOL_CMD, '-L', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    libraries = []\n+    for line in stdout.splitlines():\n+        tokens = line.split()\n+        if len(tokens) == 1: # skip executable name\n+            continue\n+        libraries.append(tokens[0].split('/')[-1])\n+    return libraries\n+\n+def check_MACHO_libraries(filename) -> bool:\n+    ok = True\n+    for dylib in macho_read_libraries(filename):\n+        if dylib not in MACHO_ALLOWED_LIBRARIES:\n+            print('{} is not in ALLOWED_LIBRARIES!'.format(dylib))\n+            ok = False\n+    return ok\n+\n+def pe_read_libraries(filename) -> List[str]:\n+    p = subprocess.Popen([OBJDUMP_CMD, '-x', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    libraries = []\n+    for line in stdout.splitlines():\n+        if 'DLL Name:' in line:\n+            tokens = line.split(': ')\n+            libraries.append(tokens[1])\n+    return libraries\n+\n+def check_PE_libraries(filename) -> bool:\n+    ok = True\n+    for dylib in pe_read_libraries(filename):\n+        if dylib not in PE_ALLOWED_LIBRARIES:\n+            print('{} is not in ALLOWED_LIBRARIES!'.format(dylib))\n+            ok = False\n+    return ok\n+\n+CHECKS = {\n+'ELF': [\n+    ('IMPORTED_SYMBOLS', check_imported_symbols),\n+    ('EXPORTED_SYMBOLS', check_exported_symbols),\n+    ('LIBRARY_DEPENDENCIES', check_ELF_libraries)\n+],\n+'MACHO': [\n+    ('DYNAMIC_LIBRARIES', check_MACHO_libraries)\n+],\n+'PE' : [\n+    ('DYNAMIC_LIBRARIES', check_PE_libraries)\n+]\n+}\n+\n+def identify_executable(executable) -> Optional[str]:\n+    with open(filename, 'rb') as f:\n+        magic = f.read(4)\n+    if magic.startswith(b'MZ'):\n+        return 'PE'\n+    elif magic.startswith(b'\\x7fELF'):\n+        return 'ELF'\n+    elif magic.startswith(b'\\xcf\\xfa'):\n+        return 'MACHO'\n+    return None\n+\n+if __name__ == '__main__':\n+    retval = 0\n+    for filename in sys.argv[1:]:\n+        try:\n+            etype = identify_executable(filename)\n+            if etype is None:\n+                print('{}: unknown format'.format(filename))\n+                retval = 1\n+                continue\n+\n+            failed = []\n+            for (name, func) in CHECKS[etype]:\n+                if not func(filename):\n+                    failed.append(name)\n+            if failed:\n+                print('{}: failed {}'.format(filename, ' '.join(failed)))\n+                retval = 1\n+        except IOError:\n+            print('{}: cannot open'.format(filename))\n+            retval = 1\n+    sys.exit(retval)"
      },
      {
        "sha": "ec2d8866534214c86ebbf112232984ea55e85b0b",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "added",
        "additions": 85,
        "deletions": 0,
        "changes": 85,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,85 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+Test script for security-check.py\n+'''\n+import subprocess\n+import unittest\n+\n+def write_testcode(filename):\n+    with open(filename, 'w', encoding=\"utf8\") as f:\n+        f.write('''\n+    #include <stdio.h>\n+    int main()\n+    {\n+        printf(\"the quick brown fox jumps over the lazy god\\\\n\");\n+        return 0;\n+    }\n+    ''')\n+\n+def call_security_check(cc, source, executable, options):\n+    subprocess.run([cc,source,'-o',executable] + options, check=True)\n+    p = subprocess.run(['./contrib/devtools/security-check.py',executable], stdout=subprocess.PIPE, universal_newlines=True)\n+    return (p.returncode, p.stdout.rstrip())\n+\n+class TestSecurityChecks(unittest.TestCase):\n+    def test_ELF(self):\n+        source = 'test1.c'\n+        executable = 'test1'\n+        cc = 'gcc'\n+        write_testcode(source)\n+\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-zexecstack','-fno-stack-protector','-Wl,-znorelro','-no-pie','-fno-PIE', '-Wl,-z,separate-code']),\n+                (1, executable+': failed PIE NX RELRO Canary'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fno-stack-protector','-Wl,-znorelro','-no-pie','-fno-PIE', '-Wl,-z,separate-code']),\n+                (1, executable+': failed PIE RELRO Canary'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-no-pie','-fno-PIE', '-Wl,-z,separate-code']),\n+                (1, executable+': failed PIE RELRO'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-pie','-fPIE', '-Wl,-z,separate-code']),\n+                (1, executable+': failed RELRO'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE', '-Wl,-z,noseparate-code']),\n+                (1, executable+': failed separate_code'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE', '-Wl,-z,separate-code']),\n+                (0, ''))\n+\n+    def test_PE(self):\n+        source = 'test1.c'\n+        executable = 'test1.exe'\n+        cc = 'x86_64-w64-mingw32-gcc'\n+        write_testcode(source)\n+\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--no-nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n+            (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA NX RELOC_SECTION'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n+            (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA RELOC_SECTION'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n+            (1, executable+': failed HIGH_ENTROPY_VA RELOC_SECTION'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--high-entropy-va','-no-pie','-fno-PIE']),\n+            (1, executable+': failed RELOC_SECTION'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--high-entropy-va','-pie','-fPIE']),\n+            (0, ''))\n+\n+    def test_MACHO(self):\n+        source = 'test1.c'\n+        executable = 'test1'\n+        cc = 'clang'\n+        write_testcode(source)\n+\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-flat_namespace','-Wl,-allow_stack_execute','-fno-stack-protector']),\n+            (1, executable+': failed PIE NOUNDEFS NX LAZY_BINDINGS Canary'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-flat_namespace','-Wl,-allow_stack_execute','-fstack-protector-all']),\n+            (1, executable+': failed PIE NOUNDEFS NX LAZY_BINDINGS'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-flat_namespace','-fstack-protector-all']),\n+            (1, executable+': failed PIE NOUNDEFS LAZY_BINDINGS'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-fstack-protector-all']),\n+            (1, executable+': failed PIE LAZY_BINDINGS'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-bind_at_load','-fstack-protector-all']),\n+            (1, executable+': failed PIE'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-pie','-Wl,-bind_at_load','-fstack-protector-all']),\n+            (0, ''))\n+\n+if __name__ == '__main__':\n+    unittest.main()\n+"
      },
      {
        "sha": "8501c72f04a552bf7cb699890e92c874be43de05",
        "filename": "contrib/devtools/test_deterministic_coverage.sh",
        "status": "added",
        "additions": 151,
        "deletions": 0,
        "changes": 151,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/test_deterministic_coverage.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/test_deterministic_coverage.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test_deterministic_coverage.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,151 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# Test for deterministic coverage across unit test runs.\n+\n+export LC_ALL=C\n+\n+# Use GCOV_EXECUTABLE=\"gcov\" if compiling with gcc.\n+# Use GCOV_EXECUTABLE=\"llvm-cov gcov\" if compiling with clang.\n+GCOV_EXECUTABLE=\"gcov\"\n+\n+# Disable tests known to cause non-deterministic behaviour and document the source or point of non-determinism.\n+NON_DETERMINISTIC_TESTS=(\n+    \"blockfilter_index_tests/blockfilter_index_initial_sync\"  # src/checkqueue.h: In CCheckQueue::Loop(): while (queue.empty()) { ... }\n+    \"coinselector_tests/knapsack_solver_test\"                 # coinselector_tests.cpp: if (equal_sets(setCoinsRet, setCoinsRet2))\n+    \"fs_tests/fsbridge_fstream\"                               # deterministic test failure?\n+    \"miner_tests/CreateNewBlock_validity\"                     # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"scheduler_tests/manythreads\"                             # scheduler.cpp: CScheduler::serviceQueue()\n+    \"scheduler_tests/singlethreadedscheduler_ordered\"         # scheduler.cpp: CScheduler::serviceQueue()\n+    \"txvalidationcache_tests/checkinputs_test\"                # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"txvalidationcache_tests/tx_mempool_block_doublespend\"    # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"txindex_tests/txindex_initial_sync\"                      # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"txvalidation_tests/tx_mempool_reject_coinbase\"           # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"validation_block_tests/processnewblock_signals_ordering\" # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/coin_mark_dirty_immature_credit\"            # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/dummy_input_size_test\"                      # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/importmulti_rescan\"                         # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/importwallet_rescan\"                        # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/ListCoins\"                                  # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/scan_for_wallet_transactions\"               # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/wallet_disableprivkeys\"                     # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+)\n+\n+TEST_BITCOIN_BINARY=\"src/test/test_bitcoin\"\n+\n+print_usage() {\n+    echo \"Usage: $0 [custom test filter (default: all but known non-deterministic tests)] [number of test runs (default: 2)]\"\n+}\n+\n+N_TEST_RUNS=2\n+BOOST_TEST_RUN_FILTERS=\"\"\n+if [[ $# != 0 ]]; then\n+    if [[ $1 == \"--help\" ]]; then\n+        print_usage\n+        exit\n+    fi\n+    PARSED_ARGUMENTS=0\n+    if [[ $1 =~ [a-z] ]]; then\n+        BOOST_TEST_RUN_FILTERS=$1\n+        PARSED_ARGUMENTS=$((PARSED_ARGUMENTS + 1))\n+        shift\n+    fi\n+    if [[ $1 =~ ^[0-9]+$ ]]; then\n+        N_TEST_RUNS=$1\n+        PARSED_ARGUMENTS=$((PARSED_ARGUMENTS + 1))\n+        shift\n+    fi\n+    if [[ ${PARSED_ARGUMENTS} == 0 || $# -gt 2 || ${N_TEST_RUNS} -lt 2 ]]; then\n+        print_usage\n+        exit\n+    fi\n+fi\n+if [[ ${BOOST_TEST_RUN_FILTERS} == \"\" ]]; then\n+    BOOST_TEST_RUN_FILTERS=\"$(IFS=\":\"; echo \"!${NON_DETERMINISTIC_TESTS[*]}\" | sed 's/:/:!/g')\"\n+else\n+    echo \"Using Boost test filter: ${BOOST_TEST_RUN_FILTERS}\"\n+    echo\n+fi\n+\n+if ! command -v gcov > /dev/null; then\n+    echo \"Error: gcov not installed. Exiting.\"\n+    exit 1\n+fi\n+\n+if ! command -v gcovr > /dev/null; then\n+    echo \"Error: gcovr not installed. Exiting.\"\n+    exit 1\n+fi\n+\n+if [[ ! -e ${TEST_BITCOIN_BINARY} ]]; then\n+    echo \"Error: Executable ${TEST_BITCOIN_BINARY} not found. Run \\\"./configure --enable-lcov\\\" and compile.\"\n+    exit 1\n+fi\n+\n+get_file_suffix_count() {\n+    find src/ -type f -name \"*.$1\" | wc -l\n+}\n+\n+if [[ $(get_file_suffix_count gcno) == 0 ]]; then\n+    echo \"Error: Could not find any *.gcno files. The *.gcno files are generated by the compiler. Run \\\"./configure --enable-lcov\\\" and re-compile.\"\n+    exit 1\n+fi\n+\n+get_covr_filename() {\n+    echo \"gcovr.run-$1.txt\"\n+}\n+\n+TEST_RUN_ID=0\n+while [[ ${TEST_RUN_ID} -lt ${N_TEST_RUNS} ]]; do\n+    TEST_RUN_ID=$((TEST_RUN_ID + 1))\n+    echo \"[$(date +\"%Y-%m-%d %H:%M:%S\")] Measuring coverage, run #${TEST_RUN_ID} of ${N_TEST_RUNS}\"\n+    find src/ -type f -name \"*.gcda\" -exec rm {} \\;\n+    if [[ $(get_file_suffix_count gcda) != 0 ]]; then\n+        echo \"Error: Stale *.gcda files found. Exiting.\"\n+        exit 1\n+    fi\n+    TEST_OUTPUT_TEMPFILE=$(mktemp)\n+    if ! BOOST_TEST_RUN_FILTERS=\"${BOOST_TEST_RUN_FILTERS}\" ${TEST_BITCOIN_BINARY} > \"${TEST_OUTPUT_TEMPFILE}\" 2>&1; then\n+        cat \"${TEST_OUTPUT_TEMPFILE}\"\n+        rm \"${TEST_OUTPUT_TEMPFILE}\"\n+        exit 1\n+    fi\n+    rm \"${TEST_OUTPUT_TEMPFILE}\"\n+    if [[ $(get_file_suffix_count gcda) == 0 ]]; then\n+        echo \"Error: Running the test suite did not create any *.gcda files. The gcda files are generated when the instrumented test programs are executed. Run \\\"./configure --enable-lcov\\\" and re-compile.\"\n+        exit 1\n+    fi\n+    GCOVR_TEMPFILE=$(mktemp)\n+    if ! gcovr --gcov-executable \"${GCOV_EXECUTABLE}\" -r src/ > \"${GCOVR_TEMPFILE}\"; then\n+        echo \"Error: gcovr failed. Output written to ${GCOVR_TEMPFILE}. Exiting.\"\n+        exit 1\n+    fi\n+    GCOVR_FILENAME=$(get_covr_filename ${TEST_RUN_ID})\n+    mv \"${GCOVR_TEMPFILE}\" \"${GCOVR_FILENAME}\"\n+    if grep -E \"^TOTAL *0 *0 \" \"${GCOVR_FILENAME}\"; then\n+        echo \"Error: Spurious gcovr output. Make sure the correct GCOV_EXECUTABLE variable is set in $0 (\\\"gcov\\\" for gcc, \\\"llvm-cov gcov\\\" for clang).\"\n+        exit 1\n+    fi\n+    if [[ ${TEST_RUN_ID} != 1 ]]; then\n+        COVERAGE_DIFF=$(diff -u \"$(get_covr_filename 1)\" \"${GCOVR_FILENAME}\")\n+        if [[ ${COVERAGE_DIFF} != \"\" ]]; then\n+            echo\n+            echo \"The line coverage is non-deterministic between runs. Exiting.\"\n+            echo\n+            echo \"The test suite must be deterministic in the sense that the set of lines executed at least\"\n+            echo \"once must be identical between runs. This is a necessary condition for meaningful\"\n+            echo \"coverage measuring.\"\n+            echo\n+            echo \"${COVERAGE_DIFF}\"\n+            exit 1\n+        fi\n+        rm \"${GCOVR_FILENAME}\"\n+    fi\n+done\n+\n+echo\n+echo \"Coverage test passed: Deterministic coverage across ${N_TEST_RUNS} runs.\"\n+exit"
      },
      {
        "sha": "dee25ff67b61e3b798cf56f53657536e496cfef8",
        "filename": "contrib/devtools/utxo_snapshot.sh",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/utxo_snapshot.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/devtools/utxo_snapshot.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/utxo_snapshot.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,44 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+export LC_ALL=C\n+\n+set -ueo pipefail\n+\n+if (( $# < 3 )); then\n+  echo 'Usage: utxo_snapshot.sh <generate-at-height> <snapshot-out-path> <bitcoin-cli-call ...>'\n+  echo\n+  echo \"  if <snapshot-out-path> is '-', don't produce a snapshot file but instead print the \"\n+  echo \"  expected assumeutxo hash\"\n+  echo\n+  echo 'Examples:'\n+  echo\n+  echo \"  ./contrib/devtools/utxo_snapshot.sh 570000 utxo.dat ./src/bitcoin-cli -datadir=\\$(pwd)/testdata\"\n+  echo '  ./contrib/devtools/utxo_snapshot.sh 570000 - ./src/bitcoin-cli'\n+  exit 1\n+fi\n+\n+GENERATE_AT_HEIGHT=\"${1}\"; shift;\n+OUTPUT_PATH=\"${1}\"; shift;\n+# Most of the calls we make take a while to run, so pad with a lengthy timeout.\n+BITCOIN_CLI_CALL=\"${*} -rpcclienttimeout=9999999\"\n+\n+# Block we'll invalidate/reconsider to rewind/fast-forward the chain.\n+PIVOT_BLOCKHASH=$($BITCOIN_CLI_CALL getblockhash $(( GENERATE_AT_HEIGHT + 1 )) )\n+\n+(>&2 echo \"Rewinding chain back to height ${GENERATE_AT_HEIGHT} (by invalidating ${PIVOT_BLOCKHASH}); this may take a while\")\n+${BITCOIN_CLI_CALL} invalidateblock \"${PIVOT_BLOCKHASH}\"\n+\n+if [[ \"${OUTPUT_PATH}\" = \"-\" ]]; then\n+  (>&2 echo \"Generating txoutset info...\")\n+  ${BITCOIN_CLI_CALL} gettxoutsetinfo | grep hash_serialized_2 | sed 's/^.*: \"\\(.\\+\\)\\+\",/\\1/g'\n+else\n+  (>&2 echo \"Generating UTXO snapshot...\")\n+  ${BITCOIN_CLI_CALL} dumptxoutset \"${OUTPUT_PATH}\"\n+fi\n+\n+(>&2 echo \"Restoring chain to original height; this may take a while\")\n+${BITCOIN_CLI_CALL} reconsiderblock \"${PIVOT_BLOCKHASH}\""
      },
      {
        "sha": "e005cb96da62302ba6f099dcad1bcd13ee19e814",
        "filename": "contrib/filter-lcov.py",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/filter-lcov.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/filter-lcov.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/filter-lcov.py?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,28 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import argparse\n+\n+parser = argparse.ArgumentParser(description='Remove the coverage data from a tracefile for all files matching the pattern.')\n+parser.add_argument('--pattern', '-p', action='append', help='the pattern of files to remove', required=True)\n+parser.add_argument('tracefile', help='the tracefile to remove the coverage data from')\n+parser.add_argument('outfile', help='filename for the output to be written to')\n+\n+args = parser.parse_args()\n+tracefile = args.tracefile\n+pattern = args.pattern\n+outfile = args.outfile\n+\n+in_remove = False\n+with open(tracefile, 'r', encoding=\"utf8\") as f:\n+    with open(outfile, 'w', encoding=\"utf8\") as wf:\n+        for line in f:\n+            for p in pattern:\n+                if line.startswith(\"SF:\") and p in line:\n+                    in_remove = True\n+            if not in_remove:\n+                wf.write(line)\n+            if line == 'end_of_record\\n':\n+                in_remove = False"
      },
      {
        "sha": "d498c9e2c821ededa6eff14b9b8b78df07f270e5",
        "filename": "contrib/gitian-build.py",
        "status": "added",
        "additions": 262,
        "deletions": 0,
        "changes": 262,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/gitian-build.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/gitian-build.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.py?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,262 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import argparse\n+import os\n+import subprocess\n+import sys\n+\n+def setup():\n+    global args, workdir\n+    programs = ['ruby', 'git', 'make', 'wget', 'curl']\n+    if args.kvm:\n+        programs += ['apt-cacher-ng', 'python-vm-builder', 'qemu-kvm', 'qemu-utils']\n+    elif args.docker and not os.path.isfile('/lib/systemd/system/docker.service'):\n+        dockers = ['docker.io', 'docker-ce']\n+        for i in dockers:\n+            return_code = subprocess.call(['sudo', 'apt-get', 'install', '-qq', i])\n+            if return_code == 0:\n+                break\n+        if return_code != 0:\n+            print('Cannot find any way to install Docker.', file=sys.stderr)\n+            sys.exit(1)\n+    else:\n+        programs += ['apt-cacher-ng', 'lxc', 'debootstrap']\n+    subprocess.check_call(['sudo', 'apt-get', 'install', '-qq'] + programs)\n+    if not os.path.isdir('gitian.sigs'):\n+        subprocess.check_call(['git', 'clone', 'https://github.com/bitcoin-core/gitian.sigs.git'])\n+    if not os.path.isdir('bitcoin-detached-sigs'):\n+        subprocess.check_call(['git', 'clone', 'https://github.com/bitcoin-core/bitcoin-detached-sigs.git'])\n+    if not os.path.isdir('gitian-builder'):\n+        subprocess.check_call(['git', 'clone', 'https://github.com/devrandom/gitian-builder.git'])\n+    if not os.path.isdir('bitcoin'):\n+        subprocess.check_call(['git', 'clone', 'https://github.com/bitcoin/bitcoin.git'])\n+    os.chdir('gitian-builder')\n+    make_image_prog = ['bin/make-base-vm', '--suite', 'bionic', '--arch', 'amd64']\n+    if args.docker:\n+        make_image_prog += ['--docker']\n+    elif not args.kvm:\n+        make_image_prog += ['--lxc']\n+    subprocess.check_call(make_image_prog)\n+    os.chdir(workdir)\n+    if args.is_bionic and not args.kvm and not args.docker:\n+        subprocess.check_call(['sudo', 'sed', '-i', 's/lxcbr0/br0/', '/etc/default/lxc-net'])\n+        print('Reboot is required')\n+        sys.exit(0)\n+\n+def build():\n+    global args, workdir\n+\n+    os.makedirs('bitcoin-binaries/' + args.version, exist_ok=True)\n+    print('\\nBuilding Dependencies\\n')\n+    os.chdir('gitian-builder')\n+    os.makedirs('inputs', exist_ok=True)\n+\n+    subprocess.check_call(['wget', '-O', 'inputs/osslsigncode-2.0.tar.gz', 'https://github.com/mtrojnar/osslsigncode/archive/2.0.tar.gz'])\n+    subprocess.check_call([\"echo '5a60e0a4b3e0b4d655317b2f12a810211c50242138322b16e7e01c6fbb89d92f inputs/osslsigncode-2.0.tar.gz' | sha256sum -c\"], shell=True)\n+    subprocess.check_call(['make', '-C', '../bitcoin/depends', 'download', 'SOURCES_PATH=' + os.getcwd() + '/cache/common'])\n+\n+    if args.linux:\n+        print('\\nCompiling ' + args.version + ' Linux')\n+        subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'bitcoin='+args.commit, '--url', 'bitcoin='+args.url, '../bitcoin/contrib/gitian-descriptors/gitian-linux.yml'])\n+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-linux', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-linux.yml'])\n+        subprocess.check_call('mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/'+args.version, shell=True)\n+\n+    if args.windows:\n+        print('\\nCompiling ' + args.version + ' Windows')\n+        subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'bitcoin='+args.commit, '--url', 'bitcoin='+args.url, '../bitcoin/contrib/gitian-descriptors/gitian-win.yml'])\n+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-win-unsigned', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-win.yml'])\n+        subprocess.check_call('mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/', shell=True)\n+        subprocess.check_call('mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/'+args.version, shell=True)\n+\n+    if args.macos:\n+        print('\\nCompiling ' + args.version + ' MacOS')\n+        subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'bitcoin='+args.commit, '--url', 'bitcoin='+args.url, '../bitcoin/contrib/gitian-descriptors/gitian-osx.yml'])\n+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-osx-unsigned', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-osx.yml'])\n+        subprocess.check_call('mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/', shell=True)\n+        subprocess.check_call('mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/'+args.version, shell=True)\n+\n+    os.chdir(workdir)\n+\n+    if args.commit_files:\n+        print('\\nCommitting '+args.version+' Unsigned Sigs\\n')\n+        os.chdir('gitian.sigs')\n+        subprocess.check_call(['git', 'add', args.version+'-linux/'+args.signer])\n+        subprocess.check_call(['git', 'add', args.version+'-win-unsigned/'+args.signer])\n+        subprocess.check_call(['git', 'add', args.version+'-osx-unsigned/'+args.signer])\n+        subprocess.check_call(['git', 'commit', '-m', 'Add '+args.version+' unsigned sigs for '+args.signer])\n+        os.chdir(workdir)\n+\n+def sign():\n+    global args, workdir\n+    os.chdir('gitian-builder')\n+\n+    if args.windows:\n+        print('\\nSigning ' + args.version + ' Windows')\n+        subprocess.check_call('cp inputs/bitcoin-' + args.version + '-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz', shell=True)\n+        subprocess.check_call(['bin/gbuild', '--skip-image', '--upgrade', '--commit', 'signature='+args.commit, '../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml'])\n+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-win-signed', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml'])\n+        subprocess.check_call('mv build/out/bitcoin-*win64-setup.exe ../bitcoin-binaries/'+args.version, shell=True)\n+\n+    if args.macos:\n+        print('\\nSigning ' + args.version + ' MacOS')\n+        subprocess.check_call('cp inputs/bitcoin-' + args.version + '-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz', shell=True)\n+        subprocess.check_call(['bin/gbuild', '--skip-image', '--upgrade', '--commit', 'signature='+args.commit, '../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml'])\n+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-osx-signed', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml'])\n+        subprocess.check_call('mv build/out/bitcoin-osx-signed.dmg ../bitcoin-binaries/'+args.version+'/bitcoin-'+args.version+'-osx.dmg', shell=True)\n+\n+    os.chdir(workdir)\n+\n+    if args.commit_files:\n+        print('\\nCommitting '+args.version+' Signed Sigs\\n')\n+        os.chdir('gitian.sigs')\n+        subprocess.check_call(['git', 'add', args.version+'-win-signed/'+args.signer])\n+        subprocess.check_call(['git', 'add', args.version+'-osx-signed/'+args.signer])\n+        subprocess.check_call(['git', 'commit', '-a', '-m', 'Add '+args.version+' signed binary sigs for '+args.signer])\n+        os.chdir(workdir)\n+\n+def verify():\n+    global args, workdir\n+    rc = 0\n+    os.chdir('gitian-builder')\n+\n+    print('\\nVerifying v'+args.version+' Linux\\n')\n+    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-linux', '../bitcoin/contrib/gitian-descriptors/gitian-linux.yml']):\n+        print('Verifying v'+args.version+' Linux FAILED\\n')\n+        rc = 1\n+\n+    print('\\nVerifying v'+args.version+' Windows\\n')\n+    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-win-unsigned', '../bitcoin/contrib/gitian-descriptors/gitian-win.yml']):\n+        print('Verifying v'+args.version+' Windows FAILED\\n')\n+        rc = 1\n+\n+    print('\\nVerifying v'+args.version+' MacOS\\n')\n+    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-osx-unsigned', '../bitcoin/contrib/gitian-descriptors/gitian-osx.yml']):\n+        print('Verifying v'+args.version+' MacOS FAILED\\n')\n+        rc = 1\n+\n+    print('\\nVerifying v'+args.version+' Signed Windows\\n')\n+    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-win-signed', '../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml']):\n+        print('Verifying v'+args.version+' Signed Windows FAILED\\n')\n+        rc = 1\n+\n+    print('\\nVerifying v'+args.version+' Signed MacOS\\n')\n+    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-osx-signed', '../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml']):\n+        print('Verifying v'+args.version+' Signed MacOS FAILED\\n')\n+        rc = 1\n+\n+    os.chdir(workdir)\n+    return rc\n+\n+def main():\n+    global args, workdir\n+\n+    parser = argparse.ArgumentParser(description='Script for running full Gitian builds.')\n+    parser.add_argument('-c', '--commit', action='store_true', dest='commit', help='Indicate that the version argument is for a commit or branch')\n+    parser.add_argument('-p', '--pull', action='store_true', dest='pull', help='Indicate that the version argument is the number of a github repository pull request')\n+    parser.add_argument('-u', '--url', dest='url', default='https://github.com/bitcoin/bitcoin', help='Specify the URL of the repository. Default is %(default)s')\n+    parser.add_argument('-v', '--verify', action='store_true', dest='verify', help='Verify the Gitian build')\n+    parser.add_argument('-b', '--build', action='store_true', dest='build', help='Do a Gitian build')\n+    parser.add_argument('-s', '--sign', action='store_true', dest='sign', help='Make signed binaries for Windows and MacOS')\n+    parser.add_argument('-B', '--buildsign', action='store_true', dest='buildsign', help='Build both signed and unsigned binaries')\n+    parser.add_argument('-o', '--os', dest='os', default='lwm', help='Specify which Operating Systems the build is for. Default is %(default)s. l for Linux, w for Windows, m for MacOS')\n+    parser.add_argument('-j', '--jobs', dest='jobs', default='2', help='Number of processes to use. Default %(default)s')\n+    parser.add_argument('-m', '--memory', dest='memory', default='2000', help='Memory to allocate in MiB. Default %(default)s')\n+    parser.add_argument('-k', '--kvm', action='store_true', dest='kvm', help='Use KVM instead of LXC')\n+    parser.add_argument('-d', '--docker', action='store_true', dest='docker', help='Use Docker instead of LXC')\n+    parser.add_argument('-S', '--setup', action='store_true', dest='setup', help='Set up the Gitian building environment. Only works on Debian-based systems (Ubuntu, Debian)')\n+    parser.add_argument('-D', '--detach-sign', action='store_true', dest='detach_sign', help='Create the assert file for detached signing. Will not commit anything.')\n+    parser.add_argument('-n', '--no-commit', action='store_false', dest='commit_files', help='Do not commit anything to git')\n+    parser.add_argument('signer', nargs='?', help='GPG signer to sign each build assert file')\n+    parser.add_argument('version', nargs='?', help='Version number, commit, or branch to build. If building a commit or branch, the -c option must be specified')\n+\n+    args = parser.parse_args()\n+    workdir = os.getcwd()\n+\n+    args.is_bionic = b'bionic' in subprocess.check_output(['lsb_release', '-cs'])\n+\n+    if args.kvm and args.docker:\n+        raise Exception('Error: cannot have both kvm and docker')\n+\n+    # Ensure no more than one environment variable for gitian-builder (USE_LXC, USE_VBOX, USE_DOCKER) is set as they\n+    # can interfere (e.g., USE_LXC being set shadows USE_DOCKER; for details see gitian-builder/libexec/make-clean-vm).\n+    os.environ['USE_LXC'] = ''\n+    os.environ['USE_VBOX'] = ''\n+    os.environ['USE_DOCKER'] = ''\n+    if args.docker:\n+        os.environ['USE_DOCKER'] = '1'\n+    elif not args.kvm:\n+        os.environ['USE_LXC'] = '1'\n+        if 'GITIAN_HOST_IP' not in os.environ.keys():\n+            os.environ['GITIAN_HOST_IP'] = '10.0.3.1'\n+        if 'LXC_GUEST_IP' not in os.environ.keys():\n+            os.environ['LXC_GUEST_IP'] = '10.0.3.5'\n+\n+    if args.setup:\n+        setup()\n+\n+    if args.buildsign:\n+        args.build = True\n+        args.sign = True\n+\n+    if not args.build and not args.sign and not args.verify:\n+        sys.exit(0)\n+\n+    args.linux = 'l' in args.os\n+    args.windows = 'w' in args.os\n+    args.macos = 'm' in args.os\n+\n+    # Disable for MacOS if no SDK found\n+    if args.macos and not os.path.isfile('gitian-builder/inputs/Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz'):\n+        print('Cannot build for MacOS, SDK does not exist. Will build for other OSes')\n+        args.macos = False\n+\n+    args.sign_prog = 'true' if args.detach_sign else 'gpg --detach-sign'\n+\n+    script_name = os.path.basename(sys.argv[0])\n+    if not args.signer:\n+        print(script_name+': Missing signer')\n+        print('Try '+script_name+' --help for more information')\n+        sys.exit(1)\n+    if not args.version:\n+        print(script_name+': Missing version')\n+        print('Try '+script_name+' --help for more information')\n+        sys.exit(1)\n+\n+    # Add leading 'v' for tags\n+    if args.commit and args.pull:\n+        raise Exception('Cannot have both commit and pull')\n+    args.commit = ('' if args.commit else 'v') + args.version\n+\n+    os.chdir('bitcoin')\n+    if args.pull:\n+        subprocess.check_call(['git', 'fetch', args.url, 'refs/pull/'+args.version+'/merge'])\n+        os.chdir('../gitian-builder/inputs/bitcoin')\n+        subprocess.check_call(['git', 'fetch', args.url, 'refs/pull/'+args.version+'/merge'])\n+        args.commit = subprocess.check_output(['git', 'show', '-s', '--format=%H', 'FETCH_HEAD'], universal_newlines=True, encoding='utf8').strip()\n+        args.version = 'pull-' + args.version\n+    print(args.commit)\n+    subprocess.check_call(['git', 'fetch'])\n+    subprocess.check_call(['git', 'checkout', args.commit])\n+    os.chdir(workdir)\n+\n+    os.chdir('gitian-builder')\n+    subprocess.check_call(['git', 'pull'])\n+    os.chdir(workdir)\n+\n+    if args.build:\n+        build()\n+\n+    if args.sign:\n+        sign()\n+\n+    if args.verify:\n+        os.chdir('gitian.sigs')\n+        subprocess.check_call(['git', 'pull'])\n+        os.chdir(workdir)\n+        sys.exit(verify())\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "a2ca768aaa70b285d1e7b8654c1094533e6c1190",
        "filename": "contrib/gitian-descriptors/assign_DISTNAME",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/gitian-descriptors/assign_DISTNAME",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/gitian-descriptors/assign_DISTNAME",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/assign_DISTNAME?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,12 @@\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# A helper script to be sourced into the gitian descriptors\n+\n+if RECENT_TAG=\"$(git describe --exact-match HEAD)\"; then\n+    VERSION=\"${RECENT_TAG#v}\"\n+else\n+    VERSION=\"$(git rev-parse --short=12 HEAD)\"\n+fi\n+DISTNAME=\"bitcoin-${VERSION}\""
      },
      {
        "sha": "65f9a2e5c91d3b61599e3d6fb492389cd672da3d",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "added",
        "additions": 151,
        "deletions": 0,
        "changes": 151,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,151 @@\n+---\n+name: \"bitcoin-core-linux-0.21\"\n+enable_cache: true\n+distro: \"ubuntu\"\n+suites:\n+- \"bionic\"\n+architectures:\n+- \"amd64\"\n+packages:\n+# Common dependencies.\n+- \"autoconf\"\n+- \"automake\"\n+- \"binutils\"\n+- \"bsdmainutils\"\n+- \"ca-certificates\"\n+- \"curl\"\n+- \"faketime\"\n+- \"git\"\n+- \"libtool\"\n+- \"patch\"\n+- \"pkg-config\"\n+- \"python3\"\n+# Cross compilation HOSTS:\n+#  - arm-linux-gnueabihf\n+- \"binutils-arm-linux-gnueabihf\"\n+- \"g++-8-arm-linux-gnueabihf\"\n+#  - aarch64-linux-gnu\n+- \"binutils-aarch64-linux-gnu\"\n+- \"g++-8-aarch64-linux-gnu\"\n+#  - riscv64-linux-gnu\n+- \"binutils-riscv64-linux-gnu\"\n+- \"g++-8-riscv64-linux-gnu\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n+  \"dir\": \"bitcoin\"\n+files: []\n+script: |\n+  set -e -o pipefail\n+\n+  WRAP_DIR=$HOME/wrapped\n+  HOSTS=\"x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu\"\n+  CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests\"\n+  FAKETIME_HOST_PROGS=\"gcc g++\"\n+  FAKETIME_PROGS=\"date ar ranlib nm\"\n+  HOST_CFLAGS=\"-O2 -g\"\n+  HOST_CXXFLAGS=\"-O2 -g\"\n+  HOST_LDFLAGS_BASE=\"-static-libstdc++ -Wl,-O2\"\n+\n+  export QT_RCC_TEST=1\n+  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n+  export TZ=\"UTC\"\n+  export BUILD_DIR=\"$PWD\"\n+  mkdir -p ${WRAP_DIR}\n+  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n+  fi\n+\n+  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n+  function create_global_faketime_wrappers {\n+  for prog in ${FAKETIME_PROGS}; do\n+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n+    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n+    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n+    chmod +x ${WRAP_DIR}/${prog}\n+  done\n+  }\n+\n+  function create_per-host_faketime_wrappers {\n+  for i in $HOSTS; do\n+    for prog in ${FAKETIME_HOST_PROGS}; do\n+        if which ${i}-${prog}-8\n+        then\n+            echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n+            echo \"REAL=\\`which -a ${i}-${prog}-8 | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+            echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n+            echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+            echo \"\\$REAL \\\"\\$@\\\"\" >> $WRAP_DIR/${i}-${prog}\n+            chmod +x ${WRAP_DIR}/${i}-${prog}\n+        fi\n+    done\n+  done\n+  }\n+\n+  # Faketime for depends so intermediate results are comparable\n+  export PATH_orig=${PATH}\n+  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n+  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  cd bitcoin\n+  BASEPREFIX=\"${PWD}/depends\"\n+  # Build dependencies for each host\n+  for i in $HOSTS; do\n+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n+  done\n+\n+  # Faketime for binaries\n+  export PATH=${PATH_orig}\n+  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  # Define DISTNAME variable.\n+  # shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n+  source contrib/gitian-descriptors/assign_DISTNAME\n+\n+  GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n+\n+  # Create the source tarball\n+  mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n+  git archive --output=\"$GIT_ARCHIVE\" HEAD\n+\n+  ORIGPATH=\"$PATH\"\n+  # Extract the git archive into a dir for each host and build\n+  for i in ${HOSTS}; do\n+    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n+    if [ \"${i}\" = \"riscv64-linux-gnu\" ]; then\n+      # Workaround for https://bugs.launchpad.net/ubuntu/+source/gcc-8-cross-ports/+bug/1853740\n+      # TODO: remove this when no longer needed\n+      HOST_LDFLAGS=\"${HOST_LDFLAGS_BASE} -Wl,-z,noexecstack\"\n+    else\n+      HOST_LDFLAGS=\"${HOST_LDFLAGS_BASE}\"\n+    fi\n+    mkdir -p distsrc-${i}\n+    cd distsrc-${i}\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n+    mkdir -p ${INSTALLPATH}\n+    tar -xf $GIT_ARCHIVE\n+\n+    ./autogen.sh\n+    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\" LDFLAGS=\"${HOST_LDFLAGS}\"\n+    make ${MAKEOPTS}\n+    make ${MAKEOPTS} -C src check-security\n+    make ${MAKEOPTS} -C src check-symbols\n+    make install DESTDIR=${INSTALLPATH}\n+    cd installed\n+    find . -name \"lib*.la\" -delete\n+    find . -name \"lib*.a\" -delete\n+    rm -rf ${DISTNAME}/lib/pkgconfig\n+    find ${DISTNAME}/bin -type f -executable -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n+    find ${DISTNAME}/lib -type f -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n+    cp ../README.md ${DISTNAME}/\n+    find ${DISTNAME} -not -name \"*.dbg\" | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n+    find ${DISTNAME} -name \"*.dbg\" | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}-debug.tar.gz\n+    cd ../../\n+    rm -rf distsrc-${i}\n+  done"
      },
      {
        "sha": "a4f3219c2291e8164c92d5ba1eedb7a346b1bdb4",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "added",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,40 @@\n+---\n+name: \"bitcoin-dmg-signer\"\n+distro: \"ubuntu\"\n+suites:\n+- \"bionic\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"faketime\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n+  \"dir\": \"signature\"\n+files:\n+- \"bitcoin-osx-unsigned.tar.gz\"\n+script: |\n+  set -e -o pipefail\n+\n+  WRAP_DIR=$HOME/wrapped\n+  mkdir -p ${WRAP_DIR}\n+  export PATH=\"$PWD\":$PATH\n+  FAKETIME_PROGS=\"dmg genisoimage\"\n+\n+  # Create global faketime wrappers\n+  for prog in ${FAKETIME_PROGS}; do\n+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n+    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n+    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n+    chmod +x ${WRAP_DIR}/${prog}\n+  done\n+\n+  UNSIGNED=bitcoin-osx-unsigned.tar.gz\n+  SIGNED=bitcoin-osx-signed.dmg\n+\n+  tar -xf ${UNSIGNED}\n+  OSX_VOLNAME=\"$(cat osx_volname)\"\n+  ./detached-sig-apply.sh ${UNSIGNED} signature/osx\n+  ${WRAP_DIR}/genisoimage -no-cache-inodes -D -l -probe -V \"${OSX_VOLNAME}\" -no-pad -r -dir-mode 0755 -apple -o uncompressed.dmg signed-app\n+  ${WRAP_DIR}/dmg dmg uncompressed.dmg ${OUTDIR}/${SIGNED}"
      },
      {
        "sha": "e0aaafc15ad4005d47becfe03a506ed436867b95",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "added",
        "additions": 159,
        "deletions": 0,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,159 @@\n+---\n+name: \"bitcoin-core-osx-0.21\"\n+enable_cache: true\n+distro: \"ubuntu\"\n+suites:\n+- \"bionic\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"ca-certificates\"\n+- \"curl\"\n+- \"g++\"\n+- \"git\"\n+- \"pkg-config\"\n+- \"autoconf\"\n+- \"librsvg2-bin\"\n+- \"libtiff-tools\"\n+- \"libtool\"\n+- \"automake\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+- \"cmake\"\n+- \"imagemagick\"\n+- \"libcap-dev\"\n+- \"libz-dev\"\n+- \"libbz2-dev\"\n+- \"python3\"\n+- \"python3-dev\"\n+- \"python3-setuptools\"\n+- \"fonts-tuffy\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n+  \"dir\": \"bitcoin\"\n+files:\n+- \"Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz\"\n+script: |\n+  set -e -o pipefail\n+\n+  WRAP_DIR=$HOME/wrapped\n+  HOSTS=\"x86_64-apple-darwin16\"\n+  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests GENISOIMAGE=$WRAP_DIR/genisoimage\"\n+  FAKETIME_HOST_PROGS=\"\"\n+  FAKETIME_PROGS=\"ar ranlib date dmg genisoimage\"\n+\n+  export QT_RCC_TEST=1\n+  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n+  export TZ=\"UTC\"\n+  export BUILD_DIR=\"$PWD\"\n+  mkdir -p ${WRAP_DIR}\n+  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n+  fi\n+\n+  export ZERO_AR_DATE=1\n+\n+  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n+  function create_global_faketime_wrappers {\n+  for prog in ${FAKETIME_PROGS}; do\n+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n+    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n+    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n+    chmod +x ${WRAP_DIR}/${prog}\n+  done\n+  }\n+\n+  function create_per-host_faketime_wrappers {\n+  for i in $HOSTS; do\n+    for prog in ${FAKETIME_HOST_PROGS}; do\n+        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+        chmod +x ${WRAP_DIR}/${i}-${prog}\n+    done\n+  done\n+  }\n+\n+  # Faketime for depends so intermediate results are comparable\n+  export PATH_orig=${PATH}\n+  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n+  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  cd bitcoin\n+  BASEPREFIX=\"${PWD}/depends\"\n+\n+  mkdir -p ${BASEPREFIX}/SDKs\n+  tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz\n+\n+  # Build dependencies for each host\n+  for i in $HOSTS; do\n+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n+  done\n+\n+  # Faketime for binaries\n+  export PATH=${PATH_orig}\n+  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  # Define DISTNAME variable.\n+  # shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n+  source contrib/gitian-descriptors/assign_DISTNAME\n+\n+  GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n+\n+  # Create the source tarball\n+  mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n+  git archive --output=\"$GIT_ARCHIVE\" HEAD\n+\n+  ORIGPATH=\"$PATH\"\n+  # Extract the git archive into a dir for each host and build\n+  for i in ${HOSTS}; do\n+    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n+    mkdir -p distsrc-${i}\n+    cd distsrc-${i}\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n+    mkdir -p ${INSTALLPATH}\n+    tar -xf $GIT_ARCHIVE\n+\n+    ./autogen.sh\n+    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n+    make ${MAKEOPTS}\n+    make ${MAKEOPTS} -C src check-security\n+    make ${MAKEOPTS} -C src check-symbols\n+    make install-strip DESTDIR=${INSTALLPATH}\n+\n+    make osx_volname\n+    make deploydir\n+    OSX_VOLNAME=\"$(cat osx_volname)\"\n+    mkdir -p unsigned-app-${i}\n+    cp osx_volname unsigned-app-${i}/\n+    cp contrib/macdeploy/detached-sig-apply.sh unsigned-app-${i}\n+    cp contrib/macdeploy/detached-sig-create.sh unsigned-app-${i}\n+    cp ${BASEPREFIX}/${i}/native/bin/dmg ${BASEPREFIX}/${i}/native/bin/genisoimage unsigned-app-${i}\n+    cp ${BASEPREFIX}/${i}/native/bin/${i}-codesign_allocate unsigned-app-${i}/codesign_allocate\n+    cp ${BASEPREFIX}/${i}/native/bin/${i}-pagestuff unsigned-app-${i}/pagestuff\n+    mv dist unsigned-app-${i}\n+    pushd unsigned-app-${i}\n+    find . | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-osx-unsigned.tar.gz\n+    popd\n+\n+    make deploy\n+    ${WRAP_DIR}/dmg dmg \"${OSX_VOLNAME}.dmg\" ${OUTDIR}/${DISTNAME}-osx-unsigned.dmg\n+\n+    cd installed\n+    find . -name \"lib*.la\" -delete\n+    find . -name \"lib*.a\" -delete\n+    rm -rf ${DISTNAME}/lib/pkgconfig\n+    find ${DISTNAME} | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n+    cd ../../\n+  done\n+\n+  mv ${OUTDIR}/${DISTNAME}-x86_64-*.tar.gz ${OUTDIR}/${DISTNAME}-osx64.tar.gz"
      },
      {
        "sha": "6bcd126662f3a1e04aa38735f1bcd758d7001fbb",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "added",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,42 @@\n+---\n+name: \"bitcoin-win-signer\"\n+distro: \"ubuntu\"\n+suites:\n+- \"bionic\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"libssl-dev\"\n+- \"autoconf\"\n+- \"automake\"\n+- \"libtool\"\n+- \"pkg-config\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n+  \"dir\": \"signature\"\n+files:\n+- \"osslsigncode-2.0.tar.gz\"\n+- \"bitcoin-win-unsigned.tar.gz\"\n+script: |\n+  set -e -o pipefail\n+\n+  BUILD_DIR=\"$PWD\"\n+  SIGDIR=${BUILD_DIR}/signature/win\n+  UNSIGNED_DIR=${BUILD_DIR}/unsigned\n+\n+  echo \"5a60e0a4b3e0b4d655317b2f12a810211c50242138322b16e7e01c6fbb89d92f  osslsigncode-2.0.tar.gz\" | sha256sum -c\n+\n+  mkdir -p ${UNSIGNED_DIR}\n+  tar -C ${UNSIGNED_DIR} -xf bitcoin-win-unsigned.tar.gz\n+\n+  tar xf osslsigncode-2.0.tar.gz\n+  cd osslsigncode-2.0\n+\n+  ./autogen.sh\n+  ./configure --without-gsf --without-curl --disable-dependency-tracking\n+  make\n+  find ${UNSIGNED_DIR} -name \"*-unsigned.exe\" | while read i; do\n+    INFILE=\"$(basename \"${i}\")\"\n+    OUTFILE=\"${INFILE/-unsigned}\"\n+    ./osslsigncode attach-signature -in \"${i}\" -out \"${OUTDIR}/${OUTFILE}\" -sigin \"${SIGDIR}/${INFILE}.pem\"\n+  done"
      },
      {
        "sha": "5f671b95ce3df0f77418dba9c556dbd897333025",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "added",
        "additions": 156,
        "deletions": 0,
        "changes": 156,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,156 @@\n+---\n+name: \"bitcoin-core-win-0.21\"\n+enable_cache: true\n+distro: \"ubuntu\"\n+suites:\n+- \"bionic\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"curl\"\n+- \"g++\"\n+- \"git\"\n+- \"pkg-config\"\n+- \"autoconf\"\n+- \"libtool\"\n+- \"automake\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+- \"mingw-w64\"\n+- \"g++-mingw-w64\"\n+- \"nsis\"\n+- \"zip\"\n+- \"ca-certificates\"\n+- \"python3\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n+  \"dir\": \"bitcoin\"\n+files: []\n+script: |\n+  set -e -o pipefail\n+\n+  WRAP_DIR=$HOME/wrapped\n+  HOSTS=\"x86_64-w64-mingw32\"\n+  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n+  FAKETIME_HOST_PROGS=\"ar ranlib nm windres strip objcopy\"\n+  FAKETIME_PROGS=\"date makensis zip\"\n+  HOST_CFLAGS=\"-O2 -g -fno-ident\"\n+  HOST_CXXFLAGS=\"-O2 -g -fno-ident\"\n+\n+  export QT_RCC_TEST=1\n+  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n+  export TZ=\"UTC\"\n+  export BUILD_DIR=\"$PWD\"\n+  mkdir -p ${WRAP_DIR}\n+  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n+  fi\n+\n+  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n+  function create_global_faketime_wrappers {\n+  for prog in ${FAKETIME_PROGS}; do\n+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n+    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n+    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n+    chmod +x ${WRAP_DIR}/${prog}\n+  done\n+  }\n+\n+  function create_per-host_faketime_wrappers {\n+  for i in $HOSTS; do\n+    for prog in ${FAKETIME_HOST_PROGS}; do\n+        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+        chmod +x ${WRAP_DIR}/${i}-${prog}\n+    done\n+  done\n+  }\n+\n+  function create_per-host_compiler_wrapper {\n+  # -posix variant is required for c++11 threading.\n+  for i in $HOSTS; do\n+    for prog in gcc g++; do\n+        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog}-posix | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"\\$REAL \\\"\\$@\\\"\" >> $WRAP_DIR/${i}-${prog}\n+        chmod +x ${WRAP_DIR}/${i}-${prog}\n+    done\n+  done\n+  }\n+\n+  # Faketime for depends so intermediate results are comparable\n+  export PATH_orig=${PATH}\n+  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n+  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n+  create_per-host_compiler_wrapper \"2000-01-01 12:00:00\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  cd bitcoin\n+  BASEPREFIX=\"${PWD}/depends\"\n+  # Build dependencies for each host\n+  for i in $HOSTS; do\n+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n+  done\n+\n+  # Faketime for binaries\n+  export PATH=${PATH_orig}\n+  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  create_per-host_compiler_wrapper \"${REFERENCE_DATETIME}\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  # Define DISTNAME variable.\n+  # shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n+  source contrib/gitian-descriptors/assign_DISTNAME\n+\n+  GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n+\n+  # Create the source tarball\n+  mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n+  git archive --output=\"$GIT_ARCHIVE\" HEAD\n+\n+  ORIGPATH=\"$PATH\"\n+  # Extract the git archive into a dir for each host and build\n+  for i in ${HOSTS}; do\n+    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n+    mkdir -p distsrc-${i}\n+    cd distsrc-${i}\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n+    mkdir -p ${INSTALLPATH}\n+    tar -xf $GIT_ARCHIVE\n+\n+    ./autogen.sh\n+    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\"\n+    make ${MAKEOPTS}\n+    make ${MAKEOPTS} -C src check-security\n+    make ${MAKEOPTS} -C src check-symbols\n+    make deploy BITCOIN_WIN_INSTALLER=\"${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe\"\n+    make install DESTDIR=${INSTALLPATH}\n+    cd installed\n+    mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/\n+    find . -name \"lib*.la\" -delete\n+    find . -name \"lib*.a\" -delete\n+    rm -rf ${DISTNAME}/lib/pkgconfig\n+    find ${DISTNAME}/bin -type f -executable -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n+    find ${DISTNAME}/lib -type f -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n+    cp ../doc/README_windows.txt ${DISTNAME}/readme.txt\n+    find ${DISTNAME} -not -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i//x86_64-w64-mingw32/win64}.zip\n+    find ${DISTNAME} -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i//x86_64-w64-mingw32/win64}-debug.zip\n+    cd ../../\n+    rm -rf distsrc-${i}\n+  done\n+\n+  cp -rf contrib/windeploy $BUILD_DIR\n+  cd $BUILD_DIR/windeploy\n+  mkdir unsigned\n+  cp ${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe unsigned/\n+  find . | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz"
      },
      {
        "sha": "ffe4fb144b1ae07c7c9bbdcdaea2694978eb18b2",
        "filename": "contrib/gitian-keys/README.md",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/gitian-keys/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/gitian-keys/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/README.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,27 @@\n+## PGP keys of Gitian builders and Developers\n+\n+The file `keys.txt` contains fingerprints of the public keys of Gitian builders\n+and active developers.\n+\n+The associated keys are mainly used to sign git commits or the build results\n+of Gitian builds.\n+\n+The most recent version of each pgp key can be found on most pgp key servers.\n+\n+Fetch the latest version from the key server to see if any key was revoked in\n+the meantime.\n+To fetch the latest version of all pgp keys in your gpg homedir,\n+\n+```sh\n+gpg --refresh-keys\n+```\n+\n+To fetch keys of Gitian builders and active developers, feed the list of\n+fingerprints of the primary keys into gpg:\n+\n+```sh\n+while read fingerprint keyholder_name; do gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys ${fingerprint}; done < ./keys.txt\n+```\n+\n+Add your key to the list if you provided Gitian signatures for two major or\n+minor releases of Bitcoin Core."
      },
      {
        "sha": "0a2c1302c82f8e13cfe48ec36ff5bd0c9e07f3e6",
        "filename": "contrib/gitian-keys/keys.txt",
        "status": "added",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/gitian-keys/keys.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/gitian-keys/keys.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/keys.txt?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,36 @@\n+9D3CC86A72F8494342EA5FD10A41BDC3F4FAFF1C Aaron Clauson (sipsorcery)\n+617C90010B3BD370B0AC7D424BB42E31C79111B8 Akira Takizawa\n+E944AE667CF960B1004BC32FCA662BE18B877A60 Andreas Schildbach\n+152812300785C96444D3334D17565732E08E5E41 Andrew Chow\n+912FD3228387123DC97E0E57D5566241A0295FA9 BtcDrak\n+C519EBCF3B926298946783EFF6430754120EC2F4 Christian Decker (cdecker)\n+F20F56EF6A067F70E8A5C99FFF95FAA971697405 centaur\n+C060A6635913D98A3587D7DB1C2491FFEB0EF770 Cory Fields\n+BF6273FAEF7CC0BA1F562E50989F6B3048A116B5 Dev Random\n+6D3170C1DC2C6FD0AEEBCA6743811D1A26623924 Douglas Roark\n+9A1689B60D1B3CCE9262307A2F40A9BF167FBA47 Erik Mossberg (erkmos)\n+D35176BE9264832E4ACA8986BF0792FBE95DC863 fivepiece\n+01CDF4627A3B88AAE4A571C87588242FBE38D3A8 Gavin Andresen\n+D1DBF2C4B96F2DEBF4C16654410108112E7EA81F Hennadii Stepanov (hebasto)\n+D3CC177286005BB8FF673294C5242A1AB3936517 jl2012\n+82921A4B88FD454B7EB8CE3C796C4109063D4EAF Jon Atack\n+32EE5C4C3FA15CCADB46ABE529D4BCB6416F53EC Jonas Schnelli\n+4B4E840451149DD7FB0D633477DFAB5C3108B9A8 Jorge Timon\n+C42AFF7C61B3E44A1454CD3557AF762DB3353322 Karl-Johan Alm (kallewoof)\n+E463A93F5F3117EEDE6C7316BD02942421F4889F Luke Dashjr\n+B8B3F1C0E58C15DB6A81D30C3648A882F4316B9B Marco Falke\n+07DF3E57A548CCFB7530709189BBB8663E2E65CE Matt Corallo (BlueMatt)\n+CA03882CB1FC067B5D3ACFE4D300116E1C875A3D MeshCollider\n+E777299FC265DD04793070EB944D35F9AC3DB76A Michael Ford\n+9692B91BBF0E8D34DFD33B1882C5C009628ECF0C Michagogo\n+77E72E69DA7EE0A148C06B21B34821D4944DE5F7 Nils Schneider\n+D62A803E27E7F43486035ADBBCD04D8E9CCCAC2A Paul Rabahy\n+37EC7D7B0A217CDB4B4E007E7FAB114267E4FA04 Peter Todd\n+D762373D24904A3E42F33B08B9A408E71DAAC974 Pieter Wuille (Location: Leuven, Belgium)\n+133EAC179436F14A5CF1B794860FEB804E669320 Pieter Wuille\n+A8FC55F3B04BA3146F3492E79303B33A305224CB Sebastian Kung (TheCharlatan)\n+ED9BDF7AD6A55E232E84524257FF9BDBCC301009 Sjors Provoost\n+9EDAFF80E080659604F4A76B2EBB056FD847F8A7 Stephan Oeste (Emzy)\n+AEC1884398647C47413C1C3FB1179EB7347DC10D Warren Togami\n+79D00BAC68B56D422F945A8F8E3A8F3247DBCBBF Willy Ko\n+71A3B16735405025D447E8F274810B012346C9A6 Wladimir J. van der Laan"
      },
      {
        "sha": "dffcf99607ae2bb997296ad1e16e124d5da70f4b",
        "filename": "contrib/guix/README.md",
        "status": "added",
        "additions": 230,
        "deletions": 0,
        "changes": 230,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/guix/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/guix/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/README.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,230 @@\n+# Bootstrappable Bitcoin Core Builds\n+\n+This directory contains the files necessary to perform bootstrappable Bitcoin\n+Core builds.\n+\n+[Bootstrappability][b17e] furthers our binary security guarantees by allowing us\n+to _audit and reproduce_ our toolchain instead of blindly _trusting_ binary\n+downloads.\n+\n+We achieve bootstrappability by using Guix as a functional package manager.\n+\n+## Requirements\n+\n+Conservatively, a x86_64 machine with:\n+\n+- 4GB of free disk space on the partition that /gnu/store will reside in\n+- 24GB of free disk space on the partition that the Bitcoin Core git repository\n+  resides in\n+\n+> Note: these requirements are slightly less onerous than those of Gitian builds\n+\n+## Setup\n+\n+### Installing Guix\n+\n+If you're just testing this out, you can use the\n+[Dockerfile][fanquake/guix-docker] for convenience. It automatically speeds up\n+your builds by [using substitutes](#speeding-up-builds-with-substitute-servers).\n+If you don't want this behaviour, refer to the [next\n+section](#choosing-your-security-model).\n+\n+Otherwise, follow the [Guix installation guide][guix/bin-install].\n+\n+> Note: For those who like to keep their filesystems clean, Guix is designed to\n+> be very standalone and _will not_ conflict with your system's package\n+> manager/existing setup. It _only_ touches `/var/guix`, `/gnu`, and\n+> `~/.config/guix`.\n+\n+### Choosing your security model\n+\n+Guix allows us to achieve better binary security by using our CPU time to build\n+everything from scratch. However, it doesn't sacrifice user choice in pursuit of\n+this: users can decide whether or not to bootstrap and to use substitutes.\n+\n+After installation, you may want to consider [adding substitute\n+servers](#speeding-up-builds-with-substitute-servers) to speed up your build if\n+that fits your security model (say, if you're just testing that this works).\n+This is skippable if you're using the [Dockerfile][fanquake/guix-docker].\n+\n+If you prefer not to use any substitutes, make sure to set\n+`ADDITIONAL_GUIX_ENVIRONMENT_FLAGS` like the following snippet. The first build\n+will take a while, but the resulting packages will be cached for future builds.\n+\n+```sh\n+export ADDITIONAL_GUIX_ENVIRONMENT_FLAGS='--no-substitutes'\n+```\n+\n+Likewise, to perform a bootstrapped build (takes even longer):\n+\n+```sh\n+export ADDITIONAL_GUIX_ENVIRONMENT_FLAGS='--bootstrap --no-substitutes'\n+```\n+\n+### Using a version of Guix with `guix time-machine` capabilities\n+\n+> Note: This entire section can be skipped if you are already using a version of\n+> Guix that has [the `guix time-machine` command][guix/time-machine].\n+\n+Once Guix is installed, if it doesn't have the `guix time-machine` command, pull\n+the latest `guix`.\n+\n+```sh\n+guix pull --max-jobs=4 # change number of jobs accordingly\n+```\n+\n+Make sure that you are using your current profile. (You are prompted to do this\n+at the end of the `guix pull`)\n+\n+```bash\n+export PATH=\"${HOME}/.config/guix/current/bin${PATH:+:}$PATH\"\n+```\n+\n+## Usage\n+\n+### As a Development Environment\n+\n+For a Bitcoin Core depends development environment, simply invoke\n+\n+```sh\n+guix environment --manifest=contrib/guix/manifest.scm\n+```\n+\n+And you'll land back in your shell with all the build dependencies required for\n+a `depends` build injected into your environment.\n+\n+### As a Tool for Deterministic Builds\n+\n+From the top of a clean Bitcoin Core repository:\n+\n+```sh\n+./contrib/guix/guix-build.sh\n+```\n+\n+After the build finishes successfully (check the status code please), compare\n+hashes:\n+\n+```sh\n+find output/ -type f -print0 | sort -z | xargs -r0 sha256sum\n+```\n+\n+#### Recognized environment variables\n+\n+* _**HOSTS**_\n+\n+  Override the space-separated list of platform triples for which to perform a\n+  bootstrappable build. _(defaults to \"x86\\_64-linux-gnu\n+  arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu\")_\n+\n+  > Windows and OS X platform triplet support are WIP.\n+\n+* _**SOURCES_PATH**_\n+\n+  Set the depends tree download cache for sources. This is passed through to the\n+  depends tree. Setting this to the same directory across multiple builds of the\n+  depends tree can eliminate unnecessary redownloading of package sources.\n+\n+* _**MAX_JOBS**_\n+\n+  Override the maximum number of jobs to run simultaneously, you might want to\n+  do so on a memory-limited machine. This may be passed to `make` as in `make\n+  --jobs=\"$MAX_JOBS\"` or `xargs` as in `xargs -P\"$MAX_JOBS\"`. _(defaults to the\n+  value of `nproc` outside the container)_\n+\n+* _**SOURCE_DATE_EPOCH**_\n+\n+  Override the reference UNIX timestamp used for bit-for-bit reproducibility,\n+  the variable name conforms to [standard][r12e/source-date-epoch]. _(defaults\n+  to the output of `$(git log --format=%at -1)`)_\n+\n+* _**V**_\n+\n+  If non-empty, will pass `V=1` to all `make` invocations, making `make` output\n+  verbose.\n+\n+  Note that any given value is ignored. The variable is only checked for\n+  emptiness. More concretely, this means that `V=` (setting `V` to the empty\n+  string) is interpreted the same way as not setting `V` at all, and that `V=0`\n+  has the same effect as `V=1`.\n+\n+* _**ADDITIONAL_GUIX_ENVIRONMENT_FLAGS**_\n+\n+  Additional flags to be passed to `guix environment`. For a fully-bootstrapped\n+  build, set this to `--bootstrap --no-substitutes` (refer to the [security\n+  model section](#choosing-your-security-model) for more details). Note that a\n+  fully-bootstrapped build will take quite a long time on the first run.\n+\n+## Tips and Tricks\n+\n+### Speeding up builds with substitute servers\n+\n+_This whole section is automatically done in the convenience\n+[Dockerfiles][fanquake/guix-docker]_\n+\n+For those who are used to life in the fast _(and trustful)_ lane, you can use\n+[substitute servers][guix/substitutes] to enable binary downloads of packages.\n+\n+> For those who only want to use substitutes from the official Guix build farm\n+> and have authorized the build farm's signing key during Guix's installation,\n+> you don't need to do anything.\n+\n+#### Authorize the signing keys\n+\n+For the official Guix build farm at https://ci.guix.gnu.org, run as root:\n+\n+```\n+guix archive --authorize < ~root/.config/guix/current/share/guix/ci.guix.gnu.org.pub\n+```\n+\n+For dongcarl's substitute server at https://guix.carldong.io, run as root:\n+\n+```sh\n+wget -qO- 'https://guix.carldong.io/signing-key.pub' | guix archive --authorize\n+```\n+\n+#### Use the substitute servers\n+\n+The official Guix build farm at https://ci.guix.gnu.org is automatically used\n+unless the `--no-substitutes` flag is supplied.\n+\n+This can be overridden for all `guix` invocations by passing the\n+`--substitute-urls` option to your invocation of `guix-daemon`. This can also be\n+overridden on a call-by-call basis by passing the same `--substitute-urls`\n+option to client tools such at `guix environment`.\n+\n+To use dongcarl's substitute server for Bitcoin Core builds after having\n+[authorized his signing key](#authorize-the-signing-keys):\n+\n+```\n+export ADDITIONAL_GUIX_ENVIRONMENT_FLAGS='--substitute-urls=\"https://guix.carldong.io https://ci.guix.gnu.org\"'\n+```\n+\n+## FAQ\n+\n+### How can I trust the binary installation?\n+\n+As mentioned at the bottom of [this manual page][guix/bin-install]:\n+\n+> The binary installation tarballs can be (re)produced and verified simply by\n+> running the following command in the Guix source tree:\n+>\n+>     make guix-binary.x86_64-linux.tar.xz\n+\n+### When will Guix be packaged in debian?\n+\n+Vagrant Cascadian has been making good progress on this\n+[here][debian/guix-package]. We have all the pieces needed to put up an APT\n+repository and will likely put one up soon.\n+\n+[b17e]: http://bootstrappable.org/\n+[r12e/source-date-epoch]: https://reproducible-builds.org/docs/source-date-epoch/\n+\n+[guix/install.sh]: https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n+[guix/bin-install]: https://www.gnu.org/software/guix/manual/en/html_node/Binary-Installation.html\n+[guix/env-setup]: https://www.gnu.org/software/guix/manual/en/html_node/Build-Environment-Setup.html\n+[guix/substitutes]: https://www.gnu.org/software/guix/manual/en/html_node/Substitutes.html\n+[guix/substitute-server-auth]: https://www.gnu.org/software/guix/manual/en/html_node/Substitute-Server-Authorization.html\n+[guix/time-machine]: https://guix.gnu.org/manual/en/html_node/Invoking-guix-time_002dmachine.html\n+\n+[debian/guix-package]: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=850644\n+[fanquake/guix-docker]: https://github.com/fanquake/core-review/tree/master/guix"
      },
      {
        "sha": "11d2c8b86727eb2a757bc94e532a0d4cc83c45c6",
        "filename": "contrib/guix/guix-build.sh",
        "status": "added",
        "additions": 119,
        "deletions": 0,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/guix/guix-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/guix/guix-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/guix-build.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,119 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# Determine the maximum number of jobs to run simultaneously (overridable by\n+# environment)\n+MAX_JOBS=\"${MAX_JOBS:-$(nproc)}\"\n+\n+# Download the depends sources now as we won't have internet access in the build\n+# container\n+make -C \"${PWD}/depends\" -j\"$MAX_JOBS\" download ${V:+V=1} ${SOURCES_PATH:+SOURCES_PATH=\"$SOURCES_PATH\"}\n+\n+# Determine the reference time used for determinism (overridable by environment)\n+SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:-$(git log --format=%at -1)}\"\n+\n+# Execute \"$@\" in a pinned, possibly older version of Guix, for reproducibility\n+# across time.\n+time-machine() {\n+    guix time-machine --url=https://github.com/dongcarl/guix.git \\\n+                      --commit=b066c25026f21fb57677aa34692a5034338e7ee3 \\\n+                      -- \"$@\"\n+}\n+\n+# Function to be called when building for host ${1} and the user interrupts the\n+# build\n+int_trap() {\n+cat << EOF\n+** INT received while building ${1}, you may want to clean up the relevant\n+   output, deploy, and distsrc-* directories before rebuilding\n+\n+Hint: To blow everything away, you may want to use:\n+\n+  $ git clean -xdff --exclude='/depends/SDKs/*'\n+\n+Specifically, this will remove all files without an entry in the index,\n+excluding the SDK directory. Practically speaking, this means that all ignored\n+and untracked files and directories will be wiped, allowing you to start anew.\n+EOF\n+}\n+\n+# Deterministically build Bitcoin Core for HOSTs (overridable by environment)\n+# shellcheck disable=SC2153\n+for host in ${HOSTS=x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu x86_64-w64-mingw32}; do\n+\n+    # Display proper warning when the user interrupts the build\n+    trap 'int_trap ${host}' INT\n+\n+    (\n+        # Required for 'contrib/guix/manifest.scm' to output the right manifest\n+        # for the particular $HOST we're building for\n+        export HOST=\"$host\"\n+\n+        # Run the build script 'contrib/guix/libexec/build.sh' in the build\n+        # container specified by 'contrib/guix/manifest.scm'.\n+        #\n+        # Explanation of `guix environment` flags:\n+        #\n+        #   --container        run command within an isolated container\n+        #\n+        #     Running in an isolated container minimizes build-time differences\n+        #     between machines and improves reproducibility\n+        #\n+        #   --pure             unset existing environment variables\n+        #\n+        #     Same rationale as --container\n+        #\n+        #   --no-cwd           do not share current working directory with an\n+        #                      isolated container\n+        #\n+        #     When --container is specified, the default behavior is to share\n+        #     the current working directory with the isolated container at the\n+        #     same exact path (e.g. mapping '/home/satoshi/bitcoin/' to\n+        #     '/home/satoshi/bitcoin/'). This means that the $PWD inside the\n+        #     container becomes a source of irreproducibility. --no-cwd disables\n+        #     this behaviour.\n+        #\n+        #   --share=SPEC       for containers, share writable host file system\n+        #                      according to SPEC\n+        #\n+        #   --share=\"$PWD\"=/bitcoin\n+        #\n+        #                     maps our current working directory to /bitcoin\n+        #                     inside the isolated container, which we later cd\n+        #                     into.\n+        #\n+        #     While we don't want to map our current working directory to the\n+        #     same exact path (as this introduces irreproducibility), we do want\n+        #     it to be at a _fixed_ path _somewhere_ inside the isolated\n+        #     container so that we have something to build. '/bitcoin' was\n+        #     chosen arbitrarily.\n+        #\n+        #   ${SOURCES_PATH:+--share=\"$SOURCES_PATH\"}\n+        #\n+        #                     make the downloaded depends sources path available\n+        #                     inside the isolated container\n+        #\n+        #     The isolated container has no network access as it's in a\n+        #     different network namespace from the main machine, so we have to\n+        #     make the downloaded depends sources available to it. The sources\n+        #     should have been downloaded prior to this invocation.\n+        #\n+        # shellcheck disable=SC2086\n+        time-machine environment --manifest=\"${PWD}/contrib/guix/manifest.scm\" \\\n+                                 --container \\\n+                                 --pure \\\n+                                 --no-cwd \\\n+                                 --share=\"$PWD\"=/bitcoin \\\n+                                 --expose=\"$(git rev-parse --git-common-dir)\" \\\n+                                 ${SOURCES_PATH:+--share=\"$SOURCES_PATH\"} \\\n+                                 ${ADDITIONAL_GUIX_ENVIRONMENT_FLAGS} \\\n+                                 -- env HOST=\"$host\" \\\n+                                        MAX_JOBS=\"$MAX_JOBS\" \\\n+                                        SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:?unable to determine value}\" \\\n+                                        ${V:+V=1} \\\n+                                        ${SOURCES_PATH:+SOURCES_PATH=\"$SOURCES_PATH\"} \\\n+                                      bash -c \"cd /bitcoin && bash contrib/guix/libexec/build.sh\"\n+    )\n+\n+done"
      },
      {
        "sha": "5be3baeefab425c62417106499b672eb0d5696f7",
        "filename": "contrib/guix/libexec/build.sh",
        "status": "added",
        "additions": 321,
        "deletions": 0,
        "changes": 321,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/guix/libexec/build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/guix/libexec/build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/libexec/build.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,321 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+export TZ=UTC\n+\n+if [ -n \"$V\" ]; then\n+    # Print both unexpanded (-v) and expanded (-x) forms of commands as they are\n+    # read from this file.\n+    set -vx\n+    # Set VERBOSE for CMake-based builds\n+    export VERBOSE=\"$V\"\n+fi\n+\n+# Check that environment variables assumed to be set by the environment are set\n+echo \"Building for platform triple ${HOST:?not set} with reference timestamp ${SOURCE_DATE_EPOCH:?not set}...\"\n+echo \"At most ${MAX_JOBS:?not set} jobs will run at once...\"\n+\n+#####################\n+# Environment Setup #\n+#####################\n+\n+# The depends folder also serves as a base-prefix for depends packages for\n+# $HOSTs after successfully building.\n+BASEPREFIX=\"${PWD}/depends\"\n+\n+# Setup an output directory for our build\n+OUTDIR=\"${OUTDIR:-${PWD}/output}\"\n+[ -e \"$OUTDIR\" ] || mkdir -p \"$OUTDIR\"\n+\n+# Setup the directory where our Bitcoin Core build for HOST will occur\n+DISTSRC=\"${DISTSRC:-${PWD}/distsrc-${HOST}}\"\n+if [ -e \"$DISTSRC\" ]; then\n+    echo \"DISTSRC directory '${DISTSRC}' exists, probably because of previous builds... Aborting...\"\n+    exit 1\n+else\n+    mkdir -p \"$DISTSRC\"\n+fi\n+\n+# Given a package name and an output name, return the path of that output in our\n+# current guix environment\n+store_path() {\n+    grep --extended-regexp \"/[^-]{32}-${1}-[^-]+${2:+-${2}}\" \"${GUIX_ENVIRONMENT}/manifest\" \\\n+        | head --lines=1 \\\n+        | sed --expression='s|^[[:space:]]*\"||' \\\n+              --expression='s|\"[[:space:]]*$||'\n+}\n+\n+# Set environment variables to point Guix's cross-toolchain to the right\n+# includes/libs for $HOST\n+case \"$HOST\" in\n+    *mingw*)\n+        # Determine output paths to use in CROSS_* environment variables\n+        CROSS_GLIBC=\"$(store_path \"mingw-w64-x86_64-winpthreads\")\"\n+        CROSS_GCC=\"$(store_path \"gcc-cross-${HOST}\")\"\n+        CROSS_GCC_LIBS=( \"${CROSS_GCC}/lib/gcc/${HOST}\"/* ) # This expands to an array of directories...\n+        CROSS_GCC_LIB=\"${CROSS_GCC_LIBS[0]}\" # ...we just want the first one (there should only be one)\n+\n+        NATIVE_GCC=\"$(store_path gcc-glibc-2.27-toolchain)\"\n+        export LIBRARY_PATH=\"${NATIVE_GCC}/lib:${NATIVE_GCC}/lib64\"\n+        export CPATH=\"${NATIVE_GCC}/include\"\n+\n+        export CROSS_C_INCLUDE_PATH=\"${CROSS_GCC_LIB}/include:${CROSS_GCC_LIB}/include-fixed:${CROSS_GLIBC}/include\"\n+        export CROSS_CPLUS_INCLUDE_PATH=\"${CROSS_GCC}/include/c++:${CROSS_GCC}/include/c++/${HOST}:${CROSS_GCC}/include/c++/backward:${CROSS_C_INCLUDE_PATH}\"\n+        export CROSS_LIBRARY_PATH=\"${CROSS_GCC}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_GCC_LIB}:${CROSS_GLIBC}/lib\"\n+        ;;\n+    *linux*)\n+        CROSS_GLIBC=\"$(store_path \"glibc-cross-${HOST}\")\"\n+        CROSS_GLIBC_STATIC=\"$(store_path \"glibc-cross-${HOST}\" static)\"\n+        CROSS_KERNEL=\"$(store_path \"linux-libre-headers-cross-${HOST}\")\"\n+        CROSS_GCC=\"$(store_path \"gcc-cross-${HOST}\")\"\n+        CROSS_GCC_LIBS=( \"${CROSS_GCC}/lib/gcc/${HOST}\"/* ) # This expands to an array of directories...\n+        CROSS_GCC_LIB=\"${CROSS_GCC_LIBS[0]}\" # ...we just want the first one (there should only be one)\n+\n+        # NOTE: CROSS_C_INCLUDE_PATH is missing ${CROSS_GCC_LIB}/include-fixed, because\n+        # the limits.h in it is missing a '#include_next <limits.h>'\n+        export CROSS_C_INCLUDE_PATH=\"${CROSS_GCC_LIB}/include:${CROSS_GLIBC}/include:${CROSS_KERNEL}/include\"\n+        export CROSS_CPLUS_INCLUDE_PATH=\"${CROSS_GCC}/include/c++:${CROSS_GCC}/include/c++/${HOST}:${CROSS_GCC}/include/c++/backward:${CROSS_C_INCLUDE_PATH}\"\n+        export CROSS_LIBRARY_PATH=\"${CROSS_GCC}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_GCC_LIB}:${CROSS_GLIBC}/lib:${CROSS_GLIBC_STATIC}/lib\"\n+        ;;\n+    *)\n+        exit 1 ;;\n+esac\n+\n+# Sanity check CROSS_*_PATH directories\n+IFS=':' read -ra PATHS <<< \"${CROSS_C_INCLUDE_PATH}:${CROSS_CPLUS_INCLUDE_PATH}:${CROSS_LIBRARY_PATH}\"\n+for p in \"${PATHS[@]}\"; do\n+    if [ ! -d \"$p\" ]; then\n+        echo \"'$p' doesn't exist or isn't a directory... Aborting...\"\n+        exit 1\n+    fi\n+done\n+\n+# Disable Guix ld auto-rpath behavior\n+export GUIX_LD_WRAPPER_DISABLE_RPATH=yes\n+\n+# Make /usr/bin if it doesn't exist\n+[ -e /usr/bin ] || mkdir -p /usr/bin\n+\n+# Symlink file and env to a conventional path\n+[ -e /usr/bin/file ] || ln -s --no-dereference \"$(command -v file)\" /usr/bin/file\n+[ -e /usr/bin/env ]  || ln -s --no-dereference \"$(command -v env)\"  /usr/bin/env\n+\n+# Determine the correct value for -Wl,--dynamic-linker for the current $HOST\n+case \"$HOST\" in\n+    *linux*)\n+        glibc_dynamic_linker=$(\n+            case \"$HOST\" in\n+                i686-linux-gnu)      echo /lib/ld-linux.so.2 ;;\n+                x86_64-linux-gnu)    echo /lib64/ld-linux-x86-64.so.2 ;;\n+                arm-linux-gnueabihf) echo /lib/ld-linux-armhf.so.3 ;;\n+                aarch64-linux-gnu)   echo /lib/ld-linux-aarch64.so.1 ;;\n+                riscv64-linux-gnu)   echo /lib/ld-linux-riscv64-lp64d.so.1 ;;\n+                *)                   exit 1 ;;\n+            esac\n+        )\n+        ;;\n+esac\n+\n+# Environment variables for determinism\n+export QT_RCC_TEST=1\n+export QT_RCC_SOURCE_DATE_OVERRIDE=1\n+export TAR_OPTIONS=\"--owner=0 --group=0 --numeric-owner --mtime='@${SOURCE_DATE_EPOCH}' --sort=name\"\n+export TZ=\"UTC\"\n+\n+####################\n+# Depends Building #\n+####################\n+\n+# Build the depends tree, overriding variables that assume multilib gcc\n+make -C depends --jobs=\"$MAX_JOBS\" HOST=\"$HOST\" \\\n+                                   ${V:+V=1} \\\n+                                   ${SOURCES_PATH+SOURCES_PATH=\"$SOURCES_PATH\"} \\\n+                                   i686_linux_CC=i686-linux-gnu-gcc \\\n+                                   i686_linux_CXX=i686-linux-gnu-g++ \\\n+                                   i686_linux_AR=i686-linux-gnu-ar \\\n+                                   i686_linux_RANLIB=i686-linux-gnu-ranlib \\\n+                                   i686_linux_NM=i686-linux-gnu-nm \\\n+                                   i686_linux_STRIP=i686-linux-gnu-strip \\\n+                                   x86_64_linux_CC=x86_64-linux-gnu-gcc \\\n+                                   x86_64_linux_CXX=x86_64-linux-gnu-g++ \\\n+                                   x86_64_linux_AR=x86_64-linux-gnu-ar \\\n+                                   x86_64_linux_RANLIB=x86_64-linux-gnu-ranlib \\\n+                                   x86_64_linux_NM=x86_64-linux-gnu-nm \\\n+                                   x86_64_linux_STRIP=x86_64-linux-gnu-strip \\\n+                                   qt_config_opts_i686_linux='-platform linux-g++ -xplatform bitcoin-linux-g++'\n+\n+\n+###########################\n+# Source Tarball Building #\n+###########################\n+\n+# Define DISTNAME variable.\n+# shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n+source contrib/gitian-descriptors/assign_DISTNAME\n+\n+GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n+\n+# Create the source tarball if not already there\n+if [ ! -e \"$GIT_ARCHIVE\" ]; then\n+    mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n+    git archive --output=\"$GIT_ARCHIVE\" HEAD\n+fi\n+\n+###########################\n+# Binary Tarball Building #\n+###########################\n+\n+# CONFIGFLAGS\n+CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n+case \"$HOST\" in\n+    *linux*) CONFIGFLAGS+=\" --enable-glibc-back-compat\" ;;\n+esac\n+\n+# CFLAGS\n+HOST_CFLAGS=\"-O2 -g\"\n+case \"$HOST\" in\n+    *linux*)  HOST_CFLAGS+=\" -ffile-prefix-map=${PWD}=.\" ;;\n+    *mingw*)  HOST_CFLAGS+=\" -fno-ident\" ;;\n+esac\n+\n+# CXXFLAGS\n+HOST_CXXFLAGS=\"$HOST_CFLAGS\"\n+\n+# LDFLAGS\n+case \"$HOST\" in\n+    *linux*)  HOST_LDFLAGS=\"-Wl,--as-needed -Wl,--dynamic-linker=$glibc_dynamic_linker -static-libstdc++ -Wl,-O2\" ;;\n+    *mingw*)  HOST_LDFLAGS=\"-Wl,--no-insert-timestamp\" ;;\n+esac\n+\n+# Make $HOST-specific native binaries from depends available in $PATH\n+export PATH=\"${BASEPREFIX}/${HOST}/native/bin:${PATH}\"\n+(\n+    cd \"$DISTSRC\"\n+\n+    # Extract the source tarball\n+    tar -xf \"${GIT_ARCHIVE}\"\n+\n+    ./autogen.sh\n+\n+    # Configure this DISTSRC for $HOST\n+    # shellcheck disable=SC2086\n+    env CONFIG_SITE=\"${BASEPREFIX}/${HOST}/share/config.site\" \\\n+        ./configure --prefix=/ \\\n+                    --disable-ccache \\\n+                    --disable-maintainer-mode \\\n+                    --disable-dependency-tracking \\\n+                    ${CONFIGFLAGS} \\\n+                    CFLAGS=\"${HOST_CFLAGS}\" \\\n+                    CXXFLAGS=\"${HOST_CXXFLAGS}\" \\\n+                    ${HOST_LDFLAGS:+LDFLAGS=\"${HOST_LDFLAGS}\"}\n+\n+    sed -i.old 's/-lstdc++ //g' config.status libtool src/univalue/config.status src/univalue/libtool\n+\n+    # Build Bitcoin Core\n+    make --jobs=\"$MAX_JOBS\" ${V:+V=1}\n+\n+    # Perform basic ELF security checks on a series of executables.\n+    make -C src --jobs=1 check-security ${V:+V=1}\n+\n+    case \"$HOST\" in\n+        *linux*|*mingw*)\n+            # Check that executables only contain allowed gcc, glibc and libstdc++\n+            # version symbols for Linux distro back-compatibility.\n+            make -C src --jobs=1 check-symbols  ${V:+V=1}\n+            ;;\n+    esac\n+\n+    # Make the os-specific installers\n+    case \"$HOST\" in\n+        *mingw*)\n+            make deploy ${V:+V=1} BITCOIN_WIN_INSTALLER=\"${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe\"\n+            ;;\n+    esac\n+\n+    # Setup the directory where our Bitcoin Core build for HOST will be\n+    # installed. This directory will also later serve as the input for our\n+    # binary tarballs.\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n+    mkdir -p \"${INSTALLPATH}\"\n+    # Install built Bitcoin Core to $INSTALLPATH\n+    make install DESTDIR=\"${INSTALLPATH}\" ${V:+V=1}\n+\n+    (\n+        cd installed\n+\n+        case \"$HOST\" in\n+            *mingw*)\n+                mv --target-directory=\"$DISTNAME\"/lib/ \"$DISTNAME\"/bin/*.dll\n+                ;;\n+        esac\n+\n+        # Prune libtool and object archives\n+        find . -name \"lib*.la\" -delete\n+        find . -name \"lib*.a\" -delete\n+\n+        # Prune pkg-config files\n+        rm -r \"${DISTNAME}/lib/pkgconfig\"\n+\n+        # Split binaries and libraries from their debug symbols\n+        {\n+            find \"${DISTNAME}/bin\" -type f -executable -print0\n+            find \"${DISTNAME}/lib\" -type f -print0\n+        } | xargs -0 -n1 -P\"$MAX_JOBS\" -I{} \"${DISTSRC}/contrib/devtools/split-debug.sh\" {} {} {}.dbg\n+\n+        case \"$HOST\" in\n+            *mingw*)\n+                cp \"${DISTSRC}/doc/README_windows.txt\" \"${DISTNAME}/readme.txt\"\n+                ;;\n+            *linux*)\n+                cp \"${DISTSRC}/README.md\" \"${DISTNAME}/\"\n+                ;;\n+        esac\n+\n+        # Finally, deterministically produce {non-,}debug binary tarballs ready\n+        # for release\n+        case \"$HOST\" in\n+            *mingw*)\n+                find \"${DISTNAME}\" -not -name \"*.dbg\" -print0 \\\n+                    | xargs -0r touch --no-dereference --date=\"@${SOURCE_DATE_EPOCH}\"\n+                find \"${DISTNAME}\" -not -name \"*.dbg\" \\\n+                    | sort \\\n+                    | zip -X@ \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-w64-mingw32/win64}.zip\" \\\n+                    || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-w64-mingw32/win64}.zip\" && exit 1 )\n+                find \"${DISTNAME}\" -name \"*.dbg\" -print0 \\\n+                    | xargs -0r touch --no-dereference --date=\"@${SOURCE_DATE_EPOCH}\"\n+                find \"${DISTNAME}\" -name \"*.dbg\" \\\n+                    | sort \\\n+                    | zip -X@ \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-w64-mingw32/win64}-debug.zip\" \\\n+                    || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-w64-mingw32/win64}-debug.zip\" && exit 1 )\n+                ;;\n+            *linux*)\n+                find \"${DISTNAME}\" -not -name \"*.dbg\" -print0 \\\n+                    | sort --zero-terminated \\\n+                    | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n+                    | gzip -9n > \"${OUTDIR}/${DISTNAME}-${HOST}.tar.gz\" \\\n+                    || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST}.tar.gz\" && exit 1 )\n+                find \"${DISTNAME}\" -name \"*.dbg\" -print0 \\\n+                    | sort --zero-terminated \\\n+                    | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n+                    | gzip -9n > \"${OUTDIR}/${DISTNAME}-${HOST}-debug.tar.gz\" \\\n+                    || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST}-debug.tar.gz\" && exit 1 )\n+                ;;\n+        esac\n+    )\n+)\n+\n+case \"$HOST\" in\n+    *mingw*)\n+        cp -rf --target-directory=. contrib/windeploy\n+        (\n+            cd ./windeploy\n+            mkdir unsigned\n+            cp --target-directory=unsigned/ \"${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe\"\n+            find . -print0 \\\n+                | sort --zero-terminated \\\n+                | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n+                | gzip -9n > \"${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\" \\\n+                || ( rm -f \"${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\" && exit 1 )\n+        )\n+        ;;\n+esac"
      },
      {
        "sha": "5e011ea1848982e5ce5e2073ff28443b15d4f39c",
        "filename": "contrib/guix/manifest.scm",
        "status": "added",
        "additions": 198,
        "deletions": 0,
        "changes": 198,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/guix/manifest.scm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/guix/manifest.scm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/manifest.scm?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,198 @@\n+(use-modules (gnu)\n+             (gnu packages)\n+             (gnu packages autotools)\n+             (gnu packages base)\n+             (gnu packages bash)\n+             (gnu packages check)\n+             (gnu packages commencement)\n+             (gnu packages compression)\n+             (gnu packages cross-base)\n+             (gnu packages file)\n+             (gnu packages gawk)\n+             (gnu packages gcc)\n+             (gnu packages installers)\n+             (gnu packages linux)\n+             (gnu packages mingw)\n+             (gnu packages perl)\n+             (gnu packages pkg-config)\n+             (gnu packages python)\n+             (gnu packages shells)\n+             (gnu packages version-control)\n+             (guix build-system gnu)\n+             (guix build-system trivial)\n+             (guix gexp)\n+             (guix packages)\n+             (guix profiles)\n+             (guix utils))\n+\n+(define (make-ssp-fixed-gcc xgcc)\n+  \"Given a XGCC package, return a modified package that uses the SSP function\n+from glibc instead of from libssp.so. Our `symbol-check' script will complain if\n+we link against libssp.so, and thus will ensure that this works properly.\n+\n+Taken from:\n+http://www.linuxfromscratch.org/hlfs/view/development/chapter05/gcc-pass1.html\"\n+  (package\n+   (inherit xgcc)\n+   (arguments\n+    (substitute-keyword-arguments (package-arguments xgcc)\n+      ((#:make-flags flags)\n+       `(cons \"gcc_cv_libc_provides_ssp=yes\" ,flags))))))\n+\n+(define (make-gcc-rpath-link xgcc)\n+  \"Given a XGCC package, return a modified package that replace each instance of\n+-rpath in the default system spec that's inserted by Guix with -rpath-link\"\n+  (package\n+   (inherit xgcc)\n+   (arguments\n+    (substitute-keyword-arguments (package-arguments xgcc)\n+      ((#:phases phases)\n+       `(modify-phases ,phases\n+          (add-after 'pre-configure 'replace-rpath-with-rpath-link\n+            (lambda _\n+              (substitute* (cons \"gcc/config/rs6000/sysv4.h\"\n+                                 (find-files \"gcc/config\"\n+                                             \"^gnu-user.*\\\\.h$\"))\n+                ((\"-rpath=\") \"-rpath-link=\"))\n+              #t))))))))\n+\n+(define (make-cross-toolchain target\n+                              base-gcc-for-libc\n+                              base-kernel-headers\n+                              base-libc\n+                              base-gcc)\n+  \"Create a cross-compilation toolchain package for TARGET\"\n+  (let* ((xbinutils (cross-binutils target))\n+         ;; 1. Build a cross-compiling gcc without targeting any libc, derived\n+         ;; from BASE-GCC-FOR-LIBC\n+         (xgcc-sans-libc (cross-gcc target\n+                                    #:xgcc base-gcc-for-libc\n+                                    #:xbinutils xbinutils))\n+         ;; 2. Build cross-compiled kernel headers with XGCC-SANS-LIBC, derived\n+         ;; from BASE-KERNEL-HEADERS\n+         (xkernel (cross-kernel-headers target\n+                                        base-kernel-headers\n+                                        xgcc-sans-libc\n+                                        xbinutils))\n+         ;; 3. Build a cross-compiled libc with XGCC-SANS-LIBC and XKERNEL,\n+         ;; derived from BASE-LIBC\n+         (xlibc (cross-libc target\n+                            base-libc\n+                            xgcc-sans-libc\n+                            xbinutils\n+                            xkernel))\n+         ;; 4. Build a cross-compiling gcc targeting XLIBC, derived from\n+         ;; BASE-GCC\n+         (xgcc (cross-gcc target\n+                          #:xgcc base-gcc\n+                          #:xbinutils xbinutils\n+                          #:libc xlibc)))\n+    ;; Define a meta-package that propagates the resulting XBINUTILS, XLIBC, and\n+    ;; XGCC\n+    (package\n+      (name (string-append target \"-toolchain\"))\n+      (version (package-version xgcc))\n+      (source #f)\n+      (build-system trivial-build-system)\n+      (arguments '(#:builder (begin (mkdir %output) #t)))\n+      (propagated-inputs\n+       `((\"binutils\" ,xbinutils)\n+         (\"libc\" ,xlibc)\n+         (\"libc:static\" ,xlibc \"static\")\n+         (\"gcc\" ,xgcc)))\n+      (synopsis (string-append \"Complete GCC tool chain for \" target))\n+      (description (string-append \"This package provides a complete GCC tool\n+chain for \" target \" development.\"))\n+      (home-page (package-home-page xgcc))\n+      (license (package-license xgcc)))))\n+\n+(define* (make-bitcoin-cross-toolchain target\n+                                  #:key\n+                                  (base-gcc-for-libc gcc-5)\n+                                  (base-kernel-headers linux-libre-headers-4.19)\n+                                  (base-libc glibc-2.27)\n+                                  (base-gcc (make-gcc-rpath-link gcc-9)))\n+  \"Convenience wrapper around MAKE-CROSS-TOOLCHAIN with default values\n+desirable for building Bitcoin Core release binaries.\"\n+  (make-cross-toolchain target\n+                   base-gcc-for-libc\n+                   base-kernel-headers\n+                   base-libc\n+                   base-gcc))\n+\n+(define (make-gcc-with-pthreads gcc)\n+  (package-with-extra-configure-variable gcc \"--enable-threads\" \"posix\"))\n+\n+(define (make-mingw-pthreads-cross-toolchain target)\n+  \"Create a cross-compilation toolchain package for TARGET\"\n+  (let* ((xbinutils (cross-binutils target))\n+         (pthreads-xlibc mingw-w64-x86_64-winpthreads)\n+         (pthreads-xgcc (make-gcc-with-pthreads\n+                         (cross-gcc target\n+                                    #:xgcc (make-ssp-fixed-gcc gcc-9)\n+                                    #:xbinutils xbinutils\n+                                    #:libc pthreads-xlibc))))\n+    ;; Define a meta-package that propagates the resulting XBINUTILS, XLIBC, and\n+    ;; XGCC\n+    (package\n+      (name (string-append target \"-posix-toolchain\"))\n+      (version (package-version pthreads-xgcc))\n+      (source #f)\n+      (build-system trivial-build-system)\n+      (arguments '(#:builder (begin (mkdir %output) #t)))\n+      (propagated-inputs\n+       `((\"binutils\" ,xbinutils)\n+         (\"libc\" ,pthreads-xlibc)\n+         (\"gcc\" ,pthreads-xgcc)))\n+      (synopsis (string-append \"Complete GCC tool chain for \" target))\n+      (description (string-append \"This package provides a complete GCC tool\n+chain for \" target \" development.\"))\n+      (home-page (package-home-page pthreads-xgcc))\n+      (license (package-license pthreads-xgcc)))))\n+\n+\n+(packages->manifest\n+ (append\n+  (list ;; The Basics\n+        bash-minimal\n+        which\n+        coreutils\n+        util-linux\n+        ;; File(system) inspection\n+        file\n+        grep\n+        diffutils\n+        findutils\n+        ;; File transformation\n+        patch\n+        gawk\n+        sed\n+        ;; Compression and archiving\n+        tar\n+        bzip2\n+        gzip\n+        xz\n+        zlib\n+        ;; Build tools\n+        gnu-make\n+        libtool\n+        autoconf\n+        automake\n+        pkg-config\n+        ;; Scripting\n+        perl\n+        python-3.7\n+        ;; Git\n+        git\n+        ;; Native gcc 9 toolchain targeting glibc 2.27\n+        (make-gcc-toolchain gcc-9 glibc-2.27))\n+  (let ((target (getenv \"HOST\")))\n+    (cond ((string-suffix? \"-mingw32\" target)\n+           ;; Windows\n+           (list zip (make-mingw-pthreads-cross-toolchain \"x86_64-w64-mingw32\") nsis-x86_64))\n+          ((string-contains target \"riscv64-linux-\")\n+           (list (make-bitcoin-cross-toolchain \"riscv64-linux-gnu\"\n+                                               #:base-gcc-for-libc gcc-7)))\n+          ((string-contains target \"-linux-\")\n+           (list (make-bitcoin-cross-toolchain target)))\n+          (else '())))))"
      },
      {
        "sha": "306a37f75ab7018b0ce015064a7ae0159fd6e015",
        "filename": "contrib/init/README.md",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,12 @@\n+Sample configuration files for:\n+```\n+SystemD: bitcoind.service\n+Upstart: bitcoind.conf\n+OpenRC:  bitcoind.openrc\n+         bitcoind.openrcconf\n+CentOS:  bitcoind.init\n+macOS:   org.bitcoin.bitcoind.plist\n+```\n+have been made available to assist packagers in creating node packages here.\n+\n+See doc/init.md for more information."
      },
      {
        "sha": "dde1bd0c4d16b7eede11a741b72777a47e0962c7",
        "filename": "contrib/init/bitcoind.conf",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/init/bitcoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/init/bitcoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.conf?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,65 @@\n+description \"Bitcoin Core Daemon\"\n+\n+start on runlevel [2345]\n+stop on starting rc RUNLEVEL=[016]\n+\n+env BITCOIND_BIN=\"/usr/bin/bitcoind\"\n+env BITCOIND_USER=\"bitcoin\"\n+env BITCOIND_GROUP=\"bitcoin\"\n+env BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n+# upstart can't handle variables constructed with other variables\n+env BITCOIND_PIDFILE=\"/var/run/bitcoind/bitcoind.pid\"\n+env BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n+env BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n+\n+expect fork\n+\n+respawn\n+respawn limit 5 120\n+kill timeout 600\n+\n+pre-start script\n+    # this will catch non-existent config files\n+    # bitcoind will check and exit with this very warning, but it can do so\n+    # long after forking, leaving upstart to think everything started fine.\n+    # since this is a commonly encountered case on install, just check and\n+    # warn here.\n+    if ! grep -qs '^rpcpassword=' \"$BITCOIND_CONFIGFILE\" ; then\n+        echo \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n+        echo \"The setting must appear in $BITCOIND_CONFIGFILE\"\n+        echo\n+        echo \"This password is security critical to securing wallets \"\n+        echo \"and must not be the same as the rpcuser setting.\"\n+        echo \"You can generate a suitable random password using the following \"\n+        echo \"command from the shell:\"\n+        echo\n+        echo \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n+        echo\n+        echo \"It is recommended that you also set alertnotify so you are \"\n+        echo \"notified of problems:\"\n+        echo\n+        echo \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n+            \"admin@foo.com\"\n+        echo\n+        exit 1\n+    fi\n+\n+    mkdir -p \"$BITCOIND_PIDDIR\"\n+    chmod 0755 \"$BITCOIND_PIDDIR\"\n+    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_PIDDIR\"\n+    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_CONFIGFILE\"\n+    chmod 0660 \"$BITCOIND_CONFIGFILE\"\n+end script\n+\n+exec start-stop-daemon \\\n+    --start \\\n+    --pidfile \"$BITCOIND_PIDFILE\" \\\n+    --chuid $BITCOIND_USER:$BITCOIND_GROUP \\\n+    --exec \"$BITCOIND_BIN\" \\\n+    -- \\\n+    -pid=\"$BITCOIND_PIDFILE\" \\\n+    -conf=\"$BITCOIND_CONFIGFILE\" \\\n+    -datadir=\"$BITCOIND_DATADIR\" \\\n+    -disablewallet \\\n+    -daemon\n+"
      },
      {
        "sha": "19e1f76d094ce4a17f883fca9bd2b8d12d0f6e8c",
        "filename": "contrib/init/bitcoind.init",
        "status": "added",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/init/bitcoind.init",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/init/bitcoind.init",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.init?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,67 @@\n+#!/usr/bin/env bash\n+#\n+#  bitcoind The bitcoin core server.\n+#\n+#\n+# chkconfig: 345 80 20\n+# description: bitcoind\n+# processname: bitcoind\n+#\n+\n+# Source function library.\n+. /etc/init.d/functions\n+\n+# you can override defaults in /etc/sysconfig/bitcoind, see below\n+if [ -f /etc/sysconfig/bitcoind ]; then\n+        . /etc/sysconfig/bitcoind\n+fi\n+\n+RETVAL=0\n+\n+prog=bitcoind\n+# you can override the lockfile via BITCOIND_LOCKFILE in /etc/sysconfig/bitcoind\n+lockfile=${BITCOIND_LOCKFILE-/var/lock/subsys/bitcoind}\n+\n+# bitcoind defaults to /usr/bin/bitcoind, override with BITCOIND_BIN\n+bitcoind=${BITCOIND_BIN-/usr/bin/bitcoind}\n+\n+# bitcoind opts default to -disablewallet, override with BITCOIND_OPTS\n+bitcoind_opts=${BITCOIND_OPTS--disablewallet}\n+\n+start() {\n+    echo -n $\"Starting $prog: \"\n+    daemon $DAEMONOPTS $bitcoind $bitcoind_opts\n+    RETVAL=$?\n+    echo\n+    [ $RETVAL -eq 0 ] && touch $lockfile\n+    return $RETVAL\n+}\n+\n+stop() {\n+    echo -n $\"Stopping $prog: \"\n+    killproc $prog -t600\n+    RETVAL=$?\n+    echo\n+    [ $RETVAL -eq 0 ] && rm -f $lockfile\n+    return $RETVAL\n+}\n+\n+case \"$1\" in\n+    start)\n+        start\n+        ;;\n+    stop)\n+        stop\n+        ;;\n+    status)\n+        status $prog\n+        ;;\n+    restart)\n+        stop\n+        start\n+        ;;\n+    *)\n+        echo \"Usage: service $prog {start|stop|status|restart}\"\n+        exit 1\n+        ;;\n+esac"
      },
      {
        "sha": "86222295dbe052a5c6455e80dcf830161dccc05f",
        "filename": "contrib/init/bitcoind.openrc",
        "status": "added",
        "additions": 92,
        "deletions": 0,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/init/bitcoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/init/bitcoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrc?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,92 @@\n+#!/sbin/openrc-run\n+\n+# backward compatibility for existing gentoo layout \n+#\n+if [ -d \"/var/lib/bitcoin/.bitcoin\" ]; then\n+\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoin/.bitcoin\"\n+else\n+\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoind\"\n+fi\n+\n+BITCOIND_CONFIGFILE=${BITCOIND_CONFIGFILE:-/etc/bitcoin/bitcoin.conf}\n+BITCOIND_PIDDIR=${BITCOIND_PIDDIR:-/var/run/bitcoind}\n+BITCOIND_PIDFILE=${BITCOIND_PIDFILE:-${BITCOIND_PIDDIR}/bitcoind.pid}\n+BITCOIND_DATADIR=${BITCOIND_DATADIR:-${BITCOIND_DEFAULT_DATADIR}}\n+BITCOIND_USER=${BITCOIND_USER:-${BITCOIN_USER:-bitcoin}}\n+BITCOIND_GROUP=${BITCOIND_GROUP:-bitcoin}\n+BITCOIND_BIN=${BITCOIND_BIN:-/usr/bin/bitcoind}\n+BITCOIND_NICE=${BITCOIND_NICE:-${NICELEVEL:-0}}\n+BITCOIND_OPTS=\"${BITCOIND_OPTS:-${BITCOIN_OPTS}}\"\n+\n+name=\"Bitcoin Core Daemon\"\n+description=\"Bitcoin cryptocurrency P2P network daemon\"\n+\n+command=\"/usr/bin/bitcoind\"\n+command_args=\"-pid=\\\"${BITCOIND_PIDFILE}\\\" \\\n+\t\t-conf=\\\"${BITCOIND_CONFIGFILE}\\\" \\\n+\t\t-datadir=\\\"${BITCOIND_DATADIR}\\\" \\\n+\t\t-daemon \\\n+\t\t${BITCOIND_OPTS}\"\n+\n+required_files=\"${BITCOIND_CONFIGFILE}\"\n+start_stop_daemon_args=\"-u ${BITCOIND_USER} \\\n+\t\t\t-N ${BITCOIND_NICE} -w 2000\"\n+pidfile=\"${BITCOIND_PIDFILE}\"\n+\n+# The retry schedule to use when stopping the daemon. Could be either\n+# a timeout in seconds or multiple signal/timeout pairs (like\n+# \"SIGKILL/180 SIGTERM/300\")\n+retry=\"${BITCOIND_SIGTERM_TIMEOUT}\"\n+\n+depend() {\n+\tneed localmount net\n+}\n+\n+# verify\n+# 1) that the datadir exists and is writable (or create it)\n+# 2) that a directory for the pid exists and is writable\n+# 3) ownership and permissions on the config file\n+start_pre() {\n+\tcheckpath \\\n+\t-d \\\n+\t--mode 0750 \\\n+\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n+\t\"${BITCOIND_DATADIR}\"\n+\n+\tcheckpath \\\n+\t-d \\\n+\t--mode 0755 \\\n+\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n+\t\"${BITCOIND_PIDDIR}\"\n+\n+\tcheckpath -f \\\n+\t-o ${BITCOIND_USER}:${BITCOIND_GROUP} \\\n+\t-m 0660 \\\n+\t${BITCOIND_CONFIGFILE}\n+\n+\tcheckconfig || return 1\n+}\n+\n+checkconfig()\n+{\n+\tif ! grep -qs '^rpcpassword=' \"${BITCOIND_CONFIGFILE}\" ; then\n+\t\teerror \"\"\n+\t\teerror \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n+\t\teerror \"The setting must appear in ${BITCOIND_CONFIGFILE}\"\n+\t\teerror \"\"\n+\t\teerror \"This password is security critical to securing wallets \"\n+\t\teerror \"and must not be the same as the rpcuser setting.\"\n+\t\teerror \"You can generate a suitable random password using the following \"\n+\t\teerror \"command from the shell:\"\n+\t\teerror \"\"\n+\t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n+\t\teerror \"\"\n+\t\teerror \"It is recommended that you also set alertnotify so you are \"\n+\t\teerror \"notified of problems:\"\n+\t\teerror \"\"\n+\t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n+\t\t\t\"admin@foo.com\"\n+\t\teerror \"\"\n+\t\treturn 1\n+\tfi\n+}"
      },
      {
        "sha": "c8a22a08d92419a16f251d1c2b357ca371f68fe5",
        "filename": "contrib/init/bitcoind.openrcconf",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/init/bitcoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/init/bitcoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrcconf?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,33 @@\n+# /etc/conf.d/bitcoind: config file for /etc/init.d/bitcoind\n+\n+# Config file location\n+#BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n+\n+# What directory to write pidfile to?  (created and owned by $BITCOIND_USER)\n+#BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n+\n+# What filename to give the pidfile\n+#BITCOIND_PIDFILE=\"${BITCOIND_PIDDIR}/bitcoind.pid\"\n+\n+# Where to write bitcoind data (be mindful that the blockchain is large)\n+#BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n+\n+# User and group to own bitcoind process\n+#BITCOIND_USER=\"bitcoin\"\n+#BITCOIND_GROUP=\"bitcoin\"\n+\n+# Path to bitcoind executable\n+#BITCOIND_BIN=\"/usr/bin/bitcoind\"\n+\n+# Nice value to run bitcoind under\n+#BITCOIND_NICE=0\n+\n+# Additional options (avoid -conf and -datadir, use flags above)\n+#BITCOIND_OPTS=\"\"\n+\n+# The timeout in seconds OpenRC will wait for bitcoind to terminate\n+# after a SIGTERM has been raised.\n+# Note that this will be mapped as argument to start-stop-daemon's\n+# '--retry' option, which means you can specify a retry schedule\n+# here. For more information see man 8 start-stop-daemon.\n+BITCOIND_SIGTERM_TIMEOUT=600"
      },
      {
        "sha": "8b308644b10611ae4e558e08aa003a3a2e1ad370",
        "filename": "contrib/init/bitcoind.service",
        "status": "added",
        "additions": 77,
        "deletions": 0,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/init/bitcoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/init/bitcoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.service?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,77 @@\n+# It is not recommended to modify this file in-place, because it will\n+# be overwritten during package upgrades. If you want to add further\n+# options or overwrite existing ones then use\n+# $ systemctl edit bitcoind.service\n+# See \"man systemd.service\" for details.\n+\n+# Note that almost all daemon options could be specified in\n+# /etc/bitcoin/bitcoin.conf, but keep in mind those explicitly\n+# specified as arguments in ExecStart= will override those in the\n+# config file.\n+\n+[Unit]\n+Description=Bitcoin daemon\n+After=network.target\n+\n+[Service]\n+ExecStart=/usr/bin/bitcoind -daemon \\\n+                            -pid=/run/bitcoind/bitcoind.pid \\\n+                            -conf=/etc/bitcoin/bitcoin.conf \\\n+                            -datadir=/var/lib/bitcoind\n+\n+# Make sure the config directory is readable by the service user\n+PermissionsStartOnly=true\n+ExecStartPre=/bin/chgrp bitcoin /etc/bitcoin\n+\n+# Process management\n+####################\n+\n+Type=forking\n+PIDFile=/run/bitcoind/bitcoind.pid\n+Restart=on-failure\n+TimeoutStopSec=600\n+\n+# Directory creation and permissions\n+####################################\n+\n+# Run as bitcoin:bitcoin\n+User=bitcoin\n+Group=bitcoin\n+\n+# /run/bitcoind\n+RuntimeDirectory=bitcoind\n+RuntimeDirectoryMode=0710\n+\n+# /etc/bitcoin\n+ConfigurationDirectory=bitcoin\n+ConfigurationDirectoryMode=0710\n+\n+# /var/lib/bitcoind\n+StateDirectory=bitcoind\n+StateDirectoryMode=0710\n+\n+# Hardening measures\n+####################\n+\n+# Provide a private /tmp and /var/tmp.\n+PrivateTmp=true\n+\n+# Mount /usr, /boot/ and /etc read-only for the process.\n+ProtectSystem=full\n+\n+# Deny access to /home, /root and /run/user\n+ProtectHome=true\n+\n+# Disallow the process and all of its children to gain\n+# new privileges through execve().\n+NoNewPrivileges=true\n+\n+# Use a new /dev namespace only populated with API pseudo devices\n+# such as /dev/null, /dev/zero and /dev/random.\n+PrivateDevices=true\n+\n+# Deny the creation of writable and executable memory mappings.\n+MemoryDenyWriteExecute=true\n+\n+[Install]\n+WantedBy=multi-user.target"
      },
      {
        "sha": "e9130a21ded67cbb3a9811f2a27a6affe46d3634",
        "filename": "contrib/install_db4.sh",
        "status": "added",
        "additions": 106,
        "deletions": 0,
        "changes": 106,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/install_db4.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/install_db4.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/install_db4.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,106 @@\n+#!/bin/sh\n+# Copyright (c) 2017-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Install libdb4.8 (Berkeley DB).\n+\n+export LC_ALL=C\n+set -e\n+\n+if [ -z \"${1}\" ]; then\n+  echo \"Usage: $0 <base-dir> [<extra-bdb-configure-flag> ...]\"\n+  echo\n+  echo \"Must specify a single argument: the directory in which db4 will be built.\"\n+  echo \"This is probably \\`pwd\\` if you're at the root of the bitcoin repository.\"\n+  exit 1\n+fi\n+\n+expand_path() {\n+  cd \"${1}\" && pwd -P\n+}\n+\n+BDB_PREFIX=\"$(expand_path ${1})/db4\"; shift;\n+BDB_VERSION='db-4.8.30.NC'\n+BDB_HASH='12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef'\n+BDB_URL=\"https://download.oracle.com/berkeley-db/${BDB_VERSION}.tar.gz\"\n+\n+check_exists() {\n+  command -v \"$1\" >/dev/null\n+}\n+\n+sha256_check() {\n+  # Args: <sha256_hash> <filename>\n+  #\n+  if check_exists sha256sum; then\n+    echo \"${1}  ${2}\" | sha256sum -c\n+  elif check_exists sha256; then\n+    if [ \"$(uname)\" = \"FreeBSD\" ]; then\n+      sha256 -c \"${1}\" \"${2}\"\n+    else\n+      echo \"${1}  ${2}\" | sha256 -c\n+    fi\n+  else\n+    echo \"${1}  ${2}\" | shasum -a 256 -c\n+  fi\n+}\n+\n+http_get() {\n+  # Args: <url> <filename> <sha256_hash>\n+  #\n+  # It's acceptable that we don't require SSL here because we manually verify\n+  # content hashes below.\n+  #\n+  if [ -f \"${2}\" ]; then\n+    echo \"File ${2} already exists; not downloading again\"\n+  elif check_exists curl; then\n+    curl --insecure --retry 5 \"${1}\" -o \"${2}\"\n+  else\n+    wget --no-check-certificate \"${1}\" -O \"${2}\"\n+  fi\n+\n+  sha256_check \"${3}\" \"${2}\"\n+}\n+\n+mkdir -p \"${BDB_PREFIX}\"\n+http_get \"${BDB_URL}\" \"${BDB_VERSION}.tar.gz\" \"${BDB_HASH}\"\n+tar -xzvf ${BDB_VERSION}.tar.gz -C \"$BDB_PREFIX\"\n+cd \"${BDB_PREFIX}/${BDB_VERSION}/\"\n+\n+# Apply a patch necessary when building with clang and c++11 (see https://community.oracle.com/thread/3952592)\n+CLANG_CXX11_PATCH_URL='https://gist.githubusercontent.com/LnL7/5153b251fd525fe15de69b67e63a6075/raw/7778e9364679093a32dec2908656738e16b6bdcb/clang.patch'\n+CLANG_CXX11_PATCH_HASH='7a9a47b03fd5fb93a16ef42235fa9512db9b0829cfc3bdf90edd3ec1f44d637c'\n+http_get \"${CLANG_CXX11_PATCH_URL}\" clang.patch \"${CLANG_CXX11_PATCH_HASH}\"\n+patch -p2 < clang.patch\n+\n+# The packaged config.guess and config.sub are ancient (2009) and can cause build issues.\n+# Replace them with modern versions.\n+# See https://github.com/bitcoin/bitcoin/issues/16064\n+CONFIG_GUESS_URL='https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=55eaf3e779455c4e5cc9f82efb5278be8f8f900b'\n+CONFIG_GUESS_HASH='2d1ff7bca773d2ec3c6217118129220fa72d8adda67c7d2bf79994b3129232c1'\n+CONFIG_SUB_URL='https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=55eaf3e779455c4e5cc9f82efb5278be8f8f900b'\n+CONFIG_SUB_HASH='3a4befde9bcdf0fdb2763fc1bfa74e8696df94e1ad7aac8042d133c8ff1d2e32'\n+\n+rm -f \"dist/config.guess\"\n+rm -f \"dist/config.sub\"\n+\n+http_get \"${CONFIG_GUESS_URL}\" dist/config.guess \"${CONFIG_GUESS_HASH}\"\n+http_get \"${CONFIG_SUB_URL}\" dist/config.sub \"${CONFIG_SUB_HASH}\"\n+\n+cd build_unix/\n+\n+\"${BDB_PREFIX}/${BDB_VERSION}/dist/configure\" \\\n+  --enable-cxx --disable-shared --disable-replication --with-pic --prefix=\"${BDB_PREFIX}\" \\\n+  \"${@}\"\n+\n+make install\n+\n+echo\n+echo \"db4 build complete.\"\n+echo\n+# shellcheck disable=SC2016\n+echo 'When compiling bitcoind, run `./configure` in the following way:'\n+echo\n+echo \"  export BDB_PREFIX='${BDB_PREFIX}'\"\n+# shellcheck disable=SC2016\n+echo '  ./configure BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" ...'"
      },
      {
        "sha": "25a1c7351a297c751d630acd3f97fff6091710c8",
        "filename": "contrib/linearize/README.md",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,54 @@\n+# Linearize\n+Construct a linear, no-fork, best version of the Bitcoin blockchain.\n+\n+## Step 1: Download hash list\n+\n+    $ ./linearize-hashes.py linearize.cfg > hashlist.txt\n+\n+Required configuration file settings for linearize-hashes:\n+* RPC: `datadir` (Required if `rpcuser` and `rpcpassword` are not specified)\n+* RPC: `rpcuser`, `rpcpassword` (Required if `datadir` is not specified)\n+\n+Optional config file setting for linearize-hashes:\n+* RPC: `host`  (Default: `127.0.0.1`)\n+* RPC: `port`  (Default: `8332`)\n+* Blockchain: `min_height`, `max_height`\n+* `rev_hash_bytes`: If true, the written block hash list will be\n+byte-reversed. (In other words, the hash returned by getblockhash will have its\n+bytes reversed.) False by default. Intended for generation of\n+standalone hash lists but safe to use with linearize-data.py, which will output\n+the same data no matter which byte format is chosen.\n+\n+The `linearize-hashes` script requires a connection, local or remote, to a\n+JSON-RPC server. Running `bitcoind` or `bitcoin-qt -server` will be sufficient.\n+\n+## Step 2: Copy local block data\n+\n+    $ ./linearize-data.py linearize.cfg\n+\n+Required configuration file settings:\n+* `output_file`: The file that will contain the final blockchain.\n+      or\n+* `output`: Output directory for linearized `blocks/blkNNNNN.dat` output.\n+\n+Optional config file setting for linearize-data:\n+* `debug_output`: Some printouts may not always be desired. If true, such output\n+will be printed.\n+* `file_timestamp`: Set each file's last-accessed and last-modified times,\n+respectively, to the current time and to the timestamp of the most recent block\n+written to the script's blockchain.\n+* `genesis`: The hash of the genesis block in the blockchain.\n+* `input`: bitcoind blocks/ directory containing blkNNNNN.dat\n+* `hashlist`: text file containing list of block hashes created by\n+linearize-hashes.py.\n+* `max_out_sz`: Maximum size for files created by the `output_file` option.\n+(Default: `1000*1000*1000 bytes`)\n+* `netmagic`: Network magic number.\n+* `out_of_order_cache_sz`: If out-of-order blocks are being read, the block can\n+be written to a cache so that the blockchain doesn't have to be sought again.\n+This option specifies the cache size. (Default: `100*1000*1000 bytes`)\n+* `rev_hash_bytes`: If true, the block hash list written by linearize-hashes.py\n+will be byte-reversed when read by linearize-data.py. See the linearize-hashes\n+entry for more information.\n+* `split_timestamp`: Split blockchain files when a new month is first seen, in\n+addition to reaching a maximum file size (`max_out_sz`)."
      },
      {
        "sha": "5f566261ca6746f15edcf2cf41fb7c46525fa79e",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "added",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,63 @@\n+# bitcoind RPC settings (linearize-hashes)\n+rpcuser=someuser\n+rpcpassword=somepassword\n+#datadir=~/.bitcoin\n+host=127.0.0.1\n+\n+#mainnet default\n+port=8332\n+\n+#testnet default\n+#port=18332\n+\n+#regtest default\n+#port=18443\n+\n+#signet default\n+#port=38332\n+\n+# bootstrap.dat hashlist settings (linearize-hashes)\n+max_height=313000\n+\n+# bootstrap.dat input/output settings (linearize-data)\n+\n+# mainnet\n+netmagic=f9beb4d9\n+genesis=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n+input=/home/example/.bitcoin/blocks\n+\n+# testnet\n+#netmagic=0b110907\n+#genesis=000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\n+#input=/home/example/.bitcoin/testnet3/blocks\n+\n+# regtest\n+#netmagic=fabfb5da\n+#genesis=0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\n+#input=/home/example/.bitcoin/regtest/blocks\n+\n+# signet\n+#netmagic=0a03cf40\n+#genesis=00000008819873e925422c1ff0f99f7cc9bbb232af63a077a480a3633bee1ef6\n+#input=/home/example/.bitcoin/signet/blocks\n+\n+# \"output\" option causes blockchain files to be written to the given location,\n+# with \"output_file\" ignored. If not used, \"output_file\" is used instead.\n+# output=/home/example/blockchain_directory\n+output_file=/home/example/Downloads/bootstrap.dat\n+hashlist=hashlist.txt\n+\n+# Maximum size in bytes of out-of-order blocks cache in memory\n+out_of_order_cache_sz = 100000000\n+\n+# Do we want the reverse the hash bytes coming from getblockhash?\n+rev_hash_bytes = False\n+\n+# On a new month, do we want to set the access and modify times of the new\n+# blockchain file?\n+file_timestamp = 0\n+# Do we want to split the blockchain files given a new month or specific height?\n+split_timestamp = 0\n+\n+# Do we want debug printouts?\n+debug_output = False"
      },
      {
        "sha": "73f54cd4885e0168a900cc3e4663d1790fe1021a",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "added",
        "additions": 350,
        "deletions": 0,
        "changes": 350,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,350 @@\n+#!/usr/bin/env python3\n+#\n+# linearize-data.py: Construct a linear, no-fork version of the chain.\n+#\n+# Copyright (c) 2013-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+import struct\n+import re\n+import os\n+import os.path\n+import sys\n+import hashlib\n+import datetime\n+import time\n+import glob\n+from collections import namedtuple\n+from binascii import unhexlify\n+\n+settings = {}\n+\n+def hex_switchEndian(s):\n+    \"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n+    pairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n+    return b''.join(pairList[::-1]).decode()\n+\n+def uint32(x):\n+    return x & 0xffffffff\n+\n+def bytereverse(x):\n+    return uint32(( ((x) << 24) | (((x) << 8) & 0x00ff0000) |\n+               (((x) >> 8) & 0x0000ff00) | ((x) >> 24) ))\n+\n+def bufreverse(in_buf):\n+    out_words = []\n+    for i in range(0, len(in_buf), 4):\n+        word = struct.unpack('@I', in_buf[i:i+4])[0]\n+        out_words.append(struct.pack('@I', bytereverse(word)))\n+    return b''.join(out_words)\n+\n+def wordreverse(in_buf):\n+    out_words = []\n+    for i in range(0, len(in_buf), 4):\n+        out_words.append(in_buf[i:i+4])\n+    out_words.reverse()\n+    return b''.join(out_words)\n+\n+def calc_hdr_hash(blk_hdr):\n+    hash1 = hashlib.sha256()\n+    hash1.update(blk_hdr)\n+    hash1_o = hash1.digest()\n+\n+    hash2 = hashlib.sha256()\n+    hash2.update(hash1_o)\n+    hash2_o = hash2.digest()\n+\n+    return hash2_o\n+\n+def calc_hash_str(blk_hdr):\n+    hash = calc_hdr_hash(blk_hdr)\n+    hash = bufreverse(hash)\n+    hash = wordreverse(hash)\n+    hash_str = hash.hex()\n+    return hash_str\n+\n+def get_blk_dt(blk_hdr):\n+    members = struct.unpack(\"<I\", blk_hdr[68:68+4])\n+    nTime = members[0]\n+    dt = datetime.datetime.fromtimestamp(nTime)\n+    dt_ym = datetime.datetime(dt.year, dt.month, 1)\n+    return (dt_ym, nTime)\n+\n+# When getting the list of block hashes, undo any byte reversals.\n+def get_block_hashes(settings):\n+    blkindex = []\n+    f = open(settings['hashlist'], \"r\", encoding=\"utf8\")\n+    for line in f:\n+        line = line.rstrip()\n+        if settings['rev_hash_bytes'] == 'true':\n+            line = hex_switchEndian(line)\n+        blkindex.append(line)\n+\n+    print(\"Read \" + str(len(blkindex)) + \" hashes\")\n+\n+    return blkindex\n+\n+# The block map shouldn't give or receive byte-reversed hashes.\n+def mkblockmap(blkindex):\n+    blkmap = {}\n+    for height,hash in enumerate(blkindex):\n+        blkmap[hash] = height\n+    return blkmap\n+\n+# This gets the first block file ID that exists from the input block\n+# file directory.\n+def getFirstBlockFileId(block_dir_path):\n+    # First, this sets up a pattern to search for block files, for\n+    # example 'blkNNNNN.dat'.\n+    blkFilePattern = os.path.join(block_dir_path, \"blk[0-9][0-9][0-9][0-9][0-9].dat\")\n+\n+    # This search is done with glob\n+    blkFnList = glob.glob(blkFilePattern)\n+\n+    if len(blkFnList) == 0:\n+        print(\"blocks not pruned - starting at 0\")\n+        return 0\n+    # We then get the lexicographic minimum, which should be the first\n+    # block file name.\n+    firstBlkFilePath = min(blkFnList)\n+    firstBlkFn = os.path.basename(firstBlkFilePath)\n+\n+    # now, the string should be ['b','l','k','N','N','N','N','N','.','d','a','t']\n+    # So get the ID by choosing:              3   4   5   6   7\n+    # The ID is not necessarily 0 if this is a pruned node.\n+    blkId = int(firstBlkFn[3:8])\n+    return blkId\n+\n+# Block header and extent on disk\n+BlockExtent = namedtuple('BlockExtent', ['fn', 'offset', 'inhdr', 'blkhdr', 'size'])\n+\n+class BlockDataCopier:\n+    def __init__(self, settings, blkindex, blkmap):\n+        self.settings = settings\n+        self.blkindex = blkindex\n+        self.blkmap = blkmap\n+\n+        # Get first occurring block file id - for pruned nodes this\n+        # will not necessarily be 0\n+        self.inFn = getFirstBlockFileId(self.settings['input'])\n+        self.inF = None\n+        self.outFn = 0\n+        self.outsz = 0\n+        self.outF = None\n+        self.outFname = None\n+        self.blkCountIn = 0\n+        self.blkCountOut = 0\n+\n+        self.lastDate = datetime.datetime(2000, 1, 1)\n+        self.highTS = 1408893517 - 315360000\n+        self.timestampSplit = False\n+        self.fileOutput = True\n+        self.setFileTime = False\n+        self.maxOutSz = settings['max_out_sz']\n+        if 'output' in settings:\n+            self.fileOutput = False\n+        if settings['file_timestamp'] != 0:\n+            self.setFileTime = True\n+        if settings['split_timestamp'] != 0:\n+            self.timestampSplit = True\n+        # Extents and cache for out-of-order blocks\n+        self.blockExtents = {}\n+        self.outOfOrderData = {}\n+        self.outOfOrderSize = 0 # running total size for items in outOfOrderData\n+\n+    def writeBlock(self, inhdr, blk_hdr, rawblock):\n+        blockSizeOnDisk = len(inhdr) + len(blk_hdr) + len(rawblock)\n+        if not self.fileOutput and ((self.outsz + blockSizeOnDisk) > self.maxOutSz):\n+            self.outF.close()\n+            if self.setFileTime:\n+                os.utime(self.outFname, (int(time.time()), self.highTS))\n+            self.outF = None\n+            self.outFname = None\n+            self.outFn = self.outFn + 1\n+            self.outsz = 0\n+\n+        (blkDate, blkTS) = get_blk_dt(blk_hdr)\n+        if self.timestampSplit and (blkDate > self.lastDate):\n+            print(\"New month \" + blkDate.strftime(\"%Y-%m\") + \" @ \" + self.hash_str)\n+            self.lastDate = blkDate\n+            if self.outF:\n+                self.outF.close()\n+                if self.setFileTime:\n+                    os.utime(self.outFname, (int(time.time()), self.highTS))\n+                self.outF = None\n+                self.outFname = None\n+                self.outFn = self.outFn + 1\n+                self.outsz = 0\n+\n+        if not self.outF:\n+            if self.fileOutput:\n+                self.outFname = self.settings['output_file']\n+            else:\n+                self.outFname = os.path.join(self.settings['output'], \"blk%05d.dat\" % self.outFn)\n+            print(\"Output file \" + self.outFname)\n+            self.outF = open(self.outFname, \"wb\")\n+\n+        self.outF.write(inhdr)\n+        self.outF.write(blk_hdr)\n+        self.outF.write(rawblock)\n+        self.outsz = self.outsz + len(inhdr) + len(blk_hdr) + len(rawblock)\n+\n+        self.blkCountOut = self.blkCountOut + 1\n+        if blkTS > self.highTS:\n+            self.highTS = blkTS\n+\n+        if (self.blkCountOut % 1000) == 0:\n+            print('%i blocks scanned, %i blocks written (of %i, %.1f%% complete)' %\n+                    (self.blkCountIn, self.blkCountOut, len(self.blkindex), 100.0 * self.blkCountOut / len(self.blkindex)))\n+\n+    def inFileName(self, fn):\n+        return os.path.join(self.settings['input'], \"blk%05d.dat\" % fn)\n+\n+    def fetchBlock(self, extent):\n+        '''Fetch block contents from disk given extents'''\n+        with open(self.inFileName(extent.fn), \"rb\") as f:\n+            f.seek(extent.offset)\n+            return f.read(extent.size)\n+\n+    def copyOneBlock(self):\n+        '''Find the next block to be written in the input, and copy it to the output.'''\n+        extent = self.blockExtents.pop(self.blkCountOut)\n+        if self.blkCountOut in self.outOfOrderData:\n+            # If the data is cached, use it from memory and remove from the cache\n+            rawblock = self.outOfOrderData.pop(self.blkCountOut)\n+            self.outOfOrderSize -= len(rawblock)\n+        else: # Otherwise look up data on disk\n+            rawblock = self.fetchBlock(extent)\n+\n+        self.writeBlock(extent.inhdr, extent.blkhdr, rawblock)\n+\n+    def run(self):\n+        while self.blkCountOut < len(self.blkindex):\n+            if not self.inF:\n+                fname = self.inFileName(self.inFn)\n+                print(\"Input file \" + fname)\n+                try:\n+                    self.inF = open(fname, \"rb\")\n+                except IOError:\n+                    print(\"Premature end of block data\")\n+                    return\n+\n+            inhdr = self.inF.read(8)\n+            if (not inhdr or (inhdr[0] == \"\\0\")):\n+                self.inF.close()\n+                self.inF = None\n+                self.inFn = self.inFn + 1\n+                continue\n+\n+            inMagic = inhdr[:4]\n+            if (inMagic != self.settings['netmagic']):\n+                # Seek backwards 7 bytes (skipping the first byte in the previous search)\n+                # and continue searching from the new position if the magic bytes are not\n+                # found.\n+                self.inF.seek(-7, os.SEEK_CUR)\n+                continue\n+            inLenLE = inhdr[4:]\n+            su = struct.unpack(\"<I\", inLenLE)\n+            inLen = su[0] - 80 # length without header\n+            blk_hdr = self.inF.read(80)\n+            inExtent = BlockExtent(self.inFn, self.inF.tell(), inhdr, blk_hdr, inLen)\n+\n+            self.hash_str = calc_hash_str(blk_hdr)\n+            if not self.hash_str in blkmap:\n+                # Because blocks can be written to files out-of-order as of 0.10, the script\n+                # may encounter blocks it doesn't know about. Treat as debug output.\n+                if settings['debug_output'] == 'true':\n+                    print(\"Skipping unknown block \" + self.hash_str)\n+                self.inF.seek(inLen, os.SEEK_CUR)\n+                continue\n+\n+            blkHeight = self.blkmap[self.hash_str]\n+            self.blkCountIn += 1\n+\n+            if self.blkCountOut == blkHeight:\n+                # If in-order block, just copy\n+                rawblock = self.inF.read(inLen)\n+                self.writeBlock(inhdr, blk_hdr, rawblock)\n+\n+                # See if we can catch up to prior out-of-order blocks\n+                while self.blkCountOut in self.blockExtents:\n+                    self.copyOneBlock()\n+\n+            else: # If out-of-order, skip over block data for now\n+                self.blockExtents[blkHeight] = inExtent\n+                if self.outOfOrderSize < self.settings['out_of_order_cache_sz']:\n+                    # If there is space in the cache, read the data\n+                    # Reading the data in file sequence instead of seeking and fetching it later is preferred,\n+                    # but we don't want to fill up memory\n+                    self.outOfOrderData[blkHeight] = self.inF.read(inLen)\n+                    self.outOfOrderSize += inLen\n+                else: # If no space in cache, seek forward\n+                    self.inF.seek(inLen, os.SEEK_CUR)\n+\n+        print(\"Done (%i blocks written)\" % (self.blkCountOut))\n+\n+if __name__ == '__main__':\n+    if len(sys.argv) != 2:\n+        print(\"Usage: linearize-data.py CONFIG-FILE\")\n+        sys.exit(1)\n+\n+    f = open(sys.argv[1], encoding=\"utf8\")\n+    for line in f:\n+        # skip comment lines\n+        m = re.search(r'^\\s*#', line)\n+        if m:\n+            continue\n+\n+        # parse key=value lines\n+        m = re.search(r'^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+        if m is None:\n+            continue\n+        settings[m.group(1)] = m.group(2)\n+    f.close()\n+\n+    # Force hash byte format setting to be lowercase to make comparisons easier.\n+    # Also place upfront in case any settings need to know about it.\n+    if 'rev_hash_bytes' not in settings:\n+        settings['rev_hash_bytes'] = 'false'\n+    settings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n+\n+    if 'netmagic' not in settings:\n+        settings['netmagic'] = 'f9beb4d9'\n+    if 'genesis' not in settings:\n+        settings['genesis'] = '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f'\n+    if 'input' not in settings:\n+        settings['input'] = 'input'\n+    if 'hashlist' not in settings:\n+        settings['hashlist'] = 'hashlist.txt'\n+    if 'file_timestamp' not in settings:\n+        settings['file_timestamp'] = 0\n+    if 'split_timestamp' not in settings:\n+        settings['split_timestamp'] = 0\n+    if 'max_out_sz' not in settings:\n+        settings['max_out_sz'] = 1000 * 1000 * 1000\n+    if 'out_of_order_cache_sz' not in settings:\n+        settings['out_of_order_cache_sz'] = 100 * 1000 * 1000\n+    if 'debug_output' not in settings:\n+        settings['debug_output'] = 'false'\n+\n+    settings['max_out_sz'] = int(settings['max_out_sz'])\n+    settings['split_timestamp'] = int(settings['split_timestamp'])\n+    settings['file_timestamp'] = int(settings['file_timestamp'])\n+    settings['netmagic'] = unhexlify(settings['netmagic'].encode('utf-8'))\n+    settings['out_of_order_cache_sz'] = int(settings['out_of_order_cache_sz'])\n+    settings['debug_output'] = settings['debug_output'].lower()\n+\n+    if 'output_file' not in settings and 'output' not in settings:\n+        print(\"Missing output file / directory\")\n+        sys.exit(1)\n+\n+    blkindex = get_block_hashes(settings)\n+    blkmap = mkblockmap(blkindex)\n+\n+    # Block hash map won't be byte-reversed. Neither should the genesis hash.\n+    if not settings['genesis'] in blkmap:\n+        print(\"Genesis block not found in hashlist\")\n+    else:\n+        BlockDataCopier(settings, blkindex, blkmap).run()"
      },
      {
        "sha": "fed6e665b8c934e26729f5cfe192f95f27870754",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "added",
        "additions": 152,
        "deletions": 0,
        "changes": 152,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,152 @@\n+#!/usr/bin/env python3\n+#\n+# linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n+#\n+# Copyright (c) 2013-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+from http.client import HTTPConnection\n+import json\n+import re\n+import base64\n+import sys\n+import os\n+import os.path\n+\n+settings = {}\n+\n+def hex_switchEndian(s):\n+    \"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n+    pairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n+    return b''.join(pairList[::-1]).decode()\n+\n+class BitcoinRPC:\n+    def __init__(self, host, port, username, password):\n+        authpair = \"%s:%s\" % (username, password)\n+        authpair = authpair.encode('utf-8')\n+        self.authhdr = b\"Basic \" + base64.b64encode(authpair)\n+        self.conn = HTTPConnection(host, port=port, timeout=30)\n+\n+    def execute(self, obj):\n+        try:\n+            self.conn.request('POST', '/', json.dumps(obj),\n+                { 'Authorization' : self.authhdr,\n+                  'Content-type' : 'application/json' })\n+        except ConnectionRefusedError:\n+            print('RPC connection refused. Check RPC settings and the server status.',\n+                  file=sys.stderr)\n+            return None\n+\n+        resp = self.conn.getresponse()\n+        if resp is None:\n+            print(\"JSON-RPC: no response\", file=sys.stderr)\n+            return None\n+\n+        body = resp.read().decode('utf-8')\n+        resp_obj = json.loads(body)\n+        return resp_obj\n+\n+    @staticmethod\n+    def build_request(idx, method, params):\n+        obj = { 'version' : '1.1',\n+            'method' : method,\n+            'id' : idx }\n+        if params is None:\n+            obj['params'] = []\n+        else:\n+            obj['params'] = params\n+        return obj\n+\n+    @staticmethod\n+    def response_is_error(resp_obj):\n+        return 'error' in resp_obj and resp_obj['error'] is not None\n+\n+def get_block_hashes(settings, max_blocks_per_call=10000):\n+    rpc = BitcoinRPC(settings['host'], settings['port'],\n+             settings['rpcuser'], settings['rpcpassword'])\n+\n+    height = settings['min_height']\n+    while height < settings['max_height']+1:\n+        num_blocks = min(settings['max_height']+1-height, max_blocks_per_call)\n+        batch = []\n+        for x in range(num_blocks):\n+            batch.append(rpc.build_request(x, 'getblockhash', [height + x]))\n+\n+        reply = rpc.execute(batch)\n+        if reply is None:\n+            print('Cannot continue. Program will halt.')\n+            return None\n+\n+        for x,resp_obj in enumerate(reply):\n+            if rpc.response_is_error(resp_obj):\n+                print('JSON-RPC: error at height', height+x, ': ', resp_obj['error'], file=sys.stderr)\n+                sys.exit(1)\n+            assert(resp_obj['id'] == x) # assume replies are in-sequence\n+            if settings['rev_hash_bytes'] == 'true':\n+                resp_obj['result'] = hex_switchEndian(resp_obj['result'])\n+            print(resp_obj['result'])\n+\n+        height += num_blocks\n+\n+def get_rpc_cookie():\n+    # Open the cookie file\n+    with open(os.path.join(os.path.expanduser(settings['datadir']), '.cookie'), 'r', encoding=\"ascii\") as f:\n+        combined = f.readline()\n+        combined_split = combined.split(\":\")\n+        settings['rpcuser'] = combined_split[0]\n+        settings['rpcpassword'] = combined_split[1]\n+\n+if __name__ == '__main__':\n+    if len(sys.argv) != 2:\n+        print(\"Usage: linearize-hashes.py CONFIG-FILE\")\n+        sys.exit(1)\n+\n+    f = open(sys.argv[1], encoding=\"utf8\")\n+    for line in f:\n+        # skip comment lines\n+        m = re.search(r'^\\s*#', line)\n+        if m:\n+            continue\n+\n+        # parse key=value lines\n+        m = re.search(r'^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+        if m is None:\n+            continue\n+        settings[m.group(1)] = m.group(2)\n+    f.close()\n+\n+    if 'host' not in settings:\n+        settings['host'] = '127.0.0.1'\n+    if 'port' not in settings:\n+        settings['port'] = 8332\n+    if 'min_height' not in settings:\n+        settings['min_height'] = 0\n+    if 'max_height' not in settings:\n+        settings['max_height'] = 313000\n+    if 'rev_hash_bytes' not in settings:\n+        settings['rev_hash_bytes'] = 'false'\n+\n+    use_userpass = True\n+    use_datadir = False\n+    if 'rpcuser' not in settings or 'rpcpassword' not in settings:\n+        use_userpass = False\n+    if 'datadir' in settings and not use_userpass:\n+        use_datadir = True\n+    if not use_userpass and not use_datadir:\n+        print(\"Missing datadir or username and/or password in cfg file\", file=sys.stderr)\n+        sys.exit(1)\n+\n+    settings['port'] = int(settings['port'])\n+    settings['min_height'] = int(settings['min_height'])\n+    settings['max_height'] = int(settings['max_height'])\n+\n+    # Force hash byte format setting to be lowercase to make comparisons easier.\n+    settings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n+\n+    # Get the rpc user and pass from the cookie if the datadir is set\n+    if use_datadir:\n+        get_rpc_cookie()\n+\n+    get_block_hashes(settings)"
      },
      {
        "sha": "94a9ed024d3859793618152ea559a168bbcbb5e2",
        "filename": "contrib/macdeploy/LICENSE",
        "status": "added",
        "additions": 674,
        "deletions": 0,
        "changes": 674,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/macdeploy/LICENSE",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/macdeploy/LICENSE",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/LICENSE?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,674 @@\n+                    GNU GENERAL PUBLIC LICENSE\n+                       Version 3, 29 June 2007\n+\n+ Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n+ Everyone is permitted to copy and distribute verbatim copies\n+ of this license document, but changing it is not allowed.\n+\n+                            Preamble\n+\n+  The GNU General Public License is a free, copyleft license for\n+software and other kinds of works.\n+\n+  The licenses for most software and other practical works are designed\n+to take away your freedom to share and change the works.  By contrast,\n+the GNU General Public License is intended to guarantee your freedom to\n+share and change all versions of a program--to make sure it remains free\n+software for all its users.  We, the Free Software Foundation, use the\n+GNU General Public License for most of our software; it applies also to\n+any other work released this way by its authors.  You can apply it to\n+your programs, too.\n+\n+  When we speak of free software, we are referring to freedom, not\n+price.  Our General Public Licenses are designed to make sure that you\n+have the freedom to distribute copies of free software (and charge for\n+them if you wish), that you receive source code or can get it if you\n+want it, that you can change the software or use pieces of it in new\n+free programs, and that you know you can do these things.\n+\n+  To protect your rights, we need to prevent others from denying you\n+these rights or asking you to surrender the rights.  Therefore, you have\n+certain responsibilities if you distribute copies of the software, or if\n+you modify it: responsibilities to respect the freedom of others.\n+\n+  For example, if you distribute copies of such a program, whether\n+gratis or for a fee, you must pass on to the recipients the same\n+freedoms that you received.  You must make sure that they, too, receive\n+or can get the source code.  And you must show them these terms so they\n+know their rights.\n+\n+  Developers that use the GNU GPL protect your rights with two steps:\n+(1) assert copyright on the software, and (2) offer you this License\n+giving you legal permission to copy, distribute and/or modify it.\n+\n+  For the developers' and authors' protection, the GPL clearly explains\n+that there is no warranty for this free software.  For both users' and\n+authors' sake, the GPL requires that modified versions be marked as\n+changed, so that their problems will not be attributed erroneously to\n+authors of previous versions.\n+\n+  Some devices are designed to deny users access to install or run\n+modified versions of the software inside them, although the manufacturer\n+can do so.  This is fundamentally incompatible with the aim of\n+protecting users' freedom to change the software.  The systematic\n+pattern of such abuse occurs in the area of products for individuals to\n+use, which is precisely where it is most unacceptable.  Therefore, we\n+have designed this version of the GPL to prohibit the practice for those\n+products.  If such problems arise substantially in other domains, we\n+stand ready to extend this provision to those domains in future versions\n+of the GPL, as needed to protect the freedom of users.\n+\n+  Finally, every program is threatened constantly by software patents.\n+States should not allow patents to restrict development and use of\n+software on general-purpose computers, but in those that do, we wish to\n+avoid the special danger that patents applied to a free program could\n+make it effectively proprietary.  To prevent this, the GPL assures that\n+patents cannot be used to render the program non-free.\n+\n+  The precise terms and conditions for copying, distribution and\n+modification follow.\n+\n+                       TERMS AND CONDITIONS\n+\n+  0. Definitions.\n+\n+  \"This License\" refers to version 3 of the GNU General Public License.\n+\n+  \"Copyright\" also means copyright-like laws that apply to other kinds of\n+works, such as semiconductor masks.\n+\n+  \"The Program\" refers to any copyrightable work licensed under this\n+License.  Each licensee is addressed as \"you\".  \"Licensees\" and\n+\"recipients\" may be individuals or organizations.\n+\n+  To \"modify\" a work means to copy from or adapt all or part of the work\n+in a fashion requiring copyright permission, other than the making of an\n+exact copy.  The resulting work is called a \"modified version\" of the\n+earlier work or a work \"based on\" the earlier work.\n+\n+  A \"covered work\" means either the unmodified Program or a work based\n+on the Program.\n+\n+  To \"propagate\" a work means to do anything with it that, without\n+permission, would make you directly or secondarily liable for\n+infringement under applicable copyright law, except executing it on a\n+computer or modifying a private copy.  Propagation includes copying,\n+distribution (with or without modification), making available to the\n+public, and in some countries other activities as well.\n+\n+  To \"convey\" a work means any kind of propagation that enables other\n+parties to make or receive copies.  Mere interaction with a user through\n+a computer network, with no transfer of a copy, is not conveying.\n+\n+  An interactive user interface displays \"Appropriate Legal Notices\"\n+to the extent that it includes a convenient and prominently visible\n+feature that (1) displays an appropriate copyright notice, and (2)\n+tells the user that there is no warranty for the work (except to the\n+extent that warranties are provided), that licensees may convey the\n+work under this License, and how to view a copy of this License.  If\n+the interface presents a list of user commands or options, such as a\n+menu, a prominent item in the list meets this criterion.\n+\n+  1. Source Code.\n+\n+  The \"source code\" for a work means the preferred form of the work\n+for making modifications to it.  \"Object code\" means any non-source\n+form of a work.\n+\n+  A \"Standard Interface\" means an interface that either is an official\n+standard defined by a recognized standards body, or, in the case of\n+interfaces specified for a particular programming language, one that\n+is widely used among developers working in that language.\n+\n+  The \"System Libraries\" of an executable work include anything, other\n+than the work as a whole, that (a) is included in the normal form of\n+packaging a Major Component, but which is not part of that Major\n+Component, and (b) serves only to enable use of the work with that\n+Major Component, or to implement a Standard Interface for which an\n+implementation is available to the public in source code form.  A\n+\"Major Component\", in this context, means a major essential component\n+(kernel, window system, and so on) of the specific operating system\n+(if any) on which the executable work runs, or a compiler used to\n+produce the work, or an object code interpreter used to run it.\n+\n+  The \"Corresponding Source\" for a work in object code form means all\n+the source code needed to generate, install, and (for an executable\n+work) run the object code and to modify the work, including scripts to\n+control those activities.  However, it does not include the work's\n+System Libraries, or general-purpose tools or generally available free\n+programs which are used unmodified in performing those activities but\n+which are not part of the work.  For example, Corresponding Source\n+includes interface definition files associated with source files for\n+the work, and the source code for shared libraries and dynamically\n+linked subprograms that the work is specifically designed to require,\n+such as by intimate data communication or control flow between those\n+subprograms and other parts of the work.\n+\n+  The Corresponding Source need not include anything that users\n+can regenerate automatically from other parts of the Corresponding\n+Source.\n+\n+  The Corresponding Source for a work in source code form is that\n+same work.\n+\n+  2. Basic Permissions.\n+\n+  All rights granted under this License are granted for the term of\n+copyright on the Program, and are irrevocable provided the stated\n+conditions are met.  This License explicitly affirms your unlimited\n+permission to run the unmodified Program.  The output from running a\n+covered work is covered by this License only if the output, given its\n+content, constitutes a covered work.  This License acknowledges your\n+rights of fair use or other equivalent, as provided by copyright law.\n+\n+  You may make, run and propagate covered works that you do not\n+convey, without conditions so long as your license otherwise remains\n+in force.  You may convey covered works to others for the sole purpose\n+of having them make modifications exclusively for you, or provide you\n+with facilities for running those works, provided that you comply with\n+the terms of this License in conveying all material for which you do\n+not control copyright.  Those thus making or running the covered works\n+for you must do so exclusively on your behalf, under your direction\n+and control, on terms that prohibit them from making any copies of\n+your copyrighted material outside their relationship with you.\n+\n+  Conveying under any other circumstances is permitted solely under\n+the conditions stated below.  Sublicensing is not allowed; section 10\n+makes it unnecessary.\n+\n+  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n+\n+  No covered work shall be deemed part of an effective technological\n+measure under any applicable law fulfilling obligations under article\n+11 of the WIPO copyright treaty adopted on 20 December 1996, or\n+similar laws prohibiting or restricting circumvention of such\n+measures.\n+\n+  When you convey a covered work, you waive any legal power to forbid\n+circumvention of technological measures to the extent such circumvention\n+is effected by exercising rights under this License with respect to\n+the covered work, and you disclaim any intention to limit operation or\n+modification of the work as a means of enforcing, against the work's\n+users, your or third parties' legal rights to forbid circumvention of\n+technological measures.\n+\n+  4. Conveying Verbatim Copies.\n+\n+  You may convey verbatim copies of the Program's source code as you\n+receive it, in any medium, provided that you conspicuously and\n+appropriately publish on each copy an appropriate copyright notice;\n+keep intact all notices stating that this License and any\n+non-permissive terms added in accord with section 7 apply to the code;\n+keep intact all notices of the absence of any warranty; and give all\n+recipients a copy of this License along with the Program.\n+\n+  You may charge any price or no price for each copy that you convey,\n+and you may offer support or warranty protection for a fee.\n+\n+  5. Conveying Modified Source Versions.\n+\n+  You may convey a work based on the Program, or the modifications to\n+produce it from the Program, in the form of source code under the\n+terms of section 4, provided that you also meet all of these conditions:\n+\n+    a) The work must carry prominent notices stating that you modified\n+    it, and giving a relevant date.\n+\n+    b) The work must carry prominent notices stating that it is\n+    released under this License and any conditions added under section\n+    7.  This requirement modifies the requirement in section 4 to\n+    \"keep intact all notices\".\n+\n+    c) You must license the entire work, as a whole, under this\n+    License to anyone who comes into possession of a copy.  This\n+    License will therefore apply, along with any applicable section 7\n+    additional terms, to the whole of the work, and all its parts,\n+    regardless of how they are packaged.  This License gives no\n+    permission to license the work in any other way, but it does not\n+    invalidate such permission if you have separately received it.\n+\n+    d) If the work has interactive user interfaces, each must display\n+    Appropriate Legal Notices; however, if the Program has interactive\n+    interfaces that do not display Appropriate Legal Notices, your\n+    work need not make them do so.\n+\n+  A compilation of a covered work with other separate and independent\n+works, which are not by their nature extensions of the covered work,\n+and which are not combined with it such as to form a larger program,\n+in or on a volume of a storage or distribution medium, is called an\n+\"aggregate\" if the compilation and its resulting copyright are not\n+used to limit the access or legal rights of the compilation's users\n+beyond what the individual works permit.  Inclusion of a covered work\n+in an aggregate does not cause this License to apply to the other\n+parts of the aggregate.\n+\n+  6. Conveying Non-Source Forms.\n+\n+  You may convey a covered work in object code form under the terms\n+of sections 4 and 5, provided that you also convey the\n+machine-readable Corresponding Source under the terms of this License,\n+in one of these ways:\n+\n+    a) Convey the object code in, or embodied in, a physical product\n+    (including a physical distribution medium), accompanied by the\n+    Corresponding Source fixed on a durable physical medium\n+    customarily used for software interchange.\n+\n+    b) Convey the object code in, or embodied in, a physical product\n+    (including a physical distribution medium), accompanied by a\n+    written offer, valid for at least three years and valid for as\n+    long as you offer spare parts or customer support for that product\n+    model, to give anyone who possesses the object code either (1) a\n+    copy of the Corresponding Source for all the software in the\n+    product that is covered by this License, on a durable physical\n+    medium customarily used for software interchange, for a price no\n+    more than your reasonable cost of physically performing this\n+    conveying of source, or (2) access to copy the\n+    Corresponding Source from a network server at no charge.\n+\n+    c) Convey individual copies of the object code with a copy of the\n+    written offer to provide the Corresponding Source.  This\n+    alternative is allowed only occasionally and noncommercially, and\n+    only if you received the object code with such an offer, in accord\n+    with subsection 6b.\n+\n+    d) Convey the object code by offering access from a designated\n+    place (gratis or for a charge), and offer equivalent access to the\n+    Corresponding Source in the same way through the same place at no\n+    further charge.  You need not require recipients to copy the\n+    Corresponding Source along with the object code.  If the place to\n+    copy the object code is a network server, the Corresponding Source\n+    may be on a different server (operated by you or a third party)\n+    that supports equivalent copying facilities, provided you maintain\n+    clear directions next to the object code saying where to find the\n+    Corresponding Source.  Regardless of what server hosts the\n+    Corresponding Source, you remain obligated to ensure that it is\n+    available for as long as needed to satisfy these requirements.\n+\n+    e) Convey the object code using peer-to-peer transmission, provided\n+    you inform other peers where the object code and Corresponding\n+    Source of the work are being offered to the general public at no\n+    charge under subsection 6d.\n+\n+  A separable portion of the object code, whose source code is excluded\n+from the Corresponding Source as a System Library, need not be\n+included in conveying the object code work.\n+\n+  A \"User Product\" is either (1) a \"consumer product\", which means any\n+tangible personal property which is normally used for personal, family,\n+or household purposes, or (2) anything designed or sold for incorporation\n+into a dwelling.  In determining whether a product is a consumer product,\n+doubtful cases shall be resolved in favor of coverage.  For a particular\n+product received by a particular user, \"normally used\" refers to a\n+typical or common use of that class of product, regardless of the status\n+of the particular user or of the way in which the particular user\n+actually uses, or expects or is expected to use, the product.  A product\n+is a consumer product regardless of whether the product has substantial\n+commercial, industrial or non-consumer uses, unless such uses represent\n+the only significant mode of use of the product.\n+\n+  \"Installation Information\" for a User Product means any methods,\n+procedures, authorization keys, or other information required to install\n+and execute modified versions of a covered work in that User Product from\n+a modified version of its Corresponding Source.  The information must\n+suffice to ensure that the continued functioning of the modified object\n+code is in no case prevented or interfered with solely because\n+modification has been made.\n+\n+  If you convey an object code work under this section in, or with, or\n+specifically for use in, a User Product, and the conveying occurs as\n+part of a transaction in which the right of possession and use of the\n+User Product is transferred to the recipient in perpetuity or for a\n+fixed term (regardless of how the transaction is characterized), the\n+Corresponding Source conveyed under this section must be accompanied\n+by the Installation Information.  But this requirement does not apply\n+if neither you nor any third party retains the ability to install\n+modified object code on the User Product (for example, the work has\n+been installed in ROM).\n+\n+  The requirement to provide Installation Information does not include a\n+requirement to continue to provide support service, warranty, or updates\n+for a work that has been modified or installed by the recipient, or for\n+the User Product in which it has been modified or installed.  Access to a\n+network may be denied when the modification itself materially and\n+adversely affects the operation of the network or violates the rules and\n+protocols for communication across the network.\n+\n+  Corresponding Source conveyed, and Installation Information provided,\n+in accord with this section must be in a format that is publicly\n+documented (and with an implementation available to the public in\n+source code form), and must require no special password or key for\n+unpacking, reading or copying.\n+\n+  7. Additional Terms.\n+\n+  \"Additional permissions\" are terms that supplement the terms of this\n+License by making exceptions from one or more of its conditions.\n+Additional permissions that are applicable to the entire Program shall\n+be treated as though they were included in this License, to the extent\n+that they are valid under applicable law.  If additional permissions\n+apply only to part of the Program, that part may be used separately\n+under those permissions, but the entire Program remains governed by\n+this License without regard to the additional permissions.\n+\n+  When you convey a copy of a covered work, you may at your option\n+remove any additional permissions from that copy, or from any part of\n+it.  (Additional permissions may be written to require their own\n+removal in certain cases when you modify the work.)  You may place\n+additional permissions on material, added by you to a covered work,\n+for which you have or can give appropriate copyright permission.\n+\n+  Notwithstanding any other provision of this License, for material you\n+add to a covered work, you may (if authorized by the copyright holders of\n+that material) supplement the terms of this License with terms:\n+\n+    a) Disclaiming warranty or limiting liability differently from the\n+    terms of sections 15 and 16 of this License; or\n+\n+    b) Requiring preservation of specified reasonable legal notices or\n+    author attributions in that material or in the Appropriate Legal\n+    Notices displayed by works containing it; or\n+\n+    c) Prohibiting misrepresentation of the origin of that material, or\n+    requiring that modified versions of such material be marked in\n+    reasonable ways as different from the original version; or\n+\n+    d) Limiting the use for publicity purposes of names of licensors or\n+    authors of the material; or\n+\n+    e) Declining to grant rights under trademark law for use of some\n+    trade names, trademarks, or service marks; or\n+\n+    f) Requiring indemnification of licensors and authors of that\n+    material by anyone who conveys the material (or modified versions of\n+    it) with contractual assumptions of liability to the recipient, for\n+    any liability that these contractual assumptions directly impose on\n+    those licensors and authors.\n+\n+  All other non-permissive additional terms are considered \"further\n+restrictions\" within the meaning of section 10.  If the Program as you\n+received it, or any part of it, contains a notice stating that it is\n+governed by this License along with a term that is a further\n+restriction, you may remove that term.  If a license document contains\n+a further restriction but permits relicensing or conveying under this\n+License, you may add to a covered work material governed by the terms\n+of that license document, provided that the further restriction does\n+not survive such relicensing or conveying.\n+\n+  If you add terms to a covered work in accord with this section, you\n+must place, in the relevant source files, a statement of the\n+additional terms that apply to those files, or a notice indicating\n+where to find the applicable terms.\n+\n+  Additional terms, permissive or non-permissive, may be stated in the\n+form of a separately written license, or stated as exceptions;\n+the above requirements apply either way.\n+\n+  8. Termination.\n+\n+  You may not propagate or modify a covered work except as expressly\n+provided under this License.  Any attempt otherwise to propagate or\n+modify it is void, and will automatically terminate your rights under\n+this License (including any patent licenses granted under the third\n+paragraph of section 11).\n+\n+  However, if you cease all violation of this License, then your\n+license from a particular copyright holder is reinstated (a)\n+provisionally, unless and until the copyright holder explicitly and\n+finally terminates your license, and (b) permanently, if the copyright\n+holder fails to notify you of the violation by some reasonable means\n+prior to 60 days after the cessation.\n+\n+  Moreover, your license from a particular copyright holder is\n+reinstated permanently if the copyright holder notifies you of the\n+violation by some reasonable means, this is the first time you have\n+received notice of violation of this License (for any work) from that\n+copyright holder, and you cure the violation prior to 30 days after\n+your receipt of the notice.\n+\n+  Termination of your rights under this section does not terminate the\n+licenses of parties who have received copies or rights from you under\n+this License.  If your rights have been terminated and not permanently\n+reinstated, you do not qualify to receive new licenses for the same\n+material under section 10.\n+\n+  9. Acceptance Not Required for Having Copies.\n+\n+  You are not required to accept this License in order to receive or\n+run a copy of the Program.  Ancillary propagation of a covered work\n+occurring solely as a consequence of using peer-to-peer transmission\n+to receive a copy likewise does not require acceptance.  However,\n+nothing other than this License grants you permission to propagate or\n+modify any covered work.  These actions infringe copyright if you do\n+not accept this License.  Therefore, by modifying or propagating a\n+covered work, you indicate your acceptance of this License to do so.\n+\n+  10. Automatic Licensing of Downstream Recipients.\n+\n+  Each time you convey a covered work, the recipient automatically\n+receives a license from the original licensors, to run, modify and\n+propagate that work, subject to this License.  You are not responsible\n+for enforcing compliance by third parties with this License.\n+\n+  An \"entity transaction\" is a transaction transferring control of an\n+organization, or substantially all assets of one, or subdividing an\n+organization, or merging organizations.  If propagation of a covered\n+work results from an entity transaction, each party to that\n+transaction who receives a copy of the work also receives whatever\n+licenses to the work the party's predecessor in interest had or could\n+give under the previous paragraph, plus a right to possession of the\n+Corresponding Source of the work from the predecessor in interest, if\n+the predecessor has it or can get it with reasonable efforts.\n+\n+  You may not impose any further restrictions on the exercise of the\n+rights granted or affirmed under this License.  For example, you may\n+not impose a license fee, royalty, or other charge for exercise of\n+rights granted under this License, and you may not initiate litigation\n+(including a cross-claim or counterclaim in a lawsuit) alleging that\n+any patent claim is infringed by making, using, selling, offering for\n+sale, or importing the Program or any portion of it.\n+\n+  11. Patents.\n+\n+  A \"contributor\" is a copyright holder who authorizes use under this\n+License of the Program or a work on which the Program is based.  The\n+work thus licensed is called the contributor's \"contributor version\".\n+\n+  A contributor's \"essential patent claims\" are all patent claims\n+owned or controlled by the contributor, whether already acquired or\n+hereafter acquired, that would be infringed by some manner, permitted\n+by this License, of making, using, or selling its contributor version,\n+but do not include claims that would be infringed only as a\n+consequence of further modification of the contributor version.  For\n+purposes of this definition, \"control\" includes the right to grant\n+patent sublicenses in a manner consistent with the requirements of\n+this License.\n+\n+  Each contributor grants you a non-exclusive, worldwide, royalty-free\n+patent license under the contributor's essential patent claims, to\n+make, use, sell, offer for sale, import and otherwise run, modify and\n+propagate the contents of its contributor version.\n+\n+  In the following three paragraphs, a \"patent license\" is any express\n+agreement or commitment, however denominated, not to enforce a patent\n+(such as an express permission to practice a patent or covenant not to\n+sue for patent infringement).  To \"grant\" such a patent license to a\n+party means to make such an agreement or commitment not to enforce a\n+patent against the party.\n+\n+  If you convey a covered work, knowingly relying on a patent license,\n+and the Corresponding Source of the work is not available for anyone\n+to copy, free of charge and under the terms of this License, through a\n+publicly available network server or other readily accessible means,\n+then you must either (1) cause the Corresponding Source to be so\n+available, or (2) arrange to deprive yourself of the benefit of the\n+patent license for this particular work, or (3) arrange, in a manner\n+consistent with the requirements of this License, to extend the patent\n+license to downstream recipients.  \"Knowingly relying\" means you have\n+actual knowledge that, but for the patent license, your conveying the\n+covered work in a country, or your recipient's use of the covered work\n+in a country, would infringe one or more identifiable patents in that\n+country that you have reason to believe are valid.\n+\n+  If, pursuant to or in connection with a single transaction or\n+arrangement, you convey, or propagate by procuring conveyance of, a\n+covered work, and grant a patent license to some of the parties\n+receiving the covered work authorizing them to use, propagate, modify\n+or convey a specific copy of the covered work, then the patent license\n+you grant is automatically extended to all recipients of the covered\n+work and works based on it.\n+\n+  A patent license is \"discriminatory\" if it does not include within\n+the scope of its coverage, prohibits the exercise of, or is\n+conditioned on the non-exercise of one or more of the rights that are\n+specifically granted under this License.  You may not convey a covered\n+work if you are a party to an arrangement with a third party that is\n+in the business of distributing software, under which you make payment\n+to the third party based on the extent of your activity of conveying\n+the work, and under which the third party grants, to any of the\n+parties who would receive the covered work from you, a discriminatory\n+patent license (a) in connection with copies of the covered work\n+conveyed by you (or copies made from those copies), or (b) primarily\n+for and in connection with specific products or compilations that\n+contain the covered work, unless you entered into that arrangement,\n+or that patent license was granted, prior to 28 March 2007.\n+\n+  Nothing in this License shall be construed as excluding or limiting\n+any implied license or other defenses to infringement that may\n+otherwise be available to you under applicable patent law.\n+\n+  12. No Surrender of Others' Freedom.\n+\n+  If conditions are imposed on you (whether by court order, agreement or\n+otherwise) that contradict the conditions of this License, they do not\n+excuse you from the conditions of this License.  If you cannot convey a\n+covered work so as to satisfy simultaneously your obligations under this\n+License and any other pertinent obligations, then as a consequence you may\n+not convey it at all.  For example, if you agree to terms that obligate you\n+to collect a royalty for further conveying from those to whom you convey\n+the Program, the only way you could satisfy both those terms and this\n+License would be to refrain entirely from conveying the Program.\n+\n+  13. Use with the GNU Affero General Public License.\n+\n+  Notwithstanding any other provision of this License, you have\n+permission to link or combine any covered work with a work licensed\n+under version 3 of the GNU Affero General Public License into a single\n+combined work, and to convey the resulting work.  The terms of this\n+License will continue to apply to the part which is the covered work,\n+but the special requirements of the GNU Affero General Public License,\n+section 13, concerning interaction through a network will apply to the\n+combination as such.\n+\n+  14. Revised Versions of this License.\n+\n+  The Free Software Foundation may publish revised and/or new versions of\n+the GNU General Public License from time to time.  Such new versions will\n+be similar in spirit to the present version, but may differ in detail to\n+address new problems or concerns.\n+\n+  Each version is given a distinguishing version number.  If the\n+Program specifies that a certain numbered version of the GNU General\n+Public License \"or any later version\" applies to it, you have the\n+option of following the terms and conditions either of that numbered\n+version or of any later version published by the Free Software\n+Foundation.  If the Program does not specify a version number of the\n+GNU General Public License, you may choose any version ever published\n+by the Free Software Foundation.\n+\n+  If the Program specifies that a proxy can decide which future\n+versions of the GNU General Public License can be used, that proxy's\n+public statement of acceptance of a version permanently authorizes you\n+to choose that version for the Program.\n+\n+  Later license versions may give you additional or different\n+permissions.  However, no additional obligations are imposed on any\n+author or copyright holder as a result of your choosing to follow a\n+later version.\n+\n+  15. Disclaimer of Warranty.\n+\n+  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\n+APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\n+HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\n+OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\n+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\n+IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\n+ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n+\n+  16. Limitation of Liability.\n+\n+  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\n+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\n+THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\n+GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\n+USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\n+DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\n+PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\n+EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\n+SUCH DAMAGES.\n+\n+  17. Interpretation of Sections 15 and 16.\n+\n+  If the disclaimer of warranty and limitation of liability provided\n+above cannot be given local legal effect according to their terms,\n+reviewing courts shall apply local law that most closely approximates\n+an absolute waiver of all civil liability in connection with the\n+Program, unless a warranty or assumption of liability accompanies a\n+copy of the Program in return for a fee.\n+\n+                     END OF TERMS AND CONDITIONS\n+\n+            How to Apply These Terms to Your New Programs\n+\n+  If you develop a new program, and you want it to be of the greatest\n+possible use to the public, the best way to achieve this is to make it\n+free software which everyone can redistribute and change under these terms.\n+\n+  To do so, attach the following notices to the program.  It is safest\n+to attach them to the start of each source file to most effectively\n+state the exclusion of warranty; and each file should have at least\n+the \"copyright\" line and a pointer to where the full notice is found.\n+\n+    <one line to give the program's name and a brief idea of what it does.>\n+    Copyright (C) <year>  <name of author>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation, either version 3 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+Also add information on how to contact you by electronic and paper mail.\n+\n+  If the program does terminal interaction, make it output a short\n+notice like this when it starts in an interactive mode:\n+\n+    <program>  Copyright (C) <year>  <name of author>\n+    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n+    This is free software, and you are welcome to redistribute it\n+    under certain conditions; type `show c' for details.\n+\n+The hypothetical commands `show w' and `show c' should show the appropriate\n+parts of the General Public License.  Of course, your program's commands\n+might be different; for a GUI interface, you would use an \"about box\".\n+\n+  You should also get your employer (if you work as a programmer) or school,\n+if any, to sign a \"copyright disclaimer\" for the program, if necessary.\n+For more information on this, and how to apply and follow the GNU GPL, see\n+<http://www.gnu.org/licenses/>.\n+\n+  The GNU General Public License does not permit incorporating your program\n+into proprietary programs.  If your program is a subroutine library, you\n+may consider it more useful to permit linking proprietary applications with\n+the library.  If this is what you want to do, use the GNU Lesser General\n+Public License instead of this License.  But first, please read\n+<http://www.gnu.org/philosophy/why-not-lgpl.html>."
      },
      {
        "sha": "fe677e3a1f89aa961079b8b711f933b8f9009e4f",
        "filename": "contrib/macdeploy/README.md",
        "status": "added",
        "additions": 128,
        "deletions": 0,
        "changes": 128,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,128 @@\n+# MacOS Deployment\n+\n+The `macdeployqtplus` script should not be run manually. Instead, after building as usual:\n+\n+```bash\n+make deploy\n+```\n+\n+During the deployment process, the disk image window will pop up briefly\n+when the fancy settings are applied. This is normal, please do not interfere,\n+the process will unmount the DMG and cleanup before finishing.\n+\n+When complete, it will have produced `Bitcoin-Qt.dmg`.\n+\n+## SDK Extraction\n+\n+### Step 1: Obtaining `Xcode.app`\n+\n+Our current macOS SDK\n+(`Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz`) can be\n+extracted from\n+[Xcode_11.3.1.xip](https://download.developer.apple.com/Developer_Tools/Xcode_11.3.1/Xcode_11.3.1.xip).\n+An Apple ID is needed to download this.\n+\n+After Xcode version 7.x, Apple started shipping the `Xcode.app` in a `.xip`\n+archive. This makes the SDK less-trivial to extract on non-macOS machines. One\n+approach (tested on Debian Buster) is outlined below:\n+\n+```bash\n+# Install/clone tools needed for extracting Xcode.app\n+apt install cpio\n+git clone https://github.com/bitcoin-core/apple-sdk-tools.git\n+\n+# Unpack Xcode_11.3.1.xip and place the resulting Xcode.app in your current\n+# working directory\n+python3 apple-sdk-tools/extract_xcode.py -f Xcode_11.3.1.xip | cpio -d -i\n+```\n+\n+On macOS the process is more straightforward:\n+\n+```bash\n+xip -x Xcode_11.3.1.xip\n+```\n+\n+### Step 2: Generating `Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz` from `Xcode.app`\n+\n+To generate `Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz`, run\n+the script [`gen-sdk`](./gen-sdk) with the path to `Xcode.app` (extracted in the\n+previous stage) as the first argument.\n+\n+```bash\n+# Generate a Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz from\n+# the supplied Xcode.app\n+./contrib/macdeploy/gen-sdk '/path/to/Xcode.app'\n+```\n+\n+## Deterministic macOS DMG Notes\n+Working macOS DMGs are created in Linux by combining a recent `clang`, the Apple\n+`binutils` (`ld`, `ar`, etc) and DMG authoring tools.\n+\n+Apple uses `clang` extensively for development and has upstreamed the necessary\n+functionality so that a vanilla clang can take advantage. It supports the use of `-F`,\n+`-target`, `-mmacosx-version-min`, and `--sysroot`, which are all necessary when\n+building for macOS.\n+\n+Apple's version of `binutils` (called `cctools`) contains lots of functionality missing in the\n+FSF's `binutils`. In addition to extra linker options for frameworks and sysroots, several\n+other tools are needed as well such as `install_name_tool`, `lipo`, and `nmedit`. These\n+do not build under Linux, so they have been patched to do so. The work here was used as\n+a starting point: [mingwandroid/toolchain4](https://github.com/mingwandroid/toolchain4).\n+\n+In order to build a working toolchain, the following source packages are needed from\n+Apple: `cctools`, `dyld`, and `ld64`.\n+\n+These tools inject timestamps by default, which produce non-deterministic binaries. The\n+`ZERO_AR_DATE` environment variable is used to disable that.\n+\n+This version of `cctools` has been patched to use the current version of `clang`'s headers\n+and its `libLTO.so` rather than those from `llvmgcc`, as it was originally done in `toolchain4`.\n+\n+To complicate things further, all builds must target an Apple SDK. These SDKs are free to\n+download, but not redistributable. To obtain it, register for an Apple Developer Account,\n+then download [Xcode_11.3.1](https://download.developer.apple.com/Developer_Tools/Xcode_11.3.1/Xcode_11.3.1.xip).\n+\n+This file is many gigabytes in size, but most (but not all) of what we need is\n+contained only in a single directory:\n+\n+```bash\n+Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk\n+```\n+\n+See the SDK Extraction notes above for how to obtain it.\n+\n+The Gitian descriptors build 2 sets of files: Linux tools, then Apple binaries which are\n+created using these tools. The build process has been designed to avoid including the\n+SDK's files in Gitian's outputs. All interim tarballs are fully deterministic and may be freely\n+redistributed.\n+\n+`genisoimage` is used to create the initial DMG. It is not deterministic as-is, so it has been\n+patched. A system `genisoimage` will work fine, but it will not be deterministic because\n+the file-order will change between invocations. The patch can be seen here: [cdrkit-deterministic.patch](https://github.com/bitcoin/bitcoin/blob/master/depends/patches/native_cdrkit/cdrkit-deterministic.patch).\n+No effort was made to fix this cleanly, so it likely leaks memory badly, however it's only used for\n+a single invocation, so that's no real concern.\n+\n+`genisoimage` cannot compress DMGs, so afterwards, the DMG tool from the\n+`libdmg-hfsplus` project is used to compress it. There are several bugs in this tool and its\n+maintainer has seemingly abandoned the project.\n+\n+The DMG tool has the ability to create DMGs from scratch as well, but this functionality is\n+broken. Only the compression feature is currently used. Ideally, the creation could be fixed\n+and `genisoimage` would no longer be necessary.\n+\n+Background images and other features can be added to DMG files by inserting a\n+`.DS_Store` before creation. This is generated by the script `contrib/macdeploy/custom_dsstore.py`.\n+\n+As of OS X 10.9 Mavericks, using an Apple-blessed key to sign binaries is a requirement in\n+order to satisfy the new Gatekeeper requirements. Because this private key cannot be\n+shared, we'll have to be a bit creative in order for the build process to remain somewhat\n+deterministic. Here's how it works:\n+\n+- Builders use Gitian to create an unsigned release. This outputs an unsigned DMG which\n+  users may choose to bless and run. It also outputs an unsigned app structure in the form\n+  of a tarball, which also contains all of the tools that have been previously (deterministically)\n+  built in order to create a final DMG.\n+- The Apple keyholder uses this unsigned app to create a detached signature, using the\n+  script that is also included there. Detached signatures are available from this [repository](https://github.com/bitcoin-core/bitcoin-detached-sigs).\n+- Builders feed the unsigned app + detached signature back into Gitian. It uses the\n+  pre-built tools to recombine the pieces into a deterministic DMG."
      },
      {
        "sha": "9c330af45142e011e78b4b86874ac4b3457ed457",
        "filename": "contrib/macdeploy/background.svg",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/macdeploy/background.svg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/macdeploy/background.svg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.svg?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" standalone=\"no\"?>\n+<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 20010904//EN\"\n+ \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">\n+<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1000pt\" height=\"640pt\" viewBox=\"0 0 1000 640\" preserveAspectRatio=\"xMidYMid meet\">\n+\t<!-- kate: space-indent off;\n+\tCopyright (c) 2015 The Bitcoin Core developers\n+\tDistributed under the MIT software license, see the accompanying\n+\tfile COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\t-->\n+\t<style type=\"text/css\"><![CDATA[\n+\t\ttext {\n+\t\t\tfont-family: \"Tuffy\";\n+\t\t\tfont-size: 86px;\n+\t\t\tfill: gray;\n+\t\t\ttext-anchor: middle;\n+\t\t}\n+\t]]></style>\n+\t<defs>\n+\t\t<linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n+\t\t\t<stop offset=\"0%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n+\t\t\t<stop offset=\"33%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n+\t\t\t<stop offset=\"80%\" style=\"stop-color:rgb(205,205,205);stop-opacity:1\" />\n+\t\t\t<stop offset=\"100%\" style=\"stop-color:rgb(204,204,204);stop-opacity:1\" />\n+\t\t</linearGradient>\n+\t</defs>\n+\t<rect width=\"1000\" height=\"640\" style=\"fill:url(#gradient);stroke-width:0\" />\n+\t<g transform=\"translate(500,0) scale(0.9, 1)\">\n+\t\t<text x=\"0\" y=\"114\">PACKAGE_NAME</text>\n+\t</g>\n+\t<g transform=\"translate(0.000000,640.000000) scale(0.100000,-0.100000)\"\n+\tfill=\"#000000\" stroke=\"none\">\n+\t\t<path d=\"M4995 3705 c-24 -23 -25 -29 -25 -165 l0 -140 -306 0 -306 0 -29 -29 c-29 -29 -29 -31 -29 -141 0 -110 0 -112 29 -141 l29 -29 306 0 306 0 0 -140 c0 -136 1 -142 25 -165 16 -17 35 -25 57 -25 29 0 72 32 306 226 180 149 274 233 278 250 13 53 -2 70 -278 299 -235 194 -277 225 -306 225 -22 0 -41 -8 -57 -25z\" fixlter=\"url(#glow)\"/>\n+\t</g>\n+</svg>"
      },
      {
        "sha": "dc1c1882dd5a21a5358c6f3a65e7c70e22e295a1",
        "filename": "contrib/macdeploy/custom_dsstore.py",
        "status": "added",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/macdeploy/custom_dsstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/macdeploy/custom_dsstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/custom_dsstore.py?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,59 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2013-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+import biplist\n+from ds_store import DSStore\n+from mac_alias import Alias\n+import sys\n+\n+output_file = sys.argv[1]\n+package_name_ns = sys.argv[2]\n+\n+ds = DSStore.open(output_file, 'w+')\n+ds['.']['bwsp'] = {\n+    'ShowStatusBar': False,\n+    'WindowBounds': '{{300, 280}, {500, 343}}',\n+    'ContainerShowSidebar': False,\n+    'SidebarWidth': 0,\n+    'ShowTabView': False,\n+    'PreviewPaneVisibility': False,\n+    'ShowToolbar': False,\n+    'ShowSidebar': False,\n+    'ShowPathbar': True\n+}\n+\n+icvp = {\n+    'gridOffsetX': 0.0,\n+    'textSize': 12.0,\n+    'viewOptionsVersion': 1,\n+    'backgroundImageAlias': b'\\x00\\x00\\x00\\x00\\x02\\x1e\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd1\\x94\\\\\\xb0H+\\x00\\x05\\x00\\x00\\x00\\x98\\x0fbackground.tiff\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x99\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x00\\x00\\r\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b.background\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x98\\x00\\x0e\\x00 \\x00\\x0f\\x00b\\x00a\\x00c\\x00k\\x00g\\x00r\\x00o\\x00u\\x00n\\x00d\\x00.\\x00t\\x00i\\x00f\\x00f\\x00\\x0f\\x00\\x02\\x00\\x00\\x00\\x12\\x00\\x1c/.background/background.tiff\\x00\\x14\\x01\\x06\\x00\\x00\\x00\\x00\\x01\\x06\\x00\\x02\\x00\\x00\\x0cMacintosh HD\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xce\\x97\\xab\\xc3H+\\x00\\x00\\x01\\x88[\\x88\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02u\\xab\\x8d\\xd1\\x94\\\\\\xb0devrddsk\\xff\\xff\\xff\\xff\\x00\\x00\\t \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07bitcoin\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xce\\x97\\xab\\xc3\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x01\\x00\\x14\\x01\\x88[\\x88\\x00\\x16\\xa9\\t\\x00\\x08\\xfaR\\x00\\x08\\xfaQ\\x00\\x02d\\x8e\\x00\\x0e\\x00\\x02\\x00\\x00\\x00\\x0f\\x00\\x1a\\x00\\x0c\\x00M\\x00a\\x00c\\x00i\\x00n\\x00t\\x00o\\x00s\\x00h\\x00 \\x00H\\x00D\\x00\\x13\\x00\\x01/\\x00\\x00\\x15\\x00\\x02\\x00\\x14\\xff\\xff\\x00\\x00\\xff\\xff\\x00\\x00',\n+    'backgroundColorBlue': 1.0,\n+    'iconSize': 96.0,\n+    'backgroundColorGreen': 1.0,\n+    'arrangeBy': 'none',\n+    'showIconPreview': True,\n+    'gridSpacing': 100.0,\n+    'gridOffsetY': 0.0,\n+    'showItemInfo': False,\n+    'labelOnBottom': True,\n+    'backgroundType': 2,\n+    'backgroundColorRed': 1.0\n+}\n+alias = Alias.from_bytes(icvp['backgroundImageAlias'])\n+alias.volume.name = package_name_ns\n+alias.volume.posix_path = '/Volumes/' + package_name_ns\n+alias.volume.disk_image_alias.target.filename = package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00bitcoinuser:\\x00Documents:\\x00bitcoin:\\x00bitcoin:\\x00' + package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.posix_path = 'Users/bitcoinuser/Documents/bitcoin/bitcoin/' + package_name_ns + '.temp.dmg'\n+alias.target.carbon_path = package_name_ns + ':.background:\\x00background.tiff'\n+icvp['backgroundImageAlias'] = biplist.Data(alias.to_bytes())\n+ds['.']['icvp'] = icvp\n+\n+ds['.']['vSrn'] = ('long', 1)\n+\n+ds['Applications']['Iloc'] = (370, 156)\n+ds['Bitcoin-Qt.app']['Iloc'] = (128, 156)\n+\n+ds.flush()\n+ds.close()"
      },
      {
        "sha": "5c5a85d3fe1861a4e5d3300faa04480f17846975",
        "filename": "contrib/macdeploy/detached-sig-apply.sh",
        "status": "added",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/macdeploy/detached-sig-apply.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/macdeploy/detached-sig-apply.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-apply.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,57 @@\n+#!/bin/sh\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+set -e\n+\n+UNSIGNED=\"$1\"\n+SIGNATURE=\"$2\"\n+ARCH=x86_64\n+ROOTDIR=dist\n+TEMPDIR=signed.temp\n+OUTDIR=signed-app\n+\n+if [ -z \"$UNSIGNED\" ]; then\n+  echo \"usage: $0 <unsigned app> <signature>\"\n+  exit 1\n+fi\n+\n+if [ -z \"$SIGNATURE\" ]; then\n+  echo \"usage: $0 <unsigned app> <signature>\"\n+  exit 1\n+fi\n+\n+rm -rf ${TEMPDIR} && mkdir -p ${TEMPDIR}\n+tar -C ${TEMPDIR} -xf ${UNSIGNED}\n+cp -rf \"${SIGNATURE}\"/* ${TEMPDIR}\n+\n+if [ -z \"${PAGESTUFF}\" ]; then\n+  PAGESTUFF=${TEMPDIR}/pagestuff\n+fi\n+\n+if [ -z \"${CODESIGN_ALLOCATE}\" ]; then\n+  CODESIGN_ALLOCATE=${TEMPDIR}/codesign_allocate\n+fi\n+\n+find ${TEMPDIR} -name \"*.sign\" | while read i; do\n+  SIZE=$(stat -c %s \"${i}\")\n+  TARGET_FILE=\"$(echo \"${i}\" | sed 's/\\.sign$//')\"\n+\n+  echo \"Allocating space for the signature of size ${SIZE} in ${TARGET_FILE}\"\n+  ${CODESIGN_ALLOCATE} -i \"${TARGET_FILE}\" -a ${ARCH} ${SIZE} -o \"${i}.tmp\"\n+\n+  OFFSET=$(${PAGESTUFF} \"${i}.tmp\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g')\n+  if [ -z ${QUIET} ]; then\n+    echo \"Attaching signature at offset ${OFFSET}\"\n+  fi\n+\n+  dd if=\"$i\" of=\"${i}.tmp\" bs=1 seek=${OFFSET} count=${SIZE} 2>/dev/null\n+  mv \"${i}.tmp\" \"${TARGET_FILE}\"\n+  rm \"${i}\"\n+  echo \"Success.\"\n+done\n+mv ${TEMPDIR}/${ROOTDIR} ${OUTDIR}\n+rm -rf ${TEMPDIR}\n+echo \"Signed: ${OUTDIR}\""
      },
      {
        "sha": "31a97f0a24c7238a3c4c53d79e0fe34a783d2a6d",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,52 @@\n+#!/bin/sh\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+set -e\n+\n+ROOTDIR=dist\n+BUNDLE=\"${ROOTDIR}/Bitcoin-Qt.app\"\n+CODESIGN=codesign\n+TEMPDIR=sign.temp\n+TEMPLIST=${TEMPDIR}/signatures.txt\n+OUT=signature-osx.tar.gz\n+OUTROOT=osx\n+\n+if [ -z \"$1\" ]; then\n+  echo \"usage: $0 <codesign args>\"\n+  echo \"example: $0 -s MyIdentity\"\n+  exit 1\n+fi\n+\n+rm -rf ${TEMPDIR} ${TEMPLIST}\n+mkdir -p ${TEMPDIR}\n+\n+${CODESIGN} -f --file-list ${TEMPLIST} \"$@\" \"${BUNDLE}\"\n+\n+grep -v CodeResources < \"${TEMPLIST}\" | while read i; do\n+  TARGETFILE=\"${BUNDLE}/$(echo \"${i}\" | sed \"s|.*${BUNDLE}/||\")\"\n+  SIZE=$(pagestuff \"$i\" -p | tail -2 | grep size | sed 's/[^0-9]*//g')\n+  OFFSET=$(pagestuff \"$i\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g')\n+  SIGNFILE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}.sign\"\n+  DIRNAME=\"$(dirname \"${SIGNFILE}\")\"\n+  mkdir -p \"${DIRNAME}\"\n+  echo \"Adding detached signature for: ${TARGETFILE}. Size: ${SIZE}. Offset: ${OFFSET}\"\n+  dd if=\"$i\" of=\"${SIGNFILE}\" bs=1 skip=${OFFSET} count=${SIZE} 2>/dev/null\n+done\n+\n+grep CodeResources < \"${TEMPLIST}\" | while read i; do\n+  TARGETFILE=\"${BUNDLE}/$(echo \"${i}\" | sed \"s|.*${BUNDLE}/||\")\"\n+  RESOURCE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}\"\n+  DIRNAME=\"$(dirname \"${RESOURCE}\")\"\n+  mkdir -p \"${DIRNAME}\"\n+  echo \"Adding resource for: \\\"${TARGETFILE}\\\"\"\n+  cp \"${i}\" \"${RESOURCE}\"\n+done\n+\n+rm ${TEMPLIST}\n+\n+tar -C \"${TEMPDIR}\" -czf \"${OUT}\" .\n+rm -rf \"${TEMPDIR}\"\n+echo \"Created ${OUT}\""
      },
      {
        "sha": "3c7bdf4217c5c9ae13aa9dd3cff55cdb9f0e4577",
        "filename": "contrib/macdeploy/extract-osx-sdk.sh",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/macdeploy/extract-osx-sdk.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/macdeploy/extract-osx-sdk.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/extract-osx-sdk.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,34 @@\n+#!/usr/bin/env bash\n+# Copyright (c) 2016-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+set -e\n+\n+INPUTFILE=\"Xcode_7.3.1.dmg\"\n+HFSFILENAME=\"5.hfs\"\n+SDKDIR=\"Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk\"\n+\n+7z x \"${INPUTFILE}\" \"${HFSFILENAME}\"\n+SDKNAME=\"$(basename \"${SDKDIR}\")\"\n+SDKDIRINODE=$(ifind -n \"${SDKDIR}\" \"${HFSFILENAME}\")\n+fls \"${HFSFILENAME}\" -rpF ${SDKDIRINODE} |\n+ while read type inode filename; do\n+\tinode=\"${inode::-1}\"\n+\tif [ \"${filename:0:14}\" = \"usr/share/man/\" ]; then\n+\t\tcontinue\n+\tfi\n+\tfilename=\"${SDKNAME}/$filename\"\n+\techo \"Extracting $filename ...\"\n+\tmkdir -p \"$(dirname \"$filename\")\"\n+\tif [ \"$type\" = \"l/l\" ]; then\n+\t\tln -s \"$(icat \"${HFSFILENAME}\" $inode)\" \"$filename\"\n+\telse\n+\t\ticat \"${HFSFILENAME}\" $inode >\"$filename\"\n+\tfi\n+done\n+echo \"Building ${SDKNAME}.tar.gz ...\"\n+MTIME=\"$(istat \"${HFSFILENAME}\" \"${SDKDIRINODE}\" | perl -nle 'm/Content Modified:\\s+(.*?)\\s\\(/ && print $1')\"\n+find \"${SDKNAME}\" | sort | tar --no-recursion --mtime=\"${MTIME}\" --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > \"${SDKNAME}.tar.gz\"\n+echo 'All done!'"
      },
      {
        "sha": "457d8f5e645c8e9a6f1a55edf410599db065feed",
        "filename": "contrib/macdeploy/gen-sdk",
        "status": "added",
        "additions": 94,
        "deletions": 0,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/macdeploy/gen-sdk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/macdeploy/gen-sdk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/gen-sdk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,94 @@\n+#!/usr/bin/env python3\n+import argparse\n+import plistlib\n+import pathlib\n+import sys\n+import tarfile\n+import gzip\n+import os\n+import contextlib\n+\n+@contextlib.contextmanager\n+def cd(path):\n+    \"\"\"Context manager that restores PWD even if an exception was raised.\"\"\"\n+    old_pwd = os.getcwd()\n+    os.chdir(str(path))\n+    try:\n+        yield\n+    finally:\n+        os.chdir(old_pwd)\n+\n+def run():\n+    parser = argparse.ArgumentParser(\n+        description=__doc__, formatter_class=argparse.RawTextHelpFormatter)\n+\n+    parser.add_argument('xcode_app', metavar='XCODEAPP', nargs=1)\n+    parser.add_argument(\"-o\", metavar='OUTSDKTGZ', nargs=1, dest='out_sdktgz', required=False)\n+\n+    args = parser.parse_args()\n+\n+    xcode_app = pathlib.Path(args.xcode_app[0]).resolve()\n+    assert xcode_app.is_dir(), \"The supplied Xcode.app path '{}' either does not exist or is not a directory\".format(xcode_app)\n+\n+    xcode_app_plist = xcode_app.joinpath(\"Contents/version.plist\")\n+    with xcode_app_plist.open('rb') as fp:\n+        pl = plistlib.load(fp)\n+        xcode_version = pl['CFBundleShortVersionString']\n+        xcode_build_id = pl['ProductBuildVersion']\n+    print(\"Found Xcode (version: {xcode_version}, build id: {xcode_build_id})\".format(xcode_version=xcode_version, xcode_build_id=xcode_build_id))\n+\n+    sdk_dir = xcode_app.joinpath(\"Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk\")\n+    sdk_plist = sdk_dir.joinpath(\"System/Library/CoreServices/SystemVersion.plist\")\n+    with sdk_plist.open('rb') as fp:\n+        pl = plistlib.load(fp)\n+        sdk_version = pl['ProductVersion']\n+        sdk_build_id = pl['ProductBuildVersion']\n+    print(\"Found MacOSX SDK (version: {sdk_version}, build id: {sdk_build_id})\".format(sdk_version=sdk_version, sdk_build_id=sdk_build_id))\n+\n+    out_name = \"Xcode-{xcode_version}-{xcode_build_id}-extracted-SDK-with-libcxx-headers\".format(xcode_version=xcode_version, xcode_build_id=xcode_build_id)\n+\n+    xcode_libcxx_dir = xcode_app.joinpath(\"Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1\")\n+    assert xcode_libcxx_dir.is_dir()\n+\n+    if args.out_sdktgz:\n+        out_sdktgz_path = pathlib.Path(args.out_sdktgz_path)\n+    else:\n+        # Construct our own out_sdktgz if not specified on the command line\n+        out_sdktgz_path = pathlib.Path(\"./{}.tar.gz\".format(out_name))\n+\n+    def tarfp_add_with_base_change(tarfp, dir_to_add, alt_base_dir):\n+        \"\"\"Add all files in dir_to_add to tarfp, but prepent MEMBERPREFIX to the files'\n+        names\n+\n+        e.g. if the only file under /root/bazdir is /root/bazdir/qux, invoking:\n+\n+            tarfp_add_with_base_change(tarfp, \"foo/bar\", \"/root/bazdir\")\n+\n+        would result in the following members being added to tarfp:\n+\n+            foo/bar/             -> corresponding to /root/bazdir\n+            foo/bar/qux          -> corresponding to /root/bazdir/qux\n+\n+        \"\"\"\n+        def change_tarinfo_base(tarinfo):\n+            if tarinfo.name and tarinfo.name.startswith(\"./\"):\n+                tarinfo.name = str(pathlib.Path(alt_base_dir, tarinfo.name))\n+            if tarinfo.linkname and tarinfo.linkname.startswith(\"./\"):\n+                tarinfo.linkname = str(pathlib.Path(alt_base_dir, tarinfo.linkname))\n+            return tarinfo\n+        with cd(dir_to_add):\n+            tarfp.add(\".\", recursive=True, filter=change_tarinfo_base)\n+\n+    print(\"Creating output .tar.gz file...\")\n+    with out_sdktgz_path.open(\"wb\") as fp:\n+        with gzip.GzipFile(fileobj=fp, compresslevel=9, mtime=0) as gzf:\n+            with tarfile.open(mode=\"w\", fileobj=gzf) as tarfp:\n+                print(\"Adding MacOSX SDK {} files...\".format(sdk_version))\n+                tarfp_add_with_base_change(tarfp, sdk_dir, out_name)\n+                print(\"Adding libc++ headers...\")\n+                tarfp_add_with_base_change(tarfp, xcode_libcxx_dir, \"{}/usr/include/c++/v1\".format(out_name))\n+    print(\"Done! Find the resulting gzipped tarball at:\")\n+    print(out_sdktgz_path.resolve())\n+\n+if __name__ == '__main__':\n+    run()"
      },
      {
        "sha": "524104398be6ea96e05f7506a6c493a686fa998d",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "added",
        "additions": 909,
        "deletions": 0,
        "changes": 909,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,909 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (C) 2011  Patrick \"p2k\" Schneider <me@p2k-network.org>\n+#\n+# This program is free software: you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation, either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+#\n+\n+import subprocess, sys, re, os, shutil, stat, os.path, time\n+from string import Template\n+from argparse import ArgumentParser\n+from typing import List, Optional\n+\n+# This is ported from the original macdeployqt with modifications\n+\n+class FrameworkInfo(object):\n+    def __init__(self):\n+        self.frameworkDirectory = \"\"\n+        self.frameworkName = \"\"\n+        self.frameworkPath = \"\"\n+        self.binaryDirectory = \"\"\n+        self.binaryName = \"\"\n+        self.binaryPath = \"\"\n+        self.version = \"\"\n+        self.installName = \"\"\n+        self.deployedInstallName = \"\"\n+        self.sourceFilePath = \"\"\n+        self.destinationDirectory = \"\"\n+        self.sourceResourcesDirectory = \"\"\n+        self.sourceVersionContentsDirectory = \"\"\n+        self.sourceContentsDirectory = \"\"\n+        self.destinationResourcesDirectory = \"\"\n+        self.destinationVersionContentsDirectory = \"\"\n+    \n+    def __eq__(self, other):\n+        if self.__class__ == other.__class__:\n+            return self.__dict__ == other.__dict__\n+        else:\n+            return False\n+    \n+    def __str__(self):\n+        return \"\"\" Framework name: {}\n+ Framework directory: {}\n+ Framework path: {}\n+ Binary name: {}\n+ Binary directory: {}\n+ Binary path: {}\n+ Version: {}\n+ Install name: {}\n+ Deployed install name: {}\n+ Source file Path: {}\n+ Deployed Directory (relative to bundle): {}\n+\"\"\".format(self.frameworkName,\n+       self.frameworkDirectory,\n+       self.frameworkPath,\n+       self.binaryName,\n+       self.binaryDirectory,\n+       self.binaryPath,\n+       self.version,\n+       self.installName,\n+       self.deployedInstallName,\n+       self.sourceFilePath,\n+       self.destinationDirectory)\n+    \n+    def isDylib(self):\n+        return self.frameworkName.endswith(\".dylib\")\n+    \n+    def isQtFramework(self):\n+        if self.isDylib():\n+            return self.frameworkName.startswith(\"libQt\")\n+        else:\n+            return self.frameworkName.startswith(\"Qt\")\n+    \n+    reOLine = re.compile(r'^(.+) \\(compatibility version [0-9.]+, current version [0-9.]+\\)$')\n+    bundleFrameworkDirectory = \"Contents/Frameworks\"\n+    bundleBinaryDirectory = \"Contents/MacOS\"\n+    \n+    @classmethod\n+    def fromOtoolLibraryLine(cls, line: str) -> Optional['FrameworkInfo']:\n+        # Note: line must be trimmed\n+        if line == \"\":\n+            return None\n+        \n+        # Don't deploy system libraries (exception for libQtuitools and libQtlucene).\n+        if line.startswith(\"/System/Library/\") or line.startswith(\"@executable_path\") or (line.startswith(\"/usr/lib/\") and \"libQt\" not in line):\n+            return None\n+        \n+        m = cls.reOLine.match(line)\n+        if m is None:\n+            raise RuntimeError(\"otool line could not be parsed: \" + line)\n+        \n+        path = m.group(1)\n+        \n+        info = cls()\n+        info.sourceFilePath = path\n+        info.installName = path\n+        \n+        if path.endswith(\".dylib\"):\n+            dirname, filename = os.path.split(path)\n+            info.frameworkName = filename\n+            info.frameworkDirectory = dirname\n+            info.frameworkPath = path\n+            \n+            info.binaryDirectory = dirname\n+            info.binaryName = filename\n+            info.binaryPath = path\n+            info.version = \"-\"\n+            \n+            info.installName = path\n+            info.deployedInstallName = \"@executable_path/../Frameworks/\" + info.binaryName\n+            info.sourceFilePath = path\n+            info.destinationDirectory = cls.bundleFrameworkDirectory\n+        else:\n+            parts = path.split(\"/\")\n+            i = 0\n+            # Search for the .framework directory\n+            for part in parts:\n+                if part.endswith(\".framework\"):\n+                    break\n+                i += 1\n+            if i == len(parts):\n+                raise RuntimeError(\"Could not find .framework or .dylib in otool line: \" + line)\n+            \n+            info.frameworkName = parts[i]\n+            info.frameworkDirectory = \"/\".join(parts[:i])\n+            info.frameworkPath = os.path.join(info.frameworkDirectory, info.frameworkName)\n+            \n+            info.binaryName = parts[i+3]\n+            info.binaryDirectory = \"/\".join(parts[i+1:i+3])\n+            info.binaryPath = os.path.join(info.binaryDirectory, info.binaryName)\n+            info.version = parts[i+2]\n+            \n+            info.deployedInstallName = \"@executable_path/../Frameworks/\" + os.path.join(info.frameworkName, info.binaryPath)\n+            info.destinationDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, info.binaryDirectory)\n+            \n+            info.sourceResourcesDirectory = os.path.join(info.frameworkPath, \"Resources\")\n+            info.sourceContentsDirectory = os.path.join(info.frameworkPath, \"Contents\")\n+            info.sourceVersionContentsDirectory = os.path.join(info.frameworkPath, \"Versions\", info.version, \"Contents\")\n+            info.destinationResourcesDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Resources\")\n+            info.destinationVersionContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Versions\", info.version, \"Contents\")\n+        \n+        return info\n+\n+class ApplicationBundleInfo(object):\n+    def __init__(self, path: str):\n+        self.path = path\n+        appName = \"Bitcoin-Qt\"\n+        self.binaryPath = os.path.join(path, \"Contents\", \"MacOS\", appName)\n+        if not os.path.exists(self.binaryPath):\n+            raise RuntimeError(\"Could not find bundle binary for \" + path)\n+        self.resourcesPath = os.path.join(path, \"Contents\", \"Resources\")\n+        self.pluginPath = os.path.join(path, \"Contents\", \"PlugIns\")\n+\n+class DeploymentInfo(object):\n+    def __init__(self):\n+        self.qtPath = None\n+        self.pluginPath = None\n+        self.deployedFrameworks = []\n+    \n+    def detectQtPath(self, frameworkDirectory: str):\n+        parentDir = os.path.dirname(frameworkDirectory)\n+        if os.path.exists(os.path.join(parentDir, \"translations\")):\n+            # Classic layout, e.g. \"/usr/local/Trolltech/Qt-4.x.x\"\n+            self.qtPath = parentDir\n+        else:\n+            self.qtPath = os.getenv(\"QTDIR\", None)\n+\n+        if self.qtPath is not None:\n+            pluginPath = os.path.join(self.qtPath, \"plugins\")\n+            if os.path.exists(pluginPath):\n+                self.pluginPath = pluginPath\n+    \n+    def usesFramework(self, name: str) -> bool:\n+        nameDot = \"{}.\".format(name)\n+        libNameDot = \"lib{}.\".format(name)\n+        for framework in self.deployedFrameworks:\n+            if framework.endswith(\".framework\"):\n+                if framework.startswith(nameDot):\n+                    return True\n+            elif framework.endswith(\".dylib\"):\n+                if framework.startswith(libNameDot):\n+                    return True\n+        return False\n+\n+def getFrameworks(binaryPath: str, verbose: int) -> List[FrameworkInfo]:\n+    if verbose >= 3:\n+        print(\"Inspecting with otool: \" + binaryPath)\n+    otoolbin=os.getenv(\"OTOOL\", \"otool\")\n+    otool = subprocess.Popen([otoolbin, \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)\n+    o_stdout, o_stderr = otool.communicate()\n+    if otool.returncode != 0:\n+        if verbose >= 1:\n+            sys.stderr.write(o_stderr)\n+            sys.stderr.flush()\n+            raise RuntimeError(\"otool failed with return code {}\".format(otool.returncode))\n+\n+    otoolLines = o_stdout.split(\"\\n\")\n+    otoolLines.pop(0) # First line is the inspected binary\n+    if \".framework\" in binaryPath or binaryPath.endswith(\".dylib\"):\n+        otoolLines.pop(0) # Frameworks and dylibs list themselves as a dependency.\n+    \n+    libraries = []\n+    for line in otoolLines:\n+        line = line.replace(\"@loader_path\", os.path.dirname(binaryPath))\n+        info = FrameworkInfo.fromOtoolLibraryLine(line.strip())\n+        if info is not None:\n+            if verbose >= 3:\n+                print(\"Found framework:\")\n+                print(info)\n+            libraries.append(info)\n+    \n+    return libraries\n+\n+def runInstallNameTool(action: str, *args):\n+    installnametoolbin=os.getenv(\"INSTALLNAMETOOL\", \"install_name_tool\")\n+    subprocess.check_call([installnametoolbin, \"-\"+action] + list(args))\n+\n+def changeInstallName(oldName: str, newName: str, binaryPath: str, verbose: int):\n+    if verbose >= 3:\n+        print(\"Using install_name_tool:\")\n+        print(\" in\", binaryPath)\n+        print(\" change reference\", oldName)\n+        print(\" to\", newName)\n+    runInstallNameTool(\"change\", oldName, newName, binaryPath)\n+\n+def changeIdentification(id: str, binaryPath: str, verbose: int):\n+    if verbose >= 3:\n+        print(\"Using install_name_tool:\")\n+        print(\" change identification in\", binaryPath)\n+        print(\" to\", id)\n+    runInstallNameTool(\"id\", id, binaryPath)\n+\n+def runStrip(binaryPath: str, verbose: int):\n+    stripbin=os.getenv(\"STRIP\", \"strip\")\n+    if verbose >= 3:\n+        print(\"Using strip:\")\n+        print(\" stripped\", binaryPath)\n+    subprocess.check_call([stripbin, \"-x\", binaryPath])\n+\n+def copyFramework(framework: FrameworkInfo, path: str, verbose: int) -> Optional[str]:\n+    if framework.sourceFilePath.startswith(\"Qt\"):\n+        #standard place for Nokia Qt installer's frameworks\n+        fromPath = \"/Library/Frameworks/\" + framework.sourceFilePath\n+    else:\n+        fromPath = framework.sourceFilePath\n+    toDir = os.path.join(path, framework.destinationDirectory)\n+    toPath = os.path.join(toDir, framework.binaryName)\n+    \n+    if not os.path.exists(fromPath):\n+        raise RuntimeError(\"No file at \" + fromPath)\n+    \n+    if os.path.exists(toPath):\n+        return None # Already there\n+    \n+    if not os.path.exists(toDir):\n+        os.makedirs(toDir)\n+    \n+    shutil.copy2(fromPath, toPath)\n+    if verbose >= 3:\n+        print(\"Copied:\", fromPath)\n+        print(\" to:\", toPath)\n+\n+    permissions = os.stat(toPath)\n+    if not permissions.st_mode & stat.S_IWRITE:\n+      os.chmod(toPath, permissions.st_mode | stat.S_IWRITE)\n+\n+    if not framework.isDylib(): # Copy resources for real frameworks\n+\n+        linkfrom = os.path.join(path, \"Contents\",\"Frameworks\", framework.frameworkName, \"Versions\", \"Current\")\n+        linkto = framework.version\n+        if not os.path.exists(linkfrom):\n+            os.symlink(linkto, linkfrom)\n+            if verbose >= 2:\n+                print(\"Linked:\", linkfrom, \"->\", linkto)\n+        fromResourcesDir = framework.sourceResourcesDirectory\n+        if os.path.exists(fromResourcesDir):\n+            toResourcesDir = os.path.join(path, framework.destinationResourcesDirectory)\n+            shutil.copytree(fromResourcesDir, toResourcesDir, symlinks=True)\n+            if verbose >= 3:\n+                print(\"Copied resources:\", fromResourcesDir)\n+                print(\" to:\", toResourcesDir)\n+        fromContentsDir = framework.sourceVersionContentsDirectory\n+        if not os.path.exists(fromContentsDir):\n+            fromContentsDir = framework.sourceContentsDirectory\n+        if os.path.exists(fromContentsDir):\n+            toContentsDir = os.path.join(path, framework.destinationVersionContentsDirectory)\n+            shutil.copytree(fromContentsDir, toContentsDir, symlinks=True)\n+            if verbose >= 3:\n+                print(\"Copied Contents:\", fromContentsDir)\n+                print(\" to:\", toContentsDir)\n+    elif framework.frameworkName.startswith(\"libQtGui\"): # Copy qt_menu.nib (applies to non-framework layout)\n+        qtMenuNibSourcePath = os.path.join(framework.frameworkDirectory, \"Resources\", \"qt_menu.nib\")\n+        qtMenuNibDestinationPath = os.path.join(path, \"Contents\", \"Resources\", \"qt_menu.nib\")\n+        if os.path.exists(qtMenuNibSourcePath) and not os.path.exists(qtMenuNibDestinationPath):\n+            shutil.copytree(qtMenuNibSourcePath, qtMenuNibDestinationPath, symlinks=True)\n+            if verbose >= 3:\n+                print(\"Copied for libQtGui:\", qtMenuNibSourcePath)\n+                print(\" to:\", qtMenuNibDestinationPath)\n+    \n+    return toPath\n+\n+def deployFrameworks(frameworks: List[FrameworkInfo], bundlePath: str, binaryPath: str, strip: bool, verbose: int, deploymentInfo: Optional[DeploymentInfo] = None) -> DeploymentInfo:\n+    if deploymentInfo is None:\n+        deploymentInfo = DeploymentInfo()\n+    \n+    while len(frameworks) > 0:\n+        framework = frameworks.pop(0)\n+        deploymentInfo.deployedFrameworks.append(framework.frameworkName)\n+        \n+        if verbose >= 2:\n+            print(\"Processing\", framework.frameworkName, \"...\")\n+        \n+        # Get the Qt path from one of the Qt frameworks\n+        if deploymentInfo.qtPath is None and framework.isQtFramework():\n+            deploymentInfo.detectQtPath(framework.frameworkDirectory)\n+        \n+        if framework.installName.startswith(\"@executable_path\") or framework.installName.startswith(bundlePath):\n+            if verbose >= 2:\n+                print(framework.frameworkName, \"already deployed, skipping.\")\n+            continue\n+        \n+        # install_name_tool the new id into the binary\n+        changeInstallName(framework.installName, framework.deployedInstallName, binaryPath, verbose)\n+        \n+        # Copy framework to app bundle.\n+        deployedBinaryPath = copyFramework(framework, bundlePath, verbose)\n+        # Skip the rest if already was deployed.\n+        if deployedBinaryPath is None:\n+            continue\n+        \n+        if strip:\n+            runStrip(deployedBinaryPath, verbose)\n+        \n+        # install_name_tool it a new id.\n+        changeIdentification(framework.deployedInstallName, deployedBinaryPath, verbose)\n+        # Check for framework dependencies\n+        dependencies = getFrameworks(deployedBinaryPath, verbose)\n+        \n+        for dependency in dependencies:\n+            changeInstallName(dependency.installName, dependency.deployedInstallName, deployedBinaryPath, verbose)\n+            \n+            # Deploy framework if necessary.\n+            if dependency.frameworkName not in deploymentInfo.deployedFrameworks and dependency not in frameworks:\n+                frameworks.append(dependency)\n+    \n+    return deploymentInfo\n+\n+def deployFrameworksForAppBundle(applicationBundle: ApplicationBundleInfo, strip: bool, verbose: int) -> DeploymentInfo:\n+    frameworks = getFrameworks(applicationBundle.binaryPath, verbose)\n+    if len(frameworks) == 0 and verbose >= 1:\n+        print(\"Warning: Could not find any external frameworks to deploy in {}.\".format(applicationBundle.path))\n+        return DeploymentInfo()\n+    else:\n+        return deployFrameworks(frameworks, applicationBundle.path, applicationBundle.binaryPath, strip, verbose)\n+\n+def deployPlugins(appBundleInfo: ApplicationBundleInfo, deploymentInfo: DeploymentInfo, strip: bool, verbose: int):\n+    # Lookup available plugins, exclude unneeded\n+    plugins = []\n+    if deploymentInfo.pluginPath is None:\n+        return\n+    for dirpath, dirnames, filenames in os.walk(deploymentInfo.pluginPath):\n+        pluginDirectory = os.path.relpath(dirpath, deploymentInfo.pluginPath)\n+        if pluginDirectory == \"designer\":\n+            # Skip designer plugins\n+            continue\n+        elif pluginDirectory == \"printsupport\":\n+            # Skip printsupport plugins\n+            continue\n+        elif pluginDirectory == \"imageformats\":\n+            # Skip imageformats plugins\n+            continue\n+        elif pluginDirectory == \"sqldrivers\":\n+            # Deploy the sql plugins only if QtSql is in use\n+            if not deploymentInfo.usesFramework(\"QtSql\"):\n+                continue\n+        elif pluginDirectory == \"script\":\n+            # Deploy the script plugins only if QtScript is in use\n+            if not deploymentInfo.usesFramework(\"QtScript\"):\n+                continue\n+        elif pluginDirectory == \"qmltooling\" or pluginDirectory == \"qml1tooling\":\n+            # Deploy the qml plugins only if QtDeclarative is in use\n+            if not deploymentInfo.usesFramework(\"QtDeclarative\"):\n+                continue\n+        elif pluginDirectory == \"bearer\":\n+            # Deploy the bearer plugins only if QtNetwork is in use\n+            if not deploymentInfo.usesFramework(\"QtNetwork\"):\n+                continue\n+        elif pluginDirectory == \"position\":\n+            # Deploy the position plugins only if QtPositioning is in use\n+            if not deploymentInfo.usesFramework(\"QtPositioning\"):\n+                continue\n+        elif pluginDirectory == \"sensors\" or pluginDirectory == \"sensorgestures\":\n+            # Deploy the sensor plugins only if QtSensors is in use\n+            if not deploymentInfo.usesFramework(\"QtSensors\"):\n+                continue\n+        elif pluginDirectory == \"audio\" or pluginDirectory == \"playlistformats\":\n+            # Deploy the audio plugins only if QtMultimedia is in use\n+            if not deploymentInfo.usesFramework(\"QtMultimedia\"):\n+                continue\n+        elif pluginDirectory == \"mediaservice\":\n+            # Deploy the mediaservice plugins only if QtMultimediaWidgets is in use\n+            if not deploymentInfo.usesFramework(\"QtMultimediaWidgets\"):\n+                continue\n+        elif pluginDirectory == \"canbus\":\n+            # Deploy the canbus plugins only if QtSerialBus is in use\n+            if not deploymentInfo.usesFramework(\"QtSerialBus\"):\n+                continue\n+        elif pluginDirectory == \"webview\":\n+            # Deploy the webview plugins only if QtWebView is in use\n+            if not deploymentInfo.usesFramework(\"QtWebView\"):\n+                continue\n+        elif pluginDirectory == \"gamepads\":\n+            # Deploy the webview plugins only if QtGamepad is in use\n+            if not deploymentInfo.usesFramework(\"QtGamepad\"):\n+                continue\n+        elif pluginDirectory == \"geoservices\":\n+            # Deploy the webview plugins only if QtLocation is in use\n+            if not deploymentInfo.usesFramework(\"QtLocation\"):\n+                continue\n+        elif pluginDirectory == \"texttospeech\":\n+            # Deploy the texttospeech plugins only if QtTextToSpeech is in use\n+            if not deploymentInfo.usesFramework(\"QtTextToSpeech\"):\n+                continue\n+        elif pluginDirectory == \"virtualkeyboard\":\n+            # Deploy the virtualkeyboard plugins only if QtVirtualKeyboard is in use\n+            if not deploymentInfo.usesFramework(\"QtVirtualKeyboard\"):\n+                continue\n+        elif pluginDirectory == \"sceneparsers\":\n+            # Deploy the virtualkeyboard plugins only if Qt3DCore is in use\n+            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n+                continue\n+        elif pluginDirectory == \"renderplugins\":\n+            # Deploy the renderplugins plugins only if Qt3DCore is in use\n+            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n+                continue\n+        elif pluginDirectory == \"geometryloaders\":\n+            # Deploy the geometryloaders plugins only if Qt3DCore is in use\n+            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n+                continue\n+\n+        for pluginName in filenames:\n+            pluginPath = os.path.join(pluginDirectory, pluginName)\n+            if pluginName.endswith(\"_debug.dylib\"):\n+                # Skip debug plugins\n+                continue\n+            elif pluginPath == \"imageformats/libqsvg.dylib\" or pluginPath == \"iconengines/libqsvgicon.dylib\":\n+                # Deploy the svg plugins only if QtSvg is in use\n+                if not deploymentInfo.usesFramework(\"QtSvg\"):\n+                    continue\n+            elif pluginPath == \"accessible/libqtaccessiblecompatwidgets.dylib\":\n+                # Deploy accessibility for Qt3Support only if the Qt3Support is in use\n+                if not deploymentInfo.usesFramework(\"Qt3Support\"):\n+                    continue\n+            elif pluginPath == \"graphicssystems/libqglgraphicssystem.dylib\":\n+                # Deploy the opengl graphicssystem plugin only if QtOpenGL is in use\n+                if not deploymentInfo.usesFramework(\"QtOpenGL\"):\n+                    continue\n+            elif pluginPath == \"accessible/libqtaccessiblequick.dylib\":\n+                # Deploy the accessible qtquick plugin only if QtQuick is in use\n+                if not deploymentInfo.usesFramework(\"QtQuick\"):\n+                    continue\n+            elif pluginPath == \"platforminputcontexts/libqtvirtualkeyboardplugin.dylib\":\n+                # Deploy the virtualkeyboardplugin plugin only if QtVirtualKeyboard is in use\n+                if not deploymentInfo.usesFramework(\"QtVirtualKeyboard\"):\n+                    continue\n+\n+            plugins.append((pluginDirectory, pluginName))\n+    \n+    for pluginDirectory, pluginName in plugins:\n+        if verbose >= 2:\n+            print(\"Processing plugin\", os.path.join(pluginDirectory, pluginName), \"...\")\n+        \n+        sourcePath = os.path.join(deploymentInfo.pluginPath, pluginDirectory, pluginName)\n+        destinationDirectory = os.path.join(appBundleInfo.pluginPath, pluginDirectory)\n+        if not os.path.exists(destinationDirectory):\n+            os.makedirs(destinationDirectory)\n+        \n+        destinationPath = os.path.join(destinationDirectory, pluginName)\n+        shutil.copy2(sourcePath, destinationPath)\n+        if verbose >= 3:\n+            print(\"Copied:\", sourcePath)\n+            print(\" to:\", destinationPath)\n+        \n+        if strip:\n+            runStrip(destinationPath, verbose)\n+        \n+        dependencies = getFrameworks(destinationPath, verbose)\n+        \n+        for dependency in dependencies:\n+            changeInstallName(dependency.installName, dependency.deployedInstallName, destinationPath, verbose)\n+            \n+            # Deploy framework if necessary.\n+            if dependency.frameworkName not in deploymentInfo.deployedFrameworks:\n+                deployFrameworks([dependency], appBundleInfo.path, destinationPath, strip, verbose, deploymentInfo)\n+\n+qt_conf=\"\"\"[Paths]\n+Translations=Resources\n+Plugins=PlugIns\n+\"\"\"\n+\n+ap = ArgumentParser(description=\"\"\"Improved version of macdeployqt.\n+\n+Outputs a ready-to-deploy app in a folder \"dist\" and optionally wraps it in a .dmg file.\n+Note, that the \"dist\" folder will be deleted before deploying on each run.\n+\n+Optionally, Qt translation files (.qm) and additional resources can be added to the bundle.\n+\n+Also optionally signs the .app bundle; set the CODESIGNARGS environment variable to pass arguments\n+to the codesign tool.\n+E.g. CODESIGNARGS='--sign \"Developer ID Application: ...\" --keychain /encrypted/foo.keychain'\"\"\")\n+\n+ap.add_argument(\"app_bundle\", nargs=1, metavar=\"app-bundle\", help=\"application bundle to be deployed\")\n+ap.add_argument(\"-verbose\", type=int, nargs=1, default=[1], metavar=\"<0-3>\", help=\"0 = no output, 1 = error/warning (default), 2 = normal, 3 = debug\")\n+ap.add_argument(\"-no-plugins\", dest=\"plugins\", action=\"store_false\", default=True, help=\"skip plugin deployment\")\n+ap.add_argument(\"-no-strip\", dest=\"strip\", action=\"store_false\", default=True, help=\"don't run 'strip' on the binaries\")\n+ap.add_argument(\"-sign\", dest=\"sign\", action=\"store_true\", default=False, help=\"sign .app bundle with codesign tool\")\n+ap.add_argument(\"-dmg\", nargs=\"?\", const=\"\", metavar=\"basename\", help=\"create a .dmg disk image; if basename is not specified, a camel-cased version of the app name is used\")\n+ap.add_argument(\"-fancy\", nargs=1, metavar=\"plist\", default=[], help=\"make a fancy looking disk image using the given plist file with instructions; requires -dmg to work\")\n+ap.add_argument(\"-add-qt-tr\", nargs=1, metavar=\"languages\", default=[], help=\"add Qt translation files to the bundle's resources; the language list must be separated with commas, not with whitespace\")\n+ap.add_argument(\"-translations-dir\", nargs=1, metavar=\"path\", default=None, help=\"Path to Qt's translation files\")\n+ap.add_argument(\"-add-resources\", nargs=\"+\", metavar=\"path\", default=[], help=\"list of additional files or folders to be copied into the bundle's resources; must be the last argument\")\n+ap.add_argument(\"-volname\", nargs=1, metavar=\"volname\", default=[], help=\"custom volume name for dmg\")\n+\n+config = ap.parse_args()\n+\n+verbose = config.verbose[0]\n+\n+# ------------------------------------------------\n+\n+app_bundle = config.app_bundle[0]\n+\n+if not os.path.exists(app_bundle):\n+    if verbose >= 1:\n+        sys.stderr.write(\"Error: Could not find app bundle \\\"{}\\\"\\n\".format(app_bundle))\n+    sys.exit(1)\n+\n+app_bundle_name = os.path.splitext(os.path.basename(app_bundle))[0]\n+\n+# ------------------------------------------------\n+translations_dir = None\n+if config.translations_dir and config.translations_dir[0]:\n+    if os.path.exists(config.translations_dir[0]):\n+        translations_dir = config.translations_dir[0]\n+    else:\n+        if verbose >= 1:\n+            sys.stderr.write(\"Error: Could not find translation dir \\\"{}\\\"\\n\".format(translations_dir))\n+        sys.exit(1)\n+# ------------------------------------------------\n+\n+for p in config.add_resources:\n+    if verbose >= 3:\n+        print(\"Checking for \\\"%s\\\"...\" % p)\n+    if not os.path.exists(p):\n+        if verbose >= 1:\n+            sys.stderr.write(\"Error: Could not find additional resource file \\\"{}\\\"\\n\".format(p))\n+        sys.exit(1)\n+\n+# ------------------------------------------------\n+\n+if len(config.fancy) == 1:\n+    if verbose >= 3:\n+        print(\"Fancy: Importing plistlib...\")\n+    try:\n+        import plistlib\n+    except ImportError:\n+        if verbose >= 1:\n+            sys.stderr.write(\"Error: Could not import plistlib which is required for fancy disk images.\\n\")\n+        sys.exit(1)\n+    \n+    p = config.fancy[0]\n+    if verbose >= 3:\n+        print(\"Fancy: Loading \\\"{}\\\"...\".format(p))\n+    if not os.path.exists(p):\n+        if verbose >= 1:\n+            sys.stderr.write(\"Error: Could not find fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n+        sys.exit(1)\n+    \n+    try:\n+        with open(p, 'rb') as fp:\n+            fancy = plistlib.load(fp, fmt=plistlib.FMT_XML)\n+    except:\n+        if verbose >= 1:\n+            sys.stderr.write(\"Error: Could not parse fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n+        sys.exit(1)\n+    \n+    try:\n+        assert \"window_bounds\" not in fancy or (isinstance(fancy[\"window_bounds\"], list) and len(fancy[\"window_bounds\"]) == 4)\n+        assert \"background_picture\" not in fancy or isinstance(fancy[\"background_picture\"], str)\n+        assert \"icon_size\" not in fancy or isinstance(fancy[\"icon_size\"], int)\n+        assert \"applications_symlink\" not in fancy or isinstance(fancy[\"applications_symlink\"], bool)\n+        if \"items_position\" in fancy:\n+            assert isinstance(fancy[\"items_position\"], dict)\n+            for key, value in fancy[\"items_position\"].items():\n+                assert isinstance(value, list) and len(value) == 2 and isinstance(value[0], int) and isinstance(value[1], int)\n+    except:\n+        if verbose >= 1:\n+            sys.stderr.write(\"Error: Bad format of fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n+        sys.exit(1)\n+    \n+    if \"background_picture\" in fancy:\n+        bp = fancy[\"background_picture\"]\n+        if verbose >= 3:\n+            print(\"Fancy: Resolving background picture \\\"{}\\\"...\".format(bp))\n+        if not os.path.exists(bp):\n+            bp = os.path.join(os.path.dirname(p), bp)\n+            if not os.path.exists(bp):\n+                if verbose >= 1:\n+                    sys.stderr.write(\"Error: Could not find background picture at \\\"{}\\\" or \\\"{}\\\"\\n\".format(fancy[\"background_picture\"], bp))\n+                sys.exit(1)\n+            else:\n+                fancy[\"background_picture\"] = bp\n+else:\n+    fancy = None\n+\n+# ------------------------------------------------\n+\n+if os.path.exists(\"dist\"):\n+    if verbose >= 2:\n+        print(\"+ Removing old dist folder +\")\n+    \n+    shutil.rmtree(\"dist\")\n+\n+# ------------------------------------------------\n+\n+if len(config.volname) == 1:\n+    volname = config.volname[0]\n+else:\n+    volname = app_bundle_name\n+\n+# ------------------------------------------------\n+\n+target = os.path.join(\"dist\", \"Bitcoin-Qt.app\")\n+\n+if verbose >= 2:\n+    print(\"+ Copying source bundle +\")\n+if verbose >= 3:\n+    print(app_bundle, \"->\", target)\n+\n+os.mkdir(\"dist\")\n+shutil.copytree(app_bundle, target, symlinks=True)\n+\n+applicationBundle = ApplicationBundleInfo(target)\n+\n+# ------------------------------------------------\n+\n+if verbose >= 2:\n+    print(\"+ Deploying frameworks +\")\n+\n+try:\n+    deploymentInfo = deployFrameworksForAppBundle(applicationBundle, config.strip, verbose)\n+    if deploymentInfo.qtPath is None:\n+        deploymentInfo.qtPath = os.getenv(\"QTDIR\", None)\n+        if deploymentInfo.qtPath is None:\n+            if verbose >= 1:\n+                sys.stderr.write(\"Warning: Could not detect Qt's path, skipping plugin deployment!\\n\")\n+            config.plugins = False\n+except RuntimeError as e:\n+    if verbose >= 1:\n+        sys.stderr.write(\"Error: {}\\n\".format(str(e)))\n+    sys.exit(1)\n+\n+# ------------------------------------------------\n+\n+if config.plugins:\n+    if verbose >= 2:\n+        print(\"+ Deploying plugins +\")\n+    \n+    try:\n+        deployPlugins(applicationBundle, deploymentInfo, config.strip, verbose)\n+    except RuntimeError as e:\n+        if verbose >= 1:\n+            sys.stderr.write(\"Error: {}\\n\".format(str(e)))\n+        sys.exit(1)\n+\n+# ------------------------------------------------\n+\n+if len(config.add_qt_tr) == 0:\n+    add_qt_tr = []\n+else:\n+    if translations_dir is not None:\n+        qt_tr_dir = translations_dir\n+    else:\n+        if deploymentInfo.qtPath is not None:\n+            qt_tr_dir = os.path.join(deploymentInfo.qtPath, \"translations\")\n+        else:\n+            sys.stderr.write(\"Error: Could not find Qt translation path\\n\")\n+            sys.exit(1)\n+    add_qt_tr = [\"qt_{}.qm\".format(lng) for lng in config.add_qt_tr[0].split(\",\")]\n+    for lng_file in add_qt_tr:\n+        p = os.path.join(qt_tr_dir, lng_file)\n+        if verbose >= 3:\n+            print(\"Checking for \\\"{}\\\"...\".format(p))\n+        if not os.path.exists(p):\n+            if verbose >= 1:\n+                sys.stderr.write(\"Error: Could not find Qt translation file \\\"{}\\\"\\n\".format(lng_file))\n+                sys.exit(1)\n+\n+# ------------------------------------------------\n+\n+if verbose >= 2:\n+    print(\"+ Installing qt.conf +\")\n+\n+with open(os.path.join(applicationBundle.resourcesPath, \"qt.conf\"), \"wb\") as f:\n+    f.write(qt_conf.encode())\n+\n+# ------------------------------------------------\n+\n+if len(add_qt_tr) > 0 and verbose >= 2:\n+    print(\"+ Adding Qt translations +\")\n+\n+for lng_file in add_qt_tr:\n+    if verbose >= 3:\n+        print(os.path.join(qt_tr_dir, lng_file), \"->\", os.path.join(applicationBundle.resourcesPath, lng_file))\n+    shutil.copy2(os.path.join(qt_tr_dir, lng_file), os.path.join(applicationBundle.resourcesPath, lng_file))\n+\n+# ------------------------------------------------\n+\n+if len(config.add_resources) > 0 and verbose >= 2:\n+    print(\"+ Adding additional resources +\")\n+\n+for p in config.add_resources:\n+    t = os.path.join(applicationBundle.resourcesPath, os.path.basename(p))\n+    if verbose >= 3:\n+        print(p, \"->\", t)\n+    if os.path.isdir(p):\n+        shutil.copytree(p, t, symlinks=True)\n+    else:\n+        shutil.copy2(p, t)\n+\n+# ------------------------------------------------\n+\n+if config.sign and 'CODESIGNARGS' not in os.environ:\n+    print(\"You must set the CODESIGNARGS environment variable. Skipping signing.\")\n+elif config.sign:\n+    if verbose >= 1:\n+        print(\"Code-signing app bundle {}\".format(target))\n+    subprocess.check_call(\"codesign --force {} {}\".format(os.environ['CODESIGNARGS'], target), shell=True)\n+\n+# ------------------------------------------------\n+\n+if config.dmg is not None:\n+\n+    def runHDIUtil(verb: str, image_basename: str, **kwargs) -> int:\n+        hdiutil_args = [\"hdiutil\", verb, image_basename + \".dmg\"]\n+        if \"capture_stdout\" in kwargs:\n+            del kwargs[\"capture_stdout\"]\n+            run = subprocess.check_output\n+        else:\n+            if verbose < 2:\n+                hdiutil_args.append(\"-quiet\")\n+            elif verbose >= 3:\n+                hdiutil_args.append(\"-verbose\")\n+            run = subprocess.check_call\n+        \n+        for key, value in kwargs.items():\n+            hdiutil_args.append(\"-\" + key)\n+            if value is not True:\n+                hdiutil_args.append(str(value))\n+        \n+        return run(hdiutil_args, universal_newlines=True)\n+    \n+    if verbose >= 2:\n+        if fancy is None:\n+            print(\"+ Creating .dmg disk image +\")\n+        else:\n+            print(\"+ Preparing .dmg disk image +\")\n+    \n+    if config.dmg != \"\":\n+        dmg_name = config.dmg\n+    else:\n+        spl = app_bundle_name.split(\" \")\n+        dmg_name = spl[0] + \"\".join(p.capitalize() for p in spl[1:])\n+    \n+    if fancy is None:\n+        try:\n+            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=volname, ov=True)\n+        except subprocess.CalledProcessError as e:\n+            sys.exit(e.returncode)\n+    else:\n+        if verbose >= 3:\n+            print(\"Determining size of \\\"dist\\\"...\")\n+        size = 0\n+        for path, dirs, files in os.walk(\"dist\"):\n+            for file in files:\n+                size += os.path.getsize(os.path.join(path, file))\n+        size += int(size * 0.15)\n+        \n+        if verbose >= 3:\n+            print(\"Creating temp image for modification...\")\n+        try:\n+            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=volname, ov=True)\n+        except subprocess.CalledProcessError as e:\n+            sys.exit(e.returncode)\n+        \n+        if verbose >= 3:\n+            print(\"Attaching temp image...\")\n+        try:\n+            output = runHDIUtil(\"attach\", dmg_name + \".temp\", readwrite=True, noverify=True, noautoopen=True, capture_stdout=True)\n+        except subprocess.CalledProcessError as e:\n+            sys.exit(e.returncode)\n+\n+        m = re.search(r\"/Volumes/(.+$)\", output)\n+        disk_root = m.group(0)\n+        disk_name = m.group(1)\n+        \n+        if verbose >= 2:\n+            print(\"+ Applying fancy settings +\")\n+        \n+        if \"background_picture\" in fancy:\n+            bg_path = os.path.join(disk_root, \".background\", os.path.basename(fancy[\"background_picture\"]))\n+            os.mkdir(os.path.dirname(bg_path))\n+            if verbose >= 3:\n+                print(fancy[\"background_picture\"], \"->\", bg_path)\n+            shutil.copy2(fancy[\"background_picture\"], bg_path)\n+        else:\n+            bg_path = None\n+        \n+        if fancy.get(\"applications_symlink\", False):\n+            os.symlink(\"/Applications\", os.path.join(disk_root, \"Applications\"))\n+        \n+        # The Python appscript package broke with OSX 10.8 and isn't being fixed.\n+        # So we now build up an AppleScript string and use the osascript command\n+        # to make the .dmg file pretty:\n+        appscript = Template( \"\"\"\n+        on run argv\n+           tell application \"Finder\"\n+             tell disk \"$disk\"\n+                   open\n+                   set current view of container window to icon view\n+                   set toolbar visible of container window to false\n+                   set statusbar visible of container window to false\n+                   set the bounds of container window to {$window_bounds}\n+                   set theViewOptions to the icon view options of container window\n+                   set arrangement of theViewOptions to not arranged\n+                   set icon size of theViewOptions to $icon_size\n+                   $background_commands\n+                   $items_positions\n+                   close -- close/reopen works around a bug...\n+                   open\n+                   update without registering applications\n+                   delay 5\n+                   eject\n+             end tell\n+           end tell\n+        end run\n+        \"\"\")\n+\n+        itemscript = Template('set position of item \"${item}\" of container window to {${position}}')\n+        items_positions = []\n+        if \"items_position\" in fancy:\n+            for name, position in fancy[\"items_position\"].items():\n+                params = { \"item\" : name, \"position\" : \",\".join([str(p) for p in position]) }\n+                items_positions.append(itemscript.substitute(params))\n+\n+        params = {\n+            \"disk\" : volname,\n+            \"window_bounds\" : \"300,300,800,620\",\n+            \"icon_size\" : \"96\",\n+            \"background_commands\" : \"\",\n+            \"items_positions\" : \"\\n                   \".join(items_positions)\n+            }\n+        if \"window_bounds\" in fancy:\n+            params[\"window_bounds\"] = \",\".join([str(p) for p in fancy[\"window_bounds\"]])\n+        if \"icon_size\" in fancy:\n+            params[\"icon_size\"] = str(fancy[\"icon_size\"])\n+        if bg_path is not None:\n+            # Set background file, then call SetFile to make it invisible.\n+            # (note: making it invisible first makes set background picture fail)\n+            bgscript = Template(\"\"\"set background picture of theViewOptions to file \".background:$bgpic\"\n+                   do shell script \"SetFile -a V /Volumes/$disk/.background/$bgpic\" \"\"\")\n+            params[\"background_commands\"] = bgscript.substitute({\"bgpic\" : os.path.basename(bg_path), \"disk\" : params[\"disk\"]})\n+\n+        s = appscript.substitute(params)\n+        if verbose >= 2:\n+            print(\"Running AppleScript:\")\n+            print(s)\n+\n+        p = subprocess.Popen(['osascript', '-'], stdin=subprocess.PIPE)\n+        p.communicate(input=s.encode('utf-8'))\n+        if p.returncode:\n+            print(\"Error running osascript.\")\n+\n+        if verbose >= 2:\n+            print(\"+ Finalizing .dmg disk image +\")\n+            time.sleep(5)\n+        \n+        try:\n+            runHDIUtil(\"convert\", dmg_name + \".temp\", format=\"UDBZ\", o=dmg_name + \".dmg\", ov=True)\n+        except subprocess.CalledProcessError as e:\n+            sys.exit(e.returncode)\n+        \n+        os.unlink(dmg_name + \".temp.dmg\")\n+\n+# ------------------------------------------------\n+\n+if verbose >= 2:\n+    print(\"+ Done +\")\n+\n+sys.exit(0)"
      },
      {
        "sha": "0ded87c58f4ee721058f914682a283f9f9a69787",
        "filename": "contrib/qos/README.md",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/qos/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/qos/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/README.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,5 @@\n+### QoS (Quality of service) ###\n+\n+This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Bitcoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN.\n+\n+This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it."
      },
      {
        "sha": "8408545a218e4faa4a3fb41951a3afab21ba199a",
        "filename": "contrib/qos/tc.sh",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2017-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+#network interface on which to limit traffic\n+IF=\"eth0\"\n+#limit of the network interface in question\n+LINKCEIL=\"1gbit\"\n+#limit outbound Bitcoin protocol traffic to this rate\n+LIMIT=\"160kbit\"\n+#defines the IPv4 address space for which you wish to disable rate limiting\n+LOCALNET_V4=\"192.168.0.0/16\"\n+#defines the IPv6 address space for which you wish to disable rate limiting\n+LOCALNET_V6=\"fe80::/10\"\n+\n+#delete existing rules\n+tc qdisc del dev ${IF} root\n+\n+#add root class\n+tc qdisc add dev ${IF} root handle 1: htb default 10\n+\n+#add parent class\n+tc class add dev ${IF} parent 1: classid 1:1 htb rate ${LINKCEIL} ceil ${LINKCEIL}\n+\n+#add our two classes. one unlimited, another limited\n+tc class add dev ${IF} parent 1:1 classid 1:10 htb rate ${LINKCEIL} ceil ${LINKCEIL} prio 0\n+tc class add dev ${IF} parent 1:1 classid 1:11 htb rate ${LIMIT} ceil ${LIMIT} prio 1\n+\n+#add handles to our classes so packets marked with <x> go into the class with \"... handle <x> fw ...\"\n+tc filter add dev ${IF} parent 1: protocol ip prio 1 handle 1 fw classid 1:10\n+tc filter add dev ${IF} parent 1: protocol ip prio 2 handle 2 fw classid 1:11\n+\n+if [ -n \"${LOCALNET_V6}\" ] ; then\n+\t# v6 cannot have the same priority value as v4\n+\ttc filter add dev ${IF} parent 1: protocol ipv6 prio 3 handle 1 fw classid 1:10\n+\ttc filter add dev ${IF} parent 1: protocol ipv6 prio 4 handle 2 fw classid 1:11\n+fi\n+\n+#delete any existing rules\n+#disable for now\n+#ret=0\n+#while [ $ret -eq 0 ]; do\n+#\tiptables -t mangle -D OUTPUT 1\n+#\tret=$?\n+#done\n+\n+#limit outgoing traffic to and from port 8333. but not when dealing with a host on the local network\n+#\t(defined by $LOCALNET_V4 and $LOCALNET_V6)\n+#\t--set-mark marks packages matching these criteria with the number \"2\" (v4)\n+#\t--set-mark marks packages matching these criteria with the number \"4\" (v6)\n+#\tthese packets are filtered by the tc filter with \"handle 2\"\n+#\tthis filter sends the packages into the 1:11 class, and this class is limited to ${LIMIT}\n+iptables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n+iptables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n+\n+if [ -n \"${LOCALNET_V6}\" ] ; then\n+\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n+\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n+fi"
      },
      {
        "sha": "e4a39d609343699cc54dee0d85e105fbce7088a4",
        "filename": "contrib/seeds/.gitignore",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/seeds/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/seeds/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/.gitignore?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1 @@\n+seeds_main.txt"
      },
      {
        "sha": "502c20d0d678c59eafbb976d7a1b2537be0217b6",
        "filename": "contrib/seeds/README.md",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,21 @@\n+# Seeds\n+\n+Utility to generate the seeds.txt list that is compiled into the client\n+(see [src/chainparamsseeds.h](/src/chainparamsseeds.h) and other utilities in [contrib/seeds](/contrib/seeds)).\n+\n+Be sure to update `PATTERN_AGENT` in `makeseeds.py` to include the current version,\n+and remove old versions as necessary (at a minimum when GetDesirableServiceFlags\n+changes its default return value, as those are the services which seeds are added\n+to addrman with).\n+\n+The seeds compiled into the release are created from sipa's DNS seed data, like this:\n+\n+    curl -s http://bitcoin.sipa.be/seeds.txt.gz | gzip -dc > seeds_main.txt\n+    python3 makeseeds.py < seeds_main.txt > nodes_main.txt\n+    python3 generate-seeds.py . > ../../src/chainparamsseeds.h\n+\n+## Dependencies\n+\n+Ubuntu:\n+\n+    sudo apt-get install python3-dnspython"
      },
      {
        "sha": "7630a7a4fa2550396e8e6ee5421a90f640b7be0a",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "added",
        "additions": 138,
        "deletions": 0,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,138 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2017 Wladimir J. van der Laan\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+Script to generate list of seed nodes for chainparams.cpp.\n+\n+This script expects two text files in the directory that is passed as an\n+argument:\n+\n+    nodes_main.txt\n+    nodes_test.txt\n+\n+These files must consist of lines in the format\n+\n+    <ip>\n+    <ip>:<port>\n+    [<ipv6>]\n+    [<ipv6>]:<port>\n+    <onion>.onion\n+    0xDDBBCCAA (IPv4 little-endian old pnSeeds format)\n+\n+The output will be two data structures with the peers in binary format:\n+\n+   static SeedSpec6 pnSeed6_main[]={\n+   ...\n+   }\n+   static SeedSpec6 pnSeed6_test[]={\n+   ...\n+   }\n+\n+These should be pasted into `src/chainparamsseeds.h`.\n+'''\n+\n+from base64 import b32decode\n+from binascii import a2b_hex\n+import sys\n+import os\n+import re\n+\n+# ipv4 in ipv6 prefix\n+pchIPv4 = bytearray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff])\n+# tor-specific ipv6 prefix\n+pchOnionCat = bytearray([0xFD,0x87,0xD8,0x7E,0xEB,0x43])\n+\n+def name_to_ipv6(addr):\n+    if len(addr)>6 and addr.endswith('.onion'):\n+        vchAddr = b32decode(addr[0:-6], True)\n+        if len(vchAddr) != 16-len(pchOnionCat):\n+            raise ValueError('Invalid onion %s' % vchAddr)\n+        return pchOnionCat + vchAddr\n+    elif '.' in addr: # IPv4\n+        return pchIPv4 + bytearray((int(x) for x in addr.split('.')))\n+    elif ':' in addr: # IPv6\n+        sub = [[], []] # prefix, suffix\n+        x = 0\n+        addr = addr.split(':')\n+        for i,comp in enumerate(addr):\n+            if comp == '':\n+                if i == 0 or i == (len(addr)-1): # skip empty component at beginning or end\n+                    continue\n+                x += 1 # :: skips to suffix\n+                assert(x < 2)\n+            else: # two bytes per component\n+                val = int(comp, 16)\n+                sub[x].append(val >> 8)\n+                sub[x].append(val & 0xff)\n+        nullbytes = 16 - len(sub[0]) - len(sub[1])\n+        assert((x == 0 and nullbytes == 0) or (x == 1 and nullbytes > 0))\n+        return bytearray(sub[0] + ([0] * nullbytes) + sub[1])\n+    elif addr.startswith('0x'): # IPv4-in-little-endian\n+        return pchIPv4 + bytearray(reversed(a2b_hex(addr[2:])))\n+    else:\n+        raise ValueError('Could not parse address %s' % addr)\n+\n+def parse_spec(s, defaultport):\n+    match = re.match(r'\\[([0-9a-fA-F:]+)\\](?::([0-9]+))?$', s)\n+    if match: # ipv6\n+        host = match.group(1)\n+        port = match.group(2)\n+    elif s.count(':') > 1: # ipv6, no port\n+        host = s\n+        port = ''\n+    else:\n+        (host,_,port) = s.partition(':')\n+\n+    if not port:\n+        port = defaultport\n+    else:\n+        port = int(port)\n+\n+    host = name_to_ipv6(host)\n+\n+    return (host,port)\n+\n+def process_nodes(g, f, structname, defaultport):\n+    g.write('static SeedSpec6 %s[] = {\\n' % structname)\n+    first = True\n+    for line in f:\n+        comment = line.find('#')\n+        if comment != -1:\n+            line = line[0:comment]\n+        line = line.strip()\n+        if not line:\n+            continue\n+        if not first:\n+            g.write(',\\n')\n+        first = False\n+\n+        (host,port) = parse_spec(line, defaultport)\n+        hoststr = ','.join(('0x%02x' % b) for b in host)\n+        g.write('    {{%s}, %i}' % (hoststr, port))\n+    g.write('\\n};\\n')\n+\n+def main():\n+    if len(sys.argv)<2:\n+        print(('Usage: %s <path_to_nodes_txt>' % sys.argv[0]), file=sys.stderr)\n+        sys.exit(1)\n+    g = sys.stdout\n+    indir = sys.argv[1]\n+    g.write('#ifndef BITCOIN_CHAINPARAMSSEEDS_H\\n')\n+    g.write('#define BITCOIN_CHAINPARAMSSEEDS_H\\n')\n+    g.write('/**\\n')\n+    g.write(' * List of fixed seed nodes for the bitcoin network\\n')\n+    g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n+    g.write(' *\\n')\n+    g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n+    g.write(' * IPv4 as well as onion addresses are wrapped inside an IPv6 address accordingly.\\n')\n+    g.write(' */\\n')\n+    with open(os.path.join(indir,'nodes_main.txt'), 'r', encoding=\"utf8\") as f:\n+        process_nodes(g, f, 'pnSeed6_main', 8333)\n+    g.write('\\n')\n+    with open(os.path.join(indir,'nodes_test.txt'), 'r', encoding=\"utf8\") as f:\n+        process_nodes(g, f, 'pnSeed6_test', 18333)\n+    g.write('#endif // BITCOIN_CHAINPARAMSSEEDS_H\\n')\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "6d9d49ad2fc1640a2644313cfc81da0d2ed4596b",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "added",
        "additions": 228,
        "deletions": 0,
        "changes": 228,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,228 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2013-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# Generate seeds.txt from Pieter's DNS seeder\n+#\n+\n+import re\n+import sys\n+import dns.resolver\n+import collections\n+\n+NSEEDS=512\n+\n+MAX_SEEDS_PER_ASN=2\n+\n+MIN_BLOCKS = 337600\n+\n+# These are hosts that have been observed to be behaving strangely (e.g.\n+# aggressively connecting to every node).\n+with open(\"suspicious_hosts.txt\", mode=\"r\", encoding=\"utf-8\") as f:\n+    SUSPICIOUS_HOSTS = {s.strip() for s in f if s.strip()}\n+\n+\n+PATTERN_IPV4 = re.compile(r\"^((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})):(\\d+)$\")\n+PATTERN_IPV6 = re.compile(r\"^\\[([0-9a-z:]+)\\]:(\\d+)$\")\n+PATTERN_ONION = re.compile(r\"^([abcdefghijklmnopqrstuvwxyz234567]{16}\\.onion):(\\d+)$\")\n+PATTERN_AGENT = re.compile(\n+    r\"^/Satoshi:(\"\n+    r\"0.14.(0|1|2|3|99)|\"\n+    r\"0.15.(0|1|2|99)|\"\n+    r\"0.16.(0|1|2|3|99)|\"\n+    r\"0.17.(0|0.1|1|2|99)|\"\n+    r\"0.18.(0|1|99)|\"\n+    r\"0.19.(0|1|99)|\"\n+    r\"0.20.(0|1|99)|\"\n+    r\"0.21.99\"\n+    r\")\")\n+\n+def parseline(line):\n+    sline = line.split()\n+    if len(sline) < 11:\n+       return None\n+    m = PATTERN_IPV4.match(sline[0])\n+    sortkey = None\n+    ip = None\n+    if m is None:\n+        m = PATTERN_IPV6.match(sline[0])\n+        if m is None:\n+            m = PATTERN_ONION.match(sline[0])\n+            if m is None:\n+                return None\n+            else:\n+                net = 'onion'\n+                ipstr = sortkey = m.group(1)\n+                port = int(m.group(2))\n+        else:\n+            net = 'ipv6'\n+            if m.group(1) in ['::']: # Not interested in localhost\n+                return None\n+            ipstr = m.group(1)\n+            sortkey = ipstr # XXX parse IPv6 into number, could use name_to_ipv6 from generate-seeds\n+            port = int(m.group(2))\n+    else:\n+        # Do IPv4 sanity check\n+        ip = 0\n+        for i in range(0,4):\n+            if int(m.group(i+2)) < 0 or int(m.group(i+2)) > 255:\n+                return None\n+            ip = ip + (int(m.group(i+2)) << (8*(3-i)))\n+        if ip == 0:\n+            return None\n+        net = 'ipv4'\n+        sortkey = ip\n+        ipstr = m.group(1)\n+        port = int(m.group(6))\n+    # Skip bad results.\n+    if sline[1] == 0:\n+        return None\n+    # Extract uptime %.\n+    uptime30 = float(sline[7][:-1])\n+    # Extract Unix timestamp of last success.\n+    lastsuccess = int(sline[2])\n+    # Extract protocol version.\n+    version = int(sline[10])\n+    # Extract user agent.\n+    agent = sline[11][1:-1]\n+    # Extract service flags.\n+    service = int(sline[9], 16)\n+    # Extract blocks.\n+    blocks = int(sline[8])\n+    # Construct result.\n+    return {\n+        'net': net,\n+        'ip': ipstr,\n+        'port': port,\n+        'ipnum': ip,\n+        'uptime': uptime30,\n+        'lastsuccess': lastsuccess,\n+        'version': version,\n+        'agent': agent,\n+        'service': service,\n+        'blocks': blocks,\n+        'sortkey': sortkey,\n+    }\n+\n+def dedup(ips):\n+    '''deduplicate by address,port'''\n+    d = {}\n+    for ip in ips:\n+        d[ip['ip'],ip['port']] = ip\n+    return list(d.values())\n+\n+def filtermultiport(ips):\n+    '''Filter out hosts with more nodes per IP'''\n+    hist = collections.defaultdict(list)\n+    for ip in ips:\n+        hist[ip['sortkey']].append(ip)\n+    return [value[0] for (key,value) in list(hist.items()) if len(value)==1]\n+\n+def lookup_asn(net, ip):\n+    '''\n+    Look up the asn for an IP (4 or 6) address by querying cymru.com, or None\n+    if it could not be found.\n+    '''\n+    try:\n+        if net == 'ipv4':\n+            ipaddr = ip\n+            prefix = '.origin'\n+        else:                  # http://www.team-cymru.com/IP-ASN-mapping.html\n+            res = str()                         # 2001:4860:b002:23::68\n+            for nb in ip.split(':')[:4]:  # pick the first 4 nibbles\n+                for c in nb.zfill(4):           # right padded with '0'\n+                    res += c + '.'              # 2001 4860 b002 0023\n+            ipaddr = res.rstrip('.')            # 2.0.0.1.4.8.6.0.b.0.0.2.0.0.2.3\n+            prefix = '.origin6'\n+\n+        asn = int([x.to_text() for x in dns.resolver.query('.'.join(\n+                   reversed(ipaddr.split('.'))) + prefix + '.asn.cymru.com',\n+                   'TXT').response.answer][0].split('\\\"')[1].split(' ')[0])\n+        return asn\n+    except Exception:\n+        sys.stderr.write('ERR: Could not resolve ASN for \"' + ip + '\"\\n')\n+        return None\n+\n+# Based on Greg Maxwell's seed_filter.py\n+def filterbyasn(ips, max_per_asn, max_per_net):\n+    # Sift out ips by type\n+    ips_ipv46 = [ip for ip in ips if ip['net'] in ['ipv4', 'ipv6']]\n+    ips_onion = [ip for ip in ips if ip['net'] == 'onion']\n+\n+    # Filter IPv46 by ASN, and limit to max_per_net per network\n+    result = []\n+    net_count = collections.defaultdict(int)\n+    asn_count = collections.defaultdict(int)\n+    for ip in ips_ipv46:\n+        if net_count[ip['net']] == max_per_net:\n+            continue\n+        asn = lookup_asn(ip['net'], ip['ip'])\n+        if asn is None or asn_count[asn] == max_per_asn:\n+            continue\n+        asn_count[asn] += 1\n+        net_count[ip['net']] += 1\n+        result.append(ip)\n+\n+    # Add back Onions (up to max_per_net)\n+    result.extend(ips_onion[0:max_per_net])\n+    return result\n+\n+def ip_stats(ips):\n+    hist = collections.defaultdict(int)\n+    for ip in ips:\n+        if ip is not None:\n+            hist[ip['net']] += 1\n+\n+    return '%6d %6d %6d' % (hist['ipv4'], hist['ipv6'], hist['onion'])\n+\n+def main():\n+    lines = sys.stdin.readlines()\n+    ips = [parseline(line) for line in lines]\n+\n+    print('\\x1b[7m  IPv4   IPv6  Onion Pass                                               \\x1b[0m', file=sys.stderr)\n+    print('%s Initial' % (ip_stats(ips)), file=sys.stderr)\n+    # Skip entries with invalid address.\n+    ips = [ip for ip in ips if ip is not None]\n+    print('%s Skip entries with invalid address' % (ip_stats(ips)), file=sys.stderr)\n+    # Skip duplicates (in case multiple seeds files were concatenated)\n+    ips = dedup(ips)\n+    print('%s After removing duplicates' % (ip_stats(ips)), file=sys.stderr)\n+    # Skip entries from suspicious hosts.\n+    ips = [ip for ip in ips if ip['ip'] not in SUSPICIOUS_HOSTS]\n+    print('%s Skip entries from suspicious hosts' % (ip_stats(ips)), file=sys.stderr)\n+    # Enforce minimal number of blocks.\n+    ips = [ip for ip in ips if ip['blocks'] >= MIN_BLOCKS]\n+    print('%s Enforce minimal number of blocks' % (ip_stats(ips)), file=sys.stderr)\n+    # Require service bit 1.\n+    ips = [ip for ip in ips if (ip['service'] & 1) == 1]\n+    print('%s Require service bit 1' % (ip_stats(ips)), file=sys.stderr)\n+    # Require at least 50% 30-day uptime for clearnet, 10% for onion.\n+    req_uptime = {\n+        'ipv4': 50,\n+        'ipv6': 50,\n+        'onion': 10,\n+    }\n+    ips = [ip for ip in ips if ip['uptime'] > req_uptime[ip['net']]]\n+    print('%s Require minimum uptime' % (ip_stats(ips)), file=sys.stderr)\n+    # Require a known and recent user agent.\n+    ips = [ip for ip in ips if PATTERN_AGENT.match(ip['agent'])]\n+    print('%s Require a known and recent user agent' % (ip_stats(ips)), file=sys.stderr)\n+    # Sort by availability (and use last success as tie breaker)\n+    ips.sort(key=lambda x: (x['uptime'], x['lastsuccess'], x['ip']), reverse=True)\n+    # Filter out hosts with multiple bitcoin ports, these are likely abusive\n+    ips = filtermultiport(ips)\n+    print('%s Filter out hosts with multiple bitcoin ports' % (ip_stats(ips)), file=sys.stderr)\n+    # Look up ASNs and limit results, both per ASN and globally.\n+    ips = filterbyasn(ips, MAX_SEEDS_PER_ASN, NSEEDS)\n+    print('%s Look up ASNs and limit results per ASN and per net' % (ip_stats(ips)), file=sys.stderr)\n+    # Sort the results by IP address (for deterministic output).\n+    ips.sort(key=lambda x: (x['net'], x['sortkey']))\n+    for ip in ips:\n+        if ip['net'] == 'ipv6':\n+            print('[%s]:%i' % (ip['ip'], ip['port']))\n+        else:\n+            print('%s:%i' % (ip['ip'], ip['port']))\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "7b97436013871abb6a41ab02f1916cbec4df54c7",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "added",
        "additions": 1164,
        "deletions": 0,
        "changes": 1164,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,1164 @@\n+2.39.173.126:8333\n+3.14.168.201:48333\n+4.36.112.44:8333\n+5.8.18.31:8333\n+5.14.200.167:8333\n+5.56.20.2:8333\n+5.102.146.99:8333\n+5.103.137.146:9333\n+5.128.87.126:8333\n+5.133.65.82:8333\n+5.187.55.242:8333\n+5.188.62.24:8333\n+5.188.62.33:8333\n+5.199.133.193:8333\n+8.38.89.152:8333\n+13.231.20.249:8333\n+18.27.79.17:8333\n+20.184.15.116:8433\n+23.28.205.97:8333\n+23.106.252.230:8333\n+23.175.0.202:8333\n+23.175.0.212:8333\n+23.241.250.252:8333\n+23.245.24.154:8333\n+24.86.184.66:8333\n+24.116.246.9:8333\n+24.141.34.166:8333\n+24.155.196.246:8333\n+24.157.130.222:8333\n+24.188.176.255:8333\n+24.237.70.53:8333\n+27.124.4.67:8333\n+31.17.70.80:8333\n+31.21.8.32:8333\n+31.45.118.10:8333\n+31.132.17.56:8333\n+31.134.121.223:8333\n+32.214.183.114:8333\n+35.137.236.32:8333\n+35.185.145.105:8333\n+35.209.51.212:8333\n+35.245.175.76:8333\n+37.116.95.41:8333\n+37.143.9.107:8333\n+37.143.116.43:8333\n+37.191.244.149:8333\n+37.211.78.253:8333\n+37.221.209.222:24333\n+37.228.92.110:8333\n+43.225.62.107:8333\n+43.225.157.152:8333\n+45.36.184.6:8333\n+45.48.168.16:8333\n+45.85.85.8:8333\n+45.85.85.9:8333\n+45.129.180.214:8333\n+45.149.78.128:8333\n+45.151.125.218:8333\n+45.154.255.46:8333\n+45.155.157.239:8333\n+46.28.132.34:8333\n+46.28.204.21:8333\n+46.32.50.98:8333\n+46.59.13.35:8333\n+46.128.40.173:8333\n+46.128.140.193:8333\n+46.146.248.89:8333\n+46.166.162.45:20001\n+46.188.15.6:8333\n+46.229.165.142:8333\n+46.229.238.187:8333\n+46.249.83.82:8333\n+46.254.217.169:8333\n+47.74.191.34:8333\n+47.115.53.163:8333\n+47.187.26.135:8333\n+47.222.103.234:8333\n+47.253.5.99:8333\n+49.232.82.76:8333\n+49.247.215.43:8333\n+50.2.13.166:8333\n+50.34.39.72:8333\n+50.45.232.189:8333\n+50.68.104.92:8333\n+51.68.36.57:8333\n+51.154.60.34:8333\n+52.169.238.66:8333\n+54.197.30.223:8333\n+54.227.66.57:8333\n+58.158.0.86:8333\n+58.171.135.242:8333\n+58.229.208.158:8333\n+60.244.109.19:8333\n+62.38.75.208:8333\n+62.74.143.11:8333\n+62.80.227.49:8333\n+62.152.58.16:9421\n+62.210.167.199:8333\n+62.234.188.160:8333\n+62.251.54.163:8333\n+63.227.116.162:8333\n+65.19.155.82:8333\n+65.95.49.102:8333\n+66.18.172.21:8333\n+66.240.237.155:8333\n+67.210.228.203:8333\n+69.30.215.42:8333\n+69.59.18.206:8333\n+69.64.33.71:8333\n+69.119.193.9:8333\n+69.209.23.72:8333\n+70.123.125.237:8333\n+70.185.56.136:8333\n+71.38.90.235:8333\n+72.12.73.70:8333\n+72.53.134.182:8333\n+72.225.7.80:8333\n+72.234.182.39:8333\n+72.250.184.57:8333\n+73.83.103.79:8333\n+74.118.137.119:8333\n+74.133.100.74:8333\n+74.215.219.214:8333\n+74.220.255.190:8333\n+75.158.39.231:8333\n+77.53.53.196:8333\n+77.70.16.245:8333\n+77.105.87.97:8333\n+77.120.113.69:8433\n+77.120.122.22:8433\n+77.166.83.167:8333\n+77.247.178.130:8333\n+78.27.139.13:8333\n+78.63.28.146:8333\n+78.83.103.4:8333\n+78.141.123.99:8333\n+79.77.33.131:8333\n+79.77.133.30:8333\n+79.101.1.25:8333\n+79.117.192.229:8333\n+79.133.228.55:8333\n+79.146.21.163:8333\n+80.89.203.172:8001\n+80.93.213.246:8333\n+80.192.98.110:8334\n+80.229.28.60:8333\n+80.232.247.210:8333\n+80.242.39.76:8333\n+80.253.94.252:8333\n+81.0.198.25:8333\n+81.7.13.84:8333\n+81.117.225.245:8333\n+81.135.137.225:8333\n+81.171.22.143:8333\n+81.191.233.134:8333\n+81.232.78.75:8333\n+81.242.91.23:8333\n+82.29.58.109:8333\n+82.136.99.22:8333\n+82.149.97.25:17567\n+82.165.19.48:8333\n+82.194.153.233:8333\n+82.197.215.125:8333\n+82.199.102.10:8333\n+82.200.205.30:8333\n+82.202.68.231:8333\n+82.221.128.31:8333\n+82.228.6.131:8333\n+83.85.139.94:8333\n+83.99.245.20:8333\n+83.137.41.10:8333\n+83.174.209.87:8333\n+83.217.8.31:44420\n+84.38.3.249:8333\n+84.38.185.122:8333\n+84.92.92.247:8333\n+84.192.16.234:8333\n+84.194.158.124:8333\n+84.212.145.24:8333\n+84.212.244.95:8333\n+84.216.51.36:8333\n+84.255.249.163:8333\n+85.25.255.147:8333\n+85.70.156.209:8333\n+85.145.142.46:8333\n+85.170.233.95:8333\n+85.184.138.108:8333\n+85.190.0.5:8333\n+85.191.200.51:8333\n+85.192.191.6:18500\n+85.194.238.131:8333\n+85.195.54.110:8333\n+85.214.161.252:8333\n+85.214.185.51:8333\n+85.241.106.203:8333\n+85.246.168.252:8333\n+86.56.238.247:8333\n+87.61.90.230:8333\n+87.79.68.86:8333\n+87.79.94.221:8333\n+87.120.8.5:20008\n+87.246.46.132:8333\n+87.247.111.222:8333\n+88.84.222.252:8333\n+88.86.243.241:8333\n+88.87.93.52:1691\n+88.119.197.200:8333\n+88.129.253.94:8333\n+88.147.244.250:8333\n+88.208.3.195:8333\n+88.212.44.33:8333\n+88.214.57.95:8333\n+89.106.199.38:8333\n+89.108.126.228:8333\n+89.115.120.43:8333\n+89.133.68.65:8333\n+89.190.19.162:8333\n+89.248.172.10:8333\n+90.146.153.21:8333\n+90.182.165.18:8333\n+91.106.188.229:8333\n+91.193.237.116:8333\n+91.204.99.178:8333\n+91.204.149.5:8333\n+91.214.70.63:8333\n+91.228.152.236:8333\n+92.12.154.115:8333\n+92.249.143.44:8333\n+93.12.66.98:8333\n+93.46.54.4:8333\n+93.115.20.130:8333\n+93.123.180.164:8333\n+93.189.145.169:8333\n+93.241.228.102:8333\n+94.19.7.55:8333\n+94.19.128.204:8333\n+94.52.112.227:8333\n+94.154.96.130:8333\n+94.156.174.201:8333\n+94.158.246.183:8333\n+94.177.171.73:8333\n+94.199.178.233:8100\n+94.237.125.30:8333\n+94.247.134.77:8333\n+95.48.228.45:8333\n+95.69.249.63:8333\n+95.82.146.70:8333\n+95.83.73.31:8333\n+95.84.164.43:8333\n+95.87.226.56:8333\n+95.110.234.93:8333\n+95.163.71.126:8333\n+95.164.65.194:8333\n+95.174.66.211:8333\n+95.211.174.137:8333\n+95.216.11.156:8433\n+96.47.114.108:8333\n+97.84.232.105:8333\n+97.99.205.241:8333\n+98.25.193.114:8333\n+99.115.25.13:8333\n+101.32.19.184:8333\n+101.100.174.240:8333\n+102.132.245.16:8333\n+103.14.244.190:8333\n+103.76.48.5:8333\n+103.84.84.250:8335\n+103.99.168.150:8333\n+103.109.101.216:8333\n+103.122.247.102:8333\n+103.129.13.45:8333\n+103.198.192.14:20008\n+103.224.119.99:8333\n+103.231.191.7:8333\n+103.235.230.196:8333\n+104.171.242.155:8333\n+104.238.220.199:8333\n+106.163.158.127:8333\n+107.150.41.179:8333\n+107.159.93.103:8333\n+108.183.77.12:8333\n+109.9.175.65:8333\n+109.99.63.159:8333\n+109.110.81.90:8333\n+109.123.213.130:8333\n+109.134.232.81:8333\n+109.169.20.168:8333\n+109.199.241.148:8333\n+109.229.210.6:8333\n+109.236.105.40:8333\n+109.248.206.13:8333\n+111.42.74.65:8333\n+111.90.140.179:8333\n+112.215.205.236:8333\n+113.52.135.125:8333\n+114.23.246.137:8333\n+115.47.141.250:8885\n+115.70.110.4:8333\n+116.34.189.55:8333\n+118.103.126.140:28333\n+118.189.187.219:8333\n+119.3.208.236:8333\n+119.8.47.225:8333\n+119.17.151.61:8333\n+120.25.24.30:8333\n+120.241.34.10:8333\n+121.98.205.100:8333\n+122.112.148.153:8339\n+122.116.42.140:8333\n+124.217.235.180:8333\n+125.236.215.133:8333\n+129.13.189.212:8333\n+130.185.77.105:8333\n+131.188.40.191:8333\n+131.193.220.15:8333\n+135.23.124.239:8333\n+136.33.185.32:8333\n+136.56.170.96:8333\n+137.226.34.46:8333\n+138.229.26.42:8333\n+139.9.249.234:8333\n+141.101.8.36:8333\n+143.176.224.104:8333\n+144.2.69.224:8333\n+144.34.161.65:18333\n+144.91.116.44:8333\n+144.137.29.181:8333\n+148.66.50.50:8335\n+148.72.150.231:8333\n+148.170.212.44:8333\n+149.167.99.190:8333\n+154.92.16.191:8333\n+154.221.27.21:8333\n+156.19.19.90:8333\n+156.241.5.190:8333\n+157.13.61.76:8333\n+157.13.61.80:8333\n+157.230.166.98:14391\n+158.75.203.2:8333\n+158.181.125.150:8333\n+158.181.226.33:8333\n+159.100.242.254:8333\n+159.100.248.234:8333\n+159.138.87.18:8333\n+160.16.0.30:8333\n+162.0.227.54:8333\n+162.0.227.56:8333\n+162.62.18.226:8333\n+162.209.1.233:8333\n+162.243.175.86:8333\n+162.244.80.208:8333\n+162.250.188.87:8333\n+162.250.189.53:8333\n+163.158.202.112:8333\n+163.158.243.230:8333\n+165.73.62.31:8333\n+166.62.82.103:32771\n+166.70.94.106:8333\n+167.86.90.239:8333\n+169.44.34.203:8333\n+172.93.101.73:8333\n+172.105.7.47:8333\n+173.23.103.30:8000\n+173.53.79.6:8333\n+173.70.12.86:8333\n+173.89.28.137:8333\n+173.176.184.54:8333\n+173.208.128.10:8333\n+173.254.204.69:8333\n+173.255.204.124:8333\n+174.94.155.224:8333\n+174.114.102.41:8333\n+174.114.124.12:8333\n+176.10.227.59:8333\n+176.31.224.214:8333\n+176.74.136.237:8333\n+176.99.2.207:8333\n+176.106.191.2:8333\n+176.160.228.9:8333\n+176.191.182.3:8333\n+176.212.185.153:8333\n+176.241.137.183:8333\n+177.38.215.73:8333\n+178.16.222.146:8333\n+178.132.2.246:8333\n+178.143.191.171:8333\n+178.148.172.209:8333\n+178.148.226.180:8333\n+178.150.96.46:8333\n+178.182.227.50:8333\n+178.236.137.63:8333\n+178.255.42.126:8333\n+180.150.52.37:8333\n+181.39.32.99:8333\n+181.48.77.26:8333\n+181.52.223.52:8333\n+181.238.51.152:8333\n+183.88.223.208:8333\n+183.110.220.210:30301\n+184.95.58.166:8336\n+184.164.147.82:41333\n+184.171.208.109:8333\n+185.25.48.39:8333\n+185.25.48.184:8333\n+185.64.116.15:8333\n+185.80.219.132:8333\n+185.85.3.140:8333\n+185.95.219.53:8333\n+185.108.244.41:8333\n+185.134.233.121:8333\n+185.145.128.21:8333\n+185.148.3.227:8333\n+185.153.196.240:8333\n+185.158.114.184:8333\n+185.165.168.196:8333\n+185.181.230.74:8333\n+185.185.26.141:8111\n+185.186.208.162:8333\n+185.189.132.178:57780\n+185.211.59.50:8333\n+185.233.148.146:8333\n+185.238.129.113:8333\n+185.249.199.106:8333\n+185.251.161.54:8333\n+187.189.153.136:8333\n+188.37.24.190:8333\n+188.42.40.234:18333\n+188.61.46.36:8333\n+188.68.45.143:8333\n+188.127.229.105:8333\n+188.134.6.84:8333\n+188.134.8.36:8333\n+188.214.129.65:20012\n+188.230.168.114:8333\n+189.34.14.93:8333\n+189.207.46.32:8333\n+190.211.204.68:8333\n+191.209.21.188:8333\n+192.3.11.20:8333\n+192.3.185.210:8333\n+192.65.170.15:8333\n+192.65.170.50:8333\n+192.146.137.18:8333\n+192.157.202.178:8333\n+192.227.80.83:8333\n+193.10.203.23:8334\n+193.25.6.206:8333\n+193.42.110.30:8333\n+193.58.196.212:8333\n+193.106.28.8:8333\n+193.189.190.123:8333\n+193.194.163.35:8333\n+193.194.163.53:8333\n+194.14.246.205:8333\n+194.36.91.253:8333\n+194.126.113.135:8333\n+194.135.135.69:8333\n+195.56.63.4:8333\n+195.56.63.5:8333\n+195.67.139.54:8333\n+195.135.194.8:8333\n+195.202.169.149:8333\n+195.206.105.42:8333\n+195.209.249.164:8333\n+198.1.231.6:8333\n+198.200.43.215:8333\n+199.182.184.204:8333\n+199.247.7.208:8333\n+199.247.249.188:8333\n+200.7.252.118:8333\n+200.20.186.254:8333\n+200.83.166.136:8333\n+202.55.87.45:8333\n+202.79.167.65:8333\n+202.108.211.135:8333\n+202.169.102.73:8333\n+203.130.48.117:8885\n+203.132.95.10:8333\n+203.151.166.123:8333\n+204.93.113.108:8333\n+204.111.241.195:8333\n+206.124.149.66:8333\n+207.115.102.98:8333\n+207.229.46.150:8333\n+208.76.252.198:8333\n+208.100.13.56:8333\n+208.100.178.175:8333\n+208.110.99.105:8333\n+209.6.210.179:8333\n+209.133.220.74:8333\n+209.141.57.57:8333\n+211.27.147.67:8333\n+212.34.225.118:8333\n+212.89.173.216:8333\n+212.99.226.36:9020\n+212.237.96.98:8333\n+213.89.131.53:8333\n+216.38.129.164:8333\n+216.134.165.55:8333\n+216.146.251.8:8333\n+216.189.190.95:8333\n+216.226.128.189:8333\n+216.236.164.82:8333\n+217.19.216.210:8333\n+217.26.32.10:8333\n+217.64.47.138:8333\n+217.64.133.220:8333\n+217.92.55.246:8333\n+218.31.113.245:8333\n+218.255.242.114:8333\n+220.133.39.61:8333\n+223.16.30.175:8333\n+[2001:19f0:6001:306f:ec4:7aff:fe8f:66ec]:8333\n+[2001:1bc0:cc::a001]:8333\n+[2001:1c02:2f18:d00:b62e:99ff:fe49:d492]:8333\n+[2001:4100:0:64::93]:8333\n+[2001:4100:0:64:dcaf:afff:fe00:6707]:8333\n+[2001:470:a:c13::2]:8333\n+[2001:4801:7819:74:b745:b9d5:ff10:a61a]:8333\n+[2001:4ba0:fffa:5d::93]:8333\n+[2001:610:1908:ff01:f816:3eff:fe33:2e32]:8333\n+[2001:638:a000:4140::ffff:191]:8333\n+[2001:648:2800:131:4b1f:f6fc:20f7:f99f]:8333\n+[2001:678:7dc:8::2]:8333\n+[2001:678:cc8::1:10:88]:20008\n+[2001:67c:1220:80c::93e5:dd2]:8333\n+[2001:67c:1220:80c:e5dc:ad0c:9289:c28f]:8333\n+[2001:67c:16dc:1201:5054:ff:fe17:4dac]:8333\n+[2001:67c:2354:2::22]:8333\n+[2001:67c:26b4:12:7ae3:b5ff:fe04:6f9c]:8333\n+[2001:67c:2f0::20:fa]:8333\n+[2001:718:801:311:5054:ff:fe19:c483]:8333\n+[2001:8d8:87c:7c00::99:3c1]:8333\n+[2001:8f1:1404:3700:8e49:715a:2e09:b634]:9444\n+[2001:b07:5d29:99a5:194b:3874:d65e:a90d]:8333\n+[2001:ba8:1f1:f0fe::2]:8333\n+[2001:bc8:1200:0:dac4:97ff:fe2a:3554]:20008\n+[2001:da8:100d:22:10fa:d85f:10f2:21fd]:8333\n+[2001:da8:8001:7a39:f035:7d:b99f:eb79]:8333\n+[2001:e42:103:100::30]:8333\n+[2400:2412:103:c900:825:8f20:eaff:65c2]:8333\n+[2400:4052:e20:4f00:69fe:bb33:7b1c:a1ca]:8333\n+[2401:1800:7800:105:be76:4eff:fe1c:b35]:8333\n+[2401:3900:2:1::2]:8333\n+[2401:b140::44:150]:8333\n+[2401:d002:4402:0:8f28:591a:6ea0:c683]:8333\n+[2403:6200:8821:3d68:195b:87e9:6819:d5c8]:8333\n+[2405:6580:2140:3a00:c28c:983:364b:5d70]:8333\n+[2405:9800:b911:a18a:58eb:cd3c:9d82:ea4a]:8333\n+[2405:aa00:2::40]:8333\n+[2409:10:ca20:1df0:224:e8ff:fe1f:60d9]:8333\n+[2409:8a1e:a9af:3660:1c5a:5b6b:8a2d:9848]:8333\n+[2409:8a1e:a9af:3660:404:39ba:88f2:e8df]:8333\n+[240b:10:9141:400:49b4:3a2e:1e5:84c]:8333\n+[240d:1a:759:6000:a7b1:451a:8874:e1ac]:8333\n+[240d:1a:759:6000:ddab:3141:4da0:8878]:8333\n+[2600:8805:2400:14e:12dd:b1ff:fef2:3013]:8333\n+[2601:602:8d80:b63:dc3e:24ff:fe92:5eb]:8333\n+[2602:ffb6:4:2798:f816:3eff:fe2f:5441]:8333\n+[2602:ffb6:4:739e:f816:3eff:fe00:c2b3]:8333\n+[2602:ffb8::208:72:57:200]:8333\n+[2604:1380:4111:9300::1]:8333\n+[2604:4300:a:2e:21b:21ff:fe11:392]:8333\n+[2604:4500::2e06]:8112\n+[2604:5500:706a:4000:fc79:b9bb:1d7:c325]:8333\n+[2604:5500:c134:4000::3fc]:32797\n+[2604:6800:5e11:162:5c8f:d2ff:fe26:146f]:8333\n+[2605:4d00::50]:8333\n+[2605:6400:20:13bf:df1d:181c:83bb:22e8]:8333\n+[2605:ae00:203::203]:8333\n+[2605:c000:2a0a:1::102]:8333\n+[2607:f2c0:f00e:300::54]:8333\n+[2607:f2f8:ad40:bc1::1]:8333\n+[2607:f470:8:1048:ae1f:6bff:fe70:7240]:8333\n+[2607:ff28:800f:97:225:90ff:fe75:1110]:8333\n+[2620:11c:5001:1118:d267:e5ff:fee9:e673]:8333\n+[2620:6e:a000:2001::6]:8333\n+[2804:14d:4c93:9809:9769:da80:1832:3480]:8333\n+[2a00:1328:e101:c00::163]:8333\n+[2a00:1398:4:2a03:215:5dff:fed6:1033]:8333\n+[2a00:13a0:3015:1:85:14:79:26]:8333\n+[2a00:1630:14::101]:8333\n+[2a00:1768:2001:27::ef6a]:8333\n+[2a00:1828:a004:2::666]:8333\n+[2a00:1838:36:17::38cb]:8333\n+[2a00:1838:36:7d::d3c6]:8333\n+[2a00:1c10:2:709:58f7:e0ff:fe24:a0ba]:22220\n+[2a00:1c10:2:709::217]:22220\n+[2a00:1f40:5001:100::31]:8333\n+[2a00:6020:1395:1400:baf7:2d43:60b3:198b]:8333\n+[2a00:7c80:0:10b::3faf]:8333\n+[2a00:8a60:e012:a00::21]:8333\n+[2a00:ab00:603:84::3]:8333\n+[2a00:bbe0:cc:0:62a4:4cff:fe23:7510]:8333\n+[2a00:ca8:a1f:3025:f949:e442:c940:13e8]:8333\n+[2a00:d2a0:a:3d00:1cdf:38bb:a7d6:c251]:8333\n+[2a00:d880:11::20e]:8333\n+[2a00:ec0:7207:9100:5f8f:25dd:2574:3982]:8333\n+[2a00:f820:433::36]:8333\n+[2a01:138:a017:b018::42]:8333\n+[2a01:430:17:1::ffff:1153]:8333\n+[2a01:490:16:301::2]:8333\n+[2a01:4b00:807c:1b00:cda1:c6a:2bad:2418]:8333\n+[2a01:4b00:80e7:5405::1]:8333\n+[2a01:4f8:192:4212::2]:8433\n+[2a01:7a0:2:137c::3]:8333\n+[2a01:7a7:2:1467:ec4:7aff:fee2:5690]:8333\n+[2a01:7c8:d002:10f:5054:ff:fe5c:dac7]:8333\n+[2a01:7c8:d002:318:5054:ff:febe:cbb1]:8333\n+[2a01:8740:1:ffc5::8c6a]:8333\n+[2a01:cb00:f98:ca00:5054:ff:fed4:763d]:8333\n+[2a01:cb14:cf6:bc00:21e5:f12e:32c8:145]:8333\n+[2a01:d0:0:1c::245]:8333\n+[2a01:d0:bef2::12]:8333\n+[2a01:e35:2e40:6830:211:32ff:fea6:de3d]:8333\n+[2a02:1205:c6aa:60c0:70d8:aaee:a82d:993c]:8333\n+[2a02:169:502::614]:8333\n+[2a02:180:1:1::5b8f:538c]:8333\n+[2a02:348:62:5ef7::1]:8333\n+[2a02:390:9000:0:218:7dff:fe10:be33]:8333\n+[2a02:7aa0:1619::adc:8de0]:8333\n+[2a02:7b40:b0df:8925::1]:8333\n+[2a02:7b40:b905:37db::1]:8333\n+[2a02:810d:8cbf:f3a8:96c6:91ff:fe17:ae1d]:8333\n+[2a02:8389:1c0:9680:201:2eff:fe82:b3cc]:8333\n+[2a02:a454:a516:1:517:928:7e0d:957c]:8333\n+[2a02:af8:fab0:804:151:236:34:161]:8333\n+[2a02:af8:fab0:808:85:234:145:132]:8333\n+[2a02:e00:fff0:1e2::a]:8333\n+[2a03:2260:3006:d:d307:5d1d:32ca:1fe8]:8333\n+[2a03:6000:870:0:46:23:87:218]:8333\n+[2a03:9da0:f6:1::2]:8333\n+[2a03:c980:db:47::]:8333\n+[2a03:e2c0:1ce::2]:8333\n+[2a04:3544:1000:1510:706c:abff:fe6c:501c]:8333\n+[2a04:52c0:101:383::2a87]:8333\n+[2a04:52c0:101:3fb::4c27]:8333\n+[2a04:ee41:83:50df:d908:f71d:2a86:b337]:8333\n+[2a05:6d40:b94e:d100:225:90ff:fe0d:cfc2]:8333\n+[2a05:e5c0:0:100:250:56ff:feb9:d6cb]:8333\n+[2a05:fc87:1:6::2]:8333\n+[2a05:fc87:4::8]:8333\n+[2a07:5741:0:115d::1]:8333\n+[2a07:a880:4601:1062:b4b4:bd2a:39d4:7acf]:51401\n+[2a07:abc4::1:946]:8333\n+[2a07:b400:1:34c::2:1002]:8333\n+[2a0a:8c41::b4]:8333\n+[2a0a:c801:1:7::183]:8333\n+[2a0b:ae40:3:4a0a::15]:8333\n+[2a0f:df00:0:254::46]:8333\n+[2c0f:f598:5:1:1001::1]:8333\n+[2c0f:fce8:0:400:b7c::1]:8333\n+226eupdnaouu4h2v.onion:8333\n+22h7b6f3caabqqsu.onion:8333\n+23wdfqkzttmenvki.onion:8333\n+23yi3frxymtwdgre.onion:8333\n+2ajon3moyf4i2hbb.onion:8333\n+2bfmlpk55hffpl6e.onion:8333\n+2ckmbf6sglwydeth.onion:8333\n+2hkusi5gcaautwqf.onion:8333\n+2ivhmlbxbgnkcykl.onion:8333\n+2mmxouhv6nebowkq.onion:8333\n+2qsnv6exnuuiar7z.onion:8333\n+2qudbhlnvqpli3sz.onion:8333\n+2ujxdfovfyjpmdto.onion:8333\n+2xdgeufrek3eumkw.onion:8333\n+2xdzsruhsej4tsiw.onion:8333\n+34ran2woq4easmss.onion:8333\n+36q7khhej2lxd3wf.onion:8333\n+373wjdspuo52utzq.onion:8333\n+376klet5xqbrg2jv.onion:8333\n+37kwd7fxop766l5k.onion:8333\n+3e5t7hq4alt5tovx.onion:8333\n+3gbxhebfhouuwgc3.onion:8333\n+3hgbjze2nbwyuewf.onion:8333\n+3iuuvrd2waha2cxo.onion:8333\n+3jtxujdaiwh6iltu.onion:8333\n+3l5eq2du7mvscj4a.onion:8333\n+3nofngnqlqeehn7o.onion:8333\n+3r44ddzjitznyahw.onion:8333\n+3vtbuwmton7vq5qz.onion:8333\n+46ohzttz4peki43g.onion:8333\n+47fl3ivl4v56jstr.onion:8333\n+47i6qrl2ijqcwlg6.onion:8333\n+47uupgzcnrwahoto.onion:8333\n+4c5cki37evofds6d.onion:8333\n+4eq36jrx7xuytfpc.onion:8333\n+4ewkdxvcg57adrni.onion:8333\n+4flvgibnm2nld3na.onion:8333\n+4iaontym47imawe4.onion:8333\n+4jxz37oou5ag763c.onion:8333\n+4mnkvj6ha73eqnbk.onion:8333\n+4nnuyxm5k5tlyjq3.onion:8333\n+4nz2yg4cnote3ej7.onion:8333\n+4pozwh6564ygzddk.onion:8333\n+4qgfb56rvpbmesx7.onion:8333\n+4rsax23taqzwmimj.onion:8333\n+4u5j5ay6rasowt4m.onion:8333\n+4vorvtoyegh4zbvr.onion:8333\n+52s4j5pldwlpzhtw.onion:8333\n+5abpiiqfvekoejro.onion:8333\n+5aydzxx6jyoz3nez.onion:8333\n+5cxzdsrtok5dgo4a.onion:8333\n+5eduikpudie3jyrf.onion:8333\n+5epeafkmya4fv5d5.onion:8333\n+5fyxlztic3t6notz.onion:8333\n+5hd6eyew5ybnq6gb.onion:8333\n+5jyfzhwksb6urrp2.onion:8333\n+5nooqgct567ig57v.onion:8333\n+5nsfm4nqqzzprjrp.onion:8333\n+5oqstxspzhlgjef6.onion:8333\n+5pzzmd4tfonrqzb2.onion:8333\n+5sckmx4yucbnp4io.onion:8333\n+5ue7worzbn6hon3e.onion:8333\n+5wxhx2tozpovf6z3.onion:8333\n+5xk3yun36e32e34i.onion:8333\n+5zght2g7vcsapi65.onion:8333\n+62dcdpvdolfzkdzl.onion:8333\n+63bko2mhixnn2b7d.onion:8333\n+67hjvfv6wictalm5.onion:8333\n+6g6ko4klkf5atldi.onion:8333\n+6k5zreexw4cadxi5.onion:8333\n+6kf5ayhlpenywgas.onion:8333\n+6maigxjvcet4pite.onion:8333\n+6ressv4dvplb5ihh.onion:8333\n+6rjex6gyuaui3c5e.onion:8333\n+6skgnf43pphdvjua.onion:8333\n+6stxaoduwisg5sqh.onion:8333\n+6xqy4ts6bo6u5dgm.onion:8333\n+7avnl3dqpgu23jva.onion:8333\n+7ff4wk266no23txn.onion:8333\n+7hipbuzfdcyzqkkg.onion:8333\n+7sjmlzrthjlpfydk.onion:8333\n+7tut3zt2akwrmw6x.onion:8333\n+7uhsjzj6nx3dfnxt.onion:8333\n+7wm4wso3wvatxnbt.onion:8333\n+7ykmzuybwd2ptzg4.onion:8333\n+a27bvhina4y23jxo.onion:8333\n+a53vtdm7uiet5vdl.onion:8333\n+a56572xjuofnt2dp.onion:8333\n+abp25knifdsnc2rv.onion:8333\n+aefx7ubzpal7clak.onion:8333\n+ai5r2diozoe7rrdz.onion:8333\n+aipupphit3enggpj.onion:8333\n+algpjjygd3gtnmpp.onion:8333\n+alihua7rhyc452hr.onion:8333\n+am3gyyfynxzwyxhx.onion:8333\n+ankozzfhl2r3uc6u.onion:8333\n+at3twjlbtc2lqnq5.onion:8333\n+avqobl72pmc64dyi.onion:8333\n+awmdz2fs3b5h5ut5.onion:8333\n+ayywpiy77butdjrj.onion:8333\n+b2i3pj7c24cvprs7.onion:8333\n+b4ilebyxcu6nttio.onion:8333\n+b4vvkbqipcmkwp4v.onion:8333\n+bddfqxps5ibd3ftw.onion:8333\n+be5bgcpo4ooux5qy.onion:8333\n+bgla4m6zetvtv7ls.onion:8333\n+bh32gzw3nyckzqut.onion:8333\n+bho4kodpehn7xr3x.onion:8333\n+bitcoin4rlfa4wqx.onion:8333\n+biw7s6jf6r2mf3cu.onion:8333\n+bk7yp6epnmcllq72.onion:8333\n+blcktrgve5vetjsk.onion:8333\n+blwbp7gfdffdsx4g.onion:8333\n+bnxn6qqc55gvn5op.onion:8333\n+bp7o22lvcjawelvv.onion:8333\n+bqqyqucgj4tchn64.onion:8333\n+bvdzmutcqf7gzzn5.onion:8333\n+c36zmegjkinftmtf.onion:8333\n+c4fn62gnltlgrptv.onion:8333\n+caael5yedviooqzk.onion:8333\n+caq54ablfbrnumdd.onion:8333\n+cernrmrk5zomzozn.onion:8333\n+chri6itgjaagof4t.onion:8333\n+cncwik3tnd2ejm5z.onion:8333\n+cuyjqoziemcmwaxl.onion:8333\n+cx7qa2gpqyp7pld5.onion:8333\n+czp7wgaus4gvio72.onion:8333\n+d2fn54rfyjdangi4.onion:8333\n+d2sk45u6ca64yeqh.onion:8333\n+d3aowmngvktsziae.onion:8333\n+d5iu4aiz3y2kgcgj.onion:8333\n+d6zbw2sxnxgj5sv3.onion:8333\n+db5rd5e46t7mgini.onion:8333\n+dci2gulorl44yj55.onion:8333\n+ddpth2mwt3rsvoog.onion:8333\n+dfrwza7fcecknnms.onion:8333\n+djwhjfj4rh3oz3yj.onion:8333\n+dkk5mmpe5jtjodk5.onion:8333\n+doj3zgmsbzurmqgp.onion:8333\n+dpce4f3rcqddzbx5.onion:8333\n+drwo3vnxch5ozfbo.onion:8333\n+duikkidxip3lyexn.onion:8333\n+duqdliptc22i6hf5.onion:8333\n+duyp4coh5d7nh3ud.onion:8333\n+duz5two3z7c55lxj.onion:8333\n+dvu6dlar6ezc6xen.onion:8333\n+dy6zqs46ycleayyp.onion:8333\n+dz2ydmj3yqrcm4r7.onion:8333\n+e2b2a5suvdawzxud.onion:8333\n+e33h57j2ewkkqsn5.onion:8333\n+e5kjiay7pzj5qpzv.onion:8333\n+e7iko42d2wzcmvy4.onion:8333\n+ea6boh4kotq56ws5.onion:8333\n+efdx6gc4s5ezyqeg.onion:8333\n+efrpuuic6ukeyqcs.onion:8333\n+egruc3bi3itru6gq.onion:8333\n+erc6tjs2ucyadl23.onion:8333\n+eue2n5sk5tktg5bv.onion:8333\n+ezkr7stq4w7ohjrt.onion:8333\n+f3nyyjba6kpxznhk.onion:8333\n+faq73vj4pcs73thu.onion:8333\n+fdvtlj3pscbxuh75.onion:8333\n+fgdpxov4nzxvhcpv.onion:8333\n+fisqq6vzk3m6t225.onion:8333\n+fkgp3qwegacrd2bj.onion:8333\n+fo3tdfwx27takqq5.onion:8333\n+fqkxtchwypispkpv.onion:8333\n+fqunuhlwvd7rq6d5.onion:8333\n+frwt5mscpyhiuwpe.onion:8333\n+fta4gfjiuv6f2le2.onion:8333\n+fuoy2ipuqrqwe5cf.onion:8333\n+fz6nsij6jiyuwlsc.onion:8333\n+g3vlnaaaog5sgui5.onion:8333\n+g44i6jwsutkwmspz.onion:8333\n+g55t65d5ckjixcnw.onion:8333\n+gajd6eyrl2qwkfmg.onion:8333\n+gblue3hr53p4grx7.onion:8333\n+gbpro5tzduiuff4v.onion:8333\n+gc4l3tql32qhfgmi.onion:8333\n+gcnlorvtpycuajc6.onion:8333\n+gdsib2nk2eeoidgc.onion:8333\n+ge5gm7c6w7yahpz7.onion:8333\n+gegcteeep4cwftl5.onion:8333\n+gfoyraudgv5qjdku.onion:8333\n+ggpbuypmxgi26lc6.onion:8333\n+ghqivye7cfckisnt.onion:8333\n+girakxomne5fby64.onion:8333\n+glz5gfk33tuug5ne.onion:8333\n+gplatxoyg5nxl5rj.onion:8333\n+gripl5xjwy2dcr6c.onion:8333\n+gthhzlmqci22nxru.onion:8333\n+gto2d64swosfmk6c.onion:8333\n+guaciney52mgcbp2.onion:8333\n+gwktgrmtwk6nv5sc.onion:8333\n+gwoxnokdcwc7hy4p.onion:8333\n+h333f4qnwe7mrymn.onion:8333\n+h6a32n4blbwwyn4d.onion:8333\n+hafwtrbooszoembm.onion:8333\n+hbwhgsb3eeinnr6t.onion:8333\n+hcv6foxh5mk7fhb5.onion:8333\n+hd6hktcl6wamzlzm.onion:8333\n+hda6msa4v4rt77gx.onion:8333\n+hdgnxkuqsd6wjwwx.onion:8333\n+hgh3azn3eesddvcg.onion:8333\n+hhyxu6bwkjefejoz.onion:8333\n+hizn6rmofsg3upmn.onion:8333\n+hjqxxsy2osemfvev.onion:8333\n+hkbp7mbgw6klls4s.onion:8333\n+hlojuwiwbkoj4kdz.onion:8333\n+hlzxsjr7ob3qzzqq.onion:8333\n+hniuzplezebyhv7a.onion:8333\n+hondewkj4s4rdcwf.onion:8333\n+hql5nv6vhceid3bn.onion:8333\n+hspjo7mqrre5gyxr.onion:8333\n+hu64s2mdr3x7yxka.onion:8333\n+hvwvq2swkqw3qvyo.onion:8333\n+hwo2biyndrrvpl6f.onion:8333\n+hzxj3dth3y2xt45o.onion:8333\n+i3ufxuw3t7cxfdpq.onion:8333\n+ia3n3q5u45gvpx7a.onion:8333\n+icfgs3fctckd4yeo.onion:8333\n+icpz6thqvdjcwlvb.onion:8333\n+if32zo5u4mhdunfd.onion:8333\n+ig4lguql6vxkbmmr.onion:8333\n+ihhcr7fhczqdac4y.onion:8333\n+ijm2tyxob7vkvazz.onion:8333\n+ip3puuqghumfz5ww.onion:8333\n+iq3ket72f3y2frpg.onion:8333\n+iqagt5co4dt7h6hf.onion:8333\n+iugw42ih6hprqr26.onion:8333\n+ivf774v4t7k63i6d.onion:8333\n+ivfacdf7cig2z2y2.onion:8333\n+ivsxdwku5og2zj4l.onion:8333\n+ixwgrhaklvu4g6o7.onion:8333\n+iz56moo6mkp3g7xo.onion:8333\n+j2cp5muw5j3lumcx.onion:8333\n+j2lrkrwugldwewws.onion:8333\n+j2qtmkd2dablssz4.onion:8333\n+j5e2yuan57v2h5el.onion:8333\n+j5jfrdthqt5g25xz.onion:8333\n+j5lk2uv2bspfqxfk.onion:8333\n+janvvzsmzcsj3fil.onion:8333\n+jenn2tmyl3xxarmq.onion:8333\n+jfoe5f2sczojfp32.onion:8333\n+jgcgi6k2pxooi5q3.onion:8333\n+jhana24s3dzkitzp.onion:8333\n+jitgulb24mvfqrdg.onion:8333\n+jjuvwbjfzljmn7t3.onion:8333\n+jlcfomgr5xfexaif.onion:8333\n+jlehs6ybb26qlnna.onion:8333\n+jljzz4tmbqrxq3q5.onion:8333\n+joc4oqceedkg77vf.onion:8333\n+jr5y6njubcbv6g37.onion:8333\n+jroaos6la4vieho4.onion:8333\n+jsmphgkay7iihbkr.onion:8333\n+jtksnokusbzms7wl.onion:8333\n+ju5duo3r6p6diznc.onion:8333\n+jw6zymxcnebahuuj.onion:8333\n+jxalvhf7w7wevqzw.onion:8333\n+jyzhe3ig44ickysb.onion:8333\n+jze6ukn4idrh44eo.onion:8333\n+k4glotlxnmttb6ct.onion:8333\n+k7uy3iwmvguzygd2.onion:8333\n+kl23ofag3ukb6hxl.onion:8333\n+kokt2qr6d4pmyb2d.onion:8333\n+kpalu3h5ydkoaivs.onion:8333\n+krdpbdvtqw5c5lee.onion:8333\n+kriw6kzjzarzgb3g.onion:8333\n+krp2thcmwrpsoue6.onion:8333\n+kvyvdwjwtae5mo77.onion:8333\n+kyrxri5rbr6ipurs.onion:8333\n+kz3oxg7745dxt62q.onion:8333\n+l3w5fcki2wbro2qb.onion:8333\n+l44bisuxhh7reb5q.onion:8333\n+l565g523emjebusj.onion:8333\n+l6w5kdeigwsgnf5t.onion:8333\n+l7a4emryfxkjgmmb.onion:8333\n+l7sloscjqqbifcsw.onion:8333\n+laafjqvtog7djfl2.onion:8333\n+lah676kxbgbgw3u2.onion:8333\n+lbq2a7pnpmviw2qo.onion:8333\n+lc4wnpql27vymi35.onion:8333\n+ldoffbfpk3j6c7y7.onion:8333\n+lehpmglkivobq2qo.onion:8333\n+lgewpjz7ie7daqqr.onion:8333\n+lgkvbvro67jomosw.onion:8333\n+liw5z4ngic6b7vnv.onion:8333\n+ljs7gwrmmza6q6ga.onion:8333\n+lmvax3e6awaxvhqi.onion:8333\n+lrz77dwf7yq4cgnt.onion:8333\n+lva54pnbq2nsmjyr.onion:8333\n+lxc2uphxyyxflhnf.onion:8333\n+lyjybdr4hmj3bqab.onion:8333\n+lz2zlnmyynwtgwf2.onion:8333\n+m6hcnpikimyh37yp.onion:8333\n+md635omjnrgheed3.onion:8333\n+mdb3oupwf4f2qyjb.onion:8333\n+me6d4esx7ohdnxne.onion:8333\n+mecfkik5ci47wckj.onion:8333\n+mfrvevn7w6rwsp4r.onion:8333\n+mimuutlew5srtduk.onion:8333\n+mnysk3izxvra3huv.onion:8333\n+mqu6gqtrhm6xzwwh.onion:8333\n+mwuc6vom4ngijtb3.onion:8333\n+mxdtrjhe2yfsx3pg.onion:8333\n+n4ibet4piscv22nj.onion:8333\n+n6d46vbzx43bevlb.onion:8333\n+n6t6kfgzlvozxhfm.onion:8333\n+n7rrochwerf2qxze.onion:8333\n+ncsdiqmnxhnnjbsz.onion:8333\n+nitxw3ilffngpumv.onion:8333\n+njlsvubildehluwr.onion:8333\n+njslfsivyyhixbsp.onion:8333\n+nkf5e6b7pl4jfd4a.onion:8333\n+nkppsb3t3ducje6m.onion:8333\n+nlfwyqksmeqe45zz.onion:8333\n+nlyjmpcmpaz5b4aa.onion:8333\n+nnmv7z65k65mcesr.onion:8333\n+nrrfwdmrm3imuebn.onion:8333\n+nrrmkgmulpgsbwlt.onion:8333\n+nw4h7leckut7eapv.onion:8333\n+nwky3wd3ihoidvb5.onion:8333\n+ny4kkemmmqv4lptm.onion:8333\n+o25wkcw7eorg2toi.onion:8333\n+o2gumvbkw6pm45cf.onion:8333\n+o4yjshdwlbshylqw.onion:8333\n+ofx4qgw6lppnvtgv.onion:8333\n+oketipl4gndqcaus.onion:8333\n+oq5q4qrqijr2kpun.onion:8333\n+oqw3mfoiobqcklxh.onion:8333\n+orsy2v63ecrmdj55.onion:8333\n+ot4tzmznyimmlszk.onion:8333\n+owk6c2jfthwkyahe.onion:8333\n+oy7ss3hm2okx4tun.onion:8333\n+p2pc6wbaepvdi6ce.onion:8333\n+p2x24gdhasmgcl5j.onion:8333\n+p6couujr2ndhllv3.onion:8333\n+pa7dw5bln5lqmu53.onion:8333\n+pasmchtoooj2kchd.onion:8333\n+pdapkkhk6pbcy2tj.onion:8333\n+peh5ajouuw6mw4sr.onion:8333\n+pkuuc5pwl5xygwhr.onion:8333\n+pq4wjl7vg7tsfycc.onion:8333\n+ptbwqhusps5qieql.onion:8333\n+ptwpbwyj5lnyew2f.onion:8333\n+pu7w3jfyrzp7sxsi.onion:8333\n+pwylbyvfuc62hhvx.onion:8333\n+q2fhnnyt5b2ayvce.onion:8333\n+q3i3apuionbazmfe.onion:8333\n+qd6fcpu3pvbf2y3x.onion:8333\n+qfewv3y7a3p4i3bd.onion:8333\n+qhytdttflhbc4rsh.onion:8333\n+qkn35rb3x2gxbwq4.onion:8333\n+qlvlexs7pwac2f4b.onion:8333\n+qogcqirtuta6rlxg.onion:8333\n+qrzqfxkhrmu5v5ro.onion:8333\n+qsyjasq46b2syiys.onion:8333\n+quu4b2zjbnr2ue4y.onion:8333\n+quycfj2wenz6bfyd.onion:8333\n+qvdy3cmocnlv5v7c.onion:8333\n+qvwhpqygan2xky5h.onion:8333\n+qyutwc26ullujafb.onion:8333\n+r45qg2d6iwfdhqwl.onion:8333\n+r4xudr6u4r5nyga4.onion:8333\n+r6apa5ssujxbwd34.onion:8333\n+r6z2gcsu37k3gaah.onion:8333\n+rbrjgfcca6v5b7yo.onion:8333\n+rcifxibawqt6rxzz.onion:8333\n+rdo3xctk3zkzjvln.onion:8333\n+rdvlepy6ghgpapzo.onion:8333\n+recs3a27chv2lg65.onion:8333\n+rfmbiy5vztvn6hyn.onion:8333\n+rli5lbje4k77inzw.onion:8333\n+roqwnmepcj453vfh.onion:8333\n+rpbnx54qniivrmh3.onion:8333\n+rsvvogqdlijp77hv.onion:8333\n+rwm5d4hg3hc77kdt.onion:8333\n+s3yelkvc5f5xeysw.onion:8333\n+s6rx52hitmpp4lge.onion:8333\n+sa6m3rvycipgemky.onion:8333\n+savebeesmkivmfbo.onion:8333\n+sbyjr5npk2mlmfw7.onion:8333\n+serwj42jme5xhhmw.onion:8333\n+sg4vmubv3djrzvuh.onion:8333\n+shsgksluz6jkgp6g.onion:8333\n+sjyzmwwu6diiit3r.onion:8333\n+sk3en3reudg3sdg5.onion:8333\n+skoifp4oj7l4osu5.onion:8333\n+sle2caplkln33e7y.onion:8333\n+smdd7q7gonajdmjq.onion:8333\n+spmhuxjb2cd7leun.onion:8333\n+srkgyv5edn2pa7il.onion:8333\n+sslnjjhnmwllysv4.onion:8333\n+su66ygras6rkdtnl.onion:8333\n+sundvmbjrtgdfahx.onion:8333\n+svd65k5jpal2p3lt.onion:8333\n+svua5hiqluw7o2sw.onion:8333\n+sxqjubmum4rmfgpu.onion:8333\n+t245vi742ti3tnka.onion:8333\n+t4fbovvgzpnimd2p.onion:8333\n+t4l4wv3erkhpde2p.onion:8333\n+t5qchwbr6u5v2agk.onion:8333\n+t7jlaj6ggyx7s5vy.onion:8333\n+ta6sjeqyb27f4n4a.onion:8333\n+tav7utpw4pfy7j6k.onion:8333\n+taxg5z2sxfm5c4d6.onion:8333\n+tekwvnbodbzrlufs.onion:8333\n+tg4uwrjmtr2jlbjy.onion:8333\n+th4cjvffjtw6vomu.onion:8333\n+th6fxymtwnfifqeu.onion:8333\n+thtchhl25u26nglq.onion:8333\n+tiiah7csuoklcvi6.onion:8333\n+tk63x5fk3337z3ud.onion:8333\n+tkgootat6cqn7vyy.onion:8333\n+tnj565wwqz5wpjvs.onion:8333\n+ts6qx37mmpu6nj5y.onion:8333\n+ttjisvxydgbtp56f.onion:8333\n+twn54v7ra2xjgd55.onion:8333\n+txem5meug24g2ezd.onion:8333\n+tyiunn36lmfcq5lr.onion:8333\n+tyv56xs6g6ndzqux.onion:8333\n+u47f3hxwq65sgs4o.onion:8333\n+u4r7fnholrdwwlni.onion:8333\n+u556ofb3myarafwn.onion:8333\n+u5q3gbz4qpz4wvlr.onion:8333\n+uakly3ydrevvpxwi.onion:8333\n+ug6hapi4qtekzc7v.onion:8333\n+ui553qotd6ron3rf.onion:8333\n+uir7f3wltoka6bbb.onion:8333\n+ukrjjhwodl44wmof.onion:8333\n+ul5gm2ixy7kqdfwg.onion:8333\n+undd7rsj4pen3wo4.onion:8333\n+uorwpzfehtykrg43.onion:8333\n+uovsp2yltnaojq6l.onion:8333\n+usazmdcs32ny24dy.onion:8333\n+usazs7glm7geyxkl.onion:8333\n+uss2kedg7qkwgdr5.onion:8333\n+utgyrvw75wv2nymi.onion:8333\n+uzwacms7kyzhehbl.onion:8333\n+v2kdcetvslmdfcwr.onion:8333\n+v5lhnzzv6nngfg5d.onion:8333\n+vc44gb4veppobrt3.onion:8333\n+vfwyhju43wxhzvux.onion:8333\n+vgujufk53lqyolio.onion:8333\n+vheejqq2v5dkb4xr.onion:8333\n+vj64edev4jnqfdsb.onion:8333\n+vmai5uigezr2khkj.onion:8333\n+vmuykd7sxbmi7w57.onion:8333\n+vomeacttinx3mpml.onion:8333\n+vpow2xofg3fwzsdq.onion:8333\n+vsawli4l5ifxdzaw.onion:8333\n+vunubqkfms7sifok.onion:8333\n+vuombnevwul4bqsb.onion:8333\n+vxcpvdng65aefz6t.onion:8333\n+vyxoizdzavp3obau.onion:8333\n+wbeon2ci7lfio6ay.onion:8333\n+wbwevew62mgsrrdz.onion:8333\n+wfaydlg6zyfzjcu5.onion:8333\n+wfz56s5lyn5dysez.onion:8333\n+wg3mq4ugyy2gx32b.onion:8333\n+whky54bctkf2n4p3.onion:8333\n+whmjanqoyzizzc4t.onion:8333\n+wlhou2wxgqyi3x3f.onion:8333\n+wlvkfrplfiioz22o.onion:8333\n+x3ngb3va7dovuenw.onion:8333\n+x57x62bmmnylvo7r.onion:8333\n+xgvm57mhgv564dka.onion:8333\n+xhs3glfwnwiumivn.onion:8333\n+xje5fwvyfdue2u6k.onion:8333\n+xlgubgyly2blvsg5.onion:8333\n+xnlu3tvakngy7tkp.onion:8333\n+xo5marilhuyo7but.onion:8333\n+xsaaxihdygnwxrix.onion:8333\n+xu5mlugdsmzfkvzh.onion:8333\n+xvrxqcptqvieedb2.onion:8333\n+xwzhrrygftq3q4w4.onion:8333\n+y4swmsaxdcos2bnu.onion:8333\n+y5tl4lqi365pplud.onion:8333\n+y5wzeqyaets5na6t.onion:8333\n+y73qk2mzkjkhoky7.onion:8333\n+y7oz3ydnvib4xhbb.onion:8333\n+yah7qgfqqrteoche.onion:8333\n+yba4brm555denlt7.onion:8333\n+ygeqkg4inplsace3.onion:8333\n+yjhnfu75lazbi34h.onion:8333\n+yjw7kqapxx5vggoj.onion:8333\n+ym7inmovbrna4gco.onion:8333\n+yq5cusnuokscy64z.onion:8333\n+yrcaioqrqrdwokqt.onion:8333\n+yrcr7pgjuazad254.onion:8333\n+yrksvon3tmvoohdv.onion:8333\n+ytpus4vx5w7j6wp2.onion:8333\n+ytqcigk2hhdl45ho.onion:8333\n+yxojl3xmjus3dik2.onion:8333\n+yzdqdsqx4fdung6w.onion:8333\n+z33nukt7ngik3cpe.onion:8333\n+z3ywbadw46ndnxgh.onion:8333\n+z6mbqq7llxlrn4kq.onion:8333\n+zb3lrcksn4rzhzje.onion:8333\n+ze7odp7pzarjplsr.onion:8333\n+zgbmhtbja4fy2373.onion:8333\n+zh7hvalcgvjpoaqm.onion:8333\n+ziztvxehmj5mehpg.onion:8333\n+zjii3yecdrmq73y3.onion:8333\n+zkrwmgjuvsza6ye2.onion:8333\n+zoz2aopwi3wfuqwg.onion:8333\n+ztdcfnh46773bivu.onion:8333\n+zuxhc6d3nwpgc4af.onion:8333\n+zuytrfevzjcpizli.onion:8333\n+zvq6dpt3i2ofdp3g.onion:8333\n+zwwm6ga7u2hqe2sd.onion:8333\n+zyqb4lenfspntj5m.onion:8333"
      },
      {
        "sha": "98365ee505ced2410cdc7ea841bf52198b405662",
        "filename": "contrib/seeds/nodes_test.txt",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/seeds/nodes_test.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/seeds/nodes_test.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_test.txt?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,11 @@\n+# List of fixed seed nodes for testnet\n+\n+# Onion nodes\n+thfsmmn2jbitcoin.onion\n+it2pj4f7657g3rhi.onion\n+nkf5e6b7pl4jfd4a.onion\n+4zhkir2ofl7orfom.onion\n+t6xj6wilh4ytvcs7.onion\n+i6y6ivorwakd7nw3.onion\n+ubqj4rsu3nqtxmtp.onion\n+"
      },
      {
        "sha": "13385cc816209d2c9fc2acf68343dce15e4dd201",
        "filename": "contrib/seeds/suspicious_hosts.txt",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/seeds/suspicious_hosts.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/seeds/suspicious_hosts.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/suspicious_hosts.txt?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,16 @@\n+130.211.129.106\n+148.251.238.178\n+176.9.46.6\n+178.63.107.226\n+54.173.72.127\n+54.174.10.182\n+54.183.64.54\n+54.194.231.211\n+54.66.214.167\n+54.66.220.137\n+54.67.33.14\n+54.77.251.214\n+54.94.195.96\n+54.94.200.247\n+83.81.130.26\n+88.198.17.7\n\\ No newline at end of file"
      },
      {
        "sha": "eaca473b400f0e57066d7f13062dc247dab7f41b",
        "filename": "contrib/testgen/README.md",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,8 @@\n+### TestGen ###\n+\n+Utilities to generate test vectors for the data-driven Bitcoin tests.\n+\n+Usage:\n+\n+    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py valid 50 > ../../src/test/data/key_io_valid.json\n+    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py invalid 50 > ../../src/test/data/key_io_invalid.json"
      },
      {
        "sha": "c7ebac50d4b7753f501aaf2af66fbba178eaac7c",
        "filename": "contrib/testgen/base58.py",
        "status": "added",
        "additions": 115,
        "deletions": 0,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/testgen/base58.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/testgen/base58.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/base58.py?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "patch": "@@ -0,0 +1,115 @@\n+# Copyright (c) 2012-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+Bitcoin base58 encoding and decoding.\n+\n+Based on https://bitcointalk.org/index.php?topic=1026.0 (public domain)\n+'''\n+import hashlib\n+\n+# for compatibility with following code...\n+class SHA256:\n+    new = hashlib.sha256\n+\n+if str != bytes:\n+    # Python 3.x\n+    def ord(c):\n+        return c\n+    def chr(n):\n+        return bytes( (n,) )\n+\n+__b58chars = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n+__b58base = len(__b58chars)\n+b58chars = __b58chars\n+\n+def b58encode(v):\n+    \"\"\" encode v, which is a string of bytes, to base58.\n+    \"\"\"\n+    long_value = 0\n+    for (i, c) in enumerate(v[::-1]):\n+        if isinstance(c, str):\n+            c = ord(c)\n+        long_value += (256**i) * c\n+\n+    result = ''\n+    while long_value >= __b58base:\n+        div, mod = divmod(long_value, __b58base)\n+        result = __b58chars[mod] + result\n+        long_value = div\n+    result = __b58chars[long_value] + result\n+\n+    # Bitcoin does a little leading-zero-compression:\n+    # leading 0-bytes in the input become leading-1s\n+    nPad = 0\n+    for c in v:\n+        if c == 0:\n+            nPad += 1\n+        else:\n+            break\n+\n+    return (__b58chars[0]*nPad) + result\n+\n+def b58decode(v, length = None):\n+    \"\"\" decode v into a string of len bytes\n+    \"\"\"\n+    long_value = 0\n+    for i, c in enumerate(v[::-1]):\n+        pos = __b58chars.find(c)\n+        assert pos != -1\n+        long_value += pos * (__b58base**i)\n+\n+    result = bytes()\n+    while long_value >= 256:\n+        div, mod = divmod(long_value, 256)\n+        result = chr(mod) + result\n+        long_value = div\n+    result = chr(long_value) + result\n+\n+    nPad = 0\n+    for c in v:\n+        if c == __b58chars[0]:\n+            nPad += 1\n+            continue\n+        break\n+\n+    result = bytes(nPad) + result\n+    if length is not None and len(result) != length:\n+        return None\n+\n+    return result\n+\n+def checksum(v):\n+    \"\"\"Return 32-bit checksum based on SHA256\"\"\"\n+    return SHA256.new(SHA256.new(v).digest()).digest()[0:4]\n+\n+def b58encode_chk(v):\n+    \"\"\"b58encode a string, with 32-bit checksum\"\"\"\n+    return b58encode(v + checksum(v))\n+\n+def b58decode_chk(v):\n+    \"\"\"decode a base58 string, check and remove checksum\"\"\"\n+    result = b58decode(v)\n+    if result is None:\n+        return None\n+    if result[-4:] == checksum(result[:-4]):\n+        return result[:-4]\n+    else:\n+        return None\n+\n+def get_bcaddress_version(strAddress):\n+    \"\"\" Returns None if strAddress is invalid.  Otherwise returns integer version of address. \"\"\"\n+    addr = b58decode_chk(strAddress)\n+    if addr is None or len(addr)!=21:\n+        return None\n+    version = addr[0]\n+    return ord(version)\n+\n+if __name__ == '__main__':\n+    # Test case (from http://gitorious.org/bitcoin/python-base58.git)\n+    assert get_bcaddress_version('15VjRaDX9zpbA8LVnbrCAFzrVzN7ixHNsC') == 0\n+    _ohai = 'o hai'.encode('ascii')\n+    _tmp = b58encode(_ohai)\n+    assert _tmp == 'DYB3oMS'\n+    assert b58decode(_tmp, 5) == _ohai\n+    print(\"Tests passed\")"
      },
      {
        "sha": "49320d92e6dafc7a2c173ced1dd2f19ac5e5c481",
        "filename": "contrib/testgen/gen_key_io_test_vectors.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/testgen/gen_key_io_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/testgen/gen_key_io_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_key_io_test_vectors.py?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "ece02dc24e8f93f248102c3dd810ed6394792414",
        "filename": "contrib/valgrind.supp",
        "status": "added",
        "additions": 185,
        "deletions": 0,
        "changes": 185,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/valgrind.supp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/valgrind.supp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/valgrind.supp?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "e95a57586ff1c34fef56f4d851934f0d881bbd8c",
        "filename": "contrib/verify-commits/README.md",
        "status": "added",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verify-commits/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verify-commits/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/README.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "c572806f2612e8c6cec07251e232e4d342ab3186",
        "filename": "contrib/verify-commits/allow-incorrect-sha512-commits",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verify-commits/allow-incorrect-sha512-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verify-commits/allow-incorrect-sha512-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-incorrect-sha512-commits?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "3abf82e529cbbbc766d0b7f7c4028d7721eb6755",
        "filename": "contrib/verify-commits/allow-revsig-commits",
        "status": "added",
        "additions": 504,
        "deletions": 0,
        "changes": 504,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verify-commits/allow-revsig-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verify-commits/allow-revsig-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-revsig-commits?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "7aab274b9a848fce47a53acf71b54dfb1bf3db0e",
        "filename": "contrib/verify-commits/allow-unclean-merge-commits",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verify-commits/allow-unclean-merge-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verify-commits/allow-unclean-merge-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-unclean-merge-commits?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "db5bfce208ef18e72d8643f83e773723ccd39116",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "78873dc0c38ebe6d800ab319c0cc21b9eeb641cd",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "c60f8ab695e9c0fb01feafb1c28074cb98ab122d",
        "filename": "contrib/verify-commits/trusted-git-root",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verify-commits/trusted-git-root",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verify-commits/trusted-git-root",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-git-root?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "27fede6277616c3cfe500c662636e5449e482b5b",
        "filename": "contrib/verify-commits/trusted-keys",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verify-commits/trusted-keys",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verify-commits/trusted-keys",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-keys?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "7d41f90ad70ef87caa0ce40bee269ff9d61d9c05",
        "filename": "contrib/verify-commits/trusted-sha512-root-commit",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verify-commits/trusted-sha512-root-commit",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verify-commits/trusted-sha512-root-commit",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-sha512-root-commit?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "7e46c6fd47733fc35d3194faf0399f96640ca2af",
        "filename": "contrib/verify-commits/verify-commits.py",
        "status": "added",
        "additions": 165,
        "deletions": 0,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verify-commits/verify-commits.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verify-commits/verify-commits.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.py?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "4209fdb3644e558c029bacc9a02ad9823b120eb6",
        "filename": "contrib/verifybinaries/README.md",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verifybinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verifybinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/README.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "4296998631cff715d429c5b203c41b53f8e722e0",
        "filename": "contrib/verifybinaries/verify.sh",
        "status": "added",
        "additions": 177,
        "deletions": 0,
        "changes": 177,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verifybinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/verifybinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/verify.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "31720e72e7081d61a6905adbfeabdc8d15a517f6",
        "filename": "contrib/windeploy/detached-sig-create.sh",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/windeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/windeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/detached-sig-create.sh?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "4023a5b638f89f9838990db0700ed9ec5a629e9b",
        "filename": "contrib/windeploy/win-codesign.cert",
        "status": "added",
        "additions": 100,
        "deletions": 0,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/windeploy/win-codesign.cert",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/windeploy/win-codesign.cert",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/win-codesign.cert?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "8b8503331d2c23abc9514f204bab1771de39b179",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "added",
        "additions": 90,
        "deletions": 0,
        "changes": 90,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "19c506ce5447d4b9099f741fd33f800d101bcf6d",
        "filename": "depends/.gitignore",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/.gitignore?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "1ad21f6821bba036d92208aae32310ae1a1f62bd",
        "filename": "depends/Makefile",
        "status": "added",
        "additions": 253,
        "deletions": 0,
        "changes": 253,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "5225a6d5c41ef1e1a46820660bcc54aa583ad9e7",
        "filename": "depends/README.md",
        "status": "added",
        "additions": 153,
        "deletions": 0,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "f4103fc1f27eebb9f85a913413d4ff755bab6ea9",
        "filename": "depends/builders/darwin.mk",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/builders/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/builders/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/darwin.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "f097db65d603d596c5ceabeadfe32fa3a296a91d",
        "filename": "depends/builders/default.mk",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/builders/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/builders/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/default.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "b03f42401047adf98bc997a7eece42c2c79a2c2c",
        "filename": "depends/builders/linux.mk",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/builders/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/builders/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/linux.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "7f9ebbe31097dff5e381dceffadbf64502ab3d46",
        "filename": "depends/config.guess",
        "status": "added",
        "additions": 1665,
        "deletions": 0,
        "changes": 1665,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "87a337930370eca23beee0e4c0456ab290db9f9b",
        "filename": "depends/config.site.in",
        "status": "added",
        "additions": 104,
        "deletions": 0,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "a318a46868500fbeea993e693e32701041ffad1b",
        "filename": "depends/config.sub",
        "status": "added",
        "additions": 1793,
        "deletions": 0,
        "changes": 1793,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "0a6f2e644219008dcb4cefe4d7a152e838e9b66d",
        "filename": "depends/description.md",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/description.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/description.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/description.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "58d882eb053ac571cd05547e951feaaca1854c74",
        "filename": "depends/funcs.mk",
        "status": "added",
        "additions": 268,
        "deletions": 0,
        "changes": 268,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/funcs.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/funcs.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/funcs.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "eabd84bbbe1020a67273bb27de30209fbefd8b88",
        "filename": "depends/hosts/android.mk",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/hosts/android.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/hosts/android.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/android.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "6099fd4c716b80f4bcf92be048ea8fa328501401",
        "filename": "depends/hosts/darwin.mk",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/hosts/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/hosts/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/darwin.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "258619a9d059086cb8fb25e4df37617088cc2e32",
        "filename": "depends/hosts/default.mk",
        "status": "added",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/hosts/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/hosts/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/default.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "8ab448ce5fd458be142ece6ba7a001a76d8f9033",
        "filename": "depends/hosts/linux.mk",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/hosts/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/hosts/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/linux.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "be5fec570c84cec02844d0faf63bb11b36e708c3",
        "filename": "depends/hosts/mingw32.mk",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/hosts/mingw32.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/hosts/mingw32.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/mingw32.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "7ed20ea1297dcad84173c4ec085dee714f87f22f",
        "filename": "depends/packages.md",
        "status": "added",
        "additions": 198,
        "deletions": 0,
        "changes": 198,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "5953341d9f774cb3abfbf6a6d8c0aa2b2a4a4536",
        "filename": "depends/packages/bdb.mk",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/bdb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/bdb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/bdb.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "d8bce108b16a5863d600d19270f0f52807d60449",
        "filename": "depends/packages/boost.mk",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "abeb26545f898e4dffdb18f1452d77197f37a35c",
        "filename": "depends/packages/capnp.mk",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/capnp.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/capnp.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/capnp.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "902fe43be267919d8d71c44d9b6dea5cea9928d1",
        "filename": "depends/packages/expat.mk",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/expat.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/expat.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/expat.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "0d5f94f380c569cb7d09d3541c42467ad59a1fb1",
        "filename": "depends/packages/fontconfig.mk",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/fontconfig.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/fontconfig.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/fontconfig.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "a1584608e19f714ca190875aae124edd33a1456a",
        "filename": "depends/packages/freetype.mk",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/freetype.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/freetype.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/freetype.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "4c55c2df04b5cd50f1af5ae63bab275d7c1284ac",
        "filename": "depends/packages/libXau.mk",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/libXau.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/libXau.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXau.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "1cd5a1749ac88c79f8e667aeac40d23105772219",
        "filename": "depends/packages/libevent.mk",
        "status": "added",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "3e5cf5f1603a66c0244667b909cbb0b9f6541376",
        "filename": "depends/packages/libmultiprocess.mk",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/libmultiprocess.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/libmultiprocess.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libmultiprocess.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "2204b381958b8f0be875308764df849b62e9af40",
        "filename": "depends/packages/libxcb.mk",
        "status": "added",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/libxcb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/libxcb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libxcb.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "49a584e462b36b09c5b2bcde7b69b1256daf5a2b",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "added",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "c3054cbd1a16e66d8ff592b27bdc7fc7a12c0f2c",
        "filename": "depends/packages/native_biplist.mk",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/native_biplist.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/native_biplist.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_biplist.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "ed5a6deee2fdbfbd658ddff8d5aa5c129860bf6f",
        "filename": "depends/packages/native_capnp.mk",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/native_capnp.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/native_capnp.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_capnp.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "d56b636695508699d998191f8220e47fe01df6d1",
        "filename": "depends/packages/native_cctools.mk",
        "status": "added",
        "additions": 116,
        "deletions": 0,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "7bdf2d7dfda9a221ff75e842ea887f35ca153f42",
        "filename": "depends/packages/native_cdrkit.mk",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/native_cdrkit.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/native_cdrkit.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cdrkit.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "f99b689ecdc7406233dd36191a592be37aeed931",
        "filename": "depends/packages/native_ds_store.mk",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/native_ds_store.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/native_ds_store.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ds_store.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "035b767188a6fc43f6a65c1ec6c1c7617879dd02",
        "filename": "depends/packages/native_libdmg-hfsplus.mk",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/native_libdmg-hfsplus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/native_libdmg-hfsplus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libdmg-hfsplus.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "c50fdc3f6bae8e33cde4c361f28a4eacffd5e992",
        "filename": "depends/packages/native_libmultiprocess.mk",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/native_libmultiprocess.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/native_libmultiprocess.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libmultiprocess.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "e60b99dccc98ce44512e0026a712bca1371f5855",
        "filename": "depends/packages/native_mac_alias.mk",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/native_mac_alias.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/native_mac_alias.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_mac_alias.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "4627acb521879b5546bc3e26a6be4b2803257007",
        "filename": "depends/packages/packages.mk",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "d1687883bcd5197372367e4a9a5f029594f9f273",
        "filename": "depends/packages/qrencode.mk",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/qrencode.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/qrencode.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qrencode.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "083bc68d66c3bb1c2b881747d25ec1827a576077",
        "filename": "depends/packages/qt.mk",
        "status": "added",
        "additions": 264,
        "deletions": 0,
        "changes": 264,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "5b3a61b239c64b2cbf6c538d0548791c75915490",
        "filename": "depends/packages/sqlite.mk",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/sqlite.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/sqlite.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/sqlite.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "01203a0718af93deff60d84fb337848e79ae661e",
        "filename": "depends/packages/xcb_proto.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/xcb_proto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/xcb_proto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xcb_proto.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "6bd867d02b20f4cf46da0b73baa5fd1fab68f6b9",
        "filename": "depends/packages/xproto.mk",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/xproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/xproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xproto.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "c93aa1a74da831a4c33f1835fe4bdeb24441b845",
        "filename": "depends/packages/zeromq.mk",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/zeromq.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/zeromq.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zeromq.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "acb02020a80b2424fe6080a0b64b8ac54d33df62",
        "filename": "depends/packages/zlib.mk",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/zlib.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/packages/zlib.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zlib.mk?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "58f7ddc7d502cff2b6cad8a81df5e879e8a3360b",
        "filename": "depends/patches/bdb/clang_cxx_11.patch",
        "status": "added",
        "additions": 147,
        "deletions": 0,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/bdb/clang_cxx_11.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/bdb/clang_cxx_11.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/bdb/clang_cxx_11.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "722f7bb5ea4707de46a27c61f1b9e531d7bcf97d",
        "filename": "depends/patches/boost/unused_var_in_process.patch",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/boost/unused_var_in_process.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/boost/unused_var_in_process.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/boost/unused_var_in_process.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "7401b83d840ff982d18a070e2a4ee2446e458d99",
        "filename": "depends/patches/fontconfig/gperf_header_regen.patch",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/fontconfig/gperf_header_regen.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/fontconfig/gperf_header_regen.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/fontconfig/gperf_header_regen.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "9f69081890c33d7acd79ec569cc7122d84d316da",
        "filename": "depends/patches/fontconfig/remove_char_width_usage.patch",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/fontconfig/remove_char_width_usage.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/fontconfig/remove_char_width_usage.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/fontconfig/remove_char_width_usage.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "a98cd90bd58a20072443a11a9c412b447e8e98a1",
        "filename": "depends/patches/libevent/0001-fix-windows-getaddrinfo.patch",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/libevent/0001-fix-windows-getaddrinfo.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/libevent/0001-fix-windows-getaddrinfo.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/libevent/0001-fix-windows-getaddrinfo.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "a1cc9b50d1509379b121ba3f228821cced0485f9",
        "filename": "depends/patches/miniupnpc/dont_use_wingen.patch",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/miniupnpc/dont_use_wingen.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/miniupnpc/dont_use_wingen.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/miniupnpc/dont_use_wingen.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "d6c58c102fb321794eeca68b85afd4207d9bdeca",
        "filename": "depends/patches/native_cctools/ld64_disable_threading.patch",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/native_cctools/ld64_disable_threading.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/native_cctools/ld64_disable_threading.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_cctools/ld64_disable_threading.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "8ab0993dc4de142ab7766a500640be92540fe80f",
        "filename": "depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_cdrkit/cdrkit-deterministic.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "f346c8f2cff8b040cc534c32402ccf92229d8c05",
        "filename": "depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "status": "added",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "a74e9cb09872b9abc82542e67772208413f7284e",
        "filename": "depends/patches/qt/dont_hardcode_pwd.patch",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/dont_hardcode_pwd.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/dont_hardcode_pwd.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/dont_hardcode_pwd.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "f6b2c9fc8015a0eef744bda87ede8e230aa6b3a8",
        "filename": "depends/patches/qt/drop_lrelease_dependency.patch",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/drop_lrelease_dependency.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/drop_lrelease_dependency.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/drop_lrelease_dependency.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "2f6ff00f40c253c95d5bc62e887b032eac22055e",
        "filename": "depends/patches/qt/fix_android_jni_static.patch",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/fix_android_jni_static.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/fix_android_jni_static.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_android_jni_static.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "13bfff9776474028c5165f9e3d5e64bee3d576e5",
        "filename": "depends/patches/qt/fix_android_qmake_conf.patch",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/fix_android_qmake_conf.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/fix_android_qmake_conf.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_android_qmake_conf.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "0d7dd647debca93eb5383ee72f6d4db573dabaac",
        "filename": "depends/patches/qt/fix_configure_mac.patch",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/fix_configure_mac.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/fix_configure_mac.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_configure_mac.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "f868ca25775547188620644ae02881edeaa06a8d",
        "filename": "depends/patches/qt/fix_no_printer.patch",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/fix_no_printer.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/fix_no_printer.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_no_printer.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "d37b6c777646c39bd09b4ee63e8c98047b49bab4",
        "filename": "depends/patches/qt/fix_powerpc_libpng.patch",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/fix_powerpc_libpng.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/fix_powerpc_libpng.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_powerpc_libpng.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "8c722ffb46cb1d55dfc6a341b2f6dac3abe0f7a5",
        "filename": "depends/patches/qt/fix_qt_pkgconfig.patch",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/fix_qt_pkgconfig.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/fix_qt_pkgconfig.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_qt_pkgconfig.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "c1b07fe23afdbd7a2f204811e2aad132bd2d9dff",
        "filename": "depends/patches/qt/fix_rcc_determinism.patch",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/fix_rcc_determinism.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/fix_rcc_determinism.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_rcc_determinism.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "e7f29f01f9cd7f250b86bbd038175aa6a0fb35b0",
        "filename": "depends/patches/qt/fix_riscv64_arch.patch",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/fix_riscv64_arch.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/fix_riscv64_arch.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_riscv64_arch.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "b0f1c98aa60c9d3442d7c596cd0fd39892a68176",
        "filename": "depends/patches/qt/freetype_back_compat.patch",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/freetype_back_compat.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/freetype_back_compat.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/freetype_back_compat.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "4cd96df29ff307b012d5ae4c49cfff71948cca86",
        "filename": "depends/patches/qt/mac-qmake.conf",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/mac-qmake.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/mac-qmake.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mac-qmake.conf?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "fe82c2c73cb09611da2be6ccbe274d4191bc1ad8",
        "filename": "depends/patches/qt/no-xlib.patch",
        "status": "added",
        "additions": 69,
        "deletions": 0,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/no-xlib.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/no-xlib.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/no-xlib.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "165abf3e2e7a6d7cdbe7b960ec15dbcfaf0a9dfd",
        "filename": "depends/patches/qt/xkb-default.patch",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/xkb-default.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/qt/xkb-default.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/xkb-default.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "ddf91e6abfaba15442df4812af77379e7349019c",
        "filename": "depends/patches/zeromq/remove_libstd_link.patch",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/zeromq/remove_libstd_link.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/depends/patches/zeromq/remove_libstd_link.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/zeromq/remove_libstd_link.patch?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "38498103bb1704a3f13979c1359649a786d50aef",
        "filename": "doc/.gitignore",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/.gitignore?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "2f7916821256f93fbc0ac2837c3afeb21828d2e1",
        "filename": "doc/Doxyfile.in",
        "status": "added",
        "additions": 2461,
        "deletions": 0,
        "changes": 2461,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/Doxyfile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/Doxyfile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile.in?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "40d8e330e28cd74e377bd52e16de96cf44f5a76e",
        "filename": "doc/JSON-RPC-interface.md",
        "status": "added",
        "additions": 129,
        "deletions": 0,
        "changes": 129,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/JSON-RPC-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/JSON-RPC-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/JSON-RPC-interface.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "19d8204d83eb7960ae0e91e04ca8404422e564df",
        "filename": "doc/README.md",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "6888383a9861eaef1b5b1eb86d8e13712b2be2b0",
        "filename": "doc/README_doxygen.md",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/README_doxygen.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/README_doxygen.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_doxygen.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "07d61b3bda13acb5ac4775db4d23a97586aed646",
        "filename": "doc/README_windows.txt",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "842a3964df625f6bf16ffb84ec3a2b31fb4fbd6b",
        "filename": "doc/REST-interface.md",
        "status": "added",
        "additions": 116,
        "deletions": 0,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "2dd930d6a4f97debef6dba19040f471f75250b6a",
        "filename": "doc/assets-attribution.md",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "b6cd86eafe6e7df2f81da7e0835239a40c476a24",
        "filename": "doc/benchmarking.md",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/benchmarking.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/benchmarking.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/benchmarking.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "8c20533c9bbaea4bcc18f8610713016454267a78",
        "filename": "doc/bips.md",
        "status": "added",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "f4a8edec75c5cf9a9bf04d010e5476698856d15c",
        "filename": "doc/bitcoin-conf.md",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/bitcoin-conf.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/bitcoin-conf.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bitcoin-conf.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "258be86edee2372033763742c513309761248f1b",
        "filename": "doc/bitcoin_logo_doxygen.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/bitcoin_logo_doxygen.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/bitcoin_logo_doxygen.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bitcoin_logo_doxygen.png?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "f48855a344fde73bb7b1cab23f74ce7c137dc264",
        "filename": "doc/build-freebsd.md",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/build-freebsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/build-freebsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-freebsd.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "47049a780edef5c5e1ef87813eff17eb0060d467",
        "filename": "doc/build-netbsd.md",
        "status": "added",
        "additions": 81,
        "deletions": 0,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/build-netbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/build-netbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-netbsd.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "2b051c078c8748b9e2988457d724655a7d9f7665",
        "filename": "doc/build-openbsd.md",
        "status": "added",
        "additions": 115,
        "deletions": 0,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "2a7d71eea6317116527c7d7845c701f7241cb68f",
        "filename": "doc/build-osx.md",
        "status": "added",
        "additions": 116,
        "deletions": 0,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "ab83ceff3dcf86cbdf5a436d2891cc3642f6191a",
        "filename": "doc/build-unix.md",
        "status": "added",
        "additions": 301,
        "deletions": 0,
        "changes": 301,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "28b6aceb3cc6208857e73aedd54efa472a094867",
        "filename": "doc/build-windows.md",
        "status": "added",
        "additions": 137,
        "deletions": 0,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "d1bf4b3a87da9eb669ec5b17d51104b1a3a0f6b0",
        "filename": "doc/dependencies.md",
        "status": "added",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "181ff77e5080abce1c4f3fb2116afdf8649590e2",
        "filename": "doc/descriptors.md",
        "status": "added",
        "additions": 212,
        "deletions": 0,
        "changes": 212,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/descriptors.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/descriptors.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/descriptors.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "fa188dbcd603b6eef80d3855ee9aa44c5e4a37f3",
        "filename": "doc/developer-notes.md",
        "status": "added",
        "additions": 1309,
        "deletions": 0,
        "changes": 1309,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "55a5c28258c67704fb926e0ad71d448440babdaa",
        "filename": "doc/dnsseed-policy.md",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/dnsseed-policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/dnsseed-policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dnsseed-policy.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "545e8fc92c825af88d32528ee5307ae2eddc538c",
        "filename": "doc/files.md",
        "status": "added",
        "additions": 125,
        "deletions": 0,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "c97b8d4d50812c3d60e4fe38b88fddcb4a0689a4",
        "filename": "doc/fuzzing.md",
        "status": "added",
        "additions": 159,
        "deletions": 0,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/fuzzing.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/fuzzing.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/fuzzing.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "3a48f4a0b397770e44f51477df854f8298ce1b75",
        "filename": "doc/gitian-building.md",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "99aa0a0def3d6b91511d53aee17f507ae1f813de",
        "filename": "doc/init.md",
        "status": "added",
        "additions": 145,
        "deletions": 0,
        "changes": 145,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "edbc0911a16772d4a1b23645795f9f7b4185aecb",
        "filename": "doc/man/Makefile.am",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/man/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/man/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/Makefile.am?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "129651d8e9f2f0795ca484af84518feef4faf3ad",
        "filename": "doc/man/bitcoin-cli.1",
        "status": "added",
        "additions": 115,
        "deletions": 0,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/man/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/man/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-cli.1?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "f68be21e8d9045094871c2025bc8f82526e49471",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "added",
        "additions": 610,
        "deletions": 0,
        "changes": 610,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "b4c769889637e51971118e1e3c3dbcf2c9336283",
        "filename": "doc/man/bitcoin-tx.1",
        "status": "added",
        "additions": 116,
        "deletions": 0,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/man/bitcoin-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/man/bitcoin-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-tx.1?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "aadea09a2b82382fd7f806262a6ef1d9f529da91",
        "filename": "doc/man/bitcoin-wallet.1",
        "status": "added",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/man/bitcoin-wallet.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/man/bitcoin-wallet.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-wallet.1?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "211ba10285d3dffb0580a6b1a438495bac19c566",
        "filename": "doc/man/bitcoind.1",
        "status": "added",
        "additions": 583,
        "deletions": 0,
        "changes": 583,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "471d8561f7a27ff2aa20da9ca750b7a1a646bb72",
        "filename": "doc/multiprocess.md",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/multiprocess.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/multiprocess.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/multiprocess.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "555f0afe3c7b28d0ed88fc0632aa266bbb087497",
        "filename": "doc/productivity.md",
        "status": "added",
        "additions": 217,
        "deletions": 0,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/productivity.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/productivity.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/productivity.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "c411b31d5d967001f21f189f34cfd1200ddb155b",
        "filename": "doc/psbt.md",
        "status": "added",
        "additions": 143,
        "deletions": 0,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/psbt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/psbt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/psbt.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "6e7a578ecc4e19bcce131626c8c1e868e678286e",
        "filename": "doc/reduce-memory.md",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/reduce-memory.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/reduce-memory.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-memory.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "86943b1f727cfff6e8fd3bc343a217ccd48be776",
        "filename": "doc/reduce-traffic.md",
        "status": "added",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/reduce-traffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/reduce-traffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-traffic.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "d3983b16899e29fd971a57cb845f27edefda98b0",
        "filename": "doc/release-notes.md",
        "status": "added",
        "additions": 486,
        "deletions": 0,
        "changes": 486,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "986b8832ec1893a5cc061ea14ac609e7836fbb4f",
        "filename": "doc/release-notes/release-notes-0.10.0.md",
        "status": "added",
        "additions": 762,
        "deletions": 0,
        "changes": 762,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/release-notes/release-notes-0.10.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/release-notes/release-notes-0.10.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.0.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "8f59f1f68c6905f9435b04bd029d3beef2a1f1e8",
        "filename": "doc/release-notes/release-notes-0.10.1.md",
        "status": "added",
        "additions": 143,
        "deletions": 0,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/release-notes/release-notes-0.10.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/release-notes/release-notes-0.10.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.1.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "192ed69d299811b8b662f28905f73479266be820",
        "filename": "doc/release-notes/release-notes-0.10.2.md",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/release-notes/release-notes-0.10.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/release-notes/release-notes-0.10.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.2.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "8a110e562c45376daea69efcb0837dc879ada66a",
        "filename": "doc/release-notes/release-notes-0.10.3.md",
        "status": "added",
        "additions": 165,
        "deletions": 0,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/release-notes/release-notes-0.10.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/release-notes/release-notes-0.10.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.3.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "38a2c1347d0b8afbfe0c0481cd90b9db06854328",
        "filename": "doc/release-notes/release-notes-0.10.4.md",
        "status": "added",
        "additions": 172,
        "deletions": 0,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/release-notes/release-notes-0.10.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/release-notes/release-notes-0.10.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.4.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "28e49fb7ea64838f81a72424217e755a62e865c8",
        "filename": "doc/release-notes/release-notes-0.11.0.md",
        "status": "added",
        "additions": 505,
        "deletions": 0,
        "changes": 505,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/release-notes/release-notes-0.11.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/release-notes/release-notes-0.11.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.0.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "799205691ed0f26322923693c2cbf523f0b6751e",
        "filename": "doc/release-notes/release-notes-0.11.1.md",
        "status": "added",
        "additions": 172,
        "deletions": 0,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/release-notes/release-notes-0.11.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/release-notes/release-notes-0.11.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.1.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "2351b80656542c3eee9b27c1f3fae5d3a46179d3",
        "filename": "doc/release-notes/release-notes-0.11.2.md",
        "status": "added",
        "additions": 217,
        "deletions": 0,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/release-notes/release-notes-0.11.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/release-notes/release-notes-0.11.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.2.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      },
      {
        "sha": "bc0d5ea3b0d91a326cc616e624a36ffd0a36e8b6",
        "filename": "doc/release-notes/release-notes-0.12.0.md",
        "status": "added",
        "additions": 894,
        "deletions": 0,
        "changes": 894,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/release-notes/release-notes-0.12.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11/doc/release-notes/release-notes-0.12.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.0.md?ref=57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      }
    ]
  },
  {
    "sha": "fc776a898ed01bb0591abaf20570fed5412e4ac8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYzc3NmE4OThlZDAxYmIwNTkxYWJhZjIwNTcwZmVkNTQxMmU0YWM4",
    "commit": {
      "author": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T21:12:36Z"
      },
      "committer": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T21:12:36Z"
      },
      "message": "latest update Mon 09 Nov 2020 03:12:36 PM CST",
      "tree": {
        "sha": "6c36e93b10a817b7856a10cce3084a2795e0619f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c36e93b10a817b7856a10cce3084a2795e0619f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc776a898ed01bb0591abaf20570fed5412e4ac8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc776a898ed01bb0591abaf20570fed5412e4ac8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fc776a898ed01bb0591abaf20570fed5412e4ac8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc776a898ed01bb0591abaf20570fed5412e4ac8/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1dfe19e2840b16c014674a890ba58a43fe039687",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1dfe19e2840b16c014674a890ba58a43fe039687",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1dfe19e2840b16c014674a890ba58a43fe039687"
      }
    ],
    "stats": {
      "total": 149,
      "additions": 0,
      "deletions": 149
    },
    "files": [
      {
        "sha": "95b5342f1ef9dc9b9bb66538d0cc842d02951d62",
        "filename": "contrib/init/org.bitcoin.bitcoind.plist",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1dfe19e2840b16c014674a890ba58a43fe039687/contrib/init/org.bitcoin.bitcoind.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1dfe19e2840b16c014674a890ba58a43fe039687/contrib/init/org.bitcoin.bitcoind.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/org.bitcoin.bitcoind.plist?ref=1dfe19e2840b16c014674a890ba58a43fe039687",
        "patch": "@@ -1,14 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n-<plist version=\"1.0\">\n-<dict>\n-\t<key>Label</key>\n-\t<string>org.bitcoin.bitcoind</string>\n-\t<key>ProgramArguments</key>\n-\t<array>\n-\t\t<string>/usr/local/bin/bitcoind</string>\n-\t</array>\n-\t<key>RunAtLoad</key>\n-\t<true/>\n-</dict>\n-</plist>"
      },
      {
        "sha": "ef277a7f14ad66ecdb8597a865a54b9506fd0ff9",
        "filename": "contrib/macdeploy/fancy.plist",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1dfe19e2840b16c014674a890ba58a43fe039687/contrib/macdeploy/fancy.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1dfe19e2840b16c014674a890ba58a43fe039687/contrib/macdeploy/fancy.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/fancy.plist?ref=1dfe19e2840b16c014674a890ba58a43fe039687",
        "patch": "@@ -1,32 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n-<plist version=\"1.0\">\n-<dict>\n-\t<key>window_bounds</key>\n-\t<array>\n-\t\t<integer>300</integer>\n-\t\t<integer>300</integer>\n-\t\t<integer>800</integer>\n-\t\t<integer>620</integer>\n-\t</array>\n-\t<key>background_picture</key>\n-\t<string>background.tiff</string>\n-\t<key>icon_size</key>\n-\t<integer>96</integer>\n-\t<key>applications_symlink</key>\n-\t<true/>\n-\t<key>items_position</key>\n-\t<dict>\n-\t\t<key>Applications</key>\n-\t\t<array>\n-\t\t\t<integer>370</integer>\n-\t\t\t<integer>156</integer>\n-\t\t</array>\n-\t\t<key>Bitcoin-Qt.app</key>\n-\t\t<array>\n-\t\t\t<integer>128</integer>\n-\t\t\t<integer>156</integer>\n-\t\t</array>\n-\t</dict>\n-</dict>\n-</plist>"
      },
      {
        "sha": "b9dcf0c5992216013d27464202cc86d2e8c31c93",
        "filename": "src/qt/Makefile",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1dfe19e2840b16c014674a890ba58a43fe039687/src/qt/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1dfe19e2840b16c014674a890ba58a43fe039687/src/qt/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile?ref=1dfe19e2840b16c014674a890ba58a43fe039687",
        "patch": "@@ -1,9 +0,0 @@\n-.PHONY: FORCE\n-all: FORCE\n-\t$(MAKE) -C .. bitcoin_qt test_bitcoin_qt\n-clean: FORCE\n-\t$(MAKE) -C .. bitcoin_qt_clean test_bitcoin_qt_clean\n-check: FORCE\n-\t$(MAKE) -C .. test_bitcoin_qt_check\n-bitcoin-qt bitcoin-qt.exe: FORCE\n-\t $(MAKE) -C .. bitcoin_qt"
      },
      {
        "sha": "a02f86b62ac9b38ec85b266c6205b0485557e3a5",
        "filename": "src/qt/test/Makefile",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1dfe19e2840b16c014674a890ba58a43fe039687/src/qt/test/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1dfe19e2840b16c014674a890ba58a43fe039687/src/qt/test/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile?ref=1dfe19e2840b16c014674a890ba58a43fe039687",
        "patch": "@@ -1,6 +0,0 @@\n-all:\n-\t$(MAKE) -C ../../ test_bitcoin_qt\n-clean:\n-\t$(MAKE) -C ../../ test_bitcoin_qt_clean\n-check:\n-\t$(MAKE) -C ../../ test_bitcoin_qt_check"
      },
      {
        "sha": "87bf73fec98d99ed7421093bfde8528d3ced4ddb",
        "filename": "src/test/Makefile",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1dfe19e2840b16c014674a890ba58a43fe039687/src/test/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1dfe19e2840b16c014674a890ba58a43fe039687/src/test/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile?ref=1dfe19e2840b16c014674a890ba58a43fe039687",
        "patch": "@@ -1,6 +0,0 @@\n-all:\n-\t$(MAKE) -C .. bitcoin_test\n-clean:\n-\t$(MAKE) -C .. bitcoin_test_clean\n-check:\n-\t$(MAKE) -C .. bitcoin_test_check"
      },
      {
        "sha": "85fe20924acef784470a633886c7ba86d6979bcf",
        "filename": "src/univalue/gen/gen.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 82,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1dfe19e2840b16c014674a890ba58a43fe039687/src/univalue/gen/gen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1dfe19e2840b16c014674a890ba58a43fe039687/src/univalue/gen/gen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/gen/gen.cpp?ref=1dfe19e2840b16c014674a890ba58a43fe039687",
        "patch": "@@ -1,82 +0,0 @@\n-// Copyright 2014 BitPay Inc.\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-//\n-// To re-create univalue_escapes.h:\n-// $ g++ -o gen gen.cpp\n-// $ ./gen > univalue_escapes.h\n-//\n-\n-#include <stdio.h>\n-#include <string.h>\n-#include \"univalue.h\"\n-\n-static bool initEscapes;\n-static std::string escapes[256];\n-\n-static void initJsonEscape()\n-{\n-    // Escape all lower control characters (some get overridden with smaller sequences below)\n-    for (int ch=0x00; ch<0x20; ++ch) {\n-        char tmpbuf[20];\n-        snprintf(tmpbuf, sizeof(tmpbuf), \"\\\\u%04x\", ch);\n-        escapes[ch] = std::string(tmpbuf);\n-    }\n-\n-    escapes[(int)'\"'] = \"\\\\\\\"\";\n-    escapes[(int)'\\\\'] = \"\\\\\\\\\";\n-    escapes[(int)'\\b'] = \"\\\\b\";\n-    escapes[(int)'\\f'] = \"\\\\f\";\n-    escapes[(int)'\\n'] = \"\\\\n\";\n-    escapes[(int)'\\r'] = \"\\\\r\";\n-    escapes[(int)'\\t'] = \"\\\\t\";\n-    escapes[(int)'\\x7f'] = \"\\\\u007f\"; // U+007F DELETE\n-\n-    initEscapes = true;\n-}\n-\n-static void outputEscape()\n-{\n-\tprintf(\t\"// Automatically generated file. Do not modify.\\n\"\n-\t\t\"#ifndef BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\\n\"\n-\t\t\"#define BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\\n\"\n-\t\t\"static const char *escapes[256] = {\\n\");\n-\n-\tfor (unsigned int i = 0; i < 256; i++) {\n-\t\tif (escapes[i].empty()) {\n-\t\t\tprintf(\"\\tNULL,\\n\");\n-\t\t} else {\n-\t\t\tprintf(\"\\t\\\"\");\n-\n-\t\t\tunsigned int si;\n-\t\t\tfor (si = 0; si < escapes[i].size(); si++) {\n-\t\t\t\tchar ch = escapes[i][si];\n-\t\t\t\tswitch (ch) {\n-\t\t\t\tcase '\"':\n-\t\t\t\t\tprintf(\"\\\\\\\"\");\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase '\\\\':\n-\t\t\t\t\tprintf(\"\\\\\\\\\");\n-\t\t\t\t\tbreak;\n-\t\t\t\tdefault:\n-\t\t\t\t\tprintf(\"%c\", escapes[i][si]);\n-\t\t\t\t\tbreak;\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\tprintf(\"\\\",\\n\");\n-\t\t}\n-\t}\n-\n-\tprintf(\t\"};\\n\"\n-\t\t\"#endif // BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\\n\");\n-}\n-\n-int main (int argc, char *argv[])\n-{\n-\tinitJsonEscape();\n-\toutputEscape();\n-\treturn 0;\n-}\n-"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "test/functional/data/wallets/high_minversion/db.log",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1dfe19e2840b16c014674a890ba58a43fe039687/test/functional/data/wallets/high_minversion/db.log",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1dfe19e2840b16c014674a890ba58a43fe039687/test/functional/data/wallets/high_minversion/db.log",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/data/wallets/high_minversion/db.log?ref=1dfe19e2840b16c014674a890ba58a43fe039687"
      },
      {
        "sha": "99ab8092631c4a7da2236f46e7250e6c265d3b49",
        "filename": "test/functional/data/wallets/high_minversion/wallet.dat",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1dfe19e2840b16c014674a890ba58a43fe039687/test/functional/data/wallets/high_minversion/wallet.dat",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1dfe19e2840b16c014674a890ba58a43fe039687/test/functional/data/wallets/high_minversion/wallet.dat",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/data/wallets/high_minversion/wallet.dat?ref=1dfe19e2840b16c014674a890ba58a43fe039687"
      }
    ]
  },
  {
    "sha": "52d5c764404b6da643bc5d4a81f598be8ffef47a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MmQ1Yzc2NDQwNGI2ZGE2NDNiYzVkNGE4MWY1OThiZThmZmVmNDdh",
    "commit": {
      "author": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T21:14:26Z"
      },
      "committer": {
        "name": "SatosiBitcoin",
        "email": "office@satoshibitcoin.app",
        "date": "2020-11-09T21:14:26Z"
      },
      "message": "Merge branch 'master' of https://github.com/SatoshiBitcoin/SatoshiBitcoin2.0",
      "tree": {
        "sha": "afa4755a129568ac805217f17f1ccc6a98f9c5b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/afa4755a129568ac805217f17f1ccc6a98f9c5b6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/52d5c764404b6da643bc5d4a81f598be8ffef47a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52d5c764404b6da643bc5d4a81f598be8ffef47a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/52d5c764404b6da643bc5d4a81f598be8ffef47a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52d5c764404b6da643bc5d4a81f598be8ffef47a/comments",
    "author": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "satoshibitcoin",
      "id": 12511797,
      "node_id": "MDQ6VXNlcjEyNTExNzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12511797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satoshibitcoin",
      "html_url": "https://github.com/satoshibitcoin",
      "followers_url": "https://api.github.com/users/satoshibitcoin/followers",
      "following_url": "https://api.github.com/users/satoshibitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/satoshibitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satoshibitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satoshibitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/satoshibitcoin/orgs",
      "repos_url": "https://api.github.com/users/satoshibitcoin/repos",
      "events_url": "https://api.github.com/users/satoshibitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satoshibitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fc776a898ed01bb0591abaf20570fed5412e4ac8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc776a898ed01bb0591abaf20570fed5412e4ac8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fc776a898ed01bb0591abaf20570fed5412e4ac8"
      },
      {
        "sha": "57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/57130cb7d6a9bf1e3d528c445903ed8f4e0d5a11"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 26,
      "deletions": 6
    },
    "files": [
      {
        "sha": "5ea3b90c531137d5feb363cdf28206cea091b314",
        "filename": "COPYING",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52d5c764404b6da643bc5d4a81f598be8ffef47a/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52d5c764404b6da643bc5d4a81f598be8ffef47a/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=52d5c764404b6da643bc5d4a81f598be8ffef47a",
        "patch": "@@ -1,7 +1,12 @@\n The MIT License (MIT)\n \n+<<<<<<< HEAD\n Copyright (c) 2009-2020 The Bitcoin Core developers\n Copyright (c) 2009-2020 Bitcoin Developers\n+=======\n+Copyright (c) 2009-2017 The Satoshi Bitcoin Core developers\n+Copyright (c) 2009-2017 Satoshi Bitcoin Developers\n+>>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "a41ef5cd1a2bbd75a8f0399bbaba0be1151aea30",
        "filename": "README.md",
        "status": "modified",
        "additions": 21,
        "deletions": 6,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52d5c764404b6da643bc5d4a81f598be8ffef47a/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52d5c764404b6da643bc5d4a81f598be8ffef47a/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=52d5c764404b6da643bc5d4a81f598be8ffef47a",
        "patch": "@@ -1,33 +1,44 @@\n-Bitcoin Core integration/staging tree\n+Satoshi Bitcoin 2 0 Core integration/staging tree\n =====================================\n \n https://bitcoincore.org\n \n-What is Bitcoin?\n+What is Satoshi Bitcoin?\n ----------------\n \n-Bitcoin is an experimental digital currency that enables instant payments to\n-anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n+Satoshi Bitcoin is an experimental digital currency that enables instant payments to\n+anyone, anywhere in the world. Satoshi Bitcoin uses peer-to-peer technology to operate\n with no central authority: managing transactions and issuing money are carried\n-out collectively by the network. Bitcoin Core is the name of open source\n+out collectively by the network. Satoshi Bitcoin Core is the name of open source\n software which enables the use of this currency.\n \n+<<<<<<< HEAD\n For more information, as well as an immediately usable, binary version of\n the Bitcoin Core software, see https://bitcoincore.org/en/download/, or read the\n+=======\n+For more information, as well as an immediately useable, binary version of\n+the Satoshi Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n+>>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n [original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n \n License\n -------\n \n-Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n+Satoshi Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n information or see https://opensource.org/licenses/MIT.\n \n Development Process\n -------------------\n \n The `master` branch is regularly built (see `doc/build-*.md` for instructions) and tested, but it is not guaranteed to be\n completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n+<<<<<<< HEAD\n regularly from release branches to indicate new official, stable release versions of Bitcoin Core.\n+=======\n+regularly to indicate new official, stable release versions of Satoshi Bitcoin Core.\n+\n+The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n+>>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n \n The https://github.com/bitcoin-core/gui repository is used exclusively for the\n development of the GUI. Its master branch is identical in all monotree\n@@ -69,7 +80,11 @@ Translations\n ------------\n \n Changes to translations as well as new translations can be submitted to\n+<<<<<<< HEAD\n [Bitcoin Core's Transifex page](https://www.transifex.com/bitcoin/bitcoin/).\n+=======\n+[Satoshi Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n+>>>>>>> d3beb2fa588f0d1ef62c840dfafe45df1b43d5f1\n \n Translations are periodically pulled from Transifex and merged into the git repository. See the\n [translation process](doc/translation_process.md) for details on how this works."
      }
    ]
  }
]