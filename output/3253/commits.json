[
  {
    "sha": "8dfd8c62dccac96afbda5ad0e66e68ee4820481f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZGZkOGM2MmRjY2FjOTZhZmJkYTVhZDBlNjZlNjhlZTQ4MjA0ODFm",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2013-08-12T14:59:09Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-11-14T13:25:04Z"
      },
      "message": "pass nBytes as parameter to GetMinFee(..)",
      "tree": {
        "sha": "dc517aecc0dd6d3973a2e91dbf9ead2284c74673",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dc517aecc0dd6d3973a2e91dbf9ead2284c74673"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8dfd8c62dccac96afbda5ad0e66e68ee4820481f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8dfd8c62dccac96afbda5ad0e66e68ee4820481f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8dfd8c62dccac96afbda5ad0e66e68ee4820481f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8dfd8c62dccac96afbda5ad0e66e68ee4820481f/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6ad44f569335d57a56e5b28582255439980f9b73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ad44f569335d57a56e5b28582255439980f9b73",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6ad44f569335d57a56e5b28582255439980f9b73"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 4,
      "deletions": 5
    },
    "files": [
      {
        "sha": "15fc8a24c3b8d947b703178421daa267fa033029",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8dfd8c62dccac96afbda5ad0e66e68ee4820481f/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8dfd8c62dccac96afbda5ad0e66e68ee4820481f/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=8dfd8c62dccac96afbda5ad0e66e68ee4820481f",
        "patch": "@@ -599,12 +599,11 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state)\n     return true;\n }\n \n-int64_t GetMinFee(const CTransaction& tx, bool fAllowFree, enum GetMinFee_mode mode)\n+int64_t GetMinFee(const CTransaction& tx, unsigned int nBytes, bool fAllowFree, enum GetMinFee_mode mode)\n {\n     // Base fee is either nMinTxFee or nMinRelayTxFee\n     int64_t nBaseFee = (mode == GMF_RELAY) ? tx.nMinRelayTxFee : tx.nMinTxFee;\n \n-    unsigned int nBytes = ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n     int64_t nMinFee = (1 + (int64_t)nBytes / 1000) * nBaseFee;\n \n     if (fAllowFree)\n@@ -740,7 +739,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         unsigned int nSize = ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n \n         // Don't accept it if it can't get into a block\n-        int64_t txMinFee = GetMinFee(tx, true, GMF_RELAY);\n+        int64_t txMinFee = GetMinFee(tx, nSize, true, GMF_RELAY);\n         if (fLimitFree && nFees < txMinFee)\n             return state.DoS(0, error(\"AcceptToMemoryPool : not enough fees %s, %\"PRId64\" < %\"PRId64,\n                                       hash.ToString().c_str(), nFees, txMinFee),"
      },
      {
        "sha": "cf803ae25ee21ce0cbb466c25719cc208319681d",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8dfd8c62dccac96afbda5ad0e66e68ee4820481f/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8dfd8c62dccac96afbda5ad0e66e68ee4820481f/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=8dfd8c62dccac96afbda5ad0e66e68ee4820481f",
        "patch": "@@ -258,7 +258,7 @@ enum GetMinFee_mode\n     GMF_SEND,\n };\n \n-int64_t GetMinFee(const CTransaction& tx, bool fAllowFree, enum GetMinFee_mode mode);\n+int64_t GetMinFee(const CTransaction& tx, unsigned int nBytes, bool fAllowFree, enum GetMinFee_mode mode);\n \n //\n // Check transaction inputs, and make sure any"
      },
      {
        "sha": "868716cb2c57bf25353cb9d2ca9ad200df240be8",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8dfd8c62dccac96afbda5ad0e66e68ee4820481f/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8dfd8c62dccac96afbda5ad0e66e68ee4820481f/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=8dfd8c62dccac96afbda5ad0e66e68ee4820481f",
        "patch": "@@ -1334,7 +1334,7 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64_t> >& vecSend,\n                 // Check that enough fee is included\n                 int64_t nPayFee = nTransactionFee * (1 + (int64_t)nBytes / 1000);\n                 bool fAllowFree = AllowFree(dPriority);\n-                int64_t nMinFee = GetMinFee(wtxNew, fAllowFree, GMF_SEND);\n+                int64_t nMinFee = GetMinFee(wtxNew, nBytes, fAllowFree, GMF_SEND);\n                 if (nFeeRet < max(nPayFee, nMinFee))\n                 {\n                     nFeeRet = max(nPayFee, nMinFee);"
      }
    ]
  },
  {
    "sha": "6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YTg2YzI0ZGIxNDZkOWNhNWQxZDVjODMwOTlkOTM1YzNmZWI2M2Ji",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2013-08-12T15:03:03Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-11-14T13:25:10Z"
      },
      "message": "Coin Control Features",
      "tree": {
        "sha": "84ea08401061e81d178a4c2caf34233281227da4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84ea08401061e81d178a4c2caf34233281227da4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8dfd8c62dccac96afbda5ad0e66e68ee4820481f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8dfd8c62dccac96afbda5ad0e66e68ee4820481f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8dfd8c62dccac96afbda5ad0e66e68ee4820481f"
      }
    ],
    "stats": {
      "total": 2601,
      "additions": 2558,
      "deletions": 43
    },
    "files": [
      {
        "sha": "7450507b34684cac5ddef00ea9a070ad746f995b",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -13,7 +13,7 @@ DIST_SUBDIRS = . qt test\n # bitcoin core #\n BITCOIN_CORE_H = addrman.h alert.h allocators.h base58.h bignum.h \\\n   bitcoinrpc.h bloom.h chainparams.h checkpoints.h checkqueue.h \\\n-  clientversion.h compat.h core.h coins.h crypter.h db.h hash.h init.h \\\n+  clientversion.h coincontrol.h compat.h core.h coins.h crypter.h db.h hash.h init.h \\\n   key.h keystore.h leveldbwrapper.h limitedmap.h main.h miner.h mruset.h \\\n   netbase.h net.h noui.h protocol.h script.h serialize.h sync.h threadsafety.h \\\n   txdb.h txmempool.h ui_interface.h uint256.h util.h version.h walletdb.h wallet.h"
      },
      {
        "sha": "0164bf1f844396a70ff48f95e0a6f0512fc3b43b",
        "filename": "src/coincontrol.h",
        "status": "added",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/coincontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/coincontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coincontrol.h?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -0,0 +1,59 @@\n+#ifndef COINCONTROL_H\n+#define COINCONTROL_H\n+\n+#include \"core.h\"\n+\n+/** Coin Control Features. */\n+class CCoinControl\n+{\n+public:\n+    CTxDestination destChange;\n+\n+    CCoinControl()\n+    {\n+        SetNull();\n+    }\n+\n+    void SetNull()\n+    {\n+        destChange = CNoDestination();\n+        setSelected.clear();\n+    }\n+\n+    bool HasSelected() const\n+    {\n+        return (setSelected.size() > 0);\n+    }\n+\n+    bool IsSelected(const uint256& hash, unsigned int n) const\n+    {\n+        COutPoint outpt(hash, n);\n+        return (setSelected.count(outpt) > 0);\n+    }\n+\n+    void Select(COutPoint& output)\n+    {\n+        setSelected.insert(output);\n+    }\n+\n+    void UnSelect(COutPoint& output)\n+    {\n+        setSelected.erase(output);\n+    }\n+\n+    void UnSelectAll()\n+    {\n+        setSelected.clear();\n+    }\n+\n+    void ListSelected(std::vector<COutPoint>& vOutpoints)\n+    {\n+        vOutpoints.assign(setSelected.begin(), setSelected.end());\n+    }\n+\n+private:\n+    std::set<COutPoint> setSelected;\n+\n+};\n+\n+#endif // COINCONTROL_H"
      },
      {
        "sha": "53126b39f8c09149f1c252d37e755d27af747fad",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -32,7 +32,10 @@ QT_TS = locale/bitcoin_ach.ts locale/bitcoin_af_ZA.ts locale/bitcoin_ar.ts \\\n   locale/bitcoin_zh_CN.ts locale/bitcoin_zh_TW.ts\n \n QT_FORMS_UI = forms/aboutdialog.ui forms/addressbookpage.ui \\\n-  forms/askpassphrasedialog.ui forms/editaddressdialog.ui forms/intro.ui \\\n+  forms/askpassphrasedialog.ui \\\n+  forms/coincontroldialog.ui \\\n+  forms/editaddressdialog.ui \\\n+  forms/intro.ui \\\n   forms/openuridialog.ui \\\n   forms/optionsdialog.ui forms/overviewpage.ui forms/receiverequestdialog.ui \\\n   forms/receivecoinsdialog.ui \\\n@@ -43,6 +46,8 @@ QT_MOC_CPP = moc_aboutdialog.cpp moc_addressbookpage.cpp \\\n   moc_addresstablemodel.cpp moc_askpassphrasedialog.cpp \\\n   moc_bitcoinaddressvalidator.cpp moc_bitcoinamountfield.cpp \\\n   moc_bitcoingui.cpp moc_bitcoinunits.cpp moc_clientmodel.cpp \\\n+  moc_coincontroldialog.cpp \\\n+  moc_coincontroltreewidget.cpp \\\n   moc_csvmodelwriter.cpp moc_editaddressdialog.cpp moc_guiutil.cpp \\\n   moc_intro.cpp moc_macdockiconhandler.cpp moc_macnotificationhandler.cpp \\\n   moc_monitoreddatamapper.cpp moc_notificator.cpp \\\n@@ -70,7 +75,7 @@ PROTOBUF_PROTO = paymentrequest.proto\n \n BITCOIN_QT_H  = aboutdialog.h addressbookpage.h addresstablemodel.h \\\n   askpassphrasedialog.h bitcoinaddressvalidator.h bitcoinamountfield.h \\\n-  bitcoingui.h bitcoinunits.h clientmodel.h csvmodelwriter.h \\\n+  bitcoingui.h bitcoinunits.h clientmodel.h coincontroldialog.h coincontroltreewidget.h csvmodelwriter.h \\\n   editaddressdialog.h guiconstants.h guiutil.h intro.h macdockiconhandler.h \\\n   macnotificationhandler.h monitoreddatamapper.h notificator.h \\\n   openuridialog.h \\\n@@ -103,7 +108,10 @@ RES_ICONS = res/icons/bitcoin.png res/icons/address-book.png \\\n BITCOIN_QT_CPP = aboutdialog.cpp addressbookpage.cpp \\\n   addresstablemodel.cpp askpassphrasedialog.cpp bitcoinaddressvalidator.cpp \\\n   bitcoinamountfield.cpp bitcoin.cpp bitcoingui.cpp \\\n-  bitcoinunits.cpp clientmodel.cpp csvmodelwriter.cpp editaddressdialog.cpp \\\n+  bitcoinunits.cpp clientmodel.cpp \\\n+  coincontroldialog.cpp \\\n+  coincontroltreewidget.cpp \\\n+  csvmodelwriter.cpp editaddressdialog.cpp \\\n   guiutil.cpp intro.cpp monitoreddatamapper.cpp notificator.cpp \\\n   openuridialog.cpp \\\n   optionsdialog.cpp optionsmodel.cpp overviewpage.cpp paymentrequestplus.cpp \\"
      },
      {
        "sha": "58f5113453fcbc7dbbfd2e1ff23a83c6948866ac",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "added",
        "additions": 766,
        "deletions": 0,
        "changes": 766,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -0,0 +1,766 @@\n+#include \"coincontroldialog.h\"\n+#include \"ui_coincontroldialog.h\"\n+\n+#include \"init.h\"\n+#include \"bitcoinunits.h\"\n+#include \"walletmodel.h\"\n+#include \"addresstablemodel.h\"\n+#include \"optionsmodel.h\"\n+#include \"guiutil.h\"\n+#include \"coincontrol.h\"\n+#include \"main.h\"\n+#include \"wallet.h\"\n+\n+#include <QApplication>\n+#include <QCheckBox>\n+#include <QClipboard>\n+#include <QColor>\n+#include <QCursor>\n+#include <QDateTime>\n+#include <QDialogButtonBox>\n+#include <QFlags>\n+#include <QIcon>\n+#include <QString>\n+#include <QTreeWidget>\n+#include <QTreeWidgetItem>\n+\n+using namespace std;\n+QList<qint64> CoinControlDialog::payAmounts;\n+CCoinControl* CoinControlDialog::coinControl = new CCoinControl();\n+\n+CoinControlDialog::CoinControlDialog(QWidget *parent) :\n+    QDialog(parent),\n+    ui(new Ui::CoinControlDialog),\n+    model(0)\n+{\n+    ui->setupUi(this);\n+\n+    // context menu actions\n+    QAction *copyAddressAction = new QAction(tr(\"Copy address\"), this);\n+    QAction *copyLabelAction = new QAction(tr(\"Copy label\"), this);\n+    QAction *copyAmountAction = new QAction(tr(\"Copy amount\"), this);\n+             copyTransactionHashAction = new QAction(tr(\"Copy transaction ID\"), this);  // we need to enable/disable this\n+             lockAction = new QAction(tr(\"Lock unspent\"), this);                        // we need to enable/disable this\n+             unlockAction = new QAction(tr(\"Unlock unspent\"), this);                    // we need to enable/disable this\n+\n+    // context menu\n+    contextMenu = new QMenu();\n+    contextMenu->addAction(copyAddressAction);\n+    contextMenu->addAction(copyLabelAction);\n+    contextMenu->addAction(copyAmountAction);\n+    contextMenu->addAction(copyTransactionHashAction);\n+    contextMenu->addSeparator();\n+    contextMenu->addAction(lockAction);\n+    contextMenu->addAction(unlockAction);\n+\n+    // context menu signals\n+    connect(ui->treeWidget, SIGNAL(customContextMenuRequested(QPoint)), this, SLOT(showMenu(QPoint)));\n+    connect(copyAddressAction, SIGNAL(triggered()), this, SLOT(copyAddress()));\n+    connect(copyLabelAction, SIGNAL(triggered()), this, SLOT(copyLabel()));\n+    connect(copyAmountAction, SIGNAL(triggered()), this, SLOT(copyAmount()));\n+    connect(copyTransactionHashAction, SIGNAL(triggered()), this, SLOT(copyTransactionHash()));\n+    connect(lockAction, SIGNAL(triggered()), this, SLOT(lockCoin()));\n+    connect(unlockAction, SIGNAL(triggered()), this, SLOT(unlockCoin()));\n+\n+    // clipboard actions\n+    QAction *clipboardQuantityAction = new QAction(tr(\"Copy quantity\"), this);\n+    QAction *clipboardAmountAction = new QAction(tr(\"Copy amount\"), this);\n+    QAction *clipboardFeeAction = new QAction(tr(\"Copy fee\"), this);\n+    QAction *clipboardAfterFeeAction = new QAction(tr(\"Copy after fee\"), this);\n+    QAction *clipboardBytesAction = new QAction(tr(\"Copy bytes\"), this);\n+    QAction *clipboardPriorityAction = new QAction(tr(\"Copy priority\"), this);\n+    QAction *clipboardLowOutputAction = new QAction(tr(\"Copy low output\"), this);\n+    QAction *clipboardChangeAction = new QAction(tr(\"Copy change\"), this);\n+\n+    connect(clipboardQuantityAction, SIGNAL(triggered()), this, SLOT(clipboardQuantity()));\n+    connect(clipboardAmountAction, SIGNAL(triggered()), this, SLOT(clipboardAmount()));\n+    connect(clipboardFeeAction, SIGNAL(triggered()), this, SLOT(clipboardFee()));\n+    connect(clipboardAfterFeeAction, SIGNAL(triggered()), this, SLOT(clipboardAfterFee()));\n+    connect(clipboardBytesAction, SIGNAL(triggered()), this, SLOT(clipboardBytes()));\n+    connect(clipboardPriorityAction, SIGNAL(triggered()), this, SLOT(clipboardPriority()));\n+    connect(clipboardLowOutputAction, SIGNAL(triggered()), this, SLOT(clipboardLowOutput()));\n+    connect(clipboardChangeAction, SIGNAL(triggered()), this, SLOT(clipboardChange()));\n+\n+    ui->labelCoinControlQuantity->addAction(clipboardQuantityAction);\n+    ui->labelCoinControlAmount->addAction(clipboardAmountAction);\n+    ui->labelCoinControlFee->addAction(clipboardFeeAction);\n+    ui->labelCoinControlAfterFee->addAction(clipboardAfterFeeAction);\n+    ui->labelCoinControlBytes->addAction(clipboardBytesAction);\n+    ui->labelCoinControlPriority->addAction(clipboardPriorityAction);\n+    ui->labelCoinControlLowOutput->addAction(clipboardLowOutputAction);\n+    ui->labelCoinControlChange->addAction(clipboardChangeAction);\n+\n+    // toggle tree/list mode\n+    connect(ui->radioTreeMode, SIGNAL(toggled(bool)), this, SLOT(radioTreeMode(bool)));\n+    connect(ui->radioListMode, SIGNAL(toggled(bool)), this, SLOT(radioListMode(bool)));\n+\n+    // click on checkbox\n+    connect(ui->treeWidget, SIGNAL(itemChanged( QTreeWidgetItem*, int)), this, SLOT(viewItemChanged( QTreeWidgetItem*, int)));\n+\n+    // click on header\n+    ui->treeWidget->header()->setClickable(true);\n+    connect(ui->treeWidget->header(), SIGNAL(sectionClicked(int)), this, SLOT(headerSectionClicked(int)));\n+\n+    // ok button\n+    connect(ui->buttonBox, SIGNAL(clicked( QAbstractButton*)), this, SLOT(buttonBoxClicked(QAbstractButton*)));\n+\n+    // (un)select all\n+    connect(ui->pushButtonSelectAll, SIGNAL(clicked()), this, SLOT(buttonSelectAllClicked()));\n+\n+    ui->treeWidget->setColumnWidth(COLUMN_CHECKBOX, 84);\n+    ui->treeWidget->setColumnWidth(COLUMN_AMOUNT, 100);\n+    ui->treeWidget->setColumnWidth(COLUMN_LABEL, 170);\n+    ui->treeWidget->setColumnWidth(COLUMN_ADDRESS, 290);\n+    ui->treeWidget->setColumnWidth(COLUMN_DATE, 110);\n+    ui->treeWidget->setColumnWidth(COLUMN_CONFIRMATIONS, 100);\n+    ui->treeWidget->setColumnWidth(COLUMN_PRIORITY, 100);\n+    ui->treeWidget->setColumnHidden(COLUMN_TXHASH, true);         // store transacton hash in this column, but dont show it\n+    ui->treeWidget->setColumnHidden(COLUMN_VOUT_INDEX, true);     // store vout index in this column, but dont show it\n+    ui->treeWidget->setColumnHidden(COLUMN_AMOUNT_INT64, true);   // store amount int64 in this column, but dont show it\n+    ui->treeWidget->setColumnHidden(COLUMN_PRIORITY_INT64, true); // store priority int64 in this column, but dont show it\n+\n+    // default view is sorted by amount desc\n+    sortView(COLUMN_AMOUNT_INT64, Qt::DescendingOrder);\n+}\n+\n+CoinControlDialog::~CoinControlDialog()\n+{\n+    delete ui;\n+}\n+\n+void CoinControlDialog::setModel(WalletModel *model)\n+{\n+    this->model = model;\n+\n+    if(model && model->getOptionsModel() && model->getAddressTableModel())\n+    {\n+        updateView();\n+        updateLabelLocked();\n+        CoinControlDialog::updateLabels(model, this);\n+    }\n+}\n+\n+// helper function str_pad\n+QString CoinControlDialog::strPad(QString s, int nPadLength, QString sPadding)\n+{\n+    while (s.length() < nPadLength)\n+        s = sPadding + s;\n+\n+    return s;\n+}\n+\n+// ok button\n+void CoinControlDialog::buttonBoxClicked(QAbstractButton* button)\n+{\n+    if (ui->buttonBox->buttonRole(button) == QDialogButtonBox::AcceptRole)\n+        done(QDialog::Accepted); // closes the dialog\n+}\n+\n+// (un)select all\n+void CoinControlDialog::buttonSelectAllClicked()\n+{\n+    Qt::CheckState state = Qt::Checked;\n+    for (int i = 0; i < ui->treeWidget->topLevelItemCount(); i++)\n+    {\n+        if (ui->treeWidget->topLevelItem(i)->checkState(COLUMN_CHECKBOX) != Qt::Unchecked)\n+        {\n+            state = Qt::Unchecked;\n+            break;\n+        }\n+    }\n+    ui->treeWidget->setEnabled(false);\n+    for (int i = 0; i < ui->treeWidget->topLevelItemCount(); i++)\n+            if (ui->treeWidget->topLevelItem(i)->checkState(COLUMN_CHECKBOX) != state)\n+                ui->treeWidget->topLevelItem(i)->setCheckState(COLUMN_CHECKBOX, state);\n+    ui->treeWidget->setEnabled(true);\n+    if (state == Qt::Unchecked)\n+        coinControl->UnSelectAll(); // just to be sure\n+    CoinControlDialog::updateLabels(model, this);\n+}\n+\n+// context menu\n+void CoinControlDialog::showMenu(const QPoint &point)\n+{\n+    QTreeWidgetItem *item = ui->treeWidget->itemAt(point);\n+    if(item)\n+    {\n+        contextMenuItem = item;\n+\n+        // disable some items (like Copy Transaction ID, lock, unlock) for tree roots in context menu\n+        if (item->text(COLUMN_TXHASH).length() == 64) // transaction hash is 64 characters (this means its a child node, so its not a parent node in tree mode)\n+        {\n+            copyTransactionHashAction->setEnabled(true);\n+            if (model->isLockedCoin(uint256(item->text(COLUMN_TXHASH).toStdString()), item->text(COLUMN_VOUT_INDEX).toUInt()))\n+            {\n+                lockAction->setEnabled(false);\n+                unlockAction->setEnabled(true);\n+            }\n+            else\n+            {\n+                lockAction->setEnabled(true);\n+                unlockAction->setEnabled(false);\n+            }\n+        }\n+        else // this means click on parent node in tree mode -> disable all\n+        {\n+            copyTransactionHashAction->setEnabled(false);\n+            lockAction->setEnabled(false);\n+            unlockAction->setEnabled(false);\n+        }\n+\n+        // show context menu\n+        contextMenu->exec(QCursor::pos());\n+    }\n+}\n+\n+// context menu action: copy amount\n+void CoinControlDialog::copyAmount()\n+{\n+    GUIUtil::setClipboard(contextMenuItem->text(COLUMN_AMOUNT));\n+}\n+\n+// context menu action: copy label\n+void CoinControlDialog::copyLabel()\n+{\n+    if (ui->radioTreeMode->isChecked() && contextMenuItem->text(COLUMN_LABEL).length() == 0 && contextMenuItem->parent())\n+        GUIUtil::setClipboard(contextMenuItem->parent()->text(COLUMN_LABEL));\n+    else\n+        GUIUtil::setClipboard(contextMenuItem->text(COLUMN_LABEL));\n+}\n+\n+// context menu action: copy address\n+void CoinControlDialog::copyAddress()\n+{\n+    if (ui->radioTreeMode->isChecked() && contextMenuItem->text(COLUMN_ADDRESS).length() == 0 && contextMenuItem->parent())\n+        GUIUtil::setClipboard(contextMenuItem->parent()->text(COLUMN_ADDRESS));\n+    else\n+        GUIUtil::setClipboard(contextMenuItem->text(COLUMN_ADDRESS));\n+}\n+\n+// context menu action: copy transaction id\n+void CoinControlDialog::copyTransactionHash()\n+{\n+    GUIUtil::setClipboard(contextMenuItem->text(COLUMN_TXHASH));\n+}\n+\n+// context menu action: lock coin\n+void CoinControlDialog::lockCoin()\n+{\n+    if (contextMenuItem->checkState(COLUMN_CHECKBOX) == Qt::Checked)\n+        contextMenuItem->setCheckState(COLUMN_CHECKBOX, Qt::Unchecked);\n+\n+    COutPoint outpt(uint256(contextMenuItem->text(COLUMN_TXHASH).toStdString()), contextMenuItem->text(COLUMN_VOUT_INDEX).toUInt());\n+    model->lockCoin(outpt);\n+    contextMenuItem->setDisabled(true);\n+    contextMenuItem->setIcon(COLUMN_CHECKBOX, QIcon(\":/icons/lock_closed\"));\n+    updateLabelLocked();\n+}\n+\n+// context menu action: unlock coin\n+void CoinControlDialog::unlockCoin()\n+{\n+    COutPoint outpt(uint256(contextMenuItem->text(COLUMN_TXHASH).toStdString()), contextMenuItem->text(COLUMN_VOUT_INDEX).toUInt());\n+    model->unlockCoin(outpt);\n+    contextMenuItem->setDisabled(false);\n+    contextMenuItem->setIcon(COLUMN_CHECKBOX, QIcon());\n+    updateLabelLocked();\n+}\n+\n+// copy label \"Quantity\" to clipboard\n+void CoinControlDialog::clipboardQuantity()\n+{\n+    GUIUtil::setClipboard(ui->labelCoinControlQuantity->text());\n+}\n+\n+// copy label \"Amount\" to clipboard\n+void CoinControlDialog::clipboardAmount()\n+{\n+    GUIUtil::setClipboard(ui->labelCoinControlAmount->text().left(ui->labelCoinControlAmount->text().indexOf(\" \")));\n+}\n+\n+// copy label \"Fee\" to clipboard\n+void CoinControlDialog::clipboardFee()\n+{\n+    GUIUtil::setClipboard(ui->labelCoinControlFee->text().left(ui->labelCoinControlFee->text().indexOf(\" \")));\n+}\n+\n+// copy label \"After fee\" to clipboard\n+void CoinControlDialog::clipboardAfterFee()\n+{\n+    GUIUtil::setClipboard(ui->labelCoinControlAfterFee->text().left(ui->labelCoinControlAfterFee->text().indexOf(\" \")));\n+}\n+\n+// copy label \"Bytes\" to clipboard\n+void CoinControlDialog::clipboardBytes()\n+{\n+    GUIUtil::setClipboard(ui->labelCoinControlBytes->text());\n+}\n+\n+// copy label \"Priority\" to clipboard\n+void CoinControlDialog::clipboardPriority()\n+{\n+    GUIUtil::setClipboard(ui->labelCoinControlPriority->text());\n+}\n+\n+// copy label \"Low output\" to clipboard\n+void CoinControlDialog::clipboardLowOutput()\n+{\n+    GUIUtil::setClipboard(ui->labelCoinControlLowOutput->text());\n+}\n+\n+// copy label \"Change\" to clipboard\n+void CoinControlDialog::clipboardChange()\n+{\n+    GUIUtil::setClipboard(ui->labelCoinControlChange->text().left(ui->labelCoinControlChange->text().indexOf(\" \")));\n+}\n+\n+// treeview: sort\n+void CoinControlDialog::sortView(int column, Qt::SortOrder order)\n+{\n+    sortColumn = column;\n+    sortOrder = order;\n+    ui->treeWidget->sortItems(column, order);\n+    ui->treeWidget->header()->setSortIndicator((sortColumn == COLUMN_AMOUNT_INT64 ? COLUMN_AMOUNT : (sortColumn == COLUMN_PRIORITY_INT64 ? COLUMN_PRIORITY : sortColumn)), sortOrder);\n+}\n+\n+// treeview: clicked on header\n+void CoinControlDialog::headerSectionClicked(int logicalIndex)\n+{\n+    if (logicalIndex == COLUMN_CHECKBOX) // click on most left column -> do nothing\n+    {\n+        ui->treeWidget->header()->setSortIndicator((sortColumn == COLUMN_AMOUNT_INT64 ? COLUMN_AMOUNT : (sortColumn == COLUMN_PRIORITY_INT64 ? COLUMN_PRIORITY : sortColumn)), sortOrder);\n+    }\n+    else\n+    {\n+        if (logicalIndex == COLUMN_AMOUNT) // sort by amount\n+            logicalIndex = COLUMN_AMOUNT_INT64;\n+\n+        if (logicalIndex == COLUMN_PRIORITY) // sort by priority\n+            logicalIndex = COLUMN_PRIORITY_INT64;\n+\n+        if (sortColumn == logicalIndex)\n+            sortOrder = ((sortOrder == Qt::AscendingOrder) ? Qt::DescendingOrder : Qt::AscendingOrder);\n+        else\n+        {\n+            sortColumn = logicalIndex;\n+            sortOrder = ((sortColumn == COLUMN_AMOUNT_INT64 || sortColumn == COLUMN_PRIORITY_INT64 || sortColumn == COLUMN_DATE || sortColumn == COLUMN_CONFIRMATIONS) ? Qt::DescendingOrder : Qt::AscendingOrder); // if amount,date,conf,priority then default => desc, else default => asc\n+        }\n+\n+        sortView(sortColumn, sortOrder);\n+    }\n+}\n+\n+// toggle tree mode\n+void CoinControlDialog::radioTreeMode(bool checked)\n+{\n+    if (checked && model)\n+        updateView();\n+}\n+\n+// toggle list mode\n+void CoinControlDialog::radioListMode(bool checked)\n+{\n+    if (checked && model)\n+        updateView();\n+}\n+\n+// checkbox clicked by user\n+void CoinControlDialog::viewItemChanged(QTreeWidgetItem* item, int column)\n+{\n+    if (column == COLUMN_CHECKBOX && item->text(COLUMN_TXHASH).length() == 64) // transaction hash is 64 characters (this means its a child node, so its not a parent node in tree mode)\n+    {\n+        COutPoint outpt(uint256(item->text(COLUMN_TXHASH).toStdString()), item->text(COLUMN_VOUT_INDEX).toUInt());\n+\n+        if (item->checkState(COLUMN_CHECKBOX) == Qt::Unchecked)\n+            coinControl->UnSelect(outpt);\n+        else if (item->isDisabled()) // locked (this happens if \"check all\" through parent node)\n+            item->setCheckState(COLUMN_CHECKBOX, Qt::Unchecked);\n+        else\n+            coinControl->Select(outpt);\n+\n+        // selection changed -> update labels\n+        if (ui->treeWidget->isEnabled()) // do not update on every click for (un)select all\n+            CoinControlDialog::updateLabels(model, this);\n+    }\n+}\n+\n+// return human readable label for priority number\n+QString CoinControlDialog::getPriorityLabel(double dPriority)\n+{\n+    if (AllowFree(dPriority)) // at least medium\n+    {\n+        if      (AllowFree(dPriority / 1000000))  return tr(\"highest\");\n+        else if (AllowFree(dPriority / 100000))   return tr(\"higher\");\n+        else if (AllowFree(dPriority / 10000))    return tr(\"high\");\n+        else if (AllowFree(dPriority / 1000))     return tr(\"medium-high\");\n+        else                                      return tr(\"medium\");\n+    }\n+    else\n+    {\n+        if      (AllowFree(dPriority * 10))   return tr(\"low-medium\");\n+        else if (AllowFree(dPriority * 100))  return tr(\"low\");\n+        else if (AllowFree(dPriority * 1000)) return tr(\"lower\");\n+        else                                  return tr(\"lowest\");\n+    }\n+}\n+\n+// shows count of locked unspent outputs\n+void CoinControlDialog::updateLabelLocked()\n+{\n+    vector<COutPoint> vOutpts;\n+    model->listLockedCoins(vOutpts);\n+    if (vOutpts.size() > 0)\n+    {\n+       ui->labelLocked->setText(tr(\"(%1 locked)\").arg(vOutpts.size()));\n+       ui->labelLocked->setVisible(true);\n+    }\n+    else ui->labelLocked->setVisible(false);\n+}\n+\n+void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n+{\n+    if (!model) return;\n+\n+    // nPayAmount\n+    qint64 nPayAmount = 0;\n+    bool fLowOutput = false;\n+    bool fDust = false;\n+    CTransaction txDummy;\n+    foreach(const qint64 &amount, CoinControlDialog::payAmounts)\n+    {\n+        nPayAmount += amount;\n+\n+        if (amount > 0)\n+        {\n+            if (amount < CENT)\n+                fLowOutput = true;\n+\n+            CTxOut txout(amount, (CScript)vector<unsigned char>(24, 0));\n+            txDummy.vout.push_back(txout);\n+            if (txout.IsDust(CTransaction::nMinRelayTxFee))\n+               fDust = true;\n+        }\n+    }\n+\n+    QString sPriorityLabel      = \"\";\n+    int64_t nAmount             = 0;\n+    int64_t nPayFee             = 0;\n+    int64_t nAfterFee           = 0;\n+    int64_t nChange             = 0;\n+    unsigned int nBytes         = 0;\n+    unsigned int nBytesInputs   = 0;\n+    double dPriority            = 0;\n+    double dPriorityInputs      = 0;\n+    unsigned int nQuantity      = 0;\n+    int nQuantityUncompressed   = 0;\n+\n+    vector<COutPoint> vCoinControl;\n+    vector<COutput>   vOutputs;\n+    coinControl->ListSelected(vCoinControl);\n+    model->getOutputs(vCoinControl, vOutputs);\n+\n+    BOOST_FOREACH(const COutput& out, vOutputs)\n+    {\n+        // unselect already spent, very unlikely scenario, this could happen when selected are spent elsewhere, like rpc or another computer\n+        if (out.tx->IsSpent(out.i))\n+        {\n+            uint256 txhash = out.tx->GetHash();\n+            COutPoint outpt(txhash, out.i);\n+            coinControl->UnSelect(outpt);\n+            continue;\n+        }\n+\n+        // Quantity\n+        nQuantity++;\n+\n+        // Amount\n+        nAmount += out.tx->vout[out.i].nValue;\n+\n+        // Priority\n+        dPriorityInputs += (double)out.tx->vout[out.i].nValue * (out.nDepth+1);\n+\n+        // Bytes\n+        CTxDestination address;\n+        if(ExtractDestination(out.tx->vout[out.i].scriptPubKey, address))\n+        {\n+            CPubKey pubkey;\n+            CKeyID *keyid = boost::get<CKeyID>(&address);\n+            if (keyid && model->getPubKey(*keyid, pubkey))\n+            {\n+                nBytesInputs += (pubkey.IsCompressed() ? 148 : 180);\n+                if (!pubkey.IsCompressed())\n+                    nQuantityUncompressed++;\n+            }\n+            else\n+                nBytesInputs += 148; // in all error cases, simply assume 148 here\n+        }\n+        else nBytesInputs += 148;\n+    }\n+\n+    // calculation\n+    if (nQuantity > 0)\n+    {\n+        // Bytes\n+        nBytes = nBytesInputs + ((CoinControlDialog::payAmounts.size() > 0 ? CoinControlDialog::payAmounts.size() + 1 : 2) * 34) + 10; // always assume +1 output for change here\n+\n+        // Priority\n+        dPriority = dPriorityInputs / (nBytes - nBytesInputs + (nQuantityUncompressed * 29)); // 29 = 180 - 151 (uncompressed public keys are over the limit. max 151 bytes of the input are ignored for priority)\n+        sPriorityLabel = CoinControlDialog::getPriorityLabel(dPriority);\n+\n+        // Fee\n+        int64_t nFee = nTransactionFee * (1 + (int64_t)nBytes / 1000);\n+\n+        // Min Fee\n+        int64_t nMinFee = GetMinFee(txDummy, nBytes, AllowFree(dPriority), GMF_SEND);\n+\n+        nPayFee = max(nFee, nMinFee);\n+\n+        if (nPayAmount > 0)\n+        {\n+            nChange = nAmount - nPayFee - nPayAmount;\n+\n+            // if sub-cent change is required, the fee must be raised to at least CTransaction::nMinTxFee\n+            if (nPayFee < CTransaction::nMinTxFee && nChange > 0 && nChange < CENT)\n+            {\n+                if (nChange < CTransaction::nMinTxFee) // change < 0.0001 => simply move all change to fees\n+                {\n+                    nPayFee += nChange;\n+                    nChange = 0;\n+                }\n+                else\n+                {\n+                    nChange = nChange + nPayFee - CTransaction::nMinTxFee;\n+                    nPayFee = CTransaction::nMinTxFee;\n+                }\n+            }\n+\n+            // Never create dust outputs; if we would, just add the dust to the fee.\n+            if (nChange > 0 && nChange < CENT)\n+            {\n+                CTxOut txout(nChange, (CScript)vector<unsigned char>(24, 0));\n+                if (txout.IsDust(CTransaction::nMinRelayTxFee))\n+                {\n+                    nPayFee += nChange;\n+                    nChange = 0;\n+                }\n+            }\n+\n+            if (nChange == 0)\n+                nBytes -= 34;\n+        }\n+\n+        // after fee\n+        nAfterFee = nAmount - nPayFee;\n+        if (nAfterFee < 0)\n+            nAfterFee = 0;\n+    }\n+\n+    // actually update labels\n+    int nDisplayUnit = BitcoinUnits::BTC;\n+    if (model && model->getOptionsModel())\n+        nDisplayUnit = model->getOptionsModel()->getDisplayUnit();\n+\n+    QLabel *l1 = dialog->findChild<QLabel *>(\"labelCoinControlQuantity\");\n+    QLabel *l2 = dialog->findChild<QLabel *>(\"labelCoinControlAmount\");\n+    QLabel *l3 = dialog->findChild<QLabel *>(\"labelCoinControlFee\");\n+    QLabel *l4 = dialog->findChild<QLabel *>(\"labelCoinControlAfterFee\");\n+    QLabel *l5 = dialog->findChild<QLabel *>(\"labelCoinControlBytes\");\n+    QLabel *l6 = dialog->findChild<QLabel *>(\"labelCoinControlPriority\");\n+    QLabel *l7 = dialog->findChild<QLabel *>(\"labelCoinControlLowOutput\");\n+    QLabel *l8 = dialog->findChild<QLabel *>(\"labelCoinControlChange\");\n+\n+    // enable/disable \"low output\" and \"change\"\n+    dialog->findChild<QLabel *>(\"labelCoinControlLowOutputText\")->setEnabled(nPayAmount > 0);\n+    dialog->findChild<QLabel *>(\"labelCoinControlLowOutput\")    ->setEnabled(nPayAmount > 0);\n+    dialog->findChild<QLabel *>(\"labelCoinControlChangeText\")   ->setEnabled(nPayAmount > 0);\n+    dialog->findChild<QLabel *>(\"labelCoinControlChange\")       ->setEnabled(nPayAmount > 0);\n+\n+    // stats\n+    l1->setText(QString::number(nQuantity));                                 // Quantity\n+    l2->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nAmount));        // Amount\n+    l3->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nPayFee));        // Fee\n+    l4->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nAfterFee));      // After Fee\n+    l5->setText(((nBytes > 0) ? \"~\" : \"\") + QString::number(nBytes));        // Bytes\n+    l6->setText(sPriorityLabel);                                             // Priority\n+    l7->setText((fLowOutput ? (fDust ? tr(\"DUST\") : tr(\"yes\")) : tr(\"no\"))); // Low Output / Dust\n+    l8->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nChange));        // Change\n+\n+    // turn labels \"red\"\n+    l5->setStyleSheet((nBytes >= 1000) ? \"color:red;\" : \"\");                // Bytes >= 1000\n+    l6->setStyleSheet((!AllowFree(dPriority)) ? \"color:red;\" : \"\");         // Priority < \"medium\"\n+    l7->setStyleSheet((fLowOutput) ? \"color:red;\" : \"\");                    // Low Output = \"yes\"\n+    l8->setStyleSheet((nChange > 0 && nChange < CENT) ? \"color:red;\" : \"\"); // Change < 0.01BTC\n+\n+    // tool tips\n+    l5->setToolTip(tr(\"This label turns red, if the transaction size is bigger than 1000 bytes.\\n\\n This means a fee of at least %1 per kb is required.\\n\\n Can vary +/- 1 Byte per input.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee)));\n+    l6->setToolTip(tr(\"Transactions with higher priority get more likely into a block.\\n\\nThis label turns red, if the priority is smaller than \\\"medium\\\".\\n\\n This means a fee of at least %1 per kb is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee)));\n+    l7->setToolTip(tr(\"This label turns red, if any recipient receives an amount smaller than %1.\\n\\n This means a fee of at least %2 is required. \\n\\n Amounts below 0.546 times the minimum relay fee are shown as DUST.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CENT)).arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee)));\n+    l8->setToolTip(tr(\"This label turns red, if the change is smaller than %1.\\n\\n This means a fee of at least %2 is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CENT)).arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee)));\n+    dialog->findChild<QLabel *>(\"labelCoinControlBytesText\")    ->setToolTip(l5->toolTip());\n+    dialog->findChild<QLabel *>(\"labelCoinControlPriorityText\") ->setToolTip(l6->toolTip());\n+    dialog->findChild<QLabel *>(\"labelCoinControlLowOutputText\")->setToolTip(l7->toolTip());\n+    dialog->findChild<QLabel *>(\"labelCoinControlChangeText\")   ->setToolTip(l8->toolTip());\n+\n+    // Insufficient funds\n+    QLabel *label = dialog->findChild<QLabel *>(\"labelCoinControlInsuffFunds\");\n+    if (label)\n+        label->setVisible(nChange < 0);\n+}\n+\n+void CoinControlDialog::updateView()\n+{\n+    bool treeMode = ui->radioTreeMode->isChecked();\n+\n+    ui->treeWidget->clear();\n+    ui->treeWidget->setEnabled(false); // performance, otherwise updateLabels would be called for every checked checkbox\n+    ui->treeWidget->setAlternatingRowColors(!treeMode);\n+    QFlags<Qt::ItemFlag> flgCheckbox=Qt::ItemIsSelectable | Qt::ItemIsEnabled | Qt::ItemIsUserCheckable;\n+    QFlags<Qt::ItemFlag> flgTristate=Qt::ItemIsSelectable | Qt::ItemIsEnabled | Qt::ItemIsUserCheckable | Qt::ItemIsTristate;\n+\n+    int nDisplayUnit = BitcoinUnits::BTC;\n+    if (model && model->getOptionsModel())\n+        nDisplayUnit = model->getOptionsModel()->getDisplayUnit();\n+\n+    map<QString, vector<COutput> > mapCoins;\n+    model->listCoins(mapCoins);\n+\n+    BOOST_FOREACH(PAIRTYPE(QString, vector<COutput>) coins, mapCoins)\n+    {\n+        QTreeWidgetItem *itemWalletAddress = new QTreeWidgetItem();\n+        QString sWalletAddress = coins.first;\n+        QString sWalletLabel = \"\";\n+        if (model->getAddressTableModel())\n+            sWalletLabel = model->getAddressTableModel()->labelForAddress(sWalletAddress);\n+        if (sWalletLabel.length() == 0)\n+            sWalletLabel = tr(\"(no label)\");\n+\n+        if (treeMode)\n+        {\n+            // wallet address\n+            ui->treeWidget->addTopLevelItem(itemWalletAddress);\n+\n+            itemWalletAddress->setFlags(flgTristate);\n+            itemWalletAddress->setCheckState(COLUMN_CHECKBOX,Qt::Unchecked);\n+\n+            for (int i = 0; i < ui->treeWidget->columnCount(); i++)\n+                itemWalletAddress->setBackground(i, QColor(248, 247, 246));\n+\n+            // label\n+            itemWalletAddress->setText(COLUMN_LABEL, sWalletLabel);\n+\n+            // address\n+            itemWalletAddress->setText(COLUMN_ADDRESS, sWalletAddress);\n+        }\n+\n+        int64_t nSum = 0;\n+        double dPrioritySum = 0;\n+        int nChildren = 0;\n+        int nInputSum = 0;\n+        BOOST_FOREACH(const COutput& out, coins.second)\n+        {\n+            int nInputSize = 0;\n+            nSum += out.tx->vout[out.i].nValue;\n+            nChildren++;\n+\n+            QTreeWidgetItem *itemOutput;\n+            if (treeMode)    itemOutput = new QTreeWidgetItem(itemWalletAddress);\n+            else             itemOutput = new QTreeWidgetItem(ui->treeWidget);\n+            itemOutput->setFlags(flgCheckbox);\n+            itemOutput->setCheckState(COLUMN_CHECKBOX,Qt::Unchecked);\n+\n+            // address\n+            CTxDestination outputAddress;\n+            QString sAddress = \"\";\n+            if(ExtractDestination(out.tx->vout[out.i].scriptPubKey, outputAddress))\n+            {\n+                sAddress = CBitcoinAddress(outputAddress).ToString().c_str();\n+\n+                // if listMode or change => show bitcoin address. In tree mode, address is not shown again for direct wallet address outputs\n+                if (!treeMode || (!(sAddress == sWalletAddress)))\n+                    itemOutput->setText(COLUMN_ADDRESS, sAddress);\n+\n+                CPubKey pubkey;\n+                CKeyID *keyid = boost::get<CKeyID>(&outputAddress);\n+                if (keyid && model->getPubKey(*keyid, pubkey) && !pubkey.IsCompressed())\n+                    nInputSize = 29; // 29 = 180 - 151 (public key is 180 bytes, priority free area is 151 bytes)\n+            }\n+\n+            // label\n+            if (!(sAddress == sWalletAddress)) // change\n+            {\n+                // tooltip from where the change comes from\n+                itemOutput->setToolTip(COLUMN_LABEL, tr(\"change from %1 (%2)\").arg(sWalletLabel).arg(sWalletAddress));\n+                itemOutput->setText(COLUMN_LABEL, tr(\"(change)\"));\n+            }\n+            else if (!treeMode)\n+            {\n+                QString sLabel = \"\";\n+                if (model->getAddressTableModel())\n+                    sLabel = model->getAddressTableModel()->labelForAddress(sAddress);\n+                if (sLabel.length() == 0)\n+                    sLabel = tr(\"(no label)\");\n+                itemOutput->setText(COLUMN_LABEL, sLabel);\n+            }\n+\n+            // amount\n+            itemOutput->setText(COLUMN_AMOUNT, BitcoinUnits::format(nDisplayUnit, out.tx->vout[out.i].nValue));\n+            itemOutput->setText(COLUMN_AMOUNT_INT64, strPad(QString::number(out.tx->vout[out.i].nValue), 15, \" \")); // padding so that sorting works correctly\n+\n+            // date\n+            itemOutput->setText(COLUMN_DATE, QDateTime::fromTime_t(out.tx->GetTxTime()).toString(\"yy-MM-dd hh:mm\"));\n+\n+            // confirmations\n+            itemOutput->setText(COLUMN_CONFIRMATIONS, strPad(QString::number(out.nDepth), 8, \" \"));\n+\n+            // priority\n+            double dPriority = ((double)out.tx->vout[out.i].nValue  / (nInputSize + 78)) * (out.nDepth+1); // 78 = 2 * 34 + 10\n+            itemOutput->setText(COLUMN_PRIORITY, CoinControlDialog::getPriorityLabel(dPriority));\n+            itemOutput->setText(COLUMN_PRIORITY_INT64, strPad(QString::number((int64_t)dPriority), 20, \" \"));\n+            dPrioritySum += (double)out.tx->vout[out.i].nValue  * (out.nDepth+1);\n+            nInputSum    += nInputSize;\n+\n+            // transaction hash\n+            uint256 txhash = out.tx->GetHash();\n+            itemOutput->setText(COLUMN_TXHASH, txhash.GetHex().c_str());\n+\n+            // vout index\n+            itemOutput->setText(COLUMN_VOUT_INDEX, QString::number(out.i));\n+\n+             // disable locked coins\n+            if (model->isLockedCoin(txhash, out.i))\n+            {\n+                COutPoint outpt(txhash, out.i);\n+                coinControl->UnSelect(outpt); // just to be sure\n+                itemOutput->setDisabled(true);\n+                itemOutput->setIcon(COLUMN_CHECKBOX, QIcon(\":/icons/lock_closed\"));\n+            }\n+\n+            // set checkbox\n+            if (coinControl->IsSelected(txhash, out.i))\n+                itemOutput->setCheckState(COLUMN_CHECKBOX,Qt::Checked);\n+        }\n+\n+        // amount\n+        if (treeMode)\n+        {\n+            dPrioritySum = dPrioritySum / (nInputSum + 78);\n+            itemWalletAddress->setText(COLUMN_CHECKBOX, \"(\" + QString::number(nChildren) + \")\");\n+            itemWalletAddress->setText(COLUMN_AMOUNT, BitcoinUnits::format(nDisplayUnit, nSum));\n+            itemWalletAddress->setText(COLUMN_AMOUNT_INT64, strPad(QString::number(nSum), 15, \" \"));\n+            itemWalletAddress->setText(COLUMN_PRIORITY, CoinControlDialog::getPriorityLabel(dPrioritySum));\n+            itemWalletAddress->setText(COLUMN_PRIORITY_INT64, strPad(QString::number((int64_t)dPrioritySum), 20, \" \"));\n+        }\n+    }\n+\n+    // expand all partially selected\n+    if (treeMode)\n+    {\n+        for (int i = 0; i < ui->treeWidget->topLevelItemCount(); i++)\n+            if (ui->treeWidget->topLevelItem(i)->checkState(COLUMN_CHECKBOX) == Qt::PartiallyChecked)\n+                ui->treeWidget->topLevelItem(i)->setExpanded(true);\n+    }\n+\n+    // sort view\n+    sortView(sortColumn, sortOrder);\n+    ui->treeWidget->setEnabled(true);\n+}"
      },
      {
        "sha": "2674bab4f2785685819ae1968ef1a7ac6dd83f47",
        "filename": "src/qt/coincontroldialog.h",
        "status": "added",
        "additions": 92,
        "deletions": 0,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/coincontroldialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/coincontroldialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.h?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -0,0 +1,92 @@\n+#ifndef COINCONTROLDIALOG_H\n+#define COINCONTROLDIALOG_H\n+\n+#include <QAbstractButton>\n+#include <QAction>\n+#include <QDialog>\n+#include <QList>\n+#include <QMenu>\n+#include <QPoint>\n+#include <QString>\n+#include <QTreeWidgetItem>\n+\n+namespace Ui {\n+    class CoinControlDialog;\n+}\n+class WalletModel;\n+class CCoinControl;\n+\n+class CoinControlDialog : public QDialog\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit CoinControlDialog(QWidget *parent = 0);\n+    ~CoinControlDialog();\n+\n+    void setModel(WalletModel *model);\n+\n+    // static because also called from sendcoinsdialog\n+    static void updateLabels(WalletModel*, QDialog*);\n+    static QString getPriorityLabel(double);\n+\n+    static QList<qint64> payAmounts;\n+    static CCoinControl *coinControl;\n+\n+private:\n+    Ui::CoinControlDialog *ui;\n+    WalletModel *model;\n+    int sortColumn;\n+    Qt::SortOrder sortOrder;\n+\n+    QMenu *contextMenu;\n+    QTreeWidgetItem *contextMenuItem;\n+    QAction *copyTransactionHashAction;\n+    QAction *lockAction;\n+    QAction *unlockAction;\n+\n+    QString strPad(QString, int, QString);\n+    void sortView(int, Qt::SortOrder);\n+    void updateView();\n+\n+    enum\n+    {\n+        COLUMN_CHECKBOX,\n+        COLUMN_AMOUNT,\n+        COLUMN_LABEL,\n+        COLUMN_ADDRESS,\n+        COLUMN_DATE,\n+        COLUMN_CONFIRMATIONS,\n+        COLUMN_PRIORITY,\n+        COLUMN_TXHASH,\n+        COLUMN_VOUT_INDEX,\n+        COLUMN_AMOUNT_INT64,\n+        COLUMN_PRIORITY_INT64\n+    };\n+\n+private slots:\n+    void showMenu(const QPoint &);\n+    void copyAmount();\n+    void copyLabel();\n+    void copyAddress();\n+    void copyTransactionHash();\n+    void lockCoin();\n+    void unlockCoin();\n+    void clipboardQuantity();\n+    void clipboardAmount();\n+    void clipboardFee();\n+    void clipboardAfterFee();\n+    void clipboardBytes();\n+    void clipboardPriority();\n+    void clipboardLowOutput();\n+    void clipboardChange();\n+    void radioTreeMode(bool);\n+    void radioListMode(bool);\n+    void viewItemChanged(QTreeWidgetItem*, int);\n+    void headerSectionClicked(int);\n+    void buttonBoxClicked(QAbstractButton*);\n+    void buttonSelectAllClicked();\n+    void updateLabelLocked();\n+};\n+\n+#endif // COINCONTROLDIALOG_H"
      },
      {
        "sha": "aa75a49ae699ae9f573445c911e591afba5c759e",
        "filename": "src/qt/coincontroltreewidget.cpp",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/coincontroltreewidget.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/coincontroltreewidget.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroltreewidget.cpp?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -0,0 +1,28 @@\n+#include \"coincontroltreewidget.h\"\n+#include \"coincontroldialog.h\"\n+\n+CoinControlTreeWidget::CoinControlTreeWidget(QWidget *parent) :\n+    QTreeWidget(parent)\n+{\n+\n+}\n+\n+void CoinControlTreeWidget::keyPressEvent(QKeyEvent *event)\n+{\n+    if (event->key() == Qt::Key_Space) // press spacebar -> select checkbox\n+    {\n+        event->ignore();\n+        int COLUMN_CHECKBOX = 0;\n+        this->currentItem()->setCheckState(COLUMN_CHECKBOX, ((this->currentItem()->checkState(COLUMN_CHECKBOX) == Qt::Checked) ? Qt::Unchecked : Qt::Checked));\n+    }\n+    else if (event->key() == Qt::Key_Escape) // press esc -> close dialog\n+    {\n+        event->ignore();\n+        CoinControlDialog *coinControlDialog = (CoinControlDialog*)this->parentWidget();\n+        coinControlDialog->done(QDialog::Accepted);\n+    }\n+    else\n+    {\n+        this->QTreeWidget::keyPressEvent(event);\n+    }\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "e55b98af68f7dfdb1535b4f7b2ce71874bb1b39e",
        "filename": "src/qt/coincontroltreewidget.h",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/coincontroltreewidget.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/coincontroltreewidget.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroltreewidget.h?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -0,0 +1,17 @@\n+#ifndef COINCONTROLTREEWIDGET_H\n+#define COINCONTROLTREEWIDGET_H\n+\n+#include <QKeyEvent>\n+#include <QTreeWidget>\n+\n+class CoinControlTreeWidget : public QTreeWidget {\n+Q_OBJECT\n+\n+public:\n+    explicit CoinControlTreeWidget(QWidget *parent = 0);\n+\n+protected:\n+  virtual void  keyPressEvent(QKeyEvent *event);\n+};\n+\n+#endif // COINCONTROLTREEWIDGET_H\n\\ No newline at end of file"
      },
      {
        "sha": "58f6557fa5ccc8ad5a68016ea274071c2ecc9fe3",
        "filename": "src/qt/forms/coincontroldialog.ui",
        "status": "added",
        "additions": 556,
        "deletions": 0,
        "changes": 556,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/forms/coincontroldialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/forms/coincontroldialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/coincontroldialog.ui?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -0,0 +1,556 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<ui version=\"4.0\">\n+ <class>CoinControlDialog</class>\n+ <widget class=\"QDialog\" name=\"CoinControlDialog\">\n+  <property name=\"geometry\">\n+   <rect>\n+    <x>0</x>\n+    <y>0</y>\n+    <width>1000</width>\n+    <height>500</height>\n+   </rect>\n+  </property>\n+  <property name=\"windowTitle\">\n+   <string>Coin Control</string>\n+  </property>\n+  <layout class=\"QVBoxLayout\" name=\"verticalLayout\">\n+   <item>\n+    <layout class=\"QHBoxLayout\" name=\"horizontalLayoutTop\" stretch=\"0,0,0,0\">\n+     <property name=\"topMargin\">\n+      <number>0</number>\n+     </property>\n+     <property name=\"bottomMargin\">\n+      <number>10</number>\n+     </property>\n+     <item>\n+      <layout class=\"QFormLayout\" name=\"formLayoutCoinControl1\">\n+       <property name=\"horizontalSpacing\">\n+        <number>10</number>\n+       </property>\n+       <property name=\"verticalSpacing\">\n+        <number>10</number>\n+       </property>\n+       <property name=\"leftMargin\">\n+        <number>6</number>\n+       </property>\n+       <property name=\"rightMargin\">\n+        <number>6</number>\n+       </property>\n+       <item row=\"0\" column=\"0\">\n+        <widget class=\"QLabel\" name=\"labelCoinControlQuantityText\">\n+         <property name=\"styleSheet\">\n+          <string notr=\"true\">font-weight:bold;</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>Quantity:</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"0\" column=\"1\">\n+        <widget class=\"QLabel\" name=\"labelCoinControlQuantity\">\n+         <property name=\"font\">\n+          <font>\n+           <family>Monospace</family>\n+           <pointsize>10</pointsize>\n+          </font>\n+         </property>\n+         <property name=\"cursor\">\n+          <cursorShape>IBeamCursor</cursorShape>\n+         </property>\n+         <property name=\"contextMenuPolicy\">\n+          <enum>Qt::ActionsContextMenu</enum>\n+         </property>\n+         <property name=\"text\">\n+          <string notr=\"true\">0</string>\n+         </property>\n+         <property name=\"textInteractionFlags\">\n+          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"1\" column=\"0\">\n+        <widget class=\"QLabel\" name=\"labelCoinControlBytesText\">\n+         <property name=\"styleSheet\">\n+          <string notr=\"true\">font-weight:bold;</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>Bytes:</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"1\" column=\"1\">\n+        <widget class=\"QLabel\" name=\"labelCoinControlBytes\">\n+         <property name=\"font\">\n+          <font>\n+           <family>Monospace</family>\n+           <pointsize>10</pointsize>\n+          </font>\n+         </property>\n+         <property name=\"cursor\">\n+          <cursorShape>IBeamCursor</cursorShape>\n+         </property>\n+         <property name=\"contextMenuPolicy\">\n+          <enum>Qt::ActionsContextMenu</enum>\n+         </property>\n+         <property name=\"text\">\n+          <string notr=\"true\">0</string>\n+         </property>\n+         <property name=\"textInteractionFlags\">\n+          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+         </property>\n+        </widget>\n+       </item>\n+      </layout>\n+     </item>\n+     <item>\n+      <layout class=\"QFormLayout\" name=\"formLayoutCoinControl2\">\n+       <property name=\"horizontalSpacing\">\n+        <number>10</number>\n+       </property>\n+       <property name=\"verticalSpacing\">\n+        <number>10</number>\n+       </property>\n+       <property name=\"leftMargin\">\n+        <number>6</number>\n+       </property>\n+       <property name=\"rightMargin\">\n+        <number>6</number>\n+       </property>\n+       <item row=\"0\" column=\"0\">\n+        <widget class=\"QLabel\" name=\"labelCoinControlAmountText\">\n+         <property name=\"styleSheet\">\n+          <string notr=\"true\">font-weight:bold;</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>Amount:</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"0\" column=\"1\">\n+        <widget class=\"QLabel\" name=\"labelCoinControlAmount\">\n+         <property name=\"font\">\n+          <font>\n+           <family>Monospace</family>\n+           <pointsize>10</pointsize>\n+          </font>\n+         </property>\n+         <property name=\"cursor\">\n+          <cursorShape>IBeamCursor</cursorShape>\n+         </property>\n+         <property name=\"contextMenuPolicy\">\n+          <enum>Qt::ActionsContextMenu</enum>\n+         </property>\n+         <property name=\"text\">\n+          <string notr=\"true\">0.00 BTC</string>\n+         </property>\n+         <property name=\"textInteractionFlags\">\n+          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"1\" column=\"0\">\n+        <widget class=\"QLabel\" name=\"labelCoinControlPriorityText\">\n+         <property name=\"styleSheet\">\n+          <string notr=\"true\">font-weight:bold;</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>Priority:</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"1\" column=\"1\">\n+        <widget class=\"QLabel\" name=\"labelCoinControlPriority\">\n+         <property name=\"font\">\n+          <font>\n+           <family>Monospace</family>\n+           <pointsize>10</pointsize>\n+          </font>\n+         </property>\n+         <property name=\"cursor\">\n+          <cursorShape>IBeamCursor</cursorShape>\n+         </property>\n+         <property name=\"contextMenuPolicy\">\n+          <enum>Qt::ActionsContextMenu</enum>\n+         </property>\n+         <property name=\"text\">\n+          <string/>\n+         </property>\n+         <property name=\"textInteractionFlags\">\n+          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+         </property>\n+        </widget>\n+       </item>\n+      </layout>\n+     </item>\n+     <item>\n+      <layout class=\"QFormLayout\" name=\"formLayoutCoinControl3\">\n+       <property name=\"horizontalSpacing\">\n+        <number>10</number>\n+       </property>\n+       <property name=\"verticalSpacing\">\n+        <number>10</number>\n+       </property>\n+       <property name=\"leftMargin\">\n+        <number>6</number>\n+       </property>\n+       <property name=\"rightMargin\">\n+        <number>6</number>\n+       </property>\n+       <item row=\"0\" column=\"0\">\n+        <widget class=\"QLabel\" name=\"labelCoinControlFeeText\">\n+         <property name=\"styleSheet\">\n+          <string notr=\"true\">font-weight:bold;</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>Fee:</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"0\" column=\"1\">\n+        <widget class=\"QLabel\" name=\"labelCoinControlFee\">\n+         <property name=\"font\">\n+          <font>\n+           <family>Monospace</family>\n+           <pointsize>10</pointsize>\n+          </font>\n+         </property>\n+         <property name=\"cursor\">\n+          <cursorShape>IBeamCursor</cursorShape>\n+         </property>\n+         <property name=\"contextMenuPolicy\">\n+          <enum>Qt::ActionsContextMenu</enum>\n+         </property>\n+         <property name=\"text\">\n+          <string notr=\"true\">0.00 BTC</string>\n+         </property>\n+         <property name=\"textInteractionFlags\">\n+          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"1\" column=\"0\">\n+        <widget class=\"QLabel\" name=\"labelCoinControlLowOutputText\">\n+         <property name=\"enabled\">\n+          <bool>false</bool>\n+         </property>\n+         <property name=\"styleSheet\">\n+          <string notr=\"true\">font-weight:bold;</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>Low Output:</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"1\" column=\"1\">\n+        <widget class=\"QLabel\" name=\"labelCoinControlLowOutput\">\n+         <property name=\"enabled\">\n+          <bool>false</bool>\n+         </property>\n+         <property name=\"font\">\n+          <font>\n+           <family>Monospace</family>\n+           <pointsize>10</pointsize>\n+          </font>\n+         </property>\n+         <property name=\"cursor\">\n+          <cursorShape>IBeamCursor</cursorShape>\n+         </property>\n+         <property name=\"contextMenuPolicy\">\n+          <enum>Qt::ActionsContextMenu</enum>\n+         </property>\n+         <property name=\"text\">\n+          <string>no</string>\n+         </property>\n+         <property name=\"textInteractionFlags\">\n+          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+         </property>\n+        </widget>\n+       </item>\n+      </layout>\n+     </item>\n+     <item>\n+      <layout class=\"QFormLayout\" name=\"formLayoutCoinControl4\">\n+       <property name=\"horizontalSpacing\">\n+        <number>10</number>\n+       </property>\n+       <property name=\"verticalSpacing\">\n+        <number>10</number>\n+       </property>\n+       <property name=\"leftMargin\">\n+        <number>6</number>\n+       </property>\n+       <property name=\"rightMargin\">\n+        <number>6</number>\n+       </property>\n+       <item row=\"0\" column=\"0\">\n+        <widget class=\"QLabel\" name=\"labelCoinControlAfterFeeText\">\n+         <property name=\"styleSheet\">\n+          <string notr=\"true\">font-weight:bold;</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>After Fee:</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"0\" column=\"1\">\n+        <widget class=\"QLabel\" name=\"labelCoinControlAfterFee\">\n+         <property name=\"font\">\n+          <font>\n+           <family>Monospace</family>\n+           <pointsize>10</pointsize>\n+          </font>\n+         </property>\n+         <property name=\"cursor\">\n+          <cursorShape>IBeamCursor</cursorShape>\n+         </property>\n+         <property name=\"contextMenuPolicy\">\n+          <enum>Qt::ActionsContextMenu</enum>\n+         </property>\n+         <property name=\"text\">\n+          <string notr=\"true\">0.00 BTC</string>\n+         </property>\n+         <property name=\"textInteractionFlags\">\n+          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"1\" column=\"0\">\n+        <widget class=\"QLabel\" name=\"labelCoinControlChangeText\">\n+         <property name=\"enabled\">\n+          <bool>false</bool>\n+         </property>\n+         <property name=\"styleSheet\">\n+          <string notr=\"true\">font-weight:bold;</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>Change:</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"1\" column=\"1\">\n+        <widget class=\"QLabel\" name=\"labelCoinControlChange\">\n+         <property name=\"enabled\">\n+          <bool>false</bool>\n+         </property>\n+         <property name=\"font\">\n+          <font>\n+           <family>Monospace</family>\n+           <pointsize>10</pointsize>\n+          </font>\n+         </property>\n+         <property name=\"cursor\">\n+          <cursorShape>IBeamCursor</cursorShape>\n+         </property>\n+         <property name=\"contextMenuPolicy\">\n+          <enum>Qt::ActionsContextMenu</enum>\n+         </property>\n+         <property name=\"text\">\n+          <string notr=\"true\">0.00 BTC</string>\n+         </property>\n+         <property name=\"textInteractionFlags\">\n+          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+         </property>\n+        </widget>\n+       </item>\n+      </layout>\n+     </item>\n+    </layout>\n+   </item>\n+   <item>\n+    <widget class=\"QFrame\" name=\"frame\">\n+     <property name=\"minimumSize\">\n+      <size>\n+       <width>0</width>\n+       <height>40</height>\n+      </size>\n+     </property>\n+     <property name=\"frameShape\">\n+      <enum>QFrame::StyledPanel</enum>\n+     </property>\n+     <property name=\"frameShadow\">\n+      <enum>QFrame::Sunken</enum>\n+     </property>\n+     <widget class=\"QWidget\" name=\"horizontalLayoutWidget\">\n+      <property name=\"geometry\">\n+       <rect>\n+        <x>10</x>\n+        <y>0</y>\n+        <width>781</width>\n+        <height>41</height>\n+       </rect>\n+      </property>\n+      <layout class=\"QHBoxLayout\" name=\"horizontalLayoutPanel\" stretch=\"0,0,0,0,0\">\n+       <property name=\"spacing\">\n+        <number>14</number>\n+       </property>\n+       <item>\n+        <widget class=\"QPushButton\" name=\"pushButtonSelectAll\">\n+         <property name=\"sizePolicy\">\n+          <sizepolicy hsizetype=\"Maximum\" vsizetype=\"Fixed\">\n+           <horstretch>0</horstretch>\n+           <verstretch>0</verstretch>\n+          </sizepolicy>\n+         </property>\n+         <property name=\"text\">\n+          <string>(un)select all</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <widget class=\"QRadioButton\" name=\"radioTreeMode\">\n+         <property name=\"sizePolicy\">\n+          <sizepolicy hsizetype=\"Maximum\" vsizetype=\"Fixed\">\n+           <horstretch>0</horstretch>\n+           <verstretch>0</verstretch>\n+          </sizepolicy>\n+         </property>\n+         <property name=\"text\">\n+          <string>Tree mode</string>\n+         </property>\n+         <property name=\"checked\">\n+          <bool>true</bool>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <widget class=\"QRadioButton\" name=\"radioListMode\">\n+         <property name=\"sizePolicy\">\n+          <sizepolicy hsizetype=\"Maximum\" vsizetype=\"Fixed\">\n+           <horstretch>0</horstretch>\n+           <verstretch>0</verstretch>\n+          </sizepolicy>\n+         </property>\n+         <property name=\"text\">\n+          <string>List mode</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <widget class=\"QLabel\" name=\"labelLocked\">\n+         <property name=\"text\">\n+          <string>(1 locked)</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <spacer name=\"horizontalSpacer\">\n+         <property name=\"orientation\">\n+          <enum>Qt::Horizontal</enum>\n+         </property>\n+         <property name=\"sizeHint\" stdset=\"0\">\n+          <size>\n+           <width>40</width>\n+           <height>20</height>\n+          </size>\n+         </property>\n+        </spacer>\n+       </item>\n+      </layout>\n+     </widget>\n+    </widget>\n+   </item>\n+   <item>\n+    <widget class=\"CoinControlTreeWidget\" name=\"treeWidget\">\n+     <property name=\"contextMenuPolicy\">\n+      <enum>Qt::CustomContextMenu</enum>\n+     </property>\n+     <property name=\"sortingEnabled\">\n+      <bool>false</bool>\n+     </property>\n+     <property name=\"columnCount\">\n+      <number>11</number>\n+     </property>\n+     <attribute name=\"headerShowSortIndicator\" stdset=\"0\">\n+      <bool>true</bool>\n+     </attribute>\n+     <attribute name=\"headerStretchLastSection\">\n+      <bool>false</bool>\n+     </attribute>\n+     <column>\n+      <property name=\"text\">\n+       <string/>\n+      </property>\n+     </column>\n+     <column>\n+      <property name=\"text\">\n+       <string>Amount</string>\n+      </property>\n+     </column>\n+     <column>\n+      <property name=\"text\">\n+       <string notr=\"true\">Label</string>\n+      </property>\n+     </column>\n+     <column>\n+      <property name=\"text\">\n+       <string>Address</string>\n+      </property>\n+     </column>\n+     <column>\n+      <property name=\"text\">\n+       <string>Date</string>\n+      </property>\n+     </column>\n+     <column>\n+      <property name=\"text\">\n+       <string>Confirmations</string>\n+      </property>\n+      <property name=\"toolTip\">\n+       <string>Confirmed</string>\n+      </property>\n+     </column>\n+     <column>\n+      <property name=\"text\">\n+       <string>Priority</string>\n+      </property>\n+     </column>\n+     <column>\n+      <property name=\"text\">\n+       <string/>\n+      </property>\n+     </column>\n+     <column>\n+      <property name=\"text\">\n+       <string/>\n+      </property>\n+     </column>\n+     <column>\n+      <property name=\"text\">\n+       <string/>\n+      </property>\n+     </column>\n+     <column>\n+      <property name=\"text\">\n+       <string/>\n+      </property>\n+     </column>\n+    </widget>\n+   </item>\n+   <item>\n+    <widget class=\"QDialogButtonBox\" name=\"buttonBox\">\n+     <property name=\"sizePolicy\">\n+      <sizepolicy hsizetype=\"Maximum\" vsizetype=\"Fixed\">\n+       <horstretch>0</horstretch>\n+       <verstretch>0</verstretch>\n+      </sizepolicy>\n+     </property>\n+     <property name=\"orientation\">\n+      <enum>Qt::Horizontal</enum>\n+     </property>\n+     <property name=\"standardButtons\">\n+      <set>QDialogButtonBox::Ok</set>\n+     </property>\n+    </widget>\n+   </item>\n+  </layout>\n+ </widget>\n+ <customwidgets>\n+  <customwidget>\n+   <class>CoinControlTreeWidget</class>\n+   <extends>QTreeWidget</extends>\n+   <header>coincontroltreewidget.h</header>\n+  </customwidget>\n+ </customwidgets>\n+ <resources/>\n+ <connections/>\n+</ui>"
      },
      {
        "sha": "90d720b0894b057fca804b60960c5130a347e6f9",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -363,6 +363,16 @@\n          </property>\n         </widget>\n        </item>\n+       <item>\n+        <widget class=\"QCheckBox\" name=\"coinControlFeatures\">\n+         <property name=\"toolTip\">\n+          <string>Whether to show coin control features or not.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>Display coin &amp;control features (experts only!)</string>\n+         </property>\n+        </widget>\n+       </item>\n        <item>\n         <spacer name=\"verticalSpacer_Display\">\n          <property name=\"orientation\">"
      },
      {
        "sha": "790d5d6c396127aa7e0d21bab3e4e3fc40d04bb6",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 605,
        "deletions": 4,
        "changes": 609,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -6,14 +6,615 @@\n    <rect>\n     <x>0</x>\n     <y>0</y>\n-    <width>686</width>\n-    <height>217</height>\n+    <width>850</width>\n+    <height>400</height>\n    </rect>\n   </property>\n   <property name=\"windowTitle\">\n    <string>Send Coins</string>\n   </property>\n-  <layout class=\"QVBoxLayout\" name=\"verticalLayout\">\n+  <layout class=\"QVBoxLayout\" name=\"verticalLayout\" stretch=\"0,1,0\">\n+   <property name=\"bottomMargin\">\n+    <number>8</number>\n+   </property>\n+   <item>\n+    <widget class=\"QFrame\" name=\"frameCoinControl\">\n+     <property name=\"sizePolicy\">\n+      <sizepolicy hsizetype=\"Expanding\" vsizetype=\"Expanding\">\n+       <horstretch>0</horstretch>\n+       <verstretch>0</verstretch>\n+      </sizepolicy>\n+     </property>\n+     <property name=\"maximumSize\">\n+      <size>\n+       <width>16777215</width>\n+       <height>16777215</height>\n+      </size>\n+     </property>\n+     <property name=\"frameShape\">\n+      <enum>QFrame::StyledPanel</enum>\n+     </property>\n+     <property name=\"frameShadow\">\n+      <enum>QFrame::Sunken</enum>\n+     </property>\n+     <layout class=\"QVBoxLayout\" name=\"verticalLayoutCoinControl2\">\n+      <property name=\"spacing\">\n+       <number>-1</number>\n+      </property>\n+      <property name=\"leftMargin\">\n+       <number>0</number>\n+      </property>\n+      <property name=\"topMargin\">\n+       <number>0</number>\n+      </property>\n+      <property name=\"rightMargin\">\n+       <number>0</number>\n+      </property>\n+      <property name=\"bottomMargin\">\n+       <number>6</number>\n+      </property>\n+      <item>\n+       <layout class=\"QVBoxLayout\" name=\"verticalLayoutCoinControl\" stretch=\"0,0,0,0,1\">\n+        <property name=\"spacing\">\n+         <number>0</number>\n+        </property>\n+        <property name=\"leftMargin\">\n+         <number>10</number>\n+        </property>\n+        <property name=\"topMargin\">\n+         <number>10</number>\n+        </property>\n+        <item>\n+         <layout class=\"QHBoxLayout\" name=\"horizontalLayoutCoinControl1\">\n+          <property name=\"bottomMargin\">\n+           <number>15</number>\n+          </property>\n+          <item>\n+           <widget class=\"QLabel\" name=\"labelCoinControlFeatures\">\n+            <property name=\"sizePolicy\">\n+             <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Maximum\">\n+              <horstretch>0</horstretch>\n+              <verstretch>0</verstretch>\n+             </sizepolicy>\n+            </property>\n+            <property name=\"font\">\n+             <font>\n+              <weight>75</weight>\n+              <bold>true</bold>\n+             </font>\n+            </property>\n+            <property name=\"styleSheet\">\n+             <string notr=\"true\">font-weight:bold;</string>\n+            </property>\n+            <property name=\"text\">\n+             <string>Coin Control Features</string>\n+            </property>\n+           </widget>\n+          </item>\n+         </layout>\n+        </item>\n+        <item>\n+         <layout class=\"QHBoxLayout\" name=\"horizontalLayoutCoinControl2\" stretch=\"0,0,0,0\">\n+          <property name=\"spacing\">\n+           <number>8</number>\n+          </property>\n+          <property name=\"bottomMargin\">\n+           <number>10</number>\n+          </property>\n+          <item>\n+           <widget class=\"QPushButton\" name=\"pushButtonCoinControl\">\n+            <property name=\"styleSheet\">\n+             <string notr=\"true\"/>\n+            </property>\n+            <property name=\"text\">\n+             <string>Inputs...</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item>\n+           <widget class=\"QLabel\" name=\"labelCoinControlAutomaticallySelected\">\n+            <property name=\"text\">\n+             <string>automatically selected</string>\n+            </property>\n+            <property name=\"margin\">\n+             <number>5</number>\n+            </property>\n+           </widget>\n+          </item>\n+          <item>\n+           <widget class=\"QLabel\" name=\"labelCoinControlInsuffFunds\">\n+            <property name=\"font\">\n+             <font>\n+              <weight>75</weight>\n+              <bold>true</bold>\n+             </font>\n+            </property>\n+            <property name=\"styleSheet\">\n+             <string notr=\"true\">color:red;font-weight:bold;</string>\n+            </property>\n+            <property name=\"text\">\n+             <string>Insufficient funds!</string>\n+            </property>\n+            <property name=\"margin\">\n+             <number>5</number>\n+            </property>\n+           </widget>\n+          </item>\n+          <item>\n+           <spacer name=\"horizontalSpacerCoinControl\">\n+            <property name=\"orientation\">\n+             <enum>Qt::Horizontal</enum>\n+            </property>\n+            <property name=\"sizeHint\" stdset=\"0\">\n+             <size>\n+              <width>40</width>\n+              <height>1</height>\n+             </size>\n+            </property>\n+           </spacer>\n+          </item>\n+         </layout>\n+        </item>\n+        <item>\n+         <widget class=\"QWidget\" name=\"widgetCoinControl\" native=\"true\">\n+          <property name=\"sizePolicy\">\n+           <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Preferred\">\n+            <horstretch>0</horstretch>\n+            <verstretch>0</verstretch>\n+           </sizepolicy>\n+          </property>\n+          <property name=\"minimumSize\">\n+           <size>\n+            <width>0</width>\n+            <height>0</height>\n+           </size>\n+          </property>\n+          <property name=\"styleSheet\">\n+           <string notr=\"true\"/>\n+          </property>\n+          <layout class=\"QHBoxLayout\" name=\"horizontalLayoutCoinControl5\">\n+           <property name=\"margin\">\n+            <number>0</number>\n+           </property>\n+           <item>\n+            <layout class=\"QHBoxLayout\" name=\"horizontalLayoutCoinControl3\" stretch=\"0,0,0,1\">\n+             <property name=\"spacing\">\n+              <number>20</number>\n+             </property>\n+             <property name=\"topMargin\">\n+              <number>0</number>\n+             </property>\n+             <property name=\"bottomMargin\">\n+              <number>10</number>\n+             </property>\n+             <item>\n+              <layout class=\"QFormLayout\" name=\"formLayoutCoinControl1\">\n+               <property name=\"horizontalSpacing\">\n+                <number>10</number>\n+               </property>\n+               <property name=\"verticalSpacing\">\n+                <number>14</number>\n+               </property>\n+               <property name=\"leftMargin\">\n+                <number>10</number>\n+               </property>\n+               <property name=\"topMargin\">\n+                <number>4</number>\n+               </property>\n+               <property name=\"rightMargin\">\n+                <number>6</number>\n+               </property>\n+               <item row=\"0\" column=\"0\">\n+                <widget class=\"QLabel\" name=\"labelCoinControlQuantityText\">\n+                 <property name=\"styleSheet\">\n+                  <string notr=\"true\">font-weight:bold;</string>\n+                 </property>\n+                 <property name=\"text\">\n+                  <string>Quantity:</string>\n+                 </property>\n+                 <property name=\"margin\">\n+                  <number>0</number>\n+                 </property>\n+                </widget>\n+               </item>\n+               <item row=\"0\" column=\"1\">\n+                <widget class=\"QLabel\" name=\"labelCoinControlQuantity\">\n+                 <property name=\"font\">\n+                  <font>\n+                   <family>Monospace</family>\n+                   <pointsize>10</pointsize>\n+                  </font>\n+                 </property>\n+                 <property name=\"cursor\">\n+                  <cursorShape>IBeamCursor</cursorShape>\n+                 </property>\n+                 <property name=\"contextMenuPolicy\">\n+                  <enum>Qt::ActionsContextMenu</enum>\n+                 </property>\n+                 <property name=\"text\">\n+                  <string notr=\"true\">0</string>\n+                 </property>\n+                 <property name=\"margin\">\n+                  <number>0</number>\n+                 </property>\n+                 <property name=\"textInteractionFlags\">\n+                  <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+                 </property>\n+                </widget>\n+               </item>\n+               <item row=\"1\" column=\"0\">\n+                <widget class=\"QLabel\" name=\"labelCoinControlBytesText\">\n+                 <property name=\"styleSheet\">\n+                  <string notr=\"true\">font-weight:bold;</string>\n+                 </property>\n+                 <property name=\"text\">\n+                  <string>Bytes:</string>\n+                 </property>\n+                </widget>\n+               </item>\n+               <item row=\"1\" column=\"1\">\n+                <widget class=\"QLabel\" name=\"labelCoinControlBytes\">\n+                 <property name=\"font\">\n+                  <font>\n+                   <family>Monospace</family>\n+                   <pointsize>10</pointsize>\n+                  </font>\n+                 </property>\n+                 <property name=\"cursor\">\n+                  <cursorShape>IBeamCursor</cursorShape>\n+                 </property>\n+                 <property name=\"contextMenuPolicy\">\n+                  <enum>Qt::ActionsContextMenu</enum>\n+                 </property>\n+                 <property name=\"text\">\n+                  <string notr=\"true\">0</string>\n+                 </property>\n+                 <property name=\"textInteractionFlags\">\n+                  <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+                 </property>\n+                </widget>\n+               </item>\n+              </layout>\n+             </item>\n+             <item>\n+              <layout class=\"QFormLayout\" name=\"formLayoutCoinControl2\">\n+               <property name=\"horizontalSpacing\">\n+                <number>10</number>\n+               </property>\n+               <property name=\"verticalSpacing\">\n+                <number>14</number>\n+               </property>\n+               <property name=\"leftMargin\">\n+                <number>6</number>\n+               </property>\n+               <property name=\"topMargin\">\n+                <number>4</number>\n+               </property>\n+               <property name=\"rightMargin\">\n+                <number>6</number>\n+               </property>\n+               <item row=\"0\" column=\"0\">\n+                <widget class=\"QLabel\" name=\"labelCoinControlAmountText\">\n+                 <property name=\"styleSheet\">\n+                  <string notr=\"true\">font-weight:bold;</string>\n+                 </property>\n+                 <property name=\"text\">\n+                  <string>Amount:</string>\n+                 </property>\n+                 <property name=\"margin\">\n+                  <number>0</number>\n+                 </property>\n+                </widget>\n+               </item>\n+               <item row=\"0\" column=\"1\">\n+                <widget class=\"QLabel\" name=\"labelCoinControlAmount\">\n+                 <property name=\"font\">\n+                  <font>\n+                   <family>Monospace</family>\n+                   <pointsize>10</pointsize>\n+                  </font>\n+                 </property>\n+                 <property name=\"cursor\">\n+                  <cursorShape>IBeamCursor</cursorShape>\n+                 </property>\n+                 <property name=\"contextMenuPolicy\">\n+                  <enum>Qt::ActionsContextMenu</enum>\n+                 </property>\n+                 <property name=\"text\">\n+                  <string notr=\"true\">0.00 BTC</string>\n+                 </property>\n+                 <property name=\"textInteractionFlags\">\n+                  <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+                 </property>\n+                </widget>\n+               </item>\n+               <item row=\"1\" column=\"0\">\n+                <widget class=\"QLabel\" name=\"labelCoinControlPriorityText\">\n+                 <property name=\"styleSheet\">\n+                  <string notr=\"true\">font-weight:bold;</string>\n+                 </property>\n+                 <property name=\"text\">\n+                  <string>Priority:</string>\n+                 </property>\n+                </widget>\n+               </item>\n+               <item row=\"1\" column=\"1\">\n+                <widget class=\"QLabel\" name=\"labelCoinControlPriority\">\n+                 <property name=\"font\">\n+                  <font>\n+                   <family>Monospace</family>\n+                   <pointsize>10</pointsize>\n+                  </font>\n+                 </property>\n+                 <property name=\"cursor\">\n+                  <cursorShape>IBeamCursor</cursorShape>\n+                 </property>\n+                 <property name=\"contextMenuPolicy\">\n+                  <enum>Qt::ActionsContextMenu</enum>\n+                 </property>\n+                 <property name=\"text\">\n+                  <string>medium</string>\n+                 </property>\n+                 <property name=\"textInteractionFlags\">\n+                  <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+                 </property>\n+                </widget>\n+               </item>\n+              </layout>\n+             </item>\n+             <item>\n+              <layout class=\"QFormLayout\" name=\"formLayoutCoinControl3\">\n+               <property name=\"horizontalSpacing\">\n+                <number>10</number>\n+               </property>\n+               <property name=\"verticalSpacing\">\n+                <number>14</number>\n+               </property>\n+               <property name=\"leftMargin\">\n+                <number>6</number>\n+               </property>\n+               <property name=\"topMargin\">\n+                <number>4</number>\n+               </property>\n+               <property name=\"rightMargin\">\n+                <number>6</number>\n+               </property>\n+               <item row=\"0\" column=\"0\">\n+                <widget class=\"QLabel\" name=\"labelCoinControlFeeText\">\n+                 <property name=\"styleSheet\">\n+                  <string notr=\"true\">font-weight:bold;</string>\n+                 </property>\n+                 <property name=\"text\">\n+                  <string>Fee:</string>\n+                 </property>\n+                 <property name=\"margin\">\n+                  <number>0</number>\n+                 </property>\n+                </widget>\n+               </item>\n+               <item row=\"0\" column=\"1\">\n+                <widget class=\"QLabel\" name=\"labelCoinControlFee\">\n+                 <property name=\"font\">\n+                  <font>\n+                   <family>Monospace</family>\n+                   <pointsize>10</pointsize>\n+                  </font>\n+                 </property>\n+                 <property name=\"cursor\">\n+                  <cursorShape>IBeamCursor</cursorShape>\n+                 </property>\n+                 <property name=\"contextMenuPolicy\">\n+                  <enum>Qt::ActionsContextMenu</enum>\n+                 </property>\n+                 <property name=\"text\">\n+                  <string notr=\"true\">0.00 BTC</string>\n+                 </property>\n+                 <property name=\"textInteractionFlags\">\n+                  <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+                 </property>\n+                </widget>\n+               </item>\n+               <item row=\"1\" column=\"0\">\n+                <widget class=\"QLabel\" name=\"labelCoinControlLowOutputText\">\n+                 <property name=\"styleSheet\">\n+                  <string notr=\"true\">font-weight:bold;</string>\n+                 </property>\n+                 <property name=\"text\">\n+                  <string>Low Output:</string>\n+                 </property>\n+                </widget>\n+               </item>\n+               <item row=\"1\" column=\"1\">\n+                <widget class=\"QLabel\" name=\"labelCoinControlLowOutput\">\n+                 <property name=\"font\">\n+                  <font>\n+                   <family>Monospace</family>\n+                   <pointsize>10</pointsize>\n+                  </font>\n+                 </property>\n+                 <property name=\"cursor\">\n+                  <cursorShape>IBeamCursor</cursorShape>\n+                 </property>\n+                 <property name=\"contextMenuPolicy\">\n+                  <enum>Qt::ActionsContextMenu</enum>\n+                 </property>\n+                 <property name=\"text\">\n+                  <string>no</string>\n+                 </property>\n+                 <property name=\"textInteractionFlags\">\n+                  <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+                 </property>\n+                </widget>\n+               </item>\n+              </layout>\n+             </item>\n+             <item>\n+              <layout class=\"QFormLayout\" name=\"formLayoutCoinControl4\">\n+               <property name=\"horizontalSpacing\">\n+                <number>10</number>\n+               </property>\n+               <property name=\"verticalSpacing\">\n+                <number>14</number>\n+               </property>\n+               <property name=\"leftMargin\">\n+                <number>6</number>\n+               </property>\n+               <property name=\"topMargin\">\n+                <number>4</number>\n+               </property>\n+               <property name=\"rightMargin\">\n+                <number>6</number>\n+               </property>\n+               <item row=\"0\" column=\"0\">\n+                <widget class=\"QLabel\" name=\"labelCoinControlAfterFeeText\">\n+                 <property name=\"styleSheet\">\n+                  <string notr=\"true\">font-weight:bold;</string>\n+                 </property>\n+                 <property name=\"text\">\n+                  <string>After Fee:</string>\n+                 </property>\n+                 <property name=\"margin\">\n+                  <number>0</number>\n+                 </property>\n+                </widget>\n+               </item>\n+               <item row=\"0\" column=\"1\">\n+                <widget class=\"QLabel\" name=\"labelCoinControlAfterFee\">\n+                 <property name=\"font\">\n+                  <font>\n+                   <family>Monospace</family>\n+                   <pointsize>10</pointsize>\n+                  </font>\n+                 </property>\n+                 <property name=\"cursor\">\n+                  <cursorShape>IBeamCursor</cursorShape>\n+                 </property>\n+                 <property name=\"contextMenuPolicy\">\n+                  <enum>Qt::ActionsContextMenu</enum>\n+                 </property>\n+                 <property name=\"text\">\n+                  <string notr=\"true\">0.00 BTC</string>\n+                 </property>\n+                 <property name=\"textInteractionFlags\">\n+                  <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+                 </property>\n+                </widget>\n+               </item>\n+               <item row=\"1\" column=\"0\">\n+                <widget class=\"QLabel\" name=\"labelCoinControlChangeText\">\n+                 <property name=\"styleSheet\">\n+                  <string notr=\"true\">font-weight:bold;</string>\n+                 </property>\n+                 <property name=\"text\">\n+                  <string>Change:</string>\n+                 </property>\n+                </widget>\n+               </item>\n+               <item row=\"1\" column=\"1\">\n+                <widget class=\"QLabel\" name=\"labelCoinControlChange\">\n+                 <property name=\"font\">\n+                  <font>\n+                   <family>Monospace</family>\n+                   <pointsize>10</pointsize>\n+                  </font>\n+                 </property>\n+                 <property name=\"cursor\">\n+                  <cursorShape>IBeamCursor</cursorShape>\n+                 </property>\n+                 <property name=\"contextMenuPolicy\">\n+                  <enum>Qt::ActionsContextMenu</enum>\n+                 </property>\n+                 <property name=\"text\">\n+                  <string notr=\"true\">0.00 BTC</string>\n+                 </property>\n+                 <property name=\"textInteractionFlags\">\n+                  <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+                 </property>\n+                </widget>\n+               </item>\n+              </layout>\n+             </item>\n+            </layout>\n+           </item>\n+          </layout>\n+         </widget>\n+        </item>\n+        <item>\n+         <layout class=\"QHBoxLayout\" name=\"horizontalLayoutCoinControl4\" stretch=\"0,0,0\">\n+          <property name=\"spacing\">\n+           <number>12</number>\n+          </property>\n+          <property name=\"sizeConstraint\">\n+           <enum>QLayout::SetDefaultConstraint</enum>\n+          </property>\n+          <property name=\"topMargin\">\n+           <number>5</number>\n+          </property>\n+          <property name=\"rightMargin\">\n+           <number>5</number>\n+          </property>\n+          <item>\n+           <widget class=\"QCheckBox\" name=\"checkBoxCoinControlChange\">\n+            <property name=\"text\">\n+             <string>custom change address</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item>\n+           <widget class=\"QLineEdit\" name=\"lineEditCoinControlChange\">\n+            <property name=\"enabled\">\n+             <bool>false</bool>\n+            </property>\n+            <property name=\"sizePolicy\">\n+             <sizepolicy hsizetype=\"Expanding\" vsizetype=\"Fixed\">\n+              <horstretch>0</horstretch>\n+              <verstretch>0</verstretch>\n+             </sizepolicy>\n+            </property>\n+           </widget>\n+          </item>\n+          <item>\n+           <widget class=\"QLabel\" name=\"labelCoinControlChangeLabel\">\n+            <property name=\"sizePolicy\">\n+             <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Expanding\">\n+              <horstretch>0</horstretch>\n+              <verstretch>0</verstretch>\n+             </sizepolicy>\n+            </property>\n+            <property name=\"minimumSize\">\n+             <size>\n+              <width>0</width>\n+              <height>0</height>\n+             </size>\n+            </property>\n+            <property name=\"text\">\n+             <string/>\n+            </property>\n+            <property name=\"margin\">\n+             <number>3</number>\n+            </property>\n+           </widget>\n+          </item>\n+         </layout>\n+        </item>\n+        <item>\n+         <spacer name=\"verticalSpacerCoinControl\">\n+          <property name=\"orientation\">\n+           <enum>Qt::Vertical</enum>\n+          </property>\n+          <property name=\"sizeHint\" stdset=\"0\">\n+           <size>\n+            <width>800</width>\n+            <height>1</height>\n+           </size>\n+          </property>\n+         </spacer>\n+        </item>\n+       </layout>\n+      </item>\n+     </layout>\n+    </widget>\n+   </item>\n    <item>\n     <widget class=\"QScrollArea\" name=\"scrollArea\">\n      <property name=\"widgetResizable\">\n@@ -24,7 +625,7 @@\n        <rect>\n         <x>0</x>\n         <y>0</y>\n-        <width>666</width>\n+        <width>830</width>\n         <height>165</height>\n        </rect>\n       </property>"
      },
      {
        "sha": "bbb3714dfee5af264cd912ef47f8b2dc88b3faf3",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -633,4 +633,10 @@ void HelpMessageBox::showOrPrint()\n #endif\n }\n \n+void setClipboard(const QString& str)\n+{\n+    QApplication::clipboard()->setText(str, QClipboard::Clipboard);\n+    QApplication::clipboard()->setText(str, QClipboard::Selection);\n+}\n+\n } // namespace GUIUtil"
      },
      {
        "sha": "14d4ff17c1db6f3fc0012765790d210cf0f476e7",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -55,6 +55,8 @@ namespace GUIUtil\n      */\n     void copyEntryData(QAbstractItemView *view, int column, int role=Qt::EditRole);\n \n+    void setClipboard(const QString& str);\n+\n     /** Get save filename, mimics QFileDialog::getSaveFileName, except that it appends a default suffix\n         when no suffix is provided by the user.\n "
      },
      {
        "sha": "0a569d16f449e4550616613a4b9b5def76ef0371",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -155,6 +155,7 @@ void OptionsDialog::setMapper()\n     mapper->addMapping(ui->lang, OptionsModel::Language);\n     mapper->addMapping(ui->unit, OptionsModel::DisplayUnit);\n     mapper->addMapping(ui->displayAddresses, OptionsModel::DisplayAddresses);\n+    mapper->addMapping(ui->coinControlFeatures, OptionsModel::CoinControlFeatures);\n }\n \n void OptionsDialog::enableApplyButton()"
      },
      {
        "sha": "bd08a468038926e2b4e8a97c861448a7738a8a06",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -59,6 +59,7 @@ void OptionsModel::Init()\n     fMinimizeOnClose = settings.value(\"fMinimizeOnClose\", false).toBool();\n     nTransactionFee = settings.value(\"nTransactionFee\").toLongLong();\n     language = settings.value(\"language\", \"\").toString();\n+    fCoinControlFeatures = settings.value(\"fCoinControlFeatures\", false).toBool();\n \n     // These are shared with core Bitcoin; we want\n     // command-line options to override the GUI settings:\n@@ -207,6 +208,8 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n             return QVariant(bDisplayAddresses);\n         case Language:\n             return settings.value(\"language\", \"\");\n+        case CoinControlFeatures:\n+            return QVariant(fCoinControlFeatures);\n         default:\n             return QVariant();\n         }\n@@ -275,6 +278,7 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n         case Fee:\n             nTransactionFee = value.toLongLong();\n             settings.setValue(\"nTransactionFee\", (qint64) nTransactionFee);\n+            emit transactionFeeChanged(nTransactionFee);\n             break;\n         case DisplayUnit:\n             nDisplayUnit = value.toInt();\n@@ -288,6 +292,12 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n         case Language:\n             settings.setValue(\"language\", value);\n             break;\n+        case CoinControlFeatures: {\n+            fCoinControlFeatures = value.toBool();\n+            settings.setValue(\"fCoinControlFeatures\", fCoinControlFeatures);\n+            emit coinControlFeaturesChanged(fCoinControlFeatures);\n+        }\n+        break;\n         default:\n             break;\n         }\n@@ -302,6 +312,11 @@ qint64 OptionsModel::getTransactionFee()\n     return (qint64) nTransactionFee;\n }\n \n+bool OptionsModel::getCoinControlFeatures()\n+{\n+    return fCoinControlFeatures;\n+}\n+\n bool OptionsModel::getProxySettings(QString& proxyIP, quint16 &proxyPort) const\n {\n     std::string proxy = GetArg(\"-proxy\", \"\");"
      },
      {
        "sha": "c716f74c0b09828d7ed03742d92a6eeee6d17c91",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -33,6 +33,7 @@ class OptionsModel : public QAbstractListModel\n         DisplayUnit,       // BitcoinUnits::Unit\n         DisplayAddresses,  // bool\n         Language,          // QString\n+        CoinControlFeatures, // bool\n         OptionIDRowCount,\n     };\n \n@@ -54,16 +55,20 @@ class OptionsModel : public QAbstractListModel\n     bool getDisplayAddresses() { return bDisplayAddresses; }\n     QString getLanguage() { return language; }\n     bool getProxySettings(QString& proxyIP, quint16 &proxyPort) const;\n+    bool getCoinControlFeatures();\n \n private:\n     int nDisplayUnit;\n     bool bDisplayAddresses;\n     bool fMinimizeToTray;\n     bool fMinimizeOnClose;\n     QString language;\n+    bool fCoinControlFeatures;\n \n signals:\n     void displayUnitChanged(int unit);\n+    void transactionFeeChanged(qint64);\n+    void coinControlFeaturesChanged(bool);\n };\n \n #endif // OPTIONSMODEL_H"
      },
      {
        "sha": "71a1eb7618299c7a6fd9d44d490bc7628ea9b3ad",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 211,
        "deletions": 1,
        "changes": 212,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -10,9 +10,12 @@\n #include \"optionsmodel.h\"\n #include \"sendcoinsentry.h\"\n #include \"walletmodel.h\"\n+#include \"coincontroldialog.h\"\n+#include \"addresstablemodel.h\"\n \n #include \"base58.h\"\n #include \"ui_interface.h\"\n+#include \"coincontrol.h\"\n \n #include <QMessageBox>\n #include <QScrollBar>\n@@ -30,12 +33,48 @@ SendCoinsDialog::SendCoinsDialog(QWidget *parent) :\n     ui->clearButton->setIcon(QIcon());\n     ui->sendButton->setIcon(QIcon());\n #endif\n+#if QT_VERSION >= 0x040700\n+    /* Do not move this to the XML file, Qt before 4.7 will choke on it */\n+    ui->lineEditCoinControlChange->setPlaceholderText(tr(\"Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)\"));\n+#endif\n \n     addEntry();\n \n     connect(ui->addButton, SIGNAL(clicked()), this, SLOT(addEntry()));\n     connect(ui->clearButton, SIGNAL(clicked()), this, SLOT(clear()));\n \n+    // Coin Control\n+    ui->lineEditCoinControlChange->setFont(GUIUtil::bitcoinAddressFont());\n+    connect(ui->pushButtonCoinControl, SIGNAL(clicked()), this, SLOT(coinControlButtonClicked()));\n+    connect(ui->checkBoxCoinControlChange, SIGNAL(stateChanged(int)), this, SLOT(coinControlChangeChecked(int)));\n+    connect(ui->lineEditCoinControlChange, SIGNAL(textEdited(const QString &)), this, SLOT(coinControlChangeEdited(const QString &)));\n+\n+    // Coin Control: clipboard actions\n+    QAction *clipboardQuantityAction = new QAction(tr(\"Copy quantity\"), this);\n+    QAction *clipboardAmountAction = new QAction(tr(\"Copy amount\"), this);\n+    QAction *clipboardFeeAction = new QAction(tr(\"Copy fee\"), this);\n+    QAction *clipboardAfterFeeAction = new QAction(tr(\"Copy after fee\"), this);\n+    QAction *clipboardBytesAction = new QAction(tr(\"Copy bytes\"), this);\n+    QAction *clipboardPriorityAction = new QAction(tr(\"Copy priority\"), this);\n+    QAction *clipboardLowOutputAction = new QAction(tr(\"Copy low output\"), this);\n+    QAction *clipboardChangeAction = new QAction(tr(\"Copy change\"), this);\n+    connect(clipboardQuantityAction, SIGNAL(triggered()), this, SLOT(coinControlClipboardQuantity()));\n+    connect(clipboardAmountAction, SIGNAL(triggered()), this, SLOT(coinControlClipboardAmount()));\n+    connect(clipboardFeeAction, SIGNAL(triggered()), this, SLOT(coinControlClipboardFee()));\n+    connect(clipboardAfterFeeAction, SIGNAL(triggered()), this, SLOT(coinControlClipboardAfterFee()));\n+    connect(clipboardBytesAction, SIGNAL(triggered()), this, SLOT(coinControlClipboardBytes()));\n+    connect(clipboardPriorityAction, SIGNAL(triggered()), this, SLOT(coinControlClipboardPriority()));\n+    connect(clipboardLowOutputAction, SIGNAL(triggered()), this, SLOT(coinControlClipboardLowOutput()));\n+    connect(clipboardChangeAction, SIGNAL(triggered()), this, SLOT(coinControlClipboardChange()));\n+    ui->labelCoinControlQuantity->addAction(clipboardQuantityAction);\n+    ui->labelCoinControlAmount->addAction(clipboardAmountAction);\n+    ui->labelCoinControlFee->addAction(clipboardFeeAction);\n+    ui->labelCoinControlAfterFee->addAction(clipboardAfterFeeAction);\n+    ui->labelCoinControlBytes->addAction(clipboardBytesAction);\n+    ui->labelCoinControlPriority->addAction(clipboardPriorityAction);\n+    ui->labelCoinControlLowOutput->addAction(clipboardLowOutputAction);\n+    ui->labelCoinControlChange->addAction(clipboardChangeAction);\n+\n     fNewRecipientAllowed = true;\n }\n \n@@ -57,6 +96,13 @@ void SendCoinsDialog::setModel(WalletModel *model)\n         setBalance(model->getBalance(), model->getUnconfirmedBalance(), model->getImmatureBalance());\n         connect(model, SIGNAL(balanceChanged(qint64, qint64, qint64)), this, SLOT(setBalance(qint64, qint64, qint64)));\n         connect(model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n+\n+        // Coin Control\n+        connect(model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(coinControlUpdateLabels()));\n+        connect(model->getOptionsModel(), SIGNAL(coinControlFeaturesChanged(bool)), this, SLOT(coinControlFeatureChanged(bool)));\n+        connect(model->getOptionsModel(), SIGNAL(transactionFeeChanged(qint64)), this, SLOT(coinControlUpdateLabels()));\n+        ui->frameCoinControl->setVisible(model->getOptionsModel()->getCoinControlFeatures());\n+        coinControlUpdateLabels();\n     }\n }\n \n@@ -144,7 +190,12 @@ void SendCoinsDialog::on_sendButton_clicked()\n \n     // prepare transaction for getting txFee earlier\n     WalletModelTransaction currentTransaction(recipients);\n-    WalletModel::SendCoinsReturn prepareStatus = model->prepareTransaction(currentTransaction);\n+    WalletModel::SendCoinsReturn prepareStatus;\n+    if (model->getOptionsModel()->getCoinControlFeatures()) // coin control enabled\n+        prepareStatus = model->prepareTransaction(currentTransaction, CoinControlDialog::coinControl);\n+    else\n+        prepareStatus = model->prepareTransaction(currentTransaction);\n+\n     // process prepareStatus and on error generate message shown to user\n     processSendCoinsReturn(prepareStatus,\n         BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), currentTransaction.getTransactionFee()));\n@@ -192,6 +243,8 @@ void SendCoinsDialog::on_sendButton_clicked()\n     if (sendStatus.status == WalletModel::OK)\n     {\n         accept();\n+        CoinControlDialog::coinControl->UnSelectAll();\n+        coinControlUpdateLabels();\n     }\n     fNewRecipientAllowed = true;\n }\n@@ -226,6 +279,7 @@ SendCoinsEntry *SendCoinsDialog::addEntry()\n     entry->setModel(model);\n     ui->entries->addWidget(entry);\n     connect(entry, SIGNAL(removeEntry(SendCoinsEntry*)), this, SLOT(removeEntry(SendCoinsEntry*)));\n+    connect(entry, SIGNAL(payAmountChanged()), this, SLOT(coinControlUpdateLabels()));\n \n     updateRemoveEnabled();\n \n@@ -253,6 +307,8 @@ void SendCoinsDialog::updateRemoveEnabled()\n         }\n     }\n     setupTabChain(0);\n+\n+    coinControlUpdateLabels();\n }\n \n void SendCoinsDialog::removeEntry(SendCoinsEntry* entry)\n@@ -317,6 +373,7 @@ void SendCoinsDialog::pasteEntry(const SendCoinsRecipient &rv)\n     }\n \n     entry->setValue(rv);\n+    coinControlUpdateLabels();\n }\n \n bool SendCoinsDialog::handlePaymentRequest(const SendCoinsRecipient &rv)\n@@ -404,3 +461,156 @@ void SendCoinsDialog::processSendCoinsReturn(const WalletModel::SendCoinsReturn\n \n     emit message(tr(\"Send Coins\"), msgParams.first, msgParams.second);\n }\n+\n+// Coin Control: copy label \"Quantity\" to clipboard\n+void SendCoinsDialog::coinControlClipboardQuantity()\n+{\n+    GUIUtil::setClipboard(ui->labelCoinControlQuantity->text());\n+}\n+\n+// Coin Control: copy label \"Amount\" to clipboard\n+void SendCoinsDialog::coinControlClipboardAmount()\n+{\n+    GUIUtil::setClipboard(ui->labelCoinControlAmount->text().left(ui->labelCoinControlAmount->text().indexOf(\" \")));\n+}\n+\n+// Coin Control: copy label \"Fee\" to clipboard\n+void SendCoinsDialog::coinControlClipboardFee()\n+{\n+    GUIUtil::setClipboard(ui->labelCoinControlFee->text().left(ui->labelCoinControlFee->text().indexOf(\" \")));\n+}\n+\n+// Coin Control: copy label \"After fee\" to clipboard\n+void SendCoinsDialog::coinControlClipboardAfterFee()\n+{\n+    GUIUtil::setClipboard(ui->labelCoinControlAfterFee->text().left(ui->labelCoinControlAfterFee->text().indexOf(\" \")));\n+}\n+\n+// Coin Control: copy label \"Bytes\" to clipboard\n+void SendCoinsDialog::coinControlClipboardBytes()\n+{\n+    GUIUtil::setClipboard(ui->labelCoinControlBytes->text());\n+}\n+\n+// Coin Control: copy label \"Priority\" to clipboard\n+void SendCoinsDialog::coinControlClipboardPriority()\n+{\n+    GUIUtil::setClipboard(ui->labelCoinControlPriority->text());\n+}\n+\n+// Coin Control: copy label \"Low output\" to clipboard\n+void SendCoinsDialog::coinControlClipboardLowOutput()\n+{\n+    GUIUtil::setClipboard(ui->labelCoinControlLowOutput->text());\n+}\n+\n+// Coin Control: copy label \"Change\" to clipboard\n+void SendCoinsDialog::coinControlClipboardChange()\n+{\n+    GUIUtil::setClipboard(ui->labelCoinControlChange->text().left(ui->labelCoinControlChange->text().indexOf(\" \")));\n+}\n+\n+// Coin Control: settings menu - coin control enabled/disabled by user\n+void SendCoinsDialog::coinControlFeatureChanged(bool checked)\n+{\n+    ui->frameCoinControl->setVisible(checked);\n+\n+    if (!checked && model) // coin control features disabled\n+        CoinControlDialog::coinControl->SetNull();\n+}\n+\n+// Coin Control: button inputs -> show actual coin control dialog\n+void SendCoinsDialog::coinControlButtonClicked()\n+{\n+    CoinControlDialog dlg;\n+    dlg.setModel(model);\n+    dlg.exec();\n+    coinControlUpdateLabels();\n+}\n+\n+// Coin Control: checkbox custom change address\n+void SendCoinsDialog::coinControlChangeChecked(int state)\n+{\n+    if (model)\n+    {\n+        if (state == Qt::Checked)\n+            CoinControlDialog::coinControl->destChange = CBitcoinAddress(ui->lineEditCoinControlChange->text().toStdString()).Get();\n+        else\n+            CoinControlDialog::coinControl->destChange = CNoDestination();\n+    }\n+\n+    ui->lineEditCoinControlChange->setEnabled((state == Qt::Checked));\n+    ui->labelCoinControlChangeLabel->setVisible((state == Qt::Checked));\n+}\n+\n+// Coin Control: custom change address changed\n+void SendCoinsDialog::coinControlChangeEdited(const QString & text)\n+{\n+    if (model)\n+    {\n+        CoinControlDialog::coinControl->destChange = CBitcoinAddress(text.toStdString()).Get();\n+\n+        // label for the change address\n+        ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:black;}\");\n+        if (text.isEmpty())\n+            ui->labelCoinControlChangeLabel->setText(\"\");\n+        else if (!CBitcoinAddress(text.toStdString()).IsValid())\n+        {\n+            ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:red;}\");\n+            ui->labelCoinControlChangeLabel->setText(tr(\"Warning: Invalid Bitcoin address\"));\n+        }\n+        else\n+        {\n+            QString associatedLabel = model->getAddressTableModel()->labelForAddress(text);\n+            if (!associatedLabel.isEmpty())\n+                ui->labelCoinControlChangeLabel->setText(associatedLabel);\n+            else\n+            {\n+                CPubKey pubkey;\n+                CKeyID keyid;\n+                CBitcoinAddress(text.toStdString()).GetKeyID(keyid);\n+                if (model->getPubKey(keyid, pubkey))\n+                    ui->labelCoinControlChangeLabel->setText(tr(\"(no label)\"));\n+                else\n+                {\n+                    ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:red;}\");\n+                    ui->labelCoinControlChangeLabel->setText(tr(\"Warning: Unknown change address\"));\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+// Coin Control: update labels\n+void SendCoinsDialog::coinControlUpdateLabels()\n+{\n+    if (!model || !model->getOptionsModel() || !model->getOptionsModel()->getCoinControlFeatures())\n+        return;\n+\n+    // set pay amounts\n+    CoinControlDialog::payAmounts.clear();\n+    for(int i = 0; i < ui->entries->count(); ++i)\n+    {\n+        SendCoinsEntry *entry = qobject_cast<SendCoinsEntry*>(ui->entries->itemAt(i)->widget());\n+        if(entry)\n+            CoinControlDialog::payAmounts.append(entry->getValue().amount);\n+    }\n+\n+    if (CoinControlDialog::coinControl->HasSelected())\n+    {\n+        // actual coin control calculation\n+        CoinControlDialog::updateLabels(model, this);\n+\n+        // show coin control stats\n+        ui->labelCoinControlAutomaticallySelected->hide();\n+        ui->widgetCoinControl->show();\n+    }\n+    else\n+    {\n+        // hide coin control stats\n+        ui->labelCoinControlAutomaticallySelected->show();\n+        ui->widgetCoinControl->hide();\n+        ui->labelCoinControlInsuffFunds->hide();\n+    }\n+}\n+"
      },
      {
        "sha": "4327e8e382e5ca0fba55aa6cf59c2ce6ddbdc086",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -8,6 +8,7 @@\n #include \"walletmodel.h\"\n \n #include <QDialog>\n+#include <QString>\n \n class OptionsModel;\n class SendCoinsEntry;\n@@ -62,6 +63,19 @@ private slots:\n     void on_sendButton_clicked();\n     void removeEntry(SendCoinsEntry* entry);\n     void updateDisplayUnit();\n+    void coinControlFeatureChanged(bool);\n+    void coinControlButtonClicked();\n+    void coinControlChangeChecked(int);\n+    void coinControlChangeEdited(const QString &);\n+    void coinControlUpdateLabels();\n+    void coinControlClipboardQuantity();\n+    void coinControlClipboardAmount();\n+    void coinControlClipboardFee();\n+    void coinControlClipboardAfterFee();\n+    void coinControlClipboardBytes();\n+    void coinControlClipboardPriority();\n+    void coinControlClipboardLowOutput();\n+    void coinControlClipboardChange();\n \n signals:\n     // Fired when a message should be reported to the user"
      },
      {
        "sha": "f6f86eb820a70c065fd81588c5ba4bccd80e9196",
        "filename": "src/qt/sendcoinsentry.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/sendcoinsentry.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/sendcoinsentry.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.cpp?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -75,6 +75,8 @@ void SendCoinsEntry::setModel(WalletModel *model)\n     if (model && model->getOptionsModel())\n         connect(model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n \n+    connect(ui->payAmount, SIGNAL(textChanged()), this, SIGNAL(payAmountChanged()));\n+\n     clear();\n }\n "
      },
      {
        "sha": "1c4ddaa8ef8564be1502372f9f1cdbe154ec837e",
        "filename": "src/qt/sendcoinsentry.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/sendcoinsentry.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/sendcoinsentry.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.h?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -51,6 +51,7 @@ public slots:\n \n signals:\n     void removeEntry(SendCoinsEntry *entry);\n+    void payAmountChanged();\n \n private slots:\n     void on_deleteButton_clicked();"
      },
      {
        "sha": "2470af41a08ac0e107feca6c006c69a8d15902cb",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 88,
        "deletions": 6,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -47,8 +47,19 @@ WalletModel::~WalletModel()\n     unsubscribeFromCoreSignals();\n }\n \n-qint64 WalletModel::getBalance() const\n+qint64 WalletModel::getBalance(const CCoinControl *coinControl) const\n {\n+    if (coinControl)\n+    {\n+        qint64 nBalance = 0;\n+        std::vector<COutput> vCoins;\n+        wallet->AvailableCoins(vCoins, true, coinControl);\n+        BOOST_FOREACH(const COutput& out, vCoins)\n+            nBalance += out.tx->vout[out.i].nValue;\n+\n+        return nBalance;\n+    }\n+\n     return wallet->GetBalance();\n }\n \n@@ -136,7 +147,7 @@ bool WalletModel::validateAddress(const QString &address)\n     return addressParsed.IsValid();\n }\n \n-WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransaction &transaction)\n+WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransaction &transaction, const CCoinControl *coinControl)\n {\n     qint64 total = 0;\n     QList<SendCoinsRecipient> recipients = transaction.getRecipients();\n@@ -197,12 +208,14 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n         return DuplicateAddress;\n     }\n \n-    if(total > getBalance())\n+    qint64 nBalance = getBalance(coinControl);\n+\n+    if(total > nBalance)\n     {\n         return AmountExceedsBalance;\n     }\n \n-    if((total + nTransactionFee) > getBalance())\n+    if((total + nTransactionFee) > nBalance)\n     {\n         transaction.setTransactionFee(nTransactionFee);\n         return SendCoinsReturn(AmountWithFeeExceedsBalance);\n@@ -217,12 +230,12 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n \n         CWalletTx *newTx = transaction.getTransaction();\n         CReserveKey *keyChange = transaction.getPossibleKeyChange();\n-        bool fCreated = wallet->CreateTransaction(vecSend, *newTx, *keyChange, nFeeRequired, strFailReason);\n+        bool fCreated = wallet->CreateTransaction(vecSend, *newTx, *keyChange, nFeeRequired, strFailReason, coinControl);\n         transaction.setTransactionFee(nFeeRequired);\n \n         if(!fCreated)\n         {\n-            if((total + nFeeRequired) > wallet->GetBalance())\n+            if((total + nFeeRequired) > nBalance)\n             {\n                 return SendCoinsReturn(AmountWithFeeExceedsBalance);\n             }\n@@ -458,3 +471,72 @@ void WalletModel::UnlockContext::CopyFrom(const UnlockContext& rhs)\n     *this = rhs;\n     rhs.relock = false;\n }\n+\n+bool WalletModel::getPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const\n+{\n+    return wallet->GetPubKey(address, vchPubKeyOut);\n+}\n+\n+// returns a list of COutputs from COutPoints\n+void WalletModel::getOutputs(const std::vector<COutPoint>& vOutpoints, std::vector<COutput>& vOutputs)\n+{\n+    BOOST_FOREACH(const COutPoint& outpoint, vOutpoints)\n+    {\n+        if (!wallet->mapWallet.count(outpoint.hash)) continue;\n+        COutput out(&wallet->mapWallet[outpoint.hash], outpoint.n, wallet->mapWallet[outpoint.hash].GetDepthInMainChain());\n+        vOutputs.push_back(out);\n+    }\n+}\n+\n+// AvailableCoins + LockedCoins grouped by wallet address (put change in one group with wallet address)\n+void WalletModel::listCoins(std::map<QString, std::vector<COutput> >& mapCoins) const\n+{\n+    std::vector<COutput> vCoins;\n+    wallet->AvailableCoins(vCoins);\n+\n+    std::vector<COutPoint> vLockedCoins;\n+    wallet->ListLockedCoins(vLockedCoins);\n+\n+    // add locked coins\n+    BOOST_FOREACH(const COutPoint& outpoint, vLockedCoins)\n+    {\n+        if (!wallet->mapWallet.count(outpoint.hash)) continue;\n+        COutput out(&wallet->mapWallet[outpoint.hash], outpoint.n, wallet->mapWallet[outpoint.hash].GetDepthInMainChain());\n+        vCoins.push_back(out);\n+    }\n+\n+    BOOST_FOREACH(const COutput& out, vCoins)\n+    {\n+        COutput cout = out;\n+\n+        while (wallet->IsChange(cout.tx->vout[cout.i]) && cout.tx->vin.size() > 0 && wallet->IsMine(cout.tx->vin[0]))\n+        {\n+            if (!wallet->mapWallet.count(cout.tx->vin[0].prevout.hash)) break;\n+            cout = COutput(&wallet->mapWallet[cout.tx->vin[0].prevout.hash], cout.tx->vin[0].prevout.n, 0);\n+        }\n+\n+        CTxDestination address;\n+        if(!ExtractDestination(cout.tx->vout[cout.i].scriptPubKey, address)) continue;\n+        mapCoins[CBitcoinAddress(address).ToString().c_str()].push_back(out);\n+    }\n+}\n+\n+bool WalletModel::isLockedCoin(uint256 hash, unsigned int n) const\n+{\n+    return wallet->IsLockedCoin(hash, n);\n+}\n+\n+void WalletModel::lockCoin(COutPoint& output)\n+{\n+    wallet->LockCoin(output);\n+}\n+\n+void WalletModel::unlockCoin(COutPoint& output)\n+{\n+    wallet->UnlockCoin(output);\n+}\n+\n+void WalletModel::listLockedCoins(std::vector<COutPoint>& vOutpts)\n+{\n+    wallet->ListLockedCoins(vOutpts);\n+}"
      },
      {
        "sha": "f5afe872605b7a3d35417c5388d58d16651500a4",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 20,
        "deletions": 3,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -11,11 +11,19 @@\n #include \"allocators.h\" /* for SecureString */\n \n #include <QObject>\n+#include <vector>\n+#include <map>\n \n class AddressTableModel;\n class OptionsModel;\n class TransactionTableModel;\n class WalletModelTransaction;\n+class CKeyID;\n+class CPubKey;\n+class COutput;\n+class COutPoint;\n+class uint256;\n+class CCoinControl;\n \n class CWallet;\n \n@@ -80,7 +88,7 @@ class WalletModel : public QObject\n     AddressTableModel *getAddressTableModel();\n     TransactionTableModel *getTransactionTableModel();\n \n-    qint64 getBalance() const;\n+    qint64 getBalance(const CCoinControl *coinControl=NULL) const;\n     qint64 getUnconfirmedBalance() const;\n     qint64 getImmatureBalance() const;\n     int getNumTransactions() const;\n@@ -92,13 +100,13 @@ class WalletModel : public QObject\n     // Return status record for SendCoins, contains error id + information\n     struct SendCoinsReturn\n     {\n-        SendCoinsReturn(StatusCode status):\n+        SendCoinsReturn(StatusCode status=Aborted):\n             status(status) {}\n         StatusCode status;\n     };\n \n     // prepare transaction for getting txfee before sending coins\n-    SendCoinsReturn prepareTransaction(WalletModelTransaction &transaction);\n+    SendCoinsReturn prepareTransaction(WalletModelTransaction &transaction, const CCoinControl *coinControl=NULL);\n \n     // Send coins to a list of recipients\n     SendCoinsReturn sendCoins(WalletModelTransaction &transaction);\n@@ -133,6 +141,15 @@ class WalletModel : public QObject\n \n     UnlockContext requestUnlock();\n \n+    bool getPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const;\n+    void getOutputs(const std::vector<COutPoint>& vOutpoints, std::vector<COutput>& vOutputs);\n+    void listCoins(std::map<QString, std::vector<COutput> >& mapCoins) const;\n+\n+    bool isLockedCoin(uint256 hash, unsigned int n) const;\n+    void lockCoin(COutPoint& output);\n+    void unlockCoin(COutPoint& output);\n+    void listLockedCoins(std::vector<COutPoint>& vOutpts);\n+\n private:\n     CWallet *wallet;\n "
      },
      {
        "sha": "3e684a78792cef044788aae71c2500f6c3203f95",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 43,
        "deletions": 21,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -7,6 +7,7 @@\n \n #include \"base58.h\"\n #include \"net.h\"\n+#include \"coincontrol.h\"\n \n #include <inttypes.h>\n #include <stdint.h>\n@@ -1004,7 +1005,7 @@ int64_t CWallet::GetImmatureBalance() const\n }\n \n // populate vCoins with vector of spendable COutputs\n-void CWallet::AvailableCoins(vector<COutput>& vCoins, bool fOnlyConfirmed) const\n+void CWallet::AvailableCoins(vector<COutput>& vCoins, bool fOnlyConfirmed, const CCoinControl *coinControl) const\n {\n     vCoins.clear();\n \n@@ -1025,8 +1026,9 @@ void CWallet::AvailableCoins(vector<COutput>& vCoins, bool fOnlyConfirmed) const\n \n             for (unsigned int i = 0; i < pcoin->vout.size(); i++) {\n                 if (!(pcoin->IsSpent(i)) && IsMine(pcoin->vout[i]) &&\n-                    !IsLockedCoin((*it).first, i) && pcoin->vout[i].nValue > 0)\n-                    vCoins.push_back(COutput(pcoin, i, pcoin->GetDepthInMainChain()));\n+                    !IsLockedCoin((*it).first, i) && pcoin->vout[i].nValue > 0 &&\n+                    (!coinControl || !coinControl->HasSelected() || coinControl->IsSelected((*it).first, i)))\n+                        vCoins.push_back(COutput(pcoin, i, pcoin->GetDepthInMainChain()));\n             }\n         }\n     }\n@@ -1176,10 +1178,21 @@ bool CWallet::SelectCoinsMinConf(int64_t nTargetValue, int nConfMine, int nConfT\n     return true;\n }\n \n-bool CWallet::SelectCoins(int64_t nTargetValue, set<pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64_t& nValueRet) const\n+bool CWallet::SelectCoins(int64_t nTargetValue, set<pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64_t& nValueRet, const CCoinControl* coinControl) const\n {\n     vector<COutput> vCoins;\n-    AvailableCoins(vCoins);\n+    AvailableCoins(vCoins, true, coinControl);\n+\n+    // coin control -> return all selected outputs (we want all selected to go into the transaction for sure)\n+    if (coinControl && coinControl->HasSelected())\n+    {\n+        BOOST_FOREACH(const COutput& out, vCoins)\n+        {\n+            nValueRet += out.tx->vout[out.i].nValue;\n+            setCoinsRet.insert(make_pair(out.tx, out.i));\n+        }\n+        return (nValueRet >= nTargetValue);\n+    }\n \n     return (SelectCoinsMinConf(nTargetValue, 1, 6, vCoins, setCoinsRet, nValueRet) ||\n             SelectCoinsMinConf(nTargetValue, 1, 1, vCoins, setCoinsRet, nValueRet) ||\n@@ -1190,7 +1203,7 @@ bool CWallet::SelectCoins(int64_t nTargetValue, set<pair<const CWalletTx*,unsign\n \n \n bool CWallet::CreateTransaction(const vector<pair<CScript, int64_t> >& vecSend,\n-                                CWalletTx& wtxNew, CReserveKey& reservekey, int64_t& nFeeRet, std::string& strFailReason)\n+                                CWalletTx& wtxNew, CReserveKey& reservekey, int64_t& nFeeRet, std::string& strFailReason, const CCoinControl* coinControl)\n {\n     int64_t nValue = 0;\n     BOOST_FOREACH (const PAIRTYPE(CScript, int64_t)& s, vecSend)\n@@ -1237,7 +1250,7 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64_t> >& vecSend,\n                 // Choose coins to use\n                 set<pair<const CWalletTx*,unsigned int> > setCoins;\n                 int64_t nValueIn = 0;\n-                if (!SelectCoins(nTotalValue, setCoins, nValueIn))\n+                if (!SelectCoins(nTotalValue, setCoins, nValueIn, coinControl))\n                 {\n                     strFailReason = _(\"Insufficient funds\");\n                     return false;\n@@ -1265,22 +1278,31 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64_t> >& vecSend,\n \n                 if (nChange > 0)\n                 {\n-                    // Note: We use a new key here to keep it from being obvious which side is the change.\n-                    //  The drawback is that by not reusing a previous key, the change may be lost if a\n-                    //  backup is restored, if the backup doesn't have the new private key for the change.\n-                    //  If we reused the old key, it would be possible to add code to look for and\n-                    //  rediscover unknown transactions that were written with keys of ours to recover\n-                    //  post-backup change.\n-\n-                    // Reserve a new key pair from key pool\n-                    CPubKey vchPubKey;\n-                    assert(reservekey.GetReservedKey(vchPubKey)); // should never fail, as we just unlocked\n-\n                     // Fill a vout to ourself\n                     // TODO: pass in scriptChange instead of reservekey so\n                     // change transaction isn't always pay-to-bitcoin-address\n                     CScript scriptChange;\n-                    scriptChange.SetDestination(vchPubKey.GetID());\n+\n+                    // coin control: send change to custom address\n+                    if (coinControl && !boost::get<CNoDestination>(&coinControl->destChange))\n+                        scriptChange.SetDestination(coinControl->destChange);\n+\n+                    // no coin control: send change to newly generated address\n+                    else\n+                    {\n+                        // Note: We use a new key here to keep it from being obvious which side is the change.\n+                        //  The drawback is that by not reusing a previous key, the change may be lost if a\n+                        //  backup is restored, if the backup doesn't have the new private key for the change.\n+                        //  If we reused the old key, it would be possible to add code to look for and\n+                        //  rediscover unknown transactions that were written with keys of ours to recover\n+                        //  post-backup change.\n+\n+                        // Reserve a new key pair from key pool\n+                        CPubKey vchPubKey;\n+                        assert(reservekey.GetReservedKey(vchPubKey)); // should never fail, as we just unlocked\n+\n+                        scriptChange.SetDestination(vchPubKey.GetID());\n+                    }\n \n                     CTxOut newTxOut(nChange, scriptChange);\n \n@@ -1353,11 +1375,11 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64_t> >& vecSend,\n }\n \n bool CWallet::CreateTransaction(CScript scriptPubKey, int64_t nValue,\n-                                CWalletTx& wtxNew, CReserveKey& reservekey, int64_t& nFeeRet, std::string& strFailReason)\n+                                CWalletTx& wtxNew, CReserveKey& reservekey, int64_t& nFeeRet, std::string& strFailReason, const CCoinControl* coinControl)\n {\n     vector< pair<CScript, int64_t> > vecSend;\n     vecSend.push_back(make_pair(scriptPubKey, nValue));\n-    return CreateTransaction(vecSend, wtxNew, reservekey, nFeeRet, strFailReason);\n+    return CreateTransaction(vecSend, wtxNew, reservekey, nFeeRet, strFailReason, coinControl);\n }\n \n // Call after CreateTransaction unless you want to abort"
      },
      {
        "sha": "928ba3de3f00b145bae1b95144b6194887a22506",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a86c24db146d9ca5d1d5c83099d935c3feb63bb/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=6a86c24db146d9ca5d1d5c83099d935c3feb63bb",
        "patch": "@@ -28,6 +28,7 @@ class COutput;\n class CReserveKey;\n class CScript;\n class CWalletTx;\n+class CCoinControl;\n \n /** (client) version numbers for particular wallet features */\n enum WalletFeature\n@@ -87,7 +88,7 @@ class CAddressBookData\n class CWallet : public CCryptoKeyStore, public CWalletInterface\n {\n private:\n-    bool SelectCoins(int64_t nTargetValue, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64_t& nValueRet) const;\n+    bool SelectCoins(int64_t nTargetValue, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64_t& nValueRet, const CCoinControl *coinControl=NULL) const;\n \n     CWalletDB *pwalletdbEncryption;\n \n@@ -152,7 +153,7 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     // check whether we are allowed to upgrade (or already support) to the named feature\n     bool CanSupportFeature(enum WalletFeature wf) { return nWalletMaxVersion >= wf; }\n \n-    void AvailableCoins(std::vector<COutput>& vCoins, bool fOnlyConfirmed=true) const;\n+    void AvailableCoins(std::vector<COutput>& vCoins, bool fOnlyConfirmed=true, const CCoinControl *coinControl=NULL) const;\n     bool SelectCoinsMinConf(int64_t nTargetValue, int nConfMine, int nConfTheirs, std::vector<COutput> vCoins, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64_t& nValueRet) const;\n     bool IsLockedCoin(uint256 hash, unsigned int n) const;\n     void LockCoin(COutPoint& output);\n@@ -212,9 +213,9 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     int64_t GetUnconfirmedBalance() const;\n     int64_t GetImmatureBalance() const;\n     bool CreateTransaction(const std::vector<std::pair<CScript, int64_t> >& vecSend,\n-                           CWalletTx& wtxNew, CReserveKey& reservekey, int64_t& nFeeRet, std::string& strFailReason);\n+                           CWalletTx& wtxNew, CReserveKey& reservekey, int64_t& nFeeRet, std::string& strFailReason, const CCoinControl *coinControl=NULL);\n     bool CreateTransaction(CScript scriptPubKey, int64_t nValue,\n-                           CWalletTx& wtxNew, CReserveKey& reservekey, int64_t& nFeeRet, std::string& strFailReason);\n+                           CWalletTx& wtxNew, CReserveKey& reservekey, int64_t& nFeeRet, std::string& strFailReason, const CCoinControl *coinControl=NULL);\n     bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n     std::string SendMoney(CScript scriptPubKey, int64_t nValue, CWalletTx& wtxNew, bool fAskFee=false);\n     std::string SendMoneyToDestination(const CTxDestination &address, int64_t nValue, CWalletTx& wtxNew, bool fAskFee=false);"
      }
    ]
  }
]