sipa,2017-06-04T18:39:15Z,utACK 5e6c94531046135d406ea755851fd614a76fb543,https://github.com/bitcoin/bitcoin/pull/10521#issuecomment-306058522,306058522,
practicalswift,2017-06-04T20:51:40Z,@benma Feedback items addressed! Thanks for the review. ,https://github.com/bitcoin/bitcoin/pull/10521#issuecomment-306066130,306066130,
benma,2017-06-04T21:18:12Z,utACK 4adc8389af964e84c1f97bc28707904341bbbc74,https://github.com/bitcoin/bitcoin/pull/10521#issuecomment-306067620,306067620,
practicalswift,2017-06-04T22:53:22Z,@benma Good point. `w` and `h` now on the same line again :-),https://github.com/bitcoin/bitcoin/pull/10521#issuecomment-306072841,306072841,
jtimon,2017-06-05T17:17:39Z,utACK 90593ed92cfd5d49900a6fb6c2c10a482ab9fdbb,https://github.com/bitcoin/bitcoin/pull/10521#issuecomment-306248157,306248157,
paveljanik,2017-06-06T04:43:13Z,utACK 90593ed,https://github.com/bitcoin/bitcoin/pull/10521#issuecomment-306380401,306380401,
benma,2017-06-04T19:15:42Z,"move down to the before L865, to move it closer to its first use.",https://github.com/bitcoin/bitcoin/pull/10521#discussion_r120018233,120018233,src/policy/fees.cpp
benma,2017-06-04T19:19:50Z,"`h`, `w`, `x` could also be moved into the if clause",https://github.com/bitcoin/bitcoin/pull/10521#discussion_r120018336,120018336,src/qt/trafficgraphwidget.cpp
benma,2017-06-04T19:21:38Z,is this var even needed? could do `nHeight = chainActive.Height();` and use `nHeight` instead of `nHeightStart` on the line after.,https://github.com/bitcoin/bitcoin/pull/10521#discussion_r120018370,120018370,src/rpc/mining.cpp
benma,2017-06-04T19:23:49Z,why did you move only `nOpCount` but not this or some of the other vars above?,https://github.com/bitcoin/bitcoin/pull/10521#discussion_r120018431,120018431,src/script/interpreter.cpp
practicalswift,2017-06-04T20:50:58Z,"Yes, there are more vars that could be moved into the tighter `try` scope. I'll take all `interpreter.cpp` changes in a separate PR since they'll need a more thorough review. I've now removed the `nOpCount` move from this PR.",https://github.com/bitcoin/bitcoin/pull/10521#discussion_r120020554,120020554,src/script/interpreter.cpp
benma,2017-06-04T21:18:02Z,"a super-nit, but I preferred `w` and `h` on the same line as before, because of the symmetry.",https://github.com/bitcoin/bitcoin/pull/10521#discussion_r120021243,120021243,src/qt/trafficgraphwidget.cpp
benma,2017-06-04T23:20:28Z,"Sorry for another nit, but why not inline this `x` (`YMARGIN + h` is also inlined)? Then you can declare `int x` on line 56 (or inline those two as well).\n\nCurrently, there something like shadowing going on, where `x` is not modified inside the loop, as they are independent.",https://github.com/bitcoin/bitcoin/pull/10521#discussion_r120023776,120023776,src/qt/trafficgraphwidget.cpp
practicalswift,2017-06-07T18:50:28Z,"@benma I'm not sure I follow. The value of `x` assigned in the loop is used outside of the loop, so declaring it on line 56 wouldn't maintain the same logic as before, would it? Please post a gist with your suggested formulation :-)",https://github.com/bitcoin/bitcoin/pull/10521#discussion_r120713849,120713849,src/qt/trafficgraphwidget.cpp
benma,2017-06-08T21:21:07Z,"You are correct, sir! Apologies :)",https://github.com/bitcoin/bitcoin/pull/10521#discussion_r121001826,121001826,src/qt/trafficgraphwidget.cpp
practicalswift,2017-06-09T13:34:37Z,@benma Apology accepted! ðŸ˜„,https://github.com/bitcoin/bitcoin/pull/10521#discussion_r121126997,121126997,src/qt/trafficgraphwidget.cpp
