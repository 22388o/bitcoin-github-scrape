MarcoFalke,2015-12-09T17:19:04Z,"vValue is not sorted in ascending order, the whole algorithm wouldn't make sense if it was...\n",https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-163329733,163329733,
Xekyo,2015-12-09T21:31:51Z,"@MarcoFalke: Sorry, apparently the links always refer to the current version and shift around because of that, however in `CWallet::SelectCoinsMinConf(…)` there are the following lines:\n\n```\n// Solve subset sum by stochastic approximation\nsort(vValue.rbegin(), vValue.rend(), CompareValueOnly());\nvector<char> vfBest;\nCAmount nBest;\n\nApproximateBestSubset(vValue, nTotalLower, nTargetValue, v",https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-163398108,163398108,
laanwj,2015-12-10T11:17:13Z,"> vValue is not sorted in ascending order, the whole algorithm wouldn't make sense if it was...\n\nIt actually is.\n(or is CompareValueOnly doing something else than I assumed it does? that'd be confusing...)\nNope:\n\n```\nstruct CompareValueOnly\n{\n    bool operator()(const pair<CAmount, pair<const CWalletTx*, unsigned int> >& t1,\n                    const pair<CAmount, pair<const CWalletTx*, ",https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-163581922,163581922,
MarcoFalke,2015-12-10T12:23:54Z,"> If you say this sorts it in descending order, I don't see where that happens.\n\nRight in the line where `std::sort()` is called: https://github.com/bitcoin/bitcoin/blob/5dc63ed1ca8aca62f28881ba9ef996d4036a23ea/src/wallet/wallet.cpp#L1719\n\n`r` means reverse and the reverse of ascending is descending?\n",https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-163594899,163594899,
MarcoFalke,2015-12-10T12:24:43Z,"> links always refer to the current version and shift around because of that\n\n@Xekyo If you want to link on GitHub, don't forget to press the `y`-Key before copy pasting the link\n",https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-163595036,163595036,
morcos,2015-12-10T15:49:34Z,"Yikes, that's easy to overlook, perhaps a comment.\n",https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-163666286,163666286,
MarcoFalke,2015-12-10T15:57:34Z,And a unit test because this PR should not pass travis in the first place.\n,https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-163669023,163669023,
MarcoFalke,2015-12-12T13:20:37Z,"@Xekyo Can you take a look at this and add a comment above the ""`sort()`-line""?\n",https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-164149227,164149227,
laanwj,2015-12-14T13:24:13Z,"> Yikes, that's easy to overlook, perhaps a comment.\n\nAbsolutely. I also had no idea that you could pass reverse iterators to std::sort and it would just work.\n",https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-164435520,164435520,
Xekyo,2016-01-03T13:32:48Z,"@MarcoFalke: TIL. I was unaware of that behaviour of `sort(…)` with reverse iterators. From what I’m reading using reverse iterators isn’t very efficient, though.\n\nInstead of using reverse iterators, one could replace the line \n\n```\n sort(vValue.rbegin(), vValue.rend(), CompareValueOnly());\n```\n\nwith these two\n\n```\nsort(vValue.begin(), vValue.end(), CompareValueOnly());\nreverse(vValue.",https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-168498822,168498822,
MarcoFalke,2016-01-03T13:38:17Z,Sounds ok to me. Are you planning to write the unit test as well?\n,https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-168499540,168499540,
Xekyo,2016-01-03T13:45:19Z,"@MarcoFalke: I could do that, yet I’m unsure what one would want to test. Since the sorting operation is in the middle of  `CWallet::SelectCoinsMinConf(…)`, it’s would require quite a bit of refactoring to isolate as `vValue` is only a transient variable in that function.\n",https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-168499805,168499805,
MarcoFalke,2016-01-03T14:31:46Z,"@Xekyo I mean a ""high level"" test like #7193, such that your initial commit will fail travis. (Would you mind to post the inital diff or commit hash for reference and testing, I forgot to save it.)\n",https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-168501596,168501596,
Xekyo,2016-01-03T19:57:33Z,"@MarcoFalke: Unfortunately, I also overwrote my commit when I rebased my branch (perhaps prematurely) and pushed it to my fork. Would it make sense to redo them and push them onto another branch?\n\nI’ve added a test.\n",https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-168535142,168535142,
MarcoFalke,2016-01-03T22:38:50Z,"Provided by @Xekyo on IRC: `$ git reflog show Fix-#7182@{one.day.ago}`\n\nb9ecfc7\n\n``` diff\ndiff --git a/src/wallet/wallet.cpp b/src/wallet/wallet.cpp\nindex d23d54e..3d1f58c 100644\n--- a/src/wallet/wallet.cpp\n+++ b/src/wallet/wallet.cpp\n@@ -1605,7 +1605,7 @@ static void ApproximateBestSubset(vector<pair<CAmount, pair<const CWalletTx*,uns\n         bool fReachedTarget = false;\n         for ",https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-168548746,168548746,
MarcoFalke,2016-01-05T16:45:18Z,utACK 047cf77e324817594ce58e0ff53e5d817d1a9bc1.\n\nNit: you could use `std::sort` and `std:reverse` to prevent follow up commits.\n,https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-169057193,169057193,
Xekyo,2016-01-05T21:05:44Z,Edited to include the nit. :)\n,https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-169133845,169133845,
MarcoFalke,2016-01-05T21:32:44Z,trivial re-ACK 96efcad\n,https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-169140090,169140090,
jonasschnelli,2016-01-20T13:17:26Z,utACK 96efcadfc0d8a84066982533c676072d3b5d8314\n,https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-173200045,173200045,
laanwj,2016-01-20T14:55:26Z,utACK 96efcad\n,https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-173227679,173227679,
luke-jr,2016-02-12T02:59:27Z,Is there some reason not to just invert the CompareValueOnly function?\n,https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-183158395,183158395,
laanwj,2016-02-12T13:09:22Z,"And call it ReverseCompareValueOnly, yes that would have been the other option. But let's leave it as it is now, there's no need to shedpaint this.\n",https://github.com/bitcoin/bitcoin/pull/7183#issuecomment-183320016,183320016,
MarcoFalke,2016-01-04T23:54:19Z,"This will select quite a bunch of the 3ct coins, I don't think you want this. Just reduce the number to `1` like #7293\n",https://github.com/bitcoin/bitcoin/pull/7183#discussion_r48798178,48798178,src/wallet/test/wallet_tests.cpp
MarcoFalke,2016-01-04T23:55:18Z,@Xekyo You can either get the test case from #7293 and include it here or remove the test case in this pull.\n,https://github.com/bitcoin/bitcoin/pull/7183#discussion_r48798254,48798254,src/wallet/test/wallet_tests.cpp
Xekyo,2016-01-05T15:29:24Z,I’ve ACKed #7293 and will remove the test case here.\n,https://github.com/bitcoin/bitcoin/pull/7183#discussion_r48855970,48855970,src/wallet/test/wallet_tests.cpp
