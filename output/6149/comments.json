[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102583130",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6149#issuecomment-102583130",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6149",
    "id": 102583130,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjU4MzEzMA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-16T07:19:09Z",
    "updated_at": "2015-05-16T07:19:09Z",
    "author_association": "MEMBER",
    "body": "Concept ACK; I like making opening the debug log explicit. \n\nThis will correctly handle any sequence of Shutdown() being called after AppInit2 errored out somewhere along the way? (just asking -  previous changes in this sequence have tended to cause unexpected problems there)\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102583130/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/103255112",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6149#issuecomment-103255112",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6149",
    "id": 103255112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzI1NTExMg==",
    "user": {
      "login": "ajweiss",
      "id": 430315,
      "node_id": "MDQ6VXNlcjQzMDMxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/430315?u=1f49edbe9a1dee0adfa6af5328bef874c9cc4963&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajweiss",
      "html_url": "https://github.com/ajweiss",
      "followers_url": "https://api.github.com/users/ajweiss/followers",
      "following_url": "https://api.github.com/users/ajweiss/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajweiss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajweiss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajweiss/subscriptions",
      "organizations_url": "https://api.github.com/users/ajweiss/orgs",
      "repos_url": "https://api.github.com/users/ajweiss/repos",
      "events_url": "https://api.github.com/users/ajweiss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajweiss/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-18T23:20:14Z",
    "updated_at": "2015-05-18T23:20:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "It will now.  I wasn't able to get it to crash in my testing, but I believe that it was possible if the list/buffer were left static.\n\nI believe the issue you're bringing up is #1832 where the mutex that protects the log was being destroyed before the log print functions were being called resulting in a crash on shutdown.  The fix for that was to explicitly initialize the mutex and put it on the heap.  This generally results in a leak of the mutex and the output fd even on clean shutdown, but that's just merely ugly and benign.  (and to be clear, the way things are today)\n\nI now do the same with this buffer which will ensure that it is safe, but also leaked at exit along with the mutex and fd.  I looked into cleaning up the shutdown stuff and explicitly destroying the mutex, closing the fd and deleting this buffer, but that's more involved (things are slightly different under QT and bitcoind) and it seems like different, more complex and more difficult to test PR that should probably stand alone.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/103255112/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/118106663",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6149#issuecomment-118106663",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6149",
    "id": 118106663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExODEwNjY2Mw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-02T17:42:35Z",
    "updated_at": "2015-07-02T17:42:35Z",
    "author_association": "MEMBER",
    "body": "Needs nits addressed, should otherwise be ready for merging.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/118106663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/119060761",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6149#issuecomment-119060761",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6149",
    "id": 119060761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTA2MDc2MQ==",
    "user": {
      "login": "ajweiss",
      "id": 430315,
      "node_id": "MDQ6VXNlcjQzMDMxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/430315?u=1f49edbe9a1dee0adfa6af5328bef874c9cc4963&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajweiss",
      "html_url": "https://github.com/ajweiss",
      "followers_url": "https://api.github.com/users/ajweiss/followers",
      "following_url": "https://api.github.com/users/ajweiss/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajweiss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajweiss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajweiss/subscriptions",
      "organizations_url": "https://api.github.com/users/ajweiss/orgs",
      "repos_url": "https://api.github.com/users/ajweiss/repos",
      "events_url": "https://api.github.com/users/ajweiss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajweiss/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-07T03:28:42Z",
    "updated_at": "2015-07-07T03:28:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nits addressed and rebased.  Waiting for Travis... (which appears to be attempting to build the whole depends tree?)\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/119060761/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/119061360",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6149#issuecomment-119061360",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6149",
    "id": 119061360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTA2MTM2MA==",
    "user": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?u=0b02049ec38b6bb7d55c5c66d9bbeb0d4b822129&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-07T03:30:02Z",
    "updated_at": "2015-07-07T03:30:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "lightly tested ACK\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/119061360/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/123778319",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6149#issuecomment-123778319",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6149",
    "id": 123778319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzc3ODMxOQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T16:20:27Z",
    "updated_at": "2015-07-22T16:20:27Z",
    "author_association": "MEMBER",
    "body": "Tested ACK\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/123778319/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31413929",
    "pull_request_review_id": null,
    "id": 31413929,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDEzOTI5",
    "diff_hunk": "@@ -167,23 +167,47 @@ instance_of_cinit;\n  */\n \n static boost::once_flag debugPrintInitFlag = BOOST_ONCE_INIT;\n+\n /**\n- * We use boost::call_once() to make sure these are initialized\n- * in a thread-safe manner the first time called:\n+ * We use boost::call_once() to make sure mutexDebugLog and\n+ * vMsgsBeforeOpenLog are initialized in a thread-safe manner.\n+ *\n+ * FIXME: fileout, mutexDebugLog and vMsgsBeforeOpenLog are leaked\n+ * on exit.  This is ugly, but will be cleaned up by the OS/libc.\n+ * When the shutdown sequence is fully audited and tested, explicit\n+ * destruction of these objects can be implemented.\n  */\n static FILE* fileout = NULL;\n static boost::mutex* mutexDebugLog = NULL;\n+static list<string> *vMsgsBeforeOpenLog;\n+\n+int LogWriteStr(const std::string &str)",
    "path": "src/util.cpp",
    "position": null,
    "original_position": 20,
    "commit_id": "27d760580456d206c5a02ef29797f296f510099c",
    "original_commit_id": "cd5ef8342b855c5556ced2f25c560cb435b3a2cc",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This function can be static\n",
    "created_at": "2015-06-01T10:18:52Z",
    "updated_at": "2015-07-07T01:56:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6149#discussion_r31413929",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6149",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31413929"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6149#discussion_r31413929"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6149"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31413929/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 184,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31413983",
    "pull_request_review_id": null,
    "id": 31413983,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDEzOTgz",
    "diff_hunk": "@@ -214,6 +238,24 @@ bool LogAcceptCategory(const char* category)\n     return true;\n }\n \n+std::string LogTimestampStr(const std::string &str)",
    "path": "src/util.cpp",
    "position": null,
    "original_position": 56,
    "commit_id": "27d760580456d206c5a02ef29797f296f510099c",
    "original_commit_id": "cd5ef8342b855c5556ced2f25c560cb435b3a2cc",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Function can be static\n",
    "created_at": "2015-06-01T10:19:50Z",
    "updated_at": "2015-07-07T01:56:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6149#discussion_r31413983",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6149",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31413983"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6149#discussion_r31413983"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6149"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31413983/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 241,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31414090",
    "pull_request_review_id": null,
    "id": 31414090,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDE0MDkw",
    "diff_hunk": "@@ -167,23 +167,47 @@ instance_of_cinit;\n  */\n \n static boost::once_flag debugPrintInitFlag = BOOST_ONCE_INIT;\n+\n /**\n- * We use boost::call_once() to make sure these are initialized\n- * in a thread-safe manner the first time called:\n+ * We use boost::call_once() to make sure mutexDebugLog and\n+ * vMsgsBeforeOpenLog are initialized in a thread-safe manner.\n+ *\n+ * FIXME: fileout, mutexDebugLog and vMsgsBeforeOpenLog are leaked\n+ * on exit.  This is ugly, but will be cleaned up by the OS/libc.\n+ * When the shutdown sequence is fully audited and tested, explicit\n+ * destruction of these objects can be implemented.\n  */\n static FILE* fileout = NULL;\n static boost::mutex* mutexDebugLog = NULL;\n+static list<string> *vMsgsBeforeOpenLog;\n+\n+int LogWriteStr(const std::string &str)",
    "path": "src/util.cpp",
    "position": null,
    "original_position": 20,
    "commit_id": "27d760580456d206c5a02ef29797f296f510099c",
    "original_commit_id": "cd5ef8342b855c5556ced2f25c560cb435b3a2cc",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Also I'd suggest to rename it to `FileWriteStr`, and pass in the `file` argument explicitly. This makes for a clearer utility function.\n",
    "created_at": "2015-06-01T10:22:08Z",
    "updated_at": "2015-07-07T01:56:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6149#discussion_r31414090",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6149",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31414090"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6149#discussion_r31414090"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6149"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31414090/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 184,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31414179",
    "pull_request_review_id": null,
    "id": 31414179,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDE0MTc5",
    "diff_hunk": "@@ -167,23 +167,47 @@ instance_of_cinit;\n  */\n \n static boost::once_flag debugPrintInitFlag = BOOST_ONCE_INIT;\n+\n /**\n- * We use boost::call_once() to make sure these are initialized\n- * in a thread-safe manner the first time called:\n+ * We use boost::call_once() to make sure mutexDebugLog and\n+ * vMsgsBeforeOpenLog are initialized in a thread-safe manner.\n+ *\n+ * FIXME: fileout, mutexDebugLog and vMsgsBeforeOpenLog are leaked\n+ * on exit.  This is ugly, but will be cleaned up by the OS/libc.\n+ * When the shutdown sequence is fully audited and tested, explicit\n+ * destruction of these objects can be implemented.\n  */\n static FILE* fileout = NULL;\n static boost::mutex* mutexDebugLog = NULL;\n+static list<string> *vMsgsBeforeOpenLog;\n+\n+int LogWriteStr(const std::string &str)\n+{\n+    return fwrite(str.data(), 1, str.size(), fileout);\n+}\n \n static void DebugPrintInit()\n {\n-    assert(fileout == NULL);\n     assert(mutexDebugLog == NULL);\n+    mutexDebugLog = new boost::mutex();\n+    vMsgsBeforeOpenLog = new list<string>;\n+}\n \n+void OpenDebugLog()\n+{\n+    boost::call_once(&DebugPrintInit, debugPrintInitFlag);\n+    boost::mutex::scoped_lock scoped_lock(*mutexDebugLog);\n+\n+    assert(fileout == NULL);\n     boost::filesystem::path pathDebug = GetDataDir() / \"debug.log\";\n     fileout = fopen(pathDebug.string().c_str(), \"a\");\n     if (fileout) setbuf(fileout, NULL); // unbuffered\n \n-    mutexDebugLog = new boost::mutex();\n+    // dump buffered messages from before we opened the log\n+    while (!vMsgsBeforeOpenLog->empty()) {\n+        LogWriteStr(vMsgsBeforeOpenLog->front());\n+        vMsgsBeforeOpenLog->pop_front();\n+    }",
    "path": "src/util.cpp",
    "position": null,
    "original_position": 48,
    "commit_id": "27d760580456d206c5a02ef29797f296f510099c",
    "original_commit_id": "cd5ef8342b855c5556ced2f25c560cb435b3a2cc",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could delete `vMsgsBeforeOpenLog` here and set it to NULL.\n",
    "created_at": "2015-06-01T10:23:59Z",
    "updated_at": "2015-07-07T01:56:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6149#discussion_r31414179",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6149",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31414179"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6149#discussion_r31414179"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6149"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31414179/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 211,
    "original_line": 210,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31414250",
    "pull_request_review_id": null,
    "id": 31414250,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDE0MjUw",
    "diff_hunk": "@@ -223,38 +265,35 @@ int LogPrintStr(const std::string &str)\n         ret = fwrite(str.data(), 1, str.size(), stdout);\n         fflush(stdout);\n     }\n-    else if (fPrintToDebugLog && AreBaseParamsConfigured())\n+    else if (fPrintToDebugLog)\n     {\n-        static bool fStartedNewLine = true;\n         boost::call_once(&DebugPrintInit, debugPrintInitFlag);\n-\n-        if (fileout == NULL)\n-            return ret;\n-\n         boost::mutex::scoped_lock scoped_lock(*mutexDebugLog);\n \n-        // reopen the log file, if requested\n-        if (fReopenDebugLog) {\n-            fReopenDebugLog = false;\n-            boost::filesystem::path pathDebug = GetDataDir() / \"debug.log\";\n-            if (freopen(pathDebug.string().c_str(),\"a\",fileout) != NULL)\n-                setbuf(fileout, NULL); // unbuffered\n-        }\n+        string strTimestamped = LogTimestampStr(str);\n \n-        // Debug print useful for profiling\n-        if (fLogTimestamps && fStartedNewLine)\n-            ret += fprintf(fileout, \"%s \", DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", GetTime()).c_str());\n-        if (!str.empty() && str[str.size()-1] == '\\n')\n-            fStartedNewLine = true;\n+        // buffer if we haven't opened the log yet\n+        if (fileout == NULL) {\n+            ret = strTimestamped.length();",
    "path": "src/util.cpp",
    "position": null,
    "original_position": 108,
    "commit_id": "27d760580456d206c5a02ef29797f296f510099c",
    "original_commit_id": "cd5ef8342b855c5556ced2f25c560cb435b3a2cc",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Just to be sure: add assertion that vMsgsBeforeOpenLog is not null\n",
    "created_at": "2015-06-01T10:25:11Z",
    "updated_at": "2015-07-07T01:56:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6149#discussion_r31414250",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6149",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31414250"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6149#discussion_r31414250"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6149"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31414250/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 291,
    "original_line": 277,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31414428",
    "pull_request_review_id": null,
    "id": 31414428,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDE0NDI4",
    "diff_hunk": "@@ -214,6 +238,24 @@ bool LogAcceptCategory(const char* category)\n     return true;\n }\n \n+std::string LogTimestampStr(const std::string &str)",
    "path": "src/util.cpp",
    "position": null,
    "original_position": 56,
    "commit_id": "27d760580456d206c5a02ef29797f296f510099c",
    "original_commit_id": "cd5ef8342b855c5556ced2f25c560cb435b3a2cc",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'd suggest passing in `bool& fStartedNewLine` explicitly, so that it can be defined at the caller site. An utility function with internal state is impossible to use from different contexts (not that it matters at this point, but to avoid surprises in the future).\n",
    "created_at": "2015-06-01T10:28:59Z",
    "updated_at": "2015-07-07T01:56:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6149#discussion_r31414428",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6149",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31414428"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6149#discussion_r31414428"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6149"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31414428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 241,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31414525",
    "pull_request_review_id": null,
    "id": 31414525,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDE0NTI1",
    "diff_hunk": "@@ -223,38 +265,35 @@ int LogPrintStr(const std::string &str)\n         ret = fwrite(str.data(), 1, str.size(), stdout);\n         fflush(stdout);\n     }\n-    else if (fPrintToDebugLog && AreBaseParamsConfigured())\n+    else if (fPrintToDebugLog)\n     {\n-        static bool fStartedNewLine = true;\n         boost::call_once(&DebugPrintInit, debugPrintInitFlag);\n-\n-        if (fileout == NULL)\n-            return ret;\n-\n         boost::mutex::scoped_lock scoped_lock(*mutexDebugLog);\n \n-        // reopen the log file, if requested\n-        if (fReopenDebugLog) {\n-            fReopenDebugLog = false;\n-            boost::filesystem::path pathDebug = GetDataDir() / \"debug.log\";\n-            if (freopen(pathDebug.string().c_str(),\"a\",fileout) != NULL)\n-                setbuf(fileout, NULL); // unbuffered\n-        }\n+        string strTimestamped = LogTimestampStr(str);\n \n-        // Debug print useful for profiling\n-        if (fLogTimestamps && fStartedNewLine)\n-            ret += fprintf(fileout, \"%s \", DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", GetTime()).c_str());\n-        if (!str.empty() && str[str.size()-1] == '\\n')\n-            fStartedNewLine = true;\n+        // buffer if we haven't opened the log yet\n+        if (fileout == NULL) {\n+            ret = strTimestamped.length();\n+            vMsgsBeforeOpenLog->push_back(strTimestamped);\n+        }\n         else\n-            fStartedNewLine = false;\n-\n-        ret = fwrite(str.data(), 1, str.size(), fileout);\n+        {\n+            // reopen the log file, if requested\n+            if (fReopenDebugLog) {\n+                fReopenDebugLog = false;\n+                boost::filesystem::path pathDebug = GetDataDir() / \"debug.log\";\n+                if (freopen(pathDebug.string().c_str(),\"a\",fileout) != NULL)\n+                    setbuf(fileout, NULL); // unbuffered\n+            }\n+\n+            ret += LogWriteStr(strTimestamped);",
    "path": "src/util.cpp",
    "position": null,
    "original_position": 124,
    "commit_id": "27d760580456d206c5a02ef29797f296f510099c",
    "original_commit_id": "cd5ef8342b855c5556ced2f25c560cb435b3a2cc",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Any reason to use `ret +=` here, and `ret =` in the other fork of the if()?\n",
    "created_at": "2015-06-01T10:30:51Z",
    "updated_at": "2015-07-07T01:56:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6149#discussion_r31414525",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6149",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31414525"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6149#discussion_r31414525"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6149"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31414525/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 290,
    "side": "RIGHT"
  }
]