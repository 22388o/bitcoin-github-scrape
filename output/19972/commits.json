[
  {
    "sha": "5a9ee0869b0b722ebfcdaabaefba6376522b2eeb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YTllZTA4NjliMGI3MjJlYmZjZGFhYmFlZmJhNjM3NjUyMmIyZWVi",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-09-18T13:47:00Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-12-16T13:00:47Z"
      },
      "message": "tests: Add fuzzing harness for node eviction logic",
      "tree": {
        "sha": "e7908a5f985a15d31f9f7e6cbb7f4450014805dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e7908a5f985a15d31f9f7e6cbb7f4450014805dc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a9ee0869b0b722ebfcdaabaefba6376522b2eeb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a9ee0869b0b722ebfcdaabaefba6376522b2eeb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5a9ee0869b0b722ebfcdaabaefba6376522b2eeb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a9ee0869b0b722ebfcdaabaefba6376522b2eeb/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b440c33179e777bfebb8c12840e06ea691a4868f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b440c33179e777bfebb8c12840e06ea691a4868f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b440c33179e777bfebb8c12840e06ea691a4868f"
      }
    ],
    "stats": {
      "total": 45,
      "additions": 45,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f7d5a24b5e67dfaf137545f963b8b8b8fe690765",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9ee0869b0b722ebfcdaabaefba6376522b2eeb/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9ee0869b0b722ebfcdaabaefba6376522b2eeb/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=5a9ee0869b0b722ebfcdaabaefba6376522b2eeb",
        "patch": "@@ -233,6 +233,7 @@ test_fuzz_fuzz_SOURCES = \\\n  test/fuzz/net.cpp \\\n  test/fuzz/net_permissions.cpp \\\n  test/fuzz/netaddress.cpp \\\n+ test/fuzz/node_eviction.cpp \\\n  test/fuzz/p2p_transport_deserializer.cpp \\\n  test/fuzz/parse_hd_keypath.cpp \\\n  test/fuzz/parse_iso8601.cpp \\"
      },
      {
        "sha": "aaebe83c0ac57058e5022265ce6fb56a2ecc5df6",
        "filename": "src/test/fuzz/node_eviction.cpp",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9ee0869b0b722ebfcdaabaefba6376522b2eeb/src/test/fuzz/node_eviction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9ee0869b0b722ebfcdaabaefba6376522b2eeb/src/test/fuzz/node_eviction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/node_eviction.cpp?ref=5a9ee0869b0b722ebfcdaabaefba6376522b2eeb",
        "patch": "@@ -0,0 +1,44 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <net.h>\n+#include <optional.h>\n+#include <protocol.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <algorithm>\n+#include <cassert>\n+#include <cstdint>\n+#include <optional>\n+#include <vector>\n+\n+FUZZ_TARGET(node_eviction)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    std::vector<NodeEvictionCandidate> eviction_candidates;\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        eviction_candidates.push_back({\n+            fuzzed_data_provider.ConsumeIntegral<NodeId>(),\n+            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n+            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n+            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n+            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n+            fuzzed_data_provider.ConsumeBool(),\n+            fuzzed_data_provider.ConsumeBool(),\n+            fuzzed_data_provider.ConsumeBool(),\n+            fuzzed_data_provider.ConsumeIntegral<uint64_t>(),\n+            fuzzed_data_provider.ConsumeBool(),\n+            fuzzed_data_provider.ConsumeBool(),\n+        });\n+    }\n+    // Make a copy since eviction_candidates may be in some valid but otherwise\n+    // indeterminate state after the SelectNodeToEvict(&&) call.\n+    const std::vector<NodeEvictionCandidate> eviction_candidates_copy = eviction_candidates;\n+    const Optional<NodeId> node_to_evict = SelectNodeToEvict(std::move(eviction_candidates));\n+    if (node_to_evict) {\n+        assert(std::any_of(eviction_candidates_copy.begin(), eviction_candidates_copy.end(), [&node_to_evict](const NodeEvictionCandidate& eviction_candidate) { return *node_to_evict == eviction_candidate.id; }));\n+    }\n+}"
      }
    ]
  }
]