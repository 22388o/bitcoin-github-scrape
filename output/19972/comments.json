[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695006726",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19972#issuecomment-695006726",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19972",
    "id": 695006726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTAwNjcyNg==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-18T17:59:33Z",
    "updated_at": "2020-09-18T17:59:33Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, thanks for working on this. Will review.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695006726/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695212998",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19972#issuecomment-695212998",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19972",
    "id": 695212998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTIxMjk5OA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-19T13:23:33Z",
    "updated_at": "2020-12-16T19:59:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19415 (net: Make DNS lookup mockable, add fuzzing harness by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695212998/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695815064",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19972#issuecomment-695815064",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19972",
    "id": 695815064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTgxNTA2NA==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-20T17:44:53Z",
    "updated_at": "2020-09-20T17:44:53Z",
    "author_association": "MEMBER",
    "body": "(am running the node with this logging)\r\n```diff\r\n+++ b/src/net.cpp\r\n@@ -972,6 +972,7 @@ bool CConnman::AttemptToEvictConnection()\r\n \r\n     const Optional<NodeEvictionCandidate> node_to_evict = SelectNodeToEvict(vEvictionCandidates);\r\n     if (!node_to_evict) {\r\n+        LogPrintf(\"ATEC: no node to evict returned by SelectNodeToEvict()\\n\");\r\n         return false;\r\n     }\r\n     const NodeId evicted = node_to_evict->id;\r\n@@ -979,9 +980,12 @@ bool CConnman::AttemptToEvictConnection()\r\n     for (CNode* pnode : vNodes) {\r\n         if (pnode->GetId() == evicted) {\r\n             pnode->fDisconnect = true;\r\n+            LogPrintf(\"ATEC: node to evict FOUND in vEvictioncandidates and disconnected: %s\\n\", evicted);\r\n             return true;\r\n         }\r\n     }\r\n+    LogPrintf(\"ATEC: node to evict selected but not found in vEvictioncandidates: %s\\n\", evicted);\r\n+\r\n     return false;\r\n }\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695815064/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/712664052",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19972#issuecomment-712664052",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19972",
    "id": 712664052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjY2NDA1Mg==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-20T07:49:14Z",
    "updated_at": "2020-10-20T07:49:14Z",
    "author_association": "MEMBER",
    "body": "A month has passed since reviewing, so a gentle bump for reviewers.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/712664052/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739567806",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19972#issuecomment-739567806",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19972",
    "id": 739567806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTU2NzgwNg==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-06T21:33:49Z",
    "updated_at": "2020-12-06T21:33:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Marking this as draft since it depends on the changes in #20477 (\"test/net: Add unit testing of node eviction logic\") :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739567806/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746240735",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19972#issuecomment-746240735",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19972",
    "id": 746240735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NjI0MDczNQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-16T12:49:23Z",
    "updated_at": "2020-12-16T12:49:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased on top of `master` now that the prerequisite #20477 has been merged.\r\n\r\nThis PR is now touches only the fuzz tests and should hopefully be easy to review :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746240735/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746272108",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19972#issuecomment-746272108",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19972",
    "id": 746272108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NjI3MjEwOA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-16T13:17:15Z",
    "updated_at": "2020-12-16T13:17:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Aren't the code paths already exercised through the unit test?\r\n\r\nThere are differences: the unit test clamp the eviction candidate parameters (like `static_cast<int64_t>(random_context.randrange(100)) `) in order to trigger duplicate values, whereas this fuzzing harness can span the entire input space (like `fuzzed_data_provider.ConsumeIntegral<int64_t>()`). The latter is good for catching integer overflows and similar stuff resulting from \"extreme\" inputs.\r\n\r\nAlso the unit testing performs a couple of thousand test eviction rounds whereas the fuzzing test runs indefinitely :)\r\n\r\nI think it makes sense to _both_ unit test and fuzz test `SelectNodeToEvict` since that function is of extreme importance :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746272108/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746276624",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19972#issuecomment-746276624",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19972",
    "id": 746276624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NjI3NjYyNA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-16T13:20:50Z",
    "updated_at": "2020-12-16T13:20:50Z",
    "author_association": "MEMBER",
    "body": "cr ACK 5a9ee0869b0b722ebfcdaabaefba6376522b2eeb",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746276624/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517733291",
    "pull_request_review_id": 523858884,
    "id": 517733291,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzczMzI5MQ==",
    "diff_hunk": "@@ -874,43 +876,7 @@ static void EraseLastKElements(std::vector<T> &elements, Comparator comparator,\n     elements.erase(elements.end() - eraseSize, elements.end());\n }\n \n-/** Try to find a connection to evict when the node is full.\n- *  Extreme care must be taken to avoid opening the node to attacker\n- *   triggered network partitioning.\n- *  The strategy used here is to protect a small number of peers\n- *   for each of several distinct characteristics which are difficult\n- *   to forge.  In order to partition a node the attacker must be\n- *   simultaneously better at all of them than honest peers.\n- */\n-bool CConnman::AttemptToEvictConnection()\n-{\n-    std::vector<NodeEvictionCandidate> vEvictionCandidates;\n-    {\n-        LOCK(cs_vNodes);\n-\n-        for (const CNode* node : vNodes) {\n-            if (node->HasPermission(PF_NOBAN))\n-                continue;\n-            if (!node->IsInboundConn())\n-                continue;\n-            if (node->fDisconnect)\n-                continue;\n-            bool peer_relay_txes = false;\n-            bool peer_filter_not_null = false;\n-            if (node->m_tx_relay != nullptr) {\n-                LOCK(node->m_tx_relay->cs_filter);\n-                peer_relay_txes = node->m_tx_relay->fRelayTxes;\n-                peer_filter_not_null = node->m_tx_relay->pfilter != nullptr;\n-            }\n-            NodeEvictionCandidate candidate = {node->GetId(), node->nTimeConnected, node->nMinPingUsecTime,\n-                                               node->nLastBlockTime, node->nLastTXTime,\n-                                               HasAllDesirableServiceFlags(node->nServices),\n-                                               peer_relay_txes, peer_filter_not_null, node->addr, node->nKeyedNetGroup,\n-                                               node->m_prefer_evict, node->addr.IsLocal()};\n-            vEvictionCandidates.push_back(candidate);\n-        }\n-    }\n-\n+NODISCARD Optional<NodeEvictionCandidate> SelectNodeToEvict(std::vector<NodeEvictionCandidate> vEvictionCandidates) {",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 57,
    "commit_id": "5a9ee0869b0b722ebfcdaabaefba6376522b2eeb",
    "original_commit_id": "818dd2a04da1ae7329c58a79a4fade5ec62c549d",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: brace on the next line.",
    "created_at": "2020-11-05T01:44:52Z",
    "updated_at": "2020-12-16T13:01:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19972#discussion_r517733291",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19972",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517733291"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19972#discussion_r517733291"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19972"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517733291/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 879,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517734066",
    "pull_request_review_id": 523858884,
    "id": 517734066,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzczNDA2Ng==",
    "diff_hunk": "@@ -874,43 +876,7 @@ static void EraseLastKElements(std::vector<T> &elements, Comparator comparator,\n     elements.erase(elements.end() - eraseSize, elements.end());\n }\n \n-/** Try to find a connection to evict when the node is full.\n- *  Extreme care must be taken to avoid opening the node to attacker\n- *   triggered network partitioning.\n- *  The strategy used here is to protect a small number of peers\n- *   for each of several distinct characteristics which are difficult\n- *   to forge.  In order to partition a node the attacker must be\n- *   simultaneously better at all of them than honest peers.\n- */\n-bool CConnman::AttemptToEvictConnection()\n-{\n-    std::vector<NodeEvictionCandidate> vEvictionCandidates;\n-    {\n-        LOCK(cs_vNodes);\n-\n-        for (const CNode* node : vNodes) {\n-            if (node->HasPermission(PF_NOBAN))\n-                continue;\n-            if (!node->IsInboundConn())\n-                continue;\n-            if (node->fDisconnect)\n-                continue;\n-            bool peer_relay_txes = false;\n-            bool peer_filter_not_null = false;\n-            if (node->m_tx_relay != nullptr) {\n-                LOCK(node->m_tx_relay->cs_filter);\n-                peer_relay_txes = node->m_tx_relay->fRelayTxes;\n-                peer_filter_not_null = node->m_tx_relay->pfilter != nullptr;\n-            }\n-            NodeEvictionCandidate candidate = {node->GetId(), node->nTimeConnected, node->nMinPingUsecTime,\n-                                               node->nLastBlockTime, node->nLastTXTime,\n-                                               HasAllDesirableServiceFlags(node->nServices),\n-                                               peer_relay_txes, peer_filter_not_null, node->addr, node->nKeyedNetGroup,\n-                                               node->m_prefer_evict, node->addr.IsLocal()};\n-            vEvictionCandidates.push_back(candidate);\n-        }\n-    }\n-\n+NODISCARD Optional<NodeEvictionCandidate> SelectNodeToEvict(std::vector<NodeEvictionCandidate> vEvictionCandidates) {",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 57,
    "commit_id": "5a9ee0869b0b722ebfcdaabaefba6376522b2eeb",
    "original_commit_id": "818dd2a04da1ae7329c58a79a4fade5ec62c549d",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This will cause an unnecessary copy of the `vEvictionCandidates` vector when invoking. \r\n\r\nAs the caller doesn't need its version anymore after the call, it's possible to change this parameter to `std::vector<NodeEvictionCandidate>&&`, and call it with `SelectNodeToEvict(std::move(vEvictionCandidates))`.",
    "created_at": "2020-11-05T01:47:34Z",
    "updated_at": "2020-12-16T13:01:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19972#discussion_r517734066",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19972",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517734066"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19972#discussion_r517734066"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19972"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517734066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 879,
    "side": "RIGHT",
    "in_reply_to_id": 517733291
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517735246",
    "pull_request_review_id": 523858884,
    "id": 517735246,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzczNTI0Ng==",
    "diff_hunk": "@@ -0,0 +1,40 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <net.h>\n+#include <optional.h>\n+#include <protocol.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <algorithm>\n+#include <cassert>\n+#include <cstdint>\n+#include <optional>\n+#include <vector>\n+\n+NODISCARD Optional<NodeEvictionCandidate> SelectNodeToEvict(std::vector<NodeEvictionCandidate> vEvictionCandidates);",
    "path": "src/test/fuzz/node_eviction.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "5a9ee0869b0b722ebfcdaabaefba6376522b2eeb",
    "original_commit_id": "c57cabdea44cab2a9dd2f0443f7a6b28cb41e7b4",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Since this file is already including `net.h`, I'd prefer seeing this declaration moved there, rather than forward declaring it (as it risks going out of sync with the implementation here).",
    "created_at": "2020-11-05T01:51:34Z",
    "updated_at": "2020-12-16T13:01:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19972#discussion_r517735246",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19972",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517735246"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19972#discussion_r517735246"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19972"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517735246/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 18,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517735700",
    "pull_request_review_id": 523858884,
    "id": 517735700,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzczNTcwMA==",
    "diff_hunk": "@@ -0,0 +1,40 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <net.h>\n+#include <optional.h>\n+#include <protocol.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <algorithm>\n+#include <cassert>\n+#include <cstdint>\n+#include <optional>\n+#include <vector>\n+\n+NODISCARD Optional<NodeEvictionCandidate> SelectNodeToEvict(std::vector<NodeEvictionCandidate> vEvictionCandidates);\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    std::vector<NodeEvictionCandidate> eviction_candidates;\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        const std::optional<CAddress> address = ConsumeDeserializable<CAddress>(fuzzed_data_provider);\n+        if (!address) {\n+            break;\n+        }\n+        eviction_candidates.push_back({fuzzed_data_provider.ConsumeIntegral<NodeId>(), fuzzed_data_provider.ConsumeIntegral<int64_t>(), fuzzed_data_provider.ConsumeIntegral<int64_t>(), fuzzed_data_provider.ConsumeIntegral<int64_t>(), fuzzed_data_provider.ConsumeIntegral<int64_t>(), fuzzed_data_provider.ConsumeBool(), fuzzed_data_provider.ConsumeBool(), fuzzed_data_provider.ConsumeBool(), *address, fuzzed_data_provider.ConsumeIntegral<uint64_t>(), fuzzed_data_provider.ConsumeBool(), fuzzed_data_provider.ConsumeBool()});\n+    }\n+    const Optional<NodeEvictionCandidate> node_to_evict = SelectNodeToEvict(eviction_candidates);\n+    if (node_to_evict) {\n+        assert(std::any_of(eviction_candidates.begin(), eviction_candidates.end(), [&node_to_evict](const NodeEvictionCandidate& eviction_candidate) { return node_to_evict->id == eviction_candidate.id; }));\n+    }\n+    // eviction_candidates.empty() implies !node_to_evict, but !node_to_evict\n+    // does not imply eviction_candidates.empty()).\n+    if (eviction_candidates.empty()) {",
    "path": "src/test/fuzz/node_eviction.cpp",
    "position": null,
    "original_position": 37,
    "commit_id": "5a9ee0869b0b722ebfcdaabaefba6376522b2eeb",
    "original_commit_id": "c57cabdea44cab2a9dd2f0443f7a6b28cb41e7b4",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I believe this test is redundant; if eviction_candidates is empty but `node_to_evict` isn't, the `std::any_of` call above must fail.",
    "created_at": "2020-11-05T01:53:17Z",
    "updated_at": "2020-12-16T13:01:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19972#discussion_r517735700",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19972",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517735700"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19972#discussion_r517735700"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19972"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517735700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 37,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518131562",
    "pull_request_review_id": 524368767,
    "id": 518131562,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEzMTU2Mg==",
    "diff_hunk": "@@ -0,0 +1,40 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <net.h>\n+#include <optional.h>\n+#include <protocol.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <algorithm>\n+#include <cassert>\n+#include <cstdint>\n+#include <optional>\n+#include <vector>\n+\n+NODISCARD Optional<NodeEvictionCandidate> SelectNodeToEvict(std::vector<NodeEvictionCandidate> vEvictionCandidates);",
    "path": "src/test/fuzz/node_eviction.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "5a9ee0869b0b722ebfcdaabaefba6376522b2eeb",
    "original_commit_id": "c57cabdea44cab2a9dd2f0443f7a6b28cb41e7b4",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Makes sense. Feedback addressed. Thanks!",
    "created_at": "2020-11-05T15:19:59Z",
    "updated_at": "2020-12-16T13:01:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19972#discussion_r518131562",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19972",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518131562"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19972#discussion_r518131562"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19972"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518131562/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 18,
    "side": "RIGHT",
    "in_reply_to_id": 517735246
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518131800",
    "pull_request_review_id": 524369091,
    "id": 518131800,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEzMTgwMA==",
    "diff_hunk": "@@ -0,0 +1,40 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <net.h>\n+#include <optional.h>\n+#include <protocol.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <algorithm>\n+#include <cassert>\n+#include <cstdint>\n+#include <optional>\n+#include <vector>\n+\n+NODISCARD Optional<NodeEvictionCandidate> SelectNodeToEvict(std::vector<NodeEvictionCandidate> vEvictionCandidates);\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    std::vector<NodeEvictionCandidate> eviction_candidates;\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        const std::optional<CAddress> address = ConsumeDeserializable<CAddress>(fuzzed_data_provider);\n+        if (!address) {\n+            break;\n+        }\n+        eviction_candidates.push_back({fuzzed_data_provider.ConsumeIntegral<NodeId>(), fuzzed_data_provider.ConsumeIntegral<int64_t>(), fuzzed_data_provider.ConsumeIntegral<int64_t>(), fuzzed_data_provider.ConsumeIntegral<int64_t>(), fuzzed_data_provider.ConsumeIntegral<int64_t>(), fuzzed_data_provider.ConsumeBool(), fuzzed_data_provider.ConsumeBool(), fuzzed_data_provider.ConsumeBool(), *address, fuzzed_data_provider.ConsumeIntegral<uint64_t>(), fuzzed_data_provider.ConsumeBool(), fuzzed_data_provider.ConsumeBool()});\n+    }\n+    const Optional<NodeEvictionCandidate> node_to_evict = SelectNodeToEvict(eviction_candidates);\n+    if (node_to_evict) {\n+        assert(std::any_of(eviction_candidates.begin(), eviction_candidates.end(), [&node_to_evict](const NodeEvictionCandidate& eviction_candidate) { return node_to_evict->id == eviction_candidate.id; }));\n+    }\n+    // eviction_candidates.empty() implies !node_to_evict, but !node_to_evict\n+    // does not imply eviction_candidates.empty()).\n+    if (eviction_candidates.empty()) {",
    "path": "src/test/fuzz/node_eviction.cpp",
    "position": null,
    "original_position": 37,
    "commit_id": "5a9ee0869b0b722ebfcdaabaefba6376522b2eeb",
    "original_commit_id": "c57cabdea44cab2a9dd2f0443f7a6b28cb41e7b4",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good catch. Feedback addressed. Thanks!",
    "created_at": "2020-11-05T15:20:18Z",
    "updated_at": "2020-12-16T13:01:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19972#discussion_r518131800",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19972",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518131800"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19972#discussion_r518131800"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19972"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518131800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 37,
    "side": "RIGHT",
    "in_reply_to_id": 517735700
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518136772",
    "pull_request_review_id": 524375840,
    "id": 518136772,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEzNjc3Mg==",
    "diff_hunk": "@@ -874,43 +876,7 @@ static void EraseLastKElements(std::vector<T> &elements, Comparator comparator,\n     elements.erase(elements.end() - eraseSize, elements.end());\n }\n \n-/** Try to find a connection to evict when the node is full.\n- *  Extreme care must be taken to avoid opening the node to attacker\n- *   triggered network partitioning.\n- *  The strategy used here is to protect a small number of peers\n- *   for each of several distinct characteristics which are difficult\n- *   to forge.  In order to partition a node the attacker must be\n- *   simultaneously better at all of them than honest peers.\n- */\n-bool CConnman::AttemptToEvictConnection()\n-{\n-    std::vector<NodeEvictionCandidate> vEvictionCandidates;\n-    {\n-        LOCK(cs_vNodes);\n-\n-        for (const CNode* node : vNodes) {\n-            if (node->HasPermission(PF_NOBAN))\n-                continue;\n-            if (!node->IsInboundConn())\n-                continue;\n-            if (node->fDisconnect)\n-                continue;\n-            bool peer_relay_txes = false;\n-            bool peer_filter_not_null = false;\n-            if (node->m_tx_relay != nullptr) {\n-                LOCK(node->m_tx_relay->cs_filter);\n-                peer_relay_txes = node->m_tx_relay->fRelayTxes;\n-                peer_filter_not_null = node->m_tx_relay->pfilter != nullptr;\n-            }\n-            NodeEvictionCandidate candidate = {node->GetId(), node->nTimeConnected, node->nMinPingUsecTime,\n-                                               node->nLastBlockTime, node->nLastTXTime,\n-                                               HasAllDesirableServiceFlags(node->nServices),\n-                                               peer_relay_txes, peer_filter_not_null, node->addr, node->nKeyedNetGroup,\n-                                               node->m_prefer_evict, node->addr.IsLocal()};\n-            vEvictionCandidates.push_back(candidate);\n-        }\n-    }\n-\n+NODISCARD Optional<NodeEvictionCandidate> SelectNodeToEvict(std::vector<NodeEvictionCandidate> vEvictionCandidates) {",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 57,
    "commit_id": "5a9ee0869b0b722ebfcdaabaefba6376522b2eeb",
    "original_commit_id": "818dd2a04da1ae7329c58a79a4fade5ec62c549d",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Feedback addressed.\r\n\r\nAlso reduced the scope of `std::vector<NodeEvictionCandidate> vEvictionCandidates` to make reasoning about the life-time easier.",
    "created_at": "2020-11-05T15:26:58Z",
    "updated_at": "2020-12-16T13:01:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19972#discussion_r518136772",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19972",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518136772"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19972#discussion_r518136772"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19972"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518136772/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 879,
    "side": "RIGHT",
    "in_reply_to_id": 517733291
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544275726",
    "pull_request_review_id": 553657936,
    "id": 544275726,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI3NTcyNg==",
    "diff_hunk": "@@ -0,0 +1,32 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <net.h>\n+#include <optional.h>\n+#include <protocol.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <algorithm>\n+#include <cassert>\n+#include <cstdint>\n+#include <optional>\n+#include <vector>\n+\n+FUZZ_TARGET(node_eviction)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    std::vector<NodeEvictionCandidate> eviction_candidates;\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        eviction_candidates.push_back({fuzzed_data_provider.ConsumeIntegral<NodeId>(), fuzzed_data_provider.ConsumeIntegral<int64_t>(), fuzzed_data_provider.ConsumeIntegral<int64_t>(), fuzzed_data_provider.ConsumeIntegral<int64_t>(), fuzzed_data_provider.ConsumeIntegral<int64_t>(), fuzzed_data_provider.ConsumeBool(), fuzzed_data_provider.ConsumeBool(), fuzzed_data_provider.ConsumeBool(), fuzzed_data_provider.ConsumeIntegral<uint64_t>(), fuzzed_data_provider.ConsumeBool(), fuzzed_data_provider.ConsumeBool()});",
    "path": "src/test/fuzz/node_eviction.cpp",
    "position": null,
    "original_position": 23,
    "commit_id": "5a9ee0869b0b722ebfcdaabaefba6376522b2eeb",
    "original_commit_id": "42321f469f3e618cffd04e5014b3f3186de32ccd",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "For the sanity of future devs, please add a trailing comma",
    "created_at": "2020-12-16T12:55:02Z",
    "updated_at": "2020-12-16T13:01:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19972#discussion_r544275726",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19972",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544275726"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19972#discussion_r544275726"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19972"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544275726/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 23,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544279564",
    "pull_request_review_id": 553662500,
    "id": 544279564,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI3OTU2NA==",
    "diff_hunk": "@@ -0,0 +1,32 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <net.h>\n+#include <optional.h>\n+#include <protocol.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <algorithm>\n+#include <cassert>\n+#include <cstdint>\n+#include <optional>\n+#include <vector>\n+\n+FUZZ_TARGET(node_eviction)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    std::vector<NodeEvictionCandidate> eviction_candidates;\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        eviction_candidates.push_back({fuzzed_data_provider.ConsumeIntegral<NodeId>(), fuzzed_data_provider.ConsumeIntegral<int64_t>(), fuzzed_data_provider.ConsumeIntegral<int64_t>(), fuzzed_data_provider.ConsumeIntegral<int64_t>(), fuzzed_data_provider.ConsumeIntegral<int64_t>(), fuzzed_data_provider.ConsumeBool(), fuzzed_data_provider.ConsumeBool(), fuzzed_data_provider.ConsumeBool(), fuzzed_data_provider.ConsumeIntegral<uint64_t>(), fuzzed_data_provider.ConsumeBool(), fuzzed_data_provider.ConsumeBool()});",
    "path": "src/test/fuzz/node_eviction.cpp",
    "position": null,
    "original_position": 23,
    "commit_id": "5a9ee0869b0b722ebfcdaabaefba6376522b2eeb",
    "original_commit_id": "42321f469f3e618cffd04e5014b3f3186de32ccd",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks! Fixed!",
    "created_at": "2020-12-16T13:01:15Z",
    "updated_at": "2020-12-16T13:01:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19972#discussion_r544279564",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19972",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544279564"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19972#discussion_r544279564"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19972"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544279564/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 23,
    "side": "RIGHT",
    "in_reply_to_id": 544275726
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548923217",
    "pull_request_review_id": 558840549,
    "id": 548923217,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODkyMzIxNw==",
    "diff_hunk": "@@ -0,0 +1,44 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <net.h>\n+#include <optional.h>\n+#include <protocol.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <algorithm>\n+#include <cassert>\n+#include <cstdint>\n+#include <optional>\n+#include <vector>\n+\n+FUZZ_TARGET(node_eviction)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    std::vector<NodeEvictionCandidate> eviction_candidates;\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        eviction_candidates.push_back({\n+            fuzzed_data_provider.ConsumeIntegral<NodeId>(),\n+            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n+            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n+            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n+            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n+            fuzzed_data_provider.ConsumeBool(),\n+            fuzzed_data_provider.ConsumeBool(),\n+            fuzzed_data_provider.ConsumeBool(),\n+            fuzzed_data_provider.ConsumeIntegral<uint64_t>(),\n+            fuzzed_data_provider.ConsumeBool(),\n+            fuzzed_data_provider.ConsumeBool(),",
    "path": "src/test/fuzz/node_eviction.cpp",
    "position": 34,
    "original_position": 34,
    "commit_id": "5a9ee0869b0b722ebfcdaabaefba6376522b2eeb",
    "original_commit_id": "5a9ee0869b0b722ebfcdaabaefba6376522b2eeb",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Following this merge I needed to update this fuzzer for #20197 and found the documentation for each data member previously added in `net_tests.cpp` both useful and missing here. Added it in #20197.",
    "created_at": "2020-12-25T23:48:48Z",
    "updated_at": "2020-12-25T23:50:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19972#discussion_r548923217",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19972",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548923217"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19972#discussion_r548923217"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19972"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548923217/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 34,
    "original_line": 34,
    "side": "RIGHT"
  }
]