jonatack,2020-09-18 17:59:33,"Concept ACK, thanks for working on this. Will review.",https://github.com/bitcoin/bitcoin/pull/19972#issuecomment-695006726,695006726,
DrahtBot,2020-09-19 13:23:33,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19415 (net: Make DNS lookup mockable, add fuzzing harness by practicalswift)\n\nIf you consider this pull request importa",https://github.com/bitcoin/bitcoin/pull/19972#issuecomment-695212998,695212998,
jonatack,2020-09-20 17:44:53,"(am running the node with this logging)\n```diff\n+++ b/src/net.cpp\n@@ -972,6 +972,7 @@ bool CConnman::AttemptToEvictConnection()\n \n     const Optional<NodeEvictionCandidate> node_to_evict = SelectNodeToEvict(vEvictionCandidates);\n     if (!node_to_evict) {\n+        LogPrintf(""ATEC: no node to evict returned by SelectNodeToEvict()\n"");\n         return false;\n     }\n     const Nod",https://github.com/bitcoin/bitcoin/pull/19972#issuecomment-695815064,695815064,
jonatack,2020-10-20 07:49:14,"A month has passed since reviewing, so a gentle bump for reviewers.",https://github.com/bitcoin/bitcoin/pull/19972#issuecomment-712664052,712664052,
practicalswift,2020-12-06 21:33:49,"Marking this as draft since it depends on the changes in #20477 (""test/net: Add unit testing of node eviction logic"") :)",https://github.com/bitcoin/bitcoin/pull/19972#issuecomment-739567806,739567806,
practicalswift,2020-12-16 12:49:23,"Rebased on top of `master` now that the prerequisite #20477 has been merged.\n\nThis PR is now touches only the fuzz tests and should hopefully be easy to review :)",https://github.com/bitcoin/bitcoin/pull/19972#issuecomment-746240735,746240735,
practicalswift,2020-12-16 13:17:15,"> Aren't the code paths already exercised through the unit test?\n\nThere are differences: the unit test clamp the eviction candidate parameters (like `static_cast<int64_t>(random_context.randrange(100)) `) in order to trigger duplicate values, whereas this fuzzing harness can span the entire input space (like `fuzzed_data_provider.ConsumeIntegral<int64_t>()`). The latter is good for catching in",https://github.com/bitcoin/bitcoin/pull/19972#issuecomment-746272108,746272108,
MarcoFalke,2020-12-16 13:20:50,cr ACK 5a9ee0869b0b722ebfcdaabaefba6376522b2eeb,https://github.com/bitcoin/bitcoin/pull/19972#issuecomment-746276624,746276624,
sipa,2020-11-05 01:44:52,Nit: brace on the next line.,https://github.com/bitcoin/bitcoin/pull/19972#discussion_r517733291,517733291,src/net.cpp
sipa,2020-11-05 01:47:34,"This will cause an unnecessary copy of the `vEvictionCandidates` vector when invoking. \n\nAs the caller doesn't need its version anymore after the call, it's possible to change this parameter to `std::vector<NodeEvictionCandidate>&&`, and call it with `SelectNodeToEvict(std::move(vEvictionCandidates))`.",https://github.com/bitcoin/bitcoin/pull/19972#discussion_r517734066,517734066,src/net.cpp
sipa,2020-11-05 01:51:34,"Since this file is already including `net.h`, I'd prefer seeing this declaration moved there, rather than forward declaring it (as it risks going out of sync with the implementation here).",https://github.com/bitcoin/bitcoin/pull/19972#discussion_r517735246,517735246,src/test/fuzz/node_eviction.cpp
sipa,2020-11-05 01:53:17,"I believe this test is redundant; if eviction_candidates is empty but `node_to_evict` isn't, the `std::any_of` call above must fail.",https://github.com/bitcoin/bitcoin/pull/19972#discussion_r517735700,517735700,src/test/fuzz/node_eviction.cpp
practicalswift,2020-11-05 15:19:59,Makes sense. Feedback addressed. Thanks!,https://github.com/bitcoin/bitcoin/pull/19972#discussion_r518131562,518131562,src/test/fuzz/node_eviction.cpp
practicalswift,2020-11-05 15:20:18,Good catch. Feedback addressed. Thanks!,https://github.com/bitcoin/bitcoin/pull/19972#discussion_r518131800,518131800,src/test/fuzz/node_eviction.cpp
practicalswift,2020-11-05 15:26:58,"Feedback addressed.\n\nAlso reduced the scope of `std::vector<NodeEvictionCandidate> vEvictionCandidates` to make reasoning about the life-time easier.",https://github.com/bitcoin/bitcoin/pull/19972#discussion_r518136772,518136772,src/net.cpp
MarcoFalke,2020-12-16 12:55:02,"For the sanity of future devs, please add a trailing comma",https://github.com/bitcoin/bitcoin/pull/19972#discussion_r544275726,544275726,src/test/fuzz/node_eviction.cpp
practicalswift,2020-12-16 13:01:15,Thanks! Fixed!,https://github.com/bitcoin/bitcoin/pull/19972#discussion_r544279564,544279564,src/test/fuzz/node_eviction.cpp
jonatack,2020-12-25 23:48:48,Following this merge I needed to update this fuzzer for #20197 and found the documentation for each data member previously added in `net_tests.cpp` both useful and missing here. Added it in #20197.,https://github.com/bitcoin/bitcoin/pull/19972#discussion_r548923217,548923217,src/test/fuzz/node_eviction.cpp
