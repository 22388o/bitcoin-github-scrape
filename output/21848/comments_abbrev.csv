practicalswift,2021-05-04 07:38:47,"Strong concept ACK\n\nI've always found the now cleaned up code confusing. Thanks for making the code easier to reason about.",https://github.com/bitcoin/bitcoin/pull/21848#issuecomment-831743528,831743528,
MarcoFalke,2021-05-04 07:49:06,"I wrote the assert in #7796, so it might be partially my fault",https://github.com/bitcoin/bitcoin/pull/21848#issuecomment-831748765,831748765,
practicalswift,2021-05-04 08:16:58,"> Also, fix `{}` style according to dev notes.\n\nGood!\n\nImportant note which may not be immediately clear for all reviewers:\n\n`int32_t i{j};` is _not_ necessarily equivalent to `int32_t i = j;` or `int32_t i(j);`.\n\nThus the choice of `{}`-initialization is not a cosmetic style choice.\n\n`int32_t i{j};` is the preferred choice not because it looks nicer, but because it is safer.\",https://github.com/bitcoin/bitcoin/pull/21848#issuecomment-831763809,831763809,
DrahtBot,2021-05-04 10:16:49,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19735 (Fix -Wtautological-constant-out-of-range-compare warnings on 32-bit systems by hebasto)\n\nIf you consider this pu",https://github.com/bitcoin/bitcoin/pull/21848#issuecomment-831833981,831833981,
practicalswift,2021-05-04 19:00:28,"Our automated reviewer friend `-fsanitize=integer` found the need to also update the fee rate fuzzing harness to make it stay in sync with the function signature changes suggested in this PR :)\n\n```\ntest/fuzz/fee_rate.cpp:25:31: runtime error: implicit conversion from type 'size_t' (aka 'unsigned long') of value 55834574847 (64-bit, unsigned) to type 'uint32_t' (aka 'unsigned int') changed t",https://github.com/bitcoin/bitcoin/pull/21848#issuecomment-832171845,832171845,
MarcoFalke,2021-05-05 16:17:55,"Thanks, fixed",https://github.com/bitcoin/bitcoin/pull/21848#issuecomment-832825657,832825657,
MarcoFalke,2021-05-18 05:14:34,Added `const`,https://github.com/bitcoin/bitcoin/pull/21848#issuecomment-842845912,842845912,
hebasto,2021-05-24 10:31:02,"This PR effectively fixes the bug from #19735.\n\n:+1: ",https://github.com/bitcoin/bitcoin/pull/21848#issuecomment-846948647,846948647,
jonatack,2021-05-04 09:09:19,"```suggestion\n     *  Passing a num_bytes value of COIN (1e8) returns a fee rate in satoshis per vB (sat/vB),\n```",https://github.com/bitcoin/bitcoin/pull/21848#discussion_r625624936,625624936,src/policy/feerate.h
jonatack,2021-05-04 09:14:16,use a named cast? https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Res-casts-named,https://github.com/bitcoin/bitcoin/pull/21848#discussion_r625628028,625628028,src/policy/feerate.cpp
MarcoFalke,2021-05-04 09:23:13,Fixed unrelated typo,https://github.com/bitcoin/bitcoin/pull/21848#discussion_r625633629,625633629,src/policy/feerate.h
MarcoFalke,2021-05-04 09:23:49,https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#es23-prefer-the--initializer-syntax,https://github.com/bitcoin/bitcoin/pull/21848#discussion_r625633979,625633979,src/policy/feerate.cpp
promag,2021-05-12 09:45:58,"nit, `const int64_t nSize{num_bytes};`",https://github.com/bitcoin/bitcoin/pull/21848#discussion_r630891087,630891087,src/policy/feerate.cpp
promag,2021-05-12 09:46:22,"nit, just make one line?",https://github.com/bitcoin/bitcoin/pull/21848#discussion_r630891359,630891359,src/policy/feerate.cpp
MarcoFalke,2021-05-12 13:17:44,"Thx, fixed",https://github.com/bitcoin/bitcoin/pull/21848#discussion_r631031859,631031859,src/policy/feerate.cpp
MarcoFalke,2021-05-12 13:17:55,"Thx, fixed.",https://github.com/bitcoin/bitcoin/pull/21848#discussion_r631032040,631032040,src/policy/feerate.cpp
promag,2021-05-24 09:02:59,"nit\n\n```cpp\nCFeeRate::CFeeRate(const CAmount& nFeePaid, uint32_t num_bytes)\n    : nSatoshisPerK(num_bytes > 0 ? nFeePaid * 1000 / int64_t{num_bytes} : 0)\n{\n}\n```\nAnd make `const CAmount nSatoshisPerK`.",https://github.com/bitcoin/bitcoin/pull/21848#discussion_r637797967,637797967,src/policy/feerate.cpp
MarcoFalke,2021-05-24 09:15:27,"Nice, but adding `const` can be done in a follow-up",https://github.com/bitcoin/bitcoin/pull/21848#discussion_r637805178,637805178,src/policy/feerate.cpp
