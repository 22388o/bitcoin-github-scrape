[
  {
    "sha": "fafd121026c4f1e25d498983e4f88c119516552b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWZkMTIxMDI2YzRmMWUyNWQ0OTg5ODNlNGY4OGMxMTk1MTY1NTJi",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-04T08:14:12Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-18T05:13:25Z"
      },
      "message": "refactor: Make CFeeRate constructor architecture-independent",
      "tree": {
        "sha": "306dd432b7e300b526bc546ff5b81b2941b899ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/306dd432b7e300b526bc546ff5b81b2941b899ca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fafd121026c4f1e25d498983e4f88c119516552b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhoqgv/fiRE+hpM1PSElAy73Z2LX3zV5j7X12OtBMc5rSa/VyCcEu7Gm6hStUPz\ndmG0Z+vas7BBAzt/yt/RJiFcrgm40Wu3d9qlNV2R4rh44agP32lJuMNuwVbMD/qP\nXzWHT1szjGPyO3IP4+8NNOmJ2LGio0JDtomUbbQEP6LM0RwJQ6YAbwAmm08ww6yU\nmZkWC0+UObu/VgjJy5dpn8AXIuTtxO79T38wFKDf4C5inn/TlsPO7FgJxhRQxFRE\nt5uEPjAsW7f2HCwFYqJUYrMvEWGmeSYlh9kUWgZLrldE+02sL/uhYZssjFx58wR7\neIKwj1D8sAZec4J7ev/Pg7ScYi9+mXzphj3GXPH9r6kq3nxvarl7jdhz+dmRDGu6\nUlmehTq89eKPppO1WcyycDEdd/dN3C+jKPGnu3XDL7F/cMoNXdyPXkWmgMrCumva\nlqk0hcLC6WK06UjHyDPkoiYo7mksDQMGHPj+EXrIzuXJrsnWsC7xHyRdJpMf94N5\n53PVIfJ0\n=YBsy\n-----END PGP SIGNATURE-----",
        "payload": "tree 306dd432b7e300b526bc546ff5b81b2941b899ca\nparent c8571486364d6e9ca8c86bd1c81e230ca64f8904\nauthor MarcoFalke <falke.marco@gmail.com> 1620116052 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1621314805 +0200\n\nrefactor: Make CFeeRate constructor architecture-independent\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fafd121026c4f1e25d498983e4f88c119516552b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fafd121026c4f1e25d498983e4f88c119516552b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fafd121026c4f1e25d498983e4f88c119516552b/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c8571486364d6e9ca8c86bd1c81e230ca64f8904",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8571486364d6e9ca8c86bd1c81e230ca64f8904",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c8571486364d6e9ca8c86bd1c81e230ca64f8904"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 16,
      "deletions": 22
    },
    "files": [
      {
        "sha": "25b9282b4edfbdca53002e3e2ee166ed5e694484",
        "filename": "src/policy/feerate.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 12,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafd121026c4f1e25d498983e4f88c119516552b/src/policy/feerate.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafd121026c4f1e25d498983e4f88c119516552b/src/policy/feerate.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/feerate.cpp?ref=fafd121026c4f1e25d498983e4f88c119516552b",
        "patch": "@@ -7,29 +7,26 @@\n \n #include <tinyformat.h>\n \n-CFeeRate::CFeeRate(const CAmount& nFeePaid, size_t nBytes_)\n+CFeeRate::CFeeRate(const CAmount& nFeePaid, uint32_t num_bytes)\n {\n-    assert(nBytes_ <= uint64_t(std::numeric_limits<int64_t>::max()));\n-    int64_t nSize = int64_t(nBytes_);\n+    const int64_t nSize{num_bytes};\n \n-    if (nSize > 0)\n+    if (nSize > 0) {\n         nSatoshisPerK = nFeePaid * 1000 / nSize;\n-    else\n+    } else {\n         nSatoshisPerK = 0;\n+    }\n }\n \n-CAmount CFeeRate::GetFee(size_t nBytes_) const\n+CAmount CFeeRate::GetFee(uint32_t num_bytes) const\n {\n-    assert(nBytes_ <= uint64_t(std::numeric_limits<int64_t>::max()));\n-    int64_t nSize = int64_t(nBytes_);\n+    const int64_t nSize{num_bytes};\n \n     CAmount nFee = nSatoshisPerK * nSize / 1000;\n \n     if (nFee == 0 && nSize != 0) {\n-        if (nSatoshisPerK > 0)\n-            nFee = CAmount(1);\n-        if (nSatoshisPerK < 0)\n-            nFee = CAmount(-1);\n+        if (nSatoshisPerK > 0) nFee = CAmount(1);\n+        if (nSatoshisPerK < 0) nFee = CAmount(-1);\n     }\n \n     return nFee;"
      },
      {
        "sha": "d296d327743a1f6c1737e4e0da72c7a285b4cc43",
        "filename": "src/policy/feerate.h",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafd121026c4f1e25d498983e4f88c119516552b/src/policy/feerate.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafd121026c4f1e25d498983e4f88c119516552b/src/policy/feerate.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/feerate.h?ref=fafd121026c4f1e25d498983e4f88c119516552b",
        "patch": "@@ -39,20 +39,17 @@ class CFeeRate\n         // We've previously had bugs creep in from silent double->int conversion...\n         static_assert(std::is_integral<I>::value, \"CFeeRate should be used without floats\");\n     }\n-    /** Constructor for a fee rate in satoshis per kvB (sat/kvB). The size in bytes must not exceed (2^63 - 1).\n+    /** Constructor for a fee rate in satoshis per kvB (sat/kvB).\n      *\n-     *  Passing an nBytes value of COIN (1e8) returns a fee rate in satoshis per vB (sat/vB),\n+     *  Passing a num_bytes value of COIN (1e8) returns a fee rate in satoshis per vB (sat/vB),\n      *  e.g. (nFeePaid * 1e8 / 1e3) == (nFeePaid / 1e5),\n      *  where 1e5 is the ratio to convert from BTC/kvB to sat/vB.\n-     *\n-     *  @param[in] nFeePaid  CAmount fee rate to construct with\n-     *  @param[in] nBytes    size_t bytes (units) to construct with\n      */\n-    CFeeRate(const CAmount& nFeePaid, size_t nBytes);\n+    CFeeRate(const CAmount& nFeePaid, uint32_t num_bytes);\n     /**\n      * Return the fee in satoshis for the given size in bytes.\n      */\n-    CAmount GetFee(size_t nBytes) const;\n+    CAmount GetFee(uint32_t num_bytes) const;\n     /**\n      * Return the fee in satoshis for a size of 1000 bytes\n      */"
      },
      {
        "sha": "65ba2bab1597588a86f63feb5ce76d6a5d4bd1a7",
        "filename": "src/test/amount_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafd121026c4f1e25d498983e4f88c119516552b/src/test/amount_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafd121026c4f1e25d498983e4f88c119516552b/src/test/amount_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/amount_tests.cpp?ref=fafd121026c4f1e25d498983e4f88c119516552b",
        "patch": "@@ -83,7 +83,7 @@ BOOST_AUTO_TEST_CASE(GetFeeTest)\n     BOOST_CHECK(CFeeRate(CAmount(26), 789) == CFeeRate(32));\n     BOOST_CHECK(CFeeRate(CAmount(27), 789) == CFeeRate(34));\n     // Maximum size in bytes, should not crash\n-    CFeeRate(MAX_MONEY, std::numeric_limits<size_t>::max() >> 1).GetFeePerK();\n+    CFeeRate(MAX_MONEY, std::numeric_limits<uint32_t>::max()).GetFeePerK();\n }\n \n BOOST_AUTO_TEST_CASE(BinaryOperatorTest)"
      },
      {
        "sha": "dff0e580004a5326f547c7d199bc75a703ef4dc5",
        "filename": "src/test/fuzz/fee_rate.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafd121026c4f1e25d498983e4f88c119516552b/src/test/fuzz/fee_rate.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafd121026c4f1e25d498983e4f88c119516552b/src/test/fuzz/fee_rate.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/fee_rate.cpp?ref=fafd121026c4f1e25d498983e4f88c119516552b",
        "patch": "@@ -20,8 +20,8 @@ FUZZ_TARGET(fee_rate)\n     const CFeeRate fee_rate{satoshis_per_k};\n \n     (void)fee_rate.GetFeePerK();\n-    const size_t bytes = fuzzed_data_provider.ConsumeIntegral<size_t>();\n-    if (!MultiplicationOverflow(static_cast<int64_t>(bytes), satoshis_per_k) && bytes <= static_cast<uint64_t>(std::numeric_limits<int64_t>::max())) {\n+    const auto bytes = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    if (!MultiplicationOverflow(int64_t{bytes}, satoshis_per_k)) {\n         (void)fee_rate.GetFee(bytes);\n     }\n     (void)fee_rate.ToString();"
      }
    ]
  }
]