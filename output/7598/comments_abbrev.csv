TheBlueMatt,2016-05-11T23:14:50Z,Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/7598#issuecomment-218617610,218617610,
morcos,2016-05-18T18:15:35Z,rebased\n,https://github.com/bitcoin/bitcoin/pull/7598#issuecomment-220112886,220112886,
TheBlueMatt,2016-05-23T01:13:10Z,utACK 4dc94d1036576fe988a066fdabc047350ccddda9 +/- whitespace.\n,https://github.com/bitcoin/bitcoin/pull/7598#issuecomment-220868794,220868794,
morcos,2016-06-01T16:46:24Z,Fix two bugs identified by @sdaftuar \n,https://github.com/bitcoin/bitcoin/pull/7598#issuecomment-223053821,223053821,
sdaftuar,2016-06-01T18:11:08Z,"ACK\n\nVerified that the old code and new code produce identical blocks (calling CreateNewBlock every 100 transactions, over two weeks of data from February).\n",https://github.com/bitcoin/bitcoin/pull/7598#issuecomment-223078058,223078058,
JeremyRubin,2016-06-14T16:32:54Z,"utAck -- apologies for line noise on the time thing, wasn't highly related to this.\n",https://github.com/bitcoin/bitcoin/pull/7598#issuecomment-225939045,225939045,
TheBlueMatt,2016-05-23T01:09:46Z,Nit: whitespace.\n,https://github.com/bitcoin/bitcoin/pull/7598#discussion_r64160653,64160653,src/miner.cpp
TheBlueMatt,2016-05-23T01:10:42Z,"The old code deliberately unlocks before calling TestBlockValidity...I'm not actually sure its worth anything, but just noting that there is actually a behavior change here.\n",https://github.com/bitcoin/bitcoin/pull/7598#discussion_r64160685,64160685,src/miner.cpp
morcos,2016-05-24T20:03:08Z,Are you sure?\n,https://github.com/bitcoin/bitcoin/pull/7598#discussion_r64463769,64463769,src/miner.cpp
TheBlueMatt,2016-05-24T23:45:18Z,"Oh, oops, I thought the deliberate scoping had a purpose, but it looks like it does absolutely nothing.\n",https://github.com/bitcoin/bitcoin/pull/7598#discussion_r64494596,64494596,src/miner.cpp
luke-jr,2016-06-01T18:16:30Z,This doesn't seem to reset at least pblock. What's the point of having a reset independent from the constructor?\n,https://github.com/bitcoin/bitcoin/pull/7598#discussion_r65414446,65414446,src/miner.cpp
JeremyRubin,2016-06-14T15:19:15Z,"I think that this is fine to leave as-is, but I suspect that the time should ideally be set by the client (e.g. if the block takes a long time to be found say 70 minutes than the client would have had to update their timestamp in their block).\n\nThis could cause a real problem at the halving if there is a sudden reduction in hashpower and mining time goes up past the two hour threshold and all mi",https://github.com/bitcoin/bitcoin/pull/7598#discussion_r66991998,66991998,src/miner.cpp
JeremyRubin,2016-06-14T15:22:09Z,"(of course this is not a correctness thing, just a potential network edge case if users improperly program against this -- I'm well aware this has been the way this code worked for a long time)\n",https://github.com/bitcoin/bitcoin/pull/7598#discussion_r66992624,66992624,src/miner.cpp
sipa,2016-06-14T15:27:02Z,"There is never a requirement to update the time: the constraints are:\n- block.nTime >= median(block.prev^(n).nTime, n=1..11) [which never changes if no block is found to work on top of]\n- block.nTime <= realtime + 120 minutes [which never goes from valid to invalid as time passes]\n",https://github.com/bitcoin/bitcoin/pull/7598#discussion_r66993642,66993642,src/miner.cpp
sipa,2016-06-14T15:28:09Z,"In any case, that's a mining protocol suggestion (ntime rolling is used in many places anyway), not something that affects the internal mining code.\n",https://github.com/bitcoin/bitcoin/pull/7598#discussion_r66993861,66993861,src/miner.cpp
JeremyRubin,2016-06-14T15:33:34Z,👍\n\nhad misread the constraints to have blocks as more time dependent.\n,https://github.com/bitcoin/bitcoin/pull/7598#discussion_r66995099,66995099,src/miner.cpp
JeremyRubin,2016-06-14T15:45:53Z,"nit: Unless there is a reason I am missing, it would be good to refactor this to use std::priority_queue like addScoreTxs for consistency. (std::priority_queue is also safer to use for preserving heap invariants)\n",https://github.com/bitcoin/bitcoin/pull/7598#discussion_r66997894,66997894,src/miner.cpp
JeremyRubin,2016-06-14T16:30:06Z,nit: could be `!(blockFinished || (mi == mempool.mapTx.get<mining_score>().end() && clearedTxs.empty()))` via demorgan's which is (maybe?) a bit easier to read.\n,https://github.com/bitcoin/bitcoin/pull/7598#discussion_r67006098,67006098,src/miner.cpp
