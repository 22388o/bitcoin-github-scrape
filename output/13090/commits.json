[
  {
    "sha": "2ae705d84178fb9faa49f92091206e92379a2c63",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYWU3MDVkODQxNzhmYjlmYWE0OWY5MjA5MTIwNmU5MjM3OWEyYzYz",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2017-09-05T19:48:58Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-04-26T13:33:11Z"
      },
      "message": "Remove Safe mode",
      "tree": {
        "sha": "696da3263cf74554ce09ec79343841a62b4accd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/696da3263cf74554ce09ec79343841a62b4accd7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ae705d84178fb9faa49f92091206e92379a2c63",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ae705d84178fb9faa49f92091206e92379a2c63",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2ae705d84178fb9faa49f92091206e92379a2c63",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ae705d84178fb9faa49f92091206e92379a2c63/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eac067ad5962146397f598b5ee7150f07cfaa377",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eac067ad5962146397f598b5ee7150f07cfaa377",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eac067ad5962146397f598b5ee7150f07cfaa377"
      }
    ],
    "stats": {
      "total": 85,
      "additions": 2,
      "deletions": 83
    },
    "files": [
      {
        "sha": "04bd75a2a5ed9bd659d1d24f30344bff5b091c46",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ae705d84178fb9faa49f92091206e92379a2c63/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ae705d84178fb9faa49f92091206e92379a2c63/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=2ae705d84178fb9faa49f92091206e92379a2c63",
        "patch": "@@ -137,7 +137,6 @@ BITCOIN_CORE_H = \\\n   rpc/client.h \\\n   rpc/mining.h \\\n   rpc/protocol.h \\\n-  rpc/safemode.h \\\n   rpc/server.h \\\n   rpc/rawtransaction.h \\\n   rpc/register.h \\\n@@ -223,7 +222,6 @@ libbitcoin_server_a_SOURCES = \\\n   rpc/misc.cpp \\\n   rpc/net.cpp \\\n   rpc/rawtransaction.cpp \\\n-  rpc/safemode.cpp \\\n   rpc/server.cpp \\\n   script/sigcache.cpp \\\n   timedata.cpp \\"
      },
      {
        "sha": "99dab605ac27c64386c1132661b9311864551581",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ae705d84178fb9faa49f92091206e92379a2c63/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ae705d84178fb9faa49f92091206e92379a2c63/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=2ae705d84178fb9faa49f92091206e92379a2c63",
        "patch": "@@ -31,7 +31,6 @@\n #include <policy/policy.h>\n #include <rpc/server.h>\n #include <rpc/register.h>\n-#include <rpc/safemode.h>\n #include <rpc/blockchain.h>\n #include <script/standard.h>\n #include <script/sigcache.h>\n@@ -448,9 +447,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-checkblockindex\", strprintf(\"Do a full consistency check for mapBlockIndex, setBlockIndexCandidates, chainActive and mapBlocksUnlinked occasionally. (default: %u)\", defaultChainParams->DefaultConsistencyChecks()));\n         strUsage += HelpMessageOpt(\"-checkmempool=<n>\", strprintf(\"Run checks every <n> transactions (default: %u)\", defaultChainParams->DefaultConsistencyChecks()));\n         strUsage += HelpMessageOpt(\"-checkpoints\", strprintf(\"Disable expensive verification for known chain history (default: %u)\", DEFAULT_CHECKPOINTS_ENABLED));\n-        strUsage += HelpMessageOpt(\"-disablesafemode\", strprintf(\"Disable safemode, override a real safe mode event (default: %u)\", DEFAULT_DISABLE_SAFEMODE));\n         strUsage += HelpMessageOpt(\"-deprecatedrpc=<method>\", \"Allows deprecated RPC method(s) to be used\");\n-        strUsage += HelpMessageOpt(\"-testsafemode\", strprintf(\"Force safe mode (default: %u)\", DEFAULT_TESTSAFEMODE));\n         strUsage += HelpMessageOpt(\"-dropmessagestest=<n>\", \"Randomly drop 1 of every <n> network messages\");\n         strUsage += HelpMessageOpt(\"-stopafterblockimport\", strprintf(\"Stop running after importing blocks from disk (default: %u)\", DEFAULT_STOPAFTERBLOCKIMPORT));\n         strUsage += HelpMessageOpt(\"-stopatheight\", strprintf(\"Stop running after reaching the given height in the main chain (default: %u)\", DEFAULT_STOPATHEIGHT));"
      },
      {
        "sha": "102ff3b443ad159d25e3d132685693a661f69ca7",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ae705d84178fb9faa49f92091206e92379a2c63/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ae705d84178fb9faa49f92091206e92379a2c63/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=2ae705d84178fb9faa49f92091206e92379a2c63",
        "patch": "@@ -19,7 +19,6 @@\n #include <policy/rbf.h>\n #include <primitives/transaction.h>\n #include <rpc/rawtransaction.h>\n-#include <rpc/safemode.h>\n #include <rpc/server.h>\n #include <script/script.h>\n #include <script/script_error.h>\n@@ -1108,8 +1107,6 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"sendrawtransaction\", \"\\\"signedhex\\\"\")\n         );\n \n-    ObserveSafeMode();\n-\n     std::promise<void> promise;\n \n     RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n@@ -1217,8 +1214,6 @@ UniValue testmempoolaccept(const JSONRPCRequest& request)\n             );\n     }\n \n-    ObserveSafeMode();\n-\n     RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VBOOL});\n     if (request.params[0].get_array().size() != 1) {\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Array must contain exactly one raw transaction for now\");"
      },
      {
        "sha": "9f3a9d30b8533a7ee58b9cc87f3b22671def247c",
        "filename": "src/rpc/safemode.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eac067ad5962146397f598b5ee7150f07cfaa377/src/rpc/safemode.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eac067ad5962146397f598b5ee7150f07cfaa377/src/rpc/safemode.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/safemode.cpp?ref=eac067ad5962146397f598b5ee7150f07cfaa377",
        "patch": "@@ -1,14 +0,0 @@\n-#include <rpc/safemode.h>\n-\n-#include <rpc/protocol.h>\n-#include <util.h>\n-#include <warnings.h>\n-\n-void ObserveSafeMode()\n-{\n-    std::string warning = GetWarnings(\"rpc\");\n-    if (warning != \"\" && !gArgs.GetBoolArg(\"-disablesafemode\", DEFAULT_DISABLE_SAFEMODE)) {\n-        throw JSONRPCError(RPC_FORBIDDEN_BY_SAFE_MODE, std::string(\"Safe mode: \") + warning);\n-    }\n-}\n-"
      },
      {
        "sha": "8466d6b2f975a7b5b39edd0480f6684f08ee54e8",
        "filename": "src/rpc/safemode.h",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eac067ad5962146397f598b5ee7150f07cfaa377/src/rpc/safemode.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eac067ad5962146397f598b5ee7150f07cfaa377/src/rpc/safemode.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/safemode.h?ref=eac067ad5962146397f598b5ee7150f07cfaa377",
        "patch": "@@ -1,12 +0,0 @@\n-// Copyright (c) 2017 The Bitcoin Core developers\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#ifndef BITCOIN_RPC_SAFEMODE_H\n-#define BITCOIN_RPC_SAFEMODE_H\n-\n-static const bool DEFAULT_DISABLE_SAFEMODE = true;\n-\n-void ObserveSafeMode();\n-\n-#endif // BITCOIN_RPC_SAFEMODE_H"
      },
      {
        "sha": "76518f42504e1e191f655046f6526513b9615ab0",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ae705d84178fb9faa49f92091206e92379a2c63/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ae705d84178fb9faa49f92091206e92379a2c63/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=2ae705d84178fb9faa49f92091206e92379a2c63",
        "patch": "@@ -4,7 +4,6 @@\n \n #include <chain.h>\n #include <key_io.h>\n-#include <rpc/safemode.h>\n #include <rpc/server.h>\n #include <validation.h>\n #include <script/script.h>\n@@ -204,7 +203,6 @@ UniValue abortrescan(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"abortrescan\", \"\")\n         );\n \n-    ObserveSafeMode();\n     if (!pwallet->IsScanning() || pwallet->IsAbortingRescan()) return false;\n     pwallet->AbortRescan();\n     return true;"
      },
      {
        "sha": "a82f0694906c9acb6b23b200badffe4d1f5714c0",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 38,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ae705d84178fb9faa49f92091206e92379a2c63/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ae705d84178fb9faa49f92091206e92379a2c63/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=2ae705d84178fb9faa49f92091206e92379a2c63",
        "patch": "@@ -17,7 +17,6 @@\n #include <policy/rbf.h>\n #include <rpc/mining.h>\n #include <rpc/rawtransaction.h>\n-#include <rpc/safemode.h>\n #include <rpc/server.h>\n #include <rpc/util.h>\n #include <script/sign.h>\n@@ -525,8 +524,6 @@ UniValue sendtoaddress(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\", 0.1, \\\"donation\\\", \\\"seans outpost\\\"\")\n         );\n \n-    ObserveSafeMode();\n-\n     // Make sure the results are valid at least up to the most recent block\n     // the user could have gotten from another RPC command prior to now\n     pwallet->BlockUntilSyncedToCurrentChain();\n@@ -607,8 +604,6 @@ UniValue listaddressgroupings(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listaddressgroupings\", \"\")\n         );\n \n-    ObserveSafeMode();\n-\n     // Make sure the results are valid at least up to the most recent block\n     // the user could have gotten from another RPC command prior to now\n     pwallet->BlockUntilSyncedToCurrentChain();\n@@ -724,8 +719,6 @@ UniValue getreceivedbyaddress(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"getreceivedbyaddress\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\", 6\")\n        );\n \n-    ObserveSafeMode();\n-\n     // Make sure the results are valid at least up to the most recent block\n     // the user could have gotten from another RPC command prior to now\n     pwallet->BlockUntilSyncedToCurrentChain();\n@@ -798,8 +791,6 @@ UniValue getreceivedbylabel(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"getreceivedbylabel\", \"\\\"tabby\\\", 6\")\n         );\n \n-    ObserveSafeMode();\n-\n     // Make sure the results are valid at least up to the most recent block\n     // the user could have gotten from another RPC command prior to now\n     pwallet->BlockUntilSyncedToCurrentChain();\n@@ -879,8 +870,6 @@ UniValue getbalance(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"getbalance\", \"\\\"*\\\", 6\")\n         );\n \n-    ObserveSafeMode();\n-\n     // Make sure the results are valid at least up to the most recent block\n     // the user could have gotten from another RPC command prior to now\n     pwallet->BlockUntilSyncedToCurrentChain();\n@@ -933,8 +922,6 @@ UniValue getunconfirmedbalance(const JSONRPCRequest &request)\n                 \"getunconfirmedbalance\\n\"\n                 \"Returns the server's total unconfirmed balance\\n\");\n \n-    ObserveSafeMode();\n-\n     // Make sure the results are valid at least up to the most recent block\n     // the user could have gotten from another RPC command prior to now\n     pwallet->BlockUntilSyncedToCurrentChain();\n@@ -980,7 +967,6 @@ UniValue movecmd(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"move\", \"\\\"timotei\\\", \\\"akiko\\\", 0.01, 6, \\\"happy birthday!\\\"\")\n         );\n \n-    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     std::string strFrom = LabelFromValue(request.params[0]);\n@@ -1039,8 +1025,6 @@ UniValue sendfrom(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"sendfrom\", \"\\\"tabby\\\", \\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\", 0.01, 6, \\\"donation\\\", \\\"seans outpost\\\"\")\n         );\n \n-    ObserveSafeMode();\n-\n     // Make sure the results are valid at least up to the most recent block\n     // the user could have gotten from another RPC command prior to now\n     pwallet->BlockUntilSyncedToCurrentChain();\n@@ -1170,8 +1154,6 @@ UniValue sendmany(const JSONRPCRequest& request)\n \n     if (request.fHelp || request.params.size() < 2 || request.params.size() > 8) throw std::runtime_error(help_text);\n \n-    ObserveSafeMode();\n-\n     // Make sure the results are valid at least up to the most recent block\n     // the user could have gotten from another RPC command prior to now\n     pwallet->BlockUntilSyncedToCurrentChain();\n@@ -1683,8 +1665,6 @@ UniValue listreceivedbyaddress(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listreceivedbyaddress\", \"6, true, true, \\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\"\")\n         );\n \n-    ObserveSafeMode();\n-\n     // Make sure the results are valid at least up to the most recent block\n     // the user could have gotten from another RPC command prior to now\n     pwallet->BlockUntilSyncedToCurrentChain();\n@@ -1735,8 +1715,6 @@ UniValue listreceivedbylabel(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listreceivedbylabel\", \"6, true, true\")\n         );\n \n-    ObserveSafeMode();\n-\n     // Make sure the results are valid at least up to the most recent block\n     // the user could have gotten from another RPC command prior to now\n     pwallet->BlockUntilSyncedToCurrentChain();\n@@ -1974,8 +1952,6 @@ UniValue listtransactions(const JSONRPCRequest& request)\n     }\n     if (request.fHelp || request.params.size() > 4) throw std::runtime_error(help_text);\n \n-    ObserveSafeMode();\n-\n     // Make sure the results are valid at least up to the most recent block\n     // the user could have gotten from another RPC command prior to now\n     pwallet->BlockUntilSyncedToCurrentChain();\n@@ -2088,8 +2064,6 @@ UniValue listaccounts(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listaccounts\", \"6\")\n         );\n \n-    ObserveSafeMode();\n-\n     // Make sure the results are valid at least up to the most recent block\n     // the user could have gotten from another RPC command prior to now\n     pwallet->BlockUntilSyncedToCurrentChain();\n@@ -2202,8 +2176,6 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listsinceblock\", \"\\\"000000000000000bacf66f7497b7dc45ef753ee9a7d38571037cdb1a57f663ad\\\", 6\")\n         );\n \n-    ObserveSafeMode();\n-\n     // Make sure the results are valid at least up to the most recent block\n     // the user could have gotten from another RPC command prior to now\n     pwallet->BlockUntilSyncedToCurrentChain();\n@@ -2339,8 +2311,6 @@ UniValue gettransaction(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"gettransaction\", \"\\\"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\\\"\")\n         );\n \n-    ObserveSafeMode();\n-\n     // Make sure the results are valid at least up to the most recent block\n     // the user could have gotten from another RPC command prior to now\n     pwallet->BlockUntilSyncedToCurrentChain();\n@@ -2407,8 +2377,6 @@ UniValue abandontransaction(const JSONRPCRequest& request)\n         );\n     }\n \n-    ObserveSafeMode();\n-\n     // Make sure the results are valid at least up to the most recent block\n     // the user could have gotten from another RPC command prior to now\n     pwallet->BlockUntilSyncedToCurrentChain();\n@@ -2889,7 +2857,6 @@ UniValue listlockunspent(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listlockunspent\", \"\")\n         );\n \n-    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     std::vector<COutPoint> vOutpts;\n@@ -2968,8 +2935,6 @@ UniValue getwalletinfo(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"getwalletinfo\", \"\")\n         );\n \n-    ObserveSafeMode();\n-\n     // Make sure the results are valid at least up to the most recent block\n     // the user could have gotten from another RPC command prior to now\n     pwallet->BlockUntilSyncedToCurrentChain();\n@@ -3126,8 +3091,6 @@ UniValue listunspent(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listunspent\", \"6, 9999999, [] , true, { \\\"minimumAmount\\\": 0.005 } \")\n         );\n \n-    ObserveSafeMode();\n-\n     int nMinDepth = 1;\n     if (!request.params[0].isNull()) {\n         RPCTypeCheckArgument(request.params[0], UniValue::VNUM);\n@@ -3300,7 +3263,6 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n                             + HelpExampleCli(\"sendrawtransaction\", \"\\\"signedtransactionhex\\\"\")\n                             );\n \n-    ObserveSafeMode();\n     RPCTypeCheck(request.params, {UniValue::VSTR});\n \n     // Make sure the results are valid at least up to the most recent block"
      },
      {
        "sha": "8eeaec1cbaa203bc2d2c376b50e5178176954bfa",
        "filename": "src/warnings.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ae705d84178fb9faa49f92091206e92379a2c63/src/warnings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ae705d84178fb9faa49f92091206e92379a2c63/src/warnings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/warnings.cpp?ref=2ae705d84178fb9faa49f92091206e92379a2c63",
        "patch": "@@ -51,9 +51,6 @@ std::string GetWarnings(const std::string& strFor)\n         strGUI = _(\"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\");\n     }\n \n-    if (gArgs.GetBoolArg(\"-testsafemode\", DEFAULT_TESTSAFEMODE))\n-        strStatusBar = strRPC = strGUI = \"testsafemode enabled\";\n-\n     // Misc warnings like out of disk space and clock is wrong\n     if (strMiscWarning != \"\")\n     {"
      },
      {
        "sha": "3aabbdd9c7d9c12b8cb070c38a7aaba59e895a4f",
        "filename": "src/warnings.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ae705d84178fb9faa49f92091206e92379a2c63/src/warnings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ae705d84178fb9faa49f92091206e92379a2c63/src/warnings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/warnings.h?ref=2ae705d84178fb9faa49f92091206e92379a2c63",
        "patch": "@@ -22,6 +22,4 @@ void SetfLargeWorkInvalidChainFound(bool flag);\n  */\n std::string GetWarnings(const std::string& strFor);\n \n-static const bool DEFAULT_TESTSAFEMODE = false;\n-\n #endif //  BITCOIN_WARNINGS_H"
      },
      {
        "sha": "11a52b9ee26951dd2f372f10bb479fd4ec668a7d",
        "filename": "test/functional/feature_pruning.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ae705d84178fb9faa49f92091206e92379a2c63/test/functional/feature_pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ae705d84178fb9faa49f92091206e92379a2c63/test/functional/feature_pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_pruning.py?ref=2ae705d84178fb9faa49f92091206e92379a2c63",
        "patch": "@@ -124,7 +124,7 @@ def reorg_test(self):\n         # Reboot node 1 to clear its mempool (hopefully make the invalidate faster)\n         # Lower the block max size so we don't keep mining all our big mempool transactions (from disconnected blocks)\n         self.stop_node(1)\n-        self.start_node(1, extra_args=[\"-maxreceivebuffer=20000\",\"-blockmaxweight=20000\", \"-checkblocks=5\", \"-disablesafemode\"])\n+        self.start_node(1, extra_args=[\"-maxreceivebuffer=20000\",\"-blockmaxweight=20000\", \"-checkblocks=5\"])\n \n         height = self.nodes[1].getblockcount()\n         self.log.info(\"Current block height: %d\" % height)\n@@ -147,7 +147,7 @@ def reorg_test(self):\n \n         # Reboot node1 to clear those giant tx's from mempool\n         self.stop_node(1)\n-        self.start_node(1, extra_args=[\"-maxreceivebuffer=20000\",\"-blockmaxweight=20000\", \"-checkblocks=5\", \"-disablesafemode\"])\n+        self.start_node(1, extra_args=[\"-maxreceivebuffer=20000\",\"-blockmaxweight=20000\", \"-checkblocks=5\"])\n \n         self.log.info(\"Generating new longer chain of 300 more blocks\")\n         self.nodes[1].generate(300)"
      }
    ]
  },
  {
    "sha": "7da3b0adb836794cb22668b5101a6a4748543ea0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZGEzYjBhZGI4MzY3OTRjYjIyNjY4YjUxMDFhNmE0NzQ4NTQzZWEw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-04-27T07:19:09Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-04-27T07:19:09Z"
      },
      "message": "rpc: Move RPC_FORBIDDEN_BY_SAFE_MODE code to reserved section\n\nAlthough this code is no longer ever sent back after removing safe mode,\nit would be unwise to remove it from the header.\n\nFor one, it would be bad to accidentally re-use the number.\n\nAlso some API documentation / bindings are directly generated from the .h\nfile - this is why the \"Aliases for backward compatibility\" are there. We don't\nwant to break code that relies on this error code existing, even if it's never\ngenerated.\n\nSo keep it around but move it to a reserved section.",
      "tree": {
        "sha": "7193f0c604d14b1d1fbd1b4b6ba853a7c4f1460b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7193f0c604d14b1d1fbd1b4b6ba853a7c4f1460b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7da3b0adb836794cb22668b5101a6a4748543ea0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7da3b0adb836794cb22668b5101a6a4748543ea0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7da3b0adb836794cb22668b5101a6a4748543ea0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7da3b0adb836794cb22668b5101a6a4748543ea0/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2ae705d84178fb9faa49f92091206e92379a2c63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ae705d84178fb9faa49f92091206e92379a2c63",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2ae705d84178fb9faa49f92091206e92379a2c63"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6954aed252f2f73aef4cbe004c77cf8473ca99e1",
        "filename": "src/rpc/protocol.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7da3b0adb836794cb22668b5101a6a4748543ea0/src/rpc/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7da3b0adb836794cb22668b5101a6a4748543ea0/src/rpc/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/protocol.h?ref=7da3b0adb836794cb22668b5101a6a4748543ea0",
        "patch": "@@ -46,7 +46,6 @@ enum RPCErrorCode\n \n     //! General application defined errors\n     RPC_MISC_ERROR                  = -1,  //!< std::exception thrown in command handling\n-    RPC_FORBIDDEN_BY_SAFE_MODE      = -2,  //!< Server is in safe mode, and command is not allowed in safe mode\n     RPC_TYPE_ERROR                  = -3,  //!< Unexpected type was passed as parameter\n     RPC_INVALID_ADDRESS_OR_KEY      = -5,  //!< Invalid address or key\n     RPC_OUT_OF_MEMORY               = -7,  //!< Ran out of memory during operation\n@@ -88,6 +87,9 @@ enum RPCErrorCode\n \n     //! Backwards compatible aliases\n     RPC_WALLET_INVALID_ACCOUNT_NAME = RPC_WALLET_INVALID_LABEL_NAME,\n+\n+    //! Unused reserved codes, kept around for backwards compatibility. Do not reuse.\n+    RPC_FORBIDDEN_BY_SAFE_MODE      = -2,  //!< Server is in safe mode, and command is not allowed in safe mode\n };\n \n UniValue JSONRPCRequestObj(const std::string& strMethod, const UniValue& params, const UniValue& id);"
      }
    ]
  },
  {
    "sha": "d8e9a2ac74e1071c9a92b9858b7ed3143413ee94",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOGU5YTJhYzc0ZTEwNzFjOWE5MmI5ODU4YjdlZDMxNDM0MTNlZTk0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-04-27T07:25:42Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-04-27T07:27:52Z"
      },
      "message": "Remove \"rpc\" category from GetWarnings\n\nNo longer used after removing safe mode.\n\nThis function can likely be simplified more, but I'll leave that\nfor later to make this easy to review.",
      "tree": {
        "sha": "3a5e8bf1b02e5340b79c6d637a7c1c551c7dfbb2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a5e8bf1b02e5340b79c6d637a7c1c551c7dfbb2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d8e9a2ac74e1071c9a92b9858b7ed3143413ee94",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8e9a2ac74e1071c9a92b9858b7ed3143413ee94",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d8e9a2ac74e1071c9a92b9858b7ed3143413ee94",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8e9a2ac74e1071c9a92b9858b7ed3143413ee94/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7da3b0adb836794cb22668b5101a6a4748543ea0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7da3b0adb836794cb22668b5101a6a4748543ea0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7da3b0adb836794cb22668b5101a6a4748543ea0"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 2,
      "deletions": 6
    },
    "files": [
      {
        "sha": "dc4e6e4842d28f8e57816dba276363f01d6b50d5",
        "filename": "src/warnings.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8e9a2ac74e1071c9a92b9858b7ed3143413ee94/src/warnings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8e9a2ac74e1071c9a92b9858b7ed3143413ee94/src/warnings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/warnings.cpp?ref=d8e9a2ac74e1071c9a92b9858b7ed3143413ee94",
        "patch": "@@ -40,7 +40,6 @@ void SetfLargeWorkInvalidChainFound(bool flag)\n std::string GetWarnings(const std::string& strFor)\n {\n     std::string strStatusBar;\n-    std::string strRPC;\n     std::string strGUI;\n     const std::string uiAlertSeperator = \"<hr />\";\n \n@@ -60,21 +59,19 @@ std::string GetWarnings(const std::string& strFor)\n \n     if (fLargeWorkForkFound)\n     {\n-        strStatusBar = strRPC = \"Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.\";\n+        strStatusBar = \"Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.\";\n         strGUI += (strGUI.empty() ? \"\" : uiAlertSeperator) + _(\"Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.\");\n     }\n     else if (fLargeWorkInvalidChainFound)\n     {\n-        strStatusBar = strRPC = \"Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.\";\n+        strStatusBar = \"Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.\";\n         strGUI += (strGUI.empty() ? \"\" : uiAlertSeperator) + _(\"Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.\");\n     }\n \n     if (strFor == \"gui\")\n         return strGUI;\n     else if (strFor == \"statusbar\")\n         return strStatusBar;\n-    else if (strFor == \"rpc\")\n-        return strRPC;\n     assert(!\"GetWarnings(): invalid parameter\");\n     return \"error\";\n }"
      },
      {
        "sha": "904e8c0440169bff7eb77a74c7c438bd74c1c0db",
        "filename": "src/warnings.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8e9a2ac74e1071c9a92b9858b7ed3143413ee94/src/warnings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8e9a2ac74e1071c9a92b9858b7ed3143413ee94/src/warnings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/warnings.h?ref=d8e9a2ac74e1071c9a92b9858b7ed3143413ee94",
        "patch": "@@ -15,7 +15,6 @@ bool GetfLargeWorkForkFound();\n void SetfLargeWorkInvalidChainFound(bool flag);\n /** Format a string that describes several potential problems detected by the core.\n  * strFor can have three values:\n- * - \"rpc\": get critical warnings, which should put the client in safe mode if non-empty\n  * - \"statusbar\": get all warnings\n  * - \"gui\": get all warnings, translated (where possible) for GUI\n  * This function only returns the highest priority warning of the set selected by strFor."
      }
    ]
  }
]