[
  {
    "sha": "1e7f7417457a811f1e69a118df4c6e14033ddb55",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZTdmNzQxNzQ1N2E4MTFmMWU2OWExMThkZjRjNmUxNDAzM2RkYjU1",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-01-23T15:44:13Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-01-24T14:48:34Z"
      },
      "message": "remove some magic mining constants in functional tests",
      "tree": {
        "sha": "ec7a74fa8417ca46c9301de550282f8c387f94bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec7a74fa8417ca46c9301de550282f8c387f94bd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e7f7417457a811f1e69a118df4c6e14033ddb55",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e7f7417457a811f1e69a118df4c6e14033ddb55",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1e7f7417457a811f1e69a118df4c6e14033ddb55",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e7f7417457a811f1e69a118df4c6e14033ddb55/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "82cf6813a4ef1b4a5439eb6cddb1ab426f3c31a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/82cf6813a4ef1b4a5439eb6cddb1ab426f3c31a2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/82cf6813a4ef1b4a5439eb6cddb1ab426f3c31a2"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 18,
      "deletions": 14
    },
    "files": [
      {
        "sha": "9b1072b826ef33e78999a595098b620ed9295477",
        "filename": "test/functional/interface_rest.py",
        "status": "modified",
        "additions": 9,
        "deletions": 7,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e7f7417457a811f1e69a118df4c6e14033ddb55/test/functional/interface_rest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e7f7417457a811f1e69a118df4c6e14033ddb55/test/functional/interface_rest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_rest.py?ref=1e7f7417457a811f1e69a118df4c6e14033ddb55",
        "patch": "@@ -22,6 +22,8 @@\n     hex_str_to_bytes,\n )\n \n+from test_framework.messages import BLOCK_HEADER_SIZE\n+\n class ReqType(Enum):\n     JSON = 1\n     BIN = 2\n@@ -213,26 +215,26 @@ def run_test(self):\n \n         # Check binary format\n         response = self.test_rest_request(\"/block/{}\".format(bb_hash), req_type=ReqType.BIN, ret_type=RetType.OBJ)\n-        assert_greater_than(int(response.getheader('content-length')), 80)\n+        assert_greater_than(int(response.getheader('content-length')), BLOCK_HEADER_SIZE)\n         response_bytes = response.read()\n \n         # Compare with block header\n         response_header = self.test_rest_request(\"/headers/1/{}\".format(bb_hash), req_type=ReqType.BIN, ret_type=RetType.OBJ)\n-        assert_equal(int(response_header.getheader('content-length')), 80)\n+        assert_equal(int(response_header.getheader('content-length')), BLOCK_HEADER_SIZE)\n         response_header_bytes = response_header.read()\n-        assert_equal(response_bytes[:80], response_header_bytes)\n+        assert_equal(response_bytes[:BLOCK_HEADER_SIZE], response_header_bytes)\n \n         # Check block hex format\n         response_hex = self.test_rest_request(\"/block/{}\".format(bb_hash), req_type=ReqType.HEX, ret_type=RetType.OBJ)\n-        assert_greater_than(int(response_hex.getheader('content-length')), 160)\n+        assert_greater_than(int(response_hex.getheader('content-length')), BLOCK_HEADER_SIZE*2)\n         response_hex_bytes = response_hex.read().strip(b'\\n')\n         assert_equal(binascii.hexlify(response_bytes), response_hex_bytes)\n \n         # Compare with hex block header\n         response_header_hex = self.test_rest_request(\"/headers/1/{}\".format(bb_hash), req_type=ReqType.HEX, ret_type=RetType.OBJ)\n-        assert_greater_than(int(response_header_hex.getheader('content-length')), 160)\n-        response_header_hex_bytes = response_header_hex.read(160)\n-        assert_equal(binascii.hexlify(response_bytes[:80]), response_header_hex_bytes)\n+        assert_greater_than(int(response_header_hex.getheader('content-length')), BLOCK_HEADER_SIZE*2)\n+        response_header_hex_bytes = response_header_hex.read(BLOCK_HEADER_SIZE*2)\n+        assert_equal(binascii.hexlify(response_bytes[:BLOCK_HEADER_SIZE]), response_header_hex_bytes)\n \n         # Check json format\n         block_json_obj = self.test_rest_request(\"/block/{}\".format(bb_hash))"
      },
      {
        "sha": "713c8beab867db46061e49d57aeba164d99b4003",
        "filename": "test/functional/mining_basic.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e7f7417457a811f1e69a118df4c6e14033ddb55/test/functional/mining_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e7f7417457a811f1e69a118df4c6e14033ddb55/test/functional/mining_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mining_basic.py?ref=1e7f7417457a811f1e69a118df4c6e14033ddb55",
        "patch": "@@ -15,6 +15,7 @@\n from test_framework.messages import (\n     CBlock,\n     CBlockHeader,\n+    BLOCK_HEADER_SIZE\n )\n from test_framework.mininode import (\n     P2PDataStore,\n@@ -131,10 +132,9 @@ def assert_submitblock(block, result_str_1, result_str_2=None):\n \n         self.log.info(\"getblocktemplate: Test bad tx count\")\n         # The tx count is immediately after the block header\n-        TX_COUNT_OFFSET = 80\n         bad_block_sn = bytearray(block.serialize())\n-        assert_equal(bad_block_sn[TX_COUNT_OFFSET], 1)\n-        bad_block_sn[TX_COUNT_OFFSET] += 1\n+        assert_equal(bad_block_sn[BLOCK_HEADER_SIZE], 1)\n+        bad_block_sn[BLOCK_HEADER_SIZE] += 1\n         assert_raises_rpc_error(-22, \"Block decode failed\", node.getblocktemplate, {'data': b2x(bad_block_sn), 'mode': 'proposal', 'rules': ['segwit']})\n \n         self.log.info(\"getblocktemplate: Test bad bits\")\n@@ -164,9 +164,9 @@ def assert_submitblock(block, result_str_1, result_str_2=None):\n         assert_submitblock(bad_block, 'prev-blk-not-found', 'prev-blk-not-found')\n \n         self.log.info('submitheader tests')\n-        assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='xx' * 80))\n-        assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='ff' * 78))\n-        assert_raises_rpc_error(-25, 'Must submit previous header', lambda: node.submitheader(hexdata='ff' * 80))\n+        assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='xx' * BLOCK_HEADER_SIZE))\n+        assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='ff' * (BLOCK_HEADER_SIZE-2)))\n+        assert_raises_rpc_error(-25, 'Must submit previous header', lambda: node.submitheader(hexdata='ff' * BLOCK_HEADER_SIZE))\n \n         block.nTime += 1\n         block.solve()"
      },
      {
        "sha": "4bd58519c5550b13bbc5c02d249cfd696db15e47",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e7f7417457a811f1e69a118df4c6e14033ddb55/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e7f7417457a811f1e69a118df4c6e14033ddb55/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=1e7f7417457a811f1e69a118df4c6e14033ddb55",
        "patch": "@@ -28,7 +28,7 @@\n import time\n \n from test_framework.siphash import siphash256\n-from test_framework.util import hex_str_to_bytes, bytes_to_hex_str\n+from test_framework.util import hex_str_to_bytes, bytes_to_hex_str, assert_equal\n \n MIN_VERSION_SUPPORTED = 60001\n MY_VERSION = 70014  # past bip-31 for ping/pong\n@@ -591,6 +591,8 @@ def __repr__(self):\n             % (self.nVersion, self.hashPrevBlock, self.hashMerkleRoot,\n                time.ctime(self.nTime), self.nBits, self.nNonce)\n \n+BLOCK_HEADER_SIZE = len(CBlockHeader().serialize())\n+assert_equal(BLOCK_HEADER_SIZE, 80)\n \n class CBlock(CBlockHeader):\n     __slots__ = (\"vtx\",)"
      }
    ]
  },
  {
    "sha": "b651ef7e1c39a820089695b29d14a07d910a385a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNjUxZWY3ZTFjMzlhODIwMDg5Njk1YjI5ZDE0YTA3ZDkxMGEzODVh",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-01-23T21:43:44Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-01-24T14:48:34Z"
      },
      "message": "submitheader: more directly test missing prev block header",
      "tree": {
        "sha": "b61640f5b3ce04a7106763881adce16c661a50aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b61640f5b3ce04a7106763881adce16c661a50aa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b651ef7e1c39a820089695b29d14a07d910a385a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b651ef7e1c39a820089695b29d14a07d910a385a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b651ef7e1c39a820089695b29d14a07d910a385a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b651ef7e1c39a820089695b29d14a07d910a385a/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1e7f7417457a811f1e69a118df4c6e14033ddb55",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e7f7417457a811f1e69a118df4c6e14033ddb55",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1e7f7417457a811f1e69a118df4c6e14033ddb55"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "5dafb11ac58b58b9830a77b758d115d2d62f412b",
        "filename": "test/functional/mining_basic.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b651ef7e1c39a820089695b29d14a07d910a385a/test/functional/mining_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b651ef7e1c39a820089695b29d14a07d910a385a/test/functional/mining_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mining_basic.py?ref=b651ef7e1c39a820089695b29d14a07d910a385a",
        "patch": "@@ -166,7 +166,7 @@ def assert_submitblock(block, result_str_1, result_str_2=None):\n         self.log.info('submitheader tests')\n         assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='xx' * BLOCK_HEADER_SIZE))\n         assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='ff' * (BLOCK_HEADER_SIZE-2)))\n-        assert_raises_rpc_error(-25, 'Must submit previous header', lambda: node.submitheader(hexdata='ff' * BLOCK_HEADER_SIZE))\n+        assert_raises_rpc_error(-25, 'Must submit previous header', lambda: node.submitheader(hexdata=super(CBlock, bad_block).serialize().hex()))\n \n         block.nTime += 1\n         block.solve()"
      }
    ]
  }
]