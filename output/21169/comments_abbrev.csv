MarcoFalke,2021-02-22 07:49:30,"I am not sure if this is worth it. This needs a lot of maintenance (adding or removing rpcs, marking them unsafe, ...) and I am sceptical that this will find any actual issues.",https://github.com/bitcoin/bitcoin/pull/21169#issuecomment-783166677,783166677,
adamjonas,2021-04-27 16:35:19,"@MarcoFalke to clarify, are you a NACK on this?",https://github.com/bitcoin/bitcoin/pull/21169#issuecomment-827747428,827747428,
practicalswift,2021-04-27 19:42:33,"@adamjonas\n\nGood question and thanks for asking it explicitly! :)\n\nI should probably have stated that more clearly in the PR description, but it should be noted that this fuzzing harness is by far is the ""most covering"" harness in the repo.\n\nIncluding this harness in the existing set of fuzzing harnesses adds coverage to five(!) percent of the code base that is currently uncovered by f",https://github.com/bitcoin/bitcoin/pull/21169#issuecomment-827874086,827874086,
MarcoFalke,2021-04-28 07:45:13,"Concept ACK 545404e7e1c72985557ccffe865cea269143e5dd\n\nIf this is leading to too much (maintenance) hassle, it can be reverted.",https://github.com/bitcoin/bitcoin/pull/21169#issuecomment-828229380,828229380,
jonatack,2021-02-13 14:52:14,"```suggestion\n    UniValue CallRPC(const std::string& rpc_method, const std::vector<std::string>& arguments)\n```",https://github.com/bitcoin/bitcoin/pull/21169#discussion_r575675324,575675324,src/test/fuzz/rpc.cpp
jonatack,2021-02-15 20:10:17,First code review LGTM otherwise.,https://github.com/bitcoin/bitcoin/pull/21169#discussion_r576402952,576402952,src/test/fuzz/rpc.cpp
MarcoFalke,2021-02-22 07:47:42,Should use MakeNoLogFileContext?,https://github.com/bitcoin/bitcoin/pull/21169#discussion_r580039685,580039685,src/test/fuzz/rpc.cpp
practicalswift,2021-04-27 21:09:02,Good point! Done!,https://github.com/bitcoin/bitcoin/pull/21169#discussion_r621602312,621602312,src/test/fuzz/rpc.cpp
practicalswift,2021-04-27 21:17:03,Addressed!,https://github.com/bitcoin/bitcoin/pull/21169#discussion_r621607064,621607064,src/test/fuzz/rpc.cpp
MarcoFalke,2021-04-28 05:49:47,fixed?,https://github.com/bitcoin/bitcoin/pull/21169#discussion_r621833653,621833653,src/test/fuzz/rpc.cpp
MarcoFalke,2021-04-28 05:57:25,"```suggestion\n    const char* limit_to_rpc_command_env = std::getenv(""LIMIT_TO_RPC_COMMAND"");\n```",https://github.com/bitcoin/bitcoin/pull/21169#discussion_r621836878,621836878,src/test/fuzz/rpc.cpp
MarcoFalke,2021-04-28 05:59:31,"```suggestion\nstd::string g_limit_to_rpc_command;\n```",https://github.com/bitcoin/bitcoin/pull/21169#discussion_r621837799,621837799,src/test/fuzz/rpc.cpp
MarcoFalke,2021-04-28 06:02:35,fixed,https://github.com/bitcoin/bitcoin/pull/21169#discussion_r621839108,621839108,src/test/fuzz/rpc.cpp
practicalswift,2021-04-28 06:39:17,Fixed! Thanks!,https://github.com/bitcoin/bitcoin/pull/21169#discussion_r621857715,621857715,src/test/fuzz/rpc.cpp
practicalswift,2021-04-28 06:39:25,Fixed! Thanks!,https://github.com/bitcoin/bitcoin/pull/21169#discussion_r621857792,621857792,src/test/fuzz/rpc.cpp
practicalswift,2021-04-28 06:39:43,Addressed. Thanks!,https://github.com/bitcoin/bitcoin/pull/21169#discussion_r621857947,621857947,src/test/fuzz/rpc.cpp
practicalswift,2021-04-28 06:39:50,Addressed. Thanks!,https://github.com/bitcoin/bitcoin/pull/21169#discussion_r621858008,621858008,src/test/fuzz/rpc.cpp
MarcoFalke,2021-04-28 08:10:05,"why is this unsafe, but the other generate* calls are safe?",https://github.com/bitcoin/bitcoin/pull/21169#discussion_r621920004,621920004,src/test/fuzz/rpc.cpp
MarcoFalke,2021-04-28 08:10:14,unused?,https://github.com/bitcoin/bitcoin/pull/21169#discussion_r621920136,621920136,src/test/fuzz/rpc.cpp
MarcoFalke,2021-04-28 08:10:41,unused?,https://github.com/bitcoin/bitcoin/pull/21169#discussion_r621920483,621920483,src/test/fuzz/rpc.cpp
MarcoFalke,2021-04-28 08:10:48,fixed?,https://github.com/bitcoin/bitcoin/pull/21169#discussion_r621920578,621920578,src/test/fuzz/rpc.cpp
MarcoFalke,2021-04-28 08:19:39,"This seems dangerous. If the rpc is ever changed to take a file path, how would we know to adjust this line?",https://github.com/bitcoin/bitcoin/pull/21169#discussion_r621927784,621927784,src/test/fuzz/rpc.cpp
practicalswift,2021-04-29 18:48:52,"Thanks! Addressed in #21810:\n\n```\n    ""generatetoaddress"",    // avoid prohibitively slow execution (when `num_blocks` is large)\n    ""generatetodescriptor"", // avoid prohibitively slow execution (when `nblocks` is large)\n```",https://github.com/bitcoin/bitcoin/pull/21169#discussion_r623306715,623306715,src/test/fuzz/rpc.cpp
practicalswift,2021-04-29 18:56:17,"Good point. Disabled as a precautionary measure in #21810.\n\n`dump*`, `save*`, `import*` and `load*` commands should probably not be part of `RPC_COMMANDS_SAFE_FOR_FUZZING`.\n\nLonger term we could perhaps also find a clever way to annotate/auto-detect RPC commands with file path arguments and have them automatically removed from `RPC_COMMANDS_SAFE_FOR_FUZZING` if they are incorrectly include",https://github.com/bitcoin/bitcoin/pull/21169#discussion_r623311399,623311399,src/test/fuzz/rpc.cpp
practicalswift,2021-04-29 19:05:04,Thanks! Addressed in follow-up.,https://github.com/bitcoin/bitcoin/pull/21169#discussion_r623316981,623316981,src/test/fuzz/rpc.cpp
practicalswift,2021-04-29 19:05:08,Thanks! Addressed in follow-up.,https://github.com/bitcoin/bitcoin/pull/21169#discussion_r623317017,623317017,src/test/fuzz/rpc.cpp
practicalswift,2021-04-29 19:05:27,Seems so! Thanks! Re-enabled in follow-up.,https://github.com/bitcoin/bitcoin/pull/21169#discussion_r623317211,623317211,src/test/fuzz/rpc.cpp
