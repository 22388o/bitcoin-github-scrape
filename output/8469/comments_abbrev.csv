fanquake,2016-08-08T02:35:37Z,This needs a rebase/conflicts fixed.\n,https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-238129412,238129412,
MarcoFalke,2016-08-08T08:07:19Z,"I think this approach of testing is interesting and may render useful\nfor bitcoin. The user guide\nhttps://github.com/emil-e/rapidcheck/blob/master/doc/user_guide.md\nmentions that the API is not finalized, so it may be better to\nintegrate it via a subtree (maybe in /test)?\n",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-238168393,238168393,
jonasschnelli,2016-08-08T08:09:27Z,"I think this is useful. I'm not very familiar with property based testing, but this seems to be something that would make sense for consensus and security critical projects.\n\nSome thoughts:\n- the rapidcheck dependency should probably only be required if one passes `--enable-tests`.\n- I think you can remove the changes in `src/test/script_tests.cpp` and its header.\n\nIf others also agree to ta",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-238168857,238168857,
MarcoFalke,2016-08-18T16:50:27Z,"@theuni Can you help here to decide if using depends is fine or a subtree would be cleaner? (I prefer a subtree per my above comment, but I am not familiar with the build system. Input is appreciated)\n",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-240785302,240785302,
Christewart,2016-08-18T17:09:04Z,I would probably need help with the build code to get it production ready. I plan to keep on adding properties to this pull request though when time permits. I'm going to try and get around implementing fanquake's comments and figure out how to do the `--enable-test` as per jonasschnelli's comment this weekend\n,https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-240790573,240790573,
MarcoFalke,2016-08-29T07:55:12Z,@Christewart Do you need help to address the feedback from @jonasschnelli?\n,https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-243056798,243056798,
Christewart,2016-08-29T12:42:09Z,@MarcoFalke Yeah I'm not really sure how to get that done\n,https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-243112764,243112764,
gmaxwell,2017-01-08T05:19:45Z,"I like this kind of testing-- testing invariants on random test cases--, and we use it extensively in libsecp256k1. It's one of the answers to my irritation with the way many of the unit tests in Bitcoin core have worked in the past: hard-coding the exact behavior.  Meaning that if you change anything, the tests all fail and you're left wondering if you broke something important or if the test was",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-271130807,271130807,
Christewart,2017-01-08T16:45:39Z,"It should also be noted that they way the test are currently written they tie in the [boost testing framework](https://github.com/emil-e/rapidcheck/blob/master/doc/boost_test.md), if we add rapidcheck as a dependency and decide to remove boost, which #8670 suggests, we will have to rewrite these test cases to be independent of boost. \n\nIn terms of speed, you would know more than I would about ",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-271162620,271162620,
TheBlueMatt,2017-07-11T18:08:24Z,"Hmm, looks like travis is failing to build rapidcheck here? Are you interested in rebasing and potentially fixing it?",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-314526522,314526522,
Christewart,2017-07-12T15:53:43Z,"It appears there is a bug with gcc 4.8 that causes a problems with lambdas and parameter packs: \n\nhttps://stackoverflow.com/questions/45062090/gcc-4-8-4-error-parameter-packs-not-expanded-with?noredirect=1#comment77097698_45062090\n\nhttps://stackoverflow.com/questions/22568642/parameter-packs-not-expanded-with-another-variadic-template-bug-with-gc\n\nhttps://gcc.gnu.org/bugzilla/show_bug.",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-314813814,314813814,
MarcoFalke,2017-08-09T11:07:10Z,"Assigned 0.16, as we might add gcc to depends by then.",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-321224399,321224399,
Christewart,2017-10-12T16:20:34Z,"An update about commits 56edb65 and d97b980:\n\n1. These commits [add generators for various scriptPubKey types](https://github.com/Christewart/bitcoin/blob/d97b9806aaf9ca13e347469392b5747ac007aeab/src/test/gen/script_gen.h#L14-L30)\n2. Using the script generators, I've created [generators for various transaction types ](https://github.com/Christewart/bitcoin/blob/d97b9806aaf9ca13e347469392b574",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-336189230,336189230,
fanquake,2017-11-29T11:42:36Z,This is using a somewhat outdated version of rapidcheck from March [last year](https://github.com/emil-e/rapidcheck/commit/f5d3afa4f387ecf147faf98d96710a6edfa420f1). Can this PR be updated to point to a newer version?,https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-347835798,347835798,
jb55,2017-12-31T20:44:41Z,"Very Strong Concept ACK. I use quickcheck a lot in Haskell land, it's amazing how many bugs it can catch, and with shrinking it can find minimal breaking test cases. I'll give this PR a spin soon.",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-354623165,354623165,
Christewart,2017-12-31T22:55:57Z,"@jb55 I am Chris_Stewart_5 on freenode. Feel free to ping. If you want to see something a little more interesting, I am starting to use this pull request as the basis for testing Mark Friedenbach's BIP98/116/117 MAST bips. \n\nhttps://github.com/maaku/bitcoin/pull/2",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-354627062,354627062,
ryanofsky,2018-02-09T18:07:42Z,"RE: https://github.com/bitcoin/bitcoin/pull/8469#discussion_r76030419\n\n> @Christewart Please try to fetch https://github.com/MarcoFalke/bitcoin/commit/befb827ccd12267083921e866b97179ba9899902 (Mf1608-rapidcheckRework) and push it here. This should fix your compile issues for now.\n\nI couldn't get the current depends build or Marco's build to work. RapidCheck install steps seem to be missing",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-364511962,364511962,
MarcoFalke,2018-02-09T19:57:04Z,@ryanofsky Thanks for the autotools fix! Will take a look soon,https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-364546236,364546236,
MarcoFalke,2018-02-10T16:05:14Z,"I tested ca0dbbd64fba9d31d0ff88984529deb4b87229fc. Some notes:\n\n* The `cmake` dependency should be mentioned in `./depends/README.md` (linux and windows)\n* The build still fails on travis, due to the gcc bug\n\n```\n[100%] Building CXX object CMakeFiles/rapidcheck.dir/src/gen/detail/ScaleInteger.cpp.o\nIn file included from /bitcoin/depends/work/build/x86_64-pc-linux-gnu/rapidcheck/f5d3a",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-364665612,364665612,
MarcoFalke,2018-02-10T16:30:33Z,"See https://github.com/MarcoFalke/bitcoin/commit/fa9f426eed2b1705cb34f77448333bd700c75a43 for a version bump of rapidcheck\n\nI think we can work around the gcc bug by building only when rapidcheck is explicitly enabled. I.e. implement something that does:\n\n```\ncd depends && make  # Doesn't build rapidcheck (RAPIDCHECK=0 by default)\ncd depends && make RAPIDCHECK=1  # Builds rapidcheck",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-364668529,364668529,
MarcoFalke,2018-02-16T18:15:04Z,Please see https://github.com/MarcoFalke/bitcoin/commit/1862c49a27b2b7ca9c9e3bd2227911bd2d30ab77 on how to disable rapidcheck by default. This should work around the travis issue (finally),https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-366315248,366315248,
MarcoFalke,2018-02-16T18:23:15Z,"If you like that commit, you could submit a minimal pull request with only the depends changes and a minimal working rapidcheck example. Merging in baby steps tends to work better.",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-366317591,366317591,
MarcoFalke,2018-02-18T18:08:31Z,You should be able to solve the whitespace issues with clang-format: https://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy,https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-366534881,366534881,
Christewart,2018-02-18T18:29:58Z,"@MarcoFalke I've tried running the script before, and I get this error: \n\nhttps://pastebin.com/vqS3pt3r\n\nI changed `0` to `22` as we want to run over the last 22 commits i'm guessing? I think it is failing because a bunch of the files in this PR are new in the tree",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-366536345,366536345,
MarcoFalke,2018-02-18T18:34:31Z,What does `which clang-format` say? Is it properly installed on you system?,https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-366536675,366536675,
PierreRochard,2018-03-23T06:26:25Z,"Concept ACK, ditto on @gmaxwell's comment regarding hard-coded behavior",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-375557430,375557430,
ryanofsky,2018-03-23T19:21:20Z,"Confirmed this works. Tested with:\n\n```sh\nmake -C depends RAPIDCHECK=1\n./autogen.sh\n./configure --prefix=$PWD/depends/x86_64-pc-linux-gnu\nmake -C src test/test_bitcoin\nsrc/test/test_bitcoin --log_level=test_suite --run_test=""*_properties""\n```",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-375772870,375772870,
Christewart,2018-03-25T02:41:52Z,I believe the travis failure here is unrelated? ,https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-375940918,375940918,
DrahtBot,2018-07-21T17:30:09Z,"<!--5d09a71f8925f3f132321140b44b946d-->The last travis run for this pull request was 113 days ago and is thus outdated. To trigger a fresh travis build, this pull request should be closed and re-opened.",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-406811483,406811483,
DrahtBot,2018-08-05T17:45:32Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-410536134,410536134,
practicalswift,2018-08-28T20:18:18Z,"@Christewart This is excellent work! Do you have time to rebase this and take it to completion, or do you prefer if someone else takes over this work? It is too good to be left unfinished :-)",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-416726152,416726152,
Christewart,2018-08-28T20:23:04Z,Hi @practicalswift it seems like the consensus is moving to #12775 which is a subset of the PR. It includes just the build stuff and a subset of the tests in this PR. ,https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-416727618,416727618,
practicalswift,2018-08-28T20:38:18Z,"@Christewart Oh, sorry! That one is rebased and nice! Thanks!",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-416732204,416732204,
DrahtBot,2018-09-09T15:51:50Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-419725152,419725152,
Empact,2018-10-09T00:30:19Z,"Moving my review to #14430, which along with #12775 was extracted from this. @Christewart should this be closed?",https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-428020929,428020929,
fanquake,2018-10-10T02:39:46Z,This was superseded by #12775 and #14430.,https://github.com/bitcoin/bitcoin/pull/8469#issuecomment-428418402,428418402,
fanquake,2016-08-08T02:33:30Z,You should be able to use something like  `$(package)-$($(package)_version)` here.\n,https://github.com/bitcoin/bitcoin/pull/8469#discussion_r73816354,73816354,depends/packages/rapidcheck.mk
fanquake,2016-08-08T02:33:51Z,No need for the empty lines.\n,https://github.com/bitcoin/bitcoin/pull/8469#discussion_r73816369,73816369,depends/packages/rapidcheck.mk
fanquake,2016-08-08T02:34:33Z,"Use `=` instead of `:` here, as well as the lines below.\n",https://github.com/bitcoin/bitcoin/pull/8469#discussion_r73816401,73816401,depends/packages/rapidcheck.mk
fanquake,2016-08-08T02:34:58Z,nit: space introduced here.\n,https://github.com/bitcoin/bitcoin/pull/8469#discussion_r73816412,73816412,configure.ac
fanquake,2016-08-08T02:36:35Z,nit: Just 2016\n,https://github.com/bitcoin/bitcoin/pull/8469#discussion_r73816469,73816469,src/test/key_properties.cpp
fanquake,2016-08-08T02:37:46Z,Does this need `$(package)_build_subdir=build` ?\n,https://github.com/bitcoin/bitcoin/pull/8469#discussion_r73816526,73816526,depends/packages/rapidcheck.mk
MarcoFalke,2016-08-19T10:52:02Z,"Again, I think a subtree is the better choice per my previous comment. Also, I don't think we can have someone verify this binary each time it is bumped, even if it was done deterministically.\n",https://github.com/bitcoin/bitcoin/pull/8469#discussion_r75462732,75462732,depends/packages/rapidcheck.mk
theuni,2016-08-19T18:37:55Z,"Not sure what you mean about the deterministic bump. This is just a source tarball. Verifying would be no different than any of the other depends.\n\nThe general rule of thumb, though, is whether builders will be able to use it without any extra work. Since rapidcheck isn't present in any distros (as far as I can see), the answer to that is ""no"".\n\nSo, unless we're willing to require a depends bu",https://github.com/bitcoin/bitcoin/pull/8469#discussion_r75531572,75531572,depends/packages/rapidcheck.mk
MarcoFalke,2016-08-19T19:31:17Z,"Ok, fine with me. Thanks for letting us know.\n",https://github.com/bitcoin/bitcoin/pull/8469#discussion_r75539305,75539305,depends/packages/rapidcheck.mk
Christewart,2016-08-21T22:00:48Z,"Not sure what you mean by this, do you mean we don't need lines 11 - 21?\n",https://github.com/bitcoin/bitcoin/pull/8469#discussion_r75604261,75604261,depends/packages/rapidcheck.mk
MarcoFalke,2016-08-24T10:13:40Z,Can you try to adjust the folder name within the targz to have the version appened?\n\nThis may fix the travis issue.\n,https://github.com/bitcoin/bitcoin/pull/8469#discussion_r76030419,76030419,depends/packages/rapidcheck.mk
Christewart,2016-08-24T15:08:32Z,"I should note that I did NOT get any of this deterministic build working on my machine, I was trying to copy what I have seen on other other files to no avail -- I just ended up adding rapidcheck to my `includes` directory on my local machine. I'm fairly new to C++ & it's build systems so I was trying to just hack the pieces together. So I wouldn't be surprised if there are deeper issues than a na",https://github.com/bitcoin/bitcoin/pull/8469#discussion_r76075164,76075164,depends/packages/rapidcheck.mk
MarcoFalke,2016-08-24T15:17:44Z,"No worries, I don't understand cpp or the build system either. I can take a look later today... I think the issue is **within** the package you uploaded.\n",https://github.com/bitcoin/bitcoin/pull/8469#discussion_r76077143,76077143,depends/packages/rapidcheck.mk
MarcoFalke,2016-08-25T17:20:46Z,@Christewart Please try to fetch https://github.com/MarcoFalke/bitcoin/commit/befb827ccd12267083921e866b97179ba9899902 (Mf1608-rapidcheckRework) and push it here. This should fix your compile issues for now.\n\nPlease note that travis will likely reject this due to a bug in gcc4.8.x: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=55914\n,https://github.com/bitcoin/bitcoin/pull/8469#discussion_r76286853,76286853,depends/packages/rapidcheck.mk
Christewart,2016-08-26T12:38:34Z,Why is this hash different than the one I provided? \n,https://github.com/bitcoin/bitcoin/pull/8469#discussion_r76411479,76411479,depends/packages/rapidcheck.mk
MarcoFalke,2016-08-26T17:44:06Z,"The file size is different, so ~~must~~ should the hash.\n\nThe targz you provided also included the 1.8 MB `.git` subfolder, which is not required.\n\nThe hash I provided should be the hash of the tarball created by GitHub: https://github.com/emil-e/rapidcheck/archive/f5d3afa4f387ecf147faf98d96710a6edfa420f1.tar.gz\n",https://github.com/bitcoin/bitcoin/pull/8469#discussion_r76458575,76458575,depends/packages/rapidcheck.mk
Christewart,2016-08-26T22:33:53Z,Ok that makes sense. Didn't realize you removed files. Do you have any idea why this is still failing?\n,https://github.com/bitcoin/bitcoin/pull/8469#discussion_r76497852,76497852,depends/packages/rapidcheck.mk
sipa,2017-01-08T01:46:31Z,"The intended idiom is just\n```c++\nCTransaction tx2(deserialize, ss);\n```\n",https://github.com/bitcoin/bitcoin/pull/8469#discussion_r95069790,95069790,src/test/transaction_properties.cpp
fanquake,2017-11-29T11:43:10Z,nit: empty line,https://github.com/bitcoin/bitcoin/pull/8469#discussion_r153764331,153764331,configure.ac
fanquake,2017-11-29T11:44:33Z,We'll probably want to put this on `https://bitcoincore.org/depends-sources`,https://github.com/bitcoin/bitcoin/pull/8469#discussion_r153764611,153764611,depends/packages/rapidcheck.mk
Christewart,2017-12-31T20:36:44Z,How do I go about this? Is there a process document some where?,https://github.com/bitcoin/bitcoin/pull/8469#discussion_r159146390,159146390,depends/packages/rapidcheck.mk
MarcoFalke,2018-01-02T12:13:13Z,This needs to be done by someone who has push access to that folder. Can be done after (or just before) this pull is merged.,https://github.com/bitcoin/bitcoin/pull/8469#discussion_r159215813,159215813,depends/packages/rapidcheck.mk
MarcoFalke,2018-02-18T19:00:13Z,Trailing white space 😛 ,https://github.com/bitcoin/bitcoin/pull/8469#discussion_r168961664,168961664,src/test/gen/merkleblock_gen.h
Empact,2018-10-08T23:59:33Z,nit: `using`?,https://github.com/bitcoin/bitcoin/pull/8469#discussion_r223528524,223528524,src/test/gen/block_gen.h
Empact,2018-10-09T00:07:14Z,"nit: looks like this method is defined with the same name here and in `merkleblock_gen.h`, how about:\n* applying `static` more liberally?\n* renaming one or the other?",https://github.com/bitcoin/bitcoin/pull/8469#discussion_r223529567,223529567,src/test/gen/bloom_gen.cpp
