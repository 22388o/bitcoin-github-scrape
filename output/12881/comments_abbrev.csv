practicalswift,2018-04-04T11:13:39Z,`LowerCase()` and `std::tolower()` are not equivalent. `std::tolower()` takes the currently installed C locale into account.,https://github.com/bitcoin/bitcoin/pull/12881#issuecomment-378564722,378564722,
fanquake,2018-04-05T01:06:54Z,"@murrayn After fixing any nits, please also [squash your commits](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits).",https://github.com/bitcoin/bitcoin/pull/12881#issuecomment-378791318,378791318,
laanwj,2018-04-05T07:25:16Z,"> LowerCase() and std::tolower() are not equivalent. std::tolower() takes the currently installed C locale into account.\n\nThanks for catching this. We should be extremely careful to not introduce locale dependencies in the low-level string parsing functions. We've had serious problems with those in the past. This can result in country-specific bugs...",https://github.com/bitcoin/bitcoin/pull/12881#issuecomment-378844244,378844244,
sipa,2018-04-05T11:50:32Z,"Please don't overthink this. Decoding addresses is hardly relevant (I don't think anyone would notice if they were 100x slower). My goal when writing this was more clarity and simplicity than speed, though I'm obviously not opposed to performance improvements if they don't conflict with those goals.\n\nI am interested in whether the additional branches don't make performance worse though. My gut f",https://github.com/bitcoin/bitcoin/pull/12881#issuecomment-378909918,378909918,
murrayn,2018-04-06T02:10:30Z,"@sipa Thanks for the feedback. I've reworked the code again to reflect your input.\n",https://github.com/bitcoin/bitcoin/pull/12881#issuecomment-379128807,379128807,
MarcoFalke,2018-04-11T19:38:20Z,"To get rid of the merge commit, please squash your commits according to https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits",https://github.com/bitcoin/bitcoin/pull/12881#issuecomment-380571375,380571375,
murrayn,2018-04-20T09:22:46Z,"Not sure if this PR is stalled due to the earlier comment about benchmarks...I didn't think benchmarks would be as interesting after my most recent commit, in which the code was more straightforward. Just in case, I have benchmarked:\n\n    if (c >= 'a' && c <= 'z') lower = 1;\n    else if (c >= 'A' && c <= 'Z') upper = 1;\n    else if (c < 33 || c > 126) return 0;\n\nversus\n\n    if (c <",https://github.com/bitcoin/bitcoin/pull/12881#issuecomment-383039089,383039089,
MarcoFalke,2018-04-26T11:47:25Z,Please also adjust the OP,https://github.com/bitcoin/bitcoin/pull/12881#issuecomment-384611605,384611605,
laanwj,2018-05-15T10:08:14Z,utACK 60f61f99529f54f85c847d61122c70c0358ebecc,https://github.com/bitcoin/bitcoin/pull/12881#issuecomment-389114819,389114819,
practicalswift,2018-04-04T11:05:50Z,Nit: `if (upper)` instead of `if(upper)`,https://github.com/bitcoin/bitcoin/pull/12881#discussion_r179101685,179101685,src/bech32.cpp
practicalswift,2018-04-04T11:10:57Z,Add `assert(c >= 33 && c <= 126);` on the line before `int8_t rev = CHARSET_REV[c];` to make assumption explicit?,https://github.com/bitcoin/bitcoin/pull/12881#discussion_r179102794,179102794,src/bech32.cpp
murrayn,2018-04-04T11:32:56Z,Not even a nit. Should be a compiler error IMO. I must be tired. :-),https://github.com/bitcoin/bitcoin/pull/12881#discussion_r179107878,179107878,src/bech32.cpp
sipa,2018-04-05T00:44:08Z,Please follow the coding style: any `if` that has anything but just a single-statement then body must use braces and indentation.,https://github.com/bitcoin/bitcoin/pull/12881#discussion_r179323297,179323297,src/bech32.cpp
promag,2018-04-05T01:32:12Z,`else` here would improve a bit.,https://github.com/bitcoin/bitcoin/pull/12881#discussion_r179329952,179329952,src/bech32.cpp
promag,2018-04-05T01:43:05Z,"Maybe better:\n```cpp\nif (c >= 'a') { if (c <= 'z') lower = true; }\nelse if (c >= 'A') { if (c <= 'Z') upper = true; }",https://github.com/bitcoin/bitcoin/pull/12881#discussion_r179331525,179331525,src/bech32.cpp
murrayn,2018-04-05T03:23:39Z,"@practicalswift If I were writing Decode() from scratch, I don't think it would occur to me to add an assert() there. Not convinced it adds any value.\n",https://github.com/bitcoin/bitcoin/pull/12881#discussion_r179341938,179341938,src/bech32.cpp
murrayn,2018-04-05T03:29:02Z,@promag Do you have an example in mind of a most common case?,https://github.com/bitcoin/bitcoin/pull/12881#discussion_r179342380,179342380,src/bech32.cpp
promag,2018-04-05T08:35:20Z,The success case?,https://github.com/bitcoin/bitcoin/pull/12881#discussion_r179387291,179387291,src/bech32.cpp
murrayn,2018-04-05T10:25:09Z,"OK, in that case (let's assume a string consisting only of lowercase or uppercase letters) the existing code will do three comparisons and one assignment, per character. The proposed code will do three comparisons per character, with the added benefit of returning earlier in the case of a malformed string. Not sure why you would ""suspect this makes the most common case worst"".\n",https://github.com/bitcoin/bitcoin/pull/12881#discussion_r179417135,179417135,src/bech32.cpp
murrayn,2018-04-05T11:28:26Z,"Further to this, if we're going to assume the most common case is the success case (which is reasonable), it would probably be good to move the initial (c < 33 || c > 126) check to an ultimate ""else if"" check to the original code.\n",https://github.com/bitcoin/bitcoin/pull/12881#discussion_r179430899,179430899,src/bech32.cpp
promag,2018-04-05T20:41:25Z,"@murrayn probably, but can you post benchmark results?",https://github.com/bitcoin/bitcoin/pull/12881#discussion_r179594303,179594303,src/bech32.cpp
laanwj,2018-04-26T11:05:00Z,"Remember that we have asserts enabled on release notes, better not add them in inner loops especially not if the goal is to 'tighten up' anything.",https://github.com/bitcoin/bitcoin/pull/12881#discussion_r184350396,184350396,src/bech32.cpp
