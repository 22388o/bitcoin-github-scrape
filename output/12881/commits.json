[
  {
    "sha": "60f61f99529f54f85c847d61122c70c0358ebecc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MGY2MWY5OTUyOWY1NGY4NWM4NDdkNjExMjJjNzBjMDM1OGViZWNj",
    "commit": {
      "author": {
        "name": "murrayn",
        "email": "github@nesbitt.ca",
        "date": "2018-04-04T10:24:25Z"
      },
      "committer": {
        "name": "murrayn",
        "email": "github@nesbitt.ca",
        "date": "2018-04-13T00:52:33Z"
      },
      "message": "Tighten up bech32::Decode(); add tests.",
      "tree": {
        "sha": "f48afc9cb38f55bb1f99331b3c7ecf0bd97733b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f48afc9cb38f55bb1f99331b3c7ecf0bd97733b8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60f61f99529f54f85c847d61122c70c0358ebecc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60f61f99529f54f85c847d61122c70c0358ebecc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/60f61f99529f54f85c847d61122c70c0358ebecc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60f61f99529f54f85c847d61122c70c0358ebecc/comments",
    "author": {
      "login": "murrayn",
      "id": 5404807,
      "node_id": "MDQ6VXNlcjU0MDQ4MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5404807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murrayn",
      "html_url": "https://github.com/murrayn",
      "followers_url": "https://api.github.com/users/murrayn/followers",
      "following_url": "https://api.github.com/users/murrayn/following{/other_user}",
      "gists_url": "https://api.github.com/users/murrayn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murrayn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murrayn/subscriptions",
      "organizations_url": "https://api.github.com/users/murrayn/orgs",
      "repos_url": "https://api.github.com/users/murrayn/repos",
      "events_url": "https://api.github.com/users/murrayn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murrayn/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "murrayn",
      "id": 5404807,
      "node_id": "MDQ6VXNlcjU0MDQ4MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5404807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murrayn",
      "html_url": "https://github.com/murrayn",
      "followers_url": "https://api.github.com/users/murrayn/followers",
      "following_url": "https://api.github.com/users/murrayn/following{/other_user}",
      "gists_url": "https://api.github.com/users/murrayn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murrayn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murrayn/subscriptions",
      "organizations_url": "https://api.github.com/users/murrayn/orgs",
      "repos_url": "https://api.github.com/users/murrayn/repos",
      "events_url": "https://api.github.com/users/murrayn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murrayn/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad960f5771dc251c8e1198dd8a82e18df4562171",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad960f5771dc251c8e1198dd8a82e18df4562171",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad960f5771dc251c8e1198dd8a82e18df4562171"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 6,
      "deletions": 3
    },
    "files": [
      {
        "sha": "c55f22b9b75f1aa2ee6e5403aacd8b261daae943",
        "filename": "src/bech32.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60f61f99529f54f85c847d61122c70c0358ebecc/src/bech32.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60f61f99529f54f85c847d61122c70c0358ebecc/src/bech32.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bech32.cpp?ref=60f61f99529f54f85c847d61122c70c0358ebecc",
        "patch": "@@ -160,9 +160,9 @@ std::pair<std::string, data> Decode(const std::string& str) {\n     bool lower = false, upper = false;\n     for (size_t i = 0; i < str.size(); ++i) {\n         unsigned char c = str[i];\n-        if (c < 33 || c > 126) return {};\n         if (c >= 'a' && c <= 'z') lower = true;\n-        if (c >= 'A' && c <= 'Z') upper = true;\n+        else if (c >= 'A' && c <= 'Z') upper = true;\n+        else if (c < 33 || c > 126) return {};\n     }\n     if (lower && upper) return {};\n     size_t pos = str.rfind('1');\n@@ -172,7 +172,8 @@ std::pair<std::string, data> Decode(const std::string& str) {\n     data values(str.size() - 1 - pos);\n     for (size_t i = 0; i < str.size() - 1 - pos; ++i) {\n         unsigned char c = str[i + pos + 1];\n-        int8_t rev = (c < 33 || c > 126) ? -1 : CHARSET_REV[c];\n+        int8_t rev = CHARSET_REV[c];\n+\n         if (rev == -1) {\n             return {};\n         }"
      },
      {
        "sha": "22b77e309822c045ad265efb3c5042e9e9c758f9",
        "filename": "src/test/bech32_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60f61f99529f54f85c847d61122c70c0358ebecc/src/test/bech32_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60f61f99529f54f85c847d61122c70c0358ebecc/src/test/bech32_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bech32_tests.cpp?ref=60f61f99529f54f85c847d61122c70c0358ebecc",
        "patch": "@@ -57,6 +57,8 @@ BOOST_AUTO_TEST_CASE(bip173_testvectors_invalid)\n         \"A1G7SGD8\",\n         \"10a06t8\",\n         \"1qzzfhee\",\n+        \"a12UEL5L\",\n+        \"A12uEL5L\",\n     };\n     for (const std::string& str : CASES) {\n         auto ret = bech32::Decode(str);"
      }
    ]
  }
]