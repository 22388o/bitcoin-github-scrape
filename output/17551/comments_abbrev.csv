paymog,2019-11-23 15:41:43,what do you think about separating out the invalid value test logic into an entirely new test? I personally believe tests should be as small and focused as possible - would love to know what you think.,https://github.com/bitcoin/bitcoin/pull/17551#discussion_r349877424,349877424,src/test/rpc_tests.cpp
paymog,2019-11-23 15:43:33,do we need this param for `RPCConvertNamedValues` to throw? It seems that `std::runtime_error` will be thrown when `address` is parsed.,https://github.com/bitcoin/bitcoin/pull/17551#discussion_r349877483,349877483,src/test/rpc_tests.cpp
paymog,2019-11-23 15:45:50,"do you want to be a hero and also test the logic `even if it is empty` from https://github.com/bitcoin/bitcoin/blob/cab94cc07489f704c4b95171b23be0e8025df794/src/rpc/client.cpp#L247\n",https://github.com/bitcoin/bitcoin/pull/17551#discussion_r349877591,349877591,src/test/rpc_tests.cpp
brakmic,2019-11-23 15:58:59,"I followed the other tests from rpc_tests.cpp when writing this one. Not sure if this function should be tested via two separate tests. Nothing agains more tests, of course, so feel free to provide alternatives.",https://github.com/bitcoin/bitcoin/pull/17551#discussion_r349878089,349878089,src/test/rpc_tests.cpp
brakmic,2019-11-23 16:00:16,üëç ,https://github.com/bitcoin/bitcoin/pull/17551#discussion_r349878125,349878125,src/test/rpc_tests.cpp
brakmic,2019-11-23 16:00:50,I must admit that I don't understand your question. Sorry.,https://github.com/bitcoin/bitcoin/pull/17551#discussion_r349878141,349878141,src/test/rpc_tests.cpp
paymog,2019-11-28 08:07:14,"Sorry for the confusion. What do you think about adding a test like:\n\n```\n    UniValue result;\n    std::vector<std::string> valid_named_values = {\n        ""nblocks=10"",\n        ""address="", // note that no address is provided by the = exists, an error should not be thrown\n    };\n\n    BOOST_CHECK_NO_THROW(result = RPCConvertNamedValues(""generatetoaddress"", valid_named_values));\n`",https://github.com/bitcoin/bitcoin/pull/17551#discussion_r351635499,351635499,src/test/rpc_tests.cpp
paymog,2019-11-28 08:09:37,"Hmm, I'm new to the codebase, I guess we should stick to the style that already exists. ",https://github.com/bitcoin/bitcoin/pull/17551#discussion_r351636419,351636419,src/test/rpc_tests.cpp
brakmic,2019-11-28 08:17:05,Looks good. Many thanks. Will try it out!,https://github.com/bitcoin/bitcoin/pull/17551#discussion_r351639002,351639002,src/test/rpc_tests.cpp
theStack,2020-03-20 15:55:24,"nit: could declare this as `const` (or as alternative, not even create an explicit variable but simply directly pass an initializer list, like in the test case `rpc_convert_values_generatetoaddress` above).",https://github.com/bitcoin/bitcoin/pull/17551#discussion_r395731564,395731564,src/test/rpc_tests.cpp
theStack,2020-03-20 15:56:52,"I'd agree to paymog here, the `""maxtries""` parameter is not needed for the exception to be thrown.",https://github.com/bitcoin/bitcoin/pull/17551#discussion_r395732540,395732540,src/test/rpc_tests.cpp
theStack,2020-03-20 15:58:19,There should be a short explanation comment somewhere (either here or directly on the invalid named parameter) on _why_ this is invalid and throws an exception.,https://github.com/bitcoin/bitcoin/pull/17551#discussion_r395733516,395733516,src/test/rpc_tests.cpp
brakmic,2020-03-20 16:22:26,"Many thanks! \nI've updated the code.",https://github.com/bitcoin/bitcoin/pull/17551#discussion_r395748489,395748489,src/test/rpc_tests.cpp
