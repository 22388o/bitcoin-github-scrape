[
  {
    "sha": "db198d51a651086744871c972637f3856675a2ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYjE5OGQ1MWE2NTEwODY3NDQ4NzFjOTcyNjM3ZjM4NTY2NzVhMmVk",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-01-08T09:11:25Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-01-08T10:15:00Z"
      },
      "message": "Fix RPCTimerInterface ordering issue\nDispatching a QThread from a non Qt thread is not allowed. Always use the HTTPRPCTimerInterface (non QT) to dispatch RPCRunLater threads.",
      "tree": {
        "sha": "8b74381bfe25d5399cce59943ac954be7de9ab43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b74381bfe25d5399cce59943ac954be7de9ab43"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db198d51a651086744871c972637f3856675a2ed",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWj4wkAAoJECnUvLZBb1Ps7tcP/3DabTHOsmZwJhyLv5ZgdcfY\nmEwVzcl05pXvCxPMMyJQQDqT7nUdsWiO1jg9uWRX7umSBb5hNkTyfaKoNTIQjvB2\nM2IloyU+wyN2EYa1kSsSGjOVDM7MQSjziP+fq4Wee59Q1ZzYNRWVb5jHgDNNsHae\nuo5SAcVEnD71yq0YTalVrCTLK+7nXeeFEAaSRhIGpv0+dedNQlyqbuvWKk5/j4p3\nkOL3GwLwqk/EmI3Q/YdXyo2FWDU7iXq0Yf9Kkj90krvQyJRn/YUt7kmRMYyFTxpN\n+TnGRVEJ9IKkMWxbbXdypI8iyx/kV6gKaxyeMl/iFVNdzHSNh6ka0kJC/fpOYJ51\nooIWiG1qlEu3590tVv0s+LCOXIjycf8PqJbhPRs95BGLBstNlnuHBGDKT1Yw8rR4\nOO8SJoXyKnpzbAprILvvCSqDsqZ3MCyfn0X6krie5jz5PeKIO27rNQFZC1xwgBhY\n5L9JtGOIRu+oxr0cOtU6eUeKt67raGS4KbJvRe/23fg3cOU2SqaEQY/RlNTuD4H2\nH+YgTKmuaQR44abAswXpz66ZoZG1M1b3bCQ870NKZBocX6XRF0Jr3bwPQ7JLDkkl\n8Fw1PRd42RgJOg1xNZWeCX5gR+dQO45zFJWk37HiOeaMhK9Ra1wy8cc+f4ecOe+3\nBKHvcAjp8v0u7Q2jGfJH\n=b9R+\n-----END PGP SIGNATURE-----",
        "payload": "tree 8b74381bfe25d5399cce59943ac954be7de9ab43\nparent b1cf0058d9b3d3e218f1dc31ee688e5beb21f573\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1452244285 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1452248100 +0100\n\nFix RPCTimerInterface ordering issue\nDispatching a QThread from a non Qt thread is not allowed. Always use the HTTPRPCTimerInterface (non QT) to dispatch RPCRunLater threads.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db198d51a651086744871c972637f3856675a2ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/db198d51a651086744871c972637f3856675a2ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db198d51a651086744871c972637f3856675a2ed/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b1cf0058d9b3d3e218f1dc31ee688e5beb21f573",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1cf0058d9b3d3e218f1dc31ee688e5beb21f573",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b1cf0058d9b3d3e218f1dc31ee688e5beb21f573"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "de60bb6b1e9d07a5448fe459f27c38f8f3451b0d",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db198d51a651086744871c972637f3856675a2ed/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db198d51a651086744871c972637f3856675a2ed/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=db198d51a651086744871c972637f3856675a2ed",
        "patch": "@@ -563,7 +563,7 @@ void RPCRunLater(const std::string& name, boost::function<void(void)> func, int6\n     if (timerInterfaces.empty())\n         throw JSONRPCError(RPC_INTERNAL_ERROR, \"No timer handler registered for RPC\");\n     deadlineTimers.erase(name);\n-    RPCTimerInterface* timerInterface = timerInterfaces[0];\n+    RPCTimerInterface* timerInterface = timerInterfaces.back();\n     LogPrint(\"rpc\", \"queue run of timer %s in %i seconds (using %s)\\n\", name, nSeconds, timerInterface->Name());\n     deadlineTimers.insert(std::make_pair(name, boost::shared_ptr<RPCTimerBase>(timerInterface->NewTimer(func, nSeconds*1000))));\n }"
      }
    ]
  },
  {
    "sha": "8a7f0001be88122256b1a8dc29b066210dc85625",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YTdmMDAwMWJlODgxMjIyNTZiMWE4ZGMyOWIwNjYyMTBkYzg1NjI1",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-01-08T10:03:52Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-01-08T10:18:28Z"
      },
      "message": "[RPC] remove the option of having multiple timer interfaces",
      "tree": {
        "sha": "02d35c01a5d68c8aa54662cbf0f0acec0681f1f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/02d35c01a5d68c8aa54662cbf0f0acec0681f1f2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8a7f0001be88122256b1a8dc29b066210dc85625",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWj4z2AAoJECnUvLZBb1Ps/5gQAJgMYnOppAOccc+5WnO6NavU\nkvynusB3k4g6F9PPdtw0NSQh0WMtRDTcsKW/PGYM1kp/cJscez+2StUkEj+MAQ8m\nTdSTZLK0655DoU+C5AEullZZMr9Ob+o52Gei2llnLfvhm6ljd/ul9hoZTVuKLf97\njqhzmAglZKdUrKTAiiCQ3GGOLz82mO/KEV3stX+b8EUr0qf/QkLlScS96XQZdBqL\n9gjyIfsMs8m0j8LEJQnoygiqE0X3AVBqpKBLE22raNzTvgh8hcYZpiufOao/Crfg\nTF2xu64MGbnSbpgDULe3scslzvqgg8u0UMxsa5VUYZw3DwYmFyI74nJGRObkmTUC\nFn/d2rxuHrRsoyg1dGjqqZGl62Q42uoJN6dbcU8fSuvESFFUMfvpooG0W3g56QFo\nrelJ2Jm6WkzuBZd0mQlM3nTsVUOIZmLzwJZu+PTBi0dVOWJH2xBr0PYBtnIWI61p\nov7w2Ba6s8KQQgdr+rF8E31iXMGeFktzA19c41ddiUQtDFkTYl5V2WpkHxb73Rpn\nmn0mObMqOkXrQj/L4ApZKC6VgzjUhpRxzAnLVTdV1QTayht5Rd/OFtRlgU4xAHQX\ntKu0qbDmfDCpDpJ6E/TjpIGeJH/doVq9BqpACX3maXmeyhn/WhQrDVr3LwDjvTL2\nDJZTA75qRH72FV2gbbnz\n=xiRc\n-----END PGP SIGNATURE-----",
        "payload": "tree 02d35c01a5d68c8aa54662cbf0f0acec0681f1f2\nparent db198d51a651086744871c972637f3856675a2ed\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1452247432 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1452248308 +0100\n\n[RPC] remove the option of having multiple timer interfaces\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a7f0001be88122256b1a8dc29b066210dc85625",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8a7f0001be88122256b1a8dc29b066210dc85625",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a7f0001be88122256b1a8dc29b066210dc85625/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "db198d51a651086744871c972637f3856675a2ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db198d51a651086744871c972637f3856675a2ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/db198d51a651086744871c972637f3856675a2ed"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 25,
      "deletions": 17
    },
    "files": [
      {
        "sha": "1466dc0cbf93fe264a5b3378e8e79d8c1747ae67",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a7f0001be88122256b1a8dc29b066210dc85625/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a7f0001be88122256b1a8dc29b066210dc85625/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=8a7f0001be88122256b1a8dc29b066210dc85625",
        "patch": "@@ -226,7 +226,7 @@ bool StartHTTPRPC()\n \n     assert(EventBase());\n     httpRPCTimerInterface = new HTTPRPCTimerInterface(EventBase());\n-    RPCRegisterTimerInterface(httpRPCTimerInterface);\n+    RPCSetTimerInterface(httpRPCTimerInterface);\n     return true;\n }\n \n@@ -240,7 +240,7 @@ void StopHTTPRPC()\n     LogPrint(\"rpc\", \"Stopping HTTP RPC server\\n\");\n     UnregisterHTTPHandler(\"/\", true);\n     if (httpRPCTimerInterface) {\n-        RPCUnregisterTimerInterface(httpRPCTimerInterface);\n+        RPCUnsetTimerInterface(httpRPCTimerInterface);\n         delete httpRPCTimerInterface;\n         httpRPCTimerInterface = 0;\n     }"
      },
      {
        "sha": "7178bc00e61b4b1c11afe78f6aee5dd82e86a3f4",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a7f0001be88122256b1a8dc29b066210dc85625/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a7f0001be88122256b1a8dc29b066210dc85625/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=8a7f0001be88122256b1a8dc29b066210dc85625",
        "patch": "@@ -278,7 +278,9 @@ RPCConsole::RPCConsole(const PlatformStyle *platformStyle, QWidget *parent) :\n #endif\n     // Register RPC timer interface\n     rpcTimerInterface = new QtRPCTimerInterface();\n-    RPCRegisterTimerInterface(rpcTimerInterface);\n+    // avoid accidentally overwriting an existing, non QTThread\n+    // based timer interface\n+    RPCSetTimerInterfaceIfUnset(rpcTimerInterface);\n \n     startExecutor();\n     setTrafficGraphRange(INITIAL_TRAFFIC_GRAPH_MINS);\n@@ -293,7 +295,7 @@ RPCConsole::~RPCConsole()\n {\n     GUIUtil::saveWindowGeometry(\"nRPCConsoleWindow\", this);\n     Q_EMIT stopExecutor();\n-    RPCUnregisterTimerInterface(rpcTimerInterface);\n+    RPCUnsetTimerInterface(rpcTimerInterface);\n     delete rpcTimerInterface;\n     delete ui;\n }"
      },
      {
        "sha": "78d6898bc32bfcf7d0da8e96149f2e362aacb6f6",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 9,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a7f0001be88122256b1a8dc29b066210dc85625/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a7f0001be88122256b1a8dc29b066210dc85625/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=8a7f0001be88122256b1a8dc29b066210dc85625",
        "patch": "@@ -33,7 +33,7 @@ static bool fRPCInWarmup = true;\n static std::string rpcWarmupStatus(\"RPC server started\");\n static CCriticalSection cs_rpcWarmup;\n /* Timer-creating functions */\n-static std::vector<RPCTimerInterface*> timerInterfaces;\n+static RPCTimerInterface* timerInterface = NULL;\n /* Map of name to timer.\n  * @note Can be changed to std::unique_ptr when C++11 */\n static std::map<std::string, boost::shared_ptr<RPCTimerBase> > deadlineTimers;\n@@ -546,24 +546,28 @@ std::string HelpExampleRpc(const std::string& methodname, const std::string& arg\n         \"\\\"method\\\": \\\"\" + methodname + \"\\\", \\\"params\\\": [\" + args + \"] }' -H 'content-type: text/plain;' http://127.0.0.1:8332/\\n\";\n }\n \n-void RPCRegisterTimerInterface(RPCTimerInterface *iface)\n+void RPCSetTimerInterfaceIfUnset(RPCTimerInterface *iface)\n {\n-    timerInterfaces.push_back(iface);\n+    if (!timerInterface)\n+        timerInterface = iface;\n }\n \n-void RPCUnregisterTimerInterface(RPCTimerInterface *iface)\n+void RPCSetTimerInterface(RPCTimerInterface *iface)\n {\n-    std::vector<RPCTimerInterface*>::iterator i = std::find(timerInterfaces.begin(), timerInterfaces.end(), iface);\n-    assert(i != timerInterfaces.end());\n-    timerInterfaces.erase(i);\n+    timerInterface = iface;\n+}\n+\n+void RPCUnsetTimerInterface(RPCTimerInterface *iface)\n+{\n+    if (timerInterface == iface)\n+        timerInterface = NULL;\n }\n \n void RPCRunLater(const std::string& name, boost::function<void(void)> func, int64_t nSeconds)\n {\n-    if (timerInterfaces.empty())\n+    if (!timerInterface)\n         throw JSONRPCError(RPC_INTERNAL_ERROR, \"No timer handler registered for RPC\");\n     deadlineTimers.erase(name);\n-    RPCTimerInterface* timerInterface = timerInterfaces.back();\n     LogPrint(\"rpc\", \"queue run of timer %s in %i seconds (using %s)\\n\", name, nSeconds, timerInterface->Name());\n     deadlineTimers.insert(std::make_pair(name, boost::shared_ptr<RPCTimerBase>(timerInterface->NewTimer(func, nSeconds*1000))));\n }"
      },
      {
        "sha": "9dce318872f994fd988bf899574d5035645a22ce",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a7f0001be88122256b1a8dc29b066210dc85625/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a7f0001be88122256b1a8dc29b066210dc85625/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=8a7f0001be88122256b1a8dc29b066210dc85625",
        "patch": "@@ -100,10 +100,12 @@ class RPCTimerInterface\n     virtual RPCTimerBase* NewTimer(boost::function<void(void)>& func, int64_t millis) = 0;\n };\n \n-/** Register factory function for timers */\n-void RPCRegisterTimerInterface(RPCTimerInterface *iface);\n-/** Unregister factory function for timers */\n-void RPCUnregisterTimerInterface(RPCTimerInterface *iface);\n+/** Set the factory function for timers */\n+void RPCSetTimerInterface(RPCTimerInterface *iface);\n+/** Set the factory function for timer, but only, if unset */\n+void RPCSetTimerInterfaceIfUnset(RPCTimerInterface *iface);\n+/** Unset factory function for timers */\n+void RPCUnsetTimerInterface(RPCTimerInterface *iface);\n \n /**\n  * Run func nSeconds from now."
      }
    ]
  }
]