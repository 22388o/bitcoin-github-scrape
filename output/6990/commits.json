[
  {
    "sha": "a264c32e3321ae909ca59cb8ce8bf5d812dbc4e1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMjY0YzMyZTMzMjFhZTkwOWNhNTljYjhjZThiZjVkODEyZGJjNGUx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-11T16:34:10Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-13T10:10:48Z"
      },
      "message": "http: speed up shutdown\n\nThis continues/fixes #6719.\n\n`event_base_loopbreak` was not doing what I expected it to, at least in\nlibevent 2.0.21.\nWhat I expected was that it sets a timeout, given that no other pending\nevents it would exit in N seconds. However, what it does was delay the\nevent loop exit with 10 seconds, even if nothing is pending.\n\nSolve it in a different way: give the event loop thread time to exit\nout of itself, and if it doesn't, send loopbreak.\n\nThis speeds up the RPC tests a lot, each exit incurred a 10 second\noverhead, with this change there should be no shutdown overhead in the\ncommon case and up to two seconds if the event loop is blocking.\n\nAs a bonus this breaks dependency on boost::thread_group, as the HTTP\nserver minds its own offspring.",
      "tree": {
        "sha": "2f934da3736223e127356a496b0bfb6fa4563fca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2f934da3736223e127356a496b0bfb6fa4563fca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a264c32e3321ae909ca59cb8ce8bf5d812dbc4e1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWRbcqAAoJEHSBCwEjRsmmVLIH/0HmbGSiRmBbUxrfEOiFI4zc\n2AEaEo1E1B2Xf2EDTZDpqHwvDB7WvRn2UqpvJvXDFlZgPHPQibYWyi8L+YsPPFKo\nbi3D1CWOuafmbAIjUD0JB1hrAFxH+cL8HtxUCeKrqVEKibVYzCeppaveBsX+FKnF\ntz0DqBAmDP9d1j2viT7PGOkIZDbJeLMog+tvzse+oLxwzVE4q3ZSpCwAa9/yeNbg\ns/n4pKMfY+9oRZx7dycB4D5IiaMU39FC+q/yShaI+E4ieGSFWt2yJ0E/auHzK5/B\nHdZTvMOWniuq4CvUw0zLPFxwRIEb/DZxOg1h9hfhWlFqfOlXhZCSY2bxwmnaWnU=\n=BKrI\n-----END PGP SIGNATURE-----",
        "payload": "tree 2f934da3736223e127356a496b0bfb6fa4563fca\nparent 3ac70609345a249a74fad61b70f93e8a19245011\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447259650 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447409448 +0100\n\nhttp: speed up shutdown\n\nThis continues/fixes #6719.\n\n`event_base_loopbreak` was not doing what I expected it to, at least in\nlibevent 2.0.21.\nWhat I expected was that it sets a timeout, given that no other pending\nevents it would exit in N seconds. However, what it does was delay the\nevent loop exit with 10 seconds, even if nothing is pending.\n\nSolve it in a different way: give the event loop thread time to exit\nout of itself, and if it doesn't, send loopbreak.\n\nThis speeds up the RPC tests a lot, each exit incurred a 10 second\noverhead, with this change there should be no shutdown overhead in the\ncommon case and up to two seconds if the event loop is blocking.\n\nAs a bonus this breaks dependency on boost::thread_group, as the HTTP\nserver minds its own offspring.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a264c32e3321ae909ca59cb8ce8bf5d812dbc4e1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a264c32e3321ae909ca59cb8ce8bf5d812dbc4e1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a264c32e3321ae909ca59cb8ce8bf5d812dbc4e1/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3ac70609345a249a74fad61b70f93e8a19245011",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ac70609345a249a74fad61b70f93e8a19245011",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3ac70609345a249a74fad61b70f93e8a19245011"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 22,
      "deletions": 12
    },
    "files": [
      {
        "sha": "424ef015c8ccd73d711fa64db37435999774e450",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 10,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a264c32e3321ae909ca59cb8ce8bf5d812dbc4e1/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a264c32e3321ae909ca59cb8ce8bf5d812dbc4e1/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=a264c32e3321ae909ca59cb8ce8bf5d812dbc4e1",
        "patch": "@@ -438,15 +438,17 @@ bool InitHTTPServer()\n     return true;\n }\n \n-bool StartHTTPServer(boost::thread_group& threadGroup)\n+boost::thread threadHTTP;\n+\n+bool StartHTTPServer()\n {\n     LogPrint(\"http\", \"Starting HTTP server\\n\");\n     int rpcThreads = std::max((long)GetArg(\"-rpcthreads\", DEFAULT_HTTP_THREADS), 1L);\n     LogPrintf(\"HTTP: starting %d worker threads\\n\", rpcThreads);\n-    threadGroup.create_thread(boost::bind(&ThreadHTTP, eventBase, eventHTTP));\n+    threadHTTP = boost::thread(boost::bind(&ThreadHTTP, eventBase, eventHTTP));\n \n     for (int i = 0; i < rpcThreads; i++)\n-        threadGroup.create_thread(boost::bind(&HTTPWorkQueueRun, workQueue));\n+        boost::thread(boost::bind(&HTTPWorkQueueRun, workQueue));\n     return true;\n }\n \n@@ -461,13 +463,6 @@ void InterruptHTTPServer()\n         // Reject requests on current connections\n         evhttp_set_gencb(eventHTTP, http_reject_request_cb, NULL);\n     }\n-    if (eventBase) {\n-        // Force-exit event loop after predefined time\n-        struct timeval tv;\n-        tv.tv_sec = 10;\n-        tv.tv_usec = 0;\n-        event_base_loopexit(eventBase, &tv);\n-    }\n     if (workQueue)\n         workQueue->Interrupt();\n }\n@@ -480,6 +475,20 @@ void StopHTTPServer()\n         workQueue->WaitExit();\n         delete workQueue;\n     }\n+    if (eventBase) {\n+        LogPrint(\"http\", \"Waiting for HTTP event thread to exit\\n\");\n+        // Give event loop a few seconds to exit (to send back last RPC responses), then break it\n+        // Before this was solved with event_base_loopexit, but that didn't work as expected in\n+        // at least libevent 2.0.21 and always introduced a delay. In libevent\n+        // master that appears to be solved, so in the future that solution\n+        // could be used again (if desirable).\n+        // (see discussion in https://github.com/bitcoin/bitcoin/pull/6990)\n+        if (!threadHTTP.try_join_for(boost::chrono::milliseconds(2000))) {\n+            LogPrintf(\"HTTP event loop did not exit within allotted time, sending loopbreak\\n\");\n+            event_base_loopbreak(eventBase);\n+            threadHTTP.join();\n+        }\n+    }\n     if (eventHTTP) {\n         evhttp_free(eventHTTP);\n         eventHTTP = 0;\n@@ -488,6 +497,7 @@ void StopHTTPServer()\n         event_base_free(eventBase);\n         eventBase = 0;\n     }\n+    LogPrint(\"http\", \"Stopped HTTP server\\n\");\n }\n \n struct event_base* EventBase()"
      },
      {
        "sha": "20a119cc5c9caa512638679ee0a2a192f8b31a3e",
        "filename": "src/httpserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a264c32e3321ae909ca59cb8ce8bf5d812dbc4e1/src/httpserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a264c32e3321ae909ca59cb8ce8bf5d812dbc4e1/src/httpserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.h?ref=a264c32e3321ae909ca59cb8ce8bf5d812dbc4e1",
        "patch": "@@ -28,7 +28,7 @@ bool InitHTTPServer();\n  * This is separate from InitHTTPServer to give users race-condition-free time\n  * to register their handlers between InitHTTPServer and StartHTTPServer.\n  */\n-bool StartHTTPServer(boost::thread_group& threadGroup);\n+bool StartHTTPServer();\n /** Interrupt HTTP server threads */\n void InterruptHTTPServer();\n /** Stop HTTP server */"
      },
      {
        "sha": "b58c47a940067255ffa07305c16ddb910273964e",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a264c32e3321ae909ca59cb8ce8bf5d812dbc4e1/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a264c32e3321ae909ca59cb8ce8bf5d812dbc4e1/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=a264c32e3321ae909ca59cb8ce8bf5d812dbc4e1",
        "patch": "@@ -661,7 +661,7 @@ bool AppInitServers(boost::thread_group& threadGroup)\n         return false;\n     if (GetBoolArg(\"-rest\", false) && !StartREST())\n         return false;\n-    if (!StartHTTPServer(threadGroup))\n+    if (!StartHTTPServer())\n         return false;\n     return true;\n }"
      }
    ]
  }
]