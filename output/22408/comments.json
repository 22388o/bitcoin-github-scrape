[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/874867148",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22408#issuecomment-874867148",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22408",
    "id": 874867148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDg2NzE0OA==",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?u=3bb306a343c601258749dbbd03dbe66d0e9d82b4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-06T15:37:29Z",
    "updated_at": "2021-07-07T04:46:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "tACK https://github.com/bitcoin/bitcoin/pull/22408/commits/1f449586a9e39bc4fb53cb5c7a31362e47aea19b\r\n\r\nFew generic points I was pondering about.\r\n\r\n- Is such invalid transaction handling and intended behavior is same for both `p2p` and `mempool validation`? If not we might wanna have some checks there too??\r\n\r\n- What's the purpose of `PrevoutNullInput` and other classes in `invalid_txs.py` in general? It seems they are not much used anywhere?\r\n\r\n- It seems here we are having a previously valid tx, and then appending an invalid input\r\nhttps://github.com/theStack/bitcoin/blob/1f449586a9e39bc4fb53cb5c7a31362e47aea19b/test/functional/mempool_accept.py#L252-L253\r\nWhich is same as \r\nhttps://github.com/theStack/bitcoin/blob/1f449586a9e39bc4fb53cb5c7a31362e47aea19b/test/functional/data/invalid_txs.py#L160-L161\r\nin  `PrevoutNullInput` `get_tx()` construction. \r\n\r\n  So maybe it can be used there instead of doing it via hand (adding a reason to have the class)? Or if its just that easy to append      an invalid input, does it make sense to have the class?  \r\n\r\n- As you are touching `invalid_txs.py`, maybe regarding https://github.com/bitcoin/bitcoin/pull/22363#discussion_r663990893, it makes sense to apply same changes here too? \r\nhttps://github.com/theStack/bitcoin/blob/1f449586a9e39bc4fb53cb5c7a31362e47aea19b/test/functional/data/invalid_txs.py#L233\r\n\r\n  It probably makes more sense to change it in #22363 , just wanna note it, as I i missed it in that review.\r\n  \r\nEdit: I am not sure why code snippets are not showing in the above comments. (Or its just in my local).    ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/874867148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875649499",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22408#issuecomment-875649499",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22408",
    "id": 875649499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTY0OTQ5OQ==",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-07T14:24:12Z",
    "updated_at": "2021-07-07T14:29:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the reviews so far! \ud83c\udf89 \r\n\r\n@rajarshimaitra:\r\n\r\n> * Is such invalid transaction handling and intended behavior is same for both `p2p` and `mempool validation`? If not we might wanna have some checks there too??\r\n\r\nThe routine throwing `bad-txns-prevout-null` (-> `CheckTransaction()`) is called on two places in the codebase: block validation (`CheckBlock(...)`) and mempool acceptance (`MemPoolAccept::PreChecks(...)`). Both are covered by the tests in this PR: block validation in `feature_block.py` and mempool acceptance in `p2p_invalid_txs.py` (tx sent to peer, which tries to add it to its mempool) and `mempool_accept.py` (tx locally added to mempool).\r\n\r\n> * What's the purpose of `PrevoutNullInput` and other classes in `invalid_txs.py` in general? It seems they are not much used anywhere?\r\n\r\n`invalid_txs.py` provides a general template framework for invalid txs. It is currently used in the tests `feature_block.py` and `p2p_invalid_tx.py` (see also first commit message). All classes inheriting of `BadTxTemplate` can be iterated with the following loop: `for TxTemplate in invalid_txs.iter_all_templates():`. Also found this a bit confusing that the classes are never directly referenced anywhere :)\r\n\r\n\r\n> * It seems here we are having a previously valid tx, and then appending an invalid input [...]\r\n>   So maybe it can be used there instead of doing it via hand (adding a reason to have the class)? Or if its just that easy to append      an invalid input, does it make sense to have the class?\r\n\r\nGood point, I think reusing the invalid_tx templates in `mempool_accept.py` would be worth a separate PR.\r\n\r\n> * As you are touching `invalid_txs.py`, maybe regarding [test: refactor: use `script_util` helpers for creating P2{PKH,SH,WPKH,WSH} scripts\u00a0#22363 (comment)](https://github.com/bitcoin/bitcoin/pull/22363#discussion_r663990893), it makes sense to apply same changes here too?\r\n>   https://github.com/theStack/bitcoin/blob/1f449586a9e39bc4fb53cb5c7a31362e47aea19b/test/functional/data/invalid_txs.py#L233\r\n>   It probably makes more sense to change it in [test: refactor: use `script_util` helpers for creating P2{PKH,SH,WPKH,WSH} scripts\u00a0#22363](https://github.com/bitcoin/bitcoin/pull/22363) , just wanna note it, as I i missed it in that review.\r\n> \r\n\r\nSince I am quite confident that #22363 gets merged (has already several Concept ACKs), I don't think there is a need to repeat its style changes in `invalid_txs.py` in this PR too.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875649499/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876282665",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22408#issuecomment-876282665",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22408",
    "id": 876282665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjI4MjY2NQ==",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?u=3bb306a343c601258749dbbd03dbe66d0e9d82b4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-08T09:25:13Z",
    "updated_at": "2021-07-08T09:25:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "> All classes inheriting of BadTxTemplate can be iterated with the following loop: for TxTemplate in invalid_txs.iter_all_templates():\r\n\r\nThanks for this, yes I was confused for that reason only. Makes sense.\r\n\r\n > Since I am quite confident that #22363 gets merged (has already several Concept ACKs), I don't think there is a need to repeat its style changes in invalid_txs.py in this PR too.\r\n \r\n I think the change I pointed here is not present in #22363, The `basic_p2sh` was changed to have a use `CScript` directly, but this line wasn't. https://github.com/theStack/bitcoin/blob/1f449586a9e39bc4fb53cb5c7a31362e47aea19b/test/functional/data/invalid_txs.py#L233\r\n Otherwise, the same file will contain different formatting of using `CScript`. \r\n I probably should have made the comment in #22363  instead of here. \r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876282665/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876598818",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22408#issuecomment-876598818",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22408",
    "id": 876598818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjU5ODgxOA==",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-08T17:00:54Z",
    "updated_at": "2021-07-08T17:00:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@rajarshimaitra:\r\n\r\n> > Since I am quite confident that #22363 gets merged (has already several Concept ACKs), I don't think there is a need to repeat its style changes in invalid_txs.py in this PR too.\r\n> \r\n> I think the change I pointed here is not present in #22363, The `basic_p2sh` was changed to have a use `CScript` directly, but this line wasn't. https://github.com/theStack/bitcoin/blob/1f449586a9e39bc4fb53cb5c7a31362e47aea19b/test/functional/data/invalid_txs.py#L233\r\n> Otherwise, the same file will contain different formatting of using `CScript`.\r\n> I probably should have made the comment in #22363 instead of here.\r\n\r\nIn the latest version in #22363, all references in `invalid_txs.py` to `sc` were eliminated [after your suggestion](https://github.com/bitcoin/bitcoin/pull/22363#discussion_r663990893), see commit https://github.com/bitcoin/bitcoin/pull/22363/commits/285a65ccfde2e811cfe01e916b998c02ee534a97, e.g. https://github.com/bitcoin/bitcoin/commit/285a65ccfde2e811cfe01e916b998c02ee534a97#diff-d390e9e12bfa34a462fdff9f1894d7dc3edb45c26cf55df486d92864a3052fafR224-R226 :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876598818/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876624240",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22408#issuecomment-876624240",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22408",
    "id": 876624240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjYyNDI0MA==",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?u=3bb306a343c601258749dbbd03dbe66d0e9d82b4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-08T17:41:36Z",
    "updated_at": "2021-07-08T17:52:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "> In the latest version in #22363, all references in invalid_txs.py to sc were eliminated after your suggestion, see commit 285a65c, e.g. 285a65c#diff-d390e9e12bfa34a462fdff9f1894d7dc3edb45c26cf55df486d92864a3052fafR224-R226 :)\r\n\r\nAh Ok, I missed that, my bad.. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876624240/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]