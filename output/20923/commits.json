[
  {
    "sha": "1a45cd2e51214f81442a5f9bf16612100adaf5b8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYTQ1Y2QyZTUxMjE0ZjgxNDQyYTVmOWJmMTY2MTIxMDBhZGFmNWI4",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-01-13T01:55:52Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-02-06T20:50:11Z"
      },
      "message": "contrib/signet: Fix typos\n\nThanks to muxator, JeremyRubin, and gruve-p for spotting.",
      "tree": {
        "sha": "3f5979f11e6aa6a9440e2dd5edc89088d653f1ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f5979f11e6aa6a9440e2dd5edc89088d653f1ed"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a45cd2e51214f81442a5f9bf16612100adaf5b8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a45cd2e51214f81442a5f9bf16612100adaf5b8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1a45cd2e51214f81442a5f9bf16612100adaf5b8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a45cd2e51214f81442a5f9bf16612100adaf5b8/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6c6140846f37de8c132b3b6abf09f3d7940554a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c6140846f37de8c132b3b6abf09f3d7940554a7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6c6140846f37de8c132b3b6abf09f3d7940554a7"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "f6e3924b184d93c19733d7ca9e509abf496d05db",
        "filename": "contrib/signet/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a45cd2e51214f81442a5f9bf16612100adaf5b8/contrib/signet/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a45cd2e51214f81442a5f9bf16612100adaf5b8/contrib/signet/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/signet/README.md?ref=1a45cd2e51214f81442a5f9bf16612100adaf5b8",
        "patch": "@@ -25,7 +25,7 @@ To mine the first block in your custom chain, you can run:\n \n     cd src/\n     CLI=\"./bitcoin-cli -conf=mysignet.conf\"\n-    MINER=\"..contrib/signet/miner\"\n+    MINER=\"../contrib/signet/miner\"\n     GRIND=\"./bitcoin-util grind\"\n     ADDR=$($CLI -signet getnewaddress)\n     $MINER --cli=\"$CLI\" generate --grind-cmd=\"$GRIND\" --address=\"$ADDR\" --set-block-time=-1\n@@ -52,7 +52,7 @@ Instead of specifying --ongoing, you can specify --max-blocks=N to mine N blocks\n \n Instead of using a single address, a ranged descriptor may be provided instead (via the --descriptor parameter), with the reward for the block at height H being sent to the H'th address generated from the descriptor.\n \n-Instead of calculating a specific nbits value, --min-nbits can be specified instead, in which case the mininmum signet difficulty will be targeted.\n+Instead of calculating a specific nbits value, --min-nbits can be specified instead, in which case the minimum signet difficulty will be targeted.\n \n By default, the signet miner mines blocks at fixed intervals with minimal variation. If you want blocks to appear more randomly, as they do in mainnet, specify the --poisson option.\n "
      },
      {
        "sha": "ecfbd9d76619817df82c9081b5371136303152c2",
        "filename": "contrib/signet/miner",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a45cd2e51214f81442a5f9bf16612100adaf5b8/contrib/signet/miner",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a45cd2e51214f81442a5f9bf16612100adaf5b8/contrib/signet/miner",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/signet/miner?ref=1a45cd2e51214f81442a5f9bf16612100adaf5b8",
        "patch": "@@ -520,7 +520,7 @@ def do_calibrate(args):\n         sys.stderr.write(\"Can only specify one of --nbits or --seconds\\n\")\n         return 1\n     if args.nbits is not None and len(args.nbits) != 8:\n-        sys.stderr.write(\"Must specify 8 hex digits for --nbits\")\n+        sys.stderr.write(\"Must specify 8 hex digits for --nbits\\n\")\n         return 1\n \n     TRIALS = 600 # gets variance down pretty low"
      }
    ]
  },
  {
    "sha": "a383ce5b4add6cdf4e9974527b609a1147a0d972",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMzgzY2U1YjRhZGQ2Y2RmNGU5OTc0NTI3YjYwOWExMTQ3YTBkOTcy",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-01-13T01:56:06Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-02-06T20:50:11Z"
      },
      "message": "contrib/signet/miner: --grind-cmd is required for calibrate\n\nThanks to muxator for spotting.",
      "tree": {
        "sha": "e5a55094643329704e1002e96fd4a07df66d27b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e5a55094643329704e1002e96fd4a07df66d27b0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a383ce5b4add6cdf4e9974527b609a1147a0d972",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a383ce5b4add6cdf4e9974527b609a1147a0d972",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a383ce5b4add6cdf4e9974527b609a1147a0d972",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a383ce5b4add6cdf4e9974527b609a1147a0d972/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1a45cd2e51214f81442a5f9bf16612100adaf5b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a45cd2e51214f81442a5f9bf16612100adaf5b8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1a45cd2e51214f81442a5f9bf16612100adaf5b8"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "0c1a4ac12ddf36cf6a2b2f5b4a4a7416c04befc4",
        "filename": "contrib/signet/miner",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a383ce5b4add6cdf4e9974527b609a1147a0d972/contrib/signet/miner",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a383ce5b4add6cdf4e9974527b609a1147a0d972/contrib/signet/miner",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/signet/miner?ref=a383ce5b4add6cdf4e9974527b609a1147a0d972",
        "patch": "@@ -605,7 +605,7 @@ def main():\n         sp.add_argument(\"--descriptor\", default=None, type=str, help=\"Descriptor for block reward payment\")\n \n     for sp in [solvepsbt, generate, calibrate]:\n-        sp.add_argument(\"--grind-cmd\", default=None, type=str, help=\"Command to grind a block header for proof-of-work\")\n+        sp.add_argument(\"--grind-cmd\", default=None, type=str, required=(sp==calibrate), help=\"Command to grind a block header for proof-of-work\")\n \n     args = parser.parse_args(sys.argv[1:])\n "
      }
    ]
  },
  {
    "sha": "e66543827cd4ae9b76ff4c5c6e414c1942c7d727",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNjY1NDM4MjdjZDRhZTliNzZmZjRjNWM2ZTQxNGMxOTQyYzdkNzI3",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-01-13T01:56:19Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-02-06T20:50:11Z"
      },
      "message": "contrib/signet/miner: Automatic timestamp for first block\n\nWhen mining the first block of a new signet chain, pick a timestamp for\nthe first block so that after mining 100 blocks the timestamp will be\nback to the current time -- this prevents an unnecessary delay before\nany miner rewards have matured enough to be spent.  This takes into\naccount that the delta between blocks may be shorter than 10 minutes due\nto attempting to increase the difficulty to match --nbits, but does not\ntake into account the time spent actually generating the 100 blocks.",
      "tree": {
        "sha": "95297eb2e2096a5ca025b34f4c8376ea95e80e35",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/95297eb2e2096a5ca025b34f4c8376ea95e80e35"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e66543827cd4ae9b76ff4c5c6e414c1942c7d727",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e66543827cd4ae9b76ff4c5c6e414c1942c7d727",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e66543827cd4ae9b76ff4c5c6e414c1942c7d727",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e66543827cd4ae9b76ff4c5c6e414c1942c7d727/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a383ce5b4add6cdf4e9974527b609a1147a0d972",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a383ce5b4add6cdf4e9974527b609a1147a0d972",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a383ce5b4add6cdf4e9974527b609a1147a0d972"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 6,
      "deletions": 3
    },
    "files": [
      {
        "sha": "09eb07502fdaea8895d47214a1efd4b5058f0cf8",
        "filename": "contrib/signet/miner",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e66543827cd4ae9b76ff4c5c6e414c1942c7d727/contrib/signet/miner",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e66543827cd4ae9b76ff4c5c6e414c1942c7d727/contrib/signet/miner",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/signet/miner?ref=e66543827cd4ae9b76ff4c5c6e414c1942c7d727",
        "patch": "@@ -428,10 +428,13 @@ def do_generate(args):\n             action_time = now\n             is_mine = True\n         elif bestheader[\"height\"] == 0:\n-            logging.error(\"When mining first block in a new signet, must specify --set-block-time\")\n-            return 1\n+            time_delta = next_block_delta(int(bestheader[\"bits\"], 16), bci[\"bestblockhash\"], ultimate_target, args.poisson)\n+            time_delta *= 100 # 100 blocks\n+            logging.info(\"Backdating time for first block to %d minutes ago\" % (time_delta/60))\n+            mine_time = now - time_delta\n+            action_time = now\n+            is_mine = True\n         else:\n-\n             time_delta = next_block_delta(int(bestheader[\"bits\"], 16), bci[\"bestblockhash\"], ultimate_target, args.poisson)\n             mine_time = bestheader[\"time\"] + time_delta\n "
      }
    ]
  },
  {
    "sha": "b6d493fd4d602a67d16d2566466e18091e272fa0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNmQ0OTNmZDRkNjAyYTY3ZDE2ZDI1NjY0NjZlMTgwOTFlMjcyZmEw",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-01-13T03:11:42Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-02-06T20:50:11Z"
      },
      "message": "contrib/signet/README.md: Update miner description",
      "tree": {
        "sha": "395b37a8b2306ae24d9518180ab5bc36fdd00ec8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/395b37a8b2306ae24d9518180ab5bc36fdd00ec8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6d493fd4d602a67d16d2566466e18091e272fa0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6d493fd4d602a67d16d2566466e18091e272fa0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b6d493fd4d602a67d16d2566466e18091e272fa0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6d493fd4d602a67d16d2566466e18091e272fa0/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e66543827cd4ae9b76ff4c5c6e414c1942c7d727",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e66543827cd4ae9b76ff4c5c6e414c1942c7d727",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e66543827cd4ae9b76ff4c5c6e414c1942c7d727"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 17,
      "deletions": 14
    },
    "files": [
      {
        "sha": "706b296c54942848642ed7fe8cec18a548235b8a",
        "filename": "contrib/signet/README.md",
        "status": "modified",
        "additions": 17,
        "deletions": 14,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6d493fd4d602a67d16d2566466e18091e272fa0/contrib/signet/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6d493fd4d602a67d16d2566466e18091e272fa0/contrib/signet/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/signet/README.md?ref=b6d493fd4d602a67d16d2566466e18091e272fa0",
        "patch": "@@ -21,27 +21,28 @@ accept one claim per day. See `--password` above.\n miner\n =====\n \n-To mine the first block in your custom chain, you can run:\n+You will first need to pick a difficulty target. Since signet chains are primarily protected by a signature rather than proof of work, there is no need to spend as much energy as possible mining, however you may wish to choose to spend more time than the absolute minimum. The calibrate subcommand can be used to pick a target appropriate for your hardware, eg:\n \n     cd src/\n-    CLI=\"./bitcoin-cli -conf=mysignet.conf\"\n     MINER=\"../contrib/signet/miner\"\n     GRIND=\"./bitcoin-util grind\"\n-    ADDR=$($CLI -signet getnewaddress)\n-    $MINER --cli=\"$CLI\" generate --grind-cmd=\"$GRIND\" --address=\"$ADDR\" --set-block-time=-1\n-\n-This will mine a block with the current timestamp. If you want to backdate the chain, you can give a different timestamp to --set-block-time.\n-\n-You will then need to pick a difficulty target. Since signet chains are primarily protected by a signature rather than proof of work, there is no need to spend as much energy as possible mining, however you may wish to choose to spend more time than the absolute minimum. The calibrate subcommand can be used to pick a target, eg:\n-\n     $MINER calibrate --grind-cmd=\"$GRIND\"\n     nbits=1e00f403 for 25s average mining time\n \n It defaults to estimating an nbits value resulting in 25s average time to find a block, but the --seconds parameter can be used to pick a different target, or the --nbits parameter can be used to estimate how long it will take for a given difficulty.\n \n-Using the --ongoing parameter will then cause the signet miner to create blocks indefinitely. It will pick the time between blocks so that difficulty is adjusted to match the provided --nbits value.\n+To mine the first block in your custom chain, you can run:\n \n-    $MINER --cli=\"$CLI\" generate --grind-cmd=\"$GRIND\" --address=\"$ADDR\" --nbits=1e00f403 --ongoing\n+    CLI=\"./bitcoin-cli -conf=mysignet.conf\"\n+    ADDR=$($CLI -signet getnewaddress)\n+    NBITS=1e00f403\n+    $MINER --cli=\"$CLI\" generate --grind-cmd=\"$GRIND\" --address=\"$ADDR\" --nbits=$NBITS\n+\n+This will mine a single block with a backdated timestamp designed to allow 100 blocks to be mined as quickly as possible, so that it is possible to do transactions.\n+\n+Adding the --ongoing parameter will then cause the signet miner to create blocks indefinitely. It will pick the time between blocks so that difficulty is adjusted to match the provided --nbits value.\n+\n+    $MINER --cli=\"$CLI\" generate --grind-cmd=\"$GRIND\" --address=\"$ADDR\" --nbits=$NBITS --ongoing\n \n Other options\n -------------\n@@ -50,9 +51,11 @@ The --debug and --quiet options are available to control how noisy the signet mi\n \n Instead of specifying --ongoing, you can specify --max-blocks=N to mine N blocks and stop.\n \n-Instead of using a single address, a ranged descriptor may be provided instead (via the --descriptor parameter), with the reward for the block at height H being sent to the H'th address generated from the descriptor.\n+The --set-block-time option is available to manually move timestamps forward or backward (subject to the rules that blocktime must be greater than mediantime, and dates can't be more than two hours in the future). It can only be used when mining a single block (ie, not when using --ongoing or --max-blocks greater than 1).\n+\n+Instead of using a single address, a ranged descriptor may be provided via the --descriptor parameter, with the reward for the block at height H being sent to the H'th address generated from the descriptor.\n \n-Instead of calculating a specific nbits value, --min-nbits can be specified instead, in which case the minimum signet difficulty will be targeted.\n+Instead of calculating a specific nbits value, --min-nbits can be specified instead, in which case the minimum signet difficulty will be targeted. Signet's minimum difficulty corresponds to --nbits=1e0377ae.\n \n By default, the signet miner mines blocks at fixed intervals with minimal variation. If you want blocks to appear more randomly, as they do in mainnet, specify the --poisson option.\n \n@@ -76,5 +79,5 @@ These steps can instead be done explicitly:\n       $MINER --cli=\"$CLI\" solvepsbt --grind-cmd=\"$GRIND\" |\n       $CLI -signet -stdin submitblock\n \n-This is intended to allow you to replace part of the pipeline for further experimentation, if desired.\n+This is intended to allow you to replace part of the pipeline for further experimentation (eg, to sign the block with a hardware wallet).\n "
      }
    ]
  },
  {
    "sha": "297e35159f99d4caa995de29d419aefa4b87630c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOTdlMzUxNTlmOTlkNGNhYTk5NWRlMjlkNDE5YWVmYTRiODc2MzBj",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-01-15T06:09:12Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-02-06T20:50:11Z"
      },
      "message": "bitcoin-util: use AddCommand / GetCommand",
      "tree": {
        "sha": "2f8a0cdf801c5001570d30938117482ca58f3aa8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2f8a0cdf801c5001570d30938117482ca58f3aa8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/297e35159f99d4caa995de29d419aefa4b87630c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/297e35159f99d4caa995de29d419aefa4b87630c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/297e35159f99d4caa995de29d419aefa4b87630c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/297e35159f99d4caa995de29d419aefa4b87630c/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b6d493fd4d602a67d16d2566466e18091e272fa0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6d493fd4d602a67d16d2566466e18091e272fa0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b6d493fd4d602a67d16d2566466e18091e272fa0"
      }
    ],
    "stats": {
      "total": 99,
      "additions": 40,
      "deletions": 59
    },
    "files": [
      {
        "sha": "3f273e75f66f4a914d979086062bf0672c6f0085",
        "filename": "src/bitcoin-util.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 59,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/297e35159f99d4caa995de29d419aefa4b87630c/src/bitcoin-util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/297e35159f99d4caa995de29d419aefa4b87630c/src/bitcoin-util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-util.cpp?ref=297e35159f99d4caa995de29d419aefa4b87630c",
        "patch": "@@ -43,6 +43,8 @@ static void SetupBitcoinUtilArgs(ArgsManager &argsman)\n \n     argsman.AddArg(\"-version\", \"Print version and exit\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n \n+    argsman.AddCommand(\"grind\", \"Perform proof of work on hex header string\", OptionsCategory::COMMANDS);\n+\n     SetupChainParamsBaseOptions(argsman);\n }\n \n@@ -57,15 +59,7 @@ static int AppInitUtil(int argc, char* argv[])\n         return EXIT_FAILURE;\n     }\n \n-    // Check for chain settings (Params() calls are only valid after this clause)\n-    try {\n-        SelectParams(gArgs.GetChainName());\n-    } catch (const std::exception& e) {\n-        tfm::format(std::cerr, \"Error: %s\\n\", e.what());\n-        return EXIT_FAILURE;\n-    }\n-\n-    if (argc < 2 || HelpRequested(gArgs) || gArgs.IsArgSet(\"-version\")) {\n+    if (HelpRequested(gArgs) || gArgs.IsArgSet(\"-version\")) {\n         // First part of help message is specific to this utility\n         std::string strUsage = PACKAGE_NAME \" bitcoin-util utility version \" + FormatFullVersion() + \"\\n\";\n         if (!gArgs.IsArgSet(\"-version\")) {\n@@ -82,6 +76,15 @@ static int AppInitUtil(int argc, char* argv[])\n         }\n         return EXIT_SUCCESS;\n     }\n+\n+    // Check for chain settings (Params() calls are only valid after this clause)\n+    try {\n+        SelectParams(gArgs.GetChainName());\n+    } catch (const std::exception& e) {\n+        tfm::format(std::cerr, \"Error: %s\\n\", e.what());\n+        return EXIT_FAILURE;\n+    }\n+\n     return CONTINUE_EXECUTION;\n }\n \n@@ -111,17 +114,17 @@ static void grind_task(uint32_t nBits, CBlockHeader& header_orig, uint32_t offse\n     }\n }\n \n-static int Grind(int argc, char* argv[], std::string& strPrint)\n+static int Grind(std::vector<std::string> args, std::string& strPrint)\n {\n-    if (argc != 1) {\n+    if (args.size() != 1) {\n         strPrint = \"Must specify block header to grind\";\n-        return 1;\n+        return EXIT_FAILURE;\n     }\n \n     CBlockHeader header;\n-    if (!DecodeHexBlockHeader(header, argv[0])) {\n+    if (!DecodeHexBlockHeader(header, args[0])) {\n         strPrint = \"Could not decode block header\";\n-        return 1;\n+        return EXIT_FAILURE;\n     }\n \n     uint32_t nBits = header.nBits;\n@@ -137,49 +140,13 @@ static int Grind(int argc, char* argv[], std::string& strPrint)\n     }\n     if (!found) {\n         strPrint = \"Could not satisfy difficulty target\";\n-        return 1;\n+        return EXIT_FAILURE;\n     }\n \n     CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n     ss << header;\n     strPrint = HexStr(ss);\n-    return 0;\n-}\n-\n-static int CommandLineUtil(int argc, char* argv[])\n-{\n-    if (argc <= 1) return 1;\n-\n-    std::string strPrint;\n-    int nRet = 0;\n-\n-    try {\n-        while (argc > 1 && IsSwitchChar(argv[1][0]) && (argv[1][1] != 0)) {\n-            --argc;\n-            ++argv;\n-        }\n-\n-        char* command = argv[1];\n-        if (strcmp(command, \"grind\") == 0) {\n-            nRet = Grind(argc-2, argv+2, strPrint);\n-        } else {\n-            strPrint = strprintf(\"Unknown command %s\", command);\n-            nRet = 1;\n-        }\n-    }\n-    catch (const std::exception& e) {\n-        strPrint = std::string(\"error: \") + e.what();\n-        nRet = EXIT_FAILURE;\n-    }\n-    catch (...) {\n-        PrintExceptionContinue(nullptr, \"CommandLineUtil()\");\n-        throw;\n-    }\n-\n-    if (strPrint != \"\") {\n-        tfm::format(nRet == 0 ? std::cout : std::cerr, \"%s\\n\", strPrint);\n-    }\n-    return nRet;\n+    return EXIT_SUCCESS;\n }\n \n #ifdef WIN32\n@@ -199,23 +166,37 @@ int main(int argc, char* argv[])\n         int ret = AppInitUtil(argc, argv);\n         if (ret != CONTINUE_EXECUTION)\n             return ret;\n-    }\n-    catch (const std::exception& e) {\n+    } catch (const std::exception& e) {\n         PrintExceptionContinue(&e, \"AppInitUtil()\");\n         return EXIT_FAILURE;\n     } catch (...) {\n         PrintExceptionContinue(nullptr, \"AppInitUtil()\");\n         return EXIT_FAILURE;\n     }\n \n+    const auto cmd = gArgs.GetCommand();\n+    if (!cmd) {\n+        tfm::format(std::cerr, \"Error: must specify a command\\n\");\n+        return EXIT_FAILURE;\n+    }\n+\n     int ret = EXIT_FAILURE;\n+    std::string strPrint;\n     try {\n-        ret = CommandLineUtil(argc, argv);\n-    }\n-    catch (const std::exception& e) {\n-        PrintExceptionContinue(&e, \"CommandLineUtil()\");\n+        if (cmd->command == \"grind\") {\n+            ret = Grind(cmd->args, strPrint);\n+        } else {\n+            assert(false); // unknown command should be caught earlier\n+        }\n+    } catch (const std::exception& e) {\n+        strPrint = std::string(\"error: \") + e.what();\n     } catch (...) {\n-        PrintExceptionContinue(nullptr, \"CommandLineUtil()\");\n+        strPrint = \"unknown error\";\n+    }\n+\n+    if (strPrint != \"\") {\n+        tfm::format(ret == 0 ? std::cout : std::cerr, \"%s\\n\", strPrint);\n     }\n+\n     return ret;\n }"
      }
    ]
  },
  {
    "sha": "b3c712cb2871e0034898b37454fb6a4e1fc78f84",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiM2M3MTJjYjI4NzFlMDAzNDg5OGIzNzQ1NGZiNmE0ZTFmYzc4Zjg0",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-02-06T20:52:42Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-02-06T20:52:42Z"
      },
      "message": "contrib/signet/miner: remove debug code",
      "tree": {
        "sha": "93d22b861eb4abd6a9e6418036cf9928026d9e4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/93d22b861eb4abd6a9e6418036cf9928026d9e4b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b3c712cb2871e0034898b37454fb6a4e1fc78f84",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3c712cb2871e0034898b37454fb6a4e1fc78f84",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b3c712cb2871e0034898b37454fb6a4e1fc78f84",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3c712cb2871e0034898b37454fb6a4e1fc78f84/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "297e35159f99d4caa995de29d419aefa4b87630c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/297e35159f99d4caa995de29d419aefa4b87630c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/297e35159f99d4caa995de29d419aefa4b87630c"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 0,
      "deletions": 11
    },
    "files": [
      {
        "sha": "f1360818ae9436903402281a0c9b075f13306203",
        "filename": "contrib/signet/miner",
        "status": "modified",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b3c712cb2871e0034898b37454fb6a4e1fc78f84/contrib/signet/miner",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b3c712cb2871e0034898b37454fb6a4e1fc78f84/contrib/signet/miner",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/signet/miner?ref=b3c712cb2871e0034898b37454fb6a4e1fc78f84",
        "patch": "@@ -528,31 +528,21 @@ def do_calibrate(args):\n \n     TRIALS = 600 # gets variance down pretty low\n     TRIAL_BITS = 0x1e3ea75f # takes about 5m to do 600 trials\n-    #TRIAL_BITS = 0x1e7ea75f # XXX\n \n     header = CBlockHeader()\n     header.nBits = TRIAL_BITS\n     targ = nbits_to_target(header.nBits)\n \n     start = time.time()\n     count = 0\n-    #CHECKS=[]\n     for i in range(TRIALS):\n         header.nTime = i\n         header.nNonce = 0\n         headhex = header.serialize().hex()\n         cmd = args.grind_cmd.split(\" \") + [headhex]\n         newheadhex = subprocess.run(cmd, stdout=subprocess.PIPE, input=b\"\", check=True).stdout.strip()\n-        #newhead = FromHex(CBlockHeader(), newheadhex.decode('utf8'))\n-        #count += newhead.nNonce\n-        #if (i+1) % 100 == 0:\n-        #   CHECKS.append((i+1, count, time.time()-start))\n-\n-    #print(\"checks =\", [c*1.0 / (b*targ*2**-256) for _,b,c in CHECKS])\n \n     avg = (time.time() - start) * 1.0 / TRIALS\n-    #exp_count = 2**256 / targ * TRIALS\n-    #print(\"avg =\", avg, \"count =\", count, \"exp_count =\", exp_count)\n \n     if args.nbits is not None:\n         want_targ = nbits_to_target(int(args.nbits,16))\n@@ -593,7 +583,6 @@ def main():\n     generate.add_argument(\"--nbits\", default=None, type=str, help=\"Target nBits (specify difficulty)\")\n     generate.add_argument(\"--min-nbits\", action=\"store_true\", help=\"Target minimum nBits (use min difficulty)\")\n     generate.add_argument(\"--poisson\", action=\"store_true\", help=\"Simulate randomised block times\")\n-    #generate.add_argument(\"--signcmd\", default=None, type=str, help=\"Alternative signing command\")\n     generate.add_argument(\"--multiminer\", default=None, type=str, help=\"Specify which set of blocks to mine (eg: 1-40/100 for the first 40%%, 2/3 for the second 3rd)\")\n     generate.add_argument(\"--backup-delay\", default=300, type=int, help=\"Seconds to delay before mining blocks reserved for other miners (default=300)\")\n     generate.add_argument(\"--standby-delay\", default=0, type=int, help=\"Seconds to delay before mining blocks (default=0)\")"
      }
    ]
  }
]