[
  {
    "sha": "95d4a2be95a4b902c4cda4a8b57c7be9e572aee6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NWQ0YTJiZTk1YTRiOTAyYzRjZGE0YThiNTdjN2JlOWU1NzJhZWU2",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-10-18T09:44:05Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-10-19T14:27:04Z"
      },
      "message": "paymentserver: style fixes / cleanup\n\n- rename reportError() into message() to be in line with our default\n  message() signal/slot naming (and can be used for all types of messages)\n- rename some QStrings to not collide with message() function\n- add a missing message for malformed URIs that IS also used in BitcoinGUI\n- fix / extend some comments and misc style fixes",
      "tree": {
        "sha": "ddaf3a789207eaade1f03ac79b4989c4b1a40c9c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ddaf3a789207eaade1f03ac79b4989c4b1a40c9c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95d4a2be95a4b902c4cda4a8b57c7be9e572aee6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95d4a2be95a4b902c4cda4a8b57c7be9e572aee6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/95d4a2be95a4b902c4cda4a8b57c7be9e572aee6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95d4a2be95a4b902c4cda4a8b57c7be9e572aee6/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "e11107f234b2172a03a7bb5fc5fd28ce00ad4e11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e11107f234b2172a03a7bb5fc5fd28ce00ad4e11",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e11107f234b2172a03a7bb5fc5fd28ce00ad4e11"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 34,
      "deletions": 26
    },
    "files": [
      {
        "sha": "e73a82978abb7c3c23f2c68681eef8bac034880b",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95d4a2be95a4b902c4cda4a8b57c7be9e572aee6/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95d4a2be95a4b902c4cda4a8b57c7be9e572aee6/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=95d4a2be95a4b902c4cda4a8b57c7be9e572aee6",
        "patch": "@@ -333,8 +333,8 @@ int main(int argc, char *argv[])\n                                  paymentServer, SLOT(fetchPaymentACK(CWallet*,const SendCoinsRecipient&,QByteArray)));\n                 QObject::connect(paymentServer, SIGNAL(receivedPaymentACK(QString)),\n                                  &window, SLOT(showPaymentACK(QString)));\n-                QObject::connect(paymentServer, SIGNAL(reportError(QString, QString, unsigned int)),\n-                                 guiref, SLOT(message(QString, QString, unsigned int)));\n+                QObject::connect(paymentServer, SIGNAL(message(QString,QString,unsigned int)),\n+                                 guiref, SLOT(message(QString,QString,unsigned int)));\n                 QTimer::singleShot(100, paymentServer, SLOT(uiReady()));\n \n                 app.exec();"
      },
      {
        "sha": "632499848206a96cac12f351892c389790b93146",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 22,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95d4a2be95a4b902c4cda4a8b57c7be9e572aee6/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95d4a2be95a4b902c4cda4a8b57c7be9e572aee6/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=95d4a2be95a4b902c4cda4a8b57c7be9e572aee6",
        "patch": "@@ -189,7 +189,7 @@ bool PaymentServer::ipcSendCommandLine(int argc, char* argv[])\n         if (arg.startsWith(\"-\"))\n             continue;\n \n-        if (arg.startsWith(BITCOIN_IPC_PREFIX, Qt::CaseInsensitive)) // bitcoin:\n+        if (arg.startsWith(BITCOIN_IPC_PREFIX, Qt::CaseInsensitive)) // bitcoin: URI\n         {\n             savedPaymentRequests.append(arg);\n \n@@ -220,9 +220,9 @@ bool PaymentServer::ipcSendCommandLine(int argc, char* argv[])\n         }\n         else\n         {\n-            qDebug() << \"PaymentServer::ipcSendCommandLine : Payment request file does not exist: \" << argv[i];\n             // Printing to debug.log is about the best we can do here, the\n             // GUI hasn't started yet so we can't pop up a message box.\n+            qDebug() << \"PaymentServer::ipcSendCommandLine : Payment request file does not exist: \" << arg;\n         }\n     }\n \n@@ -246,6 +246,7 @@ bool PaymentServer::ipcSendCommandLine(int argc, char* argv[])\n         delete socket;\n         fResult = true;\n     }\n+\n     return fResult;\n }\n \n@@ -255,7 +256,9 @@ PaymentServer::PaymentServer(QObject* parent, bool startLocalServer) : QObject(p\n     // compatible with the version of the headers we compiled against.\n     GOOGLE_PROTOBUF_VERIFY_VERSION;\n \n-    // Install global event filter to catch QFileOpenEvents on the mac (sent when you click bitcoin: links)\n+    // Install global event filter to catch QFileOpenEvents\n+    // on Mac: sent when you click bitcoin: links\n+    // other OSes: helpful when dealing with payment-request files (in the future)\n     if (parent)\n         parent->installEventFilter(this);\n \n@@ -310,7 +313,7 @@ void PaymentServer::initNetManager()\n     if (netManager != NULL)\n         delete netManager;\n \n-    // netManager is used to fetch paymentrequests given in bitcoin: URI's\n+    // netManager is used to fetch paymentrequests given in bitcoin: URIs\n     netManager = new QNetworkAccessManager(this);\n \n     // Use proxy settings from optionsModel:\n@@ -360,7 +363,8 @@ void PaymentServer::handleURIOrFile(const QString& s)\n #endif\n         if (uri.hasQueryItem(\"request\"))\n         {\n-            QByteArray temp; temp.append(uri.queryItemValue(\"request\"));\n+            QByteArray temp;\n+            temp.append(uri.queryItemValue(\"request\"));\n             QString decoded = QUrl::fromPercentEncoding(temp);\n             QUrl fetchUrl(decoded, QUrl::StrictMode);\n \n@@ -370,13 +374,17 @@ void PaymentServer::handleURIOrFile(const QString& s)\n             if (fetchUrl.isValid())\n                 fetchRequest(fetchUrl);\n             else\n-                qDebug() << \"PaymentServer::handleURIOrFile : Invalid url: \" << fetchUrl;\n+                qDebug() << \"PaymentServer::handleURIOrFile : Invalid URL: \" << fetchUrl;\n             return;\n         }\n \n         SendCoinsRecipient recipient;\n         if (GUIUtil::parseBitcoinURI(s, &recipient))\n             emit receivedPaymentRequest(recipient);\n+        else\n+            emit message(tr(\"URI handling\"),\n+                tr(\"URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.\"),\n+                CClientUIInterface::ICON_WARNING);\n         return;\n     }\n \n@@ -408,10 +416,10 @@ void PaymentServer::handleURIConnection()\n     if (clientConnection->bytesAvailable() < (int)sizeof(quint16)) {\n         return;\n     }\n-    QString message;\n-    in >> message;\n+    QString msg;\n+    in >> msg;\n \n-    handleURIOrFile(message);\n+    handleURIOrFile(msg);\n }\n \n bool PaymentServer::readPaymentRequest(const QString& filename, PaymentRequestPlus& request)\n@@ -444,11 +452,11 @@ bool PaymentServer::processPaymentRequest(PaymentRequestPlus& request, QList<Sen\n     foreach(const PAIRTYPE(CScript, qint64)& sendingTo, sendingTos) {\n         CTxOut txOut(sendingTo.second, sendingTo.first);\n         if (txOut.IsDust(CTransaction::nMinRelayTxFee)) {\n-            QString message = QObject::tr(\"Requested payment amount (%1) too small\")\n+            QString msg = QObject::tr(\"Requested payment amount (%1) too small\")\n                 .arg(BitcoinUnits::formatWithUnit(optionsModel->getDisplayUnit(), sendingTo.second));\n \n-            qDebug() << \"PaymentServer::processPaymentRequest : \" << message;\n-            emit reportError(tr(\"Payment request error\"), message, CClientUIInterface::MODAL);\n+            qDebug() << \"PaymentServer::processPaymentRequest : \" << msg;\n+            emit message(tr(\"Payment request error\"), msg, CClientUIInterface::MSG_ERROR);\n             return false;\n         }\n \n@@ -485,9 +493,9 @@ bool PaymentServer::processPaymentRequest(PaymentRequestPlus& request, QList<Sen\n                 // Insecure payments to custom bitcoin addresses are not supported\n                 // (there is no good way to tell the user where they are paying in a way\n                 // they'd have a chance of understanding).\n-                emit reportError(tr(\"Payment request error\"),\n-                                 tr(\"Insecure requests to custom payment scripts unsupported\"),\n-                                 CClientUIInterface::MODAL);\n+                emit message(tr(\"Payment request error\"),\n+                    tr(\"Insecure requests to custom payment scripts unsupported\"),\n+                    CClientUIInterface::MSG_ERROR);\n                 return false;\n             }\n         }\n@@ -566,11 +574,11 @@ void PaymentServer::netRequestFinished(QNetworkReply* reply)\n     reply->deleteLater();\n     if (reply->error() != QNetworkReply::NoError)\n     {\n-        QString message = QObject::tr(\"Error communicating with %1: %2\")\n+        QString msg = QObject::tr(\"Error communicating with %1: %2\")\n             .arg(reply->request().url().toString())\n             .arg(reply->errorString());\n-        qDebug() << \"PaymentServer::netRequestFinished : \" << message;\n-        emit reportError(tr(\"Network request error\"), message, CClientUIInterface::MODAL);\n+        qDebug() << \"PaymentServer::netRequestFinished : \" << msg;\n+        emit message(tr(\"Network request error\"), msg, CClientUIInterface::MSG_ERROR);\n         return;\n     }\n \n@@ -595,10 +603,10 @@ void PaymentServer::netRequestFinished(QNetworkReply* reply)\n         payments::PaymentACK paymentACK;\n         if (!paymentACK.ParseFromArray(data.data(), data.size()))\n         {\n-            QString message = QObject::tr(\"Bad response from server %1\")\n+            QString msg = QObject::tr(\"Bad response from server %1\")\n                 .arg(reply->request().url().toString());\n-            qDebug() << \"PaymentServer::netRequestFinished : \" << message;\n-            emit reportError(tr(\"Network request error\"), message, CClientUIInterface::MODAL);\n+            qDebug() << \"PaymentServer::netRequestFinished : \" << msg;\n+            emit message(tr(\"Network request error\"), msg, CClientUIInterface::MSG_ERROR);\n         }\n         else {\n             emit receivedPaymentACK(QString::fromStdString(paymentACK.memo()));\n@@ -615,7 +623,7 @@ void PaymentServer::reportSslErrors(QNetworkReply* reply, const QList<QSslError>\n         qDebug() << \"PaymentServer::reportSslErrors : \" << err;\n         errString += err.errorString() + \"\\n\";\n     }\n-    emit reportError(tr(\"Network request error\"), errString, CClientUIInterface::MODAL);\n+    emit message(tr(\"Network request error\"), errString, CClientUIInterface::MSG_ERROR);\n }\n \n void PaymentServer::setOptionsModel(OptionsModel *optionsModel)"
      },
      {
        "sha": "042c41ef648051a6c8848cd92b944005d5992e81",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95d4a2be95a4b902c4cda4a8b57c7be9e572aee6/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95d4a2be95a4b902c4cda4a8b57c7be9e572aee6/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=95d4a2be95a4b902c4cda4a8b57c7be9e572aee6",
        "patch": "@@ -90,8 +90,8 @@ class PaymentServer : public QObject\n     // Fired when a valid PaymentACK is received\n     void receivedPaymentACK(QString);\n \n-    // Fired when an error should be reported to the user\n-    void reportError(QString, QString, unsigned int);\n+    // Fired when a message should be reported to the user\n+    void message(const QString &title, const QString &message, unsigned int style);\n \n public slots:\n     // Signal this when the main window's UI is ready"
      }
    ]
  }
]