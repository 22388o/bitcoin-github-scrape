[
  {
    "sha": "e10e744b8086ebda60368a51ac0aea00a2da7e48",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMTBlNzQ0YjgwODZlYmRhNjAzNjhhNTFhYzBhZWEwMGEyZGE3ZTQ4",
    "commit": {
      "author": {
        "name": "Doug Huff",
        "email": "mith@jrbobdobbs.org",
        "date": "2011-05-08T00:32:05Z"
      },
      "committer": {
        "name": "Doug Huff",
        "email": "mith@jrbobdobbs.org",
        "date": "2011-05-18T02:06:01Z"
      },
      "message": "Add linux capabilities bounding set support.",
      "tree": {
        "sha": "3147a03bef178372339edf875e769b002ecc975c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3147a03bef178372339edf875e769b002ecc975c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e10e744b8086ebda60368a51ac0aea00a2da7e48",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e10e744b8086ebda60368a51ac0aea00a2da7e48",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e10e744b8086ebda60368a51ac0aea00a2da7e48",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e10e744b8086ebda60368a51ac0aea00a2da7e48/comments",
    "author": {
      "login": "jrmithdobbs",
      "id": 48147,
      "node_id": "MDQ6VXNlcjQ4MTQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/48147?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrmithdobbs",
      "html_url": "https://github.com/jrmithdobbs",
      "followers_url": "https://api.github.com/users/jrmithdobbs/followers",
      "following_url": "https://api.github.com/users/jrmithdobbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrmithdobbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrmithdobbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrmithdobbs/subscriptions",
      "organizations_url": "https://api.github.com/users/jrmithdobbs/orgs",
      "repos_url": "https://api.github.com/users/jrmithdobbs/repos",
      "events_url": "https://api.github.com/users/jrmithdobbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrmithdobbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jrmithdobbs",
      "id": 48147,
      "node_id": "MDQ6VXNlcjQ4MTQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/48147?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrmithdobbs",
      "html_url": "https://github.com/jrmithdobbs",
      "followers_url": "https://api.github.com/users/jrmithdobbs/followers",
      "following_url": "https://api.github.com/users/jrmithdobbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrmithdobbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrmithdobbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrmithdobbs/subscriptions",
      "organizations_url": "https://api.github.com/users/jrmithdobbs/orgs",
      "repos_url": "https://api.github.com/users/jrmithdobbs/repos",
      "events_url": "https://api.github.com/users/jrmithdobbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrmithdobbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b201c1f60020763b102d259f6346305dd668c7eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b201c1f60020763b102d259f6346305dd668c7eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b201c1f60020763b102d259f6346305dd668c7eb"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 27,
      "deletions": 0
    },
    "files": [
      {
        "sha": "84fb4f59368c7a83491b380950233fbe15d94fed",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e10e744b8086ebda60368a51ac0aea00a2da7e48/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e10e744b8086ebda60368a51ac0aea00a2da7e48/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e10e744b8086ebda60368a51ac0aea00a2da7e48",
        "patch": "@@ -71,6 +71,11 @@ void HandleSIGTERM(int)\n int main(int argc, char* argv[])\n {\n     bool fRet = false;\n+\n+#ifdef USE_POSIX_CAPABILITIES\n+    cCap_lock();\n+#endif\n+\n     fRet = AppInit(argc, argv);\n \n     if (fRet && fDaemon)"
      },
      {
        "sha": "cf347b92ff1d26944a2a40a21c63302f9e9f3d9b",
        "filename": "src/makefile.unix",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e10e744b8086ebda60368a51ac0aea00a2da7e48/src/makefile.unix",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e10e744b8086ebda60368a51ac0aea00a2da7e48/src/makefile.unix",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.unix?ref=e10e744b8086ebda60368a51ac0aea00a2da7e48",
        "patch": "@@ -12,6 +12,10 @@ USE_UPNP:=0\n \n DEFS=-DNOPCH -DFOURWAYSSE2 -DUSE_SSL\n \n+ifdef USE_POSIX_CAPABILITIES\n+\tDEFS += -DUSE_POSIX_CAPABILITIES\n+endif\n+\n # for boost 1.37, add -mt to the boost libraries\n LIBS= \\\n  -Wl,-Bstatic \\\n@@ -28,6 +32,10 @@ ifdef USE_UPNP\n \tDEFS += -DUSE_UPNP=$(USE_UPNP)\n endif\n \n+ifdef USE_POSIX_CAPABILITIES\n+\tLIBS += -l cap\n+endif\n+\n LIBS+= \\\n  -Wl,-Bdynamic \\\n    -l gthread-2.0 \\\n@@ -53,6 +61,10 @@ OBJS= \\\n     cryptopp/obj/sha.o \\\n     cryptopp/obj/cpu.o\n \n+ifdef USE_POSIX_CAPABILITIES\n+\tOBJS += obj/cap.o\n+endif\n+\n \n all: bitcoin\n "
      },
      {
        "sha": "df777ad2b22b82012e8a51f47b9fac4edc37a385",
        "filename": "src/rpc.h",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e10e744b8086ebda60368a51ac0aea00a2da7e48/src/rpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e10e744b8086ebda60368a51ac0aea00a2da7e48/src/rpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc.h?ref=e10e744b8086ebda60368a51ac0aea00a2da7e48",
        "patch": "@@ -4,3 +4,13 @@\n \n void ThreadRPCServer(void* parg);\n int CommandLineRPC(int argc, char *argv[]);\n+void Shutdown(void* parg);\n+bool AppInit(int argc, char* argv[]);\n+bool AppInit2(int argc, char* argv[]);\n+\n+#ifdef USE_POSIX_CAPABILITIES\n+extern \"C\" {\n+    extern int cCap_lock(void);\n+}\n+#endif\n+"
      }
    ]
  },
  {
    "sha": "20dfcf709f4c368b589664776bb4d802ff828a44",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMGRmY2Y3MDlmNGMzNjhiNTg5NjY0Nzc2YmI0ZDgwMmZmODI4YTQ0",
    "commit": {
      "author": {
        "name": "Doug Huff",
        "email": "mith@jrbobdobbs.org",
        "date": "2011-05-08T00:32:23Z"
      },
      "committer": {
        "name": "Doug Huff",
        "email": "mith@jrbobdobbs.org",
        "date": "2011-05-18T02:06:01Z"
      },
      "message": "Add linux capabilities bounding set support.",
      "tree": {
        "sha": "751cbb5b5a675d6f9d7661116ac00284201472ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/751cbb5b5a675d6f9d7661116ac00284201472ba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/20dfcf709f4c368b589664776bb4d802ff828a44",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20dfcf709f4c368b589664776bb4d802ff828a44",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/20dfcf709f4c368b589664776bb4d802ff828a44",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20dfcf709f4c368b589664776bb4d802ff828a44/comments",
    "author": {
      "login": "jrmithdobbs",
      "id": 48147,
      "node_id": "MDQ6VXNlcjQ4MTQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/48147?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrmithdobbs",
      "html_url": "https://github.com/jrmithdobbs",
      "followers_url": "https://api.github.com/users/jrmithdobbs/followers",
      "following_url": "https://api.github.com/users/jrmithdobbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrmithdobbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrmithdobbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrmithdobbs/subscriptions",
      "organizations_url": "https://api.github.com/users/jrmithdobbs/orgs",
      "repos_url": "https://api.github.com/users/jrmithdobbs/repos",
      "events_url": "https://api.github.com/users/jrmithdobbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrmithdobbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jrmithdobbs",
      "id": 48147,
      "node_id": "MDQ6VXNlcjQ4MTQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/48147?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrmithdobbs",
      "html_url": "https://github.com/jrmithdobbs",
      "followers_url": "https://api.github.com/users/jrmithdobbs/followers",
      "following_url": "https://api.github.com/users/jrmithdobbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrmithdobbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrmithdobbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrmithdobbs/subscriptions",
      "organizations_url": "https://api.github.com/users/jrmithdobbs/orgs",
      "repos_url": "https://api.github.com/users/jrmithdobbs/repos",
      "events_url": "https://api.github.com/users/jrmithdobbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrmithdobbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e10e744b8086ebda60368a51ac0aea00a2da7e48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e10e744b8086ebda60368a51ac0aea00a2da7e48",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e10e744b8086ebda60368a51ac0aea00a2da7e48"
      }
    ],
    "stats": {
      "total": 100,
      "additions": 100,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5b6d6aa5fe18a9df73a28756255e362a36443fd1",
        "filename": "cap.cpp",
        "status": "added",
        "additions": 100,
        "deletions": 0,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20dfcf709f4c368b589664776bb4d802ff828a44/cap.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20dfcf709f4c368b589664776bb4d802ff828a44/cap.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/cap.cpp?ref=20dfcf709f4c368b589664776bb4d802ff828a44",
        "patch": "@@ -0,0 +1,100 @@\n+/* This is currently only known to be implemented on linux. *\n+ * enable by defining USE_POSIX_CAPABILITIES at build time. *\n+ * You will then need to either make the bitcoin/bitcoind   *\n+ * binary setuid root (bad) or setcap setpcap=eip; (good)   *\n+ *                                                          *\n+ * Solaris may have an implementation but this may be linux *\n+ * 2.6.32+ specific. Sorry. You will need libcap2.          */\n+\n+#ifdef USE_POSIX_CAPABILITIES\n+\n+#include <sys/capability.h>\n+#include <sys/prctl.h>\n+#include <sys/types.h>\n+\n+// This is current as of linux 2.6.38.5\n+#ifndef CAP_LAST_CAP\n+#define CAP_LAST_CAP CAP_AUDIT_CONTROL\n+#endif\n+\n+// These defines should be removable once there is a working autotools that can\n+// find kernel headers. linux/securebits.h\n+//#include <linux/securebits.h>\n+/* !_LINUX_SECUREBITS_H */\n+#ifndef _LINUX_SECUREBITS_H\n+#define _LINUX_SECUREBITS_H 1\n+#define SECUREBITS_DEFAULT 0x00000000\n+#define SECURE_NOROOT\t\t\t0\n+#define SECURE_NOROOT_LOCKED\t\t1  /* make bit-0 immutable */\n+#define SECURE_NO_SETUID_FIXUP\t\t2\n+#define SECURE_NO_SETUID_FIXUP_LOCKED\t3  /* make bit-2 immutable */\n+#define SECURE_KEEP_CAPS\t\t4\n+#define SECURE_KEEP_CAPS_LOCKED\t\t5  /* make bit-4 immutable */\n+#define issecure_mask(X)\t(1 << (X))\n+#define issecure(X)\t\t(issecure_mask(X) & current_cred_xxx(securebits))\n+#define SECURE_ALL_BITS\t\t(issecure_mask(SECURE_NOROOT) | \\\n+\t\t\t\t issecure_mask(SECURE_NO_SETUID_FIXUP) | \\\n+\t\t\t\t issecure_mask(SECURE_KEEP_CAPS))\n+#define SECURE_ALL_LOCKS\t(SECURE_ALL_BITS << 1)\n+#endif /* !_LINUX_SECUREBITS_H */\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+extern int cCap_lock(void);\n+int cCap_clear_bnd(__u32 bnd);\n+\n+int cCap_lock(void) {\n+  int error = 0;\n+  cap_flag_value_t check;\n+  cap_t state, newstate;\n+\n+  if ((state = cap_get_proc()) == NULL)\n+    return -1;\n+\n+  if ((newstate = cap_dup(state)) != NULL)\n+    if (cap_clear(newstate) != 0)\n+      return -1;\n+\n+  /* If we have CAP_SETPCAP clear all capabilities and the bounding set. */\n+  if(\n+      (error += cap_get_flag(state,CAP_SETPCAP,CAP_EFFECTIVE,&check) == 0 )\n+      && check == CAP_SET\n+    ) {\n+\n+    error += prctl(PR_SET_SECUREBITS,\n+        SECURE_NO_SETUID_FIXUP|SECURE_NO_SETUID_FIXUP_LOCKED\n+        |SECURE_NOROOT|SECURE_NOROOT_LOCKED\n+        );\n+    error += cCap_clear_bnd(0);\n+    error += cap_set_proc(newstate);\n+  }\n+\n+  cap_free(newstate);\n+  cap_free(state);\n+\n+  return error;\n+}\n+\n+int cCap_clear_bnd(__u32 bnd) {\n+  unsigned j;\n+  int error = 0;\n+\n+  /* Remove all capabilities that are not in\n+   * bnd from bounding set! */\n+  for(j=0;j <= CAP_LAST_CAP; j++) {\n+    if (prctl(PR_CAPBSET_READ, j) >=0) {\n+      if(!(bnd & CAP_TO_MASK(j)))\n+        error += prctl(PR_CAPBSET_DROP,j);\n+    }\n+  }\n+  return error;\n+}\n+\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+#endif\n+"
      }
    ]
  }
]