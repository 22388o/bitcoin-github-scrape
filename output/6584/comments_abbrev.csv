jtimon,2015-08-25T22:13:00Z,"@laanwj shouldn't this be labeled with ""mempool"" too like #6405 ?\n@jgarzik you didn't adapted the python tests, feel free to cherry pick it for #6405 \n\nBy the way, I'm aware that we talked about merging #6470 first. But if it's takes much longer to merge it for whatever reason, I think we should be blocking other things like this or a dynamic min relay fee (which I would really want to do after",https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-134757326,134757326,
luke-jr,2015-08-26T00:17:37Z,Oversimplifying default policy also makes policy customisation more difficult. So IMO concept NACK unless there's a good reason for this (missing from description).\n,https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-134776837,134776837,
sipa,2015-08-26T00:29:40Z,"In my opinion, policy abstraction (ability for customization) is something to plug in after the codebase in which it's plugged into is stable. That is currently not the case, the mempool will very likely significantly change for memory limiting, floating relay fee, indexes for block creation, ... much of that is much harder when trying to maintain a (IMO legacy and mostly broken) hardcoded policy.",https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-134778238,134778238,
dcousens,2015-08-26T01:18:19Z,"Concept ACK\n\n> Oversimplifying default policy also makes policy customisation more difficult. So IMO concept NACK unless there's a good reason for this (missing from description).\n\nIMHO,  it does the opposite,  it makes it easier to customize.  However,  my experience here is probably not as extensive as yours,  as it is based purely on editing the code as it stands not implementing policies s",https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-134783945,134783945,
sipa,2015-08-26T19:34:41Z,"I agree with @dcousens. The default policy that is implemented now is very difficult to customize (it relies on 2 different ordering criteria, with associated specific code in block construction, and specific code in mempool acceptance to work). A policy that just introduces a ""generalized cost"" and ""generalized fee"" for transactions would be much more flexible and easier to work with.\n",https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-135147926,135147926,
jtimon,2015-08-26T20:57:32Z,"@luke-jr the goal is simplifying this special-cased code. Once we have a CPolicy interface and a -policy parameter to select alternative policies we will make it easier for miners to implement their own policies. But changing the default policy is in my opinion mostly neutral to policy modularization.\nIf you could point to the parts of the removed code are you worried about concretely, that would",https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-135168425,135168425,
paveljanik,2015-08-27T05:57:15Z,"NACK\nFree transactions are social aspect of the bitcoin (even 0.00001 is a lot of money somewhere). In the future, they should be made optional. Miner fee can be paid offline, so you can't say it is irrational for them to include such transaction. Maybe it is a miner's own transaction...\n",https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-135302676,135302676,
dcousens,2015-08-27T07:48:12Z,"@paveljanik this doesn't stop miners from accepting ~~free~~ 0 fee transactions.  This just makes the behaviour rational and based on the incentive,  rather than something that is difficult to reason about in terms of miner priority.\n",https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-135325405,135325405,
chris-belcher,2015-08-30T14:50:31Z,It may be rational for miners to accept free txes if it decreases the UTXO set size.\n\nE.G. https://www.blocktrail.com/BTC/tx/9b933f6f811dcc920d35bc48876181da4b29282ad452bdeb7563cff7c6c09bf9\n,https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-136151551,136151551,
ABISprotocol,2015-09-03T06:05:00Z,NACK.  NACK.  I agree with @paveljanik et. al.\n,https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-137345616,137345616,
jtimon,2015-09-03T18:56:23Z,@paveljanik \n\n> Free transactions are social aspect of the bitcoin (even 0.00001 is a lot of money somewhere).\n\nFree transactions create the illusion that the system (currently heavily subsidized by seigniorage) is cheap when it is actually very costly. They will eventually disappear when miners start using competitive policies and in the meantime are creating false expectations and confusing ,https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-137541896,137541896,
morcos,2015-09-15T02:19:18Z,"@jtimon Heh, I know we were just together, but I've been totally behind on PR's for the last couple weeks so didn't see this.  I just wanted to give my two cents that I'm now happy to rebase any of my existing mempool limiting PR's on top of policy changes.  During the rapid iteration to find a solution I felt like that was going to be a hindrance, but I think the work is far enough along now that",https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-140257612,140257612,
ABISprotocol,2015-09-15T09:17:41Z,"I agree with @luke-jr  @sipa and @paveljanik ~ I realize this is closed out, but in light of new comments, I'm just emphasizing my prior NACK.  See in particular @sipa's comments.  cc @morcos\n",https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-140334064,140334064,
dcousens,2015-09-16T06:47:35Z,@ABISprotocol: @sipa's comments were in favour of this change?  Could you link directly to what you mean?\n,https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-140646159,140646159,
sipa,2015-09-16T11:57:29Z,"I'm in favor, but let's get the mempool refactorsnin first. This should be\na simple change to redo (correct me if I'm wrong @jgarzik).\n",https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-140719994,140719994,
jgarzik,2015-09-16T12:52:15Z,"Correct, it is trivial to regenerate at any time.\n",https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-140732601,140732601,
ABISprotocol,2015-09-16T23:28:31Z,"@dcousens Please see [here](https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-134778238) and also @sipa's more recent comment above (Sept. 16) [here](https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-140719994).  My comments above may have seemed conflicting, to simplify, I think this puts the cart before the horse.  Finish what was intended [here](https://github.com/bitcoin/bitcoi",https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-140925164,140925164,
jtimon,2015-09-17T13:55:57Z,"Yes, this is trivial to rebase. Also, I'm going to try another approach where the functionality is unaffected but encapsulated in policy and at the same time minTxRealyFee stops being a global and it's dynamic (using the fee estimator) instead. But I won't open a PR with that branch at least until #6068  is merged, but people can take a look at https://github.com/bitcoin/bitcoin/compare/master...j",https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-141094422,141094422,
jtimon,2015-09-17T13:57:31Z,"Sorry, I meant this branch: https://github.com/bitcoin/bitcoin/compare/master...jtimon:policy-minrelayfee-0.12.99\n",https://github.com/bitcoin/bitcoin/pull/6584#issuecomment-141094812,141094812,
