[
  {
    "sha": "438e94dc330a37600ec1d86f2ba8502385b5262d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MzhlOTRkYzMzMGEzNzYwMGVjMWQ4NmYyYmE4NTAyMzg1YjUyNjJk",
    "commit": {
      "author": {
        "name": "whythat",
        "email": "yuri.zhykin@gmail.com",
        "date": "2016-09-02T09:38:04Z"
      },
      "committer": {
        "name": "whythat",
        "email": "yuri.zhykin@gmail.com",
        "date": "2016-09-04T23:00:43Z"
      },
      "message": "remove root test directory for RPC tests",
      "tree": {
        "sha": "198645346bc0c791d379256aeea33b8aecfcf384",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/198645346bc0c791d379256aeea33b8aecfcf384"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/438e94dc330a37600ec1d86f2ba8502385b5262d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/438e94dc330a37600ec1d86f2ba8502385b5262d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/438e94dc330a37600ec1d86f2ba8502385b5262d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/438e94dc330a37600ec1d86f2ba8502385b5262d/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "6f939c9080a3bc7d5eb5d50f1b6ed42b0f3f692c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f939c9080a3bc7d5eb5d50f1b6ed42b0f3f692c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6f939c9080a3bc7d5eb5d50f1b6ed42b0f3f692c"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "186cf866cfda6d1e9555bf03898e35c8c2bf917e",
        "filename": "qa/rpc-tests/test_framework/test_framework.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/438e94dc330a37600ec1d86f2ba8502385b5262d/qa/rpc-tests/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/438e94dc330a37600ec1d86f2ba8502385b5262d/qa/rpc-tests/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/test_framework.py?ref=438e94dc330a37600ec1d86f2ba8502385b5262d",
        "patch": "@@ -125,7 +125,8 @@ def main(self):\n         self.add_options(parser)\n         (self.options, self.args) = parser.parse_args()\n \n-        self.options.tmpdir += '/' + str(self.options.port_seed)\n+        # backup dir variable for removal at cleanup\n+        self.options.root, self.options.tmpdir = self.options.tmpdir, self.options.tmpdir + '/' + str(self.options.port_seed)\n \n         if self.options.trace_rpc:\n             logging.basicConfig(level=logging.DEBUG, stream=sys.stdout)\n@@ -176,6 +177,8 @@ def main(self):\n         if not self.options.nocleanup and not self.options.noshutdown and success:\n             print(\"Cleaning up\")\n             shutil.rmtree(self.options.tmpdir)\n+            if not os.listdir(self.options.root):\n+                os.rmdir(self.options.root)\n         else:\n             print(\"Not cleaning up dir %s\" % self.options.tmpdir)\n "
      }
    ]
  },
  {
    "sha": "c62cc4ec759a8487373f158b3cbb888efcdd753a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNjJjYzRlYzc1OWE4NDg3MzczZjE1OGIzY2JiODg4ZWZjZGQ3NTNh",
    "commit": {
      "author": {
        "name": "whythat",
        "email": "yuri.zhykin@gmail.com",
        "date": "2016-09-04T23:04:37Z"
      },
      "committer": {
        "name": "whythat",
        "email": "yuri.zhykin@gmail.com",
        "date": "2016-09-04T23:06:49Z"
      },
      "message": "fix path for bak file",
      "tree": {
        "sha": "61d464e2c276fa467f2f27db47bf4e98f631e1d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/61d464e2c276fa467f2f27db47bf4e98f631e1d6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c62cc4ec759a8487373f158b3cbb888efcdd753a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c62cc4ec759a8487373f158b3cbb888efcdd753a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c62cc4ec759a8487373f158b3cbb888efcdd753a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c62cc4ec759a8487373f158b3cbb888efcdd753a/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "438e94dc330a37600ec1d86f2ba8502385b5262d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/438e94dc330a37600ec1d86f2ba8502385b5262d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/438e94dc330a37600ec1d86f2ba8502385b5262d"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "a49d91f6f4f53e9d257bb67c23282ef7b9c4dadf",
        "filename": "qa/rpc-tests/wallet-hd.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c62cc4ec759a8487373f158b3cbb888efcdd753a/qa/rpc-tests/wallet-hd.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c62cc4ec759a8487373f158b3cbb888efcdd753a/qa/rpc-tests/wallet-hd.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet-hd.py?ref=c62cc4ec759a8487373f158b3cbb888efcdd753a",
        "patch": "@@ -39,8 +39,8 @@ def run_test (self):\n         self.nodes[1].importprivkey(self.nodes[0].dumpprivkey(non_hd_add))\n \n         # This should be enough to keep the master key and the non-HD key \n-        self.nodes[1].backupwallet(tmpdir + \"hd.bak\")\n-        #self.nodes[1].dumpwallet(tmpdir + \"hd.dump\")\n+        self.nodes[1].backupwallet(tmpdir + \"/hd.bak\")\n+        #self.nodes[1].dumpwallet(tmpdir + \"/hd.dump\")\n \n         # Derive some HD addresses and remember the last\n         # Also send funds to each add\n@@ -63,7 +63,7 @@ def run_test (self):\n         print(\"Restore backup ...\")\n         self.stop_node(1)\n         os.remove(self.options.tmpdir + \"/node1/regtest/wallet.dat\")\n-        shutil.copyfile(tmpdir + \"hd.bak\", tmpdir + \"/node1/regtest/wallet.dat\")\n+        shutil.copyfile(tmpdir + \"/hd.bak\", tmpdir + \"/node1/regtest/wallet.dat\")\n         self.nodes[1] = start_node(1, self.options.tmpdir, self.node_args[1])\n         #connect_nodes_bi(self.nodes, 0, 1)\n "
      }
    ]
  }
]