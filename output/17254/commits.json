[
  {
    "sha": "5710dadf9b282524fddf42c682351cd8022ed7bf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NzEwZGFkZjliMjgyNTI0ZmRkZjQyYzY4MjM1MWNkODAyMmVkN2Jm",
    "commit": {
      "author": {
        "name": "kodslav",
        "email": "kodslav@home.local",
        "date": "2019-01-10T15:10:05Z"
      },
      "committer": {
        "name": "Adam Jonas",
        "email": "jonas@chaincode.com",
        "date": "2019-10-25T16:13:19Z"
      },
      "message": "test: fix script_p2sh_tests OP_PUSHBACK2/4 missing\n\nFixes commit 6b25f29a91 where opcodes where lost in translation.",
      "tree": {
        "sha": "3a754fa646d4348847e2aef025da39507eee133b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a754fa646d4348847e2aef025da39507eee133b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5710dadf9b282524fddf42c682351cd8022ed7bf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5710dadf9b282524fddf42c682351cd8022ed7bf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5710dadf9b282524fddf42c682351cd8022ed7bf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5710dadf9b282524fddf42c682351cd8022ed7bf/comments",
    "author": null,
    "committer": {
      "login": "adamjonas",
      "id": 755825,
      "node_id": "MDQ6VXNlcjc1NTgyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/755825?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamjonas",
      "html_url": "https://github.com/adamjonas",
      "followers_url": "https://api.github.com/users/adamjonas/followers",
      "following_url": "https://api.github.com/users/adamjonas/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamjonas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
      "organizations_url": "https://api.github.com/users/adamjonas/orgs",
      "repos_url": "https://api.github.com/users/adamjonas/repos",
      "events_url": "https://api.github.com/users/adamjonas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamjonas/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "693e40090ae7af52585ce1a6136a4bd56318fac7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/693e40090ae7af52585ce1a6136a4bd56318fac7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/693e40090ae7af52585ce1a6136a4bd56318fac7"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "ec28d6a0ada7112983ff25b90670712e79356c52",
        "filename": "src/test/script_p2sh_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5710dadf9b282524fddf42c682351cd8022ed7bf/src/test/script_p2sh_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5710dadf9b282524fddf42c682351cd8022ed7bf/src/test/script_p2sh_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_p2sh_tests.cpp?ref=5710dadf9b282524fddf42c682351cd8022ed7bf",
        "patch": "@@ -209,20 +209,21 @@ BOOST_AUTO_TEST_CASE(is)\n     p2sh << OP_HASH160 << ToByteVector(dummy) << OP_EQUAL;\n     BOOST_CHECK(p2sh.IsPayToScriptHash());\n \n-    // Not considered pay-to-script-hash if using one of the OP_PUSHDATA opcodes:\n     std::vector<unsigned char> direct = {OP_HASH160, 20};\n     direct.insert(direct.end(), 20, 0);\n     direct.push_back(OP_EQUAL);\n     BOOST_CHECK(CScript(direct.begin(), direct.end()).IsPayToScriptHash());\n+\n+    // Not considered pay-to-script-hash if using one of the OP_PUSHDATA opcodes:\n     std::vector<unsigned char> pushdata1 = {OP_HASH160, OP_PUSHDATA1, 20};\n     pushdata1.insert(pushdata1.end(), 20, 0);\n     pushdata1.push_back(OP_EQUAL);\n     BOOST_CHECK(!CScript(pushdata1.begin(), pushdata1.end()).IsPayToScriptHash());\n-    std::vector<unsigned char> pushdata2 = {OP_HASH160, 20, 0};\n+    std::vector<unsigned char> pushdata2 = {OP_HASH160, OP_PUSHDATA2, 20, 0};\n     pushdata2.insert(pushdata2.end(), 20, 0);\n     pushdata2.push_back(OP_EQUAL);\n     BOOST_CHECK(!CScript(pushdata2.begin(), pushdata2.end()).IsPayToScriptHash());\n-    std::vector<unsigned char> pushdata4 = {OP_HASH160, 20, 0, 0, 0};\n+    std::vector<unsigned char> pushdata4 = {OP_HASH160, OP_PUSHDATA4, 20, 0, 0, 0};\n     pushdata4.insert(pushdata4.end(), 20, 0);\n     pushdata4.push_back(OP_EQUAL);\n     BOOST_CHECK(!CScript(pushdata4.begin(), pushdata4.end()).IsPayToScriptHash());"
      }
    ]
  }
]