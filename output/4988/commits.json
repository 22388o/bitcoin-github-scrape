[
  {
    "sha": "ed6d1a2c7be9d046d5e78330d5e163023a6b302a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZDZkMWEyYzdiZTlkMDQ2ZDVlNzgzMzBkNWUxNjMwMjNhNmIzMDJh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-09-25T06:21:21Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-10-06T05:32:00Z"
      },
      "message": "Keep information about all block files in memory",
      "tree": {
        "sha": "00ef18d5d5f62e1919b8e73410bd654acaab46ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/00ef18d5d5f62e1919b8e73410bd654acaab46ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed6d1a2c7be9d046d5e78330d5e163023a6b302a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed6d1a2c7be9d046d5e78330d5e163023a6b302a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ed6d1a2c7be9d046d5e78330d5e163023a6b302a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed6d1a2c7be9d046d5e78330d5e163023a6b302a/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5505a1b13f75af9f0f6421b42d97c06e079db345",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5505a1b13f75af9f0f6421b42d97c06e079db345",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5505a1b13f75af9f0f6421b42d97c06e079db345"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 39,
      "deletions": 37
    },
    "files": [
      {
        "sha": "9cf3afef7d90b22615364c0dbc54a708a3032c2b",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 37,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed6d1a2c7be9d046d5e78330d5e163023a6b302a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed6d1a2c7be9d046d5e78330d5e163023a6b302a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=ed6d1a2c7be9d046d5e78330d5e163023a6b302a",
        "patch": "@@ -108,7 +108,7 @@ namespace {\n     set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexValid;\n \n     CCriticalSection cs_LastBlockFile;\n-    CBlockFileInfo infoLastBlockFile;\n+    std::vector<CBlockFileInfo> vinfoBlockFile;\n     int nLastBlockFile = 0;\n \n     // Every received block is assigned a unique and increasing identifier, so we\n@@ -1522,15 +1522,15 @@ void static FlushBlockFile(bool fFinalize = false)\n     FILE *fileOld = OpenBlockFile(posOld);\n     if (fileOld) {\n         if (fFinalize)\n-            TruncateFile(fileOld, infoLastBlockFile.nSize);\n+            TruncateFile(fileOld, vinfoBlockFile[nLastBlockFile].nSize);\n         FileCommit(fileOld);\n         fclose(fileOld);\n     }\n \n     fileOld = OpenUndoFile(posOld);\n     if (fileOld) {\n         if (fFinalize)\n-            TruncateFile(fileOld, infoLastBlockFile.nUndoSize);\n+            TruncateFile(fileOld, vinfoBlockFile[nLastBlockFile].nUndoSize);\n         FileCommit(fileOld);\n         fclose(fileOld);\n     }\n@@ -2107,32 +2107,32 @@ bool FindBlockPos(CValidationState &state, CDiskBlockPos &pos, unsigned int nAdd\n \n     LOCK(cs_LastBlockFile);\n \n-    if (fKnown) {\n-        if (nLastBlockFile != pos.nFile) {\n-            nLastBlockFile = pos.nFile;\n-            infoLastBlockFile.SetNull();\n-            pblocktree->ReadBlockFileInfo(nLastBlockFile, infoLastBlockFile);\n-            fUpdatedLast = true;\n-        }\n-    } else {\n-        while (infoLastBlockFile.nSize + nAddSize >= MAX_BLOCKFILE_SIZE) {\n-            LogPrintf(\"Leaving block file %i: %s\\n\", nLastBlockFile, infoLastBlockFile.ToString());\n+    unsigned int nFile = fKnown ? pos.nFile : nLastBlockFile;\n+    if (vinfoBlockFile.size() <= nFile) {\n+        vinfoBlockFile.resize(nFile + 1);\n+    }\n+\n+    if (!fKnown) {\n+        while (vinfoBlockFile[nFile].nSize + nAddSize >= MAX_BLOCKFILE_SIZE) {\n+            LogPrintf(\"Leaving block file %i: %s\\n\", nFile, vinfoBlockFile[nFile].ToString());\n             FlushBlockFile(true);\n-            nLastBlockFile++;\n-            infoLastBlockFile.SetNull();\n-            pblocktree->ReadBlockFileInfo(nLastBlockFile, infoLastBlockFile); // check whether data for the new file somehow already exist; can fail just fine\n+            nFile++;\n+            if (vinfoBlockFile.size() <= nFile) {\n+                vinfoBlockFile.resize(nFile + 1);\n+            }\n             fUpdatedLast = true;\n         }\n-        pos.nFile = nLastBlockFile;\n-        pos.nPos = infoLastBlockFile.nSize;\n+        pos.nFile = nFile;\n+        pos.nPos = vinfoBlockFile[nFile].nSize;\n     }\n \n-    infoLastBlockFile.nSize += nAddSize;\n-    infoLastBlockFile.AddBlock(nHeight, nTime);\n+    nLastBlockFile = nFile;\n+    vinfoBlockFile[nFile].nSize += nAddSize;\n+    vinfoBlockFile[nFile].AddBlock(nHeight, nTime);\n \n     if (!fKnown) {\n         unsigned int nOldChunks = (pos.nPos + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;\n-        unsigned int nNewChunks = (infoLastBlockFile.nSize + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;\n+        unsigned int nNewChunks = (vinfoBlockFile[nFile].nSize + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;\n         if (nNewChunks > nOldChunks) {\n             if (CheckDiskSpace(nNewChunks * BLOCKFILE_CHUNK_SIZE - pos.nPos)) {\n                 FILE *file = OpenBlockFile(pos);\n@@ -2147,7 +2147,7 @@ bool FindBlockPos(CValidationState &state, CDiskBlockPos &pos, unsigned int nAdd\n         }\n     }\n \n-    if (!pblocktree->WriteBlockFileInfo(nLastBlockFile, infoLastBlockFile))\n+    if (!pblocktree->WriteBlockFileInfo(nLastBlockFile, vinfoBlockFile[nFile]))\n         return state.Abort(\"Failed to write file info\");\n     if (fUpdatedLast)\n         pblocktree->WriteLastBlockFile(nLastBlockFile);\n@@ -2162,19 +2162,10 @@ bool FindUndoPos(CValidationState &state, int nFile, CDiskBlockPos &pos, unsigne\n     LOCK(cs_LastBlockFile);\n \n     unsigned int nNewSize;\n-    if (nFile == nLastBlockFile) {\n-        pos.nPos = infoLastBlockFile.nUndoSize;\n-        nNewSize = (infoLastBlockFile.nUndoSize += nAddSize);\n-        if (!pblocktree->WriteBlockFileInfo(nLastBlockFile, infoLastBlockFile))\n-            return state.Abort(\"Failed to write block info\");\n-    } else {\n-        CBlockFileInfo info;\n-        if (!pblocktree->ReadBlockFileInfo(nFile, info))\n-            return state.Abort(\"Failed to read block info\");\n-        pos.nPos = info.nUndoSize;\n-        nNewSize = (info.nUndoSize += nAddSize);\n-        if (!pblocktree->WriteBlockFileInfo(nFile, info))\n-            return state.Abort(\"Failed to write block info\");\n+    pos.nPos = vinfoBlockFile[nFile].nUndoSize;\n+    nNewSize = vinfoBlockFile[nFile].nUndoSize += nAddSize;\n+    if (!pblocktree->WriteBlockFileInfo(nLastBlockFile, vinfoBlockFile[nLastBlockFile])) {\n+        return state.Abort(\"Failed to write block info\");\n     }\n \n     unsigned int nOldChunks = (pos.nPos + UNDOFILE_CHUNK_SIZE - 1) / UNDOFILE_CHUNK_SIZE;\n@@ -2826,9 +2817,20 @@ bool static LoadBlockIndexDB()\n \n     // Load block file info\n     pblocktree->ReadLastBlockFile(nLastBlockFile);\n+    vinfoBlockFile.resize(nLastBlockFile + 1);\n     LogPrintf(\"LoadBlockIndexDB(): last block file = %i\\n\", nLastBlockFile);\n-    if (pblocktree->ReadBlockFileInfo(nLastBlockFile, infoLastBlockFile))\n-        LogPrintf(\"LoadBlockIndexDB(): last block file info: %s\\n\", infoLastBlockFile.ToString());\n+    for (int nFile = 0; nFile <= nLastBlockFile; nFile++) {\n+        pblocktree->ReadBlockFileInfo(nFile, vinfoBlockFile[nFile]);\n+    }\n+    LogPrintf(\"LoadBlockIndexDB(): last block file info: %s\\n\", vinfoBlockFile[nLastBlockFile].ToString());\n+    for (int nFile = nLastBlockFile + 1; true; nFile++) {\n+        CBlockFileInfo info;\n+        if (pblocktree->ReadBlockFileInfo(nFile, info)) {\n+            vinfoBlockFile.push_back(info);\n+        } else {\n+            break;\n+        }\n+    }\n \n     // Check presence of blk files\n     LogPrintf(\"Checking all blk files are present...\\n\");"
      }
    ]
  },
  {
    "sha": "7b2bb96271cb456c2b958b502788ac5ca94c84d4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YjJiYjk2MjcxY2I0NTZjMmI5NThiNTAyNzg4YWM1Y2E5NGM4NGQ0",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-10-21T23:17:13Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-10-21T23:17:13Z"
      },
      "message": "Replace some function names with __func__",
      "tree": {
        "sha": "4e1af5447b8bf4503acb49b00301587a7101e210",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e1af5447b8bf4503acb49b00301587a7101e210"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7b2bb96271cb456c2b958b502788ac5ca94c84d4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b2bb96271cb456c2b958b502788ac5ca94c84d4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7b2bb96271cb456c2b958b502788ac5ca94c84d4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b2bb96271cb456c2b958b502788ac5ca94c84d4/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ed6d1a2c7be9d046d5e78330d5e163023a6b302a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed6d1a2c7be9d046d5e78330d5e163023a6b302a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ed6d1a2c7be9d046d5e78330d5e163023a6b302a"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8b4c03c190ae690a21f0b2535f26e0beaa824a49",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7b2bb96271cb456c2b958b502788ac5ca94c84d4/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7b2bb96271cb456c2b958b502788ac5ca94c84d4/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=7b2bb96271cb456c2b958b502788ac5ca94c84d4",
        "patch": "@@ -2818,11 +2818,11 @@ bool static LoadBlockIndexDB()\n     // Load block file info\n     pblocktree->ReadLastBlockFile(nLastBlockFile);\n     vinfoBlockFile.resize(nLastBlockFile + 1);\n-    LogPrintf(\"LoadBlockIndexDB(): last block file = %i\\n\", nLastBlockFile);\n+    LogPrintf(\"%s: last block file = %i\\n\", __func__, nLastBlockFile);\n     for (int nFile = 0; nFile <= nLastBlockFile; nFile++) {\n         pblocktree->ReadBlockFileInfo(nFile, vinfoBlockFile[nFile]);\n     }\n-    LogPrintf(\"LoadBlockIndexDB(): last block file info: %s\\n\", vinfoBlockFile[nLastBlockFile].ToString());\n+    LogPrintf(\"%s: last block file info: %s\\n\", __func__, vinfoBlockFile[nLastBlockFile].ToString());\n     for (int nFile = nLastBlockFile + 1; true; nFile++) {\n         CBlockFileInfo info;\n         if (pblocktree->ReadBlockFileInfo(nFile, info)) {"
      }
    ]
  }
]