[
  {
    "sha": "1a062b85f0f445d786c658a4f3687c07011810dc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYTA2MmI4NWYwZjQ0NWQ3ODZjNjU4YTRmMzY4N2MwNzAxMTgxMGRj",
    "commit": {
      "author": {
        "name": "Akio Nakamura",
        "email": "nakamura@dgtechnologies.co.jp",
        "date": "2019-02-19T06:03:46Z"
      },
      "committer": {
        "name": "Akio Nakamura",
        "email": "nakamura@dgtechnologies.co.jp",
        "date": "2019-02-19T07:38:44Z"
      },
      "message": "tests: remove byte.hex() to keep compatibility\n\nUse test_framework.util.bytes_to_hex_str() instead of bytes.hex() that\nnew in Python 3.5, to support minimum version of Python(test).",
      "tree": {
        "sha": "af1614c6939975a9c0ad68d090fd6443f0c41cec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/af1614c6939975a9c0ad68d090fd6443f0c41cec"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a062b85f0f445d786c658a4f3687c07011810dc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a062b85f0f445d786c658a4f3687c07011810dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1a062b85f0f445d786c658a4f3687c07011810dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a062b85f0f445d786c658a4f3687c07011810dc/comments",
    "author": {
      "login": "AkioNak",
      "id": 24285095,
      "node_id": "MDQ6VXNlcjI0Mjg1MDk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/24285095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AkioNak",
      "html_url": "https://github.com/AkioNak",
      "followers_url": "https://api.github.com/users/AkioNak/followers",
      "following_url": "https://api.github.com/users/AkioNak/following{/other_user}",
      "gists_url": "https://api.github.com/users/AkioNak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AkioNak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AkioNak/subscriptions",
      "organizations_url": "https://api.github.com/users/AkioNak/orgs",
      "repos_url": "https://api.github.com/users/AkioNak/repos",
      "events_url": "https://api.github.com/users/AkioNak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AkioNak/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "AkioNak",
      "id": 24285095,
      "node_id": "MDQ6VXNlcjI0Mjg1MDk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/24285095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AkioNak",
      "html_url": "https://github.com/AkioNak",
      "followers_url": "https://api.github.com/users/AkioNak/followers",
      "following_url": "https://api.github.com/users/AkioNak/following{/other_user}",
      "gists_url": "https://api.github.com/users/AkioNak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AkioNak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AkioNak/subscriptions",
      "organizations_url": "https://api.github.com/users/AkioNak/orgs",
      "repos_url": "https://api.github.com/users/AkioNak/repos",
      "events_url": "https://api.github.com/users/AkioNak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AkioNak/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "904308dca3ff50afb704597c0a65d226dd40f635",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/904308dca3ff50afb704597c0a65d226dd40f635",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/904308dca3ff50afb704597c0a65d226dd40f635"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "d0bef48cb600ed25970be4381511dae1368ff1d9",
        "filename": "test/functional/mining_basic.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a062b85f0f445d786c658a4f3687c07011810dc/test/functional/mining_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a062b85f0f445d786c658a4f3687c07011810dc/test/functional/mining_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mining_basic.py?ref=1a062b85f0f445d786c658a4f3687c07011810dc",
        "patch": "@@ -184,7 +184,7 @@ def assert_submitblock(block, result_str_1, result_str_2=None):\n         self.log.info('submitheader tests')\n         assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='xx' * BLOCK_HEADER_SIZE))\n         assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='ff' * (BLOCK_HEADER_SIZE-2)))\n-        assert_raises_rpc_error(-25, 'Must submit previous header', lambda: node.submitheader(hexdata=super(CBlock, bad_block).serialize().hex()))\n+        assert_raises_rpc_error(-25, 'Must submit previous header', lambda: node.submitheader(hexdata=b2x(super(CBlock, bad_block).serialize())))\n \n         block.nTime += 1\n         block.solve()"
      },
      {
        "sha": "a0a35bf43dec92af4f090061a734f3d6125f1c23",
        "filename": "test/functional/wallet_txn_clone.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a062b85f0f445d786c658a4f3687c07011810dc/test/functional/wallet_txn_clone.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a062b85f0f445d786c658a4f3687c07011810dc/test/functional/wallet_txn_clone.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_txn_clone.py?ref=1a062b85f0f445d786c658a4f3687c07011810dc",
        "patch": "@@ -8,6 +8,7 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n+    bytes_to_hex_str as b2x,\n     connect_nodes,\n     disconnect_nodes,\n     sync_blocks,\n@@ -81,7 +82,7 @@ def run_test(self):\n \n         # Use a different signature hash type to sign.  This creates an equivalent but malleated clone.\n         # Don't send the clone anywhere yet\n-        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_tx.serialize().hex(), None, \"ALL|ANYONECANPAY\")\n+        tx1_clone = self.nodes[0].signrawtransactionwithwallet(b2x(clone_tx.serialize()), None, \"ALL|ANYONECANPAY\")\n         assert_equal(tx1_clone[\"complete\"], True)\n \n         # Have node0 mine a block, if requested:"
      }
    ]
  }
]