[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/890441742",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22417#issuecomment-890441742",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22417",
    "id": 890441742,
    "node_id": "IC_kwDOABII5841ExAO",
    "user": {
      "login": "tryphe",
      "id": 8435003,
      "node_id": "MDQ6VXNlcjg0MzUwMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8435003?u=7c63a6209cf9ab35dd71f150c3fe68a4eaef89cf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tryphe",
      "html_url": "https://github.com/tryphe",
      "followers_url": "https://api.github.com/users/tryphe/followers",
      "following_url": "https://api.github.com/users/tryphe/following{/other_user}",
      "gists_url": "https://api.github.com/users/tryphe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tryphe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tryphe/subscriptions",
      "organizations_url": "https://api.github.com/users/tryphe/orgs",
      "repos_url": "https://api.github.com/users/tryphe/repos",
      "events_url": "https://api.github.com/users/tryphe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tryphe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-01T03:25:54Z",
    "updated_at": "2021-08-01T03:26:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK\r\n\r\nIs it possible to easily test this functionality? I would like to give it a go.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/890441742/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/890452233",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22417#issuecomment-890452233",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22417",
    "id": 890452233,
    "node_id": "IC_kwDOABII5841EzkJ",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-01T05:11:11Z",
    "updated_at": "2021-08-01T05:11:11Z",
    "author_association": "MEMBER",
    "body": "Should be possible with a long-running process, then looking at `/proc/*pid*/fd` or such.\r\n\r\nIf you want to create a problem, write a program to write to random fd numbers (likely will corrupt things, don't try on an important node). :p",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/890452233/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894381571",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22417#issuecomment-894381571",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22417",
    "id": 894381571,
    "node_id": "IC_kwDOABII5841Ty4D",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-06T16:41:34Z",
    "updated_at": "2021-08-06T16:41:34Z",
    "author_association": "MEMBER",
    "body": "This is a bit beyond my understanding of processes. I tested (on macOS) that 3b6153ba336b929b06930d81930077f6bb519732 doesn't break HWI integration, so I have no objection.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894381571/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/758492164",
    "pull_request_review_id": 817979103,
    "id": 758492164,
    "node_id": "PRRC_kwDOABII584tNawE",
    "diff_hunk": "@@ -102,6 +110,32 @@ std::string ShellEscape(const std::string& arg);\n #if HAVE_SYSTEM\n void runCommand(const std::string& strCommand);\n #endif\n+\n+#if defined(BOOST_POSIX_API) && defined(FD_CLOEXEC)\n+/**\n+ * Ensure a boost::process::child has its non-std fds all closed when exec\n+ * is called.\n+ */\n+struct bpe_close_excess_fds : boost::process::extend::handler\n+{\n+    template<typename Executor>\n+    void on_exec_setup(Executor&exec) const\n+    {\n+        try {\n+            for (auto it : fs::directory_iterator(\"/dev/fd\")) {\n+                int64_t fd;\n+                if (!ParseInt64(it.path().filename().native(), &fd)) continue;\n+                if (fd <= 2) continue;  // leave std{in,out,err} alone\n+                ::fcntl(fd, F_SETFD, ::fcntl(fd, F_GETFD) | FD_CLOEXEC);",
    "path": "src/util/system.h",
    "position": 42,
    "original_position": 42,
    "commit_id": "3b6153ba336b929b06930d81930077f6bb519732",
    "original_commit_id": "3b6153ba336b929b06930d81930077f6bb519732",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "As I understand this code is executed in the child process. What's the advantage of using `fcntl(\u2026FD_CLOEXEC` instead of straight-up closing the fd here?",
    "created_at": "2021-11-29T15:48:25Z",
    "updated_at": "2021-11-29T15:48:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22417#discussion_r758492164",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22417",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/758492164"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22417#discussion_r758492164"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22417"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/758492164/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 129,
    "original_line": 129,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/758493969",
    "pull_request_review_id": 817981493,
    "id": 758493969,
    "node_id": "PRRC_kwDOABII584tNbMR",
    "diff_hunk": "@@ -102,6 +110,32 @@ std::string ShellEscape(const std::string& arg);\n #if HAVE_SYSTEM\n void runCommand(const std::string& strCommand);\n #endif\n+\n+#if defined(BOOST_POSIX_API) && defined(FD_CLOEXEC)\n+/**\n+ * Ensure a boost::process::child has its non-std fds all closed when exec\n+ * is called.\n+ */\n+struct bpe_close_excess_fds : boost::process::extend::handler\n+{\n+    template<typename Executor>\n+    void on_exec_setup(Executor&exec) const\n+    {\n+        try {\n+            for (auto it : fs::directory_iterator(\"/dev/fd\")) {",
    "path": "src/util/system.h",
    "position": 38,
    "original_position": 38,
    "commit_id": "3b6153ba336b929b06930d81930077f6bb519732",
    "original_commit_id": "3b6153ba336b929b06930d81930077f6bb519732",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "TIL `/dev/fd` is a general UNIX thing and not limited to Linux. It doesn't seem like a very nice API to iterate open file descriptors but seems portable enough.",
    "created_at": "2021-11-29T15:50:07Z",
    "updated_at": "2021-11-29T15:50:41Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22417#discussion_r758493969",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22417",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/758493969"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22417#discussion_r758493969"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22417"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/758493969/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 125,
    "original_line": 125,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/758565651",
    "pull_request_review_id": 818077943,
    "id": 758565651,
    "node_id": "PRRC_kwDOABII584tNssT",
    "diff_hunk": "@@ -102,6 +110,32 @@ std::string ShellEscape(const std::string& arg);\n #if HAVE_SYSTEM\n void runCommand(const std::string& strCommand);\n #endif\n+\n+#if defined(BOOST_POSIX_API) && defined(FD_CLOEXEC)\n+/**\n+ * Ensure a boost::process::child has its non-std fds all closed when exec\n+ * is called.\n+ */\n+struct bpe_close_excess_fds : boost::process::extend::handler\n+{\n+    template<typename Executor>\n+    void on_exec_setup(Executor&exec) const\n+    {\n+        try {\n+            for (auto it : fs::directory_iterator(\"/dev/fd\")) {\n+                int64_t fd;\n+                if (!ParseInt64(it.path().filename().native(), &fd)) continue;\n+                if (fd <= 2) continue;  // leave std{in,out,err} alone\n+                ::fcntl(fd, F_SETFD, ::fcntl(fd, F_GETFD) | FD_CLOEXEC);",
    "path": "src/util/system.h",
    "position": 42,
    "original_position": 42,
    "commit_id": "3b6153ba336b929b06930d81930077f6bb519732",
    "original_commit_id": "3b6153ba336b929b06930d81930077f6bb519732",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Instead of closing directly, we have to set the `FD_CLOEXEC` flag and let `exec` close them; otherwise, boost::process's internal pipe would be closed and we get the wrong exception thrown (not actually a problem outside of our tests, but might as well do this cleanly).",
    "created_at": "2021-11-29T17:06:26Z",
    "updated_at": "2021-11-29T17:06:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22417#discussion_r758565651",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22417",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/758565651"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22417#discussion_r758565651"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22417"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/758565651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 129,
    "original_line": 129,
    "side": "RIGHT",
    "in_reply_to_id": 758492164
  }
]