[
  {
    "sha": "3f4c6187a828bed35ae24f06ba6566c82bd55ed2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjRjNjE4N2E4MjhiZWQzNWFlMjRmMDZiYTY1NjZjODJiZDU1ZWQy",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-08-01T18:19:09Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-08-02T14:48:02Z"
      },
      "message": "Inline i64tostr and itostr\n\nThese methods don't give us much, and removing them removes utilstrencodings's\ndependence on tinyformat",
      "tree": {
        "sha": "b3522c2d108d3841a02734237b810f1da927923e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b3522c2d108d3841a02734237b810f1da927923e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f4c6187a828bed35ae24f06ba6566c82bd55ed2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJbYxmkAAoJEG7l83hfeLNFrn4IAJxwKIGrDxEXZ5OGNyPNjxd5\nEG7MD2yd/nd9eqA2GGy7a4X/fwxf8HpO5fkzR+6qFFji75pwEY6dfm7jeLWJVcPF\nFhsw+tLVdgmf1P2G3UjYE70xDEaFuPJELLjyDJmCFmnCBWzBuCNIsNaaRW8lIVVK\nrdKMpZiwJouPB8KWonKNrgo43RRRWSjatMJd+u740Yq570qn1CXaIpdFvTwjUIZV\nbkhg7cehYmZsfXlV1StPngnjHQ+zqP8oHYbXT7B+t74Zqx+Tiboq3UyP3WS3u4jL\nCtuY9ta7FyMaGwEv1ArvMXK/bI3rV+wqiDvQLzKnzOcz1W5EfFgtmAzb7isnKF4=\n=qjOy\n-----END PGP SIGNATURE-----",
        "payload": "tree b3522c2d108d3841a02734237b810f1da927923e\nparent f030410e88f11c5ff1ce6c80b463a1c7f6d39830\nauthor Ben Woosley <ben.woosley@gmail.com> 1533147549 -0400\ncommitter Ben Woosley <ben.woosley@gmail.com> 1533221282 -0400\n\nInline i64tostr and itostr\n\nThese methods don't give us much, and removing them removes utilstrencodings's\ndependence on tinyformat\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f4c6187a828bed35ae24f06ba6566c82bd55ed2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f4c6187a828bed35ae24f06ba6566c82bd55ed2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f4c6187a828bed35ae24f06ba6566c82bd55ed2/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f030410e88f11c5ff1ce6c80b463a1c7f6d39830",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f030410e88f11c5ff1ce6c80b463a1c7f6d39830",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f030410e88f11c5ff1ce6c80b463a1c7f6d39830"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 14,
      "deletions": 28
    },
    "files": [
      {
        "sha": "ea07ff4bb6ef725bacf77772c49f87e10c71b9b0",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f4c6187a828bed35ae24f06ba6566c82bd55ed2/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f4c6187a828bed35ae24f06ba6566c82bd55ed2/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=3f4c6187a828bed35ae24f06ba6566c82bd55ed2",
        "patch": "@@ -1601,7 +1601,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 vRecv >> LIMITED_STRING(strMsg, CMessageHeader::COMMAND_SIZE) >> ccode >> LIMITED_STRING(strReason, MAX_REJECT_MESSAGE_LENGTH);\n \n                 std::ostringstream ss;\n-                ss << strMsg << \" code \" << itostr(ccode) << \": \" << strReason;\n+                ss << strMsg << strprintf(\" code %u: \", ccode) << strReason;\n \n                 if (strMsg == NetMsgType::BLOCK || strMsg == NetMsgType::TX)\n                 {"
      },
      {
        "sha": "fed7db26adb1d0bf91db6338fd7cde225b83911e",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f4c6187a828bed35ae24f06ba6566c82bd55ed2/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f4c6187a828bed35ae24f06ba6566c82bd55ed2/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=3f4c6187a828bed35ae24f06ba6566c82bd55ed2",
        "patch": "@@ -20,6 +20,7 @@\n #include <rpc/mining.h>\n #include <rpc/server.h>\n #include <shutdown.h>\n+#include <tinyformat.h>\n #include <txmempool.h>\n #include <util.h>\n #include <utilstrencodings.h>\n@@ -647,7 +648,7 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n     result.pushKV(\"transactions\", transactions);\n     result.pushKV(\"coinbaseaux\", aux);\n     result.pushKV(\"coinbasevalue\", (int64_t)pblock->vtx[0]->vout[0].nValue);\n-    result.pushKV(\"longpollid\", chainActive.Tip()->GetBlockHash().GetHex() + i64tostr(nTransactionsUpdatedLast));\n+    result.pushKV(\"longpollid\", strprintf(\"%s%u\", chainActive.Tip()->GetBlockHash().GetHex(), nTransactionsUpdatedLast));\n     result.pushKV(\"target\", hashTarget.GetHex());\n     result.pushKV(\"mintime\", (int64_t)pindexPrev->GetMedianTimePast()+1);\n     result.pushKV(\"mutable\", aMutable);"
      },
      {
        "sha": "99ff6e11e374245e1ad08c071e046a626c99779f",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f4c6187a828bed35ae24f06ba6566c82bd55ed2/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f4c6187a828bed35ae24f06ba6566c82bd55ed2/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=3f4c6187a828bed35ae24f06ba6566c82bd55ed2",
        "patch": "@@ -5,6 +5,7 @@\n #include <sync.h>\n \n #include <logging.h>\n+#include <tinyformat.h>\n #include <utilstrencodings.h>\n \n #include <stdio.h>\n@@ -47,7 +48,7 @@ struct CLockLocation {\n \n     std::string ToString() const\n     {\n-        return mutexName + \"  \" + sourceFile + \":\" + itostr(sourceLine) + (fTry ? \" (TRY)\" : \"\");\n+        return strprintf(\"%s %s: %d%s\", mutexName, sourceFile, sourceLine, (fTry ? \" (TRY)\" : \"\"));\n     }\n \n private:"
      },
      {
        "sha": "35a6ad4ff3839e1ce90d5c0a3a066f55283d62aa",
        "filename": "src/utilstrencodings.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 13,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f4c6187a828bed35ae24f06ba6566c82bd55ed2/src/utilstrencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f4c6187a828bed35ae24f06ba6566c82bd55ed2/src/utilstrencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilstrencodings.cpp?ref=3f4c6187a828bed35ae24f06ba6566c82bd55ed2",
        "patch": "@@ -5,12 +5,12 @@\n \n #include <utilstrencodings.h>\n \n-#include <tinyformat.h>\n-\n #include <cstdlib>\n #include <cstring>\n #include <errno.h>\n #include <limits>\n+#include <locale>\n+#include <sstream>\n \n static const std::string CHARS_ALPHA_NUM = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n \n@@ -392,16 +392,6 @@ std::string FormatParagraph(const std::string& in, size_t width, size_t indent)\n     return out.str();\n }\n \n-std::string i64tostr(int64_t n)\n-{\n-    return strprintf(\"%d\", n);\n-}\n-\n-std::string itostr(int n)\n-{\n-    return strprintf(\"%d\", n);\n-}\n-\n int64_t atoi64(const char* psz)\n {\n #ifdef _MSC_VER\n@@ -543,4 +533,3 @@ bool ParseFixedPoint(const std::string &val, int decimals, int64_t *amount_out)\n \n     return true;\n }\n-"
      },
      {
        "sha": "025989d129fa4bc90b8e6dbd9c6c531ae402fbe8",
        "filename": "src/utilstrencodings.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f4c6187a828bed35ae24f06ba6566c82bd55ed2/src/utilstrencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f4c6187a828bed35ae24f06ba6566c82bd55ed2/src/utilstrencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilstrencodings.h?ref=3f4c6187a828bed35ae24f06ba6566c82bd55ed2",
        "patch": "@@ -55,8 +55,6 @@ std::string EncodeBase32(const unsigned char* pch, size_t len);\n std::string EncodeBase32(const std::string& str);\n \n void SplitHostPort(std::string in, int &portOut, std::string &hostOut);\n-std::string i64tostr(int64_t n);\n-std::string itostr(int n);\n int64_t atoi64(const char* psz);\n int64_t atoi64(const std::string& str);\n int atoi(const std::string& str);"
      },
      {
        "sha": "76693e68499d7126d452c615321bd0dcb4e03e51",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 7,
        "deletions": 10,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f4c6187a828bed35ae24f06ba6566c82bd55ed2/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f4c6187a828bed35ae24f06ba6566c82bd55ed2/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=3f4c6187a828bed35ae24f06ba6566c82bd55ed2",
        "patch": "@@ -189,14 +189,6 @@ static inline void ReadOrderPos(int64_t& nOrderPos, mapValue_t& mapValue)\n     nOrderPos = atoi64(mapValue[\"n\"].c_str());\n }\n \n-\n-static inline void WriteOrderPos(const int64_t& nOrderPos, mapValue_t& mapValue)\n-{\n-    if (nOrderPos == -1)\n-        return;\n-    mapValue[\"n\"] = i64tostr(nOrderPos);\n-}\n-\n struct COutputEntry\n {\n     CTxDestination destination;\n@@ -402,7 +394,10 @@ class CWalletTx : public CMerkleTx\n         mapValue_t mapValueCopy = mapValue;\n \n         mapValueCopy[\"fromaccount\"] = strFromAccount;\n-        WriteOrderPos(nOrderPos, mapValueCopy);\n+\n+        if (nOrderPos != -1) {\n+            mapValueCopy[\"n\"] = strprintf(\"%d\", nOrderPos);\n+        }\n         if (nTimeSmart) {\n             mapValueCopy[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n         }\n@@ -601,7 +596,9 @@ class CAccountingEntry\n         s << nCreditDebit << nTime << strOtherAccount;\n \n         mapValue_t mapValueCopy = mapValue;\n-        WriteOrderPos(nOrderPos, mapValueCopy);\n+        if (nOrderPos != -1) {\n+            mapValueCopy[\"n\"] = strprintf(\"%d\", nOrderPos);\n+        }\n \n         std::string strCommentCopy = strComment;\n         if (!mapValueCopy.empty() || !_ssExtra.empty()) {"
      }
    ]
  }
]