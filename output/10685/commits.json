[
  {
    "sha": "381b8fc36537f9fa42f4487bcf55920b2ae0bda9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODFiOGZjMzY1MzdmOWZhNDJmNDQ4N2JjZjU1OTIwYjJhZTBiZGE5",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-06-27T18:46:19Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-06-27T18:47:07Z"
      },
      "message": "Clarify CCoinsViewMemPool documentation.\n\nThanks to @sdaftuar for correcting my misunderstanding.",
      "tree": {
        "sha": "95c6c018bdeee5027e5676afb1766bbc319c93dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/95c6c018bdeee5027e5676afb1766bbc319c93dd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/381b8fc36537f9fa42f4487bcf55920b2ae0bda9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/381b8fc36537f9fa42f4487bcf55920b2ae0bda9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/381b8fc36537f9fa42f4487bcf55920b2ae0bda9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/381b8fc36537f9fa42f4487bcf55920b2ae0bda9/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "acb11535cb8499fd47fdde7f52457f8945b58856",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/acb11535cb8499fd47fdde7f52457f8945b58856",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/acb11535cb8499fd47fdde7f52457f8945b58856"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 8,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c17ca2fa3a1760f57fb9e108d44205734f11860d",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/381b8fc36537f9fa42f4487bcf55920b2ae0bda9/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/381b8fc36537f9fa42f4487bcf55920b2ae0bda9/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=381b8fc36537f9fa42f4487bcf55920b2ae0bda9",
        "patch": "@@ -991,7 +991,7 @@ UniValue gettxout(const JSONRPCRequest& request)\n     if (fMempool) {\n         LOCK(mempool.cs);\n         CCoinsViewMemPool view(pcoinsTip, mempool);\n-        if (!view.GetCoin(out, coin) || mempool.isSpent(out)) { // TODO: filtering spent coins should be done by the CCoinsViewMemPool\n+        if (!view.GetCoin(out, coin) || mempool.isSpent(out)) {\n             return NullUniValue;\n         }\n     } else {"
      },
      {
        "sha": "70d7429f220f226949b1c5d738d03b328e363597",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/381b8fc36537f9fa42f4487bcf55920b2ae0bda9/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/381b8fc36537f9fa42f4487bcf55920b2ae0bda9/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=381b8fc36537f9fa42f4487bcf55920b2ae0bda9",
        "patch": "@@ -676,6 +676,13 @@ class CTxMemPool\n /** \n  * CCoinsView that brings transactions from a memorypool into view.\n  * It does not check for spendings by memory pool transactions.\n+ * Instead, it provides access to all Coins which are either unspent in the\n+ * base CCoinsView, or are outputs from any mempool transaction!\n+ * This allows transaction replacement to work as expected, as you want to\n+ * have all inputs \"available\" to check signatures, and any cycles in the\n+ * dependency graph are checked directly in AcceptToMemoryPool.\n+ * It also allows you to sign a double-spend directly in signrawtransaction,\n+ * as long as the conflicting transaction is not yet confirmed.\n  */\n class CCoinsViewMemPool : public CCoinsViewBacked\n {"
      }
    ]
  }
]