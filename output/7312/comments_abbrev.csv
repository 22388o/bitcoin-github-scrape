luke-jr,2016-01-07T17:35:35Z,This is way too late for 0.12...\n,https://github.com/bitcoin/bitcoin/pull/7312#issuecomment-169748063,169748063,
morcos,2016-01-07T17:45:25Z,"@luke-jr I don't think we can release 0.12 without this.  With mempool eviction combined with the new behaviour that unconfirmed txs still tie up the coins they spend even if the txs are not in the mempool, users may end up with permanently unspendable coins frequently.\n\nWe discussed making this change in conjunction with the other changes back in November, but it appears to have slipped through",https://github.com/bitcoin/bitcoin/pull/7312#issuecomment-169752951,169752951,
luke-jr,2016-01-07T17:52:19Z,This situation isn't really any worse than the status quo from older versions...\n,https://github.com/bitcoin/bitcoin/pull/7312#issuecomment-169755227,169755227,
jonasschnelli,2016-01-07T20:17:31Z,"Concept ACK.\nI agree it late for 0.12,... but I don't take a position on this (if it's saver to go with or without a such feature).\n\nWould be nice to see some tests (especially when we tag this for 0.12).\n",https://github.com/bitcoin/bitcoin/pull/7312#issuecomment-169793688,169793688,
morcos,2016-01-07T21:42:33Z,Addressed @jonasschnelli's comment (thanks for quick review!) and reordered commits for simpler reading.\n,https://github.com/bitcoin/bitcoin/pull/7312#issuecomment-169814431,169814431,
morcos,2016-01-08T03:47:28Z,"oops, i didn't mean to push that RPC test yet, it was still in progress, but might as well leave it there for now...\n",https://github.com/bitcoin/bitcoin/pull/7312#issuecomment-169885072,169885072,
kanzure,2016-01-08T13:01:44Z,"I think a name like ""abandonlocaltransaction"" or ""abandonunconfirmedtransaction"" could help to minimize ambiguity.  But I would consider this a very low priority suggestion, because this RPC call is only available when the wallet is enabled.\n",https://github.com/bitcoin/bitcoin/pull/7312#issuecomment-169995500,169995500,
MarcoFalke,2016-01-08T13:05:34Z,"> abandonunconfirmedtransaction\n\nHow would you type that without any typos? I'd rather make the rpc short (""abandontx"") and the documentation/GUI verbose.\n",https://github.com/bitcoin/bitcoin/pull/7312#issuecomment-169996224,169996224,
MarcoFalke,2016-01-08T13:06:47Z,Concept ACK  6d74a63154cca756d698d6022c694b21e7f43ac5\n,https://github.com/bitcoin/bitcoin/pull/7312#issuecomment-169996403,169996403,
morcos,2016-01-08T16:46:06Z,Thanks for the review. \nAddressed nits in RPC help and finalized the RPC test\n,https://github.com/bitcoin/bitcoin/pull/7312#issuecomment-170052012,170052012,
MarcoFalke,2016-01-08T17:52:29Z,Reviewed-tests ACK 21702ff\n\n@morcos Please fix the travis issue (file not found)\n,https://github.com/bitcoin/bitcoin/pull/7312#issuecomment-170073408,170073408,
morcos,2016-01-08T19:05:15Z,oops sorry.\nfixed typo and removed bitcoind argument from rpc test.\n,https://github.com/bitcoin/bitcoin/pull/7312#issuecomment-170094366,170094366,
MarcoFalke,2016-01-08T19:44:57Z,QT-tested ACK d716866\n\n![screenshot from 2016-01-08 20-41-15](https://cloud.githubusercontent.com/assets/6399679/12207715/839120a8-b648-11e5-9ee4-a74eb4ebdfe8.png)\nNit: Qt balance != getwalletinfo\n,https://github.com/bitcoin/bitcoin/pull/7312#issuecomment-170104433,170104433,
jonasschnelli,2016-01-11T10:02:56Z,"Tested ACK (also ack on a 0.12 bp, because it's a wallet only change)\nNits:\n- missing update signal (see above)\n- missing flag in `listtransactions`.\n",https://github.com/bitcoin/bitcoin/pull/7312#issuecomment-170494961,170494961,
jonasschnelli,2016-01-11T10:21:54Z,Addressed the nits and a cosmetic change for GUI in: https://github.com/morcos/bitcoin/pull/6\n,https://github.com/bitcoin/bitcoin/pull/7312#issuecomment-170500230,170500230,
morcos,2016-01-11T19:27:50Z,"@jonasschnelli , thanks!  I added your notify commit.  I left the other changes for a separate pull.\n",https://github.com/bitcoin/bitcoin/pull/7312#issuecomment-170662587,170662587,
morcos,2016-01-11T21:47:52Z,Ok updated after speaking to @jonasschnelli \nI think this is good now\n,https://github.com/bitcoin/bitcoin/pull/7312#issuecomment-170701107,170701107,
PRabahy,2016-01-12T04:39:54Z,Does https://github.com/bitcoin/bitcoin/blob/master/contrib/bitcoind.bash-completion need to get updated with this change?\n,https://github.com/bitcoin/bitcoin/pull/7312#issuecomment-170787339,170787339,
MarcoFalke,2016-01-12T07:29:54Z,"@PRabahy sure, but I don't think this is part of this pull.\n",https://github.com/bitcoin/bitcoin/pull/7312#issuecomment-170823816,170823816,
morcos,2016-01-13T13:46:03Z,Addressed @laanwj's concern about clearly identifying constant\n,https://github.com/bitcoin/bitcoin/pull/7312#issuecomment-171295091,171295091,
jonasschnelli,2016-01-07T20:05:04Z,`CMerkleTx::GetDepthInMainChain()` is slightly expansive (and `IsSpent()` gets called a lot). Would caching `mit->second.GetDepthInMainChain()` make sense? Or do we expect the compiler does it internally (I don't think so)?\n,https://github.com/bitcoin/bitcoin/pull/7312#discussion_r49119119,49119119,src/wallet/wallet.cpp
jonasschnelli,2016-01-07T20:14:45Z,"nit: I probably would do it also that way,... but, maybe a cleaner way would be to use `CWalletTx::mapValue` (a flexible kv store) which also would not require a db-scheme update.\n",https://github.com/bitcoin/bitcoin/pull/7312#discussion_r49120293,49120293,src/wallet/wallet.cpp
morcos,2016-01-07T21:17:09Z,sure can fix\n,https://github.com/bitcoin/bitcoin/pull/7312#discussion_r49126953,49126953,src/wallet/wallet.cpp
morcos,2016-01-07T21:38:53Z,"I debated doing that and maybe it would have been better, but I liked the way updating the hashBlock automatically made the transaction no longer abandoned with this approach.\n",https://github.com/bitcoin/bitcoin/pull/7312#discussion_r49129512,49129512,src/wallet/wallet.cpp
jonasschnelli,2016-01-08T08:04:11Z,"> I debated doing that and maybe it would have been better, but I liked the way updating the hashBlock automatically made the transaction no longer abandoned with this approach.\n\nfair enough.\n",https://github.com/bitcoin/bitcoin/pull/7312#discussion_r49165361,49165361,src/wallet/wallet.cpp
kanzure,2016-01-08T12:58:15Z,"consistency nit: all the other fHelp messages use ""transaction"" and ""transactions"" instead of ""tx"" and ""txs"".\n",https://github.com/bitcoin/bitcoin/pull/7312#discussion_r49185451,49185451,src/wallet/rpcwallet.cpp
MarcoFalke,2016-01-08T17:09:18Z,abandonconflicts.py: No such file or directory\n,https://github.com/bitcoin/bitcoin/pull/7312#discussion_r49211705,49211705,qa/pull-tester/rpc-tests.py
MarcoFalke,2016-01-08T17:10:02Z,"Nit: Is the `""-debug"",""-logtimemicros""` part required?\n\nAlso the `binary=""bitcoind""` part?\n",https://github.com/bitcoin/bitcoin/pull/7312#discussion_r49211783,49211783,qa/rpc-tests/abandonconflict.py
sdaftuar,2016-01-08T17:22:16Z,"I think we should drop the `binary=""bitcoind""` part -- by default `start_node` can pick up the binary from the BITCOIND environment variable which is preferred when set.\n",https://github.com/bitcoin/bitcoin/pull/7312#discussion_r49213180,49213180,qa/rpc-tests/abandonconflict.py
MarcoFalke,2016-01-08T19:43:11Z,Shouldn't `resendwallettransactions` do the same? I get the empty array on `resendwallettransactions`.\n,https://github.com/bitcoin/bitcoin/pull/7312#discussion_r49229186,49229186,qa/rpc-tests/abandonconflict.py
jonasschnelli,2016-01-11T09:54:55Z,"I think here we also need a `NotifyTransactionChanged(this, wtx.GetHash(), CT_UPDATED);` Otherwise the signal listeners (UI) can't recalculate the balance.\n",https://github.com/bitcoin/bitcoin/pull/7312#discussion_r49303648,49303648,src/wallet/wallet.cpp
jonasschnelli,2016-01-11T09:55:27Z,"~~Probably also here:\n`NotifyTransactionChanged(this, txin.prevout.hash, CT_UPDATED);`~~\n",https://github.com/bitcoin/bitcoin/pull/7312#discussion_r49303690,49303690,src/wallet/wallet.cpp
morcos,2016-01-13T13:44:22Z,"I thought it made sense that abandoned transactions would not be automatically resent.\nThat way when you restart a bitcoind with transactions that you've tried to abandon, it wouldn't automatically try to send them all again\n",https://github.com/bitcoin/bitcoin/pull/7312#discussion_r49590752,49590752,qa/rpc-tests/abandonconflict.py
