practicalswift,2021-01-26 12:41:25,"Super Strong Concept ACK :)\n\nIn code where we want to rely on implicit sign changes, implicit truncations, etc we can explicitly opt-in to such on a per file or per function basis via suppressions.",https://github.com/bitcoin/bitcoin/pull/21012#issuecomment-767516770,767516770,
DrahtBot,2021-01-26 16:03:01,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20936 (build: build fuzz tests by default by danben)\n\nIf you consider this pull request important, please also help to ",https://github.com/bitcoin/bitcoin/pull/21012#issuecomment-767645061,767645061,
MarcoFalke,2021-01-26 17:03:37,Times out,https://github.com/bitcoin/bitcoin/pull/21012#issuecomment-767685567,767685567,
practicalswift,2021-01-26 18:21:39,@MarcoFalke In order to process the `qa-assets` inputs with `-fsanitize=integer` without timeouts I usually remove all excessively large inputs we have by using `find qa-assets/fuzz_seed_corpus/ -type f -size +4k -delete` (where `4k` can be tuned). See https://github.com/bitcoin-core/qa-assets/issues/25#issuecomment-767731480.,https://github.com/bitcoin/bitcoin/pull/21012#issuecomment-767735263,767735263,
MarcoFalke,2021-01-28 13:14:00,ci passed in 1h30min,https://github.com/bitcoin/bitcoin/pull/21012#issuecomment-769044088,769044088,
practicalswift,2021-01-28 21:02:20,cr ACK faff3991a9be0ea7be31685fb46d94c212c5da34: patch looks correct,https://github.com/bitcoin/bitcoin/pull/21012#issuecomment-769390994,769390994,
