meshcollider,2020-05-04 23:42:42,Concept ACK,https://github.com/bitcoin/bitcoin/pull/18870#issuecomment-623764962,623764962,
DrahtBot,2020-05-05 14:40:59,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit e727c2bdcab3660297f452c76c6f877038015c02<br>(master) | commit df33f7052fa6dd032ca01e97c5366afec3303c56<br>(master and this pull) |\n|--|--|--|\n| bitcoin-0.20.99-aarch64-linux-gnu-debug.tar.gz | [`c399df47e9ec0e56...`](https://drahtbot.space/guix/bitcoin/bitcoin/e727c2bdcab3660297f452c76c6f877038015c02/bitcoin-0.20.99-aarc,https://github.com/bitcoin/bitcoin/pull/18870#issuecomment-624096244,624096244,
practicalswift,2020-05-05 14:52:42,"Super strong concept ACK\n\nAs contributors we're used to passing `--with-incompatible-bdb`, but for a new user compiling Bitcoin Core from scratch the first time it is really unintuitive that the standard `./configure && make` routine is _expected_ to fail (for nearly all default configs) :)",https://github.com/bitcoin/bitcoin/pull/18870#issuecomment-624103135,624103135,
Sjors,2020-05-08 14:09:35,"Tested 67e493abcd3937ac590fe6515a9ebf85e48c8bcc on macOS 10.15.4, including the backwards compatibility functional tests (though that's uninteresting on macOS, see below).\n\nI managed to build with `berkeley-db@4` via homebrew (`DB 4.8.30: (April  9, 2010`)\n\nThe Homebrew package for `berkeley-db` is at version 18. That's not in your whitelist, but it did work previously.\n\nWhen both `ber",https://github.com/bitcoin/bitcoin/pull/18870#issuecomment-625833935,625833935,
ryanofsky,2020-05-08 14:43:52,"re: https://github.com/bitcoin/bitcoin/pull/18870#issue-413171800\n\n> One issue I noticed while testing this was that it configure would pick up my system BDB instead of the depends BDB. It's possible that this could effect gitian builds, which would be a bug. Someone more familiar with our build system should check that.\n\nTook this up in #18915\n\nre: https://github.com/bitcoin/bitcoin/p",https://github.com/bitcoin/bitcoin/pull/18870#issuecomment-625849797,625849797,
achow101,2020-05-08 16:26:02,"> But if next year your system drops 5.3 and goes to 6, then aren't you back in the same boat again?\n\nYes, but that's unlikely to happen. 5.3 is already 7 years old and not maintained by Oracle anymore. Distros haven't moved to 6.0+ because of the license issues. What's more likely to happen is that BDB gets dropped by distros entirely in which case none of this matters.\n\n> If the real goa",https://github.com/bitcoin/bitcoin/pull/18870#issuecomment-625897299,625897299,
Sjors,2020-05-08 16:27:38,"> But if next year your system drops 5.3 and goes to 6, then aren't you back in the same boat again?\n\nYes.\n\n> If the real goal of this PR is to get rid of the --with-incompatible-bdb option and dreaded ""Found Berkeley DB other than 4.8, required for portable wallets"" error, then it seems like there are other ways to do this\n\nI think it's a good first step to allow a wider range of vers",https://github.com/bitcoin/bitcoin/pull/18870#issuecomment-625897999,625897999,
luke-jr,2020-05-08 17:34:58,">I don't think we should restrict ourselves by licensing, when it comes to what versions users compile on their own computer. Only by backwards compatibility.\n\nAGPL isn't like most open source licenses (which only restrict distribution). AGPL restricts end users too. Running Bitcoin Core compiled with bdb 6 would automatically be infringing on the bdb 6 license. To legally run this combination",https://github.com/bitcoin/bitcoin/pull/18870#issuecomment-625930950,625930950,
jonatack,2020-05-08 17:35:33,"Am I perhaps the only person who never uses `--with-incompatible-bdb`? My limited data set of experiences with this, is that people stumble across the compatibility thing on first install, and then either go with passing that flag or they use the 4.8 install script in /contrib, which I finds works well and is quick, reliable and convenient.\n\nI went with v4.8 on first install to be on the safe ",https://github.com/bitcoin/bitcoin/pull/18870#issuecomment-625931214,625931214,
luke-jr,2020-05-08 17:37:55,"@jonatack You're definitely not alone. Ubuntu users can easily get bdb4.8 from the PPAs. It's a main package in Gentoo. And like you said, we have it easy to install via depends.",https://github.com/bitcoin/bitcoin/pull/18870#issuecomment-625932259,625932259,
Sjors,2020-05-08 18:16:49,"> AGPL isn't like most open source licenses (which only restrict distribution). AGPL restricts end users too. Running Bitcoin Core compiled with bdb 6 would automatically be infringing on the bdb 6 license. To legally run this combination, you would need to modify Core to advertise and share its own code to peers.\n\nThat is insane. But we already enable this with `--with-incompatible-bdb`.\n\",https://github.com/bitcoin/bitcoin/pull/18870#issuecomment-625948616,625948616,
jonatack,2020-05-08 18:30:06,Thanks @luke-jr and @Sjors. It's interesting for me to hear other user experiences.,https://github.com/bitcoin/bitcoin/pull/18870#issuecomment-625954302,625954302,
tryphe,2020-05-19 19:55:21,"Concept ACK. \n\nI'm really liking this idea as there's a lot of *nix distros with repository versions in this range that aren't exactly 4.8. If someone tries to make wallet backups with the same version but switches distros or distro versions, this will make it a bit easier on them as far as not needing to build a specific BDB. \n\nOn the other hand, I think we need to be extra careful becaus",https://github.com/bitcoin/bitcoin/pull/18870#issuecomment-631047383,631047383,
DrahtBot,2020-05-27 21:23:54,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19077 (wallet: Add sqlite as an alternative wallet database and use it for new descriptor wallets by achow101)\n* #16546 ",https://github.com/bitcoin/bitcoin/pull/18870#issuecomment-634948778,634948778,
achow101,2020-07-10 15:28:00,This seems to still be a bit problematic because of those transaction logs. So closing for now.,https://github.com/bitcoin/bitcoin/pull/18870#issuecomment-656735241,656735241,
luke-jr,2020-05-04 22:10:53,"Add ...`"" and you will be legally required to publish the source code for your node, and modify it to inform peers and RPC clients where to download it.""`\n\nOr maybe just say 6.0 isn't supported (and reject it in configure?).",https://github.com/bitcoin/bitcoin/pull/18870#discussion_r419759273,419759273,doc/build-unix.md
luke-jr,2020-05-04 22:11:12,(This is due to BDB 6.0+ being only available under the AGPL-3 license),https://github.com/bitcoin/bitcoin/pull/18870#discussion_r419759427,419759427,doc/build-unix.md
MarcoFalke,2020-05-04 22:19:38,"Any reason to lower the minimum? I am not aware of a single user or even operating system that provides this version. The only versions that we have been testing in the past are 4.8, 5.1 and 5.3",https://github.com/bitcoin/bitcoin/pull/18870#discussion_r419762889,419762889,doc/dependencies.md
sipa,2020-05-04 22:24:19,"> I am not aware of a single user or even operating system that provides this version.\n\nYou mean you don't want to retain compatibility with Bitcoin Core releases before 0.4.0 (when the BDB dependency was changed from 4.7 to 4.8)? :p",https://github.com/bitcoin/bitcoin/pull/18870#discussion_r419764720,419764720,doc/dependencies.md
achow101,2020-05-04 23:13:48,It was done just for completeness since 4.7 does technically work.,https://github.com/bitcoin/bitcoin/pull/18870#discussion_r419782273,419782273,doc/dependencies.md
achow101,2020-05-05 00:08:17,That's a good point. I've dropped `--with--incompatible-bdb` and just made 6.0+ not a valid option.,https://github.com/bitcoin/bitcoin/pull/18870#discussion_r419798689,419798689,doc/build-unix.md
achow101,2020-05-05 00:08:31,I've set it back to 4.8 as the minimum.,https://github.com/bitcoin/bitcoin/pull/18870#discussion_r419798789,419798789,doc/dependencies.md
jonatack,2020-05-05 18:49:42,nit: s/linux/Linux/,https://github.com/bitcoin/bitcoin/pull/18870#discussion_r420331957,420331957,doc/build-unix.md
jonatack,2020-05-05 18:52:22,s/Releases/Bitcoin Core releases/ (to avoid confusion with BDB releases),https://github.com/bitcoin/bitcoin/pull/18870#discussion_r420333440,420333440,doc/build-unix.md
jonatack,2020-05-05 18:55:39,suggestion: s/6.0/versions 6.0/,https://github.com/bitcoin/bitcoin/pull/18870#discussion_r420335255,420335255,doc/build-unix.md
jonatack,2020-05-05 18:58:55,"suggestion:\n```diff\n-However the database transaction log files do have incompatible formats. But these log files are only relevant in unclean wallet closes.\n+The database transaction log files do have incompatible formats, but these log\n+files are only relevant if the wallet closes uncleanly.\n```",https://github.com/bitcoin/bitcoin/pull/18870#discussion_r420337066,420337066,doc/build-unix.md
jonatack,2020-05-05 18:59:53,s/BDB/BerkeleyDB/,https://github.com/bitcoin/bitcoin/pull/18870#discussion_r420337613,420337613,doc/build-unix.md
ryanofsky,2020-05-07 12:54:54,"> If it is not cleanly closed, then a\n> build using the same version of BDB will need to be used to open and close that wallet to guarantee that\n\nWhat exactly happens in this case? Is there a clear error aborting the wallet load and saying there's a version discrepancy? Or is the wallet allowed to load with incomplete data? If it's the first, then this PR seems good. If it's the second, then",https://github.com/bitcoin/bitcoin/pull/18870#discussion_r421480706,421480706,doc/build-unix.md
achow101,2020-05-07 15:42:52,"> Or is the wallet allowed to load with incomplete data?\n\nThe wallet is allowed to load. The logs are moved to a backup directory and an error is logged to both the debug.log and db.log. Unless the user is actively monitoring one of those files, they wouldn't know that there is an error and potential data loss.",https://github.com/bitcoin/bitcoin/pull/18870#discussion_r421604853,421604853,doc/build-unix.md
achow101,2020-05-07 15:44:46,Done,https://github.com/bitcoin/bitcoin/pull/18870#discussion_r421606129,421606129,doc/build-unix.md
achow101,2020-05-07 15:44:51,Done,https://github.com/bitcoin/bitcoin/pull/18870#discussion_r421606198,421606198,doc/build-unix.md
achow101,2020-05-07 15:44:55,Done,https://github.com/bitcoin/bitcoin/pull/18870#discussion_r421606253,421606253,doc/build-unix.md
achow101,2020-05-07 15:45:00,Done,https://github.com/bitcoin/bitcoin/pull/18870#discussion_r421606315,421606315,doc/build-unix.md
achow101,2020-05-07 15:45:05,Done,https://github.com/bitcoin/bitcoin/pull/18870#discussion_r421606369,421606369,doc/build-unix.md
ryanofsky,2020-05-07 16:48:27,"Part after ""to guarantee that no data is lost"" seems misleading and not specific enough when there's not a good indication of lost data. Would change to ""If not cleanly closed, then builds with the newer versions of BerkeleyDB will recover using all available log data, but builds with older versions of BerkeleyDB will open the wallet potentially not using all of the recovery data.""\n\nre: https:",https://github.com/bitcoin/bitcoin/pull/18870#discussion_r421647964,421647964,doc/build-unix.md
achow101,2020-05-07 17:50:04,"I think we could just remove the behavior where we remove the log files and retry, especially if we are getting a `DB_RUNRECOVERY` error, which, as the name implies, means that BDB thinks we should be doing recovery procedures. This is the error that it returns when the wrong log version is found.",https://github.com/bitcoin/bitcoin/pull/18870#discussion_r421685027,421685027,doc/build-unix.md
ryanofsky,2020-05-07 18:12:59,"> I think we could just remove the behavior where we remove the log files and retry, especially if we are getting a `DB_RUNRECOVERY` error, which, as the name implies, means that BDB thinks we should be doing recovery procedures. This is the error that it returns when the wrong log version is found.\n\nYes, I might have been too pessimistic about how often the recovery case would happen. That id",https://github.com/bitcoin/bitcoin/pull/18870#discussion_r421698704,421698704,doc/build-unix.md
Sjors,2020-05-08 13:27:11,"Thanks, that seems safer given that Travis only lets us test new versions of BDB against the 4.8 hardcode in previous releases, and I don't see us adding 0.4.0 to the previous release test suite (though that would be cool). ",https://github.com/bitcoin/bitcoin/pull/18870#discussion_r422141945,422141945,doc/dependencies.md
