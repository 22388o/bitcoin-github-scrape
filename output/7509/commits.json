[
  {
    "sha": "1fb91b3496f2f07bbace1f9f8e716f7f62d889e6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZmI5MWIzNDk2ZjJmMDdiYmFjZTFmOWY4ZTcxNmY3ZjYyZDg4OWU2",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-02-11T06:35:25Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-02-11T06:38:04Z"
      },
      "message": "Common argument defaults for NODE_BLOOM stuff and -wallet",
      "tree": {
        "sha": "cc508cf26e8a28a163a6439e83fd7118b92b2665",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc508cf26e8a28a163a6439e83fd7118b92b2665"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1fb91b3496f2f07bbace1f9f8e716f7f62d889e6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fb91b3496f2f07bbace1f9f8e716f7f62d889e6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1fb91b3496f2f07bbace1f9f8e716f7f62d889e6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fb91b3496f2f07bbace1f9f8e716f7f62d889e6/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3cd836c1d855b92e7c73ab31979f471c4f8dad68"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 11,
      "deletions": 6
    },
    "files": [
      {
        "sha": "4c327db6a42d2c7dc4e4ca12be41c641a373dd60",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1fb91b3496f2f07bbace1f9f8e716f7f62d889e6/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1fb91b3496f2f07bbace1f9f8e716f7f62d889e6/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=1fb91b3496f2f07bbace1f9f8e716f7f62d889e6",
        "patch": "@@ -71,6 +71,8 @@ static const bool DEFAULT_REST_ENABLE = false;\n static const bool DEFAULT_DISABLE_SAFEMODE = false;\n static const bool DEFAULT_STOPAFTERBLOCKIMPORT = false;\n \n+static const char * const DEFAULT_WALLET_DAT = \"wallet.dat\";\n+\n #if ENABLE_ZMQ\n static CZMQNotificationInterface* pzmqNotificationInterface = NULL;\n #endif\n@@ -366,9 +368,9 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-onion=<ip:port>\", strprintf(_(\"Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: %s)\"), \"-proxy\"));\n     strUsage += HelpMessageOpt(\"-onlynet=<net>\", _(\"Only connect to nodes in network <net> (ipv4, ipv6 or onion)\"));\n     strUsage += HelpMessageOpt(\"-permitbaremultisig\", strprintf(_(\"Relay non-P2SH multisig (default: %u)\"), DEFAULT_PERMIT_BAREMULTISIG));\n-    strUsage += HelpMessageOpt(\"-peerbloomfilters\", strprintf(_(\"Support filtering of blocks and transaction with bloom filters (default: %u)\"), 1));\n+    strUsage += HelpMessageOpt(\"-peerbloomfilters\", strprintf(_(\"Support filtering of blocks and transaction with bloom filters (default: %u)\"), DEFAULT_PEERBLOOMFILTERS));\n     if (showDebug)\n-        strUsage += HelpMessageOpt(\"-enforcenodebloom\", strprintf(\"Enforce minimum protocol version to limit use of bloom filters (default: %u)\", 0));\n+        strUsage += HelpMessageOpt(\"-enforcenodebloom\", strprintf(\"Enforce minimum protocol version to limit use of bloom filters (default: %u)\", DEFAULT_ENFORCENODEBLOOM));\n     strUsage += HelpMessageOpt(\"-port=<port>\", strprintf(_(\"Listen for connections on <port> (default: %u or testnet: %u)\"), Params(CBaseChainParams::MAIN).GetDefaultPort(), Params(CBaseChainParams::TESTNET).GetDefaultPort()));\n     strUsage += HelpMessageOpt(\"-proxy=<ip:port>\", _(\"Connect through SOCKS5 proxy\"));\n     strUsage += HelpMessageOpt(\"-proxyrandomize\", strprintf(_(\"Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)\"), DEFAULT_PROXYRANDOMIZE));\n@@ -405,7 +407,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-maxtxfee=<amt>\", strprintf(_(\"Maximum total fees (in %s) to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)\"),\n         CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MAXFEE)));\n     strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format on startup\"));\n-    strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), \"wallet.dat\"));\n+    strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), DEFAULT_WALLET_DAT));\n     strUsage += HelpMessageOpt(\"-walletbroadcast\", _(\"Make the wallet broadcast transactions\") + \" \" + strprintf(_(\"(default: %u)\"), DEFAULT_WALLETBROADCAST));\n     strUsage += HelpMessageOpt(\"-walletnotify=<cmd>\", _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\"));\n     strUsage += HelpMessageOpt(\"-zapwallettxes=<mode>\", _(\"Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup\") +\n@@ -979,7 +981,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     bSpendZeroConfChange = GetBoolArg(\"-spendzeroconfchange\", DEFAULT_SPEND_ZEROCONF_CHANGE);\n     fSendFreeTransactions = GetBoolArg(\"-sendfreetransactions\", DEFAULT_SEND_FREE_TRANSACTIONS);\n \n-    std::string strWalletFile = GetArg(\"-wallet\", \"wallet.dat\");\n+    std::string strWalletFile = GetArg(\"-wallet\", DEFAULT_WALLET_DAT);\n #endif // ENABLE_WALLET\n \n     fIsBareMultisigStd = GetBoolArg(\"-permitbaremultisig\", DEFAULT_PERMIT_BAREMULTISIG);\n@@ -991,7 +993,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     // Option to startup with mocktime set (used for regression testing):\n     SetMockTime(GetArg(\"-mocktime\", 0)); // SetMockTime(0) is a no-op\n \n-    if (GetBoolArg(\"-peerbloomfilters\", true))\n+    if (GetBoolArg(\"-peerbloomfilters\", DEFAULT_PEERBLOOMFILTERS))\n         nLocalServices |= NODE_BLOOM;\n \n     // ********************************************************* Step 4: application initialization: dir lock, daemonize, pidfile, debug log"
      },
      {
        "sha": "12c349a650d657ec913da42af474f383a62f9175",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1fb91b3496f2f07bbace1f9f8e716f7f62d889e6/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1fb91b3496f2f07bbace1f9f8e716f7f62d889e6/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=1fb91b3496f2f07bbace1f9f8e716f7f62d889e6",
        "patch": "@@ -4276,7 +4276,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         if (pfrom->nVersion >= NO_BLOOM_VERSION) {\n             Misbehaving(pfrom->GetId(), 100);\n             return false;\n-        } else if (GetBoolArg(\"-enforcenodebloom\", false)) {\n+        } else if (GetBoolArg(\"-enforcenodebloom\", DEFAULT_ENFORCENODEBLOOM)) {\n             pfrom->fDisconnect = true;\n             return false;\n         }"
      },
      {
        "sha": "dff81c00638e303e5bd2650061a59e498be162c6",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1fb91b3496f2f07bbace1f9f8e716f7f62d889e6/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1fb91b3496f2f07bbace1f9f8e716f7f62d889e6/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=1fb91b3496f2f07bbace1f9f8e716f7f62d889e6",
        "patch": "@@ -101,6 +101,9 @@ static const bool DEFAULT_TESTSAFEMODE = false;\n /** Maximum number of headers to announce when relaying blocks with headers message.*/\n static const unsigned int MAX_BLOCKS_TO_ANNOUNCE = 8;\n \n+static const bool DEFAULT_PEERBLOOMFILTERS = true;\n+static const bool DEFAULT_ENFORCENODEBLOOM = false;\n+\n struct BlockHasher\n {\n     size_t operator()(const uint256& hash) const { return hash.GetCheapHash(); }"
      }
    ]
  }
]