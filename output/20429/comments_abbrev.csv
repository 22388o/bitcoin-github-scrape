fanquake,2020-11-20 00:53:19,Concept ACK,https://github.com/bitcoin/bitcoin/pull/20429#issuecomment-730731247,730731247,
laanwj,2020-11-20 02:34:16,"Although I agree this is slightly better, I'm honestly not sure we should be doing refactors all over the place just for the sake of using C++17. It's always possible to introduce a subtle issue. We did have a ""new code and code that is changed anyway"" policy at the time of C++11 at least.",https://github.com/bitcoin/bitcoin/pull/20429#issuecomment-730806809,730806809,
DrahtBot,2020-11-20 05:09:26,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19438 (Introduce deploymentstatus by ajtowns)\n\nIf you consider this pull request important, please also help to review ",https://github.com/bitcoin/bitcoin/pull/20429#issuecomment-730854024,730854024,
practicalswift,2020-11-20 08:57:21,"Concept ACK\n\nWhile I agree that we shouldn't introduce C++17 just for the sake of it I think this one is a clear win since it removes a potentially unsafe idiom with a safer replacement. (To be clear: I think our _current_ usages of this idiom are safe, but I think removing an unsafe idiom from the code base reduces the risk of accidental introduction of bugs due to said unsafe idiom in the fu",https://github.com/bitcoin/bitcoin/pull/20429#issuecomment-731036233,731036233,
laanwj,2020-11-22 11:03:27,"> sizeof(arr) / sizeof(arr[0]) is a potentially unsafe idiom due to this gotcha:\n\nYes, agree in this specific case.\n\nLight code review ACK.",https://github.com/bitcoin/bitcoin/pull/20429#issuecomment-731730453,731730453,
DrahtBot,2021-01-28 18:58:55,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/20429#issuecomment-769302451,769302451,
fanquake,2021-01-31 10:14:13,ACK after rebase,https://github.com/bitcoin/bitcoin/pull/20429#issuecomment-770358429,770358429,
theStack,2021-01-31 11:15:44,Rebased on master.,https://github.com/bitcoin/bitcoin/pull/20429#issuecomment-770365600,770365600,
theStack,2021-01-31 16:47:38,"Force-pushed with suggestions of MarcoFalke, see https://github.com/bitcoin/bitcoin/pull/20429#discussion_r567419108 and https://github.com/bitcoin/bitcoin/pull/20429#discussion_r567418821). Also updated the PR description.\nNote due to reordering of the commits, its timestamps are also out-of-order now, let me know if this is a problem.",https://github.com/bitcoin/bitcoin/pull/20429#issuecomment-770411542,770411542,
practicalswift,2021-01-31 18:35:41,cr ACK e829c9afbf75e930db6c3fe77a269b0af5e7a3ad: patch looks correct,https://github.com/bitcoin/bitcoin/pull/20429#issuecomment-770428202,770428202,
MarcoFalke,2021-01-31 12:28:00,"```suggestion\nconst std::vector<uint8_t> block413567{std::begin(block413567_raw), std::end(block413567_raw)};\n```\n\nseem overly verbose to do pointer arithmetic here. Same for all other occurrences in this pull",https://github.com/bitcoin/bitcoin/pull/20429#discussion_r567418821,567418821,src/bench/data.cpp
MarcoFalke,2021-01-31 12:30:05,"Would be nice to re-order the commits, so that the same line of code isn't changed twice in the same pull",https://github.com/bitcoin/bitcoin/pull/20429#discussion_r567419108,567419108,src/qt/networkstyle.cpp
theStack,2021-01-31 16:44:12,"Good idea, done.",https://github.com/bitcoin/bitcoin/pull/20429#discussion_r567452081,567452081,src/qt/networkstyle.cpp
theStack,2021-01-31 16:44:59,"Done, added an extra commit for this, again _before_ the `std::size` substitution to minimize retouching of lines.",https://github.com/bitcoin/bitcoin/pull/20429#discussion_r567452157,567452157,src/bench/data.cpp
