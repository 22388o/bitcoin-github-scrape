jonatack,2020-12-13 22:40:32,"Checking the other implementations, https://github.com/btcsuite/btcd/pull/1536 tagged as ""low priority"" is open in btcd to implement signet. I didn't see other signet proposals in bcoin, bitcoinj, or libbitcoin.",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-744080800,744080800,
ajtowns,2020-12-14 07:20:43,"If we're going to change the software, just making it ignore the message if received post-VERACK (for compatibility with earlier drafts of the BIP and hence rc2) seems simpler than adding special cases.\n\nDeliberately disconnecting nodes for behaving in ways we know is not harmful seems very backwards to me.",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-744229869,744229869,
MarcoFalke,2020-12-14 07:32:13,"Tend toward NACK. There are 20.99 nodes on signet without addrv2 support and will keep a connection just fine. If your addrman is populated with those (or with rc3/final/master nodes), you won't have any issues either. The issue #20637 is purely about a vanilla start with empty addrman and the only seed being the node that is run by @ajtowns or @kallewoof (I don't remember). The solution is to upd",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-744236355,744236355,
ajtowns,2020-12-14 09:20:07,"> the current patch is too broad. The only thing changes should be the disconnection, not the way how addrv2 messages are recognized\n\nThis does only change the disconnection?",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-744301979,744301979,
MarcoFalke,2020-12-14 09:27:13,"> This does only change the disconnection?\n\nIt will run `pfrom.m_wants_addrv2 = true;` on signet, which will not be run on mainnet. The whole goal of signet was to be exactly like mainet, except for the pow.",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-744306427,744306427,
ajtowns,2020-12-14 09:59:06,"Well, adding a test for the signet chain pretty much guarantees different behaviour on signet than mainnet... (And should probably be `if (m_chainparams.GetConsensus().signet_blocks)` anyway, if it were desirable)\n\nI think just being deliberately compatible with (or at least tolerant of) implementations of earlier versions of the BIP would make much more sense, so either:\n\n```c++\nif (pfr",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-744325959,744325959,
MarcoFalke,2020-12-14 10:15:51,"> Deliberately disconnecting nodes for behaving in ways we know is not harmful seems very backwards to me.\n\nTell that to your past self. The disconnection logic has been suggested by you for wtxid, and as such carried over to addv2 ;) \n\nhttps://github.com/bitcoin/bitcoin/pull/18044/files#r446755938",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-744336593,744336593,
ajtowns,2020-12-14 10:29:00,"> > Deliberately disconnecting nodes for behaving in ways we know is not harmful seems very backwards to me.\n> \n> Tell that to your past self. The disconnection logic has been suggested by you for wtxid, and as such carried over to addv2 ;)\n> \n> https://github.com/bitcoin/bitcoin/pull/18044/files#r446755938\n\nIf there had already been nodes on the network sending wtxid relay mesages aft",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-744344543,744344543,
jonatack,2020-12-14 10:29:56,> should probably be `if (m_chainparams.GetConsensus().signet_blocks)`\n\nThanks! I was telling myself there was surely a better way of checking for it.,https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-744345096,744345096,
jonatack,2020-12-14 15:31:31,Updated to propose each of the 3 suggestions that resolve #20637. Will remove/squash commits per reviewer preference.,https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-744518250,744518250,
laanwj,2020-12-14 15:39:42,"~0 on this, I'd prefer to keep it as is if remotely possible, and not change mainnet logic for a temporary signet issue at the least.\n\n> Deliberately disconnecting nodes for behaving in ways we know is not harmful seems very backwards to me.\n\nIt's not harmful but also, it's unclear what to do in that case? Should we ignore the message? Should be back-patch addrv2 support into the existing ",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-744523314,744523314,
luke-jr,2020-12-14 18:42:27,PR title should describe the change (and mention Signet) please,https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-744634027,744634027,
DrahtBot,2020-12-14 19:12:36,<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\n🕵️ @sipa has been requested to review this pull request as specified in the REVIEWERS file.,https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-744649805,744649805,
jonatack,2020-12-14 19:23:41,"Dropped commits 764042ecf74b778bd999961ba44d9648ae5bf4cb and f26e5ebc60ea2f41b959bc8b136719e250fe8761 and updated 5866a3ef2948945b15b936b572cae1a7321849a9 based on the review feedback (thanks!)\n\nWill drop 5866a3ef2948945b15b936b572cae1a7321849a9 if #20648 is preferred. I tested #20648 and it resolves the issue as well. \n\nSorry for the temporary PR title, reinstated the original title.",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-744656742,744656742,
ajtowns,2020-12-14 20:53:53,"> ~0 on this, I'd prefer to keep it as is if remotely possible, and not change mainnet logic for a temporary signet issue at the least.\n\nIt's not a signet issue; it's a ""nodes running #19954 (oct 11) can't communicate with nodes running #20564 (dec 9)"" issue. That happens to affect signet seriously, since signet was only merged a couple of weeks earlier (sep 21), so all existing signet nodes t",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-744704209,744704209,
jonatack,2020-12-14 21:04:28,"Here's the buried discussion in that PR to add the disconnection: https://github.com/bitcoin/bitcoin/pull/20564#discussion_r537713661. I was in favor of aligning BIPs 155 and 339 on this, and their implementations, as it seemed clean and convenient, unless there is a good reason not to--which this issue may be.",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-744709527,744709527,
MarcoFalke,2020-12-15 07:39:42,"> I'm at a complete loss as to why we'd want to simultaneously introduce code that disconnects earlier versions of our own code, especially ones that have already been release candidates.\n\n`master` isn't considered to be stable and shouldn't be used by anyone except developers. `rc`s might be considered more stable, but we never promised to support `rc`s that have been followed up by other `rc",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-745113179,745113179,
sipa,2020-12-15 07:51:34,"I also dislike adding signet-specific exception code here.\n\nAs far as disconnecting for late-term sendaddrv2 goes, I think the discussion has been primarily between (1) accepting *and acting upon* sendaddrv2 at any point and (2) rejecting it entirely if it arrives too late. The possibility of just ignoring it if it arrives too late also exists, and doesn't incur the risk of needing to forever su",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-745117947,745117947,
jonatack,2020-12-15 10:59:28,"Dropped 5866a3ef2948945b15b936b572cae1a7321849a9 as #20637 is now resolved (and I agree that the fixes that arrived after this one are preferable).\n\nIn light of the discussion, replaced it with 2327cadff6685ec353f33f409c0693310af2baa3 that ignores post-verack sendaddrv2 messages rather than disconnecting, and updated the PR title/description. Feel free to suggest closing this as well.",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-745214966,745214966,
sipa,2020-12-15 18:30:42,utACK 2327cadff6685ec353f33f409c0693310af2baa3,https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-745480186,745480186,
ajtowns,2020-12-15 22:26:09,ACK 2327cadff6685ec353f33f409c0693310af2baa3 -- seems to behave reasonably for peers that send sendaddrv2 before or after verack,https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-745606875,745606875,
laanwj,2020-12-17 12:23:31,"Right, the solution to ignore seems most reasonable to me if we don't disconnect for it.\n\nreview ACK 2327cadff6685ec353f33f409c0693310af2baa3",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-747407875,747407875,
jnewbery,2020-12-17 13:51:07,"What's the deployment plan? That this is included in an v0.21 rc4? If not, it seems a bit pointless. By the time it's included in v0.21.1 then all of the problematic old nodes will presumably have upgraded to v0.21 and the disconnect won't be a problem any more.",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-747450681,747450681,
jonatack,2020-12-17 14:01:04,"Yes, I reckoned rc4 / 0.21.0 (or drop the commit).",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-747455966,747455966,
jnewbery,2020-12-17 14:15:31,"ok, I'm ±0. The code seems fine and safe but I don't see a huge benefit to making this change.\n\nThe benefit of a polite disconnect is pointed out by @ajtowns above - it's immediately obvious to implementers that they've done something wrong if they send a `sendaddrv2` after `verack`, whereas with this change it's a bit harder to troubleshoot.",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-747463880,747463880,
sipa,2020-12-17 18:38:30,"Yes, I was thinking 0.21.0, or not at all (if not, we could reassess by the time 0.21.1 is done to see if there is still a use for it, but I suspect not).",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-747622908,747622908,
MarcoFalke,2020-12-17 20:32:10,"review ACK 2327cadff6685ec353f33f409c0693310af2baa3\n\nThe code looks correct. However, the only software affected by this is Bitcoin Core pre-release versions. All version that are affected by the incompatibility won't be made compatible with this change. This simply changes incompatibility by disconnection to incompatibility  by not sending addrv2. Disconnection makes it easier to spot incorre",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-747685198,747685198,
Sjors,2020-12-30 14:59:12,"Concept meh. A quick disconnect indeed seems more developer friendly, all things equal.\n\nI also run signet seed nodes at v0.21.0rc3, which I'm happy to update at the next release candidate.\n\nCode review ACK 2327cad (the first documentation commit is worth merging in any case)\n\nThis needs a 0.21 milestone.\n\nLet's also clarify in `net.h` that `fSuccessfullyConnected` implies `VERACK`",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-752651273,752651273,
jonatack,2021-01-03 13:08:55,"The change to ignore rather than disconnect might be safer wrt p2p network connectivity for the launch of 0.21, but we seem to be mitigated here, so I've dropped the commit unless there is consensus to bring it back.\n\n> Let's also clarify in `net.h` that `fSuccessfullyConnected` implies `VERACK` has been sent or received.\n\nDone.",https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-753614461,753614461,
Sjors,2021-01-03 15:33:13,ACK 346b0ec,https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-753634626,753634626,
DrahtBot,2021-01-06 05:50:41,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-755096463,755096463,
jonatack,2021-01-07 18:38:13,Rebased.,https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-756302108,756302108,
Sjors,2021-01-08 17:14:38,re-ACK 06d47d9928b0e5e3ec93d603c106b757b2618ca5,https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-756888089,756888089,
jonatack,2021-02-02 13:50:58,Thanks for the ACKs. Rebased.,https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-771647989,771647989,
laanwj,2021-02-05 10:15:24,re-ACK e1e67148321cff0de9eb5e63d2604f05c12e69d1,https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-773937886,773937886,
jnewbery,2021-02-05 10:41:30,ACK e1e67148321cff0de9eb5e63d2604f05c12e69d1,https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-773951980,773951980,
MarcoFalke,2020-12-14 15:38:32,"This is not more harmful than an unknown message, so beside being dead code in practise, it is also not protecting against anything.",https://github.com/bitcoin/bitcoin/pull/20646#discussion_r542482193,542482193,src/net_processing.cpp
jonatack,2020-12-14 19:15:40,dropped,https://github.com/bitcoin/bitcoin/pull/20646#discussion_r542667719,542667719,src/net_processing.cpp
ajtowns,2020-12-14 20:01:08,"Behaviour doesn't match description -- per the commit title, this should be:\n\n```c++\n    if (pfrom.fSuccessfullyConnected) {\n        if (!m_chainparams.GetConsensus().signet_blocks) {\n            pfrom.fDisconnect = true;\n        }\n        return;\n    }\n```\n\nIf you want the behaviour that's implemented, should be described as ""support sendaddrv2 after verack on signet only fo",https://github.com/bitcoin/bitcoin/pull/20646#discussion_r542717559,542717559,src/net_processing.cpp
jonatack,2020-12-14 20:39:10,"Thanks, good point, which @MarcoFalke also pointed out in https://github.com/bitcoin/bitcoin/pull/20646#issuecomment-744306427. Updated the implementation per your suggestion for signet behavior to be as close as possible to mainnet. ",https://github.com/bitcoin/bitcoin/pull/20646#discussion_r542757445,542757445,src/net_processing.cpp
theStack,2021-01-05 10:50:28,"I found the first part of this sentence a bit confusing, as it suggests (or could be interpreted as) that both ""addrv2"" and ""sendaddrv2"" are features to be negotiated. Maybe something like ""... defines feature negotiation of addrv2 with a new message sendaddrv2, which ...""?",https://github.com/bitcoin/bitcoin/pull/20646#discussion_r551856358,551856358,src/net_processing.cpp
jonatack,2021-01-07 18:37:24,"Thanks for catching the French spelling slipping into the English :smiley:; fixed the commit message.\n\nBIP155 refers to both `addrv2` and `sendaddrv2` as messages and doesn't use the word ""feature"", so I think the current wording is ok but happy to consider a new/better proposal. ",https://github.com/bitcoin/bitcoin/pull/20646#discussion_r553510644,553510644,src/net_processing.cpp
