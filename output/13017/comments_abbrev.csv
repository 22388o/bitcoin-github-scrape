MarcoFalke,2018-04-18T12:49:27Z,Make sure to align this with the discussion in https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-380950109,https://github.com/bitcoin/bitcoin/pull/13017#issuecomment-382374824,382374824,
Empact,2018-04-18T12:59:03Z,"If we're doing shared ptrs alal #11402, `CWalletRef` would be preferable to `auto` IMO. https://github.com/bitcoin/bitcoin/pull/11402#discussion_r140923964",https://github.com/bitcoin/bitcoin/pull/13017#issuecomment-382377544,382377544,
promag,2018-04-18T13:10:11Z,"@MarcoFalke afaiu yes. Having `vpwallets` centralised helps in adding concurrency, signals/notifications and eventually switching to shared pointers. I've also kept these as global functions as I'm not sure if these can belong to `WalletInitInterface` (imo no).\n\n@Empact thanks for the review. I'm not saying we should use `auto` (it's not used at the moment). I'm not sure if consensus is to use",https://github.com/bitcoin/bitcoin/pull/13017#issuecomment-382380727,382380727,
promag,2018-04-18T20:24:56Z,@jnewbery squashed.,https://github.com/bitcoin/bitcoin/pull/13017#issuecomment-382517627,382517627,
Empact,2018-04-18T20:39:17Z,Could you clang-format? Some whitespace inconsistencies.,https://github.com/bitcoin/bitcoin/pull/13017#issuecomment-382521766,382521766,
promag,2018-04-18T21:03:00Z,"@Empact done, sorry.",https://github.com/bitcoin/bitcoin/pull/13017#issuecomment-382528487,382528487,
promag,2018-04-18T21:13:29Z,"Latests changes are:\n - fix include order and whitespace\n - removed `auto` usage\n - added return `bool` to `AddWallet` and `RemoveWallet`.",https://github.com/bitcoin/bitcoin/pull/13017#issuecomment-382531330,382531330,
jnewbery,2018-04-18T21:22:04Z,ACK 3c058fdcc8a71d17296973cb7f09e44a310df22e.,https://github.com/bitcoin/bitcoin/pull/13017#issuecomment-382533595,382533595,
Empact,2018-04-18T22:06:12Z,utACK 3c058fd,https://github.com/bitcoin/bitcoin/pull/13017#issuecomment-382544399,382544399,
promag,2018-04-19T01:15:01Z,"Thanks for the review @kallewoof. Like @MarcoFalke said, this is a small piece of a large feature and I'd like to keep the PR scope on focus.",https://github.com/bitcoin/bitcoin/pull/13017#issuecomment-382577958,382577958,
practicalswift,2018-04-19T14:01:16Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/13017#issuecomment-382747420,382747420,
MarcoFalke,2018-04-19T14:39:10Z,utACK 3c058fdcc8a71d17296973cb7f09e44a310df22e,https://github.com/bitcoin/bitcoin/pull/13017#issuecomment-382761532,382761532,
laanwj,2018-04-20T09:26:52Z,"ACK on adding wallet management functions.\n\n> The typedef CWalletRef is also removed as it is narrowly used.\n\n> If we're doing shared ptrs alal #11402, CWalletRef would be preferable to auto IMO. #11402 (comment)\n\nI think this part still needs discussion. `CWalletRef` was introduced very recently as a generalized handle for wallets, to be able to turn it into some kind of smart pointer",https://github.com/bitcoin/bitcoin/pull/13017#issuecomment-383040203,383040203,
promag,2018-04-20T09:55:51Z,"> I think this part still needs discussion. CWalletRef was introduced very recently\n\nIntroduced in #8694, ping @luke-jr.\n\n> Hardcoding CWallet* complicates that.\n\nSwitching to shared pointers is not a matter of just changing the typedef.\n\nAnyway, if the commit is controversial I prefer to remove it, request re-ACK and defer this discussion, it's really out of scope here.",https://github.com/bitcoin/bitcoin/pull/13017#issuecomment-383047551,383047551,
MarcoFalke,2018-04-20T16:24:45Z,"It has been used in 12 instances or so, so not something to have a huge discussion about, imo.",https://github.com/bitcoin/bitcoin/pull/13017#issuecomment-383149575,383149575,
luke-jr,2018-04-20T18:29:48Z,CWalletRef shouldn't be removed. It was specifically added to eventually become a shared_ptr when we have dynamic wallet loading/unloading.,https://github.com/bitcoin/bitcoin/pull/13017#issuecomment-383183543,383183543,
jnewbery,2018-04-20T18:42:31Z,"> CWalletRef shouldn't be removed. It was specifically added to eventually become a shared_ptr when we have dynamic wallet loading/unloading.\n\nThis PR doesn't make changing to shared pointers any more or less difficult.\n\n#10740 builds on this. Like @MarcoFalke says, this is only used in a very few places, so let's not hold up this PR for this.",https://github.com/bitcoin/bitcoin/pull/13017#issuecomment-383186977,383186977,
laanwj,2018-04-23T05:56:28Z,">  it's really out of scope here.\n\nYes, that's how I felt about that commit in the first place. Whether to have CWalletRef or not is not part of ""Add wallets management functions"". \nAnyhow, I'll merge this is if there is broad agreement. ",https://github.com/bitcoin/bitcoin/pull/13017#issuecomment-383462831,383462831,
Empact,2018-04-18T12:53:21Z,Do we want to provide guarantees that `GetWallets` returns no `nullptrs`? Could check here for that.,https://github.com/bitcoin/bitcoin/pull/13017#discussion_r182414488,182414488,src/wallet/wallet.cpp
promag,2018-04-18T13:01:14Z,Added assertions in `AddWallet` and `RemoveWallet`. Also added a check to prevent adding the same wallet (`RemoveWallet` already checks if wallet exists).,https://github.com/bitcoin/bitcoin/pull/13017#discussion_r182416848,182416848,src/wallet/wallet.cpp
jnewbery,2018-04-18T14:55:53Z,"This might be more correctly named `HasWallet()`, since it returns true if there's a single wallet",https://github.com/bitcoin/bitcoin/pull/13017#discussion_r182458025,182458025,src/wallet/wallet.h
promag,2018-04-18T16:19:27Z,Maybe `unsigned int CountWallets()` is preferable?,https://github.com/bitcoin/bitcoin/pull/13017#discussion_r182487310,182487310,src/wallet/wallet.h
jnewbery,2018-04-18T16:28:12Z,no need to overcomplicate it. `HasWallets()` is fine. I was just pointing out that the name could be a little bit more precise :slightly_smiling_face: ,https://github.com/bitcoin/bitcoin/pull/13017#discussion_r182489912,182489912,src/wallet/wallet.h
promag,2018-04-18T20:27:32Z,"Note to reviewers, I've switched these instructions. Inverted condition to throw the error.",https://github.com/bitcoin/bitcoin/pull/13017#discussion_r182558845,182558845,src/wallet/rpcwallet.cpp
kallewoof,2018-04-19T01:06:04Z,"Î¼Nit: Maybe you could add an\n```C++\ninline bool HasWallet(CWallet* wallet)\n{\n    assert(wallet);\n    return std::find(vpwallets.begin(), vpwallets.end(), wallet) != vpwallets.end();\n}\n```\nand use that here and below (also removing the assert in both places since it's done inline here).",https://github.com/bitcoin/bitcoin/pull/13017#discussion_r182610860,182610860,src/wallet/wallet.cpp
promag,2018-04-19T01:11:10Z,"Your suggestion ""conflicts"" with adding a critical section here (which will come next). If I do as you say then the lock will be recursive, something we want to avoid AFAICK. So I'd avoid calls between these functions.",https://github.com/bitcoin/bitcoin/pull/13017#discussion_r182611457,182611457,src/wallet/wallet.cpp
kallewoof,2018-04-19T01:16:47Z,"That's a pity, but no big deal.",https://github.com/bitcoin/bitcoin/pull/13017#discussion_r182612339,182612339,src/wallet/wallet.cpp
promag,2018-04-19T13:51:38Z,I can remove these whitespace change if that is controversial.,https://github.com/bitcoin/bitcoin/pull/13017#discussion_r182752694,182752694,src/wallet/wallet.h
jnewbery,2018-04-19T14:46:35Z,no - please don't invalidate reviewer ACKs unnecessarily,https://github.com/bitcoin/bitcoin/pull/13017#discussion_r182772586,182772586,src/wallet/wallet.h
