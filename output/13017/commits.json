[
  {
    "sha": "6efd9644cfe31168db1841010cffa64dfe604e67",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZWZkOTY0NGNmZTMxMTY4ZGIxODQxMDEwY2ZmYTY0ZGZlNjA0ZTY3",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-04-17T16:41:49Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-04-18T12:41:28Z"
      },
      "message": "refactor: Drop CWalletRef typedef",
      "tree": {
        "sha": "9f93e702513ace56eb40dbdfc8bf6176ad8b8050",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f93e702513ace56eb40dbdfc8bf6176ad8b8050"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6efd9644cfe31168db1841010cffa64dfe604e67",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6efd9644cfe31168db1841010cffa64dfe604e67",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6efd9644cfe31168db1841010cffa64dfe604e67",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6efd9644cfe31168db1841010cffa64dfe604e67/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "615f7c288414a89cd1dec1d67e0f84abe2fb4c6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/615f7c288414a89cd1dec1d67e0f84abe2fb4c6d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/615f7c288414a89cd1dec1d67e0f84abe2fb4c6d"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 12,
      "deletions": 13
    },
    "files": [
      {
        "sha": "6d49117de2de1cdbb0400dafe3a9d5e6340375f5",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6efd9644cfe31168db1841010cffa64dfe604e67/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6efd9644cfe31168db1841010cffa64dfe604e67/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=6efd9644cfe31168db1841010cffa64dfe604e67",
        "patch": "@@ -239,7 +239,7 @@ class NodeImpl : public Node\n     {\n #ifdef ENABLE_WALLET\n         std::vector<std::unique_ptr<Wallet>> wallets;\n-        for (CWalletRef wallet : ::vpwallets) {\n+        for (CWallet* wallet : ::vpwallets) {\n             wallets.emplace_back(MakeWallet(*wallet));\n         }\n         return wallets;"
      },
      {
        "sha": "860e1cfac36abdfcf368dc34770c6f57cf41d9ef",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6efd9644cfe31168db1841010cffa64dfe604e67/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6efd9644cfe31168db1841010cffa64dfe604e67/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=6efd9644cfe31168db1841010cffa64dfe604e67",
        "patch": "@@ -323,28 +323,28 @@ bool WalletInit::Open() const\n \n void WalletInit::Start(CScheduler& scheduler) const\n {\n-    for (CWalletRef pwallet : vpwallets) {\n+    for (CWallet* pwallet : vpwallets) {\n         pwallet->postInitProcess(scheduler);\n     }\n }\n \n void WalletInit::Flush() const\n {\n-    for (CWalletRef pwallet : vpwallets) {\n+    for (CWallet* pwallet : vpwallets) {\n         pwallet->Flush(false);\n     }\n }\n \n void WalletInit::Stop() const\n {\n-    for (CWalletRef pwallet : vpwallets) {\n+    for (CWallet* pwallet : vpwallets) {\n         pwallet->Flush(true);\n     }\n }\n \n void WalletInit::Close() const\n {\n-    for (CWalletRef pwallet : vpwallets) {\n+    for (CWallet* pwallet : vpwallets) {\n         delete pwallet;\n     }\n     vpwallets.clear();"
      },
      {
        "sha": "5298283b4b8f853d34b10566c89c086b263b204e",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6efd9644cfe31168db1841010cffa64dfe604e67/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6efd9644cfe31168db1841010cffa64dfe604e67/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=6efd9644cfe31168db1841010cffa64dfe604e67",
        "patch": "@@ -46,7 +46,7 @@ CWallet *GetWalletForJSONRPCRequest(const JSONRPCRequest& request)\n     if (request.URI.substr(0, WALLET_ENDPOINT_BASE.size()) == WALLET_ENDPOINT_BASE) {\n         // wallet endpoint was used\n         std::string requestedWallet = urlDecode(request.URI.substr(WALLET_ENDPOINT_BASE.size()));\n-        for (CWalletRef pwallet : ::vpwallets) {\n+        for (CWallet* pwallet : ::vpwallets) {\n             if (pwallet->GetName() == requestedWallet) {\n                 return pwallet;\n             }\n@@ -2862,7 +2862,7 @@ UniValue listwallets(const JSONRPCRequest& request)\n \n     UniValue obj(UniValue::VARR);\n \n-    for (CWalletRef pwallet : vpwallets) {\n+    for (CWallet* pwallet : vpwallets) {\n \n         if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n             return NullUniValue;"
      },
      {
        "sha": "dcf566c1e26350707652b9a0069cdb6f56d4c931",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6efd9644cfe31168db1841010cffa64dfe604e67/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6efd9644cfe31168db1841010cffa64dfe604e67/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=6efd9644cfe31168db1841010cffa64dfe604e67",
        "patch": "@@ -33,7 +33,7 @@\n \n #include <boost/algorithm/string/replace.hpp>\n \n-std::vector<CWalletRef> vpwallets;\n+std::vector<CWallet*> vpwallets;\n /** Transaction fee set by the user */\n CFeeRate payTxFee(DEFAULT_TRANSACTION_FEE);\n unsigned int nTxConfirmTarget = DEFAULT_TX_CONFIRM_TARGET;"
      },
      {
        "sha": "ceac4ac58cd77c2c3e158c2f2c5b122833350242",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6efd9644cfe31168db1841010cffa64dfe604e67/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6efd9644cfe31168db1841010cffa64dfe604e67/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=6efd9644cfe31168db1841010cffa64dfe604e67",
        "patch": "@@ -32,8 +32,7 @@\n #include <utility>\n #include <vector>\n \n-typedef CWallet* CWalletRef;\n-extern std::vector<CWalletRef> vpwallets;\n+extern std::vector<CWallet*> vpwallets;\n \n /**\n  * Settings\n@@ -1230,10 +1229,10 @@ std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key);\n class WalletRescanReserver\n {\n private:\n-    CWalletRef m_wallet;\n+    CWallet* m_wallet;\n     bool m_could_reserve;\n public:\n-    explicit WalletRescanReserver(CWalletRef w) : m_wallet(w), m_could_reserve(false) {}\n+    explicit WalletRescanReserver(CWallet* w) : m_wallet(w), m_could_reserve(false) {}\n \n     bool reserve()\n     {"
      },
      {
        "sha": "0e8a12ee97536c83110545d8f5d8ac3187f23e28",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6efd9644cfe31168db1841010cffa64dfe604e67/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6efd9644cfe31168db1841010cffa64dfe604e67/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=6efd9644cfe31168db1841010cffa64dfe604e67",
        "patch": "@@ -756,7 +756,7 @@ void MaybeCompactWalletDB()\n         return;\n     }\n \n-    for (CWalletRef pwallet : vpwallets) {\n+    for (CWallet* pwallet : vpwallets) {\n         WalletDatabase& dbh = pwallet->GetDBHandle();\n \n         unsigned int nUpdateCounter = dbh.nUpdateCounter;"
      }
    ]
  },
  {
    "sha": "373aee26c3df233f4e0a7e806f45ac7cb5aab1e6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNzNhZWUyNmMzZGYyMzNmNGUwYTdlODA2ZjQ1YWM3Y2I1YWFiMWU2",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-04-17T17:22:23Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-04-18T21:07:33Z"
      },
      "message": "wallet: Add AddWallet, RemoveWallet, GetWallet and GetWallets\n\nWith these new functions all vpwallets usage are removed\nand vpwallets is now a static variable (no external linkage).",
      "tree": {
        "sha": "9594af3ef3b909ff0c70bb73917785b460308d67",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9594af3ef3b909ff0c70bb73917785b460308d67"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6efd9644cfe31168db1841010cffa64dfe604e67",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6efd9644cfe31168db1841010cffa64dfe604e67",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6efd9644cfe31168db1841010cffa64dfe604e67"
      }
    ],
    "stats": {
      "total": 110,
      "additions": 72,
      "deletions": 38
    },
    "files": [
      {
        "sha": "c8ffca02ce7c7e67781af58fa9e44d4c7e81635c",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=373aee26c3df233f4e0a7e806f45ac7cb5aab1e6",
        "patch": "@@ -239,7 +239,7 @@ class NodeImpl : public Node\n     {\n #ifdef ENABLE_WALLET\n         std::vector<std::unique_ptr<Wallet>> wallets;\n-        for (CWallet* wallet : ::vpwallets) {\n+        for (CWallet* wallet : GetWallets()) {\n             wallets.emplace_back(MakeWallet(*wallet));\n         }\n         return wallets;"
      },
      {
        "sha": "56d2d3819481e429034b89ab3b0559dc45451812",
        "filename": "src/qt/test/wallettests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6/src/qt/test/wallettests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6/src/qt/test/wallettests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/wallettests.cpp?ref=373aee26c3df233f4e0a7e806f45ac7cb5aab1e6",
        "patch": "@@ -180,9 +180,9 @@ void TestGUI()\n     TransactionView transactionView(platformStyle.get());\n     auto node = interfaces::MakeNode();\n     OptionsModel optionsModel(*node);\n-    vpwallets.insert(vpwallets.begin(), &wallet);\n-    WalletModel walletModel(std::move(node->getWallets()[0]), *node, platformStyle.get(), &optionsModel);\n-    vpwallets.erase(vpwallets.begin());\n+    AddWallet(&wallet);\n+    WalletModel walletModel(std::move(node->getWallets().back()), *node, platformStyle.get(), &optionsModel);\n+    RemoveWallet(&wallet);\n     sendCoinsDialog.setModel(&walletModel);\n     transactionView.setModel(&walletModel);\n "
      },
      {
        "sha": "ba3ea705577e80c9609c4e66534578a37ebaf4bb",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=373aee26c3df233f4e0a7e806f45ac7cb5aab1e6",
        "patch": "@@ -69,7 +69,7 @@ UniValue validateaddress(const JSONRPCRequest& request)\n     {\n \n #ifdef ENABLE_WALLET\n-        if (!::vpwallets.empty() && IsDeprecatedRPCEnabled(\"validateaddress\")) {\n+        if (!GetWallets().empty() && IsDeprecatedRPCEnabled(\"validateaddress\")) {\n             ret.pushKVs(getaddressinfo(request));\n         }\n #endif"
      },
      {
        "sha": "8b834e462670e6f18cfa8eb1ad122ccbb9ce440e",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=373aee26c3df233f4e0a7e806f45ac7cb5aab1e6",
        "patch": "@@ -315,37 +315,37 @@ bool WalletInit::Open() const\n         if (!pwallet) {\n             return false;\n         }\n-        vpwallets.push_back(pwallet);\n+        AddWallet(pwallet);\n     }\n \n     return true;\n }\n \n void WalletInit::Start(CScheduler& scheduler) const\n {\n-    for (CWallet* pwallet : vpwallets) {\n+    for (CWallet* pwallet : GetWallets()) {\n         pwallet->postInitProcess(scheduler);\n     }\n }\n \n void WalletInit::Flush() const\n {\n-    for (CWallet* pwallet : vpwallets) {\n+    for (CWallet* pwallet : GetWallets()) {\n         pwallet->Flush(false);\n     }\n }\n \n void WalletInit::Stop() const\n {\n-    for (CWallet* pwallet : vpwallets) {\n+    for (CWallet* pwallet : GetWallets()) {\n         pwallet->Flush(true);\n     }\n }\n \n void WalletInit::Close() const\n {\n-    for (CWallet* pwallet : vpwallets) {\n+    for (CWallet* pwallet : GetWallets()) {\n+        RemoveWallet(pwallet);\n         delete pwallet;\n     }\n-    vpwallets.clear();\n }"
      },
      {
        "sha": "9875a2697dde4b4115fd61ead1aaf47491406d53",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 10,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=373aee26c3df233f4e0a7e806f45ac7cb5aab1e6",
        "patch": "@@ -46,14 +46,13 @@ CWallet *GetWalletForJSONRPCRequest(const JSONRPCRequest& request)\n     if (request.URI.substr(0, WALLET_ENDPOINT_BASE.size()) == WALLET_ENDPOINT_BASE) {\n         // wallet endpoint was used\n         std::string requestedWallet = urlDecode(request.URI.substr(WALLET_ENDPOINT_BASE.size()));\n-        for (CWallet* pwallet : ::vpwallets) {\n-            if (pwallet->GetName() == requestedWallet) {\n-                return pwallet;\n-            }\n-        }\n-        throw JSONRPCError(RPC_WALLET_NOT_FOUND, \"Requested wallet does not exist or is not loaded\");\n+        CWallet* pwallet = GetWallet(requestedWallet);\n+        if (!pwallet) throw JSONRPCError(RPC_WALLET_NOT_FOUND, \"Requested wallet does not exist or is not loaded\");\n+        return pwallet;\n     }\n-    return ::vpwallets.size() == 1 || (request.fHelp && ::vpwallets.size() > 0) ? ::vpwallets[0] : nullptr;\n+\n+    std::vector<CWallet*> wallets = GetWallets();\n+    return wallets.size() == 1 || (request.fHelp && wallets.size() > 0) ? wallets[0] : nullptr;\n }\n \n std::string HelpRequiringPassphrase(CWallet * const pwallet)\n@@ -67,7 +66,7 @@ bool EnsureWalletIsAvailable(CWallet * const pwallet, bool avoidException)\n {\n     if (pwallet) return true;\n     if (avoidException) return false;\n-    if (::vpwallets.empty()) {\n+    if (GetWallets().empty()) {\n         // Note: It isn't currently possible to trigger this error because\n         // wallet RPC methods aren't registered unless a wallet is loaded. But\n         // this error is being kept as a precaution, because it's possible in\n@@ -2862,8 +2861,7 @@ UniValue listwallets(const JSONRPCRequest& request)\n \n     UniValue obj(UniValue::VARR);\n \n-    for (CWallet* pwallet : vpwallets) {\n-\n+    for (CWallet* pwallet : GetWallets()) {\n         if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n             return NullUniValue;\n         }"
      },
      {
        "sha": "99c963a34894ad9851b5cb6aa2a3b98ef56d2ae5",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=373aee26c3df233f4e0a7e806f45ac7cb5aab1e6",
        "patch": "@@ -74,7 +74,7 @@ BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n     // after.\n     {\n         CWallet wallet(\"dummy\", WalletDatabase::CreateDummy());\n-        vpwallets.insert(vpwallets.begin(), &wallet);\n+        AddWallet(&wallet);\n         UniValue keys;\n         keys.setArray();\n         UniValue key;\n@@ -105,7 +105,7 @@ BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n                       \"downloading and rescanning the relevant blocks (see -reindex and -rescan \"\n                       \"options).\\\"}},{\\\"success\\\":true}]\",\n                               0, oldTip->GetBlockTimeMax(), TIMESTAMP_WINDOW));\n-        vpwallets.erase(vpwallets.begin());\n+        RemoveWallet(&wallet);\n     }\n }\n \n@@ -140,9 +140,9 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n         JSONRPCRequest request;\n         request.params.setArray();\n         request.params.push_back((pathTemp / \"wallet.backup\").string());\n-        vpwallets.insert(vpwallets.begin(), &wallet);\n+        AddWallet(&wallet);\n         ::dumpwallet(request);\n-        vpwallets.erase(vpwallets.begin());\n+        RemoveWallet(&wallet);\n     }\n \n     // Call importwallet RPC and verify all blocks with timestamps >= BLOCK_TIME\n@@ -153,9 +153,9 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n         JSONRPCRequest request;\n         request.params.setArray();\n         request.params.push_back((pathTemp / \"wallet.backup\").string());\n-        vpwallets.insert(vpwallets.begin(), &wallet);\n+        AddWallet(&wallet);\n         ::importwallet(request);\n-        vpwallets.erase(vpwallets.begin());\n+        RemoveWallet(&wallet);\n \n         LOCK(wallet.cs_wallet);\n         BOOST_CHECK_EQUAL(wallet.mapWallet.size(), 3U);"
      },
      {
        "sha": "fcc4cfb1fac1144997947293d369c74d0ac6baa7",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 34,
        "deletions": 1,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=373aee26c3df233f4e0a7e806f45ac7cb5aab1e6",
        "patch": "@@ -28,12 +28,45 @@\n #include <utilmoneystr.h>\n #include <wallet/fees.h>\n \n+#include <algorithm>\n #include <assert.h>\n #include <future>\n \n #include <boost/algorithm/string/replace.hpp>\n \n-std::vector<CWallet*> vpwallets;\n+static std::vector<CWallet*> vpwallets;\n+\n+bool AddWallet(CWallet* wallet)\n+{\n+    assert(wallet);\n+    std::vector<CWallet*>::const_iterator i = std::find(vpwallets.begin(), vpwallets.end(), wallet);\n+    if (i != vpwallets.end()) return false;\n+    vpwallets.push_back(wallet);\n+    return true;\n+}\n+\n+bool RemoveWallet(CWallet* wallet)\n+{\n+    assert(wallet);\n+    std::vector<CWallet*>::iterator i = std::find(vpwallets.begin(), vpwallets.end(), wallet);\n+    if (i == vpwallets.end()) return false;\n+    vpwallets.erase(i);\n+    return true;\n+}\n+\n+std::vector<CWallet*> GetWallets()\n+{\n+    return vpwallets;\n+}\n+\n+CWallet* GetWallet(const std::string& name)\n+{\n+    for (CWallet* wallet : vpwallets) {\n+        if (wallet->GetName() == name) return wallet;\n+    }\n+    return nullptr;\n+}\n+\n /** Transaction fee set by the user */\n CFeeRate payTxFee(DEFAULT_TRANSACTION_FEE);\n unsigned int nTxConfirmTarget = DEFAULT_TX_CONFIRM_TARGET;"
      },
      {
        "sha": "67f0b3adb7a3112420c516f11ea026108cfac4e3",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 12,
        "deletions": 9,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=373aee26c3df233f4e0a7e806f45ac7cb5aab1e6",
        "patch": "@@ -32,7 +32,10 @@\n #include <utility>\n #include <vector>\n \n-extern std::vector<CWallet*> vpwallets;\n+bool AddWallet(CWallet* wallet);\n+bool RemoveWallet(CWallet* wallet);\n+std::vector<CWallet*> GetWallets();\n+CWallet* GetWallet(const std::string& name);\n \n /**\n  * Settings\n@@ -267,7 +270,7 @@ class CMerkleTx\n //Get the marginal bytes of spending the specified output\n int CalculateMaximumSignedInputSize(const CTxOut& txout, const CWallet* pwallet);\n \n-/** \n+/**\n  * A transaction with a bunch of additional info that only the owner cares about.\n  * It includes any unrecorded transactions needed to link it back to the block chain.\n  */\n@@ -652,7 +655,7 @@ struct CoinEligibilityFilter\n };\n \n class WalletRescanReserver; //forward declarations for ScanForWalletTransactions/RescanFromTime\n-/** \n+/**\n  * A CWallet is an extension of a keystore, which also maintains a set of transactions and balances,\n  * and provides the ability to create new transactions.\n  */\n@@ -902,7 +905,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     void GetKeyBirthTimes(std::map<CTxDestination, int64_t> &mapKeyBirth) const;\n     unsigned int ComputeTimeSmart(const CWalletTx& wtx) const;\n \n-    /** \n+    /**\n      * Increment the next transaction order id\n      * @return next transaction order id\n      */\n@@ -1031,7 +1034,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     }\n \n     void GetScriptForMining(std::shared_ptr<CReserveScript> &script);\n-    \n+\n     unsigned int GetKeyPoolSize()\n     {\n         AssertLockHeld(cs_wallet); // set{Ex,In}ternalKeyPool\n@@ -1056,7 +1059,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     //! Flush wallet (bitdb flush)\n     void Flush(bool shutdown=false);\n \n-    /** \n+    /**\n      * Address book entry changed.\n      * @note called with lock cs_wallet held.\n      */\n@@ -1065,7 +1068,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n             const std::string &purpose,\n             ChangeType status)> NotifyAddressBookChanged;\n \n-    /** \n+    /**\n      * Wallet transaction added, removed or updated.\n      * @note called with lock cs_wallet held.\n      */\n@@ -1112,7 +1115,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n \n     /* Generates a new HD master key (will not be activated) */\n     CPubKey GenerateNewHDMasterKey();\n-    \n+\n     /* Set the current HD master key (will reset the chain child index counters)\n        Sets the master key's version based on the current wallet version (so the\n        caller must ensure the current wallet version is correct before calling\n@@ -1183,7 +1186,7 @@ class CReserveKey final : public CReserveScript\n };\n \n \n-/** \n+/**\n  * DEPRECATED Account information.\n  * Stored in wallet with key \"acc\"+string account name.\n  */"
      },
      {
        "sha": "5b275131af432f3c042f57c3082ec6117808f9f3",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=373aee26c3df233f4e0a7e806f45ac7cb5aab1e6",
        "patch": "@@ -756,7 +756,7 @@ void MaybeCompactWalletDB()\n         return;\n     }\n \n-    for (CWallet* pwallet : vpwallets) {\n+    for (CWallet* pwallet : GetWallets()) {\n         WalletDatabase& dbh = pwallet->GetDBHandle();\n \n         unsigned int nUpdateCounter = dbh.nUpdateCounter;"
      }
    ]
  },
  {
    "sha": "3c058fdcc8a71d17296973cb7f09e44a310df22e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYzA1OGZkY2M4YTcxZDE3Mjk2OTczY2I3ZjA5ZTQ0YTMxMGRmMjJl",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-04-18T12:46:11Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-04-18T21:07:58Z"
      },
      "message": "wallet: Add HasWallets",
      "tree": {
        "sha": "8897fab95f0c2b94503305bef537cf412642ac18",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8897fab95f0c2b94503305bef537cf412642ac18"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c058fdcc8a71d17296973cb7f09e44a310df22e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c058fdcc8a71d17296973cb7f09e44a310df22e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3c058fdcc8a71d17296973cb7f09e44a310df22e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c058fdcc8a71d17296973cb7f09e44a310df22e/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "373aee26c3df233f4e0a7e806f45ac7cb5aab1e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/373aee26c3df233f4e0a7e806f45ac7cb5aab1e6"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 8,
      "deletions": 2
    },
    "files": [
      {
        "sha": "6754407dbdb666a919d916dee61e284cf37fae58",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c058fdcc8a71d17296973cb7f09e44a310df22e/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c058fdcc8a71d17296973cb7f09e44a310df22e/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=3c058fdcc8a71d17296973cb7f09e44a310df22e",
        "patch": "@@ -69,7 +69,7 @@ UniValue validateaddress(const JSONRPCRequest& request)\n     {\n \n #ifdef ENABLE_WALLET\n-        if (!GetWallets().empty() && IsDeprecatedRPCEnabled(\"validateaddress\")) {\n+        if (HasWallets() && IsDeprecatedRPCEnabled(\"validateaddress\")) {\n             ret.pushKVs(getaddressinfo(request));\n         }\n #endif"
      },
      {
        "sha": "9b5fb0b062d1c00ced32f2bb8f94793e8de96834",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c058fdcc8a71d17296973cb7f09e44a310df22e/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c058fdcc8a71d17296973cb7f09e44a310df22e/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=3c058fdcc8a71d17296973cb7f09e44a310df22e",
        "patch": "@@ -66,7 +66,7 @@ bool EnsureWalletIsAvailable(CWallet * const pwallet, bool avoidException)\n {\n     if (pwallet) return true;\n     if (avoidException) return false;\n-    if (GetWallets().empty()) {\n+    if (!HasWallets()) {\n         // Note: It isn't currently possible to trigger this error because\n         // wallet RPC methods aren't registered unless a wallet is loaded. But\n         // this error is being kept as a precaution, because it's possible in"
      },
      {
        "sha": "8c392434fce949c9d39f07a30dc4c1cc45693580",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c058fdcc8a71d17296973cb7f09e44a310df22e/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c058fdcc8a71d17296973cb7f09e44a310df22e/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=3c058fdcc8a71d17296973cb7f09e44a310df22e",
        "patch": "@@ -54,6 +54,11 @@ bool RemoveWallet(CWallet* wallet)\n     return true;\n }\n \n+bool HasWallets()\n+{\n+    return !vpwallets.empty();\n+}\n+\n std::vector<CWallet*> GetWallets()\n {\n     return vpwallets;"
      },
      {
        "sha": "dd165de825b94dda257a408732937c2522e14b93",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c058fdcc8a71d17296973cb7f09e44a310df22e/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c058fdcc8a71d17296973cb7f09e44a310df22e/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=3c058fdcc8a71d17296973cb7f09e44a310df22e",
        "patch": "@@ -34,6 +34,7 @@\n \n bool AddWallet(CWallet* wallet);\n bool RemoveWallet(CWallet* wallet);\n+bool HasWallets();\n std::vector<CWallet*> GetWallets();\n CWallet* GetWallet(const std::string& name);\n "
      }
    ]
  }
]