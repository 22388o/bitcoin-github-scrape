[
  {
    "sha": "722e95c85af285f16798ff8aa28da1ee733915fe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjJlOTVjODVhZjI4NWYxNjc5OGZmOGFhMjhkYTFlZTczMzkxNWZl",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-06-04T19:02:47Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-06-04T19:35:31Z"
      },
      "message": "Use parentheses to clarify intended precedence when using bitwise operations",
      "tree": {
        "sha": "8536ec8757c6f8df6783759826715fbe7662000e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8536ec8757c6f8df6783759826715fbe7662000e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/722e95c85af285f16798ff8aa28da1ee733915fe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/722e95c85af285f16798ff8aa28da1ee733915fe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/722e95c85af285f16798ff8aa28da1ee733915fe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/722e95c85af285f16798ff8aa28da1ee733915fe/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "329fc1dce7a1c372c8b10c2f2f8732b2c60daff0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/329fc1dce7a1c372c8b10c2f2f8732b2c60daff0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/329fc1dce7a1c372c8b10c2f2f8732b2c60daff0"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "05b99203613e2c5efa6ab9f8ec8bfc956261fe26",
        "filename": "src/crypto/aes.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/722e95c85af285f16798ff8aa28da1ee733915fe/src/crypto/aes.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/722e95c85af285f16798ff8aa28da1ee733915fe/src/crypto/aes.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/aes.cpp?ref=722e95c85af285f16798ff8aa28da1ee733915fe",
        "patch": "@@ -137,7 +137,7 @@ static int CBCDecrypt(const T& dec, const unsigned char iv[AES_BLOCKSIZE], const\n         // If used, padding size is the value of the last decrypted byte. For\n         // it to be valid, It must be between 1 and AES_BLOCKSIZE.\n         padsize = *--out;\n-        fail = !padsize | (padsize > AES_BLOCKSIZE);\n+        fail = (!padsize) | (padsize > AES_BLOCKSIZE);\n \n         // If not well-formed, treat it as though there's no padding.\n         padsize *= !fail;"
      },
      {
        "sha": "d993c30a415b7028fcb5db6e6aa9a7aa539d6b38",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/722e95c85af285f16798ff8aa28da1ee733915fe/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/722e95c85af285f16798ff8aa28da1ee733915fe/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=722e95c85af285f16798ff8aa28da1ee733915fe",
        "patch": "@@ -307,8 +307,8 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, TransactionReco\n                         strHTML += QString::fromStdString(CBitcoinAddress(address).ToString());\n                     }\n                     strHTML = strHTML + \" \" + tr(\"Amount\") + \"=\" + BitcoinUnits::formatHtmlWithUnit(unit, vout.nValue);\n-                    strHTML = strHTML + \" IsMine=\" + (wallet->IsMine(vout) & ISMINE_SPENDABLE ? tr(\"true\") : tr(\"false\")) + \"</li>\";\n-                    strHTML = strHTML + \" IsWatchOnly=\" + (wallet->IsMine(vout) & ISMINE_WATCH_ONLY ? tr(\"true\") : tr(\"false\")) + \"</li>\";\n+                    strHTML = strHTML + \" IsMine=\" + ((wallet->IsMine(vout) & ISMINE_SPENDABLE) ? tr(\"true\") : tr(\"false\")) + \"</li>\";\n+                    strHTML = strHTML + \" IsWatchOnly=\" + ((wallet->IsMine(vout) & ISMINE_WATCH_ONLY) ? tr(\"true\") : tr(\"false\")) + \"</li>\";\n                 }\n             }\n         }"
      }
    ]
  }
]