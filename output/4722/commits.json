[
  {
    "sha": "fdc6765b30b7d5127e2f45891dd670fd155daec4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZGM2NzY1YjMwYjdkNTEyN2UyZjQ1ODkxZGQ2NzBmZDE1NWRhZWM0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-08-18T12:01:06Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-08-18T12:01:06Z"
      },
      "message": "Revert \"build: add option for reducing exports\"\n\nThis reverts commit 4975ae1722cd8af63eda2f02ef64a98091b6fb58.\n\nConflicts:\n\tconfigure.ac",
      "tree": {
        "sha": "4bbc4d02e296bdcc9593446a9242f2202dc95d35",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4bbc4d02e296bdcc9593446a9242f2202dc95d35"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fdc6765b30b7d5127e2f45891dd670fd155daec4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fdc6765b30b7d5127e2f45891dd670fd155daec4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fdc6765b30b7d5127e2f45891dd670fd155daec4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fdc6765b30b7d5127e2f45891dd670fd155daec4/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "04d6c7d10cf66e134ed7e112127c060f78ea620a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04d6c7d10cf66e134ed7e112127c060f78ea620a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/04d6c7d10cf66e134ed7e112127c060f78ea620a"
      }
    ],
    "stats": {
      "total": 85,
      "additions": 2,
      "deletions": 83
    },
    "files": [
      {
        "sha": "7db6ebac0e069a0b452dace660600c106531cf4d",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 0,
        "deletions": 77,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fdc6765b30b7d5127e2f45891dd670fd155daec4/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fdc6765b30b7d5127e2f45891dd670fd155daec4/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=fdc6765b30b7d5127e2f45891dd670fd155daec4",
        "patch": "@@ -90,12 +90,6 @@ AC_ARG_ENABLE([hardening],\n   [use_hardening=$enableval],\n   [use_hardening=yes])\n \n-AC_ARG_ENABLE([reduce-exports],\n-  [AS_HELP_STRING([--enable-reduce-exports],\n-  [attempt to reduce exported symbols in the resulting executables (default is yes)])],\n-  [use_reduce_exports=$enableval],\n-  [use_reduce_exports=auto])\n-\n AC_ARG_ENABLE([ccache],\n   [AS_HELP_STRING([--enable-ccache],\n   [use ccache for building (default is yes if ccache is found)])],\n@@ -402,40 +396,6 @@ AC_TRY_COMPILE([#include <sys/socket.h>],\n \n AC_SEARCH_LIBS([clock_gettime],[rt])\n \n-AC_MSG_CHECKING([for visibility attribute])\n-AC_LINK_IFELSE([AC_LANG_SOURCE([\n-  int foo_def( void ) __attribute__((visibility(\"default\")));\n-  int main(){}\n-  ])],\n-  [\n-    AC_DEFINE(HAVE_VISIBILITY_ATTRIBUTE,1,[Define if the visibility attribute is supported.])\n-    AC_MSG_RESULT(yes)\n-  ],\n-  [\n-    AC_MSG_RESULT(no)\n-    if test x$use_reduce_exports = xyes; then\n-      AC_MSG_ERROR([Cannot find a working visibility attribute. Use --disable-reduced-exports.])\n-    fi\n-      AC_MSG_WARN([Cannot find a working visibility attribute. Disabling reduced exports.])\n-      use_reduce_exports=no\n-  ]\n-)\n-\n-if test x$use_reduce_exports != xno; then\n-  AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n-  [\n-    if test x$use_reduce_exports = xyes; then\n-      AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduced-exports.])\n-    fi\n-    AC_MSG_WARN([Cannot set default symbol visibility. Disabling reduced exports.])\n-    use_reduce_exports=no\n-  ])\n-  if test x$use_reduce_exports != xno; then\n-    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"])\n-    CXXFLAGS=\"$CXXFLAGS $RE_CXXFLAGS\"\n-  fi\n-fi\n-\n LEVELDB_CPPFLAGS=\n LIBLEVELDB=\n LIBMEMENV=\n@@ -460,35 +420,6 @@ fi\n \n dnl Check for boost libs\n AX_BOOST_BASE\n-\n-if test x$use_reduce_exports != xno; then\n-  AC_MSG_CHECKING([for working boost reduced exports])\n-  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-  CPPFLAGS=\"$BOOST_CPPFLAGS $CPPFLAGS\"\n-  AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[\n-      @%:@include <boost/version.hpp>\n-    ]], [[\n-      #if BOOST_VERSION >= 104900\n-      // Everything is okay\n-      #else\n-      #  error Boost version is too old\n-      #endif\n-    ]])],[\n-      AC_MSG_RESULT(yes)\n-    ],[:\n-    if test x$use_reduce_exports = xauto; then\n-      use_reduce_exports=no\n-    else\n-      if test x$use_reduce_exports = xyes; then\n-        AC_MSG_ERROR([boost versions < 1.49 are known to be broken with reduced exports. Use --disable-reduced-exports.])\n-      fi\n-    fi\n-    AC_MSG_RESULT(no)\n-    AC_MSG_WARN([boost versions < 1.49 are known to have symbol visibility issues. Disabling reduced exports.])\n-  ])\n-  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-fi\n-\n AX_BOOST_SYSTEM\n AX_BOOST_FILESYSTEM\n AX_BOOST_PROGRAM_OPTIONS\n@@ -741,13 +672,6 @@ else\n   AC_MSG_RESULT([no])\n fi\n \n-AC_MSG_CHECKING([whether to reduce exports])\n-if test x$use_reduce_exports != xno; then\n-  AC_MSG_RESULT([yes])\n-else\n-  AC_MSG_RESULT([no])\n-fi\n-\n if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests = xnononono; then\n   AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-daemon --with-gui or --enable-tests])\n fi\n@@ -780,7 +704,6 @@ AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n \n \n-AC_SUBST(RELDFLAGS)\n AC_SUBST(LIBTOOL_LDFLAGS)\n AC_SUBST(USE_UPNP)\n AC_SUBST(USE_QRCODE)"
      },
      {
        "sha": "6292b5d61335e6e7453fd49305d74a904a340a0a",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fdc6765b30b7d5127e2f45891dd670fd155daec4/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fdc6765b30b7d5127e2f45891dd670fd155daec4/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=fdc6765b30b7d5127e2f45891dd670fd155daec4",
        "patch": "@@ -261,7 +261,6 @@ endif\n \n bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS)\n bitcoind_CPPFLAGS = $(BITCOIN_INCLUDES)\n-bitcoind_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS)\n \n # bitcoin-cli binary #\n bitcoin_cli_LDADD = \\\n@@ -299,12 +298,10 @@ endif\n bitcoin_tx_SOURCES = bitcoin-tx.cpp\n bitcoin_tx_CPPFLAGS = $(BITCOIN_INCLUDES)\n #\n-bitcoin_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS)\n \n if TARGET_WINDOWS\n bitcoin_cli_SOURCES += bitcoin-cli-res.rc\n endif\n-bitcoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS)\n \n CLEANFILES = leveldb/libleveldb.a leveldb/libmemenv.a *.gcda *.gcno\n "
      },
      {
        "sha": "9a333d5c76bc568b8cfda7246fe537c5d5810efe",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fdc6765b30b7d5127e2f45891dd670fd155daec4/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fdc6765b30b7d5127e2f45891dd670fd155daec4/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=fdc6765b30b7d5127e2f45891dd670fd155daec4",
        "patch": "@@ -362,7 +362,7 @@ qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL)\n if USE_LIBSECP256K1\n   qt_bitcoin_qt_LDADD += secp256k1/libsecp256k1.la\n endif\n-qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS)\n+qt_bitcoin_qt_LDFLAGS = $(AM_LDFLAGS) $(QT_LDFLAGS)\n \n #locale/foo.ts -> locale/foo.qm\n QT_QM=$(QT_TS:.ts=.qm)"
      },
      {
        "sha": "ee8edb994e1dfbe13ec3682f3dde4c6d0a9d43a4",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fdc6765b30b7d5127e2f45891dd670fd155daec4/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fdc6765b30b7d5127e2f45891dd670fd155daec4/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=fdc6765b30b7d5127e2f45891dd670fd155daec4",
        "patch": "@@ -36,7 +36,7 @@ qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBIT\n if USE_LIBSECP256K1\n   qt_test_test_bitcoin_qt_LDADD += secp256k1/libsecp256k1.la\n endif\n-qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS)\n+qt_test_test_bitcoin_qt_LDFLAGS = $(AM_LDFLAGS) $(QT_LDFLAGS)\n \n CLEAN_BITCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno\n "
      },
      {
        "sha": "b5fee082237f8ec7c3046e967569400300ebdcc3",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fdc6765b30b7d5127e2f45891dd670fd155daec4/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fdc6765b30b7d5127e2f45891dd670fd155daec4/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=fdc6765b30b7d5127e2f45891dd670fd155daec4",
        "patch": "@@ -75,7 +75,6 @@ if USE_LIBSECP256K1\n endif\n \n test_test_bitcoin_LDADD += $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS)\n-test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS)\n \n nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)\n "
      }
    ]
  }
]