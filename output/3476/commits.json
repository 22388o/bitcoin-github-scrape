[
  {
    "sha": "ba935ec9541c00bb0236932e2fb2089ee5e76219",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYTkzNWVjOTU0MWMwMGJiMDIzNjkzMmUyZmIyMDg5ZWU1ZTc2MjE5",
    "commit": {
      "author": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2013-12-30T07:57:10Z"
      },
      "committer": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2013-12-30T07:59:14Z"
      },
      "message": "Added ability to set config parameters through environment variables\n\nThe environment is parsed for variables starting with BITCOIN_, and\nthe remaining portion of the name becomes the argument name, with\nthe value set to the portion after the = sign, e.g.,\n\nBITCOIN_DATADIR=FOO is equivalent to -datadir=FOO\n\nThe environment is parsed before the command line, allowing the\ncommand line to take precedence over the environment.\n\nThere is a whitelist in util.cpp that only allows specified environment\nvariables to be used this way; currently, this is set to just -datadir\nand -conf.\n\nSigned-off-by: Johnathan Corgan <johnathan@corganlabs.com>",
      "tree": {
        "sha": "df6797b0de8a279d3634942409605ba7b8f1de3f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df6797b0de8a279d3634942409605ba7b8f1de3f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba935ec9541c00bb0236932e2fb2089ee5e76219",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba935ec9541c00bb0236932e2fb2089ee5e76219",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ba935ec9541c00bb0236932e2fb2089ee5e76219",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba935ec9541c00bb0236932e2fb2089ee5e76219/comments",
    "author": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e7792003b5c520fcc81d223f07471d690594081",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e7792003b5c520fcc81d223f07471d690594081",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e7792003b5c520fcc81d223f07471d690594081"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 55,
      "deletions": 2
    },
    "files": [
      {
        "sha": "ff6a9c2f929ae720904efcc661aa0c9a6d32e53f",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba935ec9541c00bb0236932e2fb2089ee5e76219/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba935ec9541c00bb0236932e2fb2089ee5e76219/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=ba935ec9541c00bb0236932e2fb2089ee5e76219",
        "patch": "@@ -20,6 +20,8 @@ static bool AppInitRPC(int argc, char* argv[])\n     //\n     // Parameters\n     //\n+    ClearArgs();\n+    ParseEnvironment();\n     ParseParameters(argc, argv);\n     if (!boost::filesystem::is_directory(GetDataDir(false)))\n     {"
      },
      {
        "sha": "c7f2b788344d2c9c0d9984576ccab1cbb8073bde",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba935ec9541c00bb0236932e2fb2089ee5e76219/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba935ec9541c00bb0236932e2fb2089ee5e76219/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=ba935ec9541c00bb0236932e2fb2089ee5e76219",
        "patch": "@@ -62,7 +62,9 @@ bool AppInit(int argc, char* argv[])\n         // Parameters\n         //\n         // If Qt is used, parameters/bitcoin.conf are parsed in qt/bitcoin.cpp's main()\n-        ParseParameters(argc, argv);\n+        ClearArgs();\n+\tParseEnvironment();\n+\tParseParameters(argc, argv);\n         if (!boost::filesystem::is_directory(GetDataDir(false)))\n         {\n             fprintf(stderr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", mapArgs[\"-datadir\"].c_str());"
      },
      {
        "sha": "068b673053c1256ac970ebc8ab121033ac392b96",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba935ec9541c00bb0236932e2fb2089ee5e76219/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba935ec9541c00bb0236932e2fb2089ee5e76219/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=ba935ec9541c00bb0236932e2fb2089ee5e76219",
        "patch": "@@ -165,6 +165,8 @@ int main(int argc, char *argv[])\n     bool fSelParFromCLFailed = false;\n \n     // Command-line options take precedence:\n+    ClearArgs();\n+    ParseEnvironment();\n     ParseParameters(argc, argv);\n     // ... then bitcoin.conf:\n     if (!boost::filesystem::is_directory(GetDataDir(false))) {"
      },
      {
        "sha": "49a811a70a6765d3d460d703bbdee114dd2822d1",
        "filename": "src/test/getarg_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba935ec9541c00bb0236932e2fb2089ee5e76219/src/test/getarg_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba935ec9541c00bb0236932e2fb2089ee5e76219/src/test/getarg_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/getarg_tests.cpp?ref=ba935ec9541c00bb0236932e2fb2089ee5e76219",
        "patch": "@@ -24,6 +24,7 @@ static void ResetArgs(const std::string& strArg)\n     BOOST_FOREACH(std::string& s, vecArg)\n         vecChar.push_back(s.c_str());\n \n+    ClearArgs();\n     ParseParameters(vecChar.size(), &vecChar[0]);\n }\n "
      },
      {
        "sha": "8d1a77b7c626a7246fbd239d02b540d2cf8deafa",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba935ec9541c00bb0236932e2fb2089ee5e76219/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba935ec9541c00bb0236932e2fb2089ee5e76219/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=ba935ec9541c00bb0236932e2fb2089ee5e76219",
        "patch": "@@ -117,12 +117,15 @@ BOOST_AUTO_TEST_CASE(util_ParseParameters)\n {\n     const char *argv_test[] = {\"-ignored\", \"-a\", \"-b\", \"-ccc=argument\", \"-ccc=multiple\", \"f\", \"-d=e\"};\n \n+    ClearArgs();\n     ParseParameters(0, (char**)argv_test);\n     BOOST_CHECK(mapArgs.empty() && mapMultiArgs.empty());\n \n+    ClearArgs();\n     ParseParameters(1, (char**)argv_test);\n     BOOST_CHECK(mapArgs.empty() && mapMultiArgs.empty());\n \n+    ClearArgs();\n     ParseParameters(5, (char**)argv_test);\n     // expectation: -ignored is ignored (program name argument),\n     // -a, -b and -ccc end up in map, -d ignored because it is after"
      },
      {
        "sha": "d3df9b274ee320ae4ebb0098777ed21333b23ca3",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 1,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba935ec9541c00bb0236932e2fb2089ee5e76219/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba935ec9541c00bb0236932e2fb2089ee5e76219/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=ba935ec9541c00bb0236932e2fb2089ee5e76219",
        "patch": "@@ -533,10 +533,50 @@ static void InterpretNegativeSetting(string name, map<string, string>& mapSettin\n     }\n }\n \n-void ParseParameters(int argc, const char* const argv[])\n+void ClearArgs()\n {\n     mapArgs.clear();\n     mapMultiArgs.clear();\n+}\n+\n+// Can combine these into one with C++0x\n+static const string envNames[] = {\n+    \"-datadir\",\n+    \"-conf\"\n+};\n+static const set<string> envWhitelist(envNames, envNames+sizeof(envNames)/sizeof(envNames[0]));\n+\n+void ParseEnvironment()\n+{\n+    int i = 0;\n+    while (environ[i] != NULL && strlen(environ[i]) > 0) {\n+\n+        string str(environ[i]);\n+\tstring strName;\n+        string strValue;\n+\n+        if (boost::algorithm::starts_with(str, \"BITCOIN_\")) {\n+\n+\t    size_t und_index = str.find('_');\n+\t    size_t is_index = str.find('=');\n+\n+\t    strName = \"-\" + str.substr(und_index+1, is_index-und_index-1);\n+\t    boost::to_lower(strName);\n+\t    strValue = str.substr(is_index+1);\n+\n+\t    if (envWhitelist.find(strName) != envWhitelist.end()) {\n+                mapArgs[strName] = strValue;\n+                mapMultiArgs[strName].push_back(strValue);\n+\t\t//cout << \"Setting '\" << strName << \"' to '\" << strValue << \"'\" << endl;\n+\t    }\n+        }\n+\n+        i++;\n+    }\n+}\n+\n+void ParseParameters(int argc, const char* const argv[])\n+{\n     for (int i = 1; i < argc; i++)\n     {\n         std::string str(argv[i]);"
      },
      {
        "sha": "1fe46175d92dacc246887b40f6d385932b2351d6",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba935ec9541c00bb0236932e2fb2089ee5e76219/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba935ec9541c00bb0236932e2fb2089ee5e76219/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=ba935ec9541c00bb0236932e2fb2089ee5e76219",
        "patch": "@@ -22,6 +22,7 @@\n #include <string>\n #include <utility>\n #include <vector>\n+#include <unistd.h>\n \n #ifndef WIN32\n #include <sys/resource.h>\n@@ -172,6 +173,8 @@ std::vector<unsigned char> DecodeBase32(const char* p, bool* pfInvalid = NULL);\n std::string DecodeBase32(const std::string& str);\n std::string EncodeBase32(const unsigned char* pch, size_t len);\n std::string EncodeBase32(const std::string& str);\n+void ClearArgs();\n+void ParseEnvironment();\n void ParseParameters(int argc, const char*const argv[]);\n bool WildcardMatch(const char* psz, const char* mask);\n bool WildcardMatch(const std::string& str, const std::string& mask);"
      }
    ]
  },
  {
    "sha": "41d56c87f8d1f27e6b04d6fc804b9e3bc74a4518",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MWQ1NmM4N2Y4ZDFmMjdlNmIwNGQ2ZmM4MDRiOWUzYmM3NGE0NTE4",
    "commit": {
      "author": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2013-12-30T08:42:14Z"
      },
      "committer": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2013-12-30T08:42:14Z"
      },
      "message": "Removed unneeded ClearArgs() calls.\n\nSigned-off-by: Johnathan Corgan <johnathan@corganlabs.com>",
      "tree": {
        "sha": "0ce9e33a25f4efe1162c1c419245d35f40bd24a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ce9e33a25f4efe1162c1c419245d35f40bd24a8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41d56c87f8d1f27e6b04d6fc804b9e3bc74a4518",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41d56c87f8d1f27e6b04d6fc804b9e3bc74a4518",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/41d56c87f8d1f27e6b04d6fc804b9e3bc74a4518",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41d56c87f8d1f27e6b04d6fc804b9e3bc74a4518/comments",
    "author": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ba935ec9541c00bb0236932e2fb2089ee5e76219",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba935ec9541c00bb0236932e2fb2089ee5e76219",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ba935ec9541c00bb0236932e2fb2089ee5e76219"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 0,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7f21de0369928ab23ad1ddfcb3e7cd8c41261556",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41d56c87f8d1f27e6b04d6fc804b9e3bc74a4518/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41d56c87f8d1f27e6b04d6fc804b9e3bc74a4518/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=41d56c87f8d1f27e6b04d6fc804b9e3bc74a4518",
        "patch": "@@ -62,7 +62,6 @@ bool AppInit(int argc, char* argv[])\n         // Parameters\n         //\n         // If Qt is used, parameters/bitcoin.conf are parsed in qt/bitcoin.cpp's main()\n-        ClearArgs();\n \tParseEnvironment();\n \tParseParameters(argc, argv);\n         if (!boost::filesystem::is_directory(GetDataDir(false)))"
      },
      {
        "sha": "a651344fdfcc961c34f716fd9e5cf3bed5e0d7a8",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41d56c87f8d1f27e6b04d6fc804b9e3bc74a4518/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41d56c87f8d1f27e6b04d6fc804b9e3bc74a4518/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=41d56c87f8d1f27e6b04d6fc804b9e3bc74a4518",
        "patch": "@@ -165,7 +165,6 @@ int main(int argc, char *argv[])\n     bool fSelParFromCLFailed = false;\n \n     // Command-line options take precedence:\n-    ClearArgs();\n     ParseEnvironment();\n     ParseParameters(argc, argv);\n     // ... then bitcoin.conf:"
      }
    ]
  },
  {
    "sha": "d2ea3a3bddc6a419e384cf60915e079202e07e5e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMmVhM2EzYmRkYzZhNDE5ZTM4NGNmNjA5MTVlMDc5MjAyZTA3ZTVl",
    "commit": {
      "author": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2013-12-30T08:47:49Z"
      },
      "committer": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2013-12-30T08:47:49Z"
      },
      "message": "Remove one additional unneeded ClearArgs().",
      "tree": {
        "sha": "a9a4cfb7cb06f45d1bb44d4d276316623629d6b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9a4cfb7cb06f45d1bb44d4d276316623629d6b6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2ea3a3bddc6a419e384cf60915e079202e07e5e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2ea3a3bddc6a419e384cf60915e079202e07e5e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d2ea3a3bddc6a419e384cf60915e079202e07e5e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2ea3a3bddc6a419e384cf60915e079202e07e5e/comments",
    "author": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "41d56c87f8d1f27e6b04d6fc804b9e3bc74a4518",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41d56c87f8d1f27e6b04d6fc804b9e3bc74a4518",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/41d56c87f8d1f27e6b04d6fc804b9e3bc74a4518"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "89f85a7d06d9c9c0a77ab2322707b2a42dde807f",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2ea3a3bddc6a419e384cf60915e079202e07e5e/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2ea3a3bddc6a419e384cf60915e079202e07e5e/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=d2ea3a3bddc6a419e384cf60915e079202e07e5e",
        "patch": "@@ -20,7 +20,6 @@ static bool AppInitRPC(int argc, char* argv[])\n     //\n     // Parameters\n     //\n-    ClearArgs();\n     ParseEnvironment();\n     ParseParameters(argc, argv);\n     if (!boost::filesystem::is_directory(GetDataDir(false)))"
      }
    ]
  },
  {
    "sha": "0729a596da7caeda1a0243d3739513d193f5f590",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNzI5YTU5NmRhN2NhZWRhMWEwMjQzZDM3Mzk1MTNkMTkzZjVmNTkw",
    "commit": {
      "author": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2013-12-30T16:52:10Z"
      },
      "committer": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2013-12-30T16:52:10Z"
      },
      "message": "Fixed whitespace issues with tab/space",
      "tree": {
        "sha": "9852024c59749ca4a020f68114f3455655c54791",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9852024c59749ca4a020f68114f3455655c54791"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0729a596da7caeda1a0243d3739513d193f5f590",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0729a596da7caeda1a0243d3739513d193f5f590",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0729a596da7caeda1a0243d3739513d193f5f590",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0729a596da7caeda1a0243d3739513d193f5f590/comments",
    "author": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d2ea3a3bddc6a419e384cf60915e079202e07e5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2ea3a3bddc6a419e384cf60915e079202e07e5e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d2ea3a3bddc6a419e384cf60915e079202e07e5e"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "0e3425dff97f6e5394a2f577f80c09643fac96e5",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0729a596da7caeda1a0243d3739513d193f5f590/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0729a596da7caeda1a0243d3739513d193f5f590/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=0729a596da7caeda1a0243d3739513d193f5f590",
        "patch": "@@ -552,23 +552,23 @@ void ParseEnvironment()\n     while (environ[i] != NULL && strlen(environ[i]) > 0) {\n \n         string str(environ[i]);\n-\tstring strName;\n+        string strName;\n         string strValue;\n \n         if (boost::algorithm::starts_with(str, \"BITCOIN_\")) {\n \n-\t    size_t und_index = str.find('_');\n-\t    size_t is_index = str.find('=');\n+            size_t und_index = str.find('_');\n+            size_t is_index = str.find('=');\n \n-\t    strName = \"-\" + str.substr(und_index+1, is_index-und_index-1);\n-\t    boost::to_lower(strName);\n-\t    strValue = str.substr(is_index+1);\n+            strName = \"-\" + str.substr(und_index+1, is_index-und_index-1);\n+            boost::to_lower(strName);\n+            strValue = str.substr(is_index+1);\n \n-\t    if (envWhitelist.find(strName) != envWhitelist.end()) {\n+            if (envWhitelist.find(strName) != envWhitelist.end()) {\n                 mapArgs[strName] = strValue;\n                 mapMultiArgs[strName].push_back(strValue);\n-\t\t//cout << \"Setting '\" << strName << \"' to '\" << strValue << \"'\" << endl;\n-\t    }\n+                //cout << \"Setting '\" << strName << \"' to '\" << strValue << \"'\" << endl;\n+            }\n         }\n \n         i++;"
      }
    ]
  }
]