[
  {
    "sha": "3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjVjZDFmYzFjYzc4ZjdhN2MxZmQxNmE3ZTkzZjA3NDE5NzhkZTU4",
    "commit": {
      "author": {
        "name": "Gazer022",
        "email": "Gazer022@users.noreply.github.com",
        "date": "2017-09-15T15:53:57Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2017-09-15T15:53:57Z"
      },
      "message": "Merge pull request #1 from bitcoin/master\n\nTest",
      "tree": {
        "sha": "7d797caf8a314f716a3935cb3f4f67e223ca63c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7d797caf8a314f716a3935cb3f4f67e223ca63c2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/comments",
    "author": {
      "login": "Gazer022",
      "id": 9988891,
      "node_id": "MDQ6VXNlcjk5ODg4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9988891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gazer022",
      "html_url": "https://github.com/Gazer022",
      "followers_url": "https://api.github.com/users/Gazer022/followers",
      "following_url": "https://api.github.com/users/Gazer022/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gazer022/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gazer022/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gazer022/subscriptions",
      "organizations_url": "https://api.github.com/users/Gazer022/orgs",
      "repos_url": "https://api.github.com/users/Gazer022/repos",
      "events_url": "https://api.github.com/users/Gazer022/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gazer022/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "09627b1dd41d1151a709d5ead82a924bf59e3d38",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09627b1dd41d1151a709d5ead82a924bf59e3d38",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/09627b1dd41d1151a709d5ead82a924bf59e3d38"
      }
    ],
    "stats": {
      "total": 244683,
      "additions": 158837,
      "deletions": 85846
    },
    "files": [
      {
        "sha": "28c18149982566b37eb29370ff5366f7d4cebd8e",
        "filename": ".github/ISSUE_TEMPLATE.md",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/.github/ISSUE_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/.github/ISSUE_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,37 @@\n+<!--- Remove sections that do not apply -->\n+\n+This issue tracker is only for technical issues related to bitcoin-core.\n+\n+General bitcoin questions and/or support requests and are best directed to the [Bitcoin StackExchange](https://bitcoin.stackexchange.com).\n+\n+For reporting security issues, please read instructions at [https://bitcoincore.org/en/contact/](https://bitcoincore.org/en/contact/).\n+\n+### Describe the issue\n+\n+### Can you reliably reproduce the issue?\n+#### If so, please list the steps to reproduce below:\n+1.\n+2.\n+3.\n+\n+### Expected behaviour\n+Tell us what should happen\n+\n+### Actual behaviour\n+Tell us what happens instead\n+\n+### Screenshots.\n+If the issue is related to the GUI, screenshots can be added to this issue via drag & drop.\n+\n+### What version of bitcoin-core are you using?\n+List the version number/commit ID, and if it is an official binary, self compiled or a distribution package such as PPA.\n+\n+### Machine specs:\n+- OS:\n+- CPU:\n+- RAM:\n+- Disk size:\n+- Disk Type (HD/SDD):\n+\n+### Any extra information that might be useful in the debugging process.\n+This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred."
      },
      {
        "sha": "60c26dae8b89349b88d704dd7be7320ef8684b16",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 4,
        "deletions": 9,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -6,6 +6,7 @@ src/bitcoind\n src/bitcoin-cli\n src/bitcoin-tx\n src/test/test_bitcoin\n+src/test/test_bitcoin_fuzzy\n src/qt/test/test_bitcoin-qt\n \n # autoreconf\n@@ -55,7 +56,6 @@ src/qt/test/moc*.cpp\n *.o\n *.o-*\n *.patch\n-.bitcoin\n *.a\n *.pb.cc\n *.pb.h\n@@ -80,7 +80,6 @@ Bitcoin-Qt.app\n # Unit-tests\n Makefile.test\n bitcoin-qt_test\n-src/test/buildenv.py\n \n # Resources cpp\n qrc_*.cpp\n@@ -101,16 +100,12 @@ coverage_percent.txt\n linux-coverage-build\n linux-build\n win32-build\n-qa/pull-tester/run-bitcoind-for-test.sh\n-qa/pull-tester/tests_config.py\n-qa/pull-tester/cache/*\n-qa/pull-tester/test.*/*\n-qa/tmp\n-cache/\n-share/BitcoindComparisonTool.jar\n+test/config.ini\n+test/cache/*\n \n !src/leveldb*/Makefile\n \n /doc/doxygen/\n \n libbitcoinconsensus.pc\n+contrib/devtools/split-debug.sh"
      },
      {
        "sha": "0de7ca6f7565f7d04224bc0b57dc159c7413a7d4",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 52,
        "deletions": 44,
        "changes": 96,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,16 +1,17 @@\n-# errata:\n-# - A travis bug causes caches to trample eachother when using the same\n-#   compiler key (which we don't use anyway). This is worked around for now by\n-#   replacing the \"compilers\" with a build name prefixed by the no-op \":\"\n-#   command. See: https://github.com/travis-ci/casher/issues/6\n-\n+sudo: required\n+dist: trusty\n os: linux\n-language: cpp\n-compiler: gcc\n+language: generic\n+cache:\n+  directories:\n+  - depends/built\n+  - depends/sdk-sources\n+  - $HOME/.ccache\n env:\n   global:\n     - MAKEJOBS=-j3\n     - RUN_TESTS=false\n+    - CHECK_DOC=0\n     - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID\n     - CCACHE_SIZE=100M\n     - CCACHE_TEMPDIR=/tmp/.ccache-temp\n@@ -19,56 +20,63 @@ env:\n     - SDK_URL=https://bitcoincore.org/depends-sources/sdks\n     - PYTHON_DEBUG=1\n     - WINEDEBUG=fixme-all\n-cache:\n-  apt: true\n-  directories:\n-  - depends/built\n-  - depends/sdk-sources\n-  - $HOME/.ccache\n-matrix:\n-  fast_finish: true\n-  include:\n-    - compiler: \": ARM\"\n-      env: HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n-    - compiler: \": Win32\"\n-      env: HOST=i686-w64-mingw32 PPA=\"ppa:ubuntu-wine/ppa\" PACKAGES=\"nsis gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 mingw-w64-dev wine1.7 bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n-    - compiler: \": 32-bit + dash\"\n-      env: HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python-zmq\" PPA=\"ppa:chris-lea/zeromq\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n-    - compiler: \": Win64\"\n-      env: HOST=x86_64-w64-mingw32 PPA=\"ppa:ubuntu-wine/ppa\" PACKAGES=\"nsis gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-dev wine1.7 bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n-    - compiler: \": bitcoind\"\n-      env: HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python-zmq\" PPA=\"ppa:chris-lea/zeromq\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n-    - compiler: \": No wallet\"\n-      env: HOST=x86_64-unknown-linux-gnu DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n-    - compiler: \": Cross-Mac\"\n-      env: HOST=x86_64-apple-darwin11 PACKAGES=\"cmake libcap-dev libz-dev libbz2-dev\" BITCOIN_CONFIG=\"--enable-reduce-exports\" OSX_SDK=10.9 GOAL=\"deploy\"\n-  exclude:\n-    - compiler: gcc\n+  matrix:\n+# ARM\n+    - HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" CHECK_DOC=1 GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+# Win32\n+    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-i686 wine1.6\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n+# Qt4 & system libs\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3-zmq qt4-dev-tools libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libdb5.1++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev xvfb\" NO_DEPENDS=1 NEED_XVFB=1 RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --enable-glibc-back-compat --enable-reduce-exports --with-gui=qt4 CPPFLAGS=-DDEBUG_LOCKORDER\"\n+# 32-bit + dash\n+    - HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib python3-zmq\" DEP_OPTS=\"NO_QT=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n+# Win64\n+    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine1.6\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n+# x86_64 Linux (uses qt5 dev package instead of depends Qt to speed up build and avoid timeout)\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n+# x86_64 Linux, No wallet\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+# Cross-Mac\n+    - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\" OSX_SDK=10.11 GOAL=\"deploy\"\n+\n+before_install:\n+    - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n+    - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/pyenv/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n install:\n-    - if [ -n \"$PACKAGES\" ]; then sudo rm -f /etc/apt/sources.list.d/travis_ci_zeromq3-source.list; fi\n-    - if [ -n \"$PPA\" ]; then travis_retry sudo add-apt-repository \"$PPA\" -y; fi\n+    - if [ -n \"$DPKG_ADD_ARCH\" ]; then sudo dpkg --add-architecture \"$DPKG_ADD_ARCH\" ; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n before_script:\n+    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then contrib/devtools/commit-script-check.sh $TRAVIS_COMMIT_RANGE; fi\n+    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-doc.py; fi\n+    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-rpc-mappings.py .; fi\n+    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/lint-all.sh; fi\n     - unset CC; unset CXX\n     - mkdir -p depends/SDKs depends/sdk-sources\n-    - if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then wget $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -O depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n+    - if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n     - if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n-    - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n+    - if [ -z \"$NO_DEPENDS\" ]; then make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS; fi\n+    # Start xvfb if needed, as documented at https://docs.travis-ci.com/user/gui-and-headless-browsers/#Using-xvfb-to-Run-Tests-That-Require-a-GUI\n+    - if [ \"$NEED_XVFB\" = 1 ]; then export DISPLAY=:99.0; /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac; fi\n script:\n+    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then while read LINE; do travis_retry gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys $LINE; done < contrib/verify-commits/trusted-keys; fi\n+    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then git fetch --unshallow; fi\n+    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then contrib/verify-commits/verify-commits.sh; fi\n+    - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`\n     - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n     - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n     - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n-    - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE\n-    - if [ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]; then export CCACHE_READONLY=1; fi\n+    - if [ -z \"$NO_DEPENDS\" ]; then depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE; fi\n     - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n-    - ./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n-    - make distdir PACKAGE=bitcoin VERSION=$HOST\n+    - mkdir build && cd build\n+    - ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n+    - make distdir VERSION=$HOST\n     - cd bitcoin-$HOST\n     - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n     - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n     - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then make check; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.py --coverage; fi\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then travis_wait 30 make $MAKEJOBS check VERBOSE=1; fi\n+    - if [ \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then extended=\"--extended --exclude pruning,dbcrash\"; fi\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then test/functional/test_runner.py --coverage --quiet ${extended}; fi\n after_script:\n-    - if [ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]; then (echo \"Upload goes here. Something like: scp -r $BASE_OUTDIR server\" || echo \"upload failed\"); fi\n+    - echo $TRAVIS_COMMIT_RANGE\n+    - echo $TRAVIS_COMMIT_LOG"
      },
      {
        "sha": "c4eb6d831f31ae696f9b30a894068db35b74b8a0",
        "filename": ".tx/config",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,7 +1,7 @@\n [main]\n host = https://www.transifex.com\n \n-[bitcoin.qt-translation-012x]\n+[bitcoin.qt-translation-014x]\n file_filter = src/qt/locale/bitcoin_<lang>.ts\n source_file = src/qt/locale/bitcoin_en.ts\n source_lang = en"
      },
      {
        "sha": "aed6d7954255755529093839251b04813d0631af",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 218,
        "deletions": 43,
        "changes": 261,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,108 +1,283 @@\n Contributing to Bitcoin Core\n ============================\n \n-The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+The Bitcoin Core project operates an open contributor model where anyone is\n+welcome to contribute towards development in the form of peer review, testing\n+and patches. This document explains the practical process and guidelines for\n+contributing.\n \n-Firstly in terms of structure, there is no particular concept of \u201cCore developers\u201d in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repository \u201cmaintainers\u201d who are responsible for merging pull requests as well as a \u201clead maintainer\u201d who is responsible for the release cycle, overall merging, moderation and appointment of maintainers.\n+Firstly in terms of structure, there is no particular concept of \"Core\n+developers\" in the sense of privileged people. Open source often naturally\n+revolves around meritocracy where longer term contributors gain more trust from\n+the developer community. However, some hierarchy is necessary for practical\n+purposes. As such there are repository \"maintainers\" who are responsible for\n+merging pull requests as well as a \"lead maintainer\" who is responsible for the\n+release cycle, overall merging, moderation and appointment of maintainers.\n \n \n Contributor Workflow\n --------------------\n \n-The codebase is maintained using the \u201ccontributor workflow\u201d where everyone without exception contributes patch proposals using \u201cpull requests\u201d. This facilitates social contribution, easy testing and peer review.\n+The codebase is maintained using the \"contributor workflow\" where everyone\n+without exception contributes patch proposals using \"pull requests\". This\n+facilitates social contribution, easy testing and peer review.\n \n To contribute a patch, the workflow is as follows:\n \n   - Fork repository\n   - Create topic branch\n   - Commit patches\n \n-The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+The project coding conventions in the [developer notes](doc/developer-notes.md)\n+must be adhered to.\n \n-In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diffs should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention)\n+and diffs should be easy to read. For this reason do not mix any formatting\n+fixes or code moves with actual code changes.\n \n-Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"Corrected typo in main.cpp\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+Commit messages should be verbose by default consisting of a short subject line\n+(50 chars max), a blank line and detailed explanatory text as separate\n+paragraph(s), unless the title alone is self-explanatory (like \"Corrected typo\n+in init.cpp\") in which case a single title line is sufficient. Commit messages should be\n+helpful to people reading your code in the future, so explain the reasoning for\n+your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n \n-If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n+If a particular commit references another issue, please add the reference, for\n+example `refs #1234`, or `fixes #4321`. Using the `fixes` or `closes` keywords\n+will cause the corresponding issue to be closed when the pull request is merged.\n \n-Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information\n+about Git.\n \n   - Push changes to your fork\n   - Create pull request\n \n-The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+The title of the pull request should be prefixed by the component or area that\n+the pull request affects. Valid areas as:\n+\n+  - *Consensus* for changes to consensus critical code\n+  - *Docs* for changes to the documentation\n+  - *Qt* for changes to bitcoin-qt\n+  - *Mining* for changes to the mining code\n+  - *Net* or *P2P* for changes to the peer-to-peer network code\n+  - *RPC/REST/ZMQ* for changes to the RPC, REST or ZMQ APIs\n+  - *Scripts and tools* for changes to the scripts and tools\n+  - *Tests* for changes to the bitcoin unit tests or QA tests\n+  - *Trivial* should **only** be used for PRs that do not change generated\n+    executable code. Notably, refactors (change of function arguments and code\n+    reorganization) and changes in behavior should **not** be marked as trivial.\n+    Examples of trivial PRs are changes to:\n+    - comments\n+    - whitespace\n+    - variable names\n+    - logging and messages\n+  - *Utils and libraries* for changes to the utils and libraries\n+  - *Wallet* for changes to the wallet code\n+\n+Examples:\n \n     Consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n     Net: Automatically create hidden service, listen on Tor\n     Qt: Add feed bump button\n-    Trivial: fix typo\n+    Trivial: Fix typo in init.cpp\n \n-If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in the body of the pull request to indicate tasks are pending.\n+Note that translations should not be submitted as pull requests, please see\n+[Translation Process](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md) \n+for more information on helping with translations.\n \n-The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n+If a pull request is specifically not to be considered for merging (yet) please\n+prefix the title with [WIP] or use [Tasks Lists](https://help.github.com/articles/basic-writing-and-formatting-syntax/#task-lists)\n+in the body of the pull request to indicate tasks are pending.\n \n-At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback. If your pull request is accepted for merging, you may be asked by a maintainer to squash and or rebase your commits before it will be merged. The length of time required for peer review is unpredictable and will vary from patch to patch.\n+The body of the pull request should contain enough description about what the\n+patch does together with any justification/reasoning. You should include\n+references to any discussions (for example other tickets or mailing list\n+discussions).\n+\n+At this stage one should expect comments and review from other contributors. You\n+can add more commits to your pull request by committing them locally and pushing\n+to your fork until you have satisfied all feedback.\n+\n+Squashing Commits\n+---------------------------\n+If your pull request is accepted for merging, you may be asked by a maintainer\n+to squash and or [rebase](https://git-scm.com/docs/git-rebase) your commits\n+before it will be merged. The basic squashing workflow is shown below.\n+\n+    git checkout your_branch_name\n+    git rebase -i HEAD~n\n+    # n is normally the number of commits in the pull\n+    # set commits from 'pick' to 'squash', save and quit\n+    # on the next screen, edit/refine commit messages\n+    # save and quit\n+    git push -f # (force push to GitHub)\n+\n+If you have problems with squashing (or other workflows with `git`), you can\n+alternatively enable \"Allow edits from maintainers\" in the right GitHub\n+sidebar and ask for help in the pull request.\n+\n+Please refrain from creating several pull requests for the same change.\n+Use the pull request that is already open (or was created earlier) to amend\n+changes. This preserves the discussion and review that happened earlier for\n+the respective change set.\n+\n+The length of time required for peer review is unpredictable and will vary from\n+pull request to pull request.\n \n \n Pull Request Philosophy\n -----------------------\n \n-Patchsets should always be focused. For example, a pull request could add a feature, fix a bug, or refactor code; but not a mixture. Please also avoid super pull requests which attempt to do too much, are overly large, or overly complex as this makes review difficult.\n+Patchsets should always be focused. For example, a pull request could add a\n+feature, fix a bug, or refactor code; but not a mixture. Please also avoid super\n+pull requests which attempt to do too much, are overly large, or overly complex\n+as this makes review difficult.\n+\n+\n+### Features\n \n+When adding a new feature, thought must be given to the long term technical debt\n+and maintenance that feature may require after inclusion. Before proposing a new\n+feature that will require maintenance, please consider if you are willing to\n+maintain it (including bug fixing). If features get orphaned with no maintainer\n+in the future, they may be removed by the Repository Maintainer.\n \n-###Features\n \n-When adding a new feature, thought must be given to the long term technical debt and maintenance that feature may require after inclusion. Before proposing a new feature that will require maintenance, please consider if you are willing to maintain it (including bug fixing). If features get orphaned with no maintainer in the future, they may be removed by the Repository Maintainer.\n+### Refactoring\n \n+Refactoring is a necessary part of any software project's evolution. The\n+following guidelines cover refactoring pull requests for the project.\n \n-###Refactoring\n+There are three categories of refactoring, code only moves, code style fixes,\n+code refactoring. In general refactoring pull requests should not mix these\n+three kinds of activity in order to make refactoring pull requests easy to\n+review and uncontroversial. In all cases, refactoring PRs must not change the\n+behaviour of code within the pull request (bugs must be preserved as is).\n \n-Refactoring is a necessary part of any software project's evolution. The following guidelines cover refactoring pull requests for the project.\n+Project maintainers aim for a quick turnaround on refactoring pull requests, so\n+where possible keep them short, uncomplex and easy to verify.\n \n-There are three categories of refactoring, code only moves, code style fixes, code refactoring. In general refactoring pull requests should not mix these three kinds of activity in order to make refactoring pull requests easy to review and uncontroversial. In all cases, refactoring PRs must not change the behaviour of code within the pull request (bugs must be preserved as is).\n+Pull requests that refactor the code should not be made by new contributors. It\n+requires a certain level of experience to know where the code belongs to and to\n+understand the full ramification (including rebase effort of open pull requests).\n \n-Project maintainers aim for a quick turnaround on refactoring pull requests, so where possible keep them short, uncomplex and easy to verify. \n+Trivial pull requests or pull requests that refactor the code with no clear\n+benefits may be immediately closed by the maintainers to reduce unnecessary\n+workload on reviewing.\n \n \n \"Decision Making\" Process\n -------------------------\n \n-The following applies to code changes to the Bitcoin Core project (and related projects such as libsecp256k1), and is not to be confused with overall Bitcoin Network Protocol consensus changes.\n+The following applies to code changes to the Bitcoin Core project (and related\n+projects such as libsecp256k1), and is not to be confused with overall Bitcoin\n+Network Protocol consensus changes.\n \n-Whether a pull request is merged into Bitcoin Core rests with the project merge maintainers and ultimately the project lead. \n+Whether a pull request is merged into Bitcoin Core rests with the project merge\n+maintainers and ultimately the project lead.\n \n-Maintainers will take into consideration if a patch is in line with the general principles of the project; meets the minimum standards for inclusion; and will judge the general consensus of contributors.\n+Maintainers will take into consideration if a patch is in line with the general\n+principles of the project; meets the minimum standards for inclusion; and will\n+judge the general consensus of contributors.\n \n In general, all pull requests must:\n \n-  - have a clear use case, fix a demonstrable bug or serve the greater good of the project (for example refactoring for modularisation);\n-  - be well peer reviewed;\n-  - have unit tests and functional tests where appropriate;\n-  - follow code style guidelines;\n-  - not break the existing test suite;\n-  - where bugs are fixed, where possible, there should be unit tests demonstrating the bug and also proving the fix. This helps prevent regression.\n-\n-Patches that change Bitcoin consensus rules are considerably more involved than normal because they affect the entire ecosystem and so must be preceded by extensive mailing list discussions and have a numbered BIP. While each case will be different, one should be prepared to expend more time and effort than for other kinds of patches because of increased peer review and consensus building requirements.\n-\n-\n-###Peer Review\n-\n-Anyone may participate in peer review which is expressed by comments in the pull request. Typically reviewers will review the code for obvious errors, as well as test out the patch set and opine on the technical merits of the patch. Project maintainers take into account the peer review when determining if there is consensus to merge a pull request (remember that discussions may have been spread out over github, mailing list and IRC discussions). The following language is used within pull-request comments:\n+  - Have a clear use case, fix a demonstrable bug or serve the greater good of\n+    the project (for example refactoring for modularisation);\n+  - Be well peer reviewed;\n+  - Have unit tests and functional tests where appropriate;\n+  - Follow code style guidelines;\n+  - Not break the existing test suite;\n+  - Where bugs are fixed, where possible, there should be unit tests\n+    demonstrating the bug and also proving the fix. This helps prevent regression.\n+\n+Patches that change Bitcoin consensus rules are considerably more involved than\n+normal because they affect the entire ecosystem and so must be preceded by\n+extensive mailing list discussions and have a numbered BIP. While each case will\n+be different, one should be prepared to expend more time and effort than for\n+other kinds of patches because of increased peer review and consensus building\n+requirements.\n+\n+\n+### Peer Review\n+\n+Anyone may participate in peer review which is expressed by comments in the pull\n+request. Typically reviewers will review the code for obvious errors, as well as\n+test out the patch set and opine on the technical merits of the patch. Project\n+maintainers take into account the peer review when determining if there is\n+consensus to merge a pull request (remember that discussions may have been\n+spread out over GitHub, mailing list and IRC discussions). The following\n+language is used within pull-request comments:\n \n   - ACK means \"I have tested the code and I agree it should be merged\";\n-  - NACK means \"I disagree this should be merged\", and must be accompanied by sound technical justification. NACKs without accompanying reasoning may be disregarded;\n-  - utACK means \"I have not tested the code, but I have reviewed it and it looks OK, I agree it can be merged\";\n+  - NACK means \"I disagree this should be merged\", and must be accompanied by\n+    sound technical justification (or in certain cases of copyright/patent/licensing\n+    issues, legal justification). NACKs without accompanying reasoning may be\n+    disregarded;\n+  - utACK means \"I have not tested the code, but I have reviewed it and it looks\n+    OK, I agree it can be merged\";\n   - Concept ACK means \"I agree in the general principle of this pull request\";\n   - Nit refers to trivial, often non-blocking issues.\n \n-Project maintainers reserve the right to weigh the opinions of peer reviewers using common sense judgement and also may weight based on meritocracy: Those that have demonstrated a deeper commitment and understanding towards the project (over time) or have clear domain expertise may naturally have more weight, as one would expect in all walks of life.\n-\n-Where a patch set affects consensus critical code, the bar will be set much higher in terms of discussion and peer review requirements, keeping in mind that mistakes could be very costly to the wider community. This includes refactoring of consensus critical code.\n-\n-Where a patch set proposes to change the Bitcoin consensus, it must have been discussed extensively on the mailing list and IRC, be accompanied by a widely discussed BIP and have a generally widely perceived technical consensus of being a worthwhile change based on the judgement of the maintainers.\n+Reviewers should include the commit hash which they reviewed in their comments.\n+\n+Project maintainers reserve the right to weigh the opinions of peer reviewers\n+using common sense judgement and also may weight based on meritocracy: Those\n+that have demonstrated a deeper commitment and understanding towards the project\n+(over time) or have clear domain expertise may naturally have more weight, as\n+one would expect in all walks of life.\n+\n+Where a patch set affects consensus critical code, the bar will be set much\n+higher in terms of discussion and peer review requirements, keeping in mind that\n+mistakes could be very costly to the wider community. This includes refactoring\n+of consensus critical code.\n+\n+Where a patch set proposes to change the Bitcoin consensus, it must have been\n+discussed extensively on the mailing list and IRC, be accompanied by a widely\n+discussed BIP and have a generally widely perceived technical consensus of being\n+a worthwhile change based on the judgement of the maintainers.\n+\n+### Finding Reviewers\n+\n+As most reviewers are themselves developers with their own projects, the review\n+process can be quite lengthy, and some amount of patience is required. If you find\n+that you've been waiting for a pull request to be given attention for several\n+months, there may be a number of reasons for this, some of which you can do something\n+about:\n+\n+  - It may be because of a feature freeze due to an upcoming release. During this time,\n+    only bug fixes are taken into consideration. If your pull request is a new feature,\n+    it will not be prioritized until the release is over. Wait for release.\n+  - It may be because the changes you are suggesting do not appeal to people. Rather than\n+    nits and critique, which require effort and means they care enough to spend time on your\n+    contribution, thundering silence is a good sign of widespread (mild) dislike of a given change\n+    (because people don't assume *others* won't actually like the proposal). Don't take\n+    that personally, though! Instead, take another critical look at what you are suggesting\n+    and see if it: changes too much, is too broad, doesn't adhere to the\n+    [developer notes](doc/developer-notes.md), is dangerous or insecure, is messily written, etc.\n+    Identify and address any of the issues you find. Then ask e.g. on IRC if someone could give\n+    their opinion on the concept itself.\n+  - It may be because your code is too complex for all but a few people. And those people\n+    may not have realized your pull request even exists. A great way to find people who\n+    are qualified and care about the code you are touching is the\n+    [Git Blame feature](https://help.github.com/articles/tracing-changes-in-a-file/). Simply\n+    find the person touching the code you are touching before you and see if you can find\n+    them and give them a nudge. Don't be incessant about the nudging though.\n+  - Finally, if all else fails, ask on IRC or elsewhere for someone to give your pull request\n+    a look. If you think you've been waiting an unreasonably long amount of time (month+) for\n+    no particular reason (few lines changed, etc), this is totally fine. Try to return the favor\n+    when someone else is asking for feedback on their code, and universe balances out.\n \n \n Release Policy\n --------------\n \n The project leader is the release manager for each Bitcoin Core release.\n+\n+Copyright\n+---------\n+\n+By contributing to this repository, you agree to license your work under the \n+MIT license unless specified otherwise in `contrib/debian/copyright` or at \n+the top of the file itself. Any work contributed where you are not the original \n+author must contain its license header with the original author(s) and source."
      },
      {
        "sha": "c6203c0f76d2b49f73b273413b464cac6e1c71c5",
        "filename": "COPYING",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,6 +1,6 @@\n The MIT License (MIT)\n \n-Copyright (c) 2009-2015 The Bitcoin Core developers\n+Copyright (c) 2009-2017 The Bitcoin Core developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "07ee48427cd056dadd0cbb3c0fc889c60c01f85c",
        "filename": "INSTALL",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/INSTALL",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/INSTALL",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,5 +0,0 @@\n-Building Bitcoin\n-\n-See doc/build-*.md for instructions on building bitcoind,\n-the intended-for-services, no-graphical-interface, reference\n-implementation of Bitcoin.\n\\ No newline at end of file"
      },
      {
        "sha": "520a47d96078dfa80cec83d03146c9349d6369c1",
        "filename": "INSTALL.md",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/INSTALL.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/INSTALL.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,5 @@\n+Building Bitcoin\n+================\n+\n+See doc/build-*.md for instructions on building the various\n+elements of the Bitcoin Core reference implementation of Bitcoin."
      },
      {
        "sha": "8216b7d60811bc01573622eaa5f12a856d6e53e8",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 137,
        "deletions": 82,
        "changes": 219,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,60 +1,72 @@\n+# Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n ACLOCAL_AMFLAGS = -I build-aux/m4\n SUBDIRS = src\n+if ENABLE_MAN\n+SUBDIRS += doc/man\n+endif\n .PHONY: deploy FORCE\n \n GZIP_ENV=\"-9n\"\n+export PYTHONPATH\n \n if BUILD_BITCOIN_LIBS\n pkgconfigdir = $(libdir)/pkgconfig\n pkgconfig_DATA = libbitcoinconsensus.pc\n endif\n \n-BITCOIND_BIN=$(top_builddir)/src/bitcoind$(EXEEXT)\n-BITCOIN_QT_BIN=$(top_builddir)/src/qt/bitcoin-qt$(EXEEXT)\n-BITCOIN_CLI_BIN=$(top_builddir)/src/bitcoin-cli$(EXEEXT)\n+BITCOIND_BIN=$(top_builddir)/src/$(BITCOIN_DAEMON_NAME)$(EXEEXT)\n+BITCOIN_QT_BIN=$(top_builddir)/src/qt/$(BITCOIN_GUI_NAME)$(EXEEXT)\n+BITCOIN_CLI_BIN=$(top_builddir)/src/$(BITCOIN_CLI_NAME)$(EXEEXT)\n BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n \n+empty :=\n+space := $(empty) $(empty)\n+\n OSX_APP=Bitcoin-Qt.app\n-OSX_DMG=Bitcoin-Core.dmg\n+OSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))\n+OSX_DMG = $(OSX_VOLNAME).dmg\n+OSX_BACKGROUND_SVG=background.svg\n OSX_BACKGROUND_IMAGE=background.tiff\n+OSX_BACKGROUND_IMAGE_DPIS=36 72\n+OSX_DSSTORE_GEN=$(top_srcdir)/contrib/macdeploy/custom_dsstore.py\n OSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus\n OSX_FANCY_PLIST=$(top_srcdir)/contrib/macdeploy/fancy.plist\n-OSX_BASE_LPROJ_DIR=$(top_srcdir)/contrib/macdeploy/Base.lproj/InfoPlist.strings\n OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n-OSX_PLIST=$(top_srcdir)/share/qt/Info.plist #not installed\n+OSX_PLIST=$(top_builddir)/share/qt/Info.plist #not installed\n OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW\n \n DIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)\n+DIST_CONTRIB = $(top_srcdir)/contrib/bitcoin-cli.bash-completion \\\n+\t       $(top_srcdir)/contrib/bitcoin-tx.bash-completion \\\n+\t       $(top_srcdir)/contrib/bitcoind.bash-completion \\\n+\t       $(top_srcdir)/contrib/init \\\n+\t       $(top_srcdir)/contrib/rpm\n+\n+BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n+           $(top_srcdir)/contrib/devtools/security-check.py\n \n WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n   $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n   $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n   $(top_srcdir)/doc/README_windows.txt\n \n-OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) $(OSX_BASE_LPROJ_DIR) \\\n-  $(top_srcdir)/contrib/macdeploy/$(OSX_BACKGROUND_IMAGE) \\\n-  $(top_srcdir)/contrib/macdeploy/DS_Store \\\n+OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n+  $(top_srcdir)/contrib/macdeploy/$(OSX_BACKGROUND_SVG) \\\n+  $(OSX_DSSTORE_GEN) \\\n   $(top_srcdir)/contrib/macdeploy/detached-sig-apply.sh \\\n   $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n \n-COVERAGE_INFO = baseline_filtered_combined.info baseline.info block_test.info \\\n-  leveldb_baseline.info test_bitcoin_filtered.info total_coverage.info \\\n-  baseline_filtered.info block_test_filtered.info rpc_test.info rpc_test_filtered.info \\\n-  leveldb_baseline_filtered.info test_bitcoin_coverage.info test_bitcoin.info\n+COVERAGE_INFO = baseline.info \\\n+  test_bitcoin_filtered.info total_coverage.info \\\n+  baseline_filtered.info functional_test.info functional_test_filtered.info \\\n+  test_bitcoin_coverage.info test_bitcoin.info\n \n dist-hook:\n-\t-$(MAKE) -C $(top_distdir)/src/leveldb clean\n-\t-$(MAKE) -C $(top_distdir)/src/secp256k1 distclean\n \t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n \n-distcheck-hook:\n-\t$(MKDIR_P) $(top_distdir)/_build/src/leveldb\n-\tcp -rf $(top_srcdir)/src/leveldb/* $(top_distdir)/_build/src/leveldb/\n-\t-$(MAKE) -C $(top_distdir)/_build/src/leveldb clean\n-\n-distcleancheck:\n-\t@:\n-\n $(BITCOIN_WIN_INSTALLER): all-recursive\n \t$(MKDIR_P) $(top_builddir)/release\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n@@ -64,9 +76,6 @@ $(BITCOIN_WIN_INSTALLER): all-recursive\n \t  echo error: could not build $@\n \t@echo built $@\n \n-$(if $(findstring src/,$(MAKECMDGOALS)),$(MAKECMDGOALS), none): FORCE\n-\t$(MAKE) -C src $(patsubst src/%,%,$@)\n-\n $(OSX_APP)/Contents/PkgInfo:\n \t$(MKDIR_P) $(@D)\n \t@echo \"APPL????\" > $@\n@@ -87,17 +96,27 @@ $(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(BITCOIN_QT_BIN)\n \t$(MKDIR_P) $(@D)\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $< $@\n \n-$(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings: $(OSX_BASE_LPROJ_DIR)\n+$(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n \t$(MKDIR_P) $(@D)\n-\t$(INSTALL_DATA) $< $@\n+\techo '{\tCFBundleDisplayName = \"$(PACKAGE_NAME)\"; CFBundleName = \"$(PACKAGE_NAME)\"; }' > $@\n \n OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n   $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n   $(OSX_APP)/Contents/MacOS/Bitcoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n \n+osx_volname:\n+\techo $(OSX_VOLNAME) >$@\n+\n if BUILD_DARWIN\n-$(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING)\n-\t$(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2\n+$(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING) $(OSX_BACKGROUND_IMAGE)\n+\t$(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2 -volname $(OSX_VOLNAME)\n+\n+$(OSX_BACKGROUND_IMAGE).png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n+\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 36 -p 36 -o $@\n+$(OSX_BACKGROUND_IMAGE)@2x.png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n+\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 72 -p 72 -o $@\n+$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE).png $(OSX_BACKGROUND_IMAGE)@2x.png\n+\ttiffutil -cathidpicheck $^ -out $@\n \n deploydir: $(OSX_DMG)\n else\n@@ -111,16 +130,20 @@ $(APP_DIST_DIR)/Applications:\n $(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n \n $(OSX_DMG): $(APP_DIST_EXTRAS)\n-\t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"Bitcoin-Core\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n+\t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n \n-$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_IMAGE)\n+dpi%.$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n+\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d $* -p $* | $(IMAGEMAGICK_CONVERT) - $@\n+OSX_BACKGROUND_IMAGE_DPIFILES := $(foreach dpi,$(OSX_BACKGROUND_IMAGE_DPIS),dpi$(dpi).$(OSX_BACKGROUND_IMAGE))\n+$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIFILES)\n \t$(MKDIR_P) $(@D)\n-\t$(INSTALL) $< $@\n-$(APP_DIST_DIR)/.DS_Store: contrib/macdeploy/DS_Store\n-\t$(INSTALL) $< $@\n+\t$(TIFFCP) -c none $(OSX_BACKGROUND_IMAGE_DPIFILES) $@\n+\n+$(APP_DIST_DIR)/.DS_Store: $(OSX_DSSTORE_GEN)\n+\t$(PYTHON) $< \"$@\" \"$(OSX_VOLNAME)\"\n \n $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n-\tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n+\tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n \n deploydir: $(APP_DIST_EXTRAS)\n endif\n@@ -143,81 +166,113 @@ $(BITCOIN_CLI_BIN): FORCE\n \t$(MAKE) -C src $(@F)\n \n if USE_LCOV\n+LCOV_FILTER_PATTERN=-p \"/usr/include/\" -p \"src/leveldb/\" -p \"src/bench/\" -p \"src/univalue\" -p \"src/crypto/ctaes\" -p \"src/secp256k1\"\n \n baseline.info:\n \t$(LCOV) -c -i -d $(abs_builddir)/src -o $@\n \n baseline_filtered.info: baseline.info\n-\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n-\n-leveldb_baseline.info: baseline_filtered.info\n-\t$(LCOV) -c -i -d $(abs_builddir)/src/leveldb -b $(abs_builddir)/src/leveldb -o $@\n-\n-leveldb_baseline_filtered.info: leveldb_baseline.info\n-\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n+\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n \n-baseline_filtered_combined.info: leveldb_baseline_filtered.info baseline_filtered.info\n-\t$(LCOV) -a leveldb_baseline_filtered.info -a baseline_filtered.info -o $@\n-\n-test_bitcoin.info: baseline_filtered_combined.info\n+test_bitcoin.info: baseline_filtered.info\n \t$(MAKE) -C src/ check\n-\t$(LCOV) -c -d $(abs_builddir)/src -t test_bitcoin -o $@\n-\t$(LCOV) -z -d $(abs_builddir)/src\n-\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src -t test_bitcoin -o $@\n+\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n \n test_bitcoin_filtered.info: test_bitcoin.info\n-\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n-\n-block_test.info: test_bitcoin_filtered.info\n-\t$(MKDIR_P) qa/tmp\n-\t-@TIMEOUT=15 qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS)\n-\t$(LCOV) -c -d $(abs_builddir)/src --t BitcoinJBlockTest -o $@\n-\t$(LCOV) -z -d $(abs_builddir)/src\n-\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n+\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n \n-block_test_filtered.info: block_test.info\n-\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+functional_test.info: test_bitcoin_filtered.info\n+\t-@TIMEOUT=15 test/functional/test_runner.py $(EXTENDED_FUNCTIONAL_TESTS)\n+\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src --t functional-tests -o $@\n+\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n \n-rpc_test.info: test_bitcoin_filtered.info\n-\t-@TIMEOUT=15 python qa/pull-tester/rpc-tests.py $(EXTENDED_RPC_TESTS)\n-\t$(LCOV) -c -d $(abs_builddir)/src --t rpc-tests -o $@\n-\t$(LCOV) -z -d $(abs_builddir)/src\n-\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+functional_test_filtered.info: functional_test.info\n+\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n+\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n \n-rpc_test_filtered.info: rpc_test.info\n-\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+test_bitcoin_coverage.info: baseline_filtered.info test_bitcoin_filtered.info\n+\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n \n-test_bitcoin_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info\n-\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n-\n-total_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info block_test_filtered.info rpc_test_filtered.info\n-\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a block_test_filtered.info -a rpc_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+total_coverage.info: test_bitcoin_filtered.info functional_test_filtered.info\n+\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -a functional_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n \n test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n-\t$(GENHTML) -s $< -o $(@D)\n+\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n \t@touch $@\n \n total.coverage/.dirstamp: total_coverage.info\n-\t$(GENHTML) -s $< -o $(@D)\n+\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n \t@touch $@\n \n cov: test_bitcoin.coverage/.dirstamp total.coverage/.dirstamp\n \n endif\n \n-if USE_COMPARISON_TOOL\n-check-local:\n-\t$(MKDIR_P) qa/tmp\n-\t@qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS) 2>&1\n-endif\n-\n dist_noinst_SCRIPTS = autogen.sh\n \n-EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh test/functional/test_runner.py test/functional $(DIST_CONTRIB) $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n+\n+EXTRA_DIST += \\\n+    test/util/bitcoin-util-test.py \\\n+    test/util/data/bitcoin-util-test.json \\\n+    test/util/data/blanktxv1.hex \\\n+    test/util/data/blanktxv1.json \\\n+    test/util/data/blanktxv2.hex \\\n+    test/util/data/blanktxv2.json \\\n+    test/util/data/tt-delin1-out.hex \\\n+    test/util/data/tt-delin1-out.json \\\n+    test/util/data/tt-delout1-out.hex \\\n+    test/util/data/tt-delout1-out.json \\\n+    test/util/data/tt-locktime317000-out.hex \\\n+    test/util/data/tt-locktime317000-out.json \\\n+    test/util/data/tx394b54bb.hex \\\n+    test/util/data/txcreate1.hex \\\n+    test/util/data/txcreate1.json \\\n+    test/util/data/txcreate2.hex \\\n+    test/util/data/txcreate2.json \\\n+    test/util/data/txcreatedata1.hex \\\n+    test/util/data/txcreatedata1.json \\\n+    test/util/data/txcreatedata2.hex \\\n+    test/util/data/txcreatedata2.json \\\n+    test/util/data/txcreatedata_seq0.hex \\\n+    test/util/data/txcreatedata_seq0.json \\\n+    test/util/data/txcreatedata_seq1.hex \\\n+    test/util/data/txcreatedata_seq1.json \\\n+    test/util/data/txcreatemultisig1.hex \\\n+    test/util/data/txcreatemultisig1.json \\\n+    test/util/data/txcreatemultisig2.hex \\\n+    test/util/data/txcreatemultisig2.json \\\n+    test/util/data/txcreatemultisig3.hex \\\n+    test/util/data/txcreatemultisig3.json \\\n+    test/util/data/txcreatemultisig4.hex \\\n+    test/util/data/txcreatemultisig4.json \\\n+    test/util/data/txcreateoutpubkey1.hex \\\n+    test/util/data/txcreateoutpubkey1.json \\\n+    test/util/data/txcreateoutpubkey2.hex \\\n+    test/util/data/txcreateoutpubkey2.json \\\n+    test/util/data/txcreateoutpubkey3.hex \\\n+    test/util/data/txcreateoutpubkey3.json \\\n+    test/util/data/txcreatescript1.hex \\\n+    test/util/data/txcreatescript1.json \\\n+    test/util/data/txcreatescript2.hex \\\n+    test/util/data/txcreatescript2.json \\\n+    test/util/data/txcreatescript3.hex \\\n+    test/util/data/txcreatescript3.json \\\n+    test/util/data/txcreatescript4.hex \\\n+    test/util/data/txcreatescript4.json \\\n+    test/util/data/txcreatesignv1.hex \\\n+    test/util/data/txcreatesignv1.json \\\n+    test/util/data/txcreatesignv2.hex\n \n CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n \n .INTERMEDIATE: $(COVERAGE_INFO)\n \n+DISTCHECK_CONFIGURE_FLAGS = --enable-man\n+\n clean-local:\n-\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ qa/tmp/ cache/ $(OSX_APP)\n+\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ test/tmp/ cache/ $(OSX_APP)\n+\trm -rf test/functional/__pycache__"
      },
      {
        "sha": "5db9fc99282a9ca51c75ce14822b106b132de141",
        "filename": "README.md",
        "status": "modified",
        "additions": 11,
        "deletions": 10,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -3,25 +3,26 @@ Bitcoin Core integration/staging tree\n \n [![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n \n-https://www.bitcoin.org\n+https://bitcoincore.org\n \n What is Bitcoin?\n ----------------\n \n-Bitcoin is an experimental new digital currency that enables instant payments to\n+Bitcoin is an experimental digital currency that enables instant payments to\n anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n with no central authority: managing transactions and issuing money are carried\n out collectively by the network. Bitcoin Core is the name of open source\n software which enables the use of this currency.\n \n For more information, as well as an immediately useable, binary version of\n-the Bitcoin Core software, see https://www.bitcoin.org/en/download.\n+the Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n+[original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n \n License\n -------\n \n Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n-information or see http://opensource.org/licenses/MIT.\n+information or see https://opensource.org/licenses/MIT.\n \n Development Process\n -------------------\n@@ -48,16 +49,16 @@ lots of money.\n \n ### Automated Testing\n \n-Developers are strongly encouraged to write unit tests for new code, and to\n+Developers are strongly encouraged to write [unit tests](src/test/README.md) for new code, and to\n submit new unit tests for old code. Unit tests can be compiled and run\n-(assuming they weren't disabled in configure) with: `make check`\n+(assuming they weren't disabled in configure) with: `make check`. Further details on running\n+and extending unit tests can be found in [/src/test/README.md](/src/test/README.md).\n \n-There are also [regression and integration tests](/qa) of the RPC interface, written\n+There are also [regression and integration tests](/test), written\n in Python, that are run automatically on the build server.\n-These tests can be run with: `qa/pull-tester/rpc-tests.py`\n+These tests can be run (if the [test dependencies](/test) are installed) with: `test/functional/test_runner.py`\n \n-The Travis CI system makes sure that every pull request is built for Windows\n-and Linux, OSX, and that unit and sanity tests are automatically run.\n+The Travis CI system makes sure that every pull request is built for Windows, Linux, and OS X, and that unit/sanity tests are run automatically.\n \n ### Manual Quality Assurance (QA) Testing\n "
      },
      {
        "sha": "27417daf7691513da832eae5541b6c5bee091551",
        "filename": "autogen.sh",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,9 +1,15 @@\n #!/bin/sh\n+# Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n set -e\n srcdir=\"$(dirname $0)\"\n cd \"$srcdir\"\n if [ -z ${LIBTOOLIZE} ] && GLIBTOOLIZE=\"`which glibtoolize 2>/dev/null`\"; then\n   LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n   export LIBTOOLIZE\n fi\n+which autoreconf >/dev/null || \\\n+  (echo \"configuration failed, please install autoconf first\" && exit 1)\n autoreconf --install --force --warnings=all"
      },
      {
        "sha": "650c94fa64752a362a34eb6d489c194255ecfc51",
        "filename": "build-aux/m4/ax_boost_base.m4",
        "status": "modified",
        "additions": 14,
        "deletions": 4,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_base.m4?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -33,7 +33,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 23\n+#serial 27\n \n AC_DEFUN([AX_BOOST_BASE],\n [\n@@ -95,7 +95,7 @@ if test \"x$want_boost\" = \"xyes\"; then\n       x86_64)\n         libsubdirs=\"lib64 libx32 lib lib64\"\n         ;;\n-      ppc64|s390x|sparc64|aarch64)\n+      ppc64|s390x|sparc64|aarch64|ppc64le)\n         libsubdirs=\"lib64 lib lib64\"\n         ;;\n     esac\n@@ -170,7 +170,7 @@ if test \"x$want_boost\" = \"xyes\"; then\n         AC_MSG_RESULT(yes)\n     succeeded=yes\n     found_system=yes\n-        ],[:\n+        ],[\n         ])\n     AC_LANG_POP([C++])\n \n@@ -179,6 +179,10 @@ if test \"x$want_boost\" = \"xyes\"; then\n     dnl if we found no boost with system layout we search for boost libraries\n     dnl built and installed without the --layout=system option or for a staged(not installed) version\n     if test \"x$succeeded\" != \"xyes\"; then\n+        CPPFLAGS=\"$CPPFLAGS_SAVED\"\n+        LDFLAGS=\"$LDFLAGS_SAVED\"\n+        BOOST_CPPFLAGS=\n+        BOOST_LDFLAGS=\n         _version=0\n         if test \"$ac_boost_path\" != \"\"; then\n             if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n@@ -191,6 +195,12 @@ if test \"x$want_boost\" = \"xyes\"; then\n                     VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n                     BOOST_CPPFLAGS=\"-I$ac_boost_path/include/boost-$VERSION_UNDERSCORE\"\n                 done\n+                dnl if nothing found search for layout used in Windows distributions\n+                if test -z \"$BOOST_CPPFLAGS\"; then\n+                    if test -d \"$ac_boost_path/boost\" && test -r \"$ac_boost_path/boost\"; then\n+                        BOOST_CPPFLAGS=\"-I$ac_boost_path\"\n+                    fi\n+                fi\n             fi\n         else\n             if test \"$cross_compiling\" != yes; then\n@@ -253,7 +263,7 @@ if test \"x$want_boost\" = \"xyes\"; then\n             AC_MSG_RESULT(yes)\n         succeeded=yes\n         found_system=yes\n-            ],[:\n+            ],[\n             ])\n         AC_LANG_POP([C++])\n     fi"
      },
      {
        "sha": "2bdb5937162e4207cf0f96586bc343653ae30da1",
        "filename": "build-aux/m4/ax_boost_program_options.m4",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/ax_boost_program_options.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/ax_boost_program_options.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_program_options.m4?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -29,7 +29,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 22\n+#serial 24\n \n AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n [\n@@ -63,9 +63,9 @@ AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n \t\tAC_CACHE_CHECK([whether the Boost::Program_Options library is available],\n \t\t\t\t\t   ax_cv_boost_program_options,\n \t\t\t\t\t   [AC_LANG_PUSH(C++)\n-\t\t\t\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/program_options.hpp>\n+\t\t\t\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/program_options/errors.hpp>\n                                                           ]],\n-                                  [[boost::program_options::options_description generic(\"Generic options\");\n+                                  [[boost::program_options::error err(\"Error message\");\n                                    return 0;]])],\n                            ax_cv_boost_program_options=yes, ax_cv_boost_program_options=no)\n \t\t\t\t\tAC_LANG_POP([C++])\n@@ -74,7 +74,6 @@ AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n \t\t\t\tAC_DEFINE(HAVE_BOOST_PROGRAM_OPTIONS,,[define if the Boost::PROGRAM_OPTIONS library is available])\n                   BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n                 if test \"x$ax_boost_user_program_options_lib\" = \"x\"; then\n-                ax_lib=\n                 for libextension in `ls $BOOSTLIBDIR/libboost_program_options*.so* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.so.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.dylib* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.dylib.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.a.*$;\\1;'` ; do\n                      ax_lib=${libextension}\n \t\t\t\t    AC_CHECK_LIB($ax_lib, exit,"
      },
      {
        "sha": "1c05450cbe1d5cc11a257f5c02284900890a973e",
        "filename": "build-aux/m4/ax_boost_system.m4",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_system.m4?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -31,7 +31,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 17\n+#serial 18\n \n AC_DEFUN([AX_BOOST_SYSTEM],\n [\n@@ -68,9 +68,10 @@ AC_DEFUN([AX_BOOST_SYSTEM],\n \t\t\t\t\t   ax_cv_boost_system,\n         [AC_LANG_PUSH([C++])\n \t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\t\t\t CXXFLAGS=\n \n \t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/system/error_code.hpp>]],\n-                                   [[boost::system::system_category]])],\n+\t\t\t\t    [[boost::system::error_category *a = 0;]])],\n                    ax_cv_boost_system=yes, ax_cv_boost_system=no)\n \t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n              AC_LANG_POP([C++])"
      },
      {
        "sha": "ca3639715e7243fa4343eb2e7f3de53927cc9d4a",
        "filename": "build-aux/m4/ax_check_compile_flag.m4",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/ax_check_compile_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/ax_check_compile_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_compile_flag.m4?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -4,7 +4,7 @@\n #\n # SYNOPSIS\n #\n-#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n #\n # DESCRIPTION\n #\n@@ -19,6 +19,8 @@\n #   the flags: \"CFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to\n #   force the compiler to issue an error when a bad flag is given.\n #\n+#   INPUT gives an alternative input source to AC_COMPILE_IFELSE.\n+#\n #   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n #   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.\n #\n@@ -53,19 +55,19 @@\n #   modified version of the Autoconf Macro, you may extend this special\n #   exception to the GPL to apply to your modified version as well.\n \n-#serial 2\n+#serial 4\n \n AC_DEFUN([AX_CHECK_COMPILE_FLAG],\n-[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX\n+[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl\n AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [\n   ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS\n   _AC_LANG_PREFIX[]FLAGS=\"$[]_AC_LANG_PREFIX[]FLAGS $4 $1\"\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM()],\n+  AC_COMPILE_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n     [AS_VAR_SET(CACHEVAR,[yes])],\n     [AS_VAR_SET(CACHEVAR,[no])])\n   _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])\n-AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+AS_VAR_IF(CACHEVAR,yes,\n   [m4_default([$2], :)],\n   [m4_default([$3], :)])\n AS_VAR_POPDEF([CACHEVAR])dnl"
      },
      {
        "sha": "eb01a6ce135eca0fdde834b00c21b12202b09f3d",
        "filename": "build-aux/m4/ax_check_link_flag.m4",
        "status": "modified",
        "additions": 8,
        "deletions": 5,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/ax_check_link_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/ax_check_link_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_link_flag.m4?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -4,7 +4,7 @@\n #\n # SYNOPSIS\n #\n-#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n #\n # DESCRIPTION\n #\n@@ -19,6 +19,8 @@\n #   EXTRA-FLAGS FLAG\".  This can for example be used to force the linker to\n #   issue an error when a bad flag is given.\n #\n+#   INPUT gives an alternative input source to AC_LINK_IFELSE.\n+#\n #   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n #   macro in sync with AX_CHECK_{PREPROC,COMPILE}_FLAG.\n #\n@@ -53,18 +55,19 @@\n #   modified version of the Autoconf Macro, you may extend this special\n #   exception to the GPL to apply to your modified version as well.\n \n-#serial 2\n+#serial 4\n \n AC_DEFUN([AX_CHECK_LINK_FLAG],\n-[AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl\n+[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl\n AC_CACHE_CHECK([whether the linker accepts $1], CACHEVAR, [\n   ax_check_save_flags=$LDFLAGS\n   LDFLAGS=\"$LDFLAGS $4 $1\"\n-  AC_LINK_IFELSE([AC_LANG_PROGRAM()],\n+  AC_LINK_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n     [AS_VAR_SET(CACHEVAR,[yes])],\n     [AS_VAR_SET(CACHEVAR,[no])])\n   LDFLAGS=$ax_check_save_flags])\n-AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+AS_VAR_IF(CACHEVAR,yes,\n   [m4_default([$2], :)],\n   [m4_default([$3], :)])\n AS_VAR_POPDEF([CACHEVAR])dnl"
      },
      {
        "sha": "ca1d5ee2b6d1ae107504d4ab433bc5f6fd629f61",
        "filename": "build-aux/m4/ax_check_preproc_flag.m4",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/ax_check_preproc_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/ax_check_preproc_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_preproc_flag.m4?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -4,7 +4,7 @@\n #\n # SYNOPSIS\n #\n-#   AX_CHECK_PREPROC_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#   AX_CHECK_PREPROC_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n #\n # DESCRIPTION\n #\n@@ -19,6 +19,8 @@\n #   \"CPPFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to force the\n #   preprocessor to issue an error when a bad flag is given.\n #\n+#   INPUT gives an alternative input source to AC_PREPROC_IFELSE.\n+#\n #   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n #   macro in sync with AX_CHECK_{COMPILE,LINK}_FLAG.\n #\n@@ -53,19 +55,19 @@\n #   modified version of the Autoconf Macro, you may extend this special\n #   exception to the GPL to apply to your modified version as well.\n \n-#serial 2\n+#serial 4\n \n AC_DEFUN([AX_CHECK_PREPROC_FLAG],\n-[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX\n+[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]cppflags_$4_$1])dnl\n AC_CACHE_CHECK([whether _AC_LANG preprocessor accepts $1], CACHEVAR, [\n   ax_check_save_flags=$CPPFLAGS\n   CPPFLAGS=\"$CPPFLAGS $4 $1\"\n-  AC_PREPROC_IFELSE([AC_LANG_PROGRAM()],\n+  AC_PREPROC_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n     [AS_VAR_SET(CACHEVAR,[yes])],\n     [AS_VAR_SET(CACHEVAR,[no])])\n   CPPFLAGS=$ax_check_save_flags])\n-AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+AS_VAR_IF(CACHEVAR,yes,\n   [m4_default([$2], :)],\n   [m4_default([$3], :)])\n AS_VAR_POPDEF([CACHEVAR])dnl"
      },
      {
        "sha": "f147cee3b117f80b22544976385e267b26f46dd9",
        "filename": "build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "status": "added",
        "additions": 568,
        "deletions": 0,
        "changes": 568,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_cxx_compile_stdcxx.m4?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,568 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_cxx_compile_stdcxx.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CXX_COMPILE_STDCXX(VERSION, [ext|noext], [mandatory|optional])\n+#\n+# DESCRIPTION\n+#\n+#   Check for baseline language coverage in the compiler for the specified\n+#   version of the C++ standard.  If necessary, add switches to CXX and\n+#   CXXCPP to enable support.  VERSION may be '11' (for the C++11 standard)\n+#   or '14' (for the C++14 standard).\n+#\n+#   The second argument, if specified, indicates whether you insist on an\n+#   extended mode (e.g. -std=gnu++11) or a strict conformance mode (e.g.\n+#   -std=c++11).  If neither is specified, you get whatever works, with\n+#   preference for an extended mode.\n+#\n+#   The third argument, if specified 'mandatory' or if left unspecified,\n+#   indicates that baseline support for the specified C++ standard is\n+#   required and that the macro should error out if no mode with that\n+#   support is found.  If specified 'optional', then configuration proceeds\n+#   regardless, after defining HAVE_CXX${VERSION} if and only if a\n+#   supporting mode is found.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Benjamin Kosnik <bkoz@redhat.com>\n+#   Copyright (c) 2012 Zack Weinberg <zackw@panix.com>\n+#   Copyright (c) 2013 Roy Stogner <roystgnr@ices.utexas.edu>\n+#   Copyright (c) 2014, 2015 Google Inc.; contributed by Alexey Sokolov <sokolov@google.com>\n+#   Copyright (c) 2015 Paul Norman <penorman@mac.com>\n+#   Copyright (c) 2015 Moritz Klammler <moritz@klammler.eu>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved.  This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 4\n+\n+dnl  This macro is based on the code from the AX_CXX_COMPILE_STDCXX_11 macro\n+dnl  (serial version number 13).\n+\n+AC_DEFUN([AX_CXX_COMPILE_STDCXX], [dnl\n+  m4_if([$1], [11], [],\n+        [$1], [14], [],\n+        [$1], [17], [m4_fatal([support for C++17 not yet implemented in AX_CXX_COMPILE_STDCXX])],\n+        [m4_fatal([invalid first argument `$1' to AX_CXX_COMPILE_STDCXX])])dnl\n+  m4_if([$2], [], [],\n+        [$2], [ext], [],\n+        [$2], [noext], [],\n+        [m4_fatal([invalid second argument `$2' to AX_CXX_COMPILE_STDCXX])])dnl\n+  m4_if([$3], [], [ax_cxx_compile_cxx$1_required=true],\n+        [$3], [mandatory], [ax_cxx_compile_cxx$1_required=true],\n+        [$3], [optional], [ax_cxx_compile_cxx$1_required=false],\n+        [m4_fatal([invalid third argument `$3' to AX_CXX_COMPILE_STDCXX])])\n+  m4_if([$4], [], [ax_cxx_compile_cxx$1_try_default=true],\n+        [$4], [default], [ax_cxx_compile_cxx$1_try_default=true],\n+        [$4], [nodefault], [ax_cxx_compile_cxx$1_try_default=false],\n+        [m4_fatal([invalid fourth argument `$4' to AX_CXX_COMPILE_STDCXX])])\n+  AC_LANG_PUSH([C++])dnl\n+  ac_success=no\n+\n+  m4_if([$4], [nodefault], [], [dnl\n+  AC_CACHE_CHECK(whether $CXX supports C++$1 features by default,\n+  ax_cv_cxx_compile_cxx$1,\n+  [AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n+    [ax_cv_cxx_compile_cxx$1=yes],\n+    [ax_cv_cxx_compile_cxx$1=no])])\n+  if test x$ax_cv_cxx_compile_cxx$1 = xyes; then\n+    ac_success=yes\n+  fi])\n+\n+  m4_if([$2], [noext], [], [dnl\n+  if test x$ac_success = xno; then\n+    for switch in -std=gnu++$1 -std=gnu++0x; do\n+      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n+      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n+                     $cachevar,\n+        [ac_save_CXX=\"$CXX\"\n+         CXX=\"$CXX $switch\"\n+         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n+          [eval $cachevar=yes],\n+          [eval $cachevar=no])\n+         CXX=\"$ac_save_CXX\"])\n+      if eval test x\\$$cachevar = xyes; then\n+        CXX=\"$CXX $switch\"\n+        if test -n \"$CXXCPP\" ; then\n+          CXXCPP=\"$CXXCPP $switch\"\n+        fi\n+        ac_success=yes\n+        break\n+      fi\n+    done\n+  fi])\n+\n+  m4_if([$2], [ext], [], [dnl\n+  if test x$ac_success = xno; then\n+    dnl HP's aCC needs +std=c++11 according to:\n+    dnl http://h21007.www2.hp.com/portal/download/files/unprot/aCxx/PDF_Release_Notes/769149-001.pdf\n+    dnl Cray's crayCC needs \"-h std=c++11\"\n+    for switch in -std=c++$1 -std=c++0x +std=c++$1 \"-h std=c++$1\"; do\n+      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n+      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n+                     $cachevar,\n+        [ac_save_CXX=\"$CXX\"\n+         CXX=\"$CXX $switch\"\n+         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n+          [eval $cachevar=yes],\n+          [eval $cachevar=no])\n+         CXX=\"$ac_save_CXX\"])\n+      if eval test x\\$$cachevar = xyes; then\n+        CXX=\"$CXX $switch\"\n+        if test -n \"$CXXCPP\" ; then\n+          CXXCPP=\"$CXXCPP $switch\"\n+        fi\n+        ac_success=yes\n+        break\n+      fi\n+    done\n+  fi])\n+  AC_LANG_POP([C++])\n+  if test x$ax_cxx_compile_cxx$1_required = xtrue; then\n+    if test x$ac_success = xno; then\n+      AC_MSG_ERROR([*** A compiler with support for C++$1 language features is required.])\n+    fi\n+  fi\n+  if test x$ac_success = xno; then\n+    HAVE_CXX$1=0\n+    AC_MSG_NOTICE([No compiler with C++$1 support was found])\n+  else\n+    HAVE_CXX$1=1\n+    AC_DEFINE(HAVE_CXX$1,1,\n+              [define if the compiler supports basic C++$1 syntax])\n+  fi\n+  AC_SUBST(HAVE_CXX$1)\n+])\n+\n+\n+dnl  Test body for checking C++11 support\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_11],\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n+)\n+\n+\n+dnl  Test body for checking C++14 support\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_14],\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_14\n+)\n+\n+\n+dnl  Tests for new features in C++11\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_11], [[\n+\n+// If the compiler admits that it is not ready for C++11, why torture it?\n+// Hopefully, this will speed up the test.\n+\n+#ifndef __cplusplus\n+\n+#error \"This is not a C++ compiler\"\n+\n+#elif __cplusplus < 201103L\n+\n+#error \"This is not a C++11 compiler\"\n+\n+#else\n+\n+namespace cxx11\n+{\n+\n+  namespace test_static_assert\n+  {\n+\n+    template <typename T>\n+    struct check\n+    {\n+      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n+    };\n+\n+  }\n+\n+  namespace test_final_override\n+  {\n+\n+    struct Base\n+    {\n+      virtual void f() {}\n+    };\n+\n+    struct Derived : public Base\n+    {\n+      virtual void f() override {}\n+    };\n+\n+  }\n+\n+  namespace test_double_right_angle_brackets\n+  {\n+\n+    template < typename T >\n+    struct check {};\n+\n+    typedef check<void> single_type;\n+    typedef check<check<void>> double_type;\n+    typedef check<check<check<void>>> triple_type;\n+    typedef check<check<check<check<void>>>> quadruple_type;\n+\n+  }\n+\n+  namespace test_decltype\n+  {\n+\n+    int\n+    f()\n+    {\n+      int a = 1;\n+      decltype(a) b = 2;\n+      return a + b;\n+    }\n+\n+  }\n+\n+  namespace test_type_deduction\n+  {\n+\n+    template < typename T1, typename T2 >\n+    struct is_same\n+    {\n+      static const bool value = false;\n+    };\n+\n+    template < typename T >\n+    struct is_same<T, T>\n+    {\n+      static const bool value = true;\n+    };\n+\n+    template < typename T1, typename T2 >\n+    auto\n+    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n+    {\n+      return a1 + a2;\n+    }\n+\n+    int\n+    test(const int c, volatile int v)\n+    {\n+      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n+      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n+      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n+      auto ac = c;\n+      auto av = v;\n+      auto sumi = ac + av + 'x';\n+      auto sumf = ac + av + 1.0;\n+      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n+      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n+      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n+      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n+      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n+      return (sumf > 0.0) ? sumi : add(c, v);\n+    }\n+\n+  }\n+\n+  namespace test_noexcept\n+  {\n+\n+    int f() { return 0; }\n+    int g() noexcept { return 0; }\n+\n+    static_assert(noexcept(f()) == false, \"\");\n+    static_assert(noexcept(g()) == true, \"\");\n+\n+  }\n+\n+  namespace test_constexpr\n+  {\n+\n+    template < typename CharT >\n+    unsigned long constexpr\n+    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n+    {\n+      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n+    }\n+\n+    template < typename CharT >\n+    unsigned long constexpr\n+    strlen_c(const CharT *const s) noexcept\n+    {\n+      return strlen_c_r(s, 0UL);\n+    }\n+\n+    static_assert(strlen_c(\"\") == 0UL, \"\");\n+    static_assert(strlen_c(\"1\") == 1UL, \"\");\n+    static_assert(strlen_c(\"example\") == 7UL, \"\");\n+    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n+\n+  }\n+\n+  namespace test_rvalue_references\n+  {\n+\n+    template < int N >\n+    struct answer\n+    {\n+      static constexpr int value = N;\n+    };\n+\n+    answer<1> f(int&)       { return answer<1>(); }\n+    answer<2> f(const int&) { return answer<2>(); }\n+    answer<3> f(int&&)      { return answer<3>(); }\n+\n+    void\n+    test()\n+    {\n+      int i = 0;\n+      const int c = 0;\n+      static_assert(decltype(f(i))::value == 1, \"\");\n+      static_assert(decltype(f(c))::value == 2, \"\");\n+      static_assert(decltype(f(0))::value == 3, \"\");\n+    }\n+\n+  }\n+\n+  namespace test_uniform_initialization\n+  {\n+\n+    struct test\n+    {\n+      static const int zero {};\n+      static const int one {1};\n+    };\n+\n+    static_assert(test::zero == 0, \"\");\n+    static_assert(test::one == 1, \"\");\n+\n+  }\n+\n+  namespace test_lambdas\n+  {\n+\n+    void\n+    test1()\n+    {\n+      auto lambda1 = [](){};\n+      auto lambda2 = lambda1;\n+      lambda1();\n+      lambda2();\n+    }\n+\n+    int\n+    test2()\n+    {\n+      auto a = [](int i, int j){ return i + j; }(1, 2);\n+      auto b = []() -> int { return '0'; }();\n+      auto c = [=](){ return a + b; }();\n+      auto d = [&](){ return c; }();\n+      auto e = [a, &b](int x) mutable {\n+        const auto identity = [](int y){ return y; };\n+        for (auto i = 0; i < a; ++i)\n+          a += b--;\n+        return x + identity(a + b);\n+      }(0);\n+      return a + b + c + d + e;\n+    }\n+\n+    int\n+    test3()\n+    {\n+      const auto nullary = [](){ return 0; };\n+      const auto unary = [](int x){ return x; };\n+      using nullary_t = decltype(nullary);\n+      using unary_t = decltype(unary);\n+      const auto higher1st = [](nullary_t f){ return f(); };\n+      const auto higher2nd = [unary](nullary_t f1){\n+        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n+      };\n+      return higher1st(nullary) + higher2nd(nullary)(unary);\n+    }\n+\n+  }\n+\n+  namespace test_variadic_templates\n+  {\n+\n+    template <int...>\n+    struct sum;\n+\n+    template <int N0, int... N1toN>\n+    struct sum<N0, N1toN...>\n+    {\n+      static constexpr auto value = N0 + sum<N1toN...>::value;\n+    };\n+\n+    template <>\n+    struct sum<>\n+    {\n+      static constexpr auto value = 0;\n+    };\n+\n+    static_assert(sum<>::value == 0, \"\");\n+    static_assert(sum<1>::value == 1, \"\");\n+    static_assert(sum<23>::value == 23, \"\");\n+    static_assert(sum<1, 2>::value == 3, \"\");\n+    static_assert(sum<5, 5, 11>::value == 21, \"\");\n+    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n+\n+  }\n+\n+  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n+  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n+  // because of this.\n+  namespace test_template_alias_sfinae\n+  {\n+\n+    struct foo {};\n+\n+    template<typename T>\n+    using member = typename T::member_type;\n+\n+    template<typename T>\n+    void func(...) {}\n+\n+    template<typename T>\n+    void func(member<T>*) {}\n+\n+    void test();\n+\n+    void test() { func<foo>(0); }\n+\n+  }\n+\n+}  // namespace cxx11\n+\n+#endif  // __cplusplus >= 201103L\n+\n+]])\n+\n+\n+dnl  Tests for new features in C++14\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_14], [[\n+\n+// If the compiler admits that it is not ready for C++14, why torture it?\n+// Hopefully, this will speed up the test.\n+\n+#ifndef __cplusplus\n+\n+#error \"This is not a C++ compiler\"\n+\n+#elif __cplusplus < 201402L\n+\n+#error \"This is not a C++14 compiler\"\n+\n+#else\n+\n+namespace cxx14\n+{\n+\n+  namespace test_polymorphic_lambdas\n+  {\n+\n+    int\n+    test()\n+    {\n+      const auto lambda = [](auto&&... args){\n+        const auto istiny = [](auto x){\n+          return (sizeof(x) == 1UL) ? 1 : 0;\n+        };\n+        const int aretiny[] = { istiny(args)... };\n+        return aretiny[0];\n+      };\n+      return lambda(1, 1L, 1.0f, '1');\n+    }\n+\n+  }\n+\n+  namespace test_binary_literals\n+  {\n+\n+    constexpr auto ivii = 0b0000000000101010;\n+    static_assert(ivii == 42, \"wrong value\");\n+\n+  }\n+\n+  namespace test_generalized_constexpr\n+  {\n+\n+    template < typename CharT >\n+    constexpr unsigned long\n+    strlen_c(const CharT *const s) noexcept\n+    {\n+      auto length = 0UL;\n+      for (auto p = s; *p; ++p)\n+        ++length;\n+      return length;\n+    }\n+\n+    static_assert(strlen_c(\"\") == 0UL, \"\");\n+    static_assert(strlen_c(\"x\") == 1UL, \"\");\n+    static_assert(strlen_c(\"test\") == 4UL, \"\");\n+    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n+\n+  }\n+\n+  namespace test_lambda_init_capture\n+  {\n+\n+    int\n+    test()\n+    {\n+      auto x = 0;\n+      const auto lambda1 = [a = x](int b){ return a + b; };\n+      const auto lambda2 = [a = lambda1(x)](){ return a; };\n+      return lambda2();\n+    }\n+\n+  }\n+\n+  namespace test_digit_seperators\n+  {\n+\n+    constexpr auto ten_million = 100'000'000;\n+    static_assert(ten_million == 100000000, \"\");\n+\n+  }\n+\n+  namespace test_return_type_deduction\n+  {\n+\n+    auto f(int& x) { return x; }\n+    decltype(auto) g(int& x) { return x; }\n+\n+    template < typename T1, typename T2 >\n+    struct is_same\n+    {\n+      static constexpr auto value = false;\n+    };\n+\n+    template < typename T >\n+    struct is_same<T, T>\n+    {\n+      static constexpr auto value = true;\n+    };\n+\n+    int\n+    test()\n+    {\n+      auto x = 0;\n+      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n+      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n+      return x;\n+    }\n+\n+  }\n+\n+}  // namespace cxx14\n+\n+#endif  // __cplusplus >= 201402L\n+\n+]])"
      },
      {
        "sha": "c788ca9bd435fbfe4e1642281aabd7f9492786ff",
        "filename": "build-aux/m4/ax_gcc_func_attribute.m4",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/ax_gcc_func_attribute.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/ax_gcc_func_attribute.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_gcc_func_attribute.m4?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -31,6 +31,7 @@\n #    cold\n #    const\n #    constructor\n+#    constructor_priority for constructor attribute with priority\n #    deprecated\n #    destructor\n #    dllexport\n@@ -73,7 +74,7 @@\n #   and this notice are preserved.  This file is offered as-is, without any\n #   warranty.\n \n-#serial 2\n+#serial 3\n \n AC_DEFUN([AX_GCC_FUNC_ATTRIBUTE], [\n     AS_VAR_PUSHDEF([ac_var], [ax_cv_have_func_attribute_$1])\n@@ -103,6 +104,9 @@ AC_DEFUN([AX_GCC_FUNC_ATTRIBUTE], [\n                 [const], [\n                     int foo( void ) __attribute__(($1));\n                 ],\n+                [constructor_priority], [\n+                    int foo( void ) __attribute__((__constructor__(65535/2)));\n+                ],\n                 [constructor], [\n                     int foo( void ) __attribute__(($1));\n                 ],\n@@ -180,6 +184,8 @@ AC_DEFUN([AX_GCC_FUNC_ATTRIBUTE], [\n                 [visibility], [\n                     int foo_def( void ) __attribute__(($1(\"default\")));\n                     int foo_hid( void ) __attribute__(($1(\"hidden\")));\n+                    int foo_int( void ) __attribute__(($1(\"internal\")));\n+                    int foo_pro( void ) __attribute__(($1(\"protected\")));\n                 ],\n                 [warning], [\n                     int foo( void ) __attribute__(($1(\"\")));"
      },
      {
        "sha": "4c4051ea376f720faf21a4705c66604fe444c958",
        "filename": "build-aux/m4/ax_pthread.m4",
        "status": "modified",
        "additions": 269,
        "deletions": 116,
        "changes": 385,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/ax_pthread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/ax_pthread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_pthread.m4?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -19,19 +19,19 @@\n #   is necessary on AIX to use the special cc_r compiler alias.)\n #\n #   NOTE: You are assumed to not only compile your program with these flags,\n-#   but also link it with them as well. e.g. you should link with\n+#   but also to link with them as well. For example, you might link with\n #   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n #\n-#   If you are only building threads programs, you may wish to use these\n+#   If you are only building threaded programs, you may wish to use these\n #   variables in your default LIBS, CFLAGS, and CC:\n #\n #     LIBS=\"$PTHREAD_LIBS $LIBS\"\n #     CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n #     CC=\"$PTHREAD_CC\"\n #\n #   In addition, if the PTHREAD_CREATE_JOINABLE thread-attribute constant\n-#   has a nonstandard name, defines PTHREAD_CREATE_JOINABLE to that name\n-#   (e.g. PTHREAD_CREATE_UNDETACHED on AIX).\n+#   has a nonstandard name, this macro defines PTHREAD_CREATE_JOINABLE to\n+#   that name (e.g. PTHREAD_CREATE_UNDETACHED on AIX).\n #\n #   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the\n #   PTHREAD_PRIO_INHERIT symbol is defined when compiling with\n@@ -82,35 +82,40 @@\n #   modified version of the Autoconf Macro, you may extend this special\n #   exception to the GPL to apply to your modified version as well.\n \n-#serial 21\n+#serial 23\n \n AU_ALIAS([ACX_PTHREAD], [AX_PTHREAD])\n AC_DEFUN([AX_PTHREAD], [\n AC_REQUIRE([AC_CANONICAL_HOST])\n+AC_REQUIRE([AC_PROG_CC])\n+AC_REQUIRE([AC_PROG_SED])\n AC_LANG_PUSH([C])\n ax_pthread_ok=no\n \n # We used to check for pthread.h first, but this fails if pthread.h\n-# requires special compiler flags (e.g. on True64 or Sequent).\n+# requires special compiler flags (e.g. on Tru64 or Sequent).\n # It gets checked for in the link test anyway.\n \n # First of all, check if the user has set any of the PTHREAD_LIBS,\n # etcetera environment variables, and if threads linking works using\n # them:\n-if test x\"$PTHREAD_LIBS$PTHREAD_CFLAGS\" != x; then\n-        save_CFLAGS=\"$CFLAGS\"\n+if test \"x$PTHREAD_CFLAGS$PTHREAD_LIBS\" != \"x\"; then\n+        ax_pthread_save_CC=\"$CC\"\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n+        AS_IF([test \"x$PTHREAD_CC\" != \"x\"], [CC=\"$PTHREAD_CC\"])\n         CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-        save_LIBS=\"$LIBS\"\n         LIBS=\"$PTHREAD_LIBS $LIBS\"\n-        AC_MSG_CHECKING([for pthread_join in LIBS=$PTHREAD_LIBS with CFLAGS=$PTHREAD_CFLAGS])\n-        AC_TRY_LINK_FUNC([pthread_join], [ax_pthread_ok=yes])\n+        AC_MSG_CHECKING([for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS])\n+        AC_LINK_IFELSE([AC_LANG_CALL([], [pthread_join])], [ax_pthread_ok=yes])\n         AC_MSG_RESULT([$ax_pthread_ok])\n-        if test x\"$ax_pthread_ok\" = xno; then\n+        if test \"x$ax_pthread_ok\" = \"xno\"; then\n                 PTHREAD_LIBS=\"\"\n                 PTHREAD_CFLAGS=\"\"\n         fi\n-        LIBS=\"$save_LIBS\"\n-        CFLAGS=\"$save_CFLAGS\"\n+        CC=\"$ax_pthread_save_CC\"\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n fi\n \n # We must check for the threads library under a number of different\n@@ -123,7 +128,7 @@ fi\n # which indicates that we try without any flags at all, and \"pthread-config\"\n # which is a program returning the flags for the Pth emulation library.\n \n-ax_pthread_flags=\"pthreads none -Kthread -kthread lthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n+ax_pthread_flags=\"pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n \n # The ordering *is* (sometimes) important.  Some notes on the\n # individual items follow:\n@@ -132,82 +137,225 @@ ax_pthread_flags=\"pthreads none -Kthread -kthread lthread -pthread -pthreads -mt\n # none: in case threads are in libc; should be tried before -Kthread and\n #       other compiler flags to prevent continual compiler warnings\n # -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n-# -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n-# lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n-# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads)\n-# -pthreads: Solaris/gcc\n-# -mthreads: Mingw32/gcc, Lynx/gcc\n+# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads), Tru64\n+#           (Note: HP C rejects this with \"bad form for `-t' option\")\n+# -pthreads: Solaris/gcc (Note: HP C also rejects)\n # -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n-#      doesn't hurt to check since this sometimes defines pthreads too;\n-#      also defines -D_REENTRANT)\n-#      ... -mt is also the pthreads flag for HP/aCC\n+#      doesn't hurt to check since this sometimes defines pthreads and\n+#      -D_REENTRANT too), HP C (must be checked before -lpthread, which\n+#      is present but should not be used directly; and before -mthreads,\n+#      because the compiler interprets this as \"-mt\" + \"-hreads\")\n+# -mthreads: Mingw32/gcc, Lynx/gcc\n # pthread: Linux, etcetera\n # --thread-safe: KAI C++\n # pthread-config: use pthread-config program (for GNU Pth library)\n \n-case ${host_os} in\n+case $host_os in\n+\n+        freebsd*)\n+\n+        # -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n+        # lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n+\n+        ax_pthread_flags=\"-kthread lthread $ax_pthread_flags\"\n+        ;;\n+\n+        hpux*)\n+\n+        # From the cc(1) man page: \"[-mt] Sets various -D flags to enable\n+        # multi-threading and also sets -lpthread.\"\n+\n+        ax_pthread_flags=\"-mt -pthread pthread $ax_pthread_flags\"\n+        ;;\n+\n+        openedition*)\n+\n+        # IBM z/OS requires a feature-test macro to be defined in order to\n+        # enable POSIX threads at all, so give the user a hint if this is\n+        # not set. (We don't define these ourselves, as they can affect\n+        # other portions of the system API in unpredictable ways.)\n+\n+        AC_EGREP_CPP([AX_PTHREAD_ZOS_MISSING],\n+            [\n+#            if !defined(_OPEN_THREADS) && !defined(_UNIX03_THREADS)\n+             AX_PTHREAD_ZOS_MISSING\n+#            endif\n+            ],\n+            [AC_MSG_WARN([IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.])])\n+        ;;\n+\n         solaris*)\n \n         # On Solaris (at least, for some versions), libc contains stubbed\n         # (non-functional) versions of the pthreads routines, so link-based\n-        # tests will erroneously succeed.  (We need to link with -pthreads/-mt/\n-        # -lpthread.)  (The stubs are missing pthread_cleanup_push, or rather\n-        # a function called by this macro, so we could check for that, but\n-        # who knows whether they'll stub that too in a future libc.)  So,\n-        # we'll just look for -pthreads and -lpthread first:\n+        # tests will erroneously succeed. (N.B.: The stubs are missing\n+        # pthread_cleanup_push, or rather a function called by this macro,\n+        # so we could check for that, but who knows whether they'll stub\n+        # that too in a future libc.)  So we'll check first for the\n+        # standard Solaris way of linking pthreads (-mt -lpthread).\n+\n+        ax_pthread_flags=\"-mt,pthread pthread $ax_pthread_flags\"\n+        ;;\n+esac\n+\n+# GCC generally uses -pthread, or -pthreads on some platforms (e.g. SPARC)\n \n-        ax_pthread_flags=\"-pthreads pthread -mt -pthread $ax_pthread_flags\"\n+AS_IF([test \"x$GCC\" = \"xyes\"],\n+      [ax_pthread_flags=\"-pthread -pthreads $ax_pthread_flags\"])\n+\n+# The presence of a feature test macro requesting re-entrant function\n+# definitions is, on some systems, a strong hint that pthreads support is\n+# correctly enabled\n+\n+case $host_os in\n+        darwin* | hpux* | linux* | osf* | solaris*)\n+        ax_pthread_check_macro=\"_REENTRANT\"\n         ;;\n \n-        darwin*)\n-        ax_pthread_flags=\"-pthread $ax_pthread_flags\"\n+        aix*)\n+        ax_pthread_check_macro=\"_THREAD_SAFE\"\n+        ;;\n+\n+        *)\n+        ax_pthread_check_macro=\"--\"\n         ;;\n esac\n+AS_IF([test \"x$ax_pthread_check_macro\" = \"x--\"],\n+      [ax_pthread_check_cond=0],\n+      [ax_pthread_check_cond=\"!defined($ax_pthread_check_macro)\"])\n+\n+# Are we compiling with Clang?\n+\n+AC_CACHE_CHECK([whether $CC is Clang],\n+    [ax_cv_PTHREAD_CLANG],\n+    [ax_cv_PTHREAD_CLANG=no\n+     # Note that Autoconf sets GCC=yes for Clang as well as GCC\n+     if test \"x$GCC\" = \"xyes\"; then\n+        AC_EGREP_CPP([AX_PTHREAD_CC_IS_CLANG],\n+            [/* Note: Clang 2.7 lacks __clang_[a-z]+__ */\n+#            if defined(__clang__) && defined(__llvm__)\n+             AX_PTHREAD_CC_IS_CLANG\n+#            endif\n+            ],\n+            [ax_cv_PTHREAD_CLANG=yes])\n+     fi\n+    ])\n+ax_pthread_clang=\"$ax_cv_PTHREAD_CLANG\"\n+\n+ax_pthread_clang_warning=no\n+\n+# Clang needs special handling, because older versions handle the -pthread\n+# option in a rather... idiosyncratic way\n+\n+if test \"x$ax_pthread_clang\" = \"xyes\"; then\n+\n+        # Clang takes -pthread; it has never supported any other flag\n+\n+        # (Note 1: This will need to be revisited if a system that Clang\n+        # supports has POSIX threads in a separate library.  This tends not\n+        # to be the way of modern systems, but it's conceivable.)\n+\n+        # (Note 2: On some systems, notably Darwin, -pthread is not needed\n+        # to get POSIX threads support; the API is always present and\n+        # active.  We could reasonably leave PTHREAD_CFLAGS empty.  But\n+        # -pthread does define _REENTRANT, and while the Darwin headers\n+        # ignore this macro, third-party headers might not.)\n+\n+        PTHREAD_CFLAGS=\"-pthread\"\n+        PTHREAD_LIBS=\n+\n+        ax_pthread_ok=yes\n+\n+        # However, older versions of Clang make a point of warning the user\n+        # that, in an invocation where only linking and no compilation is\n+        # taking place, the -pthread option has no effect (\"argument unused\n+        # during compilation\").  They expect -pthread to be passed in only\n+        # when source code is being compiled.\n+        #\n+        # Problem is, this is at odds with the way Automake and most other\n+        # C build frameworks function, which is that the same flags used in\n+        # compilation (CFLAGS) are also used in linking.  Many systems\n+        # supported by AX_PTHREAD require exactly this for POSIX threads\n+        # support, and in fact it is often not straightforward to specify a\n+        # flag that is used only in the compilation phase and not in\n+        # linking.  Such a scenario is extremely rare in practice.\n+        #\n+        # Even though use of the -pthread flag in linking would only print\n+        # a warning, this can be a nuisance for well-run software projects\n+        # that build with -Werror.  So if the active version of Clang has\n+        # this misfeature, we search for an option to squash it.\n+\n+        AC_CACHE_CHECK([whether Clang needs flag to prevent \"argument unused\" warning when linking with -pthread],\n+            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG],\n+            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=unknown\n+             # Create an alternate version of $ac_link that compiles and\n+             # links in two steps (.c -> .o, .o -> exe) instead of one\n+             # (.c -> exe), because the warning occurs only in the second\n+             # step\n+             ax_pthread_save_ac_link=\"$ac_link\"\n+             ax_pthread_sed='s/conftest\\.\\$ac_ext/conftest.$ac_objext/g'\n+             ax_pthread_link_step=`$as_echo \"$ac_link\" | sed \"$ax_pthread_sed\"`\n+             ax_pthread_2step_ac_link=\"($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)\"\n+             ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do\n+                AS_IF([test \"x$ax_pthread_try\" = \"xunknown\"], [break])\n+                CFLAGS=\"-Werror -Wunknown-warning-option $ax_pthread_try -pthread $ax_pthread_save_CFLAGS\"\n+                ac_link=\"$ax_pthread_save_ac_link\"\n+                AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],\n+                    [ac_link=\"$ax_pthread_2step_ac_link\"\n+                     AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],\n+                         [break])\n+                    ])\n+             done\n+             ac_link=\"$ax_pthread_save_ac_link\"\n+             CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+             AS_IF([test \"x$ax_pthread_try\" = \"x\"], [ax_pthread_try=no])\n+             ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=\"$ax_pthread_try\"\n+            ])\n \n-# Clang doesn't consider unrecognized options an error unless we specify\n-# -Werror. We throw in some extra Clang-specific options to ensure that\n-# this doesn't happen for GCC, which also accepts -Werror.\n+        case \"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" in\n+                no | unknown) ;;\n+                *) PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG $PTHREAD_CFLAGS\" ;;\n+        esac\n \n-AC_MSG_CHECKING([if compiler needs -Werror to reject unknown flags])\n-save_CFLAGS=\"$CFLAGS\"\n-ax_pthread_extra_flags=\"-Werror\"\n-CFLAGS=\"$CFLAGS $ax_pthread_extra_flags -Wunknown-warning-option -Wsizeof-array-argument\"\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([int foo(void);],[foo()])],\n-                  [AC_MSG_RESULT([yes])],\n-                  [ax_pthread_extra_flags=\n-                   AC_MSG_RESULT([no])])\n-CFLAGS=\"$save_CFLAGS\"\n+fi # $ax_pthread_clang = yes\n \n-if test x\"$ax_pthread_ok\" = xno; then\n-for flag in $ax_pthread_flags; do\n+if test \"x$ax_pthread_ok\" = \"xno\"; then\n+for ax_pthread_try_flag in $ax_pthread_flags; do\n \n-        case $flag in\n+        case $ax_pthread_try_flag in\n                 none)\n                 AC_MSG_CHECKING([whether pthreads work without any flags])\n                 ;;\n \n+                -mt,pthread)\n+                AC_MSG_CHECKING([whether pthreads work with -mt -lpthread])\n+                PTHREAD_CFLAGS=\"-mt\"\n+                PTHREAD_LIBS=\"-lpthread\"\n+                ;;\n+\n                 -*)\n-                AC_MSG_CHECKING([whether pthreads work with $flag])\n-                PTHREAD_CFLAGS=\"$flag\"\n+                AC_MSG_CHECKING([whether pthreads work with $ax_pthread_try_flag])\n+                PTHREAD_CFLAGS=\"$ax_pthread_try_flag\"\n                 ;;\n \n                 pthread-config)\n                 AC_CHECK_PROG([ax_pthread_config], [pthread-config], [yes], [no])\n-                if test x\"$ax_pthread_config\" = xno; then continue; fi\n+                AS_IF([test \"x$ax_pthread_config\" = \"xno\"], [continue])\n                 PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n                 PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n                 ;;\n \n                 *)\n-                AC_MSG_CHECKING([for the pthreads library -l$flag])\n-                PTHREAD_LIBS=\"-l$flag\"\n+                AC_MSG_CHECKING([for the pthreads library -l$ax_pthread_try_flag])\n+                PTHREAD_LIBS=\"-l$ax_pthread_try_flag\"\n                 ;;\n         esac\n \n-        save_LIBS=\"$LIBS\"\n-        save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n         LIBS=\"$PTHREAD_LIBS $LIBS\"\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS $ax_pthread_extra_flags\"\n \n         # Check for various functions.  We must include pthread.h,\n         # since some functions may be macros.  (On the Sequent, we\n@@ -218,7 +366,11 @@ for flag in $ax_pthread_flags; do\n         # pthread_cleanup_push because it is one of the few pthread\n         # functions on Solaris that doesn't have a non-functional libc stub.\n         # We try pthread_create on general principles.\n+\n         AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>\n+#                       if $ax_pthread_check_cond\n+#                        error \"$ax_pthread_check_macro must be defined\"\n+#                       endif\n                         static void routine(void *a) { a = 0; }\n                         static void *start_routine(void *a) { return a; }],\n                        [pthread_t th; pthread_attr_t attr;\n@@ -227,88 +379,89 @@ for flag in $ax_pthread_flags; do\n                         pthread_attr_init(&attr);\n                         pthread_cleanup_push(routine, 0);\n                         pthread_cleanup_pop(0) /* ; */])],\n-                [ax_pthread_ok=yes],\n-                [])\n+            [ax_pthread_ok=yes],\n+            [])\n \n-        LIBS=\"$save_LIBS\"\n-        CFLAGS=\"$save_CFLAGS\"\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n \n         AC_MSG_RESULT([$ax_pthread_ok])\n-        if test \"x$ax_pthread_ok\" = xyes; then\n-                break;\n-        fi\n+        AS_IF([test \"x$ax_pthread_ok\" = \"xyes\"], [break])\n \n         PTHREAD_LIBS=\"\"\n         PTHREAD_CFLAGS=\"\"\n done\n fi\n \n # Various other checks:\n-if test \"x$ax_pthread_ok\" = xyes; then\n-        save_LIBS=\"$LIBS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-        save_CFLAGS=\"$CFLAGS\"\n+if test \"x$ax_pthread_ok\" = \"xyes\"; then\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n         CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n \n         # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.\n-        AC_MSG_CHECKING([for joinable pthread attribute])\n-        attr_name=unknown\n-        for attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n-            AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],\n-                           [int attr = $attr; return attr /* ; */])],\n-                [attr_name=$attr; break],\n-                [])\n-        done\n-        AC_MSG_RESULT([$attr_name])\n-        if test \"$attr_name\" != PTHREAD_CREATE_JOINABLE; then\n-            AC_DEFINE_UNQUOTED([PTHREAD_CREATE_JOINABLE], [$attr_name],\n-                               [Define to necessary symbol if this constant\n-                                uses a non-standard name on your system.])\n-        fi\n-\n-        AC_MSG_CHECKING([if more special flags are required for pthreads])\n-        flag=no\n-        case ${host_os} in\n-            aix* | freebsd* | darwin*) flag=\"-D_THREAD_SAFE\";;\n-            osf* | hpux*) flag=\"-D_REENTRANT\";;\n-            solaris*)\n-            if test \"$GCC\" = \"yes\"; then\n-                flag=\"-D_REENTRANT\"\n-            else\n-                # TODO: What about Clang on Solaris?\n-                flag=\"-mt -D_REENTRANT\"\n-            fi\n-            ;;\n-        esac\n-        AC_MSG_RESULT([$flag])\n-        if test \"x$flag\" != xno; then\n-            PTHREAD_CFLAGS=\"$flag $PTHREAD_CFLAGS\"\n-        fi\n+        AC_CACHE_CHECK([for joinable pthread attribute],\n+            [ax_cv_PTHREAD_JOINABLE_ATTR],\n+            [ax_cv_PTHREAD_JOINABLE_ATTR=unknown\n+             for ax_pthread_attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n+                 AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],\n+                                                 [int attr = $ax_pthread_attr; return attr /* ; */])],\n+                                [ax_cv_PTHREAD_JOINABLE_ATTR=$ax_pthread_attr; break],\n+                                [])\n+             done\n+            ])\n+        AS_IF([test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xunknown\" && \\\n+               test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xPTHREAD_CREATE_JOINABLE\" && \\\n+               test \"x$ax_pthread_joinable_attr_defined\" != \"xyes\"],\n+              [AC_DEFINE_UNQUOTED([PTHREAD_CREATE_JOINABLE],\n+                                  [$ax_cv_PTHREAD_JOINABLE_ATTR],\n+                                  [Define to necessary symbol if this constant\n+                                   uses a non-standard name on your system.])\n+               ax_pthread_joinable_attr_defined=yes\n+              ])\n+\n+        AC_CACHE_CHECK([whether more special flags are required for pthreads],\n+            [ax_cv_PTHREAD_SPECIAL_FLAGS],\n+            [ax_cv_PTHREAD_SPECIAL_FLAGS=no\n+             case $host_os in\n+             solaris*)\n+             ax_cv_PTHREAD_SPECIAL_FLAGS=\"-D_POSIX_PTHREAD_SEMANTICS\"\n+             ;;\n+             esac\n+            ])\n+        AS_IF([test \"x$ax_cv_PTHREAD_SPECIAL_FLAGS\" != \"xno\" && \\\n+               test \"x$ax_pthread_special_flags_added\" != \"xyes\"],\n+              [PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_SPECIAL_FLAGS $PTHREAD_CFLAGS\"\n+               ax_pthread_special_flags_added=yes])\n \n         AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],\n-            [ax_cv_PTHREAD_PRIO_INHERIT], [\n-                AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],\n-                                                [[int i = PTHREAD_PRIO_INHERIT;]])],\n-                    [ax_cv_PTHREAD_PRIO_INHERIT=yes],\n-                    [ax_cv_PTHREAD_PRIO_INHERIT=no])\n+            [ax_cv_PTHREAD_PRIO_INHERIT],\n+            [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],\n+                                             [[int i = PTHREAD_PRIO_INHERIT;]])],\n+                            [ax_cv_PTHREAD_PRIO_INHERIT=yes],\n+                            [ax_cv_PTHREAD_PRIO_INHERIT=no])\n             ])\n-        AS_IF([test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\"],\n-            [AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], [1], [Have PTHREAD_PRIO_INHERIT.])])\n+        AS_IF([test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\" && \\\n+               test \"x$ax_pthread_prio_inherit_defined\" != \"xyes\"],\n+              [AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], [1], [Have PTHREAD_PRIO_INHERIT.])\n+               ax_pthread_prio_inherit_defined=yes\n+              ])\n \n-        LIBS=\"$save_LIBS\"\n-        CFLAGS=\"$save_CFLAGS\"\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n \n         # More AIX lossage: compile with *_r variant\n-        if test \"x$GCC\" != xyes; then\n+        if test \"x$GCC\" != \"xyes\"; then\n             case $host_os in\n                 aix*)\n                 AS_CASE([\"x/$CC\"],\n-                  [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],\n-                  [#handle absolute path differently from PATH based program lookup\n-                   AS_CASE([\"x$CC\"],\n-                     [x/*],\n-                     [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC=\"${CC}_r\"])],\n-                     [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])\n+                    [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],\n+                    [#handle absolute path differently from PATH based program lookup\n+                     AS_CASE([\"x$CC\"],\n+                         [x/*],\n+                         [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC=\"${CC}_r\"])],\n+                         [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])\n                 ;;\n             esac\n         fi\n@@ -321,7 +474,7 @@ AC_SUBST([PTHREAD_CFLAGS])\n AC_SUBST([PTHREAD_CC])\n \n # Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\n-if test x\"$ax_pthread_ok\" = xyes; then\n+if test \"x$ax_pthread_ok\" = \"xyes\"; then\n         ifelse([$1],,[AC_DEFINE([HAVE_PTHREAD],[1],[Define if you have POSIX threads libraries and header files.])],[$1])\n         :\n else"
      },
      {
        "sha": "b9bf7bf46e54971d3f0f3b9353a707fce3ddb4a3",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "modified",
        "additions": 68,
        "deletions": 56,
        "changes": 124,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,66 +1,78 @@\n+dnl Copyright (c) 2013-2015 The Bitcoin Core developers\n+dnl Distributed under the MIT software license, see the accompanying\n+dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n AC_DEFUN([BITCOIN_FIND_BDB48],[\n-  AC_MSG_CHECKING([for Berkeley DB C++ headers])\n-  BDB_CPPFLAGS=\n-  BDB_LIBS=\n-  bdbpath=X\n-  bdb48path=X\n-  bdbdirlist=\n-  for _vn in 4.8 48 4 5 ''; do\n-    for _pfx in b lib ''; do\n-      bdbdirlist=\"$bdbdirlist ${_pfx}db${_vn}\"\n+  AC_ARG_VAR(BDB_CFLAGS, [C compiler flags for BerkeleyDB, bypasses autodetection])\n+  AC_ARG_VAR(BDB_LIBS, [Linker flags for BerkeleyDB, bypasses autodetection])\n+\n+  if test \"x$BDB_CFLAGS\" = \"x\"; then\n+    AC_MSG_CHECKING([for Berkeley DB C++ headers])\n+    BDB_CPPFLAGS=\n+    bdbpath=X\n+    bdb48path=X\n+    bdbdirlist=\n+    for _vn in 4.8 48 4 5 5.3 ''; do\n+      for _pfx in b lib ''; do\n+        bdbdirlist=\"$bdbdirlist ${_pfx}db${_vn}\"\n+      done\n     done\n-  done\n-  for searchpath in $bdbdirlist ''; do\n-    test -n \"${searchpath}\" && searchpath=\"${searchpath}/\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-      #include <${searchpath}db_cxx.h>\n-    ]],[[\n-      #if !((DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 8) || DB_VERSION_MAJOR > 4)\n-        #error \"failed to find bdb 4.8+\"\n-      #endif\n-    ]])],[\n-      if test \"x$bdbpath\" = \"xX\"; then\n-        bdbpath=\"${searchpath}\"\n-      fi\n-    ],[\n-      continue\n-    ])\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-      #include <${searchpath}db_cxx.h>\n-    ]],[[\n-      #if !(DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR == 8)\n-        #error \"failed to find bdb 4.8\"\n-      #endif\n-    ]])],[\n-      bdb48path=\"${searchpath}\"\n-      break\n-    ],[])\n-  done\n-  if test \"x$bdbpath\" = \"xX\"; then\n-    AC_MSG_RESULT([no])\n-    AC_MSG_ERROR([libdb_cxx headers missing, Bitcoin Core requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n-  elif test \"x$bdb48path\" = \"xX\"; then\n-    BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n-    AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n-      AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n-    ],[\n-      AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n-    ])\n+    for searchpath in $bdbdirlist ''; do\n+      test -n \"${searchpath}\" && searchpath=\"${searchpath}/\"\n+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <${searchpath}db_cxx.h>\n+      ]],[[\n+        #if !((DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 8) || DB_VERSION_MAJOR > 4)\n+          #error \"failed to find bdb 4.8+\"\n+        #endif\n+      ]])],[\n+        if test \"x$bdbpath\" = \"xX\"; then\n+          bdbpath=\"${searchpath}\"\n+        fi\n+      ],[\n+        continue\n+      ])\n+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <${searchpath}db_cxx.h>\n+      ]],[[\n+        #if !(DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR == 8)\n+          #error \"failed to find bdb 4.8\"\n+        #endif\n+      ]])],[\n+        bdb48path=\"${searchpath}\"\n+        break\n+      ],[])\n+    done\n+    if test \"x$bdbpath\" = \"xX\"; then\n+      AC_MSG_RESULT([no])\n+      AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n+    elif test \"x$bdb48path\" = \"xX\"; then\n+      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n+      AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n+        AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n+      ],[\n+        AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n+      ])\n+    else\n+      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n+      bdbpath=\"${bdb48path}\"\n+    fi\n   else\n-    BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n-    bdbpath=\"${bdb48path}\"\n+    BDB_CPPFLAGS=${BDB_CFLAGS}\n   fi\n   AC_SUBST(BDB_CPPFLAGS)\n   \n-  # TODO: Ideally this could find the library version and make sure it matches the headers being used\n-  for searchlib in db_cxx-4.8 db_cxx; do\n-    AC_CHECK_LIB([$searchlib],[main],[\n-      BDB_LIBS=\"-l${searchlib}\"\n-      break\n-    ])\n-  done\n   if test \"x$BDB_LIBS\" = \"x\"; then\n-      AC_MSG_ERROR([libdb_cxx missing, Bitcoin Core requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n+    # TODO: Ideally this could find the library version and make sure it matches the headers being used\n+    for searchlib in db_cxx-4.8 db_cxx; do\n+      AC_CHECK_LIB([$searchlib],[main],[\n+        BDB_LIBS=\"-l${searchlib}\"\n+        break\n+      ])\n+    done\n+    if test \"x$BDB_LIBS\" = \"x\"; then\n+        AC_MSG_ERROR([libdb_cxx missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n+    fi\n   fi\n   AC_SUBST(BDB_LIBS)\n ])"
      },
      {
        "sha": "f83dba076fd132df578edfb1ec9f94715cb42317",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 32,
        "deletions": 10,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,3 +1,7 @@\n+dnl Copyright (c) 2013-2016 The Bitcoin Core developers\n+dnl Distributed under the MIT software license, see the accompanying\n+dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n dnl Helper for cases where a qt dependency is not met.\n dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n AC_DEFUN([BITCOIN_QT_FAIL],[\n@@ -126,6 +130,8 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n       if test \"x$bitcoin_cv_need_acc_widget\" = \"xyes\"; then\n         _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n       fi\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n+      AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n       if test x$TARGET_OS = xwindows; then\n         _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n         AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n@@ -220,7 +226,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n \n \n   dnl enable qt support\n-  AC_MSG_CHECKING(whether to build Bitcoin Core GUI)\n+  AC_MSG_CHECKING(whether to build ]AC_PACKAGE_NAME[ GUI)\n   BITCOIN_QT_CHECK([\n     bitcoin_enable_qt=yes\n     bitcoin_enable_qt_test=yes\n@@ -331,8 +337,9 @@ AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n           QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n         fi\n       fi\n-     m4_ifdef([PKG_CHECK_MODULES],[\n      if test x$use_pkgconfig = xyes; then\n+     : dnl\n+     m4_ifdef([PKG_CHECK_MODULES],[\n        PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS=\"$QTPLATFORM_LIBS $QT_LIBS\"])\n        if test x$TARGET_OS = xlinux; then\n          PKG_CHECK_MODULES([X11XCB], [x11-xcb], [QT_LIBS=\"$X11XCB_LIBS $QT_LIBS\"])\n@@ -342,8 +349,23 @@ AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n        elif test x$TARGET_OS = xdarwin; then\n          PKG_CHECK_MODULES([QTPRINT], [Qt5PrintSupport], [QT_LIBS=\"$QTPRINT_LIBS $QT_LIBS\"])\n        fi\n-     fi\n      ])\n+     else\n+       if test x$TARGET_OS = xwindows; then\n+         AC_CACHE_CHECK(for Qt >= 5.6, bitcoin_cv_need_platformsupport,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+             [[#include <QtCore>]],[[\n+             #if QT_VERSION < 0x050600\n+             choke;\n+             #endif\n+             ]])],\n+           [bitcoin_cv_need_platformsupport=yes],\n+           [bitcoin_cv_need_platformsupport=no])\n+         ])\n+         if test x$bitcoin_cv_need_platformsupport = xyes; then\n+           BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PlatformSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXPlatformSupport not found)))\n+         fi\n+       fi\n+     fi\n   else\n     if test x$qt_plugin_path != x; then\n       QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n@@ -377,17 +399,17 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n     qt4_modules=\"QtCore QtGui QtNetwork\"\n     BITCOIN_QT_CHECK([\n       if test x$bitcoin_qt_want_version = xqt5 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n-        PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes],[have_qt=no])\n+        PKG_CHECK_MODULES([QT5], [$qt5_modules], [QT_INCLUDES=\"$QT5_CFLAGS\"; QT_LIBS=\"$QT5_LIBS\" have_qt=yes],[have_qt=no])\n       elif test x$bitcoin_qt_want_version = xqt4 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt4 ); then\n-        PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes], [have_qt=no])\n+        PKG_CHECK_MODULES([QT4], [$qt4_modules], [QT_INCLUDES=\"$QT4_CFLAGS\"; QT_LIBS=\"$QT4_LIBS\" ; have_qt=yes], [have_qt=no])\n       fi\n \n       dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n       if test x$have_qt = xno && test x$bitcoin_qt_want_version = xauto; then\n-        if test x$auto_priority_version = x$qt5; then\n-          PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n+        if test x$auto_priority_version = xqt5; then\n+          PKG_CHECK_MODULES([QT4], [$qt4_modules], [QT_INCLUDES=\"$QT4_CFLAGS\"; QT_LIBS=\"$QT4_LIBS\" ; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n         else\n-          PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])\n+          PKG_CHECK_MODULES([QT5], [$qt5_modules], [QT_INCLUDES=\"$QT5_CFLAGS\"; QT_LIBS=\"$QT5_LIBS\" ; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])\n         fi\n       fi\n       if test x$have_qt != xyes; then\n@@ -453,8 +475,8 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   ])\n \n   BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,AC_MSG_WARN([zlib not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([png] ,[main],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([jpeg] ,[main],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))\n+  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([png_error] ,[qtpng png],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n+  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([jpeg_create_decompress] ,[qtjpeg jpeg],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))\n   BITCOIN_QT_CHECK(AC_SEARCH_LIBS([pcre16_exec], [qtpcre pcre16],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n   BITCOIN_QT_CHECK(AC_SEARCH_LIBS([hb_ot_tags_from_script] ,[qtharfbuzzng harfbuzz],,AC_MSG_WARN([libharfbuzz not found. Assuming qt has it built-in or support is disabled])))\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))"
      },
      {
        "sha": "7841042ac877b20ea8b35e634f1b4088aae1647f",
        "filename": "build-aux/m4/bitcoin_subdir_to_include.m4",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/bitcoin_subdir_to_include.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/bitcoin_subdir_to_include.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_subdir_to_include.m4?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,3 +1,7 @@\n+dnl Copyright (c) 2013-2014 The Bitcoin Core developers\n+dnl Distributed under the MIT software license, see the accompanying\n+dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n dnl BITCOIN_SUBDIR_TO_INCLUDE([CPPFLAGS-VARIABLE-NAME],[SUBDIRECTORY-NAME],[HEADER-FILE])\n dnl SUBDIRECTORY-NAME must end with a path separator\n AC_DEFUN([BITCOIN_SUBDIR_TO_INCLUDE],["
      },
      {
        "sha": "75c43f9a92d3d6ac2a5d1aee89e97bab7a89f545",
        "filename": "build-aux/m4/l_atomic.m4",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/l_atomic.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/build-aux/m4/l_atomic.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/l_atomic.m4?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,46 @@\n+dnl Copyright (c) 2015 Tim Kosse <tim.kosse@filezilla-project.org>\n+dnl Copying and distribution of this file, with or without modification, are\n+dnl permitted in any medium without royalty provided the copyright notice\n+dnl and this notice are preserved. This file is offered as-is, without any\n+dnl warranty.\n+\n+# Some versions of gcc/libstdc++ require linking with -latomic if\n+# using the C++ atomic library.\n+#\n+# Sourced from http://bugs.debian.org/797228\n+\n+m4_define([_CHECK_ATOMIC_testbody], [[\n+  #include <atomic>\n+  #include <cstdint>\n+\n+  int main() {\n+    std::atomic<int64_t> a{};\n+\n+    int64_t v = 5;\n+    int64_t r = a.fetch_add(v);\n+    return static_cast<int>(r);\n+  }\n+]])\n+\n+AC_DEFUN([CHECK_ATOMIC], [\n+\n+  AC_LANG_PUSH(C++)\n+\n+  AC_MSG_CHECKING([whether std::atomic can be used without link library])\n+\n+  AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_ATOMIC_testbody])],[\n+      AC_MSG_RESULT([yes])\n+    ],[\n+      AC_MSG_RESULT([no])\n+      LIBS=\"$LIBS -latomic\"\n+      AC_MSG_CHECKING([whether std::atomic needs -latomic])\n+      AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_ATOMIC_testbody])],[\n+          AC_MSG_RESULT([yes])\n+        ],[\n+          AC_MSG_RESULT([no])\n+          AC_MSG_FAILURE([cannot figure out how to use std::atomic])\n+        ])\n+    ])\n+\n+  AC_LANG_POP\n+])"
      },
      {
        "sha": "e3e71044da999d3653031243863f86ec5b024fd6",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 420,
        "deletions": 89,
        "changes": 509,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,17 +1,30 @@\n dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n AC_PREREQ([2.60])\n define(_CLIENT_VERSION_MAJOR, 0)\n-define(_CLIENT_VERSION_MINOR, 11)\n+define(_CLIENT_VERSION_MINOR, 15)\n define(_CLIENT_VERSION_REVISION, 99)\n define(_CLIENT_VERSION_BUILD, 0)\n define(_CLIENT_VERSION_IS_RELEASE, false)\n-define(_COPYRIGHT_YEAR, 2015)\n-AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin])\n-AC_CONFIG_SRCDIR([src/main.cpp])\n+define(_COPYRIGHT_YEAR, 2017)\n+define(_COPYRIGHT_HOLDERS,[The %s developers])\n+define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\n+AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n+AC_CONFIG_SRCDIR([src/validation.cpp])\n AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n AC_CONFIG_AUX_DIR([build-aux])\n AC_CONFIG_MACRO_DIR([build-aux/m4])\n \n+BITCOIN_DAEMON_NAME=bitcoind\n+BITCOIN_GUI_NAME=bitcoin-qt\n+BITCOIN_CLI_NAME=bitcoin-cli\n+BITCOIN_TX_NAME=bitcoin-tx\n+\n+dnl Unless the user specified ARFLAGS, force it to be cr\n+AC_ARG_VAR(ARFLAGS, [Flags for the archiver, defaults to <cr> if not set])\n+if test \"x${ARFLAGS+set}\" != \"xset\"; then\n+  ARFLAGS=\"cr\"\n+fi\n+\n AC_CANONICAL_HOST\n \n AH_TOP([#ifndef BITCOIN_CONFIG_H])\n@@ -38,7 +51,6 @@ else\n   CXXFLAGS_overridden=no\n fi\n AC_PROG_CXX\n-m4_ifdef([AC_PROG_OBJCXX],[AC_PROG_OBJCXX])\n \n dnl By default, libtool for mingw refuses to link static libs into a dll for\n dnl fear of mixing pic/non-pic objects, and import/export complications. Since\n@@ -48,6 +60,20 @@ case $host in\n      lt_cv_deplibs_check_method=\"pass_all\"\n   ;;\n esac\n+dnl Require C++11 compiler (no GNU extensions)\n+AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory], [nodefault])\n+dnl Check if -latomic is required for <std::atomic>\n+CHECK_ATOMIC\n+\n+dnl Unless the user specified OBJCXX, force it to be the same as CXX. This ensures\n+dnl that we get the same -std flags for both.\n+m4_ifdef([AC_PROG_OBJCXX],[\n+if test \"x${OBJCXX+set}\" = \"x\"; then\n+  OBJCXX=\"${CXX}\"\n+fi\n+AC_PROG_OBJCXX\n+])\n+\n dnl Libtool init checks.\n LT_INIT([pic-only])\n \n@@ -57,16 +83,18 @@ AC_PATH_TOOL(RANLIB, ranlib)\n AC_PATH_TOOL(STRIP, strip)\n AC_PATH_TOOL(GCOV, gcov)\n AC_PATH_PROG(LCOV, lcov)\n-AC_PATH_PROG(JAVA, java)\n-AC_PATH_PROG(PYTHON, python)\n+dnl Python 3.x is supported from 3.4 on (see https://github.com/bitcoin/bitcoin/issues/7893)\n+AC_PATH_PROGS([PYTHON], [python3.6 python3.5 python3.4 python3 python2.7 python2 python])\n AC_PATH_PROG(GENHTML, genhtml)\n AC_PATH_PROG([GIT], [git])\n AC_PATH_PROG(CCACHE,ccache)\n AC_PATH_PROG(XGETTEXT,xgettext)\n AC_PATH_PROG(HEXDUMP,hexdump)\n+AC_PATH_TOOL(READELF, readelf)\n+AC_PATH_TOOL(CPPFILT, c++filt)\n+AC_PATH_TOOL(OBJCOPY, objcopy)\n \n-dnl pkg-config check.\n-PKG_PROG_PKG_CONFIG\n+AC_ARG_VAR(PYTHONPATH, Augments the default search path for python module files)\n \n # Enable wallet\n AC_ARG_ENABLE([wallet],\n@@ -92,25 +120,20 @@ AC_ARG_ENABLE(tests,\n     [use_tests=$enableval],\n     [use_tests=yes])\n \n+AC_ARG_ENABLE(gui-tests,\n+    AS_HELP_STRING([--disable-gui-tests],[do not compile GUI tests (default is to compile if GUI and tests enabled)]),\n+    [use_gui_tests=$enableval],\n+    [use_gui_tests=$use_tests])\n+\n AC_ARG_ENABLE(bench,\n     AS_HELP_STRING([--disable-bench],[do not compile benchmarks (default is to compile)]),\n     [use_bench=$enableval],\n     [use_bench=yes])\n \n-AC_ARG_WITH([comparison-tool],\n-    AS_HELP_STRING([--with-comparison-tool],[path to java comparison tool (requires --enable-tests)]),\n-    [use_comparison_tool=$withval],\n-    [use_comparison_tool=no])\n-\n-AC_ARG_ENABLE([comparison-tool-reorg-tests],\n-    AS_HELP_STRING([--enable-comparison-tool-reorg-tests],[enable expensive reorg tests in the comparison tool (default no)]),\n-    [use_comparison_tool_reorg_tests=$enableval],\n-    [use_comparison_tool_reorg_tests=no])\n-\n-AC_ARG_ENABLE([extended-rpc-tests],\n-    AS_HELP_STRING([--enable-extended-rpc-tests],[enable expensive RPC tests when using lcov (default no)]),\n-    [use_extended_rpc_tests=$enableval],\n-    [use_extended_rpc_tests=no])\n+AC_ARG_ENABLE([extended-functional-tests],\n+    AS_HELP_STRING([--enable-extended-functional-tests],[enable expensive functional tests when using lcov (default no)]),\n+    [use_extended_functional_tests=$enableval],\n+    [use_extended_functional_tests=no])\n \n AC_ARG_WITH([qrencode],\n   [AS_HELP_STRING([--with-qrencode],\n@@ -141,13 +164,35 @@ AC_ARG_ENABLE([lcov],\n   [enable lcov testing (default is no)])],\n   [use_lcov=yes],\n   [use_lcov=no])\n+  \n+AC_ARG_ENABLE([lcov-branch-coverage],\n+  [AS_HELP_STRING([--enable-lcov-branch-coverage],\n+  [enable lcov testing branch coverage (default is no)])],\n+  [use_lcov_branch=yes],\n+  [use_lcov_branch=no])\n \n AC_ARG_ENABLE([glibc-back-compat],\n   [AS_HELP_STRING([--enable-glibc-back-compat],\n   [enable backwards compatibility with glibc])],\n   [use_glibc_compat=$enableval],\n   [use_glibc_compat=no])\n \n+AC_ARG_ENABLE([asm],\n+  [AS_HELP_STRING([--enable-asm],\n+  [Enable assembly routines (default is yes)])],\n+  [use_asm=$enableval],\n+  [use_asm=yes])\n+\n+if test \"x$use_asm\" = xyes; then\n+  AC_DEFINE(USE_ASM, 1, [Define this symbol to build in assembly routines])\n+fi\n+\n+AC_ARG_WITH([system-univalue],\n+  [AS_HELP_STRING([--with-system-univalue],\n+  [Build with system UniValue (default is no)])],\n+  [system_univalue=$withval],\n+  [system_univalue=no]\n+)\n AC_ARG_ENABLE([zmq],\n   [AS_HELP_STRING([--disable-zmq],\n   [disable ZMQ notifications])],\n@@ -156,13 +201,29 @@ AC_ARG_ENABLE([zmq],\n \n AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n \n+AC_ARG_ENABLE(man,\n+    [AS_HELP_STRING([--disable-man],\n+                    [do not install man pages (default is to install)])],,\n+    enable_man=yes)\n+AM_CONDITIONAL(ENABLE_MAN, test \"$enable_man\" != no)\n+\n # Enable debug\n AC_ARG_ENABLE([debug],\n     [AS_HELP_STRING([--enable-debug],\n                     [use debug compiler flags and macros (default is no)])],\n     [enable_debug=$enableval],\n     [enable_debug=no])\n \n+# Turn warnings into errors\n+AC_ARG_ENABLE([werror],\n+    [AS_HELP_STRING([--enable-werror],\n+                    [Treat certain compiler warnings as errors (default is no)])],\n+    [enable_werror=$enableval],\n+    [enable_werror=no])\n+\n+AC_LANG_PUSH([C++])\n+AX_CHECK_COMPILE_FLAG([-Werror],[CXXFLAG_WERROR=\"-Werror\"],[CXXFLAG_WERROR=\"\"])\n+\n if test \"x$enable_debug\" = xyes; then\n     CPPFLAGS=\"$CPPFLAGS -DDEBUG -DDEBUG_LOCKORDER\"\n     if test \"x$GCC\" = xyes; then\n@@ -174,12 +235,58 @@ if test \"x$enable_debug\" = xyes; then\n     fi\n fi\n \n-## TODO: Remove these hard-coded paths and flags. They are here for the sake of\n-##       compatibility with the legacy buildsystem.\n-##\n+ERROR_CXXFLAGS=\n+if test \"x$enable_werror\" = \"xyes\"; then\n+  if test \"x$CXXFLAG_WERROR\" = \"x\"; then\n+    AC_MSG_ERROR(\"enable-werror set but -Werror is not usable\")\n+  fi\n+  AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=vla\"],,[[$CXXFLAG_WERROR]])\n+fi\n+\n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n-  CXXFLAGS=\"$CXXFLAGS -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-self-assign\"\n+  AX_CHECK_COMPILE_FLAG([-Wall],[CXXFLAGS=\"$CXXFLAGS -Wall\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wextra],[CXXFLAGS=\"$CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wformat],[CXXFLAGS=\"$CXXFLAGS -Wformat\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wvla],[CXXFLAGS=\"$CXXFLAGS -Wvla\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wformat-security],[CXXFLAGS=\"$CXXFLAGS -Wformat-security\"],,[[$CXXFLAG_WERROR]])\n+\n+  ## Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n+  ## unknown options if any other warning is produced. Test the -Wfoo case, and\n+  ## set the -Wno-foo case if it works.\n+  AX_CHECK_COMPILE_FLAG([-Wunused-parameter],[CXXFLAGS=\"$CXXFLAGS -Wno-unused-parameter\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wself-assign],[CXXFLAGS=\"$CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[CXXFLAGS=\"$CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[CXXFLAGS=\"$CXXFLAGS -Wno-deprecated-register\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[CXXFLAGS=\"$CXXFLAGS -Wno-implicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\n fi\n+\n+# Check for optional instruction set support. Enabling these does _not_ imply that all code will\n+# be compiled with them, rather that specific objects/libs may use them after checking for runtime\n+# compatibility.\n+AX_CHECK_COMPILE_FLAG([-msse4.2],[[SSE42_CXXFLAGS=\"-msse4.2\"]],,[[$CXXFLAG_WERROR]])\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $SSE42_CXXFLAGS\"\n+AC_MSG_CHECKING(for assembler crc32 support)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <stdint.h>\n+    #if defined(_MSC_VER)\n+    #include <intrin.h>\n+    #elif defined(__GNUC__) && defined(__SSE4_2__)\n+    #include <nmmintrin.h>\n+    #endif\n+  ]],[[\n+    uint64_t l = 0;\n+    l = _mm_crc32_u8(l, 0);\n+    l = _mm_crc32_u32(l, 0);\n+    l = _mm_crc32_u64(l, 0);\n+    return l;\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_hwcrc32=yes],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n \n AC_ARG_WITH([utils],\n@@ -200,8 +307,6 @@ AC_ARG_WITH([daemon],\n   [build_bitcoind=$withval],\n   [build_bitcoind=yes])\n \n-AC_LANG_PUSH([C++])\n-\n use_pkgconfig=yes\n case $host in\n   *mingw*)\n@@ -245,7 +350,7 @@ case $host in\n      fi\n \n      CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB\"\n-     LEVELDB_TARGET_FLAGS=\"TARGET_OS=OS_WINDOWS_CROSSCOMPILE\"\n+     LEVELDB_TARGET_FLAGS=\"-DOS_WINDOWS\"\n      if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n        CXXFLAGS=\"$CXXFLAGS -w\"\n      fi\n@@ -267,7 +372,7 @@ case $host in\n      ;;\n   *darwin*)\n      TARGET_OS=darwin\n-     LEVELDB_TARGET_FLAGS=\"TARGET_OS=Darwin\"\n+     LEVELDB_TARGET_FLAGS=\"-DOS_MACOSX\"\n      if  test x$cross_compiling != xyes; then\n        BUILD_OS=darwin\n        AC_CHECK_PROG([PORT],port, port)\n@@ -281,6 +386,7 @@ case $host in\n          fi\n        fi\n \n+       AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n        AC_CHECK_PROG([BREW],brew, brew)\n        if test x$BREW = xbrew; then\n          dnl These Homebrew packages may be keg-only, meaning that they won't be found\n@@ -314,6 +420,9 @@ case $host in\n            AC_PATH_TOOL([INSTALLNAMETOOL], [install_name_tool], install_name_tool)\n            AC_PATH_TOOL([OTOOL], [otool], otool)\n            AC_PATH_PROGS([GENISOIMAGE], [genisoimage mkisofs],genisoimage)\n+           AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n+           AC_PATH_PROGS([IMAGEMAGICK_CONVERT], [convert],convert)\n+           AC_PATH_PROGS([TIFFCP], [tiffcp],tiffcp)\n \n            dnl libtool will try to strip the static lib, which is a problem for\n            dnl cross-builds because strip attempts to call a hard-coded ld,\n@@ -330,26 +439,33 @@ case $host in\n      ;;\n    *linux*)\n      TARGET_OS=linux\n+     LEVELDB_TARGET_FLAGS=\"-DOS_LINUX\"\n+     ;;\n+   *freebsd*)\n+     LEVELDB_TARGET_FLAGS=\"-DOS_FREEBSD\"\n+     ;;\n+   *openbsd*)\n+     LEVELDB_TARGET_FLAGS=\"-DOS_OPENBSD\"\n      ;;\n    *)\n+     OTHER_OS=`echo ${host_os} | awk '{print toupper($0)}'`\n+     AC_MSG_WARN([Guessing LevelDB OS as OS_${OTHER_OS}, please check whether this is correct, if not add an entry to configure.ac.])\n+     LEVELDB_TARGET_FLAGS=\"-DOS_${OTHER_OS}\"\n      ;;\n esac\n \n-if test x$use_comparison_tool != xno; then\n-  AC_SUBST(JAVA_COMPARISON_TOOL, $use_comparison_tool)\n-fi\n-\n-if test x$use_comparison_tool_reorg_tests != xno; then\n-  if test x$use_comparison_tool = x; then\n-    AC_MSG_ERROR(\"comparison tool reorg tests but comparison tool was not specified\")\n+if test x$use_pkgconfig = xyes; then\n+  m4_ifndef([PKG_PROG_PKG_CONFIG], [AC_MSG_ERROR(PKG_PROG_PKG_CONFIG macro not found. Please install pkg-config and re-run autogen.sh.)])\n+  m4_ifdef([PKG_PROG_PKG_CONFIG], [\n+  PKG_PROG_PKG_CONFIG\n+  if test x\"$PKG_CONFIG\" = \"x\"; then\n+    AC_MSG_ERROR(pkg-config not found.)\n   fi\n-  AC_SUBST(COMPARISON_TOOL_REORG_TESTS, 1)\n-else\n-  AC_SUBST(COMPARISON_TOOL_REORG_TESTS, 0)\n+  ])\n fi\n \n-if test x$use_extended_rpc_tests != xno; then\n-  AC_SUBST(EXTENDED_RPC_TESTS, -extended)\n+if test x$use_extended_functional_tests != xno; then\n+  AC_SUBST(EXTENDED_FUNCTIONAL_TESTS, --extended)\n fi\n \n if test x$use_lcov = xyes; then\n@@ -359,21 +475,23 @@ if test x$use_lcov = xyes; then\n   if test x$GCOV = x; then\n     AC_MSG_ERROR(\"lcov testing requested but gcov not found\")\n   fi\n-  if test x$JAVA = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but java not found\")\n-  fi\n   if test x$PYTHON = x; then\n     AC_MSG_ERROR(\"lcov testing requested but python not found\")\n   fi\n   if test x$GENHTML = x; then\n     AC_MSG_ERROR(\"lcov testing requested but genhtml not found\")\n   fi\n-  if test x$use_comparison_tool = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but comparison tool was not specified\")\n-  fi\n   LCOV=\"$LCOV --gcov-tool=$GCOV\"\n+  AX_CHECK_LINK_FLAG([[--coverage]], [LDFLAGS=\"$LDFLAGS --coverage\"],\n+    [AC_MSG_ERROR(\"lcov testing requested but --coverage linker flag does not work\")])\n   AX_CHECK_COMPILE_FLAG([--coverage],[CXXFLAGS=\"$CXXFLAGS --coverage\"],\n     [AC_MSG_ERROR(\"lcov testing requested but --coverage flag does not work\")])\n+  AC_DEFINE(USE_COVERAGE, 1, [Define this symbol if coverage is enabled])\n+  CXXFLAGS=\"$CXXFLAGS -Og\"\n+fi\n+\n+if test x$use_lcov_branch != xno; then\n+  AC_SUBST(LCOV_OPTS, \"$LCOV_OPTS --rc lcov_branch_coverage=1\")\n fi\n \n dnl Check for endianness\n@@ -409,6 +527,10 @@ AX_GCC_FUNC_ATTRIBUTE([dllimport])\n \n if test x$use_glibc_compat != xno; then\n \n+  #glibc absorbed clock_gettime in 2.17. librt (its previous location) is safe to link\n+  #in anyway for back-compat.\n+  AC_CHECK_LIB([rt],[clock_gettime],, AC_MSG_ERROR(lib missing))\n+\n   #__fdelt_chk's params and return type have changed from long unsigned int to long int.\n   # See which one is present here.\n   AC_MSG_CHECKING(__fdelt_chk type)\n@@ -422,7 +544,8 @@ if test x$use_glibc_compat != xno; then\n     [ fdelt_type=\"long int\"])\n   AC_MSG_RESULT($fdelt_type)\n   AC_DEFINE_UNQUOTED(FDELT_TYPE, $fdelt_type,[parameter and return value type for __fdelt_chk])\n-\n+else\n+  AC_SEARCH_LIBS([clock_gettime],[rt])\n fi\n \n if test x$TARGET_OS != xwindows; then\n@@ -443,6 +566,7 @@ if test x$use_hardening != xno; then\n \n   AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"])\n   AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,--high-entropy-va]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--high-entropy-va\"])\n   AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"])\n   AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"])\n \n@@ -464,11 +588,12 @@ if test x$TARGET_OS = xdarwin; then\n fi\n \n AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h])\n-AC_SEARCH_LIBS([getaddrinfo_a], [anl], [AC_DEFINE(HAVE_GETADDRINFO_A, 1, [Define this symbol if you have getaddrinfo_a])])\n-AC_SEARCH_LIBS([inet_pton], [nsl resolv], [AC_DEFINE(HAVE_INET_PTON, 1, [Define this symbol if you have inet_pton])])\n \n AC_CHECK_DECLS([strnlen])\n \n+# Check for daemon(3), unrelated to --with-daemon (although used by it)\n+AC_CHECK_DECLS([daemon])\n+\n AC_CHECK_DECLS([le16toh, le32toh, le64toh, htole16, htole32, htole64, be16toh, be32toh, be64toh, htobe16, htobe32, htobe64],,,\n \t\t[#if HAVE_ENDIAN_H\n                  #include <endian.h>\n@@ -481,6 +606,8 @@ AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,\n                  #include <byteswap.h>\n                  #endif])\n \n+AC_CHECK_DECLS([__builtin_clz, __builtin_clzl, __builtin_clzll])\n+\n dnl Check for MSG_NOSIGNAL\n AC_MSG_CHECKING(for MSG_NOSIGNAL)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n@@ -489,7 +616,29 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n  [ AC_MSG_RESULT(no)]\n )\n \n-AC_SEARCH_LIBS([clock_gettime],[rt])\n+dnl Check for MSG_DONTWAIT\n+AC_MSG_CHECKING(for MSG_DONTWAIT)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n+ [[ int f = MSG_DONTWAIT; ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MSG_DONTWAIT, 1,[Define this symbol if you have MSG_DONTWAIT]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+dnl Check for malloc_info (for memory statistics information in getmemoryinfo)\n+AC_MSG_CHECKING(for getmemoryinfo)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n+ [[ int f = malloc_info(0, NULL); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOC_INFO, 1,[Define this symbol if you have malloc_info]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+dnl Check for mallopt(M_ARENA_MAX) (to set glibc arenas)\n+AC_MSG_CHECKING(for mallopt M_ARENA_MAX)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n+ [[ mallopt(M_ARENA_MAX, 1); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOPT_ARENA_MAX, 1,[Define this symbol if you have mallopt with M_ARENA_MAX]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n \n AC_MSG_CHECKING([for visibility attribute])\n AC_LINK_IFELSE([AC_LANG_SOURCE([\n@@ -508,6 +657,41 @@ AC_LINK_IFELSE([AC_LANG_SOURCE([\n   ]\n )\n \n+# Check for different ways of gathering OS randomness\n+AC_MSG_CHECKING(for Linux getrandom syscall)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n+  #include <sys/syscall.h>\n+  #include <linux/random.h>]],\n+ [[ syscall(SYS_getrandom, nullptr, 32, 0); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYS_GETRANDOM, 1,[Define this symbol if the Linux getrandom system call is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for getentropy)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],\n+ [[ getentropy(nullptr, 32) ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY, 1,[Define this symbol if the BSD getentropy system call is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for getentropy via random.h)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n+ #include <sys/random.h>]],\n+ [[ getentropy(nullptr, 32) ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY_RAND, 1,[Define this symbol if the BSD getentropy system call is available with sys/random.h]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for sysctl KERN_ARND)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n+  #include <sys/sysctl.h>]],\n+ [[ static const int name[2] = {CTL_KERN, KERN_ARND};\n+    sysctl(name, 2, nullptr, nullptr, nullptr, 0); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYSCTL_ARND, 1,[Define this symbol if the BSD sysctl(KERN_ARND) is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+# Check for reduced exports\n if test x$use_reduce_exports = xyes; then\n   AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n   [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])\n@@ -540,22 +724,29 @@ BITCOIN_QT_INIT\n dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt5])\n \n-if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests = xnononono; then\n+if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then\n     use_boost=no\n else\n     use_boost=yes\n fi\n \n if test x$use_boost = xyes; then\n \n+dnl Minimum required Boost version\n+define(MINIMUM_REQUIRED_BOOST, 1.47.0)\n+\n dnl Check for boost libs\n-AX_BOOST_BASE\n+AX_BOOST_BASE([MINIMUM_REQUIRED_BOOST])\n AX_BOOST_SYSTEM\n AX_BOOST_FILESYSTEM\n AX_BOOST_PROGRAM_OPTIONS\n AX_BOOST_THREAD\n AX_BOOST_CHRONO\n \n+dnl Boost 1.56 through 1.62 allow using std::atomic instead of its own atomic\n+dnl counter implementations. In 1.63 and later the std::atomic approach is default.\n+m4_pattern_allow(DBOOST_AC_USE_STD_ATOMIC) dnl otherwise it's treated like a macro\n+BOOST_CPPFLAGS=\"-DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC $BOOST_CPPFLAGS\"\n \n if test x$use_reduce_exports = xyes; then\n   AC_MSG_CHECKING([for working boost reduced exports])\n@@ -619,6 +810,42 @@ if test x$use_boost = xyes; then\n \n BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB\"\n \n+\n+dnl If boost (prior to 1.57) was built without c++11, it emulated scoped enums\n+dnl using c++98 constructs. Unfortunately, this implementation detail leaked into\n+dnl the abi. This was fixed in 1.57.\n+\n+dnl When building against that installed version using c++11, the headers pick up\n+dnl on the native c++11 scoped enum support and enable it, however it will fail to\n+dnl link. This can be worked around by disabling c++11 scoped enums if linking will\n+dnl fail.\n+dnl BOOST_NO_SCOPED_ENUMS was changed to BOOST_NO_CXX11_SCOPED_ENUMS in 1.51.\n+\n+TEMP_LIBS=\"$LIBS\"\n+LIBS=\"$BOOST_LIBS $LIBS\"\n+TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+AC_MSG_CHECKING([for mismatched boost c++11 scoped enums])\n+AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n+  #include <boost/config.hpp>\n+  #include <boost/version.hpp>\n+  #if !defined(BOOST_NO_SCOPED_ENUMS) && !defined(BOOST_NO_CXX11_SCOPED_ENUMS) && BOOST_VERSION < 105700\n+  #define BOOST_NO_SCOPED_ENUMS\n+  #define BOOST_NO_CXX11_SCOPED_ENUMS\n+  #define CHECK\n+  #endif\n+  #include <boost/filesystem.hpp>\n+  ]],[[\n+  #if defined(CHECK)\n+    boost::filesystem::copy_file(\"foo\", \"bar\");\n+  #else\n+    choke;\n+  #endif\n+  ]])],\n+  [AC_MSG_RESULT(mismatched); BOOST_CPPFLAGS=\"$BOOST_CPPFLAGS -DBOOST_NO_SCOPED_ENUMS -DBOOST_NO_CXX11_SCOPED_ENUMS\"], [AC_MSG_RESULT(ok)])\n+LIBS=\"$TEMP_LIBS\"\n+CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+\n dnl Boost >= 1.50 uses sleep_for rather than the now-deprecated sleep, however\n dnl it was broken from 1.50 to 1.52 when backed by nanosleep. Use sleep_for if\n dnl a working version is available, else fall back to sleep. sleep was removed\n@@ -673,12 +900,7 @@ fi\n fi\n \n if test x$use_pkgconfig = xyes; then\n-\n-  if test x\"$PKG_CONFIG\" = \"x\"; then\n-    AC_MSG_ERROR(pkg-config not found.)\n-  fi\n-\n-  : #NOP\n+  : dnl\n   m4_ifdef(\n     [PKG_CHECK_MODULES],\n     [\n@@ -735,20 +957,76 @@ else\n     AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n   fi\n \n+  if test \"x$use_zmq\" = \"xyes\"; then\n+    dnl Assume libzmq was built for static linking\n+    case $host in\n+      *mingw*)\n+        ZMQ_CFLAGS=\"$ZMQ_CFLAGS -DZMQ_STATIC\"\n+      ;;\n+    esac\n+  fi\n+\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\n   if test x$use_qr != xno; then\n     BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n     BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n   fi\n fi\n \n-CXXFLAGS_TEMP=\"$CXXFLAGS\"\n-LIBS_TEMP=\"$LIBS\"\n-CXXFLAGS=\"$CXXFLAGS $SSL_CFLAGS $CRYPTO_CFLAGS\"\n-LIBS=\"$LIBS $SSL_LIBS $CRYPTO_LIBS\"\n-AC_CHECK_HEADER([openssl/ec.h],, AC_MSG_ERROR(OpenSSL ec header missing),)\n-CXXFLAGS=\"$CXXFLAGS_TEMP\"\n-LIBS=\"$LIBS_TEMP\"\n+save_CXXFLAGS=\"${CXXFLAGS}\"\n+CXXFLAGS=\"${CXXFLAGS} ${CRYPTO_CFLAGS} ${SSL_CFLAGS}\"\n+AC_CHECK_DECLS([EVP_MD_CTX_new],,,[AC_INCLUDES_DEFAULT\n+#include <openssl/x509_vfy.h>\n+])\n+CXXFLAGS=\"${save_CXXFLAGS}\"\n+\n+dnl univalue check\n+\n+need_bundled_univalue=yes\n+\n+if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then\n+  need_bundled_univalue=no\n+else\n+\n+if test x$system_univalue != xno ; then\n+  found_univalue=no\n+  if test x$use_pkgconfig = xyes; then\n+    : #NOP\n+    m4_ifdef(\n+      [PKG_CHECK_MODULES],\n+      [\n+        PKG_CHECK_MODULES([UNIVALUE],[libunivalue],[found_univalue=yes],[true])\n+      ]\n+    )\n+  else\n+    AC_CHECK_HEADER([univalue.h],[\n+      AC_CHECK_LIB([univalue],  [main],[\n+        UNIVALUE_LIBS=-lunivalue\n+        found_univalue=yes\n+      ],[true])\n+    ],[true])\n+  fi\n+\n+  if test x$found_univalue = xyes ; then\n+    system_univalue=yes\n+    need_bundled_univalue=no\n+  elif test x$system_univalue = xyes ; then\n+    AC_MSG_ERROR([univalue not found])\n+  else\n+    system_univalue=no\n+  fi\n+fi\n+\n+if test x$need_bundled_univalue = xyes ; then\n+  UNIVALUE_CFLAGS='-I$(srcdir)/univalue/include'\n+  UNIVALUE_LIBS='univalue/libunivalue.la'\n+fi\n+\n+fi\n+\n+AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$need_bundled_univalue = xyes])\n+AC_SUBST(UNIVALUE_CFLAGS)\n+AC_SUBST(UNIVALUE_LIBS)\n \n BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n \n@@ -827,8 +1105,8 @@ else\n fi\n \n dnl these are only used when qt is enabled\n+BUILD_TEST_QT=\"\"\n if test x$bitcoin_enable_qt != xno; then\n-  BUILD_QT=qt\n   dnl enable dbus support\n   AC_MSG_CHECKING([whether to build GUI with support for D-Bus])\n   if test x$bitcoin_enable_qt_dbus != xno; then\n@@ -858,9 +1136,9 @@ if test x$bitcoin_enable_qt != xno; then\n   fi\n \n   AC_MSG_CHECKING([whether to build test_bitcoin-qt])\n-  if test x$use_tests$bitcoin_enable_qt_test = xyesyes; then\n+  if test x$use_gui_tests$bitcoin_enable_qt_test = xyesyes; then\n     AC_MSG_RESULT([yes])\n-    BUILD_TEST_QT=\"test\"\n+    BUILD_TEST_QT=\"yes\"\n   else\n     AC_MSG_RESULT([no])\n   fi\n@@ -871,9 +1149,10 @@ AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n AC_MSG_CHECKING([whether to build test_bitcoin])\n if test x$use_tests = xyes; then\n   AC_MSG_RESULT([yes])\n-  BUILD_TEST=\"test\"\n+  BUILD_TEST=\"yes\"\n else\n   AC_MSG_RESULT([no])\n+  BUILD_TEST=\"\"\n fi\n \n AC_MSG_CHECKING([whether to reduce exports])\n@@ -883,57 +1162,77 @@ else\n   AC_MSG_RESULT([no])\n fi\n \n-if test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_tests = xnonononono; then\n-  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui or --enable-tests])\n+if test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_bench$use_tests = xnononononono; then\n+  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui --enable-bench or --enable-tests])\n fi\n \n AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\n AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\n AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\n-AM_CONDITIONAL([ENABLE_TESTS],[test x$use_tests = xyes])\n+AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\n AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n-AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$use_tests$bitcoin_enable_qt_test = xyesyes])\n+AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\n AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n-AM_CONDITIONAL([USE_COMPARISON_TOOL],[test x$use_comparison_tool != xno])\n-AM_CONDITIONAL([USE_COMPARISON_TOOL_REORG_TESTS],[test x$use_comparison_tool_reorg_test != xno])\n AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n+AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\n+AM_CONDITIONAL([ENABLE_HWCRC32],[test x$enable_hwcrc32 = xyes])\n+AM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])\n \n AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n AC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])\n AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\n AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\n-AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Version is release])\n+AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Copyright year])\n+AC_DEFINE(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\", [Copyright holder(s) before %s replacement])\n+AC_DEFINE(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\", [Replacement for %s in copyright holders string])\n+define(_COPYRIGHT_HOLDERS_FINAL, [patsubst(_COPYRIGHT_HOLDERS, [%s], [_COPYRIGHT_HOLDERS_SUBSTITUTION])])\n+AC_DEFINE(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\", [Copyright holder(s)])\n AC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)\n AC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)\n AC_SUBST(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION)\n AC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)\n AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n+AC_SUBST(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\")\n+AC_SUBST(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\")\n+AC_SUBST(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\")\n+AC_SUBST(BITCOIN_DAEMON_NAME)\n+AC_SUBST(BITCOIN_GUI_NAME)\n+AC_SUBST(BITCOIN_CLI_NAME)\n+AC_SUBST(BITCOIN_TX_NAME)\n \n AC_SUBST(RELDFLAGS)\n+AC_SUBST(ERROR_CXXFLAGS)\n AC_SUBST(HARDENED_CXXFLAGS)\n AC_SUBST(HARDENED_CPPFLAGS)\n AC_SUBST(HARDENED_LDFLAGS)\n AC_SUBST(PIC_FLAGS)\n AC_SUBST(PIE_FLAGS)\n+AC_SUBST(SSE42_CXXFLAGS)\n AC_SUBST(LIBTOOL_APP_LDFLAGS)\n AC_SUBST(USE_UPNP)\n AC_SUBST(USE_QRCODE)\n AC_SUBST(BOOST_LIBS)\n AC_SUBST(TESTDEFS)\n AC_SUBST(LEVELDB_TARGET_FLAGS)\n-AC_SUBST(BUILD_TEST)\n-AC_SUBST(BUILD_QT)\n-AC_SUBST(BUILD_TEST_QT)\n AC_SUBST(MINIUPNPC_CPPFLAGS)\n AC_SUBST(MINIUPNPC_LIBS)\n-AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py])\n-AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\n-AC_CONFIG_FILES([qa/pull-tester/tests_config.py],[chmod +x qa/pull-tester/tests_config.py])\n+AC_SUBST(CRYPTO_LIBS)\n+AC_SUBST(SSL_LIBS)\n+AC_SUBST(EVENT_LIBS)\n+AC_SUBST(EVENT_PTHREADS_LIBS)\n+AC_SUBST(ZMQ_LIBS)\n+AC_SUBST(PROTOBUF_LIBS)\n+AC_SUBST(QR_LIBS)\n+AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/config.ini])\n+AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n+AC_CONFIG_FILES([doc/Doxyfile])\n+AC_CONFIG_LINKS([test/functional/test_runner.py:test/functional/test_runner.py])\n+AC_CONFIG_LINKS([test/util/bitcoin-util-test.py:test/util/bitcoin-util-test.py])\n \n dnl boost's m4 checks do something really nasty: they export these vars. As a\n dnl result, they leak into secp256k1's configure and crazy things happen.\n@@ -958,8 +1257,12 @@ PKGCONFIG_LIBDIR_TEMP=\"$PKG_CONFIG_LIBDIR\"\n unset PKG_CONFIG_LIBDIR\n PKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\n \n-ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery\"\n-AC_CONFIG_SUBDIRS([src/secp256k1 src/univalue])\n+if test x$need_bundled_univalue = xyes; then\n+  AC_CONFIG_SUBDIRS([src/univalue])\n+fi\n+\n+ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery --disable-jni\"\n+AC_CONFIG_SUBDIRS([src/secp256k1])\n \n AC_OUTPUT\n \n@@ -977,7 +1280,35 @@ esac\n dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\n case ${OS} in\n    *Windows*)\n-     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  qa/pull-tester/tests_config.py > qa/pull-tester/tests_config-2.py\n-     mv qa/pull-tester/tests_config-2.py qa/pull-tester/tests_config.py\n+     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  test/config.ini > test/config-2.ini\n+     mv test/config-2.ini test/config.ini\n    ;;\n esac\n+\n+echo \n+echo \"Options used to compile and link:\"\n+echo \"  with wallet   = $enable_wallet\"\n+echo \"  with gui / qt = $bitcoin_enable_qt\"\n+if test x$bitcoin_enable_qt != xno; then\n+    echo \"    qt version  = $bitcoin_qt_got_major_vers\"\n+    echo \"    with qr     = $use_qr\"\n+fi\n+echo \"  with zmq      = $use_zmq\"\n+echo \"  with test     = $use_tests\"\n+echo \"  with bench    = $use_bench\"\n+echo \"  with upnp     = $use_upnp\"\n+echo \"  use asm       = $use_asm\"\n+echo \"  debug enabled = $enable_debug\"\n+echo \"  werror        = $enable_werror\"\n+echo \n+echo \"  target os     = $TARGET_OS\"\n+echo \"  build os      = $BUILD_OS\"\n+echo\n+echo \"  CC            = $CC\"\n+echo \"  CFLAGS        = $CFLAGS\"\n+echo \"  CPPFLAGS      = $CPPFLAGS\"\n+echo \"  CXX           = $CXX\"\n+echo \"  CXXFLAGS      = $CXXFLAGS\"\n+echo \"  LDFLAGS       = $LDFLAGS\"\n+echo \"  ARFLAGS       = $ARFLAGS\"\n+echo "
      },
      {
        "sha": "34c4cfc55ad39ef7cb72eae6aff2e6a6f0c272fd",
        "filename": "contrib/README.md",
        "status": "modified",
        "additions": 13,
        "deletions": 19,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,20 +1,12 @@\n-Wallet Tools\n----------------------\n-\n-### [SpendFrom](/contrib/spendfrom) ###\n-\n-Use the raw transactions API to send coins received on a particular\n-address (or addresses).\n-\n Repository Tools\n ---------------------\n \n ### [Developer tools](/contrib/devtools) ###\n Specific tools for developers working on this repository.\n-Contains the script `github-merge.sh` for merging github pull requests securely and signing them using GPG.\n+Contains the script `github-merge.py` for merging GitHub pull requests securely and signing them using GPG.\n \n ### [Verify-Commits](/contrib/verify-commits) ###\n-Tool to verify that every merge commit was signed by a developer using the above `github-merge.sh` script.\n+Tool to verify that every merge commit was signed by a developer using the above `github-merge.py` script.\n \n ### [Linearize](/contrib/linearize) ###\n Construct a linear, no-fork, best version of the blockchain.\n@@ -34,23 +26,25 @@ Contains files used to package bitcoind/bitcoin-qt\n for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n \n ### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n-Gavin's notes on getting gitian builds up and running using KVM.\n+Notes on getting Gitian builds up and running using KVM.\n \n-### [Gitian-downloader](/contrib/gitian-downloader)\n-Various PGP files of core developers. \n+### [Gitian-keys](/contrib/gitian-keys)\n+PGP keys used for signing Bitcoin Core [Gitian release](/doc/release-process.md) results.\n \n ### [MacDeploy](/contrib/macdeploy) ###\n Scripts and notes for Mac builds. \n \n+### [RPM](/contrib/rpm) ###\n+RPM spec file for building bitcoin-core on RPM based distributions.\n+\n+### [Gitian-build](/contrib/gitian-build.sh) ###\n+Script for running full Gitian builds.\n+\n Test and Verify Tools \n ---------------------\n \n ### [TestGen](/contrib/testgen) ###\n Utilities to generate test vectors for the data-driven Bitcoin tests.\n \n-### [Test Patches](/contrib/test-patches) ###\n-These patches are applied when the automated pull-tester\n-tests each pull and when master is tested using jenkins.\n-\n-### [Verify SF Binaries](/contrib/verifysfbinaries) ###\n-This script attempts to download and verify the signature file SHA256SUMS.asc from SourceForge.\n+### [Verify Binaries](/contrib/verifybinaries) ###\n+This script attempts to download and verify the signature file SHA256SUMS.asc from bitcoin.org."
      },
      {
        "sha": "732981fe7c5d1cb447ee90aac1c8ffb96ab24636",
        "filename": "contrib/bitcoin-cli.bash-completion",
        "status": "added",
        "additions": 154,
        "deletions": 0,
        "changes": 154,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/bitcoin-cli.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/bitcoin-cli.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-cli.bash-completion?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,154 @@\n+# bash programmable completion for bitcoin-cli(1)\n+# Copyright (c) 2012-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# call $bitcoin-cli for RPC\n+_bitcoin_rpc() {\n+    # determine already specified args necessary for RPC\n+    local rpcargs=()\n+    for i in ${COMP_LINE}; do\n+        case \"$i\" in\n+            -conf=*|-datadir=*|-regtest|-rpc*|-testnet)\n+                rpcargs=( \"${rpcargs[@]}\" \"$i\" )\n+                ;;\n+        esac\n+    done\n+    $bitcoin_cli \"${rpcargs[@]}\" \"$@\"\n+}\n+\n+# Add wallet accounts to COMPREPLY\n+_bitcoin_accounts() {\n+    local accounts\n+    accounts=$(_bitcoin_rpc listaccounts | awk -F '\"' '{ print $2 }')\n+    COMPREPLY=( \"${COMPREPLY[@]}\" $( compgen -W \"$accounts\" -- \"$cur\" ) )\n+}\n+\n+_bitcoin_cli() {\n+    local cur prev words=() cword\n+    local bitcoin_cli\n+\n+    # save and use original argument to invoke bitcoin-cli for -help, help and RPC\n+    # as bitcoin-cli might not be in $PATH\n+    bitcoin_cli=\"$1\"\n+\n+    COMPREPLY=()\n+    _get_comp_words_by_ref -n = cur prev words cword\n+\n+    if ((cword > 5)); then\n+        case ${words[cword-5]} in\n+            sendtoaddress)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    if ((cword > 4)); then\n+        case ${words[cword-4]} in\n+            importaddress|listtransactions|setban)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            signrawtransaction)\n+                COMPREPLY=( $( compgen -W \"ALL NONE SINGLE ALL|ANYONECANPAY NONE|ANYONECANPAY SINGLE|ANYONECANPAY\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    if ((cword > 3)); then\n+        case ${words[cword-3]} in\n+            addmultisigaddress)\n+                _bitcoin_accounts\n+                return 0\n+                ;;\n+            getbalance|gettxout|importaddress|importpubkey|importprivkey|listreceivedbyaccount|listreceivedbyaddress|listsinceblock)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    if ((cword > 2)); then\n+        case ${words[cword-2]} in\n+            addnode)\n+                COMPREPLY=( $( compgen -W \"add remove onetry\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            setban)\n+                COMPREPLY=( $( compgen -W \"add remove\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            fundrawtransaction|getblock|getblockheader|getmempoolancestors|getmempooldescendants|getrawtransaction|gettransaction|listaccounts|listreceivedbyaccount|listreceivedbyaddress|sendrawtransaction)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            move|setaccount)\n+                _bitcoin_accounts\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    case \"$prev\" in\n+        backupwallet|dumpwallet|importwallet)\n+            _filedir\n+            return 0\n+            ;;\n+        getaddednodeinfo|getrawmempool|lockunspent|setgenerate)\n+            COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+            return 0\n+            ;;\n+        getaccountaddress|getaddressesbyaccount|getbalance|getnewaddress|getreceivedbyaccount|listtransactions|move|sendfrom|sendmany)\n+            _bitcoin_accounts\n+            return 0\n+            ;;\n+    esac\n+\n+    case \"$cur\" in\n+        -conf=*)\n+            cur=\"${cur#*=}\"\n+            _filedir\n+            return 0\n+            ;;\n+        -datadir=*)\n+            cur=\"${cur#*=}\"\n+            _filedir -d\n+            return 0\n+            ;;\n+        -*=*)\t# prevent nonsense completions\n+            return 0\n+            ;;\n+        *)\n+            local helpopts commands\n+\n+            # only parse -help if senseful\n+            if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n+                helpopts=$($bitcoin_cli -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+            fi\n+\n+            # only parse help if senseful\n+            if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n+                commands=$(_bitcoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n+            fi\n+\n+            COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n+\n+            # Prevent space if an argument is desired\n+            if [[ $COMPREPLY == *= ]]; then\n+                compopt -o nospace\n+            fi\n+            return 0\n+            ;;\n+    esac\n+} &&\n+complete -F _bitcoin_cli bitcoin-cli\n+\n+# Local variables:\n+# mode: shell-script\n+# sh-basic-offset: 4\n+# sh-indent-comment: t\n+# indent-tabs-mode: nil\n+# End:\n+# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "a83d2979ed3a8f11edea358937e8d5d359d58b4c",
        "filename": "contrib/bitcoin-tx.bash-completion",
        "status": "added",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/bitcoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/bitcoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-tx.bash-completion?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,57 @@\n+# bash programmable completion for bitcoin-tx(1)\n+# Copyright (c) 2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+_bitcoin_tx() {\n+    local cur prev words=() cword\n+    local bitcoin_tx\n+\n+    # save and use original argument to invoke bitcoin-tx for -help\n+    # it might not be in $PATH\n+    bitcoin_tx=\"$1\"\n+\n+    COMPREPLY=()\n+    _get_comp_words_by_ref -n =: cur prev words cword\n+\n+    case \"$cur\" in\n+        load=*:*)\n+            cur=\"${cur#load=*:}\"\n+            _filedir\n+            return 0\n+            ;;\n+        *=*)\t# prevent attempts to complete other arguments\n+            return 0\n+            ;;\n+    esac\n+\n+    if [[ \"$cword\" == 1 || ( \"$prev\" != \"-create\" && \"$prev\" == -* ) ]]; then\n+        # only options (or an uncompletable hex-string) allowed\n+        # parse bitcoin-tx -help for options\n+        local helpopts\n+        helpopts=$($bitcoin_tx -help | sed -e '/^  -/ p' -e d )\n+        COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n+    else\n+        # only commands are allowed\n+        # parse -help for commands\n+        local helpcmds\n+        helpcmds=$($bitcoin_tx -help | sed -e '1,/Commands:/d' -e 's/=.*/=/' -e '/^  [a-z]/ p' -e d )\n+        COMPREPLY=( $( compgen -W \"$helpcmds\" -- \"$cur\" ) )\n+    fi\n+\n+    # Prevent space if an argument is desired\n+    if [[ $COMPREPLY == *= ]]; then\n+        compopt -o nospace\n+    fi\n+\n+    return 0\n+} &&\n+complete -F _bitcoin_tx bitcoin-tx\n+\n+# Local variables:\n+# mode: shell-script\n+# sh-basic-offset: 4\n+# sh-indent-comment: t\n+# indent-tabs-mode: nil\n+# End:\n+# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "cccd4bde0d33d9dae39a23b53e2816ae5f1c5464",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "modified",
        "additions": 11,
        "deletions": 100,
        "changes": 111,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,102 +1,21 @@\n-# bash programmable completion for bitcoind(1) and bitcoin-cli(1)\n-# Copyright (c) 2012,2014 Christian von Roques <roques@mti.ag>\n+# bash programmable completion for bitcoind(1) and bitcoin-qt(1)\n+# Copyright (c) 2012-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-have bitcoind && {\n-\n-# call $bitcoind for RPC\n-_bitcoin_rpc() {\n-    # determine already specified args necessary for RPC\n-    local rpcargs=()\n-    for i in ${COMP_LINE}; do\n-        case \"$i\" in\n-            -conf=*|-proxy*|-rpc*)\n-                rpcargs=( \"${rpcargs[@]}\" \"$i\" )\n-                ;;\n-        esac\n-    done\n-    $bitcoind \"${rpcargs[@]}\" \"$@\"\n-}\n-\n-# Add bitcoin accounts to COMPREPLY\n-_bitcoin_accounts() {\n-    local accounts\n-    accounts=$(_bitcoin_rpc listaccounts | awk '/\".*\"/ { a=$1; gsub(/\"/, \"\", a); print a}')\n-    COMPREPLY=( \"${COMPREPLY[@]}\" $( compgen -W \"$accounts\" -- \"$cur\" ) )\n-}\n-\n _bitcoind() {\n     local cur prev words=() cword\n     local bitcoind\n \n-    # save and use original argument to invoke bitcoind\n-    # bitcoind might not be in $PATH\n+    # save and use original argument to invoke bitcoind for -help\n+    # it might not be in $PATH\n     bitcoind=\"$1\"\n \n     COMPREPLY=()\n     _get_comp_words_by_ref -n = cur prev words cword\n \n-    if ((cword > 4)); then\n-        case ${words[cword-4]} in\n-            listtransactions)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            signrawtransaction)\n-                COMPREPLY=( $( compgen -W \"ALL NONE SINGLE ALL|ANYONECANPAY NONE|ANYONECANPAY SINGLE|ANYONECANPAY\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    if ((cword > 3)); then\n-        case ${words[cword-3]} in\n-            addmultisigaddress)\n-                _bitcoin_accounts\n-                return 0\n-                ;;\n-            getbalance|gettxout|importaddress|importprivkey|listreceivedbyaccount|listreceivedbyaddress|listsinceblock)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    if ((cword > 2)); then\n-        case ${words[cword-2]} in\n-            addnode)\n-                COMPREPLY=( $( compgen -W \"add remove onetry\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            getblock|getrawtransaction|gettransaction|listaccounts|listreceivedbyaccount|listreceivedbyaddress|sendrawtransaction)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            move|setaccount)\n-                _bitcoin_accounts\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    case \"$prev\" in\n-        backupwallet|dumpwallet|importwallet)\n-            _filedir\n-            return 0\n-            ;;\n-        getmempool|lockunspent|setgenerate)\n-            COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-            return 0\n-            ;;\n-        getaccountaddress|getaddressesbyaccount|getbalance|getnewaddress|getreceivedbyaccount|listtransactions|move|sendfrom|sendmany)\n-            _bitcoin_accounts\n-            return 0\n-            ;;\n-    esac\n-\n     case \"$cur\" in\n-        -conf=*|-pid=*|-loadblock=*|-wallet=*)\n+        -conf=*|-pid=*|-loadblock=*|-rootcertificates=*|-rpccookiefile=*|-wallet=*)\n             cur=\"${cur#*=}\"\n             _filedir\n             return 0\n@@ -110,31 +29,23 @@ _bitcoind() {\n             return 0\n             ;;\n         *)\n-            local helpopts commands\n \n-            # only parse --help if senseful\n+            # only parse -help if sensible\n             if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n-                helpopts=$($bitcoind --help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+                local helpopts\n+                helpopts=$($bitcoind -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+                COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n             fi\n \n-            # only parse help if senseful\n-            if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n-                commands=$(_bitcoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n-            fi\n-\n-            COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n-\n             # Prevent space if an argument is desired\n             if [[ $COMPREPLY == *= ]]; then\n                 compopt -o nospace\n             fi\n             return 0\n             ;;\n     esac\n-}\n-\n-complete -F _bitcoind bitcoind bitcoin-cli\n-}\n+} &&\n+complete -F _bitcoind bitcoind bitcoin-qt\n \n # Local variables:\n # mode: shell-script"
      },
      {
        "sha": "593d7584ab06d3147dfa56c708d250041472fd32",
        "filename": "contrib/debian/bitcoin-qt.desktop",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/bitcoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/bitcoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.desktop?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,7 +1,8 @@\n [Desktop Entry]\n Encoding=UTF-8\n-Name=Bitcoin\n-Comment=Bitcoin P2P Cryptocurrency\n+Name=Bitcoin Core\n+Comment=Connect to the Bitcoin P2P Network\n+Comment[de]=Verbinde mit dem Bitcoin peer-to-peer Netzwerk\n Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n Exec=bitcoin-qt %u"
      },
      {
        "sha": "9a3cc31c09a8fb719315a546fb2144d423ade038",
        "filename": "contrib/debian/bitcoin-qt.manpages",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/bitcoin-qt.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/bitcoin-qt.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.manpages?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1 @@\n+doc/man/bitcoin-qt.1"
      },
      {
        "sha": "7acb0b0aea668dd16129434813d05c0306617b68",
        "filename": "contrib/debian/bitcoin-tx.bash-completion",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/bitcoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/bitcoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.bash-completion?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1 @@\n+contrib/bitcoin-tx.bash-completion\tbitcoin-tx"
      },
      {
        "sha": "861d49d07022e2468fca7c747d91b7fe4322e1c7",
        "filename": "contrib/debian/bitcoin-tx.manpages",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/bitcoin-tx.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/bitcoin-tx.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.manpages?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1 @@\n+doc/man/bitcoin-tx.1"
      },
      {
        "sha": "5c69d78fbb0fc73017167bab3d8a1c6a78e85ed9",
        "filename": "contrib/debian/bitcoind.bash-completion",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.bash-completion?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1 +1,2 @@\n contrib/bitcoind.bash-completion\tbitcoind\n+contrib/bitcoin-cli.bash-completion\tbitcoin-cli"
      },
      {
        "sha": "bab644ece1369ba4d8896ef507add76aae617d8e",
        "filename": "contrib/debian/bitcoind.manpages",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/bitcoind.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/bitcoind.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.manpages?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,3 +1,2 @@\n-debian/manpages/bitcoind.1\n-debian/manpages/bitcoin.conf.5\n-debian/manpages/bitcoin-cli.1\n+doc/man/bitcoind.1\n+doc/man/bitcoin-cli.1"
      },
      {
        "sha": "33dab9b6388890a5ba10e47fcd3b833bb0875dc4",
        "filename": "contrib/debian/changelog",
        "status": "modified",
        "additions": 122,
        "deletions": 3,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,3 +1,122 @@\n+bitcoin (0.14.1-trusty4) trusty; urgency=medium\n+\n+  * Re-enable UPnP support.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 05 May 2017 13:28:00 -0400\n+\n+bitcoin (0.14.1-trusty3) trusty; urgency=medium\n+\n+  * Build with qt5 if we are on a non-Ubuntu (ie non-Unity) distro.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 04 May 2017 17:13:00 -0400\n+\n+bitcoin (0.14.1-trusty2) trusty; urgency=medium\n+\n+  * Bump minimum boost version in deps.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 04 May 2017 17:12:00 -0400\n+\n+bitcoin (0.14.1-trusty1) trusty; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Sat, 22 Apr 2017 17:10:00 -0400\n+\n+bitcoin (0.14.0-trusty1) trusty; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 08 Mar 2017 10:30:00 -0500\n+\n+bitcoin (0.13.2-trusty1) trusty; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 05 Jan 2017 09:59:00 -0500\n+\n+bitcoin (0.13.1-trusty2) trusty; urgency=medium\n+\n+  * Revert to Qt4, due to https://github.com/bitcoin/bitcoin/issues/9038\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 31 Oct 2016 11:16:00 -0400\n+\n+bitcoin (0.13.1-trusty1) trusty; urgency=medium\n+\n+  * New upstream release.\n+  * Backport updated bitcoin-qt.desktop from upstream master\n+  * Add zmq dependency\n+  * Switch to Qt5 (breaks precise, but that was already broken by C++11)\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 27 Oct 2016 17:32:00 -0400\n+\n+bitcoin (0.13.0-trusty1) trusty; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Sun, 04 Sep 2016 22:09:00 -0400\n+\n+bitcoin (0.12.1-trusty1) trusty; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 18 Apr 2016 14:26:00 -0700\n+\n+bitcoin (0.12.0-trusty6) trusty; urgency=medium\n+\n+  * Fix program-options dep.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 25 Mar 2016 21:41:00 -0700\n+\n+bitcoin (0.12.0-trusty5) trusty; urgency=medium\n+\n+  * Test explicit --with-gui\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 23:25:00 -0800\n+\n+bitcoin (0.12.0-trusty4) trusty; urgency=medium\n+\n+  * Fix libevent-dev dep.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 23:25:00 -0800\n+\n+bitcoin (0.12.0-trusty3) trusty; urgency=medium\n+\n+  * Fix precise boost dep.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:55:00 -0800\n+\n+bitcoin (0.12.0-trusty2) trusty; urgency=medium\n+\n+  * Fix libevent dep.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:53:00 -0800\n+\n+bitcoin (0.12.0-trusty1) trusty; urgency=medium\n+\n+  * New upstream release\n+  * Various updates to contrib/debian were merged, a few were not\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:29:00 -0800\n+\n+bitcoin (0.11.2-trusty1) trusty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 13 Nov 2015 18:39:00 -0800\n+\n+bitcoin (0.11.1-trusty2) trusty; urgency=low\n+\n+  * Remove minupnpc builddep.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 14 Oct 2015 23:06:00 -1000\n+\n+bitcoin (0.11.1-trusty1) trusty; urgency=high\n+\n+  * New upstream release.\n+  * Disable all UPnP support.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 14 Oct 2015 13:57:00 -1000\n+\n bitcoin (0.11.0-precise1) precise; urgency=medium\n \n   * New upstream release.\n@@ -179,7 +298,7 @@ bitcoin (0.5.3-natty0) natty; urgency=low\n bitcoin (0.5.2-natty1) natty; urgency=low\n \n   * Remove mentions on anonymity in package descriptions and manpage.\n-    These should never have been there, bitcoin isn't anonymous without\n+    These should never have been there, bitcoin isnt anonymous without\n     a ton of work that virtually no users will ever be willing and\n     capable of doing\n \n@@ -220,7 +339,7 @@ bitcoin (0.5.0~rc1-natty1) natty; urgency=low\n \n   * Add test_bitcoin to build test\n   * Fix clean\n-  * Remove unnecessary build-dependancies\n+  * Remove uneccessary build-dependancies\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n \n@@ -380,7 +499,7 @@ bitcoin (0.3.20.01~dfsg-1) unstable; urgency=low\n \n bitcoin (0.3.19~dfsg-6) unstable; urgency=low\n \n-  * Fix override aggressive optimizations.\n+  * Fix override agressive optimizations.\n   * Fix tighten build-dependencies to really fit backporting to Lenny:\n     + Add fallback build-dependency on libdb4.6++-dev.\n     + Tighten unversioned Boost build-dependencies to recent versions,"
      },
      {
        "sha": "0d6ad25e249fe9b7b89a738aba89c2ca1d495587",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 30,
        "deletions": 27,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,41 +1,44 @@\n Source: bitcoin\n Section: utils\n Priority: optional\n-Maintainer: Jonas Smedegaard <dr@jones.dk>\n-Uploaders: Micah Anderson <micah@debian.org>\n+Maintainer: Matt Corallo <matt@mattcorallo.com>\n+Uploaders: Matt Corallo <matt@mattcorallo.com>\n Build-Depends: debhelper,\n  devscripts,\n  automake,\n  libtool,\n  bash-completion,\n- libboost-system-dev (>> 1.35) | libboost-system1.35-dev,\n  libdb4.8++-dev,\n  libssl-dev,\n  pkg-config,\n- libminiupnpc8-dev | libminiupnpc-dev (>> 1.6),\n- libboost-filesystem-dev (>> 1.35) | libboost-filesystem1.35-dev,\n- libboost-program-options-dev (>> 1.35) | libboost-program-options1.35-dev,\n- libboost-thread-dev (>> 1.35) | libboost-thread1.35-dev,\n- libboost-test-dev (>> 1.35) | libboost-test1.35-dev,\n- qt4-qmake,\n- libqt4-dev,\n+ libevent-dev,\n+ libboost-system1.48-dev | libboost-system-dev (>> 1.47),\n+ libboost-filesystem1.48-dev | libboost-filesystem-dev (>> 1.47),\n+ libboost-program-options1.48-dev | libboost-program-options-dev (>> 1.47),\n+ libboost-thread1.48-dev | libboost-thread-dev (>> 1.47),\n+ libboost-test1.48-dev | libboost-test-dev (>> 1.47),\n+ libboost-chrono1.48-dev | libboost-chrono-dev (>> 1.47),\n+ libminiupnpc8-dev | libminiupnpc-dev,\n+ qt4-qmake, libqt4-dev,\n+ qttools5-dev-tools, qttools5-dev,\n  libqrencode-dev,\n  libprotobuf-dev, protobuf-compiler,\n- python\n+ python,\n+ libzmq3-dev\n Standards-Version: 3.9.2\n-Homepage: https://www.bitcoin.org/\n+Homepage: https://bitcoincore.org/\n Vcs-Git: git://github.com/bitcoin/bitcoin.git\n Vcs-Browser: https://github.com/bitcoin/bitcoin\n \n Package: bitcoind\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - daemon\n- Bitcoin is an experimental new digital currency that enables instant\n- payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n- technology to operate with no central authority: managing transactions\n- and issuing money are carried out collectively by the network. Bitcoin Core\n- is the name of the open source software which enables the use of this currency.\n+ Bitcoin is a free open source peer-to-peer electronic cash system that\n+ is completely decentralized, without the need for a central server or\n+ trusted parties.  Users hold the crypto keys to their own money and\n+ transact directly with each other, with the help of a P2P network to\n+ check for double-spending.\n  .\n  This package provides the daemon, bitcoind, and the CLI tool\n  bitcoin-cli to interact with the daemon.\n@@ -44,23 +47,23 @@ Package: bitcoin-qt\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - Qt GUI\n- Bitcoin is an experimental new digital currency that enables instant\n- payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n- technology to operate with no central authority: managing transactions\n- and issuing money are carried out collectively by the network. Bitcoin Core\n- is the name of the open source software which enables the use of this currency.\n+ Bitcoin is a free open source peer-to-peer electronic cash system that\n+ is completely decentralized, without the need for a central server or\n+ trusted parties.  Users hold the crypto keys to their own money and\n+ transact directly with each other, with the help of a P2P network to\n+ check for double-spending.\n  .\n  This package provides Bitcoin-Qt, a GUI for Bitcoin based on Qt.\n \n Package: bitcoin-tx\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer digital currency - standalone transaction tool\n- Bitcoin is an experimental new digital currency that enables instant\n- payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n- technology to operate with no central authority: managing transactions\n- and issuing money are carried out collectively by the network. Bitcoin Core\n- is the name of the open source software which enables the use of this currency.\n+ Bitcoin is a free open source peer-to-peer electronic cash system that\n+ is completely decentralized, without the need for a central server or\n+ trusted parties.  Users hold the crypto keys to their own money and\n+ transact directly with each other, with the help of a P2P network to\n+ check for double-spending.\n  .\n  This package provides bitcoin-tx, a command-line transaction creation\n  tool which can be used without a bitcoin daemon.  Some means of"
      },
      {
        "sha": "72d64ce62d2a7e588b495adeec2cdc497c0ead3a",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 11,
        "deletions": 5,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -5,7 +5,7 @@ Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n Source: https://github.com/bitcoin/bitcoin\n \n Files: *\n-Copyright: 2009-2015, Bitcoin Core Developers\n+Copyright: 2009-2017, Bitcoin Core Developers\n License: Expat\n Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n          as well as the numerous contributors to the project.\n@@ -15,12 +15,9 @@ Copyright: 2010-2011, Jonas Smedegaard <dr@jones.dk>\n            2011, Matt Corallo <matt@bluematt.me>\n License: GPL-2+\n \n-Files: debian/manpages/*\n-Copyright: Micah Anderson <micah@debian.org>\n-License: GPL-3+\n-\n Files: src/qt/res/icons/add.png\n        src/qt/res/icons/address-book.png\n+       src/qt/res/icons/chevron.png\n        src/qt/res/icons/configure.png\n        src/qt/res/icons/debugwindow.png\n        src/qt/res/icons/edit.png\n@@ -50,12 +47,21 @@ Comment: Site: https://github.com/stephenhutchings/typicons.font\n \n Files: src/qt/res/icons/connect*.png\n        src/qt/res/src/connect-*.svg\n+       src/qt/res/icons/network_disabled.png\n+       src/qt/res/src/network_disabled.svg\n Copyright: Marco Falke\n+           Luke Dashjr\n License: Expat\n Comment: Inspired by Stephan Hutchings Typicons\n \n Files: src/qt/res/icons/tx_mined.png\n        src/qt/res/src/mine.svg\n+       src/qt/res/icons/fontbigger.png\n+       src/qt/res/icons/fontsmaller.png\n+       src/qt/res/icons/hd_disabled.png\n+       src/qt/res/src/hd_disabled.svg\n+       src/qt/res/icons/hd_enabled.png\n+       src/qt/res/src/hd_enabled.svg\n Copyright: Jonas Schnelli\n License: Expat\n Comment:"
      },
      {
        "sha": "14a59fdf6bc8b58e3bc3e6720548a12fa6ea3b88",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "modified",
        "additions": 30,
        "deletions": 7,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -67,9 +67,30 @@\n # This option can be specified multiple times (default: bind to all interfaces)\n #rpcbind=<addr>\n \n-# You must set rpcuser and rpcpassword to secure the JSON-RPC api\n+# If no rpcpassword is set, rpc cookie auth is sought. The default `-rpccookiefile` name\n+# is .cookie and found in the `-datadir` being used for bitcoind. This option is typically used\n+# when the server and client are run as the same user.\n+#\n+# If not, you must set rpcuser and rpcpassword to secure the JSON-RPC api. The first\n+# method(DEPRECATED) is to set this pair for the server and client:\n #rpcuser=Ulysseys\n #rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n+#\n+# The second method `rpcauth` can be added to server startup argument. It is set at initialization time\n+# using the output from the script in share/rpcuser/rpcuser.py after providing a username:\n+#\n+# ./share/rpcuser/rpcuser.py alice\n+# String to be appended to bitcoin.conf:\n+# rpcauth=alice:f7efda5c189b999524f151318c0c86$d5b51b3beffbc02b724e5d095828e0bc8b2456e9ac8757ae3211a5d9b16a22ae\n+# Your password:\n+# DONT_USE_THIS_YOU_WILL_GET_ROBBED_8ak1gI25KFTvjovL3gAM967mies3E=\n+#\n+# On client-side, you add the normal user/password pair to send commands:\n+#rpcuser=alice\n+#rpcpassword=DONT_USE_THIS_YOU_WILL_GET_ROBBED_8ak1gI25KFTvjovL3gAM967mies3E=\n+#\n+# You can even add multiple entries of these to the server conf file, and client can use any of them:\n+# rpcauth=bob:b2dd077cb54591a2f3139e69a897ac$4e71f08d48b4347cf8eff3815c0e25ae2e9a4340474079f55705f40574f4ec99\n \n # How many seconds bitcoin will wait for a complete RPC HTTP request.\n # after the HTTP connection is established. \n@@ -95,12 +116,7 @@\n # running on another host using this option:\n #rpcconnect=127.0.0.1\n \n-# Transaction Fee Changes in 0.10.0\n-\n-# Send transactions as zero-fee transactions if possible (default: 0)\n-#sendfreetransactions=0\n-\n-# Create transactions that have enough fees (or priority) so they are likely to begin confirmation within n blocks (default: 1).\n+# Create transactions that have enough fees so they are likely to begin confirmation within n blocks (default: 6).\n # This setting is over-ridden by the -paytxfee option.\n #txconfirmtarget=n\n \n@@ -115,6 +131,13 @@\n # be validated sooner.\n #paytxfee=0.00\n \n+# Enable pruning to reduce storage requirements by deleting old blocks. \n+# This mode is incompatible with -txindex and -rescan.\n+# 0 = default (no pruning).\n+# 1 = allows manual pruning via RPC.\n+# >=550 = target to stay under in MiB. \n+#prune=550\n+\n # User interface options\n \n # Start Bitcoin minimized"
      },
      {
        "sha": "154b45873940c9d23b8d1fe96d516ee7b5bdf7f0",
        "filename": "contrib/debian/manpages/bitcoin-cli.1",
        "status": "removed",
        "additions": 0,
        "deletions": 45,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/debian/manpages/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/debian/manpages/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-cli.1?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,45 +0,0 @@\n-.TH BITCOIN-CLI \"1\" \"February 2015\" \"bitcoin-cli 0.10\" \n-.SH NAME\n-bitcoin-cli \\- a remote procedure call client for Bitcoin Core. \n-.SH SYNOPSIS\n-bitcoin-cli [options] <command> [params] \\- Send command to Bitcoin Core. \n-.TP\n-bitcoin-cli [options] help \\- Asks Bitcoin Core for a list of supported commands.\n-.SH DESCRIPTION\n-This manual page documents the bitcoin-cli program. bitcoin-cli is an RPC client used to send commands to Bitcoin Core.\n-\n-.SH OPTIONS\n-.TP\n-\\fB\\-?\\fR\n-Show the help message.\n-.TP\n-\\fB\\-conf=\\fR<file>\n-Specify configuration file (default: bitcoin.conf).\n-.TP\n-\\fB\\-datadir=\\fR<dir>\n-Specify data directory.\n-.TP\n-\\fB\\-testnet\\fR\n-Connect to a Bitcoin Core instance running in testnet mode.\n-.TP\n-\\fB\\-regtest\\fR\n-Connect to a Bitcoin Core instance running in regtest mode (see documentation for -regtest on bitcoind).\n-.TP\n-\\fB\\-rpcuser=\\fR<user>\n-Username for JSON\\-RPC connections.\n-.TP\n-\\fB\\-rpcpassword=\\fR<pw>\n-Password for JSON\\-RPC connections.\n-.TP\n-\\fB\\-rpcport=\\fR<port>\n-Listen for JSON\\-RPC connections on <port> (default: 8332 or testnet: 18332).\n-.TP\n-\\fB\\-rpcconnect=\\fR<ip>\n-Send commands to node running on <ip> (default: 127.0.0.1).\n-\n-.SH \"SEE ALSO\"\n-\\fBbitcoind\\fP, \\fBbitcoin.conf\\fP\n-.SH AUTHOR\n-This manual page was written by Ciemon Dunville <ciemon@gmail.com>. Permission is granted to copy, distribute and/or modify this document under the terms of the MIT License.\n-\n-The complete text of the MIT License can be found on the web at \\fIhttp://opensource.org/licenses/MIT\\fP."
      },
      {
        "sha": "05eadc94cdd441d5c3c6e32137884d43e506b4fb",
        "filename": "contrib/debian/manpages/bitcoin-qt.1",
        "status": "removed",
        "additions": 0,
        "deletions": 191,
        "changes": 191,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/debian/manpages/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/debian/manpages/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-qt.1?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,191 +0,0 @@\n-.TH BITCOIN-QT \"1\" \"April 2013\" \"bitcoin-qt 1\"\n-.SH NAME\n-bitcoin-qt \\- peer-to-peer network based digital currency\n-.SH DESCRIPTION\n-.SS \"Usage:\"\n-.IP\n-bitcoin\\-qt [command\\-line options]\n-.SH OPTIONS\n-.TP\n-\\-?\n-This help message\n-.TP\n-\\fB\\-conf=\\fR<file>\n-Specify configuration file (default: bitcoin.conf)\n-.TP\n-\\fB\\-pid=\\fR<file>\n-Specify pid file (default: bitcoind.pid)\n-.TP\n-\\fB\\-gen\\fR\n-Generate coins\n-.TP\n-\\fB\\-gen\\fR=\\fI0\\fR\n-Don't generate coins\n-.TP\n-\\fB\\-datadir=\\fR<dir>\n-Specify data directory\n-.TP\n-\\fB\\-dbcache=\\fR<n>\n-Set database cache size in megabytes (default: 25)\n-.TP\n-\\fB\\-timeout=\\fR<n>\n-Specify connection timeout in milliseconds (default: 5000)\n-.TP\n-\\fB\\-proxy=\\fR<ip:port>\n-Connect through SOCKS5 proxy\n-.TP\n-\\fB\\-tor=\\fR<ip:port>\n-Use proxy to reach tor hidden services (default: same as \\fB\\-proxy\\fR)\n-.TP\n-\\fB\\-dns\\fR\n-Allow DNS lookups for \\fB\\-addnode\\fR, \\fB\\-seednode\\fR and \\fB\\-connect\\fR\n-.TP\n-\\fB\\-port=\\fR<port>\n-Listen for connections on <port> (default: 8333 or testnet: 18333)\n-.TP\n-\\fB\\-maxconnections=\\fR<n>\n-Maintain at most <n> connections to peers (default: 125)\n-.TP\n-\\fB\\-addnode=\\fR<ip>\n-Add a node to connect to and attempt to keep the connection open\n-.TP\n-\\fB\\-connect=\\fR<ip>\n-Connect only to the specified node(s)\n-.TP\n-\\fB\\-seednode=\\fR<ip>\n-Connect to a node to retrieve peer addresses, and disconnect\n-.TP\n-\\fB\\-externalip=\\fR<ip>\n-Specify your own public address\n-.TP\n-\\fB\\-onlynet=\\fR<net>\n-Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\n-.TP\n-\\fB\\-discover\\fR\n-Discover own IP address (default: 1 when listening and no \\fB\\-externalip\\fR)\n-.TP\n-\\fB\\-checkpoints\\fR\n-Only accept block chain matching built\\-in checkpoints (default: 1)\n-.TP\n-\\fB\\-listen\\fR\n-Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or \\fB\\-connect\\fR)\n-.TP\n-\\fB\\-bind=\\fR<addr>\n-Bind to given address and always listen on it. Use [host]:port notation for IPv6\n-.TP\n-\\fB\\-dnsseed\\fR\n-Find peers using DNS lookup (default: 1 unless \\fB\\-connect\\fR)\n-.TP\n-\\fB\\-banscore=\\fR<n>\n-Threshold for disconnecting misbehaving peers (default: 100)\n-.TP\n-\\fB\\-bantime=\\fR<n>\n-Number of seconds to keep misbehaving peers from reconnecting (default: 86400)\n-.TP\n-\\fB\\-maxreceivebuffer=\\fR<n>\n-Maximum per\\-connection receive buffer, <n>*1000 bytes (default: 5000)\n-.TP\n-\\fB\\-maxsendbuffer=\\fR<n>\n-Maximum per\\-connection send buffer, <n>*1000 bytes (default: 1000)\n-.TP\n-\\fB\\-upnp\\fR\n-Use UPnP to map the listening port (default: 1 when listening)\n-.TP\n-\\fB\\-paytxfee=\\fR<amt>\n-Fee per KB to add to transactions you send\n-.TP\n-\\fB\\-server\\fR\n-Accept command line and JSON\\-RPC commands\n-.TP\n-\\fB\\-testnet\\fR\n-Use the test network\n-.TP\n-\\fB\\-debug\\fR\n-Output extra debugging information. Implies all other \\fB\\-debug\\fR* options\n-.TP\n-\\fB\\-debugnet\\fR\n-Output extra network debugging information\n-.TP\n-\\fB\\-logtimestamps\\fR\n-Prepend debug output with timestamp\n-.TP\n-\\fB\\-shrinkdebugfile\\fR\n-Shrink debug.log file on client startup (default: 1 when no \\fB\\-debug\\fR)\n-.TP\n-\\fB\\-printtoconsole\\fR\n-Send trace/debug info to console instead of debug.log file\n-.TP\n-\\fB\\-rpcuser=\\fR<user>\n-Username for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcpassword=\\fR<pw>\n-Password for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcport=\\fR<port>\n-Listen for JSON\\-RPC connections on <port> (default: 8332 or testnet: 18332)\n-.TP\n-\\fB\\-rpcallowip=\\fR<ip>\n-Allow JSON\\-RPC connections from specified IP address\n-.TP\n-\\fB\\-rpcthreads=\\fR<n>\n-Set the number of threads to service RPC calls (default: 4)\n-.TP\n-\\fB\\-blocknotify=\\fR<cmd>\n-Execute command when the best block changes (%s in cmd is replaced by block hash)\n-.TP\n-\\fB\\-walletnotify=\\fR<cmd>\n-Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\n-.TP\n-\\fB\\-alertnotify=\\fR<cmd>\n-Execute command when a relevant alert is received (%s in cmd is replaced by message)\n-.TP\n-\\fB\\-upgradewallet\\fR\n-Upgrade wallet to latest format\n-.TP\n-\\fB\\-keypool=\\fR<n>\n-Set key pool size to <n> (default: 100)\n-.TP\n-\\fB\\-rescan\\fR\n-Rescan the block chain for missing wallet transactions\n-.TP\n-\\fB\\-salvagewallet\\fR\n-Attempt to recover private keys from a corrupt wallet.dat\n-.TP\n-\\fB\\-checkblocks=\\fR<n>\n-How many blocks to check at startup (default: 288, 0 = all)\n-.TP\n-\\fB\\-checklevel=\\fR<n>\n-How thorough the block verification is (0\\-4, default: 3)\n-.TP\n-\\fB\\-txindex\\fR\n-Maintain a full transaction index (default: 0)\n-.TP\n-\\fB\\-loadblock=\\fR<file>\n-Imports blocks from external blk000??.dat file\n-.TP\n-\\fB\\-reindex\\fR\n-Rebuild block chain index from current blk000??.dat files\n-.TP\n-\\fB\\-par=\\fR<n>\n-Set the number of script verification threads (1\\-16, 0=auto, default: 0)\n-.SS \"Block creation options:\"\n-.TP\n-\\fB\\-blockminsize=\\fR<n>\n-Set minimum block size in bytes (default: 0)\n-.TP\n-\\fB\\-blockmaxsize=\\fR<n>\n-Set maximum block size in bytes (default: 250000)\n-.HP\n-\\fB\\-blockprioritysize=\\fR<n> Set maximum size of high\\-priority/low\\-fee transactions in bytes (default: 27000)\n-.PP\n-Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)\n-.SS \"UI options:\"\n-.TP\n-\\fB\\-lang=\\fR<lang>\n-Set language, for example \"de_DE\" (default: system locale)\n-.TP\n-\\fB\\-min\\fR\n-Start minimized\n-.TP\n-\\fB\\-splash\\fR\n-Show splash screen on startup (default: 1)"
      },
      {
        "sha": "0cf4d991e34c90bf2d38e3fcb982c89cfee6aed6",
        "filename": "contrib/debian/manpages/bitcoin.conf.5",
        "status": "removed",
        "additions": 0,
        "deletions": 79,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/debian/manpages/bitcoin.conf.5",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/debian/manpages/bitcoin.conf.5",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin.conf.5?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,79 +0,0 @@\n-.TH BITCOIN.CONF \"5\" \"January 2011\" \"bitcoin.conf 3.19\"\n-.SH NAME\n-bitcoin.conf \\- bitcoin configuration file\n-.SH SYNOPSIS\n-All command-line options (except for '\\-conf') may be specified in a configuration file, and all configuration file options may also be specified on the command line. Command-line options override values set in the configuration file.\n-.TP\n-The configuration file is a list of 'setting=value' pairs, one per line, with optional comments starting with the '#' character.\n-.TP\n-The configuration file is not automatically created; you can create it using your favorite plain-text editor. By default, bitcoind(1) will look for a file named bitcoin.conf(5) in the bitcoin data directory, but both the data directory and the configuration file path may be changed using the '\\-datadir' and '\\-conf' command-line arguments.\n-.SH LOCATION\n-bitcoin.conf should be located in $HOME/.bitcoin\n-.SH NETWORK-RELATED SETTINGS\n-.TP\n-.TP\n-\\fBtestnet=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n-Enable or disable run on the test network instead of the real *bitcoin* network.\n-.TP\n-\\fBproxy=\\fR\\fI'127.0.0.1:9050'\\fR\n-Connect via a socks4 proxy.\n-.TP\n-\\fBaddnode=\\fR\\fI'10.0.0.2:8333'\\fR\n-Use as many *addnode=* settings as you like to connect to specific peers.\n-.TP\n-\\fBconnect=\\fR\\fI'10.0.0.1:8333'\\fR\n-Use as many *connect=* settings as you like to connect ONLY to specific peers.\n-.TP\n-\\fRmaxconnections=\\fR\\fI'value'\\fR\n-Maximum number of inbound+outbound connections.\n-.SH JSON-RPC OPTIONS\n-.TP\n-\\fBserver=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n-Tells *bitcoin* to accept or not accept JSON-RPC commands.\n-.TP\n-\\fBrpcuser=\\fR\\fI'username'\\fR\n-You must set *rpcuser* to secure the JSON-RPC api.\n-.TP\n-\\fBrpcpassword=\\fR\\fI'password'\\fR\n-You must set *rpcpassword* to secure the JSON-RPC api.\n-.TP\n-\\fBrpcallowip=\\fR\\fI'192.168.1.*'\\fR\n-By default, only RPC connections from localhost are allowed. Specify as many *rpcallowip=* settings as you like to allow connections from other hosts (and you may use * as a wildcard character).\n-.TP\n-\\fBrpcport=\\fR\\fI'8332'\\fR\n-Listen for RPC connections on this TCP port.\n-.TP\n-\\fBrpcconnect=\\fR\\fI'127.0.0.1'\\fR\n-You can use *bitcoin* or *bitcoind(1)* to send commands to *bitcoin*/*bitcoind(1)* running on another host using this option.\n-.TP\n-.SH MISCELLANEOUS OPTIONS\n-.TP\n-\\fBgen=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable attempt to generate bitcoins.\n-.TP\n-\\fB4way=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable use SSE instructions to try to generate bitcoins faster.\n-.TP\n-\\fBkeypool=\\fR\\fI'100'\\fR\n-Pre-generate this many public/private key pairs, so wallet backups will be valid for both prior transactions and several dozen future transactions.\n-.TP\n-\\fBpaytxfee=\\fR\\fI'0.00'\\fR\n-Pay an optional transaction fee every time you send bitcoins. Transactions with fees are more likely than free transactions to be included in generated blocks, so may be validated sooner.\n-.TP\n-\\fBallowreceivebyip=\\fR\\fI'1'\\fR\n-Allow direct connections for the 'pay via IP address' feature.\n-.TP\n-.SH USER INTERFACE OPTIONS\n-.TP\n-\\fBmin=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable start bitcoind minimized.\n-.TP\n-\\fBminimizetotray=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable minimize to the system tray.\n-.SH \"SEE ALSO\"\n-bitcoind(1)\n-.SH AUTHOR\n-This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n-\n-On Debian systems, the complete text of the GNU General Public License can be found in /usr/share/common-licenses/GPL.\n-"
      },
      {
        "sha": "5b0f2921aa415b04663e472162bf95458d308e75",
        "filename": "contrib/debian/manpages/bitcoind.1",
        "status": "removed",
        "additions": 0,
        "deletions": 195,
        "changes": 195,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/debian/manpages/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/debian/manpages/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoind.1?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,195 +0,0 @@\n-.TH BITCOIND \"1\" \"January 2011\" \"bitcoind 3.19\" \n-.SH NAME\n-bitcoind \\- peer-to-peer network based digital currency\n-.SH SYNOPSIS\n-bitcoin [options] <command> [params]  \n-.TP\n-bitcoin [options] help <command> \\- Get help for a command\n-.SH DESCRIPTION\n-This  manual page documents the bitcoind program. Bitcoin is a peer-to-peer digital currency. Peer-to-peer (P2P) means that there is no central authority to issue new money or keep track of transactions. Instead, these tasks are managed collectively by the nodes of the network. Advantages:\n-\n-Bitcoins can be sent easily through the Internet, without having to trust middlemen. Transactions are designed to be irreversible. Be safe from instability caused by fractional reserve banking and central banks. The limited inflation of the Bitcoin system\u2019s money supply is distributed evenly (by CPU power) throughout the network, not monopolized by banks.\n-\n-.SH OPTIONS\n-.TP\n-\\fB\\-conf=\\fR<file>\n-Specify configuration file (default: bitcoin.conf)\n-.TP\n-\\fB\\-gen\\fR\n-Generate coins\n-.TP\n-\\fB\\-gen\\fR=\\fI0\\fR\n-Don't generate coins\n-.TP\n-\\fB\\-min\\fR\n-Start minimized\n-.TP\n-\\fB\\-datadir=\\fR<dir>\n-Specify data directory\n-.TP\n-\\fB\\-proxy=\\fR<ip:port>\n-Connect through SOCKS5 proxy\n-.TP\n-\\fB\\-addnode=\\fR<ip>\n-Add a node to connect to\n-.TP\n-\\fB\\-connect=\\fR<ip>\n-Connect only to the specified node\n-.TP\n-\\fB\\-paytxfee=\\fR<amt>\n-Fee per KB to add to transactions you send\n-.TP\n-\\fB\\-server\\fR\n-Accept command line and JSON\\-RPC commands\n-.TP\n-\\fB\\-daemon\\fR\n-Run in the background as a daemon and accept commands\n-.TP\n-\\fB\\-testnet\\fR\n-Use the test network\n-.TP\n-\\fB\\-rpcuser=\\fR<user>\n-Username for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcpassword=\\fR<pw>\n-Password for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcport=\\fR<port>\n-Listen for JSON\\-RPC connections on <port>\n-.TP\n-\\fB\\-rpcallowip=\\fR<ip>\n-Allow JSON\\-RPC connections from specified IP address\n-.TP\n-\\fB\\-rpcconnect=\\fR<ip>\n-Send commands to node running on <ip>\n-.TP\n-\\-?\n-This help message\n-.SH COMMANDS\n-.TP\n-\\fBbackupwallet 'destination'\\fR\n-Safely copies *wallet.dat* to 'destination', which can be a directory or a path with filename.\n-.TP\n-\\fBgetaccount 'bitcoinaddress'\\fR\n-DEPRECATED. Returns the account associated with the given address.\n-.TP\n-\\fBsetaccount 'bitcoinaddress' ['account']\\fR\n-DEPRECATED. Sets the ['account'] associated with the given address. ['account'] may be omitted to remove an address from ['account'].\n-.TP\n-\\fBgetaccountaddress 'account'\\fR\n-DEPRECATED. Returns a new bitcoin address for 'account'.\n-.TP\n-\\fBgetaddressesbyaccount 'account'\\fR\n-DEPRECATED. Returns the list of addresses associated with the given 'account'.\n-.TP\n-\\fBgetbalance 'account'\\fR\n-Returns the server's available balance, or the balance for 'account' (accounts are deprecated).\n-.TP\n-\\fBgetblockcount\\fR\n-Returns the number of blocks in the longest block chain.\n-.TP\n-\\fBgetblocknumber\\fR\n-Returns the block number of the latest block in the longest block chain.\n-.TP\n-\\fBgetconnectioncount\\fR\n-Returns the number of connections to other nodes.\n-.TP\n-\\fBgetdifficulty\\fR\n-Returns the proof-of-work difficulty as a multiple of the minimum difficulty.\n-.TP\n-\\fBgetgenerate\\fR\n-Returns boolean true if server is trying to generate bitcoins, false otherwise.\n-.TP\n-\\fBsetgenerate 'generate' ['genproclimit']\\fR\n-Generation is limited to ['genproclimit'] processors, \\-1 is unlimited.\n-.TP\n-\\fBgethashespersec\\fR\n-Returns a recent hashes per second performance measurement while generating.\n-.TP\n-\\fBgetinfo\\fR\n-Returns an object containing server information.\n-.TP\n-\\fBgetnewaddress 'account'\\fR\n-Returns a new bitcoin address for receiving payments. If 'account' is specified (deprecated), it is added to the address book so payments received with the address will be credited to 'account'.\n-.TP\n-\\fBgetreceivedbyaccount 'account' ['minconf=1']\\fR\n-DEPRECATED. Returns the total amount received by addresses associated with 'account' in transactions with at least ['minconf'] confirmations.\n-.TP\n-\\fBgetreceivedbyaddress 'bitcoinaddress' ['minconf=1']\\fR\n-Returns the total amount received by 'bitcoinaddress' in transactions with at least ['minconf'] confirmations.\n-.TP\n-\\fBgettransaction 'txid'\\fR\n-Returns information about a specific transaction, given hexadecimal transaction ID.\n-.TP\n-\\fBgetwork 'data'\\fR\n-If 'data' is specified, tries to solve the block and returns true if it was successful. If 'data' is not specified, returns formatted hash 'data' to work on:\n-\n-    \"midstate\" : precomputed hash state after hashing the first half of the data.\n-    \"data\"     : block data.\n-    \"hash1\"    : formatted hash buffer for second hash.\n-    \"target\"   : little endian hash target.\n-.TP\n-\\fBhelp 'command'\\fR\n-List commands, or get help for a command.\n-.TP\n-\\fBlistaccounts ['minconf=1']\\fR\n-DEPRECATED. List accounts and their current balances.\n-     *note: requires bitcoin 0.3.20 or later.\n-.TP\n-\\fBlistreceivedbyaccount ['minconf=1'] ['includeempty=false']\\fR\n-['minconf'] is the minimum number of confirmations before payments are included. ['includeempty'] whether to include addresses that haven't received any payments. Returns an array of objects containing:\n-\n-    \"account\"       : DEPRECATED. the account of the receiving address.\n-    \"amount\"        : total amount received by the address.\n-    \"confirmations\" : number of confirmations of the most recent transaction included.\n-.TP\n-\\fBlistreceivedbyaddress ['minconf=1'] ['includeempty=false']\\fR\n-['minconf'] is the minimum number of confirmations before payments are included. ['includeempty'] whether to include addresses that haven't received any payments. Returns an array of objects containing:\n-\n-    \"address\"       : receiving address.\n-    \"account\"       : DEPRECATED. the account of the receiving address.\n-    \"amount\"        : total amount received by the address.\n-    \"confirmations\" : number of confirmations of the most recent transaction included.\n-.TP\n-\\fBlisttransactions 'account' ['count=10']\\fR\n-Returns a list of the last ['count'] transactions for 'account' \\- for all accounts if 'account' is not specified or is \"*\". Each entry in the list may contain:\n-\n-    \"category\"      : will be generate, send, receive, or move.\n-    \"amount\"        : amount of transaction.\n-    \"fee\"           : Fee (if any) paid (only for send transactions).\n-    \"confirmations\" : number of confirmations (only for generate/send/receive).\n-    \"txid\"          : transaction ID (only for generate/send/receive).\n-    \"otheraccount\"  : account funds were moved to or from (only for move).\n-    \"message\"       : message associated with transaction (only for send).\n-    \"to\"            : message-to associated with transaction (only for send).\n-\n-    *note: requires bitcoin 0.3.20 or later.\n-.TP\n-\\fBmove <'fromaccount'> <'toaccount'> <'amount'> ['minconf=1'] ['comment']\\fR\n-DEPRECATED. Moves funds between accounts.\n-.TP\n-\\fBsendfrom* <'account'> <'bitcoinaddress'> <'amount'> ['minconf=1'] ['comment'] ['comment-to']\\fR\n-DEPRECATED. Sends amount from account's balance to 'bitcoinaddress'. This method will fail if there is less than amount bitcoins with ['minconf'] confirmations in the account's balance (unless account is the empty-string-named default account; it behaves like the *sendtoaddress* method). Returns transaction ID on success.\n-.TP     \n-\\fBsendtoaddress 'bitcoinaddress' 'amount' ['comment'] ['comment-to']\\fR\n-Sends amount from the server's available balance to 'bitcoinaddress'. amount is a real and is rounded to the nearest 0.01. Returns transaction id on success.\n-.TP    \n-\\fBstop\\fR\n-Stops the bitcoin server.\n-.TP    \n-\\fBvalidateaddress 'bitcoinaddress'\\fR\n-Checks that 'bitcoinaddress' looks like a proper bitcoin address. Returns an object containing:\n-\n-    \"isvalid\" : true or false.\n-    \"ismine\"  : true if the address is in the server's wallet.\n-    \"address\" : bitcoinaddress.\n-\n-    *note: ismine and address are only returned if the address is valid.\n-\n-.SH \"SEE ALSO\"\n-bitcoin.conf(5)\n-.SH AUTHOR\n-This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n-\n-On Debian systems, the complete text of the GNU General Public License can be found in /usr/share/common-licenses/GPL.\n-"
      },
      {
        "sha": "6885e3852126f17e910cbe4236b4f773a1fd8de6",
        "filename": "contrib/debian/rules",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/rules",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/debian/rules",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/rules?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -5,20 +5,19 @@\n #build/bitcoind::\n #\t$(if $(filter nocheck,$(DEB_BUILD_OPTIONS)),,src/test_bitcoin)\n \n-DEB_INSTALL_EXAMPLES_bitcoind += debian/examples/*\n-DEB_INSTALL_MANPAGES_bitcoind += debian/manpages/*\n-\n %:\n \tdh --with bash-completion $@\n \n override_dh_auto_clean:\n \tif [ -f Makefile ]; then $(MAKE) distclean; fi\n \trm -rf Makefile.in aclocal.m4 configure src/Makefile.in src/bitcoin-config.h.in src/build-aux src/qt/Makefile.in src/qt/test/Makefile.in src/test/Makefile.in\n \n+QT=$(shell dpkg-vendor --derives-from Ubuntu && echo qt4 || echo qt5)\n+\n # Yea, autogen should be run on the source archive, but I like doing git archive\n override_dh_auto_configure:\n \t./autogen.sh\n-\t./configure\n+\t./configure --with-gui=$(QT)\n \n override_dh_auto_test:\n \tmake check"
      },
      {
        "sha": "67c5e15a15041f77122a8d0745a3164abde9e8d0",
        "filename": "contrib/devtools/README.md",
        "status": "modified",
        "additions": 100,
        "deletions": 35,
        "changes": 135,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -2,19 +2,114 @@ Contents\n ========\n This directory contains tools for developers working on this repository.\n \n-clang-format.py\n+check-doc.py\n+============\n+\n+Check if all command line args are documented. The return value indicates the\n+number of undocumented args.\n+\n+clang-format-diff.py\n+===================\n+\n+A script to format unified git diffs according to [.clang-format](../../src/.clang-format).\n+\n+For instance, to format the last commit with 0 lines of context,\n+the script should be called from the git root folder as follows.\n+\n+```\n+git diff -U0 HEAD~1.. | ./contrib/devtools/clang-format-diff.py -p1 -i -v\n+```\n+\n+copyright\\_header.py\n+====================\n+\n+Provides utilities for managing copyright headers of `The Bitcoin Core\n+developers` in repository source files. It has three subcommands:\n+\n+```\n+$ ./copyright_header.py report <base_directory> [verbose]\n+$ ./copyright_header.py update <base_directory>\n+$ ./copyright_header.py insert <file>\n+```\n+Running these subcommands without arguments displays a usage string.\n+\n+copyright\\_header.py report \\<base\\_directory\\> [verbose]\n+---------------------------------------------------------\n+\n+Produces a report of all copyright header notices found inside the source files\n+of a repository. Useful to quickly visualize the state of the headers.\n+Specifying `verbose` will list the full filenames of files of each category.\n+\n+copyright\\_header.py update \\<base\\_directory\\> [verbose]\n+---------------------------------------------------------\n+Updates all the copyright headers of `The Bitcoin Core developers` which were\n+changed in a year more recent than is listed. For example:\n+```\n+// Copyright (c) <firstYear>-<lastYear> The Bitcoin Core developers\n+```\n+will be updated to:\n+```\n+// Copyright (c) <firstYear>-<lastModifiedYear> The Bitcoin Core developers\n+```\n+where `<lastModifiedYear>` is obtained from the `git log` history.\n+\n+This subcommand also handles copyright headers that have only a single year. In\n+those cases:\n+```\n+// Copyright (c) <year> The Bitcoin Core developers\n+```\n+will be updated to:\n+```\n+// Copyright (c) <year>-<lastModifiedYear> The Bitcoin Core developers\n+```\n+where the update is appropriate.\n+\n+copyright\\_header.py insert \\<file\\>\n+------------------------------------\n+Inserts a copyright header for `The Bitcoin Core developers` at the top of the\n+file in either Python or C++ style as determined by the file extension. If the\n+file is a Python file and it has  `#!` starting the first line, the header is\n+inserted in the line below it.\n+\n+The copyright dates will be set to be `<year_introduced>-<current_year>` where\n+`<year_introduced>` is according to the `git log` history. If\n+`<year_introduced>` is equal to `<current_year>`, it will be set as a single\n+year rather than two hyphenated years.\n+\n+If the file already has a copyright for `The Bitcoin Core developers`, the\n+script will exit.\n+\n+gen-manpages.sh\n ===============\n \n-A script to format cpp source code according to [.clang-format](../../src/.clang-format). This should only be applied to new files or files which are currently not actively developed on. Also, git subtrees are not subject to formatting.\n+A small script to automatically create manpages in ../../doc/man by running the release binaries with the -help option.\n+This requires help2man which can be found at: https://www.gnu.org/software/help2man/\n+\n+git-subtree-check.sh\n+====================\n+\n+Run this script from the root of the repository to verify that a subtree matches the contents of\n+the commit it claims to have been updated to.\n+\n+To use, make sure that you have fetched the upstream repository branch in which the subtree is\n+maintained:\n+* for `src/secp256k1`: https://github.com/bitcoin-core/secp256k1.git (branch master)\n+* for `src/leveldb`: https://github.com/bitcoin-core/leveldb.git (branch bitcoin-fork)\n+* for `src/univalue`: https://github.com/bitcoin-core/univalue.git (branch master)\n+* for `src/crypto/ctaes`: https://github.com/bitcoin-core/ctaes.git (branch master)\n+\n+Usage: `git-subtree-check.sh DIR (COMMIT)`\n \n-github-merge.sh\n+`COMMIT` may be omitted, in which case `HEAD` is used.\n+\n+github-merge.py\n ===============\n \n A small script to automate merging pull-requests securely and sign them with GPG.\n \n For example:\n \n-  ./github-merge.sh bitcoin/bitcoin 3077\n+  ./github-merge.py 3077\n \n (in any git repository) will help you merge pull request #3077 for the\n bitcoin/bitcoin repository.\n@@ -30,7 +125,7 @@ check or whatever).\n \n This means that there are no potential race conditions (where a\n pullreq gets updated while you're reviewing it, but before you click\n-merge), and when using GPG signatures, that even a compromised github\n+merge), and when using GPG signatures, that even a compromised GitHub\n couldn't mess with the sources.\n \n Setup\n@@ -41,21 +136,6 @@ Configuring the github-merge tool for the bitcoin repository is done in the foll\n     git config githubmerge.testcmd \"make -j4 check\" (adapt to whatever you want to use for testing)\n     git config --global user.signingkey mykeyid (if you want to GPG sign)\n \n-fix-copyright-headers.py\n-========================\n-\n-Every year newly updated files need to have its copyright headers updated to reflect the current year.\n-If you run this script from src/ it will automatically update the year on the copyright header for all\n-.cpp and .h files if these have a git commit from the current year.\n-\n-For example a file changed in 2014 (with 2014 being the current year):\n-\n-```// Copyright (c) 2009-2013 The Bitcoin Core developers```\n-\n-would be changed to:\n-\n-```// Copyright (c) 2009-2014 The Bitcoin Core developers```\n-\n optimize-pngs.py\n ================\n \n@@ -98,18 +178,3 @@ It will do the following automatically:\n - add missing translations to the build system (TODO)\n \n See doc/translation-process.md for more information.\n-\n-git-subtree-check.sh\n-====================\n-\n-Run this script from the root of the repository to verify that a subtree matches the contents of\n-the commit it claims to have been updated to.\n-\n-To use, make sure that you have fetched the upstream repository branch in which the subtree is\n-maintained:\n-* for src/secp256k1: https://github.com/bitcoin/secp256k1.git (branch master)\n-* for sec/leveldb: https://github.com/bitcoin/leveldb.git (branch bitcoin-fork)\n-\n-Usage: git-subtree-check.sh DIR COMMIT\n-\n-COMMIT may be omitted, in which case HEAD is used."
      },
      {
        "sha": "10c3bab03b69317d57f0a6b548844ea5d22c6eab",
        "filename": "contrib/devtools/check-doc.py",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/check-doc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/check-doc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-doc.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,46 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+'''\n+This checks if all command line args are documented.\n+Return value is 0 to indicate no error.\n+\n+Author: @MarcoFalke\n+'''\n+\n+from subprocess import check_output\n+import re\n+import sys\n+\n+FOLDER_GREP = 'src'\n+FOLDER_TEST = 'src/test/'\n+CMD_ROOT_DIR = '`git rev-parse --show-toplevel`/%s' % FOLDER_GREP\n+CMD_GREP_ARGS = r\"egrep -r -I '(map(Multi)?Args(\\.count\\(|\\[)|Get(Bool)?Arg\\()\\\"\\-[^\\\"]+?\\\"' %s | grep -v '%s'\" % (CMD_ROOT_DIR, FOLDER_TEST)\n+CMD_GREP_DOCS = r\"egrep -r -I 'HelpMessageOpt\\(\\\"\\-[^\\\"=]+?(=|\\\")' %s\" % (CMD_ROOT_DIR)\n+REGEX_ARG = re.compile(r'(?:map(?:Multi)?Args(?:\\.count\\(|\\[)|Get(?:Bool)?Arg\\()\\\"(\\-[^\\\"]+?)\\\"')\n+REGEX_DOC = re.compile(r'HelpMessageOpt\\(\\\"(\\-[^\\\"=]+?)(?:=|\\\")')\n+# list unsupported, deprecated and duplicate args as they need no documentation\n+SET_DOC_OPTIONAL = set(['-rpcssl', '-benchmark', '-h', '-help', '-socks', '-tor', '-debugnet', '-whitelistalwaysrelay', '-prematurewitness', '-walletprematurewitness', '-promiscuousmempoolflags', '-blockminsize', '-dbcrashratio', '-forcecompactdb', '-usehd'])\n+\n+def main():\n+  used = check_output(CMD_GREP_ARGS, shell=True)\n+  docd = check_output(CMD_GREP_DOCS, shell=True)\n+\n+  args_used = set(re.findall(REGEX_ARG,used))\n+  args_docd = set(re.findall(REGEX_DOC,docd)).union(SET_DOC_OPTIONAL)\n+  args_need_doc = args_used.difference(args_docd)\n+  args_unknown = args_docd.difference(args_used)\n+\n+  print \"Args used        : %s\" % len(args_used)\n+  print \"Args documented  : %s\" % len(args_docd)\n+  print \"Args undocumented: %s\" % len(args_need_doc)\n+  print args_need_doc\n+  print \"Args unknown     : %s\" % len(args_unknown)\n+  print args_unknown\n+\n+  sys.exit(len(args_need_doc))\n+\n+if __name__ == \"__main__\":\n+    main()"
      },
      {
        "sha": "d2698de041b75133b349e8783fe21f678ee3d2e6",
        "filename": "contrib/devtools/check-rpc-mappings.py",
        "status": "added",
        "additions": 158,
        "deletions": 0,
        "changes": 158,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/check-rpc-mappings.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/check-rpc-mappings.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-rpc-mappings.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,158 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Check RPC argument consistency.\"\"\"\n+\n+from collections import defaultdict\n+import os\n+import re\n+import sys\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+    \"src/rpc/server.cpp\",\n+    \"src/rpc/blockchain.cpp\",\n+    \"src/rpc/mining.cpp\",\n+    \"src/rpc/misc.cpp\",\n+    \"src/rpc/net.cpp\",\n+    \"src/rpc/rawtransaction.cpp\",\n+    \"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy', 'arg0', 'arg1', 'arg2', 'arg3', 'arg4', 'arg5', 'arg6', 'arg7', 'arg8', 'arg9'}\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+        self.convert = False\n+\n+def parse_string(s):\n+    assert s[0] == '\"'\n+    assert s[-1] == '\"'\n+    return s[1:-1]\n+\n+def process_commands(fname):\n+    \"\"\"Find and parse dispatch table in implementation file `fname`.\"\"\"\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *{([^}]*)} *},', line)\n+                    assert m, 'No match to table expression: %s' % line\n+                    name = parse_string(m.group(2))\n+                    args_str = m.group(4).strip()\n+                    if args_str:\n+                        args = [RPCArgument(parse_string(x.strip()).split('|'), idx) for idx, x in enumerate(args_str.split(','))]\n+                    else:\n+                        args = []\n+                    cmds.append(RPCCommand(name, args))\n+    assert not in_rpcs, \"Something went wrong with parsing the C++ file: update the regexps\"\n+    return cmds\n+\n+def process_mapping(fname):\n+    \"\"\"Find and parse conversion table in implementation file `fname`.\"\"\"\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if line == 'static const CRPCConvertParam vRPCConvertParams[] =':\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *([0-9]+) *, *(\"[^\"]*\") *},', line)\n+                    assert m, 'No match to table expression: %s' % line\n+                    name = parse_string(m.group(1))\n+                    idx = int(m.group(2))\n+                    argname = parse_string(m.group(3))\n+                    cmds.append((name, idx, argname))\n+    assert not in_rpcs\n+    return cmds\n+\n+def main():\n+    root = sys.argv[1]\n+\n+    # Get all commands from dispatch tables\n+    cmds = []\n+    for fname in SOURCES:\n+        cmds += process_commands(os.path.join(root, fname))\n+\n+    cmds_by_name = {}\n+    for cmd in cmds:\n+        cmds_by_name[cmd.name] = cmd\n+\n+    # Get current convert mapping for client\n+    client = SOURCE_CLIENT\n+    mapping = set(process_mapping(os.path.join(root, client)))\n+\n+    print('* Checking consistency between dispatch tables and vRPCConvertParams')\n+\n+    # Check mapping consistency\n+    errors = 0\n+    for (cmdname, argidx, argname) in mapping:\n+        try:\n+            rargnames = cmds_by_name[cmdname].args[argidx].names\n+        except IndexError:\n+            print('ERROR: %s argument %i (named %s in vRPCConvertParams) is not defined in dispatch table' % (cmdname, argidx, argname))\n+            errors += 1\n+            continue\n+        if argname not in rargnames:\n+            print('ERROR: %s argument %i is named %s in vRPCConvertParams but %s in dispatch table' % (cmdname, argidx, argname, rargnames), file=sys.stderr)\n+            errors += 1\n+\n+    # Check for conflicts in vRPCConvertParams conversion\n+    # All aliases for an argument must either be present in the\n+    # conversion table, or not. Anything in between means an oversight\n+    # and some aliases won't work.\n+    for cmd in cmds:\n+        for arg in cmd.args:\n+            convert = [((cmd.name, arg.idx, argname) in mapping) for argname in arg.names]\n+            if any(convert) != all(convert):\n+                print('ERROR: %s argument %s has conflicts in vRPCConvertParams conversion specifier %s' % (cmd.name, arg.names, convert))\n+                errors += 1\n+            arg.convert = all(convert)\n+\n+    # Check for conversion difference by argument name.\n+    # It is preferable for API consistency that arguments with the same name\n+    # have the same conversion, so bin by argument name.\n+    all_methods_by_argname = defaultdict(list)\n+    converts_by_argname = defaultdict(list)\n+    for cmd in cmds:\n+        for arg in cmd.args:\n+            for argname in arg.names:\n+                all_methods_by_argname[argname].append(cmd.name)\n+                converts_by_argname[argname].append(arg.convert)\n+\n+    for argname, convert in converts_by_argname.items():\n+        if all(convert) != any(convert):\n+            if argname in IGNORE_DUMMY_ARGS:\n+                # these are testing or dummy, don't warn for them\n+                continue\n+            print('WARNING: conversion mismatch for argument named %s (%s)' %\n+                  (argname, list(zip(all_methods_by_argname[argname], converts_by_argname[argname]))))\n+\n+    sys.exit(errors > 0)\n+\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "7ea49b65e1776a00084375c5271a7d1d7ec4d477",
        "filename": "contrib/devtools/clang-format-diff.py",
        "status": "added",
        "additions": 164,
        "deletions": 0,
        "changes": 164,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/clang-format-diff.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/clang-format-diff.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format-diff.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,164 @@\n+#!/usr/bin/env python\n+#\n+#===- clang-format-diff.py - ClangFormat Diff Reformatter ----*- python -*--===#\n+#\n+#                     The LLVM Compiler Infrastructure\n+#\n+# This file is distributed under the University of Illinois Open Source\n+# License.\n+#\n+#           ============================================================\n+#\n+# University of Illinois/NCSA\n+# Open Source License\n+#\n+# Copyright (c) 2007-2015 University of Illinois at Urbana-Champaign.\n+# All rights reserved.\n+#\n+# Developed by:\n+#\n+#     LLVM Team\n+#\n+#     University of Illinois at Urbana-Champaign\n+#\n+#     http://llvm.org\n+#\n+# Permission is hereby granted, free of charge, to any person obtaining a copy of\n+# this software and associated documentation files (the \"Software\"), to deal with\n+# the Software without restriction, including without limitation the rights to\n+# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n+# of the Software, and to permit persons to whom the Software is furnished to do\n+# so, subject to the following conditions:\n+#\n+#     * Redistributions of source code must retain the above copyright notice,\n+#       this list of conditions and the following disclaimers.\n+#\n+#     * Redistributions in binary form must reproduce the above copyright notice,\n+#       this list of conditions and the following disclaimers in the\n+#       documentation and/or other materials provided with the distribution.\n+#\n+#     * Neither the names of the LLVM Team, University of Illinois at\n+#       Urbana-Champaign, nor the names of its contributors may be used to\n+#       endorse or promote products derived from this Software without specific\n+#       prior written permission.\n+#\n+# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n+# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n+# CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\n+# SOFTWARE.\n+#\n+#           ============================================================\n+#\n+#===------------------------------------------------------------------------===#\n+\n+r\"\"\"\n+ClangFormat Diff Reformatter\n+============================\n+\n+This script reads input from a unified diff and reformats all the changed\n+lines. This is useful to reformat all the lines touched by a specific patch.\n+Example usage for git/svn users:\n+\n+  git diff -U0 HEAD^ | clang-format-diff.py -p1 -i\n+  svn diff --diff-cmd=diff -x-U0 | clang-format-diff.py -i\n+\n+\"\"\"\n+\n+import argparse\n+import difflib\n+import re\n+import string\n+import subprocess\n+import StringIO\n+import sys\n+\n+\n+# Change this to the full path if clang-format is not on the path.\n+binary = 'clang-format'\n+\n+\n+def main():\n+  parser = argparse.ArgumentParser(description=\n+                                   'Reformat changed lines in diff. Without -i '\n+                                   'option just output the diff that would be '\n+                                   'introduced.')\n+  parser.add_argument('-i', action='store_true', default=False,\n+                      help='apply edits to files instead of displaying a diff')\n+  parser.add_argument('-p', metavar='NUM', default=0,\n+                      help='strip the smallest prefix containing P slashes')\n+  parser.add_argument('-regex', metavar='PATTERN', default=None,\n+                      help='custom pattern selecting file paths to reformat '\n+                      '(case sensitive, overrides -iregex)')\n+  parser.add_argument('-iregex', metavar='PATTERN', default=\n+                      r'.*\\.(cpp|cc|c\\+\\+|cxx|c|cl|h|hpp|m|mm|inc|js|ts|proto'\n+                      r'|protodevel|java)',\n+                      help='custom pattern selecting file paths to reformat '\n+                      '(case insensitive, overridden by -regex)')\n+  parser.add_argument('-sort-includes', action='store_true', default=False,\n+                      help='let clang-format sort include blocks')\n+  parser.add_argument('-v', '--verbose', action='store_true',\n+                      help='be more verbose, ineffective without -i')\n+  args = parser.parse_args()\n+\n+  # Extract changed lines for each file.\n+  filename = None\n+  lines_by_file = {}\n+  for line in sys.stdin:\n+    match = re.search('^\\+\\+\\+\\ (.*?/){%s}(\\S*)' % args.p, line)\n+    if match:\n+      filename = match.group(2)\n+    if filename == None:\n+      continue\n+\n+    if args.regex is not None:\n+      if not re.match('^%s$' % args.regex, filename):\n+        continue\n+    else:\n+      if not re.match('^%s$' % args.iregex, filename, re.IGNORECASE):\n+        continue\n+\n+    match = re.search('^@@.*\\+(\\d+)(,(\\d+))?', line)\n+    if match:\n+      start_line = int(match.group(1))\n+      line_count = 1\n+      if match.group(3):\n+        line_count = int(match.group(3))\n+      if line_count == 0:\n+        continue\n+      end_line = start_line + line_count - 1\n+      lines_by_file.setdefault(filename, []).extend(\n+          ['-lines', str(start_line) + ':' + str(end_line)])\n+\n+  # Reformat files containing changes in place.\n+  for filename, lines in lines_by_file.iteritems():\n+    if args.i and args.verbose:\n+      print 'Formatting', filename\n+    command = [binary, filename]\n+    if args.i:\n+      command.append('-i')\n+    if args.sort_includes:\n+      command.append('-sort-includes')\n+    command.extend(lines)\n+    command.extend(['-style=file', '-fallback-style=none'])\n+    p = subprocess.Popen(command, stdout=subprocess.PIPE,\n+                         stderr=None, stdin=subprocess.PIPE)\n+    stdout, stderr = p.communicate()\n+    if p.returncode != 0:\n+      sys.exit(p.returncode)\n+\n+    if not args.i:\n+      with open(filename) as f:\n+        code = f.readlines()\n+      formatted_code = StringIO.StringIO(stdout).readlines()\n+      diff = difflib.unified_diff(code, formatted_code,\n+                                  filename, filename,\n+                                  '(before formatting)', '(after formatting)')\n+      diff_string = string.join(diff, '')\n+      if len(diff_string) > 0:\n+        sys.stdout.write(diff_string)\n+\n+if __name__ == '__main__':\n+  main()"
      },
      {
        "sha": "cee99047ac67e69fe767a910ac56811e574cfc8d",
        "filename": "contrib/devtools/clang-format.py",
        "status": "removed",
        "additions": 0,
        "deletions": 62,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/devtools/clang-format.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/devtools/clang-format.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,62 +0,0 @@\n-#!/usr/bin/env python\n-'''\n-Wrapper script for clang-format\n-\n-Copyright (c) 2015 MarcoFalke\n-Copyright (c) 2015 The Bitcoin Core developers\n-Distributed under the MIT software license, see the accompanying\n-file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-\n-import os\n-import sys\n-import subprocess\n-\n-tested_versions = ['3.6.0', '3.6.1', '3.6.2'] # A set of versions known to produce the same output\n-accepted_file_extensions = ('.h', '.cpp') # Files to format\n-\n-def check_clang_format_version(clang_format_exe):\n-    try:\n-        output = subprocess.check_output([clang_format_exe, '-version'])\n-        for ver in tested_versions:\n-            if ver in output:\n-                print \"Detected clang-format version \" + ver\n-                return\n-        raise RuntimeError(\"Untested version: \" + output)\n-    except Exception as e:\n-        print 'Could not verify version of ' + clang_format_exe + '.'\n-        raise e\n-\n-def check_command_line_args(argv):\n-    required_args = ['{clang-format-exe}', '{files}']\n-    example_args = ['clang-format-3.x', 'src/main.cpp', 'src/wallet/*']\n-\n-    if(len(argv) < len(required_args) + 1):\n-        for word in (['Usage:', argv[0]] + required_args):\n-            print word,\n-        print ''\n-        for word in (['E.g:', argv[0]] + example_args):\n-            print word,\n-        print ''\n-        sys.exit(1)\n-\n-def run_clang_format(clang_format_exe, files):\n-    for target in files:\n-        if os.path.isdir(target):\n-            for path, dirs, files in os.walk(target):\n-                run_clang_format(clang_format_exe, (os.path.join(path, f) for f in files))\n-        elif target.endswith(accepted_file_extensions):\n-            print \"Format \" + target\n-            subprocess.check_call([clang_format_exe, '-i', '-style=file', target], stdout=open(os.devnull, 'wb'), stderr=subprocess.STDOUT)\n-        else:\n-            print \"Skip \" + target\n-\n-def main(argv):\n-    check_command_line_args(argv)\n-    clang_format_exe = argv[1]\n-    files = argv[2:]\n-    check_clang_format_version(clang_format_exe)\n-    run_clang_format(clang_format_exe, files)\n-\n-if __name__ == \"__main__\":\n-    main(sys.argv)"
      },
      {
        "sha": "1c9dbc7f68ff5355fa02848dd6c85d659cf8d409",
        "filename": "contrib/devtools/commit-script-check.sh",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/commit-script-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/commit-script-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/commit-script-check.sh?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,46 @@\n+#!/bin/sh\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# This simple script checks for commits beginning with: scripted-diff:\n+# If found, looks for a script between the lines -BEGIN VERIFY SCRIPT- and\n+# -END VERIFY SCRIPT-. If no ending is found, it reads until the end of the\n+# commit message.\n+\n+# The resulting script should exactly transform the previous commit into the current\n+# one. Any remaining diff signals an error.\n+\n+if test \"x$1\" = \"x\"; then\n+    echo \"Usage: $0 <commit>...\"\n+    exit 1\n+fi\n+\n+RET=0\n+PREV_BRANCH=`git name-rev --name-only HEAD`\n+PREV_HEAD=`git rev-parse HEAD`\n+for i in `git rev-list --reverse $1`; do\n+    if git rev-list -n 1 --pretty=\"%s\" $i | grep -q \"^scripted-diff:\"; then\n+        git checkout --quiet $i^ || exit\n+        SCRIPT=\"`git rev-list --format=%b -n1 $i | sed '/^-BEGIN VERIFY SCRIPT-$/,/^-END VERIFY SCRIPT-$/{//!b};d'`\"\n+        if test \"x$SCRIPT\" = \"x\"; then\n+            echo \"Error: missing script for: $i\"\n+            echo \"Failed\"\n+            RET=1\n+        else\n+            echo \"Running script for: $i\"\n+            echo \"$SCRIPT\"\n+            eval \"$SCRIPT\"\n+            git --no-pager diff --exit-code $i && echo \"OK\" || (echo \"Failed\"; false) || RET=1\n+        fi\n+        git reset --quiet --hard HEAD\n+     else\n+        if git rev-list \"--format=%b\" -n1 $i | grep -q '^-\\(BEGIN\\|END\\)[ a-zA-Z]*-$'; then\n+            echo \"Error: script block marker but no scripted-diff in title\"\n+            echo \"Failed\"\n+            RET=1\n+        fi\n+    fi\n+done\n+git checkout --quiet $PREV_BRANCH 2>/dev/null || git checkout --quiet $PREV_HEAD\n+exit $RET"
      },
      {
        "sha": "6d801d3ac7905cfe745d5390ed4747cf90c7f7e3",
        "filename": "contrib/devtools/copyright_header.py",
        "status": "added",
        "additions": 610,
        "deletions": 0,
        "changes": 610,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/copyright_header.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/copyright_header.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/copyright_header.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,610 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import re\n+import fnmatch\n+import sys\n+import subprocess\n+import datetime\n+import os\n+\n+################################################################################\n+# file filtering\n+################################################################################\n+\n+EXCLUDE = [\n+    # libsecp256k1:\n+    'src/secp256k1/include/secp256k1.h',\n+    'src/secp256k1/include/secp256k1_ecdh.h',\n+    'src/secp256k1/include/secp256k1_recovery.h',\n+    'src/secp256k1/include/secp256k1_schnorr.h',\n+    'src/secp256k1/src/java/org_bitcoin_NativeSecp256k1.c',\n+    'src/secp256k1/src/java/org_bitcoin_NativeSecp256k1.h',\n+    'src/secp256k1/src/java/org_bitcoin_Secp256k1Context.c',\n+    'src/secp256k1/src/java/org_bitcoin_Secp256k1Context.h',\n+    # auto generated:\n+    'src/univalue/lib/univalue_escapes.h',\n+    'src/qt/bitcoinstrings.cpp',\n+    'src/chainparamsseeds.h',\n+    # other external copyrights:\n+    'src/tinyformat.h',\n+    'src/leveldb/util/env_win.cc',\n+    'src/crypto/ctaes/bench.c',\n+    'test/functional/test_framework/bignum.py',\n+    # python init:\n+    '*__init__.py',\n+]\n+EXCLUDE_COMPILED = re.compile('|'.join([fnmatch.translate(m) for m in EXCLUDE]))\n+\n+INCLUDE = ['*.h', '*.cpp', '*.cc', '*.c', '*.py']\n+INCLUDE_COMPILED = re.compile('|'.join([fnmatch.translate(m) for m in INCLUDE]))\n+\n+def applies_to_file(filename):\n+    return ((EXCLUDE_COMPILED.match(filename) is None) and\n+            (INCLUDE_COMPILED.match(filename) is not None))\n+\n+################################################################################\n+# obtain list of files in repo according to INCLUDE and EXCLUDE\n+################################################################################\n+\n+GIT_LS_CMD = 'git ls-files'\n+\n+def call_git_ls():\n+    out = subprocess.check_output(GIT_LS_CMD.split(' '))\n+    return [f for f in out.decode(\"utf-8\").split('\\n') if f != '']\n+\n+def get_filenames_to_examine():\n+    filenames = call_git_ls()\n+    return sorted([filename for filename in filenames if\n+                   applies_to_file(filename)])\n+\n+################################################################################\n+# define and compile regexes for the patterns we are looking for\n+################################################################################\n+\n+\n+COPYRIGHT_WITH_C = 'Copyright \\(c\\)'\n+COPYRIGHT_WITHOUT_C = 'Copyright'\n+ANY_COPYRIGHT_STYLE = '(%s|%s)' % (COPYRIGHT_WITH_C, COPYRIGHT_WITHOUT_C)\n+\n+YEAR = \"20[0-9][0-9]\"\n+YEAR_RANGE = '(%s)(-%s)?' % (YEAR, YEAR)\n+YEAR_LIST = '(%s)(, %s)+' % (YEAR, YEAR)\n+ANY_YEAR_STYLE = '(%s|%s)' % (YEAR_RANGE, YEAR_LIST)\n+ANY_COPYRIGHT_STYLE_OR_YEAR_STYLE = (\"%s %s\" % (ANY_COPYRIGHT_STYLE,\n+                                                ANY_YEAR_STYLE))\n+\n+ANY_COPYRIGHT_COMPILED = re.compile(ANY_COPYRIGHT_STYLE_OR_YEAR_STYLE)\n+\n+def compile_copyright_regex(copyright_style, year_style, name):\n+    return re.compile('%s %s %s' % (copyright_style, year_style, name))\n+\n+EXPECTED_HOLDER_NAMES = [\n+    \"Satoshi Nakamoto\\n\",\n+    \"The Bitcoin Core developers\\n\",\n+    \"The Bitcoin Core developers \\n\",\n+    \"Bitcoin Core Developers\\n\",\n+    \"the Bitcoin Core developers\\n\",\n+    \"The Bitcoin developers\\n\",\n+    \"The LevelDB Authors\\. All rights reserved\\.\\n\",\n+    \"BitPay Inc\\.\\n\",\n+    \"BitPay, Inc\\.\\n\",\n+    \"University of Illinois at Urbana-Champaign\\.\\n\",\n+    \"MarcoFalke\\n\",\n+    \"Pieter Wuille\\n\",\n+    \"Pieter Wuille +\\*\\n\",\n+    \"Pieter Wuille, Gregory Maxwell +\\*\\n\",\n+    \"Pieter Wuille, Andrew Poelstra +\\*\\n\",\n+    \"Andrew Poelstra +\\*\\n\",\n+    \"Wladimir J. van der Laan\\n\",\n+    \"Jeff Garzik\\n\",\n+    \"Diederik Huys, Pieter Wuille +\\*\\n\",\n+    \"Thomas Daede, Cory Fields +\\*\\n\",\n+    \"Jan-Klaas Kollhof\\n\",\n+    \"Sam Rushing\\n\",\n+    \"ArtForz -- public domain half-a-node\\n\",\n+]\n+\n+DOMINANT_STYLE_COMPILED = {}\n+YEAR_LIST_STYLE_COMPILED = {}\n+WITHOUT_C_STYLE_COMPILED = {}\n+\n+for holder_name in EXPECTED_HOLDER_NAMES:\n+    DOMINANT_STYLE_COMPILED[holder_name] = (\n+        compile_copyright_regex(COPYRIGHT_WITH_C, YEAR_RANGE, holder_name))\n+    YEAR_LIST_STYLE_COMPILED[holder_name] = (\n+        compile_copyright_regex(COPYRIGHT_WITH_C, YEAR_LIST, holder_name))\n+    WITHOUT_C_STYLE_COMPILED[holder_name] = (\n+        compile_copyright_regex(COPYRIGHT_WITHOUT_C, ANY_YEAR_STYLE,\n+                                holder_name))\n+\n+################################################################################\n+# search file contents for copyright message of particular category\n+################################################################################\n+\n+def get_count_of_copyrights_of_any_style_any_holder(contents):\n+    return len(ANY_COPYRIGHT_COMPILED.findall(contents))\n+\n+def file_has_dominant_style_copyright_for_holder(contents, holder_name):\n+    match = DOMINANT_STYLE_COMPILED[holder_name].search(contents)\n+    return match is not None\n+\n+def file_has_year_list_style_copyright_for_holder(contents, holder_name):\n+    match = YEAR_LIST_STYLE_COMPILED[holder_name].search(contents)\n+    return match is not None\n+\n+def file_has_without_c_style_copyright_for_holder(contents, holder_name):\n+    match = WITHOUT_C_STYLE_COMPILED[holder_name].search(contents)\n+    return match is not None\n+\n+################################################################################\n+# get file info\n+################################################################################\n+\n+def read_file(filename):\n+    return open(os.path.abspath(filename), 'r').read()\n+\n+def gather_file_info(filename):\n+    info = {}\n+    info['filename'] = filename\n+    c = read_file(filename)\n+    info['contents'] = c\n+\n+    info['all_copyrights'] = get_count_of_copyrights_of_any_style_any_holder(c)\n+\n+    info['classified_copyrights'] = 0\n+    info['dominant_style'] = {}\n+    info['year_list_style'] = {}\n+    info['without_c_style'] = {}\n+    for holder_name in EXPECTED_HOLDER_NAMES:\n+        has_dominant_style = (\n+            file_has_dominant_style_copyright_for_holder(c, holder_name))\n+        has_year_list_style = (\n+            file_has_year_list_style_copyright_for_holder(c, holder_name))\n+        has_without_c_style = (\n+            file_has_without_c_style_copyright_for_holder(c, holder_name))\n+        info['dominant_style'][holder_name] = has_dominant_style\n+        info['year_list_style'][holder_name] = has_year_list_style\n+        info['without_c_style'][holder_name] = has_without_c_style\n+        if has_dominant_style or has_year_list_style or has_without_c_style:\n+            info['classified_copyrights'] = info['classified_copyrights'] + 1\n+    return info\n+\n+################################################################################\n+# report execution\n+################################################################################\n+\n+SEPARATOR = '-'.join(['' for _ in range(80)])\n+\n+def print_filenames(filenames, verbose):\n+    if not verbose:\n+        return\n+    for filename in filenames:\n+        print(\"\\t%s\" % filename)\n+\n+def print_report(file_infos, verbose):\n+    print(SEPARATOR)\n+    examined = [i['filename'] for i in file_infos]\n+    print(\"%d files examined according to INCLUDE and EXCLUDE fnmatch rules\" %\n+          len(examined))\n+    print_filenames(examined, verbose)\n+\n+    print(SEPARATOR)\n+    print('')\n+    zero_copyrights = [i['filename'] for i in file_infos if\n+                       i['all_copyrights'] == 0]\n+    print(\"%4d with zero copyrights\" % len(zero_copyrights))\n+    print_filenames(zero_copyrights, verbose)\n+    one_copyright = [i['filename'] for i in file_infos if\n+                     i['all_copyrights'] == 1]\n+    print(\"%4d with one copyright\" % len(one_copyright))\n+    print_filenames(one_copyright, verbose)\n+    two_copyrights = [i['filename'] for i in file_infos if\n+                      i['all_copyrights'] == 2]\n+    print(\"%4d with two copyrights\" % len(two_copyrights))\n+    print_filenames(two_copyrights, verbose)\n+    three_copyrights = [i['filename'] for i in file_infos if\n+                        i['all_copyrights'] == 3]\n+    print(\"%4d with three copyrights\" % len(three_copyrights))\n+    print_filenames(three_copyrights, verbose)\n+    four_or_more_copyrights = [i['filename'] for i in file_infos if\n+                               i['all_copyrights'] >= 4]\n+    print(\"%4d with four or more copyrights\" % len(four_or_more_copyrights))\n+    print_filenames(four_or_more_copyrights, verbose)\n+    print('')\n+    print(SEPARATOR)\n+    print('Copyrights with dominant style:\\ne.g. \"Copyright (c)\" and '\n+          '\"<year>\" or \"<startYear>-<endYear>\":\\n')\n+    for holder_name in EXPECTED_HOLDER_NAMES:\n+        dominant_style = [i['filename'] for i in file_infos if\n+                          i['dominant_style'][holder_name]]\n+        if len(dominant_style) > 0:\n+            print(\"%4d with '%s'\" % (len(dominant_style),\n+                                     holder_name.replace('\\n', '\\\\n')))\n+            print_filenames(dominant_style, verbose)\n+    print('')\n+    print(SEPARATOR)\n+    print('Copyrights with year list style:\\ne.g. \"Copyright (c)\" and '\n+          '\"<year1>, <year2>, ...\":\\n')\n+    for holder_name in EXPECTED_HOLDER_NAMES:\n+        year_list_style = [i['filename'] for i in file_infos if\n+                           i['year_list_style'][holder_name]]\n+        if len(year_list_style) > 0:\n+            print(\"%4d with '%s'\" % (len(year_list_style),\n+                                     holder_name.replace('\\n', '\\\\n')))\n+            print_filenames(year_list_style, verbose)\n+    print('')\n+    print(SEPARATOR)\n+    print('Copyrights with no \"(c)\" style:\\ne.g. \"Copyright\" and \"<year>\" or '\n+          '\"<startYear>-<endYear>\":\\n')\n+    for holder_name in EXPECTED_HOLDER_NAMES:\n+        without_c_style = [i['filename'] for i in file_infos if\n+                           i['without_c_style'][holder_name]]\n+        if len(without_c_style) > 0:\n+            print(\"%4d with '%s'\" % (len(without_c_style),\n+                                     holder_name.replace('\\n', '\\\\n')))\n+            print_filenames(without_c_style, verbose)\n+\n+    print('')\n+    print(SEPARATOR)\n+\n+    unclassified_copyrights = [i['filename'] for i in file_infos if\n+                               i['classified_copyrights'] < i['all_copyrights']]\n+    print(\"%d with unexpected copyright holder names\" %\n+          len(unclassified_copyrights))\n+    print_filenames(unclassified_copyrights, verbose)\n+    print(SEPARATOR)\n+\n+def exec_report(base_directory, verbose):\n+    original_cwd = os.getcwd()\n+    os.chdir(base_directory)\n+    filenames = get_filenames_to_examine()\n+    file_infos = [gather_file_info(f) for f in filenames]\n+    print_report(file_infos, verbose)\n+    os.chdir(original_cwd)\n+\n+################################################################################\n+# report cmd\n+################################################################################\n+\n+REPORT_USAGE = \"\"\"\n+Produces a report of all copyright header notices found inside the source files\n+of a repository.\n+\n+Usage:\n+    $ ./copyright_header.py report <base_directory> [verbose]\n+\n+Arguments:\n+    <base_directory> - The base directory of a bitcoin source code repository.\n+    [verbose] - Includes a list of every file of each subcategory in the report.\n+\"\"\"\n+\n+def report_cmd(argv):\n+    if len(argv) == 2:\n+        sys.exit(REPORT_USAGE)\n+        \n+    base_directory = argv[2]\n+    if not os.path.exists(base_directory):\n+        sys.exit(\"*** bad <base_directory>: %s\" % base_directory)\n+\n+    if len(argv) == 3:\n+        verbose = False\n+    elif argv[3] == 'verbose':\n+        verbose = True\n+    else:\n+        sys.exit(\"*** unknown argument: %s\" % argv[2])\n+\n+    exec_report(base_directory, verbose)\n+\n+################################################################################\n+# query git for year of last change\n+################################################################################\n+\n+GIT_LOG_CMD = \"git log --pretty=format:%%ai %s\"\n+\n+def call_git_log(filename):\n+    out = subprocess.check_output((GIT_LOG_CMD % filename).split(' '))\n+    return out.decode(\"utf-8\").split('\\n')\n+\n+def get_git_change_years(filename):\n+    git_log_lines = call_git_log(filename)\n+    if len(git_log_lines) == 0:\n+        return [datetime.date.today().year]\n+    # timestamp is in ISO 8601 format. e.g. \"2016-09-05 14:25:32 -0600\"\n+    return [line.split(' ')[0].split('-')[0] for line in git_log_lines]\n+\n+def get_most_recent_git_change_year(filename):\n+    return max(get_git_change_years(filename))\n+\n+################################################################################\n+# read and write to file\n+################################################################################\n+\n+def read_file_lines(filename):\n+    f = open(os.path.abspath(filename), 'r')\n+    file_lines = f.readlines()\n+    f.close()\n+    return file_lines\n+\n+def write_file_lines(filename, file_lines):\n+    f = open(os.path.abspath(filename), 'w')\n+    f.write(''.join(file_lines))\n+    f.close()\n+\n+################################################################################\n+# update header years execution\n+################################################################################\n+\n+COPYRIGHT = 'Copyright \\(c\\)'\n+YEAR = \"20[0-9][0-9]\"\n+YEAR_RANGE = '(%s)(-%s)?' % (YEAR, YEAR)\n+HOLDER = 'The Bitcoin Core developers'\n+UPDATEABLE_LINE_COMPILED = re.compile(' '.join([COPYRIGHT, YEAR_RANGE, HOLDER]))\n+\n+def get_updatable_copyright_line(file_lines):\n+    index = 0\n+    for line in file_lines:\n+        if UPDATEABLE_LINE_COMPILED.search(line) is not None:\n+            return index, line\n+        index = index + 1\n+    return None, None\n+\n+def parse_year_range(year_range):\n+    year_split = year_range.split('-')\n+    start_year = year_split[0]\n+    if len(year_split) == 1:\n+        return start_year, start_year\n+    return start_year, year_split[1]\n+\n+def year_range_to_str(start_year, end_year):\n+    if start_year == end_year:\n+        return start_year\n+    return \"%s-%s\" % (start_year, end_year)\n+\n+def create_updated_copyright_line(line, last_git_change_year):\n+    copyright_splitter = 'Copyright (c) '\n+    copyright_split = line.split(copyright_splitter)\n+    # Preserve characters on line that are ahead of the start of the copyright\n+    # notice - they are part of the comment block and vary from file-to-file.\n+    before_copyright = copyright_split[0]\n+    after_copyright = copyright_split[1]\n+\n+    space_split = after_copyright.split(' ')\n+    year_range = space_split[0]\n+    start_year, end_year = parse_year_range(year_range)\n+    if end_year == last_git_change_year:\n+        return line\n+    return (before_copyright + copyright_splitter +\n+            year_range_to_str(start_year, last_git_change_year) + ' ' +\n+            ' '.join(space_split[1:]))\n+\n+def update_updatable_copyright(filename):\n+    file_lines = read_file_lines(filename)\n+    index, line = get_updatable_copyright_line(file_lines)\n+    if not line:\n+        print_file_action_message(filename, \"No updatable copyright.\")\n+        return\n+    last_git_change_year = get_most_recent_git_change_year(filename)\n+    new_line = create_updated_copyright_line(line, last_git_change_year)\n+    if line == new_line:\n+        print_file_action_message(filename, \"Copyright up-to-date.\")\n+        return\n+    file_lines[index] = new_line\n+    write_file_lines(filename, file_lines)\n+    print_file_action_message(filename,\n+                              \"Copyright updated! -> %s\" % last_git_change_year)\n+\n+def exec_update_header_year(base_directory):\n+    original_cwd = os.getcwd()\n+    os.chdir(base_directory)\n+    for filename in get_filenames_to_examine():\n+        update_updatable_copyright(filename)\n+    os.chdir(original_cwd)\n+\n+################################################################################\n+# update cmd\n+################################################################################\n+\n+UPDATE_USAGE = \"\"\"\n+Updates all the copyright headers of \"The Bitcoin Core developers\" which were\n+changed in a year more recent than is listed. For example:\n+\n+// Copyright (c) <firstYear>-<lastYear> The Bitcoin Core developers\n+\n+will be updated to:\n+\n+// Copyright (c) <firstYear>-<lastModifiedYear> The Bitcoin Core developers\n+\n+where <lastModifiedYear> is obtained from the 'git log' history.\n+\n+This subcommand also handles copyright headers that have only a single year. In those cases:\n+\n+// Copyright (c) <year> The Bitcoin Core developers\n+\n+will be updated to:\n+\n+// Copyright (c) <year>-<lastModifiedYear> The Bitcoin Core developers\n+\n+where the update is appropriate.\n+\n+Usage:\n+    $ ./copyright_header.py update <base_directory>\n+\n+Arguments:\n+    <base_directory> - The base directory of a bitcoin source code repository.\n+\"\"\"\n+\n+def print_file_action_message(filename, action):\n+    print(\"%-52s %s\" % (filename, action))\n+\n+def update_cmd(argv):\n+    if len(argv) != 3:\n+        sys.exit(UPDATE_USAGE)\n+    \n+    base_directory = argv[2]\n+    if not os.path.exists(base_directory):\n+        sys.exit(\"*** bad base_directory: %s\" % base_directory)\n+    exec_update_header_year(base_directory)\n+\n+################################################################################\n+# inserted copyright header format\n+################################################################################\n+\n+def get_header_lines(header, start_year, end_year):\n+    lines = header.split('\\n')[1:-1]\n+    lines[0] = lines[0] % year_range_to_str(start_year, end_year)\n+    return [line + '\\n' for line in lines]\n+\n+CPP_HEADER = '''\n+// Copyright (c) %s The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+\n+def get_cpp_header_lines_to_insert(start_year, end_year):\n+    return reversed(get_header_lines(CPP_HEADER, start_year, end_year))\n+\n+PYTHON_HEADER = '''\n+# Copyright (c) %s The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+\n+def get_python_header_lines_to_insert(start_year, end_year):\n+    return reversed(get_header_lines(PYTHON_HEADER, start_year, end_year))\n+\n+################################################################################\n+# query git for year of last change\n+################################################################################\n+\n+def get_git_change_year_range(filename):\n+    years = get_git_change_years(filename)\n+    return min(years), max(years)\n+\n+################################################################################\n+# check for existing core copyright\n+################################################################################\n+\n+def file_already_has_core_copyright(file_lines):\n+    index, _ = get_updatable_copyright_line(file_lines)\n+    return index != None\n+\n+################################################################################\n+# insert header execution\n+################################################################################\n+\n+def file_has_hashbang(file_lines):\n+    if len(file_lines) < 1:\n+        return False\n+    if len(file_lines[0]) <= 2:\n+        return False\n+    return file_lines[0][:2] == '#!'\n+\n+def insert_python_header(filename, file_lines, start_year, end_year):\n+    if file_has_hashbang(file_lines):\n+        insert_idx = 1 \n+    else:\n+        insert_idx = 0\n+    header_lines = get_python_header_lines_to_insert(start_year, end_year)\n+    for line in header_lines:\n+        file_lines.insert(insert_idx, line)\n+    write_file_lines(filename, file_lines)\n+\n+def insert_cpp_header(filename, file_lines, start_year, end_year):\n+    header_lines = get_cpp_header_lines_to_insert(start_year, end_year)\n+    for line in header_lines:\n+        file_lines.insert(0, line)\n+    write_file_lines(filename, file_lines)\n+\n+def exec_insert_header(filename, style):\n+    file_lines = read_file_lines(filename)\n+    if file_already_has_core_copyright(file_lines):\n+        sys.exit('*** %s already has a copyright by The Bitcoin Core developers'\n+                 % (filename))\n+    start_year, end_year = get_git_change_year_range(filename)\n+    if style == 'python':\n+        insert_python_header(filename, file_lines, start_year, end_year)\n+    else:\n+        insert_cpp_header(filename, file_lines, start_year, end_year)\n+\n+################################################################################\n+# insert cmd\n+################################################################################\n+\n+INSERT_USAGE = \"\"\"\n+Inserts a copyright header for \"The Bitcoin Core developers\" at the top of the\n+file in either Python or C++ style as determined by the file extension. If the\n+file is a Python file and it has a '#!' starting the first line, the header is\n+inserted in the line below it.\n+\n+The copyright dates will be set to be:\n+\n+\"<year_introduced>-<current_year>\"\n+\n+where <year_introduced> is according to the 'git log' history. If\n+<year_introduced> is equal to <current_year>, the date will be set to be:\n+\n+\"<current_year>\"\n+\n+If the file already has a copyright for \"The Bitcoin Core developers\", the\n+script will exit.\n+\n+Usage:\n+    $ ./copyright_header.py insert <file>\n+\n+Arguments:\n+    <file> - A source file in the bitcoin repository.\n+\"\"\"\n+\n+def insert_cmd(argv):\n+    if len(argv) != 3:\n+        sys.exit(INSERT_USAGE)\n+\n+    filename = argv[2]\n+    if not os.path.isfile(filename):\n+        sys.exit(\"*** bad filename: %s\" % filename)\n+    _, extension = os.path.splitext(filename)\n+    if extension not in ['.h', '.cpp', '.cc', '.c', '.py']:\n+        sys.exit(\"*** cannot insert for file extension %s\" % extension)\n+   \n+    if extension == '.py': \n+        style = 'python'\n+    else:\n+        style = 'cpp'\n+    exec_insert_header(filename, style)\n+         \n+################################################################################\n+# UI\n+################################################################################\n+\n+USAGE = \"\"\"\n+copyright_header.py - utilities for managing copyright headers of 'The Bitcoin\n+Core developers' in repository source files.\n+\n+Usage:\n+    $ ./copyright_header <subcommand>\n+\n+Subcommands:\n+    report\n+    update\n+    insert\n+\n+To see subcommand usage, run them without arguments.\n+\"\"\"\n+\n+SUBCOMMANDS = ['report', 'update', 'insert']\n+\n+if __name__ == \"__main__\":\n+    if len(sys.argv) == 1:\n+        sys.exit(USAGE)\n+    subcommand = sys.argv[1]\n+    if subcommand not in SUBCOMMANDS:\n+        sys.exit(USAGE)\n+    if subcommand == 'report':\n+        report_cmd(sys.argv)\n+    elif subcommand == 'update':\n+        update_cmd(sys.argv)\n+    elif subcommand == 'insert':\n+        insert_cmd(sys.argv)"
      },
      {
        "sha": "5e849525485bca4586d9b9248bfb59a0cf3e59b5",
        "filename": "contrib/devtools/fix-copyright-headers.py",
        "status": "removed",
        "additions": 0,
        "deletions": 53,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/devtools/fix-copyright-headers.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/devtools/fix-copyright-headers.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/fix-copyright-headers.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,53 +0,0 @@\n-#!/usr/bin/env python\n-'''\n-Run this script inside of src/ and it will look for all the files\n-that were changed this year that still have the last year in the\n-copyright headers, and it will fix the headers on that file using\n-a perl regex one liner.\n-\n-For example: if it finds something like this and we're in 2014\n-\n-// Copyright (c) 2009-2013 The Bitcoin Core developers\n-\n-it will change it to\n-\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n-\n-It will do this for all the files in the folder and its children.\n-\n-Author: @gubatron\n-'''\n-import os\n-import time\n-\n-year = time.gmtime()[0]\n-last_year = year - 1\n-command = \"perl -pi -e 's/%s The Bitcoin/%s The Bitcoin/' %s\"\n-listFilesCommand = \"find . | grep %s\"\n-\n-extensions = [\".cpp\",\".h\"]\n-\n-def getLastGitModifiedDate(filePath):\n-  gitGetLastCommitDateCommand = \"git log \" + filePath +\" | grep Date | head -n 1\"\n-  p = os.popen(gitGetLastCommitDateCommand)\n-  result = \"\"\n-  for l in p:\n-    result = l\n-    break\n-  result = result.replace(\"\\n\",\"\")\n-  return result\n-\n-n=1\n-for extension in extensions:\n-  foundFiles = os.popen(listFilesCommand % extension)\n-  for filePath in foundFiles:\n-    filePath = filePath[1:-1]\n-    if filePath.endswith(extension):\n-      filePath = os.getcwd() + filePath\n-      modifiedTime = getLastGitModifiedDate(filePath)\n-      if len(modifiedTime) > 0 and str(year) in modifiedTime:\n-        print n,\"Last Git Modified: \", modifiedTime, \" - \", filePath\n-        os.popen(command % (last_year,year,filePath))\n-        n = n + 1\n-\n-"
      },
      {
        "sha": "967717e1e0d6d2a1f5f8bce7c72ba13fd324a9da",
        "filename": "contrib/devtools/gen-manpages.sh",
        "status": "added",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/gen-manpages.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/gen-manpages.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/gen-manpages.sh?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,29 @@\n+#!/bin/sh\n+\n+TOPDIR=${TOPDIR:-$(git rev-parse --show-toplevel)}\n+SRCDIR=${SRCDIR:-$TOPDIR/src}\n+MANDIR=${MANDIR:-$TOPDIR/doc/man}\n+\n+BITCOIND=${BITCOIND:-$SRCDIR/bitcoind}\n+BITCOINCLI=${BITCOINCLI:-$SRCDIR/bitcoin-cli}\n+BITCOINTX=${BITCOINTX:-$SRCDIR/bitcoin-tx}\n+BITCOINQT=${BITCOINQT:-$SRCDIR/qt/bitcoin-qt}\n+\n+[ ! -x $BITCOIND ] && echo \"$BITCOIND not found or not executable.\" && exit 1\n+\n+# The autodetected version git tag can screw up manpage output a little bit\n+BTCVER=($($BITCOINCLI --version | head -n1 | awk -F'[ -]' '{ print $6, $7 }'))\n+\n+# Create a footer file with copyright content.\n+# This gets autodetected fine for bitcoind if --version-string is not set,\n+# but has different outcomes for bitcoin-qt and bitcoin-cli.\n+echo \"[COPYRIGHT]\" > footer.h2m\n+$BITCOIND --version | sed -n '1!p' >> footer.h2m\n+\n+for cmd in $BITCOIND $BITCOINCLI $BITCOINTX $BITCOINQT; do\n+  cmdname=\"${cmd##*/}\"\n+  help2man -N --version-string=${BTCVER[0]} --include=footer.h2m -o ${MANDIR}/${cmdname}.1 ${cmd}\n+  sed -i \"s/\\\\\\-${BTCVER[1]}//g\" ${MANDIR}/${cmdname}.1\n+done\n+\n+rm -f footer.h2m"
      },
      {
        "sha": "2384d66cad2aa71778b27737629245ab839722da",
        "filename": "contrib/devtools/git-subtree-check.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/git-subtree-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/git-subtree-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/git-subtree-check.sh?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,4 +1,7 @@\n #!/bin/sh\n+# Copyright (c) 2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n DIR=\"$1\"\n COMMIT=\"$2\""
      },
      {
        "sha": "2941d2cb6d7e783dd480711567238438fa2bc24c",
        "filename": "contrib/devtools/github-merge.py",
        "status": "added",
        "additions": 330,
        "deletions": 0,
        "changes": 330,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,330 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2016-2017 Bitcoin Core Developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# This script will locally construct a merge commit for a pull request on a\n+# github repository, inspect it, sign it and optionally push it.\n+\n+# The following temporary branches are created/overwritten and deleted:\n+# * pull/$PULL/base (the current master we're merging onto)\n+# * pull/$PULL/head (the current state of the remote pull request)\n+# * pull/$PULL/merge (github's merge)\n+# * pull/$PULL/local-merge (our merge)\n+\n+# In case of a clean merge that is accepted by the user, the local branch with\n+# name $BRANCH is overwritten with the merged result, and optionally pushed.\n+from __future__ import division,print_function,unicode_literals\n+import os\n+from sys import stdin,stdout,stderr\n+import argparse\n+import hashlib\n+import subprocess\n+import sys\n+import json,codecs\n+try:\n+    from urllib.request import Request,urlopen\n+except:\n+    from urllib2 import Request,urlopen\n+\n+# External tools (can be overridden using environment)\n+GIT = os.getenv('GIT','git')\n+BASH = os.getenv('BASH','bash')\n+\n+# OS specific configuration for terminal attributes\n+ATTR_RESET = ''\n+ATTR_PR = ''\n+COMMIT_FORMAT = '%h %s (%an)%d'\n+if os.name == 'posix': # if posix, assume we can use basic terminal escapes\n+    ATTR_RESET = '\\033[0m'\n+    ATTR_PR = '\\033[1;36m'\n+    COMMIT_FORMAT = '%C(bold blue)%h%Creset %s %C(cyan)(%an)%Creset%C(green)%d%Creset'\n+\n+def git_config_get(option, default=None):\n+    '''\n+    Get named configuration option from git repository.\n+    '''\n+    try:\n+        return subprocess.check_output([GIT,'config','--get',option]).rstrip().decode('utf-8')\n+    except subprocess.CalledProcessError as e:\n+        return default\n+\n+def retrieve_pr_info(repo,pull):\n+    '''\n+    Retrieve pull request information from github.\n+    Return None if no title can be found, or an error happens.\n+    '''\n+    try:\n+        req = Request(\"https://api.github.com/repos/\"+repo+\"/pulls/\"+pull)\n+        result = urlopen(req)\n+        reader = codecs.getreader('utf-8')\n+        obj = json.load(reader(result))\n+        return obj\n+    except Exception as e:\n+        print('Warning: unable to retrieve pull information from github: %s' % e)\n+        return None\n+\n+def ask_prompt(text):\n+    print(text,end=\" \",file=stderr)\n+    stderr.flush()\n+    reply = stdin.readline().rstrip()\n+    print(\"\",file=stderr)\n+    return reply\n+\n+def get_symlink_files():\n+    files = sorted(subprocess.check_output([GIT, 'ls-tree', '--full-tree', '-r', 'HEAD']).splitlines())\n+    ret = []\n+    for f in files:\n+        if (int(f.decode('utf-8').split(\" \")[0], 8) & 0o170000) == 0o120000:\n+            ret.append(f.decode('utf-8').split(\"\\t\")[1])\n+    return ret\n+\n+def tree_sha512sum(commit='HEAD'):\n+    # request metadata for entire tree, recursively\n+    files = []\n+    blob_by_name = {}\n+    for line in subprocess.check_output([GIT, 'ls-tree', '--full-tree', '-r', commit]).splitlines():\n+        name_sep = line.index(b'\\t')\n+        metadata = line[:name_sep].split() # perms, 'blob', blobid\n+        assert(metadata[1] == b'blob')\n+        name = line[name_sep+1:]\n+        files.append(name)\n+        blob_by_name[name] = metadata[2]\n+\n+    files.sort()\n+    # open connection to git-cat-file in batch mode to request data for all blobs\n+    # this is much faster than launching it per file\n+    p = subprocess.Popen([GIT, 'cat-file', '--batch'], stdout=subprocess.PIPE, stdin=subprocess.PIPE)\n+    overall = hashlib.sha512()\n+    for f in files:\n+        blob = blob_by_name[f]\n+        # request blob\n+        p.stdin.write(blob + b'\\n')\n+        p.stdin.flush()\n+        # read header: blob, \"blob\", size\n+        reply = p.stdout.readline().split()\n+        assert(reply[0] == blob and reply[1] == b'blob')\n+        size = int(reply[2])\n+        # hash the blob data\n+        intern = hashlib.sha512()\n+        ptr = 0\n+        while ptr < size:\n+            bs = min(65536, size - ptr)\n+            piece = p.stdout.read(bs)\n+            if len(piece) == bs:\n+                intern.update(piece)\n+            else:\n+                raise IOError('Premature EOF reading git cat-file output')\n+            ptr += bs\n+        dig = intern.hexdigest()\n+        assert(p.stdout.read(1) == b'\\n') # ignore LF that follows blob data\n+        # update overall hash with file hash\n+        overall.update(dig.encode(\"utf-8\"))\n+        overall.update(\"  \".encode(\"utf-8\"))\n+        overall.update(f)\n+        overall.update(\"\\n\".encode(\"utf-8\"))\n+    p.stdin.close()\n+    if p.wait():\n+        raise IOError('Non-zero return value executing git cat-file')\n+    return overall.hexdigest()\n+\n+def print_merge_details(pull, title, branch, base_branch, head_branch):\n+    print('%s#%s%s %s %sinto %s%s' % (ATTR_RESET+ATTR_PR,pull,ATTR_RESET,title,ATTR_RESET+ATTR_PR,branch,ATTR_RESET))\n+    subprocess.check_call([GIT,'log','--graph','--topo-order','--pretty=format:'+COMMIT_FORMAT,base_branch+'..'+head_branch])\n+\n+def parse_arguments():\n+    epilog = '''\n+        In addition, you can set the following git configuration variables:\n+        githubmerge.repository (mandatory),\n+        user.signingkey (mandatory),\n+        githubmerge.host (default: git@github.com),\n+        githubmerge.branch (no default),\n+        githubmerge.testcmd (default: none).\n+    '''\n+    parser = argparse.ArgumentParser(description='Utility to merge, sign and push github pull requests',\n+            epilog=epilog)\n+    parser.add_argument('pull', metavar='PULL', type=int, nargs=1,\n+        help='Pull request ID to merge')\n+    parser.add_argument('branch', metavar='BRANCH', type=str, nargs='?',\n+        default=None, help='Branch to merge against (default: githubmerge.branch setting, or base branch for pull, or \\'master\\')')\n+    return parser.parse_args()\n+\n+def main():\n+    # Extract settings from git repo\n+    repo = git_config_get('githubmerge.repository')\n+    host = git_config_get('githubmerge.host','git@github.com')\n+    opt_branch = git_config_get('githubmerge.branch',None)\n+    testcmd = git_config_get('githubmerge.testcmd')\n+    signingkey = git_config_get('user.signingkey')\n+    if repo is None:\n+        print(\"ERROR: No repository configured. Use this command to set:\", file=stderr)\n+        print(\"git config githubmerge.repository <owner>/<repo>\", file=stderr)\n+        sys.exit(1)\n+    if signingkey is None:\n+        print(\"ERROR: No GPG signing key set. Set one using:\",file=stderr)\n+        print(\"git config --global user.signingkey <key>\",file=stderr)\n+        sys.exit(1)\n+\n+    host_repo = host+\":\"+repo # shortcut for push/pull target\n+\n+    # Extract settings from command line\n+    args = parse_arguments()\n+    pull = str(args.pull[0])\n+\n+    # Receive pull information from github\n+    info = retrieve_pr_info(repo,pull)\n+    if info is None:\n+        sys.exit(1)\n+    title = info['title'].strip()\n+    body = info['body'].strip()\n+    # precedence order for destination branch argument:\n+    #   - command line argument\n+    #   - githubmerge.branch setting\n+    #   - base branch for pull (as retrieved from github)\n+    #   - 'master'\n+    branch = args.branch or opt_branch or info['base']['ref'] or 'master'\n+\n+    # Initialize source branches\n+    head_branch = 'pull/'+pull+'/head'\n+    base_branch = 'pull/'+pull+'/base'\n+    merge_branch = 'pull/'+pull+'/merge'\n+    local_merge_branch = 'pull/'+pull+'/local-merge'\n+\n+    devnull = open(os.devnull,'w')\n+    try:\n+        subprocess.check_call([GIT,'checkout','-q',branch])\n+    except subprocess.CalledProcessError as e:\n+        print(\"ERROR: Cannot check out branch %s.\" % (branch), file=stderr)\n+        sys.exit(3)\n+    try:\n+        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/pull/'+pull+'/*:refs/heads/pull/'+pull+'/*',\n+                                                          '+refs/heads/'+branch+':refs/heads/'+base_branch])\n+    except subprocess.CalledProcessError as e:\n+        print(\"ERROR: Cannot find pull request #%s or branch %s on %s.\" % (pull,branch,host_repo), file=stderr)\n+        sys.exit(3)\n+    try:\n+        subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+head_branch], stdout=devnull, stderr=stdout)\n+    except subprocess.CalledProcessError as e:\n+        print(\"ERROR: Cannot find head of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n+        sys.exit(3)\n+    try:\n+        subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+merge_branch], stdout=devnull, stderr=stdout)\n+    except subprocess.CalledProcessError as e:\n+        print(\"ERROR: Cannot find merge of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n+        sys.exit(3)\n+    subprocess.check_call([GIT,'checkout','-q',base_branch])\n+    subprocess.call([GIT,'branch','-q','-D',local_merge_branch], stderr=devnull)\n+    subprocess.check_call([GIT,'checkout','-q','-b',local_merge_branch])\n+\n+    try:\n+        # Go up to the repository's root.\n+        toplevel = subprocess.check_output([GIT,'rev-parse','--show-toplevel']).strip()\n+        os.chdir(toplevel)\n+        # Create unsigned merge commit.\n+        if title:\n+            firstline = 'Merge #%s: %s' % (pull,title)\n+        else:\n+            firstline = 'Merge #%s' % (pull,)\n+        message = firstline + '\\n\\n'\n+        message += subprocess.check_output([GIT,'log','--no-merges','--topo-order','--pretty=format:%h %s (%an)',base_branch+'..'+head_branch]).decode('utf-8')\n+        message += '\\n\\nPull request description:\\n\\n  ' + body.replace('\\n', '\\n  ') + '\\n'\n+        try:\n+            subprocess.check_call([GIT,'merge','-q','--commit','--no-edit','--no-ff','-m',message.encode('utf-8'),head_branch])\n+        except subprocess.CalledProcessError as e:\n+            print(\"ERROR: Cannot be merged cleanly.\",file=stderr)\n+            subprocess.check_call([GIT,'merge','--abort'])\n+            sys.exit(4)\n+        logmsg = subprocess.check_output([GIT,'log','--pretty=format:%s','-n','1']).decode('utf-8')\n+        if logmsg.rstrip() != firstline.rstrip():\n+            print(\"ERROR: Creating merge failed (already merged?).\",file=stderr)\n+            sys.exit(4)\n+\n+        symlink_files = get_symlink_files()\n+        for f in symlink_files:\n+            print(\"ERROR: File %s was a symlink\" % f)\n+        if len(symlink_files) > 0:\n+            sys.exit(4)\n+\n+        # Put tree SHA512 into the message\n+        try:\n+            first_sha512 = tree_sha512sum()\n+            message += '\\n\\nTree-SHA512: ' + first_sha512\n+        except subprocess.CalledProcessError as e:\n+            print(\"ERROR: Unable to compute tree hash\")\n+            sys.exit(4)\n+        try:\n+            subprocess.check_call([GIT,'commit','--amend','-m',message.encode('utf-8')])\n+        except subprocess.CalledProcessError as e:\n+            print(\"ERROR: Cannot update message.\", file=stderr)\n+            sys.exit(4)\n+\n+        print_merge_details(pull, title, branch, base_branch, head_branch)\n+        print()\n+\n+        # Run test command if configured.\n+        if testcmd:\n+            if subprocess.call(testcmd,shell=True):\n+                print(\"ERROR: Running %s failed.\" % testcmd,file=stderr)\n+                sys.exit(5)\n+\n+            # Show the created merge.\n+            diff = subprocess.check_output([GIT,'diff',merge_branch+'..'+local_merge_branch])\n+            subprocess.check_call([GIT,'diff',base_branch+'..'+local_merge_branch])\n+            if diff:\n+                print(\"WARNING: merge differs from github!\",file=stderr)\n+                reply = ask_prompt(\"Type 'ignore' to continue.\")\n+                if reply.lower() == 'ignore':\n+                    print(\"Difference with github ignored.\",file=stderr)\n+                else:\n+                    sys.exit(6)\n+        else:\n+            # Verify the result manually.\n+            print(\"Dropping you on a shell so you can try building/testing the merged source.\",file=stderr)\n+            print(\"Run 'git diff HEAD~' to show the changes being merged.\",file=stderr)\n+            print(\"Type 'exit' when done.\",file=stderr)\n+            if os.path.isfile('/etc/debian_version'): # Show pull number on Debian default prompt\n+                os.putenv('debian_chroot',pull)\n+            subprocess.call([BASH,'-i'])\n+\n+        second_sha512 = tree_sha512sum()\n+        if first_sha512 != second_sha512:\n+            print(\"ERROR: Tree hash changed unexpectedly\",file=stderr)\n+            sys.exit(8)\n+\n+        # Sign the merge commit.\n+        print_merge_details(pull, title, branch, base_branch, head_branch)\n+        while True:\n+            reply = ask_prompt(\"Type 's' to sign off on the above merge, or 'x' to reject and exit.\").lower()\n+            if reply == 's':\n+                try:\n+                    subprocess.check_call([GIT,'commit','-q','--gpg-sign','--amend','--no-edit'])\n+                    break\n+                except subprocess.CalledProcessError as e:\n+                    print(\"Error while signing, asking again.\",file=stderr)\n+            elif reply == 'x':\n+                print(\"Not signing off on merge, exiting.\",file=stderr)\n+                sys.exit(1)\n+\n+        # Put the result in branch.\n+        subprocess.check_call([GIT,'checkout','-q',branch])\n+        subprocess.check_call([GIT,'reset','-q','--hard',local_merge_branch])\n+    finally:\n+        # Clean up temporary branches.\n+        subprocess.call([GIT,'checkout','-q',branch])\n+        subprocess.call([GIT,'branch','-q','-D',head_branch],stderr=devnull)\n+        subprocess.call([GIT,'branch','-q','-D',base_branch],stderr=devnull)\n+        subprocess.call([GIT,'branch','-q','-D',merge_branch],stderr=devnull)\n+        subprocess.call([GIT,'branch','-q','-D',local_merge_branch],stderr=devnull)\n+\n+    # Push the result.\n+    while True:\n+        reply = ask_prompt(\"Type 'push' to push the result to %s, branch %s, or 'x' to exit without pushing.\" % (host_repo,branch)).lower()\n+        if reply == 'push':\n+            subprocess.check_call([GIT,'push',host_repo,'refs/heads/'+branch])\n+            break\n+        elif reply == 'x':\n+            sys.exit(1)\n+\n+if __name__ == '__main__':\n+    main()\n+"
      },
      {
        "sha": "afb53f0390f0680a87cabd8c40d0034e1ba57405",
        "filename": "contrib/devtools/github-merge.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 185,
        "changes": 185,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/devtools/github-merge.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/devtools/github-merge.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.sh?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,185 +0,0 @@\n-#!/bin/bash\n-\n-# This script will locally construct a merge commit for a pull request on a\n-# github repository, inspect it, sign it and optionally push it.\n-\n-# The following temporary branches are created/overwritten and deleted:\n-# * pull/$PULL/base (the current master we're merging onto)\n-# * pull/$PULL/head (the current state of the remote pull request)\n-# * pull/$PULL/merge (github's merge)\n-# * pull/$PULL/local-merge (our merge)\n-\n-# In case of a clean merge that is accepted by the user, the local branch with\n-# name $BRANCH is overwritten with the merged result, and optionally pushed.\n-\n-REPO=\"$(git config --get githubmerge.repository)\"\n-if [[ \"d$REPO\" == \"d\" ]]; then\n-  echo \"ERROR: No repository configured. Use this command to set:\" >&2\n-  echo \"git config githubmerge.repository <owner>/<repo>\" >&2\n-  echo \"In addition, you can set the following variables:\" >&2\n-  echo \"- githubmerge.host (default git@github.com)\" >&2\n-  echo \"- githubmerge.branch (default master)\" >&2\n-  echo \"- githubmerge.testcmd (default none)\" >&2\n-  exit 1\n-fi\n-\n-HOST=\"$(git config --get githubmerge.host)\"\n-if [[ \"d$HOST\" == \"d\" ]]; then\n-  HOST=\"git@github.com\"\n-fi\n-\n-BRANCH=\"$(git config --get githubmerge.branch)\"\n-if [[ \"d$BRANCH\" == \"d\" ]]; then\n-  BRANCH=\"master\"\n-fi\n-\n-TESTCMD=\"$(git config --get githubmerge.testcmd)\"\n-\n-PULL=\"$1\"\n-\n-if [[ \"d$PULL\" == \"d\" ]]; then\n-  echo \"Usage: $0 pullnumber [branch]\" >&2\n-  exit 2\n-fi\n-\n-if [[ \"d$2\" != \"d\" ]]; then\n-  BRANCH=\"$2\"\n-fi\n-\n-# Initialize source branches.\n-git checkout -q \"$BRANCH\"\n-if git fetch -q \"$HOST\":\"$REPO\" \"+refs/pull/$PULL/*:refs/heads/pull/$PULL/*\"; then\n-  if ! git log -q -1 \"refs/heads/pull/$PULL/head\" >/dev/null 2>&1; then\n-    echo \"ERROR: Cannot find head of pull request #$PULL on $HOST:$REPO.\" >&2\n-    exit 3\n-  fi\n-  if ! git log -q -1 \"refs/heads/pull/$PULL/merge\" >/dev/null 2>&1; then\n-    echo \"ERROR: Cannot find merge of pull request #$PULL on $HOST:$REPO.\" >&2\n-    exit 3\n-  fi\n-else\n-  echo \"ERROR: Cannot find pull request #$PULL on $HOST:$REPO.\" >&2\n-  exit 3\n-fi\n-if git fetch -q \"$HOST\":\"$REPO\" +refs/heads/\"$BRANCH\":refs/heads/pull/\"$PULL\"/base; then\n-  true\n-else\n-  echo \"ERROR: Cannot find branch $BRANCH on $HOST:$REPO.\" >&2\n-  exit 3\n-fi\n-git checkout -q pull/\"$PULL\"/base\n-git branch -q -D pull/\"$PULL\"/local-merge 2>/dev/null\n-git checkout -q -b pull/\"$PULL\"/local-merge\n-TMPDIR=\"$(mktemp -d -t ghmXXXXX)\"\n-\n-function cleanup() {\n-  git checkout -q \"$BRANCH\"\n-  git branch -q -D pull/\"$PULL\"/head 2>/dev/null\n-  git branch -q -D pull/\"$PULL\"/base 2>/dev/null\n-  git branch -q -D pull/\"$PULL\"/merge 2>/dev/null\n-  git branch -q -D pull/\"$PULL\"/local-merge 2>/dev/null\n-  rm -rf \"$TMPDIR\"\n-}\n-\n-# Create unsigned merge commit.\n-(\n-  echo \"Merge pull request #$PULL\"\n-  echo \"\"\n-  git log --no-merges --topo-order --pretty='format:%h %s (%an)' pull/\"$PULL\"/base..pull/\"$PULL\"/head\n-)>\"$TMPDIR/message\"\n-if git merge -q --commit --no-edit --no-ff -m \"$(<\"$TMPDIR/message\")\" pull/\"$PULL\"/head; then\n-  if [ \"d$(git log --pretty='format:%s' -n 1)\" != \"dMerge pull request #$PULL\" ]; then\n-    echo \"ERROR: Creating merge failed (already merged?).\" >&2\n-    cleanup\n-    exit 4\n-  fi\n-else\n-  echo \"ERROR: Cannot be merged cleanly.\" >&2\n-  git merge --abort\n-  cleanup\n-  exit 4\n-fi\n-\n-# Run test command if configured.\n-if [[ \"d$TESTCMD\" != \"d\" ]]; then\n-  # Go up to the repository's root.\n-  while [ ! -d .git ]; do cd ..; done\n-  if ! $TESTCMD; then\n-    echo \"ERROR: Running $TESTCMD failed.\" >&2\n-    cleanup\n-    exit 5\n-  fi\n-  # Show the created merge.\n-  git diff pull/\"$PULL\"/merge..pull/\"$PULL\"/local-merge >\"$TMPDIR\"/diff\n-  git diff pull/\"$PULL\"/base..pull/\"$PULL\"/local-merge\n-  if [[ \"$(<\"$TMPDIR\"/diff)\" != \"\" ]]; then\n-    echo \"WARNING: merge differs from github!\" >&2\n-    read -p \"Type 'ignore' to continue. \" -r >&2\n-    if [[ \"d$REPLY\" =~ ^d[iI][gG][nN][oO][rR][eE]$ ]]; then\n-      echo \"Difference with github ignored.\" >&2\n-    else\n-      cleanup\n-      exit 6\n-    fi\n-  fi\n-  read -p \"Press 'd' to accept the diff. \" -n 1 -r >&2\n-  echo\n-  if [[ \"d$REPLY\" =~ ^d[dD]$ ]]; then\n-    echo \"Diff accepted.\" >&2\n-  else\n-    echo \"ERROR: Diff rejected.\" >&2\n-    cleanup\n-    exit 6\n-  fi\n-else\n-  # Verify the result.\n-  echo \"Dropping you on a shell so you can try building/testing the merged source.\" >&2\n-  echo \"Run 'git diff HEAD~' to show the changes being merged.\" >&2\n-  echo \"Type 'exit' when done.\" >&2\n-  if [[ -f /etc/debian_version ]]; then # Show pull number in prompt on Debian default prompt\n-      export debian_chroot=\"$PULL\"\n-  fi\n-  bash -i\n-  read -p \"Press 'm' to accept the merge. \" -n 1 -r >&2\n-  echo\n-  if [[ \"d$REPLY\" =~ ^d[Mm]$ ]]; then\n-    echo \"Merge accepted.\" >&2\n-  else\n-    echo \"ERROR: Merge rejected.\" >&2\n-    cleanup\n-    exit 7\n-  fi\n-fi\n-\n-# Sign the merge commit.\n-read -p \"Press 's' to sign off on the merge. \" -n 1 -r >&2\n-echo\n-if [[ \"d$REPLY\" =~ ^d[Ss]$ ]]; then\n-  if [[ \"$(git config --get user.signingkey)\" == \"\" ]]; then\n-    echo \"ERROR: No GPG signing key set, not signing. Set one using:\" >&2\n-    echo \"git config --global user.signingkey <key>\" >&2\n-    cleanup\n-    exit 1\n-  else\n-    if ! git commit -q --gpg-sign --amend --no-edit; then\n-        echo \"Error signing, exiting.\"\n-        cleanup\n-        exit 1\n-    fi\n-  fi\n-else\n-  echo \"Not signing off on merge, exiting.\"\n-  cleanup\n-  exit 1\n-fi\n-\n-# Clean up temporary branches, and put the result in $BRANCH.\n-git checkout -q \"$BRANCH\"\n-git reset -q --hard pull/\"$PULL\"/local-merge\n-cleanup\n-\n-# Push the result.\n-read -p \"Type 'push' to push the result to $HOST:$REPO, branch $BRANCH. \" -r >&2\n-if [[ \"d$REPLY\" =~ ^d[Pp][Uu][Ss][Hh]$ ]]; then\n-  git push \"$HOST\":\"$REPO\" refs/heads/\"$BRANCH\"\n-fi"
      },
      {
        "sha": "b6d86959c669c60919a738cd74674a40c4e89118",
        "filename": "contrib/devtools/lint-all.sh",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/lint-all.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/lint-all.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/lint-all.sh?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,22 @@\n+#!/bin/bash\n+#\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# This script runs all contrib/devtools/lint-*.sh files, and fails if any exit\n+# with a non-zero status code.\n+\n+set -u\n+\n+SCRIPTDIR=$(dirname \"${BASH_SOURCE[0]}\")\n+LINTALL=$(basename \"${BASH_SOURCE[0]}\")\n+\n+for f in \"${SCRIPTDIR}\"/lint-*.sh; do\n+  if [ \"$(basename \"$f\")\" != \"$LINTALL\" ]; then\n+    if ! \"$f\"; then\n+      echo \"^---- failure generated from $f\"\n+      exit 1\n+    fi\n+  fi\n+done"
      },
      {
        "sha": "989923f31a656bd73ece41f30daeac1b70462821",
        "filename": "contrib/devtools/lint-whitespace.sh",
        "status": "added",
        "additions": 88,
        "deletions": 0,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/lint-whitespace.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/lint-whitespace.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/lint-whitespace.sh?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,88 @@\n+#!/bin/bash\n+#\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# Check for new lines in diff that introduce trailing whitespace.\n+\n+# We can't run this check unless we know the commit range for the PR.\n+if [ -z \"${TRAVIS_COMMIT_RANGE}\" ]; then\n+  echo \"Cannot run lint-whitespace.sh without commit range. To run locally, use:\"\n+  echo \"TRAVIS_COMMIT_RANGE='<commit range>' .lint-whitespace.sh\"\n+  echo \"For example:\"\n+  echo \"TRAVIS_COMMIT_RANGE='47ba2c3...ee50c9e' .lint-whitespace.sh\"\n+  exit 1\n+fi\n+\n+showdiff() {\n+  if ! git diff -U0 \"${TRAVIS_COMMIT_RANGE}\" -- \".\" \":(exclude)src/leveldb/\" \":(exclude)src/secp256k1/\" \":(exclude)src/univalue/\" \":(exclude)doc/release-notes/\"; then\n+    echo \"Failed to get a diff\"\n+    exit 1\n+  fi\n+}\n+\n+showcodediff() {\n+  if ! git diff -U0 \"${TRAVIS_COMMIT_RANGE}\" -- *.cpp *.h *.md *.py *.sh \":(exclude)src/leveldb/\" \":(exclude)src/secp256k1/\" \":(exclude)src/univalue/\" \":(exclude)doc/release-notes/\"; then\n+    echo \"Failed to get a diff\"\n+    exit 1\n+  fi\n+}\n+\n+RET=0\n+\n+# Check if trailing whitespace was found in the diff.\n+if showdiff | grep -E -q '^\\+.*\\s+$'; then\n+  echo \"This diff appears to have added new lines with trailing whitespace.\"\n+  echo \"The following changes were suspected:\"\n+  FILENAME=\"\"\n+  SEEN=0\n+  while read -r line; do\n+    if [[ \"$line\" =~ ^diff ]]; then\n+      FILENAME=\"$line\"\n+      SEEN=0\n+    elif [[ \"$line\" =~ ^@@ ]]; then\n+      LINENUMBER=\"$line\"\n+    else\n+      if [ \"$SEEN\" -eq 0 ]; then\n+        # The first time a file is seen with trailing whitespace, we print the\n+        # filename (preceded by a newline).\n+        echo\n+        echo \"$FILENAME\"\n+        echo \"$LINENUMBER\"\n+        SEEN=1\n+      fi\n+      echo \"$line\"\n+    fi\n+  done < <(showdiff | grep -E '^(diff --git |@@|\\+.*\\s+$)')\n+  RET=1\n+fi\n+\n+# Check if tab characters were found in the diff.\n+if showcodediff | grep -P -q '^\\+.*\\t'; then\n+  echo \"This diff appears to have added new lines with tab characters instead of spaces.\"\n+  echo \"The following changes were suspected:\"\n+  FILENAME=\"\"\n+  SEEN=0\n+  while read -r line; do\n+    if [[ \"$line\" =~ ^diff ]]; then\n+      FILENAME=\"$line\"\n+      SEEN=0\n+    elif [[ \"$line\" =~ ^@@ ]]; then\n+      LINENUMBER=\"$line\"\n+    else\n+      if [ \"$SEEN\" -eq 0 ]; then\n+        # The first time a file is seen with a tab character, we print the\n+        # filename (preceded by a newline).\n+        echo\n+        echo \"$FILENAME\"\n+        echo \"$LINENUMBER\"\n+        SEEN=1\n+      fi\n+      echo \"$line\"\n+    fi\n+  done < <(showcodediff | grep -P '^(diff --git |@@|\\+.*\\t)')\n+  RET=1\n+fi\n+\n+exit $RET"
      },
      {
        "sha": "9286ab731f2955ed8f01e2b5ab2e56351564eb6c",
        "filename": "contrib/devtools/optimize-pngs.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/optimize-pngs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/optimize-pngs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/optimize-pngs.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,4 +1,7 @@\n #!/usr/bin/env python\n+# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n Run this script every time you change one of the png files. Using pngcrush, it will optimize the png files, remove various color profiles, remove ancillary chunks (alla) and text chunks (text).\n #pngcrush -brute -ow -rem gAMA -rem cHRM -rem iCCP -rem sRGB -rem alla -rem text\n@@ -36,7 +39,7 @@ def content_hash(filename):\n         if extension.lower() == '.png':\n             print(\"optimizing \"+file+\"...\"),\n             file_path = os.path.join(absFolder, file)\n-            fileMetaMap = {'file' : file, 'osize': os.path.getsize(file_path), 'sha256Old' : file_hash(file_path)};\n+            fileMetaMap = {'file' : file, 'osize': os.path.getsize(file_path), 'sha256Old' : file_hash(file_path)}\n             fileMetaMap['contentHashPre'] = content_hash(file_path)\n         \n             pngCrushOutput = \"\""
      },
      {
        "sha": "6eb5667453d10e0ecd884e876c2581479f0fb95f",
        "filename": "contrib/devtools/security-check.py",
        "status": "modified",
        "additions": 63,
        "deletions": 28,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,17 +1,21 @@\n-#!/usr/bin/python2\n+#!/usr/bin/env python\n+# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n Perform basic ELF security checks on a series of executables.\n-Exit status will be 0 if succesful, and the program will be silent.\n+Exit status will be 0 if successful, and the program will be silent.\n Otherwise the exit status will be 1 and it will log which executables failed which checks.\n Needs `readelf` (for ELF) and `objdump` (for PE).\n '''\n-from __future__ import division,print_function\n+from __future__ import division,print_function,unicode_literals\n import subprocess\n import sys\n import os\n \n READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n+NONFATAL = {'HIGH_ENTROPY_VA'} # checks which are non-fatal for now but only generate a warning\n \n def check_ELF_PIE(executable):\n     '''\n@@ -23,9 +27,9 @@ def check_ELF_PIE(executable):\n         raise IOError('Error opening file')\n \n     ok = False\n-    for line in stdout.split('\\n'):\n+    for line in stdout.split(b'\\n'):\n         line = line.split()\n-        if len(line)>=2 and line[0] == 'Type:' and line[1] == 'DYN':\n+        if len(line)>=2 and line[0] == b'Type:' and line[1] == b'DYN':\n             ok = True\n     return ok\n \n@@ -38,17 +42,17 @@ def get_ELF_program_headers(executable):\n     in_headers = False\n     count = 0\n     headers = []\n-    for line in stdout.split('\\n'):\n-        if line.startswith('Program Headers:'):\n+    for line in stdout.split(b'\\n'):\n+        if line.startswith(b'Program Headers:'):\n             in_headers = True\n-        if line == '':\n+        if line == b'':\n             in_headers = False\n         if in_headers:\n             if count == 1: # header line\n-                ofs_typ = line.find('Type')\n-                ofs_offset = line.find('Offset')\n-                ofs_flags = line.find('Flg')\n-                ofs_align = line.find('Align')\n+                ofs_typ = line.find(b'Type')\n+                ofs_offset = line.find(b'Offset')\n+                ofs_flags = line.find(b'Flg')\n+                ofs_align = line.find(b'Align')\n                 if ofs_typ == -1 or ofs_offset == -1 or ofs_flags == -1 or ofs_align  == -1:\n                     raise ValueError('Cannot parse elfread -lW output')\n             elif count > 1:\n@@ -65,9 +69,9 @@ def check_ELF_NX(executable):\n     have_wx = False\n     have_gnu_stack = False\n     for (typ, flags) in get_ELF_program_headers(executable):\n-        if typ == 'GNU_STACK':\n+        if typ == b'GNU_STACK':\n             have_gnu_stack = True\n-        if 'W' in flags and 'E' in flags: # section is both writable and executable\n+        if b'W' in flags and b'E' in flags: # section is both writable and executable\n             have_wx = True\n     return have_gnu_stack and not have_wx\n \n@@ -84,17 +88,17 @@ def check_ELF_RELRO(executable):\n         # However, the dynamic linker need to write to this area so these are RW.\n         # Glibc itself takes care of mprotecting this area R after relocations are finished.\n         # See also http://permalink.gmane.org/gmane.comp.gnu.binutils/71347\n-        if typ == 'GNU_RELRO':\n+        if typ == b'GNU_RELRO':\n             have_gnu_relro = True\n \n     have_bindnow = False\n     p = subprocess.Popen([READELF_CMD, '-d', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n     (stdout, stderr) = p.communicate()\n     if p.returncode:\n         raise IOError('Error opening file')\n-    for line in stdout.split('\\n'):\n+    for line in stdout.split(b'\\n'):\n         tokens = line.split()\n-        if len(tokens)>1 and tokens[1] == '(BIND_NOW)':\n+        if len(tokens)>1 and tokens[1] == b'(BIND_NOW)' or (len(tokens)>2 and tokens[1] == b'(FLAGS)' and b'BIND_NOW' in tokens[2]):\n             have_bindnow = True\n     return have_gnu_relro and have_bindnow\n \n@@ -107,33 +111,57 @@ def check_ELF_Canary(executable):\n     if p.returncode:\n         raise IOError('Error opening file')\n     ok = False\n-    for line in stdout.split('\\n'):\n-        if '__stack_chk_fail' in line:\n+    for line in stdout.split(b'\\n'):\n+        if b'__stack_chk_fail' in line:\n             ok = True\n     return ok\n \n def get_PE_dll_characteristics(executable):\n     '''\n-    Get PE DllCharacteristics bits\n+    Get PE DllCharacteristics bits.\n+    Returns a tuple (arch,bits) where arch is 'i386:x86-64' or 'i386'\n+    and bits is the DllCharacteristics value.\n     '''\n     p = subprocess.Popen([OBJDUMP_CMD, '-x',  executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n     (stdout, stderr) = p.communicate()\n     if p.returncode:\n         raise IOError('Error opening file')\n+    arch = ''\n+    bits = 0\n     for line in stdout.split('\\n'):\n         tokens = line.split()\n+        if len(tokens)>=2 and tokens[0] == 'architecture:':\n+            arch = tokens[1].rstrip(',')\n         if len(tokens)>=2 and tokens[0] == 'DllCharacteristics':\n-            return int(tokens[1],16)\n-    return 0\n+            bits = int(tokens[1],16)\n+    return (arch,bits)\n \n+IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA = 0x0020\n+IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE    = 0x0040\n+IMAGE_DLL_CHARACTERISTICS_NX_COMPAT       = 0x0100\n \n-def check_PE_PIE(executable):\n+def check_PE_DYNAMIC_BASE(executable):\n     '''PIE: DllCharacteristics bit 0x40 signifies dynamicbase (ASLR)'''\n-    return bool(get_PE_dll_characteristics(executable) & 0x40)\n+    (arch,bits) = get_PE_dll_characteristics(executable)\n+    reqbits = IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE\n+    return (bits & reqbits) == reqbits\n+\n+# On 64 bit, must support high-entropy 64-bit address space layout randomization in addition to DYNAMIC_BASE\n+# to have secure ASLR.\n+def check_PE_HIGH_ENTROPY_VA(executable):\n+    '''PIE: DllCharacteristics bit 0x20 signifies high-entropy ASLR'''\n+    (arch,bits) = get_PE_dll_characteristics(executable)\n+    if arch == 'i386:x86-64': \n+        reqbits = IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA\n+    else: # Unnecessary on 32-bit\n+        assert(arch == 'i386')\n+        reqbits = 0\n+    return (bits & reqbits) == reqbits\n \n def check_PE_NX(executable):\n     '''NX: DllCharacteristics bit 0x100 signifies nxcompat (DEP)'''\n-    return bool(get_PE_dll_characteristics(executable) & 0x100)\n+    (arch,bits) = get_PE_dll_characteristics(executable)\n+    return (bits & IMAGE_DLL_CHARACTERISTICS_NX_COMPAT) == IMAGE_DLL_CHARACTERISTICS_NX_COMPAT\n \n CHECKS = {\n 'ELF': [\n@@ -143,7 +171,8 @@ def check_PE_NX(executable):\n     ('Canary', check_ELF_Canary)\n ],\n 'PE': [\n-    ('PIE', check_PE_PIE),\n+    ('DYNAMIC_BASE', check_PE_DYNAMIC_BASE),\n+    ('HIGH_ENTROPY_VA', check_PE_HIGH_ENTROPY_VA),\n     ('NX', check_PE_NX)\n ]\n }\n@@ -168,14 +197,20 @@ def identify_executable(executable):\n                 continue\n \n             failed = []\n+            warning = []\n             for (name, func) in CHECKS[etype]:\n                 if not func(filename):\n-                    failed.append(name)\n+                    if name in NONFATAL:\n+                        warning.append(name)\n+                    else:\n+                        failed.append(name)\n             if failed:\n                 print('%s: failed %s' % (filename, ' '.join(failed)))\n                 retval = 1\n+            if warning:\n+                print('%s: warning %s' % (filename, ' '.join(warning)))\n         except IOError:\n             print('%s: cannot open' % filename)\n             retval = 1\n-    exit(retval)\n+    sys.exit(retval)\n "
      },
      {
        "sha": "deda49cc541043d0a05aee05038c69ee1dee51b3",
        "filename": "contrib/devtools/split-debug.sh.in",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/split-debug.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/split-debug.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/split-debug.sh.in?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,10 @@\n+#!/bin/sh\n+\n+if [ $# -ne 3 ];\n+    then echo \"usage: $0 <input> <stripped-binary> <debug-binary>\"\n+fi\n+\n+@OBJCOPY@ --enable-deterministic-archives -p --only-keep-debug $1 $3\n+@OBJCOPY@ --enable-deterministic-archives -p --strip-debug $1 $2\n+@STRIP@ --enable-deterministic-archives -p -s $2\n+@OBJCOPY@ --enable-deterministic-archives -p --add-gnu-debuglink=$3 $2"
      },
      {
        "sha": "98daa1bd76f94a76f85df6fc3d2f7d4f0ed37fe8",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 37,
        "deletions": 33,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,4 +1,4 @@\n-#!/usr/bin/python2\n+#!/usr/bin/env python\n # Copyright (c) 2014 Wladimir J. van der Laan\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n@@ -11,7 +11,7 @@\n \n     find ../gitian-builder/build -type f -executable | xargs python contrib/devtools/symbol-check.py\n '''\n-from __future__ import division, print_function\n+from __future__ import division, print_function, unicode_literals\n import subprocess\n import re\n import sys\n@@ -42,30 +42,33 @@\n 'GLIBCXX': (3,4,13),\n 'GLIBC':   (2,11)\n }\n+# See here for a description of _IO_stdin_used:\n+# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=634261#109\n+\n # Ignore symbols that are exported as part of every executable\n IGNORE_EXPORTS = {\n-'_edata', '_end', '_init', '__bss_start', '_fini'\n+b'_edata', b'_end', b'_init', b'__bss_start', b'_fini', b'_IO_stdin_used'\n }\n READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n # Allowed NEEDED libraries\n ALLOWED_LIBRARIES = {\n # bitcoind and bitcoin-qt\n-'libgcc_s.so.1', # GCC base support\n-'libc.so.6', # C library\n-'libpthread.so.0', # threading\n-'libanl.so.1', # DNS resolve\n-'libm.so.6', # math library\n-'librt.so.1', # real-time (clock)\n-'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n-'ld-linux.so.2', # 32-bit dynamic linker\n+b'libgcc_s.so.1', # GCC base support\n+b'libc.so.6', # C library\n+b'libpthread.so.0', # threading\n+b'libanl.so.1', # DNS resolve\n+b'libm.so.6', # math library\n+b'librt.so.1', # real-time (clock)\n+b'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n+b'ld-linux.so.2', # 32-bit dynamic linker\n # bitcoin-qt only\n-'libX11-xcb.so.1', # part of X11\n-'libX11.so.6', # part of X11\n-'libxcb.so.1', # part of X11\n-'libfontconfig.so.1', # font support\n-'libfreetype.so.6', # font parsing\n-'libdl.so.2' # programming interface to dynamic linker\n+b'libX11-xcb.so.1', # part of X11\n+b'libX11.so.6', # part of X11\n+b'libxcb.so.1', # part of X11\n+b'libfontconfig.so.1', # font support\n+b'libfreetype.so.6', # font parsing\n+b'libdl.so.2' # programming interface to dynamic linker\n }\n \n class CPPFilt(object):\n@@ -78,7 +81,8 @@ def __init__(self):\n         self.proc = subprocess.Popen(CPPFILT_CMD, stdin=subprocess.PIPE, stdout=subprocess.PIPE)\n \n     def __call__(self, mangled):\n-        self.proc.stdin.write(mangled + '\\n')\n+        self.proc.stdin.write(mangled + b'\\n')\n+        self.proc.stdin.flush()\n         return self.proc.stdout.readline().rstrip()\n \n     def close(self):\n@@ -96,24 +100,24 @@ def read_symbols(executable, imports=True):\n     if p.returncode:\n         raise IOError('Could not read symbols for %s: %s' % (executable, stderr.strip()))\n     syms = []\n-    for line in stdout.split('\\n'):\n+    for line in stdout.split(b'\\n'):\n         line = line.split()\n-        if len(line)>7 and re.match('[0-9]+:$', line[0]):\n-            (sym, _, version) = line[7].partition('@')\n-            is_import = line[6] == 'UND'\n-            if version.startswith('@'):\n+        if len(line)>7 and re.match(b'[0-9]+:$', line[0]):\n+            (sym, _, version) = line[7].partition(b'@')\n+            is_import = line[6] == b'UND'\n+            if version.startswith(b'@'):\n                 version = version[1:]\n             if is_import == imports:\n                 syms.append((sym, version))\n     return syms\n \n def check_version(max_versions, version):\n-    if '_' in version:\n-        (lib, _, ver) = version.rpartition('_')\n+    if b'_' in version:\n+        (lib, _, ver) = version.rpartition(b'_')\n     else:\n         lib = version\n         ver = '0'\n-    ver = tuple([int(x) for x in ver.split('.')])\n+    ver = tuple([int(x) for x in ver.split(b'.')])\n     if not lib in max_versions:\n         return False\n     return ver <= max_versions[lib]\n@@ -124,10 +128,10 @@ def read_libraries(filename):\n     if p.returncode:\n         raise IOError('Error opening file')\n     libraries = []\n-    for line in stdout.split('\\n'):\n+    for line in stdout.split(b'\\n'):\n         tokens = line.split()\n-        if len(tokens)>2 and tokens[1] == '(NEEDED)':\n-            match = re.match('^Shared library: \\[(.*)\\]$', ' '.join(tokens[2:]))\n+        if len(tokens)>2 and tokens[1] == b'(NEEDED)':\n+            match = re.match(b'^Shared library: \\[(.*)\\]$', b' '.join(tokens[2:]))\n             if match:\n                 libraries.append(match.group(1))\n             else:\n@@ -141,20 +145,20 @@ def read_libraries(filename):\n         # Check imported symbols\n         for sym,version in read_symbols(filename, True):\n             if version and not check_version(MAX_VERSIONS, version):\n-                print('%s: symbol %s from unsupported version %s' % (filename, cppfilt(sym), version))\n+                print('%s: symbol %s from unsupported version %s' % (filename, cppfilt(sym).decode('utf-8'), version.decode('utf-8')))\n                 retval = 1\n         # Check exported symbols\n         for sym,version in read_symbols(filename, False):\n             if sym in IGNORE_EXPORTS:\n                 continue\n-            print('%s: export of symbol %s not allowed' % (filename, cppfilt(sym)))\n+            print('%s: export of symbol %s not allowed' % (filename, cppfilt(sym).decode('utf-8')))\n             retval = 1\n         # Check dependency libraries\n         for library_name in read_libraries(filename):\n             if library_name not in ALLOWED_LIBRARIES:\n-                print('%s: NEEDED library %s is not allowed' % (filename, library_name))\n+                print('%s: NEEDED library %s is not allowed' % (filename, library_name.decode('utf-8')))\n                 retval = 1\n \n-    exit(retval)\n+    sys.exit(retval)\n \n "
      },
      {
        "sha": "18f9835faa25aeb1c5950c5ae72f92f68c9a7ed8",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,10 +1,12 @@\n-#!/usr/bin/python2\n+#!/usr/bin/env python2\n+# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n Test script for security-check.py\n '''\n from __future__ import division,print_function\n import subprocess\n-import sys\n import unittest\n \n def write_testcode(filename):"
      },
      {
        "sha": "e1924749d21f192c30af1902e98fafadcf14576f",
        "filename": "contrib/devtools/update-translations.py",
        "status": "modified",
        "additions": 29,
        "deletions": 7,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,4 +1,4 @@\n-#!/usr/bin/python\n+#!/usr/bin/env python\n # Copyright (c) 2014 Wladimir J. van der Laan\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n@@ -29,17 +29,19 @@\n SOURCE_LANG = 'bitcoin_en.ts'\n # Directory with locale files\n LOCALE_DIR = 'src/qt/locale'\n+# Minimum number of messages for translation to be considered at all\n+MIN_NUM_MESSAGES = 10\n \n def check_at_repository_root():\n     if not os.path.exists('.git'):\n         print('No .git directory found')\n         print('Execute this script at the root of the repository', file=sys.stderr)\n-        exit(1)\n+        sys.exit(1)\n \n def fetch_all_translations():\n-    if subprocess.call([TX, 'pull', '-f']):\n+    if subprocess.call([TX, 'pull', '-f', '-a']):\n         print('Error while fetching translations', file=sys.stderr)\n-        exit(1)\n+        sys.exit(1)\n \n def find_format_specifiers(s):\n     '''Find all format specifiers in a string.'''\n@@ -63,25 +65,36 @@ def split_format_specifiers(specifiers):\n         else:\n             other.append(s)\n \n+    # If both numeric format specifiers and \"others\" are used, assume we're dealing\n+    # with a Qt-formatted message. In the case of Qt formatting (see https://doc.qt.io/qt-5/qstring.html#arg)\n+    # only numeric formats are replaced at all. This means \"(percentage: %1%)\" is valid, without needing\n+    # any kind of escaping that would be necessary for strprintf. Without this, this function\n+    # would wrongly detect '%)' as a printf format specifier.\n+    if numeric:\n+        other = []\n+\n     # numeric (Qt) can be present in any order, others (strprintf) must be in specified order\n     return set(numeric),other\n \n def sanitize_string(s):\n     '''Sanitize string for printing'''\n     return s.replace('\\n',' ')\n \n-def check_format_specifiers(source, translation, errors):\n+def check_format_specifiers(source, translation, errors, numerus):\n     source_f = split_format_specifiers(find_format_specifiers(source))\n     # assert that no source messages contain both Qt and strprintf format specifiers\n     # if this fails, go change the source as this is hacky and confusing!\n     assert(not(source_f[0] and source_f[1]))\n     try:\n         translation_f = split_format_specifiers(find_format_specifiers(translation))\n     except IndexError:\n-        errors.append(\"Parse error in translation '%s'\" % sanitize_string(translation))\n+        errors.append(\"Parse error in translation for '%s': '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n         return False\n     else:\n         if source_f != translation_f:\n+            if numerus and source_f == (set(), ['n']) and translation_f == (set(), []) and translation.find('%') == -1:\n+                # Allow numerus translations to omit %n specifier (usually when it only has one possible value)\n+                return True\n             errors.append(\"Mismatch between '%s' and '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n             return False\n     return True\n@@ -148,7 +161,7 @@ def postprocess_translations(reduce_diff_hacks=False):\n                     if translation is None:\n                         continue\n                     errors = []\n-                    valid = check_format_specifiers(source, translation, errors)\n+                    valid = check_format_specifiers(source, translation, errors, numerus)\n \n                     for error in errors:\n                         print('%s: %s' % (filename, error))\n@@ -166,6 +179,15 @@ def postprocess_translations(reduce_diff_hacks=False):\n                 if translation_node.get('type') == 'unfinished':\n                     context.remove(message)\n \n+        # check if document is (virtually) empty, and remove it if so\n+        num_messages = 0\n+        for context in root.findall('context'):\n+            for message in context.findall('message'):\n+                num_messages += 1\n+        if num_messages < MIN_NUM_MESSAGES:\n+            print('Removing %s, as it contains only %i messages' % (filepath, num_messages))\n+            continue\n+\n         # write fixed-up tree\n         # if diff reduction requested, replace some XML to 'sanitize' to qt formatting\n         if reduce_diff_hacks:"
      },
      {
        "sha": "299377d691155308875fb95fe5b7f49f9e8d50dc",
        "filename": "contrib/filter-lcov.py",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/filter-lcov.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/filter-lcov.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/filter-lcov.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,25 @@\n+#!/usr/bin/env python3\n+\n+import argparse\n+\n+parser = argparse.ArgumentParser(description='Remove the coverage data from a tracefile for all files matching the pattern.')\n+parser.add_argument('--pattern', '-p', action='append', help='the pattern of files to remove', required=True)\n+parser.add_argument('tracefile', help='the tracefile to remove the coverage data from')\n+parser.add_argument('outfile', help='filename for the output to be written to')\n+\n+args = parser.parse_args()\n+tracefile = args.tracefile\n+pattern = args.pattern\n+outfile = args.outfile\n+\n+in_remove = False\n+with open(tracefile, 'r') as f:\n+    with open(outfile, 'w') as wf:\n+        for line in f:\n+            for p in pattern:\n+                if line.startswith(\"SF:\") and p in line:\n+                    in_remove = True\n+            if not in_remove:\n+                wf.write(line)\n+            if line == 'end_of_record\\n':\n+                in_remove = False"
      },
      {
        "sha": "d94c7f4f8e57284cea3c23b226755d38b9629f40",
        "filename": "contrib/gitian-build.sh",
        "status": "added",
        "additions": 392,
        "deletions": 0,
        "changes": 392,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.sh?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,392 @@\n+# Copyright (c) 2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# What to do\n+sign=false\n+verify=false\n+build=false\n+setupenv=false\n+\n+# Systems to build\n+linux=true\n+windows=true\n+osx=true\n+\n+# Other Basic variables\n+SIGNER=\n+VERSION=\n+commit=false\n+url=https://github.com/bitcoin/bitcoin\n+proc=2\n+mem=2000\n+lxc=true\n+osslTarUrl=http://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz\n+osslPatchUrl=https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n+scriptName=$(basename -- \"$0\")\n+signProg=\"gpg --detach-sign\"\n+commitFiles=true\n+\n+# Help Message\n+read -d '' usage <<- EOF\n+Usage: $scriptName [-c|u|v|b|s|B|o|h|j|m|] signer version\n+\n+Run this script from the directory containing the bitcoin, gitian-builder, gitian.sigs, and bitcoin-detached-sigs.\n+\n+Arguments:\n+signer          GPG signer to sign each build assert file\n+version\t\tVersion number, commit, or branch to build. If building a commit or branch, the -c option must be specified\n+\n+Options:\n+-c|--commit\tIndicate that the version argument is for a commit or branch\n+-u|--url\tSpecify the URL of the repository. Default is https://github.com/bitcoin/bitcoin\n+-v|--verify \tVerify the Gitian build\n+-b|--build\tDo a Gitian build\n+-s|--sign\tMake signed binaries for Windows and Mac OSX\n+-B|--buildsign\tBuild both signed and unsigned binaries\n+-o|--os\t\tSpecify which Operating Systems the build is for. Default is lwx. l for linux, w for windows, x for osx\n+-j\t\tNumber of processes to use. Default 2\n+-m\t\tMemory to allocate in MiB. Default 2000\n+--kvm           Use KVM instead of LXC\n+--setup         Set up the Gitian building environment. Uses KVM. If you want to use lxc, use the --lxc option. Only works on Debian-based systems (Ubuntu, Debian)\n+--detach-sign   Create the assert file for detached signing. Will not commit anything.\n+--no-commit     Do not commit anything to git\n+-h|--help\tPrint this help message\n+EOF\n+\n+# Get options and arguments\n+while :; do\n+    case $1 in\n+        # Verify\n+        -v|--verify)\n+\t    verify=true\n+            ;;\n+        # Build\n+        -b|--build)\n+\t    build=true\n+            ;;\n+        # Sign binaries\n+        -s|--sign)\n+\t    sign=true\n+            ;;\n+        # Build then Sign\n+        -B|--buildsign)\n+\t    sign=true\n+\t    build=true\n+            ;;\n+        # PGP Signer\n+        -S|--signer)\n+\t    if [ -n \"$2\" ]\n+\t    then\n+\t\tSIGNER=$2\n+\t\tshift\n+\t    else\n+\t\techo 'Error: \"--signer\" requires a non-empty argument.'\n+\t\texit 1\n+\t    fi\n+           ;;\n+        # Operating Systems\n+        -o|--os)\n+\t    if [ -n \"$2\" ]\n+\t    then\n+\t\tlinux=false\n+\t\twindows=false\n+\t\tosx=false\n+\t\tif [[ \"$2\" = *\"l\"* ]]\n+\t\tthen\n+\t\t    linux=true\n+\t\tfi\n+\t\tif [[ \"$2\" = *\"w\"* ]]\n+\t\tthen\n+\t\t    windows=true\n+\t\tfi\n+\t\tif [[ \"$2\" = *\"x\"* ]]\n+\t\tthen\n+\t\t    osx=true\n+\t\tfi\n+\t\tshift\n+\t    else\n+\t\techo 'Error: \"--os\" requires an argument containing an l (for linux), w (for windows), or x (for Mac OSX)\\n'\n+\t\texit 1\n+\t    fi\n+\t    ;;\n+\t# Help message\n+\t-h|--help)\n+\t    echo \"$usage\"\n+\t    exit 0\n+\t    ;;\n+\t# Commit or branch\n+\t-c|--commit)\n+\t    commit=true\n+\t    ;;\n+\t# Number of Processes\n+\t-j)\n+\t    if [ -n \"$2\" ]\n+\t    then\n+\t\tproc=$2\n+\t\tshift\n+\t    else\n+\t\techo 'Error: \"-j\" requires an argument'\n+\t\texit 1\n+\t    fi\n+\t    ;;\n+\t# Memory to allocate\n+\t-m)\n+\t    if [ -n \"$2\" ]\n+\t    then\n+\t\tmem=$2\n+\t\tshift\n+\t    else\n+\t\techo 'Error: \"-m\" requires an argument'\n+\t\texit 1\n+\t    fi\n+\t    ;;\n+\t# URL\n+\t-u)\n+\t    if [ -n \"$2\" ]\n+\t    then\n+\t\turl=$2\n+\t\tshift\n+\t    else\n+\t\techo 'Error: \"-u\" requires an argument'\n+\t\texit 1\n+\t    fi\n+\t    ;;\n+        # kvm\n+        --kvm)\n+            lxc=false\n+            ;;\n+        # Detach sign\n+        --detach-sign)\n+            signProg=\"true\"\n+            commitFiles=false\n+            ;;\n+        # Commit files\n+        --no-commit)\n+            commitFiles=false\n+            ;;\n+        # Setup\n+        --setup)\n+            setup=true\n+            ;;\n+\t*)               # Default case: If no more options then break out of the loop.\n+             break\n+    esac\n+    shift\n+done\n+\n+# Set up LXC\n+if [[ $lxc = true ]]\n+then\n+    export USE_LXC=1\n+    export LXC_BRIDGE=lxcbr0\n+    sudo ifconfig lxcbr0 up 10.0.2.2\n+fi\n+\n+# Check for OSX SDK\n+if [[ ! -e \"gitian-builder/inputs/MacOSX10.11.sdk.tar.gz\" && $osx == true ]]\n+then\n+    echo \"Cannot build for OSX, SDK does not exist. Will build for other OSes\"\n+    osx=false\n+fi\n+\n+# Get signer\n+if [[ -n\"$1\" ]]\n+then\n+    SIGNER=$1\n+    shift\n+fi\n+\n+# Get version\n+if [[ -n \"$1\" ]]\n+then\n+    VERSION=$1\n+    COMMIT=$VERSION\n+    shift\n+fi\n+\n+# Check that a signer is specified\n+if [[ $SIGNER == \"\" ]]\n+then\n+    echo \"$scriptName: Missing signer.\"\n+    echo \"Try $scriptName --help for more information\"\n+    exit 1\n+fi\n+\n+# Check that a version is specified\n+if [[ $VERSION == \"\" ]]\n+then\n+    echo \"$scriptName: Missing version.\"\n+    echo \"Try $scriptName --help for more information\"\n+    exit 1\n+fi\n+\n+# Add a \"v\" if no -c\n+if [[ $commit = false ]]\n+then\n+\tCOMMIT=\"v${VERSION}\"\n+fi\n+echo ${COMMIT}\n+\n+# Setup build environment\n+if [[ $setup = true ]]\n+then\n+    sudo apt-get install ruby apache2 git apt-cacher-ng python-vm-builder qemu-kvm qemu-utils\n+    git clone https://github.com/bitcoin-core/gitian.sigs.git\n+    git clone https://github.com/bitcoin-core/bitcoin-detached-sigs.git\n+    git clone https://github.com/devrandom/gitian-builder.git\n+    pushd ./gitian-builder\n+    if [[ -n \"$USE_LXC\" ]]\n+    then\n+        sudo apt-get install lxc\n+        bin/make-base-vm --suite trusty --arch amd64 --lxc\n+    else\n+        bin/make-base-vm --suite trusty --arch amd64\n+    fi\n+    popd\n+fi\n+\n+# Set up build\n+pushd ./bitcoin\n+git fetch\n+git checkout ${COMMIT}\n+popd\n+\n+# Build\n+if [[ $build = true ]]\n+then\n+\t# Make output folder\n+\tmkdir -p ./bitcoin-binaries/${VERSION}\n+\t\n+\t# Build Dependencies\n+\techo \"\"\n+\techo \"Building Dependencies\"\n+\techo \"\"\n+\tpushd ./gitian-builder\t\n+\tmkdir -p inputs\n+\twget -N -P inputs $osslPatchUrl\n+\twget -N -P inputs $osslTarUrl\n+\tmake -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n+\n+\t# Linux\n+\tif [[ $linux = true ]]\n+\tthen\n+            echo \"\"\n+\t    echo \"Compiling ${VERSION} Linux\"\n+\t    echo \"\"\n+\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n+\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n+\t    mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/${VERSION}\n+\tfi\n+\t# Windows\n+\tif [[ $windows = true ]]\n+\tthen\n+\t    echo \"\"\n+\t    echo \"Compiling ${VERSION} Windows\"\n+\t    echo \"\"\n+\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n+\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n+\t    mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n+\t    mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../bitcoin-binaries/${VERSION}\n+\tfi\n+\t# Mac OSX\n+\tif [[ $osx = true ]]\n+\tthen\n+\t    echo \"\"\n+\t    echo \"Compiling ${VERSION} Mac OSX\"\n+\t    echo \"\"\n+\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+\t    mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n+\t    mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../bitcoin-binaries/${VERSION}\n+\tfi\n+\tpopd\n+\n+        if [[ $commitFiles = true ]]\n+        then\n+\t    # Commit to gitian.sigs repo\n+            echo \"\"\n+            echo \"Committing ${VERSION} Unsigned Sigs\"\n+            echo \"\"\n+            pushd gitian.sigs\n+            git add ${VERSION}-linux/${SIGNER}\n+            git add ${VERSION}-win-unsigned/${SIGNER}\n+            git add ${VERSION}-osx-unsigned/${SIGNER}\n+            git commit -a -m \"Add ${VERSION} unsigned sigs for ${SIGNER}\"\n+            popd\n+        fi\n+fi\n+\n+# Verify the build\n+if [[ $verify = true ]]\n+then\n+\t# Linux\n+\tpushd ./gitian-builder\n+\techo \"\"\n+\techo \"Verifying v${VERSION} Linux\"\n+\techo \"\"\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n+\t# Windows\n+\techo \"\"\n+\techo \"Verifying v${VERSION} Windows\"\n+\techo \"\"\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n+\t# Mac OSX\t\n+\techo \"\"\n+\techo \"Verifying v${VERSION} Mac OSX\"\n+\techo \"\"\t\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+\t# Signed Windows\n+\techo \"\"\n+\techo \"Verifying v${VERSION} Signed Windows\"\n+\techo \"\"\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n+\t# Signed Mac OSX\n+\techo \"\"\n+\techo \"Verifying v${VERSION} Signed Mac OSX\"\n+\techo \"\"\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\t\n+\tpopd\n+fi\n+\n+# Sign binaries\n+if [[ $sign = true ]]\n+then\n+\t\n+        pushd ./gitian-builder\n+\t# Sign Windows\n+\tif [[ $windows = true ]]\n+\tthen\n+\t    echo \"\"\n+\t    echo \"Signing ${VERSION} Windows\"\n+\t    echo \"\"\n+\t    ./bin/gbuild -i --commit signature=${COMMIT} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+\t    mv build/out/bitcoin-*win64-setup.exe ../bitcoin-binaries/${VERSION}\n+\t    mv build/out/bitcoin-*win32-setup.exe ../bitcoin-binaries/${VERSION}\n+\tfi\n+\t# Sign Mac OSX\n+\tif [[ $osx = true ]]\n+\tthen\n+\t    echo \"\"\n+\t    echo \"Signing ${VERSION} Mac OSX\"\n+\t    echo \"\"\n+\t    ./bin/gbuild -i --commit signature=${COMMIT} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n+\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n+\t    mv build/out/bitcoin-osx-signed.dmg ../bitcoin-binaries/${VERSION}/bitcoin-${VERSION}-osx.dmg\n+\tfi\n+\tpopd\n+\n+        if [[ $commitFiles = true ]]\n+        then\n+            # Commit Sigs\n+            pushd gitian.sigs\n+            echo \"\"\n+            echo \"Committing ${VERSION} Signed Sigs\"\n+            echo \"\"\n+            git add ${VERSION}-win-signed/${SIGNER}\n+            git add ${VERSION}-osx-signed/${SIGNER}\n+            git commit -a -m \"Add ${VERSION} signed binary sigs for ${SIGNER}\"\n+            popd\n+        fi\n+fi"
      },
      {
        "sha": "d9dbfd3cb3d1dfff43d36b4d1867b58cbea6c3e6",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "modified",
        "additions": 10,
        "deletions": 11,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,8 +1,7 @@\n-### Gavin's notes on getting gitian builds up and running using KVM:###\n+### Gavin's notes on getting Gitian builds up and running using KVM\n \n-These instructions distilled from:\n-[  https://help.ubuntu.com/community/KVM/Installation](  https://help.ubuntu.com/community/KVM/Installation)\n-... see there for complete details.\n+These instructions distilled from\n+[https://help.ubuntu.com/community/KVM/Installation](https://help.ubuntu.com/community/KVM/Installation).\n \n You need the right hardware: you need a 64-bit-capable CPU with hardware virtualization support (Intel VT-x or AMD-V). Not all modern CPUs support hardware virtualization.\n \n@@ -33,14 +32,14 @@ Once you've got the right hardware and software:\n     # Get inputs (see doc/release-process.md for exact inputs needed and where to get them)\n     ...\n \n-    # For further build instructions see doc/release-notes.md\n+    # For further build instructions see doc/release-process.md\n     ...\n \n ---------------------\n \n `gitian-builder` now also supports building using LXC. See\n-[  https://help.ubuntu.com/12.04/serverguide/lxc.html](  https://help.ubuntu.com/12.04/serverguide/lxc.html)\n-... for how to get LXC up and running under Ubuntu.\n+[help.ubuntu.com](https://help.ubuntu.com/14.04/serverguide/lxc.html)\n+for how to get LXC up and running under Ubuntu.\n \n If your main machine is a 64-bit Mac or PC with a few gigabytes of memory\n and at least 10 gigabytes of free disk space, you can `gitian-build` using\n@@ -57,10 +56,10 @@ Here's a description of Gavin's setup on OSX 10.6:\n \n 4. Inside the running Ubuntu desktop, install:\n \n-\tsudo apt-get install debootstrap lxc ruby apache2 git apt-cacher-ng python-vm-builder\n+\t\tsudo apt-get install debootstrap lxc ruby apache2 git apt-cacher-ng python-vm-builder\n \n 5. Still inside Ubuntu, tell gitian-builder to use LXC, then follow the \"Once you've got the right hardware and software\" instructions above:\n \n-\texport USE_LXC=1\n-\tgit clone git://github.com/bitcoin/bitcoin.git\n-\t... etc\n+\t\texport USE_LXC=1\n+\t\tgit clone git://github.com/bitcoin/bitcoin.git\n+\t\t... etc"
      },
      {
        "sha": "c80e19edbb2212d1e9ed821e75f1baf9261de951",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 102,
        "deletions": 19,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,31 +1,46 @@\n ---\n-name: \"bitcoin-linux-0.12\"\n+name: \"bitcoin-linux-0.16\"\n enable_cache: true\n suites:\n - \"trusty\"\n architectures:\n - \"amd64\"\n-packages: \n-- \"g++-multilib\"\n+packages:\n+- \"curl\"\n+- \"g++-aarch64-linux-gnu\"\n+- \"g++-4.8-aarch64-linux-gnu\"\n+- \"gcc-4.8-aarch64-linux-gnu\"\n+- \"binutils-aarch64-linux-gnu\"\n+- \"g++-arm-linux-gnueabihf\"\n+- \"g++-4.8-arm-linux-gnueabihf\"\n+- \"gcc-4.8-arm-linux-gnueabihf\"\n+- \"binutils-arm-linux-gnueabihf\"\n+- \"g++-4.8-multilib\"\n+- \"gcc-4.8-multilib\"\n+- \"binutils-gold\"\n - \"git-core\"\n - \"pkg-config\"\n - \"autoconf\"\n - \"libtool\"\n - \"automake\"\n - \"faketime\"\n - \"bsdmainutils\"\n-- \"binutils-gold\"\n-reference_datetime: \"2015-06-01 00:00:00\"\n+- \"ca-certificates\"\n+- \"python\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files: []\n script: |\n+\n   WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"i686-pc-linux-gnu x86_64-unknown-linux-gnu\"\n-  CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\"\n+  HOSTS=\"i686-pc-linux-gnu x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu\"\n+  CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests\"\n   FAKETIME_HOST_PROGS=\"\"\n-  FAKETIME_PROGS=\"date ar ranlib nm strip\"\n+  FAKETIME_PROGS=\"date ar ranlib nm\"\n+  HOST_CFLAGS=\"-O2 -g\"\n+  HOST_CXXFLAGS=\"-O2 -g\"\n+  HOST_LDFLAGS=-static-libstdc++\n \n   export QT_RCC_TEST=1\n   export GZIP=\"-9n\"\n@@ -39,39 +54,86 @@ script: |\n     mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n   fi\n \n-  # Create global faketime wrappers\n+  function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n     echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n     echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n     echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n     chmod +x ${WRAP_DIR}/${prog}\n   done\n+  }\n \n-  # Create per-host faketime wrappers\n+  function create_per-host_faketime_wrappers {\n   for i in $HOSTS; do\n     for prog in ${FAKETIME_HOST_PROGS}; do\n         echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n         echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n         echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n         chmod +x ${WRAP_DIR}/${i}-${prog}\n     done\n   done\n+  }\n+\n+  # Faketime for depends so intermediate results are comparable\n+  export PATH_orig=${PATH}\n+  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n+  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n+  EXTRA_INCLUDES_BASE=$WRAP_DIR/extra_includes\n+  mkdir -p $EXTRA_INCLUDES_BASE\n+\n+  # x86 needs /usr/include/i386-linux-gnu/asm pointed to /usr/include/x86_64-linux-gnu/asm,\n+  # but we can't write there. Instead, create a link here and force it to be included in the\n+  # search paths by wrapping gcc/g++.\n+\n+  mkdir -p $EXTRA_INCLUDES_BASE/i686-pc-linux-gnu\n+  rm -f $WRAP_DIR/extra_includes/i686-pc-linux-gnu/asm\n+  ln -s /usr/include/x86_64-linux-gnu/asm $EXTRA_INCLUDES_BASE/i686-pc-linux-gnu/asm\n+\n+  for prog in gcc g++; do\n+  rm -f ${WRAP_DIR}/${prog}\n+  cat << EOF > ${WRAP_DIR}/${prog}\n+  #!/bin/bash\n+  REAL=\"`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1`\"\n+  for var in \"\\$@\"\n+  do\n+    if [ \"\\$var\" = \"-m32\" ]; then\n+      export C_INCLUDE_PATH=\"$EXTRA_INCLUDES_BASE/i686-pc-linux-gnu\"\n+      export CPLUS_INCLUDE_PATH=\"$EXTRA_INCLUDES_BASE/i686-pc-linux-gnu\"\n+      break\n+    fi\n+  done\n+  \\$REAL \\$@\n+  EOF\n+  chmod +x ${WRAP_DIR}/${prog}\n+  done\n+\n   cd bitcoin\n   BASEPREFIX=`pwd`/depends\n   # Build dependencies for each host\n   for i in $HOSTS; do\n+    EXTRA_INCLUDES=\"$EXTRA_INCLUDES_BASE/$i\"\n+    if [ -d \"$EXTRA_INCLUDES\" ]; then\n+      export HOST_ID_SALT=\"$EXTRA_INCLUDES\"\n+    fi\n     make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n+    unset HOST_ID_SALT\n   done\n \n+  # Faketime for binaries\n+  export PATH=${PATH_orig}\n+  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n   # Create the release tarball using (arbitrarily) the first host\n   ./autogen.sh\n-  ./configure --prefix=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`\n+  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n   SOURCEDIST=`echo bitcoin-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n@@ -82,6 +144,9 @@ script: |\n   find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n+  # Workaround for tarball not building with the bare tag version (prep)\n+  make -C src obj/build.h\n+\n   ORIGPATH=\"$PATH\"\n   # Extract the release tarball into a dir for each host and build\n   for i in ${HOSTS}; do\n@@ -92,18 +157,36 @@ script: |\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n \n-    ./configure --prefix=${BASEPREFIX}/${i} --bindir=${INSTALLPATH}/bin --includedir=${INSTALLPATH}/include --libdir=${INSTALLPATH}/lib --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n+    # Workaround for tarball not building with the bare tag version\n+    echo '#!/bin/true' >share/genbuild.sh\n+    mkdir src/obj\n+    cp ../src/obj/build.h src/obj/\n+\n+    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\" LDFLAGS=\"${HOST_LDFLAGS}\"\n     make ${MAKEOPTS}\n-    make install-strip\n+    make ${MAKEOPTS} -C src check-security\n+\n+    #TODO: This is a quick hack that disables symbol checking for arm.\n+    #      Instead, we should investigate why these are popping up.\n+    #      For aarch64, we'll need to bump up the min GLIBC version, as the abi\n+    #      support wasn't introduced until 2.17.\n+    case $i in\n+       aarch64-*) : ;;\n+       arm-*) : ;;\n+       *) make ${MAKEOPTS} -C src check-symbols ;;\n+    esac\n+\n+    make install DESTDIR=${INSTALLPATH}\n     cd installed\n     find . -name \"lib*.la\" -delete\n     find . -name \"lib*.a\" -delete\n     rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME} | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n+    find ${DISTNAME}/bin -type f -executable -exec ../contrib/devtools/split-debug.sh {} {} {}.dbg \\;\n+    find ${DISTNAME}/lib -type f -exec ../contrib/devtools/split-debug.sh {} {} {}.dbg \\;\n+    find ${DISTNAME} -not -name \"*.dbg\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n+    find ${DISTNAME} -name \"*.dbg\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}-debug.tar.gz\n     cd ../../\n+    rm -rf distsrc-${i}\n   done\n   mkdir -p $OUTDIR/src\n   mv $SOURCEDIST $OUTDIR/src\n-  mv ${OUTDIR}/${DISTNAME}-x86_64-*.tar.gz ${OUTDIR}/${DISTNAME}-linux64.tar.gz\n-  mv ${OUTDIR}/${DISTNAME}-i686-*.tar.gz ${OUTDIR}/${DISTNAME}-linux32.tar.gz\n-"
      },
      {
        "sha": "f6e9414ab1bf2ec0fa0f098fa62972bb06281f43",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -5,11 +5,9 @@ suites:\n architectures:\n - \"amd64\"\n packages:\n-- \"libc6:i386\"\n - \"faketime\"\n-reference_datetime: \"2015-06-01 00:00:00\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin-detached-sigs.git\"\n+- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n   \"dir\": \"signature\"\n files:\n - \"bitcoin-osx-unsigned.tar.gz\"\n@@ -33,6 +31,7 @@ script: |\n   SIGNED=bitcoin-osx-signed.dmg\n \n   tar -xf ${UNSIGNED}\n+  OSX_VOLNAME=\"$(cat osx_volname)\"\n   ./detached-sig-apply.sh ${UNSIGNED} signature/osx\n-  ${WRAP_DIR}/genisoimage -no-cache-inodes -D -l -probe -V \"Bitcoin-Core\" -no-pad -r -apple -o uncompressed.dmg signed-app\n+  ${WRAP_DIR}/genisoimage -no-cache-inodes -D -l -probe -V \"${OSX_VOLNAME}\" -no-pad -r -dir-mode 0755 -apple -o uncompressed.dmg signed-app\n   ${WRAP_DIR}/dmg dmg uncompressed.dmg ${OUTDIR}/${SIGNED}"
      },
      {
        "sha": "cbf286d2cde28ffaedb545bf7f1e82c339578b1c",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 46,
        "deletions": 14,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,33 +1,41 @@\n ---\n-name: \"bitcoin-osx-0.12\"\n+name: \"bitcoin-osx-0.16\"\n enable_cache: true\n suites:\n - \"trusty\"\n architectures:\n - \"amd64\"\n-packages: \n+packages:\n+- \"ca-certificates\"\n+- \"curl\"\n - \"g++\"\n - \"git-core\"\n - \"pkg-config\"\n - \"autoconf\"\n+- \"librsvg2-bin\"\n+- \"libtiff-tools\"\n - \"libtool\"\n - \"automake\"\n - \"faketime\"\n - \"bsdmainutils\"\n - \"cmake\"\n+- \"imagemagick\"\n - \"libcap-dev\"\n - \"libz-dev\"\n - \"libbz2-dev\"\n-reference_datetime: \"2015-06-01 00:00:00\"\n+- \"python\"\n+- \"python-dev\"\n+- \"python-setuptools\"\n+- \"fonts-tuffy\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n-- \"MacOSX10.9.sdk.tar.gz\"\n+- \"MacOSX10.11.sdk.tar.gz\"\n script: |\n   WRAP_DIR=$HOME/wrapped\n   HOSTS=\"x86_64-apple-darwin11\"\n-  CONFIGFLAGS=\"--enable-reduce-exports GENISOIMAGE=$WRAP_DIR/genisoimage\"\n+  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests GENISOIMAGE=$WRAP_DIR/genisoimage\"\n   FAKETIME_HOST_PROGS=\"\"\n   FAKETIME_PROGS=\"ar ranlib date dmg genisoimage\"\n \n@@ -45,43 +53,56 @@ script: |\n \n   export ZERO_AR_DATE=1\n \n-  # Create global faketime wrappers\n+  function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n     echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n     echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n     echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n     chmod +x ${WRAP_DIR}/${prog}\n   done\n+  }\n \n-  # Create per-host faketime wrappers\n+  function create_per-host_faketime_wrappers {\n   for i in $HOSTS; do\n     for prog in ${FAKETIME_HOST_PROGS}; do\n         echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n         echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n         echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n         chmod +x ${WRAP_DIR}/${i}-${prog}\n     done\n   done\n+  }\n+\n+  # Faketime for depends so intermediate results are comparable\n+  export PATH_orig=${PATH}\n+  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n+  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n   cd bitcoin\n   BASEPREFIX=`pwd`/depends\n \n   mkdir -p ${BASEPREFIX}/SDKs\n-  tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/MacOSX10.9.sdk.tar.gz\n+  tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/MacOSX10.11.sdk.tar.gz\n \n   # Build dependencies for each host\n   for i in $HOSTS; do\n     make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n   done\n \n+  # Faketime for binaries\n+  export PATH=${PATH_orig}\n+  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n   # Create the release tarball using (arbitrarily) the first host\n   ./autogen.sh\n-  ./configure --prefix=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`\n+  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n   SOURCEDIST=`echo bitcoin-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n@@ -93,6 +114,9 @@ script: |\n   find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n+  # Workaround for tarball not building with the bare tag version (prep)\n+  make -C src obj/build.h\n+\n   ORIGPATH=\"$PATH\"\n   # Extract the release tarball into a dir for each host and build\n   for i in ${HOSTS}; do\n@@ -103,12 +127,20 @@ script: |\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n \n-    ./configure --prefix=${BASEPREFIX}/${i} --bindir=${INSTALLPATH}/bin --includedir=${INSTALLPATH}/include --libdir=${INSTALLPATH}/lib --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n+    # Workaround for tarball not building with the bare tag version\n+    echo '#!/bin/true' >share/genbuild.sh\n+    mkdir src/obj\n+    cp ../src/obj/build.h src/obj/\n+\n+    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n     make ${MAKEOPTS}\n-    make install-strip\n+    make install-strip DESTDIR=${INSTALLPATH}\n \n+    make osx_volname\n     make deploydir\n+    OSX_VOLNAME=\"$(cat osx_volname)\"\n     mkdir -p unsigned-app-${i}\n+    cp osx_volname unsigned-app-${i}/\n     cp contrib/macdeploy/detached-sig-apply.sh unsigned-app-${i}\n     cp contrib/macdeploy/detached-sig-create.sh unsigned-app-${i}\n     cp ${BASEPREFIX}/${i}/native/bin/dmg ${BASEPREFIX}/${i}/native/bin/genisoimage unsigned-app-${i}\n@@ -120,7 +152,7 @@ script: |\n     popd\n \n     make deploy\n-    ${WRAP_DIR}/dmg dmg Bitcoin-Core.dmg ${OUTDIR}/${DISTNAME}-osx-unsigned.dmg\n+    ${WRAP_DIR}/dmg dmg \"${OSX_VOLNAME}.dmg\" ${OUTDIR}/${DISTNAME}-osx-unsigned.dmg\n \n     cd installed\n     find . -name \"lib*.la\" -delete"
      },
      {
        "sha": "3c1e0214a0aa6bfd31c54fabfdc444aad705c0b0",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -7,9 +7,8 @@ architectures:\n packages:\n - \"libssl-dev\"\n - \"autoconf\"\n-reference_datetime: \"2015-06-01 00:00:00\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin-detached-sigs.git\"\n+- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n   \"dir\": \"signature\"\n files:\n - \"osslsigncode-1.7.1.tar.gz\""
      },
      {
        "sha": "95ff9759c7bfe1fee77c0123b37c53c6417d5dfb",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 57,
        "deletions": 20,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,11 +1,12 @@\n ---\n-name: \"bitcoin-win-0.12\"\n+name: \"bitcoin-win-0.16\"\n enable_cache: true\n suites:\n - \"trusty\"\n architectures:\n - \"amd64\"\n-packages: \n+packages:\n+- \"curl\"\n - \"g++\"\n - \"git-core\"\n - \"pkg-config\"\n@@ -18,17 +19,20 @@ packages:\n - \"g++-mingw-w64\"\n - \"nsis\"\n - \"zip\"\n-reference_datetime: \"2015-06-01 00:00:00\"\n+- \"ca-certificates\"\n+- \"python\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files: []\n script: |\n   WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"x86_64-w64-mingw32 i686-w64-mingw32\"\n-  CONFIGFLAGS=\"--enable-reduce-exports\"\n-  FAKETIME_HOST_PROGS=\"g++ ar ranlib nm windres strip\"\n+  HOSTS=\"i686-w64-mingw32 x86_64-w64-mingw32\"\n+  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n+  FAKETIME_HOST_PROGS=\"g++ ar ranlib nm windres strip objcopy\"\n   FAKETIME_PROGS=\"date makensis zip\"\n+  HOST_CFLAGS=\"-O2 -g\"\n+  HOST_CXXFLAGS=\"-O2 -g\"\n \n   export QT_RCC_TEST=1\n   export GZIP=\"-9n\"\n@@ -42,29 +46,31 @@ script: |\n     mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n   fi\n \n-  # Create global faketime wrappers\n+  function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n     echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n     echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n     echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n     chmod +x ${WRAP_DIR}/${prog}\n   done\n+  }\n \n-  # Create per-host faketime wrappers\n+  function create_per-host_faketime_wrappers {\n   for i in $HOSTS; do\n     for prog in ${FAKETIME_HOST_PROGS}; do\n         echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n         echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n         echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n         chmod +x ${WRAP_DIR}/${i}-${prog}\n     done\n   done\n+  }\n \n-  # Create per-host linker wrapper\n+  function create_per-host_linker_wrapper {\n   # This is only needed for trusty, as the mingw linker leaks a few bytes of\n   # heap, causing non-determinism. See discussion in https://github.com/bitcoin/bitcoin/pull/6900\n   for i in $HOSTS; do\n@@ -80,13 +86,19 @@ script: |\n         echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n         echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n         echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"export COMPILER_PATH=${WRAP_DIR}/${i}\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n         chmod +x ${WRAP_DIR}/${i}-${prog}\n     done\n   done\n+  }\n \n+  # Faketime for depends so intermediate results are comparable\n+  export PATH_orig=${PATH}\n+  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n+  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n+  create_per-host_linker_wrapper \"2000-01-01 12:00:00\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n   cd bitcoin\n@@ -96,9 +108,16 @@ script: |\n     make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n   done\n \n+  # Faketime for binaries\n+  export PATH=${PATH_orig}\n+  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  create_per-host_linker_wrapper \"${REFERENCE_DATETIME}\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n   # Create the release tarball using (arbitrarily) the first host\n   ./autogen.sh\n-  ./configure --prefix=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`\n+  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n   SOURCEDIST=`echo bitcoin-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n@@ -112,6 +131,9 @@ script: |\n   cp ../$SOURCEDIST $OUTDIR/src\n   popd\n \n+  # Workaround for tarball not building with the bare tag version (prep)\n+  make -C src obj/build.h\n+\n   ORIGPATH=\"$PATH\"\n   # Extract the release tarball into a dir for each host and build\n   for i in ${HOSTS}; do\n@@ -122,21 +144,36 @@ script: |\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n \n-    ./configure --prefix=${BASEPREFIX}/${i} --bindir=${INSTALLPATH}/bin --includedir=${INSTALLPATH}/include --libdir=${INSTALLPATH}/lib --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n+    # Workaround for tarball not building with the bare tag version\n+    echo '#!/bin/true' >share/genbuild.sh\n+    mkdir src/obj\n+    cp ../src/obj/build.h src/obj/\n+\n+    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\"\n     make ${MAKEOPTS}\n+    make ${MAKEOPTS} -C src check-security\n     make deploy\n-    make install-strip\n+    make install DESTDIR=${INSTALLPATH}\n+    rename 's/-setup\\.exe$/-setup-unsigned.exe/' *-setup.exe\n     cp -f bitcoin-*setup*.exe $OUTDIR/\n     cd installed\n     mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/\n     find . -name \"lib*.la\" -delete\n     find . -name \"lib*.a\" -delete\n     rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME} -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}.zip\n-    cd ../..\n+    find ${DISTNAME}/bin -type f -executable -exec ${i}-objcopy --only-keep-debug {} {}.dbg \\; -exec ${i}-strip -s {} \\; -exec ${i}-objcopy --add-gnu-debuglink={}.dbg {} \\;\n+    find ${DISTNAME}/lib -type f -exec ${i}-objcopy --only-keep-debug {} {}.dbg \\; -exec ${i}-strip -s {} \\; -exec ${i}-objcopy --add-gnu-debuglink={}.dbg {} \\;\n+    find ${DISTNAME} -not -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}.zip\n+    find ${DISTNAME} -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}-debug.zip\n+    cd ../../\n+    rm -rf distsrc-${i}\n   done\n-  cd $OUTDIR\n-  rename 's/-setup\\.exe$/-setup-unsigned.exe/' *-setup.exe\n-  find . -name \"*-setup-unsigned.exe\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\n+  cp -rf contrib/windeploy $BUILD_DIR\n+  cd $BUILD_DIR/windeploy\n+  mkdir unsigned\n+  cp $OUTDIR/bitcoin-*setup-unsigned.exe unsigned/\n+  find . | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\n+  mv ${OUTDIR}/${DISTNAME}-x86_64-*-debug.zip ${OUTDIR}/${DISTNAME}-win64-debug.zip\n+  mv ${OUTDIR}/${DISTNAME}-i686-*-debug.zip ${OUTDIR}/${DISTNAME}-win32-debug.zip\n   mv ${OUTDIR}/${DISTNAME}-x86_64-*.zip ${OUTDIR}/${DISTNAME}-win64.zip\n   mv ${OUTDIR}/${DISTNAME}-i686-*.zip ${OUTDIR}/${DISTNAME}-win32.zip"
      },
      {
        "sha": "60d76c0ec7ab86635637ee9f49948e004fadfee4",
        "filename": "contrib/gitian-downloader/btcdrak-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 142,
        "changes": 142,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/gitian-downloader/btcdrak-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/gitian-downloader/btcdrak-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/btcdrak-key.pgp?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,142 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v2\n-\n-mQINBFWpKewBEACzsuhtkin1MdQCKCEcFypjEstg0jA0nNVOpsGDTtdwfMpWiLJH\n-bV7b3V1p5hgaPdSyZsUezvHbkVEQxmU47C9lwph3svu6v8HInBwnOa5zj4L0Ih18\n-7yfeEJOvWzULzNxtiIqvWQBFxrVBbgHMhUMg0j6KCYOWeTmTuUKgvbQB8dExCoV9\n-7l+mb0k6eOZhwGWl6KD8mVkdhfXhoCZY5g79BTJf7lAQqnVbjxdyEKD2HSSs5Jnx\n-mTeZg40ottXa1puT+x9ES7L/IOY5kcrp6lU8iyKAoUS4vOJt4nPqY59Pr9j2nUak\n-2BUY0yojH41a752OYW59R+0uTNcUAwpNFucOb4TrNqjGJaPtxvFBZPTLImfSE+Jj\n-VTT6eZixOXPlOWm/7PgR66JF70p3gDwCL19bwUeOKX3UbkjhmYG48d9y1FNFZlVM\n-Yf36xj0c2IOz34VVY6GcCfnIN6xus5qWgHWiQ6RRdlRc9TbcCsUGttXuFP/n4nX2\n-OHo6I/HBNidLScfD2sXZtYHLcqvi2CcvEmmDdwBZrZncz+cHpjz8xmONb3bEMNT0\n-euPcEC5PXUItCSk9KHSgJhAWqfB2WcZ0RUYLp5lbtIZGHqY34LJRWXVKeOQIq4Gn\n-8uCyM5oQUY9zK4x7fdRz5tOjInYg+eSqtnLVDACqmazQHZ6kuGspAvwW8QARAQAB\n-tBtCdGNEcmFrIDxidGNkcmFrQGdtYWlsLmNvbT6JAj0EEwECACgFAlWpKewCGwEF\n-CQWjmoAGCwkIBwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJEOXROPXnOhryKiAP+L3B\n-4c4eZcp8OSRwtYMiNmlxqhzEe+Va8T748rP8oULBFi7b7Nw9FILtp0Vtt2Xw9Pd9\n-EMsv5ZfgPpFL58ZeaO5f4uyrxipfUE5XdhkMOtqqlTfuCGh5fvNv1sWgf5tOFS2+\n-4TCtcSSywl/OlbRmWW/rsJ+RPrE32iSn171WRUXmGGBGSTF2mxCELLIW/rnY1qUw\n-u81BN4SYQOSyd1ha4XAlVYnPcEdpD5mBhwh2mdw7nCtJ9G/lPJ+1VT5axsONbEKK\n-utoU8CRt7OBlAUe0GbAcp7FcniKaFF2nUuhNbMjFcqZ9pddb6aWHVcaXIHwjoR8T\n-Br8ygIoODNEauc0e1xbtsXByD76pcz3yzZOFCKxtjtjsln23Drko4JA2LyLxx8WY\n-BCZcf8/8QSZJOocFOoUIHEfdljo/41kF1MF1Ra2Pr5ZHx/qNcI3U+4+uBoc1AuWS\n-5gJl6xXicLByqweSGKzAfq+SGXM+8ZdJ5KuHISMq7tfkzkmIJ7fRy+cdprXYVnhK\n-CW5EWA6+xQqpt0QGaOyRPJvQqJJvO42Eg9slHkfON1499pwaIwblWuNRs/jq5xCY\n-b21m50JmPas6o5lCcF0SFiFLEJa8spWxMrsLZGUf8KfwriDrssw0XzI74E//BFb0\n-8TLeC7daL3bsCe3FD/Nlcplz0oPKOm6Zb7fNf8mJAYEEEwEIAGsFAlWtJa0FgwWf\n-nr9eFIAAAAAAFQBAYmxvY2toYXNoQGJpdGNvaW4ub3JnMDAwMDAwMDAwMDAwMDAw\n-MDEzNjM5NmE3M2YxOTBmZDRiMjRkMmNjOWM5N2UxNDgxMjcyZWI1YjE3YzU1YzVm\n-MgAKCRB/qxFCZ+T6BHGbB/9wvhZ2rgT4vOT7HENDXF+Bv9TItBF7JQ4mehCenWme\n-23qxBLttfQp3AbwA2K2FyrshGM0fmtmpO5pcXjjHMVzlIDa1fKvbQGbhok5Y+94w\n-hswGS8O0XTU6sB3JxC4vpqdS1pryA/7g3YI+EuzYCkubNxvYnAy80Rf098xZzj2r\n-Yov2c73qg8+kb+5MS2fTjOMQhJo8N70YOew9FVOeZoeepv7SWLDI5Ya/YQ+1fFKN\n-2ovfBq/fzAD4PJbPJCz0miq1T5GL2nTXLcJmj46uV3wNvppNm/w8492de5VO0JqG\n-qlRurp6Jp2k37jqRSIIXG2wxCkND0cYftjS13pHnerPyuQENBFWpKiUBCADiSsd/\n-CmoZV2/UCqAnxm5/kxF8rW5hVYsYmfGO6lY868j5GMOVhWkrjl2CNWrFwQRqyiol\n-FNvyOro2IpOGXlM87AU3MP2/Zz+zkO3zY4ZH40t/UqcO2MPpKdkmGofCt+C6IFGS\n-Y23FqdfOLxV3aczN2aLzL2C6hHdXTcs99NGSf51iHLXn9b+hT4k2AxLPnOnnjgJL\n-eC6+s2sh4loSuvCh5FjVQfhQDLyTn93r9xvEhUMUUxBLz1Iy+e+w1elSwqNT5wEI\n-V5Iontm63lN37GrkRyX90PBtKf6VYXE1yKhNLmPBOIc1vx02og6Psu5eilzKfoK/\n-tQeYr4M/6HOcNvEnABEBAAGJAiUEGAECAA8FAlWpKiUCGwwFCQHhM4AACgkQ5dE4\n-9ec6GvJmFQ/+IoBituRcR394sVPiK7apDIPzPziVT4Qu8aBuHHREhK1Vl5C5tLZ7\n-Q6wA5Xc6O2/G+37HqKX3rqD7XBdFwcPXQa6g54uVs8l2+1UIwnFqZm8bJwubkHU7\n-U6addHacbX2itqb4EiQ82mAQqPSwx36QGLtPF2htl5z1XWj6queqjVrteAl2cbz5\n-KKGklTjReaX1jmun/3nL1yJuYRpZ0L7lF3IU17FVckCL/y3CXhdWOK1fGRfsnZWe\n-XQT+00dKhW5uRfpa8hR1/HJnaczAZnjjpRJZq8hBLamTjPypwjLf+gFAPiAJRuug\n-Bh4saYoE3ciNDzB3B7RR8oqNwxaF316vurrcKqEvnpQechFudDKYz6Pd09lFM1U2\n-MlyJ/jMwwlEvwoTlKFvgYmXOHPZoyf4Vdq+RPfRy+pDI1et9fN4wsy/Foj5hb7Yw\n-/hPOAjWElc4huCwaHIbGN+gHd+AbO6dOkWC7GgsOTGopyU0NXWfud7HB1V/NQ7o1\n-EMrEEPg3eMBMpksuNJ4TaesJ3keW+9OwIMDvsIGcRvqcAVL0R0ZkMGiYG3ITna7l\n-KRcCZwWaHmE6WJTuffBu9oyRFfSH6YbI4pFuFulxghNe3gD1AFZyWPlS/M6jw87I\n-4nBWSNoyPs1UxEGtntBkWiBJq79WAUSAeiDPVzvekQfaZxSpCrZh1cy5AQ0EVapR\n-MwEIAIpPUS3x6zTo9YoFxf2CCNho62MZfoN4ZpVQyY+NLhZ0p1XQBullafZdQjF2\n-mGPXysg7SEZflkcwBGjS6B/CJUoe+zGRL0DXrpoGrqEZzDshiOQ7lM08iloZ9X7V\n-UqhZdi7CFQCO9lAPgrFnvlTVvc7z+1L01/I+9H+w7rmnVsa4NyR/3W1zpOjAO7Wh\n-telWGTcLGYM5fWE3XnUTsWHUQnvdJ9qkDQB6emAOSzBreGmxzru1VSKIPrGsYmlW\n-Q/5Z82ihJ9uCYswUmh+hXRnAXTZTw9jQ+/hw75YuKUGjxXnMGJPMWIlBgB65h1fz\n-a6cTU1ZuS/wEEWEsiDWIob+B4qUAEQEAAYkCPgQoAQoAKAUCVd+TsSEdA0xvc3Qg\n-aW4gbWFsZnVuY3Rpb25pbmcgaGFyZHdhcmUACgkQ5dE49ec6GvIMfQ//SVwsyixG\n-w77pubV8R3LHjVqjo8CNWR2CedzT2/2xfRqjiz9juxpVSunPLTCUWhJTp8bAJzVY\n-UteZ3G1ctKuA/cnUbiAduU4CNlKrZ6AjmUysPVrsyw3kUDm8LSKKiARb0hCAFbvO\n-AO3Lm0YbpBtVYOUpWLoxpkFPx4PKRSyS+mkmFCgBV3baf6YOfPimGyEkVOhF5vZ9\n-WDjnlxPHWhjrpWOpWYPOlDMfSxsvYe4JTd/QXEqx0Ki1inNM4AnLiDf/rnyliQiQ\n-RFlHNnfo/FyqO9wvY8Hu0YLUJqee3WWTVDoYnQYSdHVM8w5JYXiUG8Cc8H2kQ79f\n-sYwIQEXPdJUCeFYnWwkltAjd95AvNDv/5/4kSBBGWUY80TH8qoxuPLekPmuvS8QE\n-TP2AeEcL8Hi5GnKbl9xb3bu/cuauLp1D23qC3HMoigFEgUPQ3egB7Z66PVWo+ko9\n-+niqujCFBZBmkS23fvp4EgejYkvvhH9NcWDXWhnIaghLq6ngrj+zHDTTb5dCp9aM\n-JKOyKZIjEtT+AOi8g7yQ7bDyI0eJxOhKamBcVYHcvUU3DMsRSao8cEE6ee/G9564\n-sQ15Ma7W+wqee8SbaND84A2tAQcFtd7kvRn8C3Ac/bHuL5UIihNruTzOsfIHlXmE\n-jqjNA37tatNGoAK6//UHCzX6rLZSBUJtsDWJA0QEGAECAA8FAlWqUTMCGwIFCQHh\n-M4ABKQkQ5dE49ec6GvLAXSAEGQECAAYFAlWqUTMACgkQ3qOE7dYp+kBF2AgAiI8O\n-mFVfhCSJl7ofMMO2g92JfeWevQsn+GITexaYs/FEBb4NmWAyItJ1mL0jCVOhRXwj\n-AcKbKiWhuco17EdXi3xvu5FrfsN/lOmmyhkKyHSR+LS2XPb+xG5JJrafS7m2nxMx\n-4m0yH6tUcsBnqBPFFZ+w+Fxtg8ngUbo9B/gaXr7mvHwir0P2LYpcqlwpD0Zxmu1W\n-HpKT/DQa09Zjr5l9WDGtF6U6ZuSH8sdh/tD///x7AJ6eoiYadcy3YWRLFKKpfMSI\n-tSDhOlWBFFNRwrsZRXCrETYoJNWb/kvcHOaWNzPWcePjQ5RdOkQwnidUd1iy/Uqr\n-2+cT9WWfkHAND4uHlP1wD/sF+nQWOoWcQLFqTx9qt9h7tbgNAzXfEec7fwQ+NMwS\n-bKocjb5OOdzInEMDufusOWgKBfJtPQSMUe+W2orxBWtJb7WY9Xeshjs4q42GooPz\n-e9AN5B2M1V+wmSYEMyhHSTldjj/ZUWBmzZGH7skPHFUwFB633NOA97Mrt/F1RhiO\n-kw1TTn61x1op+wF919DnKdXaFiFX02XzqjJgnuUoGN/72cnfRzIkSaq9b9uX/dQK\n-z2Uk19ENQ3ipmAqBnzOzz+kjSqh8PdHgTGSyy8Ump8+dfhXjC98wVwP6YEn7tOv0\n-iaRzOiKd2kkCvSYexiqWYtKLU8icUFmvd6SROkcAHhPr1+oPS7LJpYDuES17iN3X\n-YaYHGGyvNsh1RseJvE7saosVGQwM539W61JUS9A3TP5jaL8ka8Q5AiXyIee+CD5h\n-2wFQnvdnmnc4QVkdVdrpNRBZyGySgyrO9E+iogfMSfcdDApgiETUOuMTvuCZSPhQ\n-YZ3+rddfgyDXYN3y5oW7Piro19r6R0D7DcGSstk1+1mEjJbb7s5Gc7oGq+EgLm0K\n-VYKa4Ky12osPCHFAoYLHe2upSHFhtgPgfzHKE8Uo5hnAVmx9jAi2XxBi4y5ezPPD\n-C0cCKsRTVrbvNavTSMYdfcxWuB4vlrMZIsvV0RcyP9jPXZm3XPrMik8xRbLR9AzR\n-C7kBDQRVqlGOAQgArkX9q/xZbvceeW0vzxI1UfbZnVoO3E+lL8W40RtBoF7R/7bD\n-68/dNYa1/geUc1jVyrycdp5RkTfnHnIHDt1WZfi6Ywdw9val+BpT/X9ZkxEXgYxO\n-tzMq0zO+ipeLgiqBRck7kgsOEgv+zaqMFXXrH+Zbsg1QbDEug61iCoKzpR8b2+5Z\n-QHxklnGd1RbiMWpioTmacOQE9yTfWvastJXIvZoZ8gdaLR8hA5o/ePP+GcSgntAd\n-NlMYTqqNujAymBJvMAu+ybyFRKN/L/X+IX2elhJWM1x4d1OjM/4sk31g6pucWRcd\n-vimPWouDIWVh+sh1g/IRsO295QKzXUCDELc/QQARAQABiQI4BCgBCgAiBQJV35N0\n-Gx0Da2V5IGxvc3QgaW4gZmF1bHR5IGRvbmdsZQAKCRDl0Tj15zoa8lAJD/93voL9\n-dqZ9IViyULsWsEkQDD20HQ+mxbuJcAE526If/x9JIMR1JcuE/C7pAtNjg5VBCOeB\n-sk0JC+Z7M80ivU1xov+rmjRvVNAX22/rBLpCTmUe0gzIBnWG5+O2/sccutigvvQE\n-O1rqLTEp0dzLoYbVAwJedELZnmK04Y8uXXQ1XSHXJOJmvEBpbDF0U3FXl7Sw4C+u\n-hI8IR6l2D/BYKIZgNIkh4ppFa6RJY0DtEWR94POZYBjjjToeCTRBG9IxudDy1jm4\n-k6bF/ByOecN4B3HRcBXUM1yJEmOZlPSZu2v7XvFp2VnFJfN2UjmtpYsKamV/xUsw\n-DE0voGp15TOfb+6QzfnLSI7vXcm1CfkBS++lYKcYcJ9Kj90ZPjtKy25vKcBvG68o\n-nYgS0Jnzm6j2yE2KBc90CWS1Txgu1Rd5ZrP8pM1ZK20/dq9CjtPLE94WFIc77k0R\n-3z8DJPG8I8M2RJ1XoqENrBvG5U0B+eeGA7mY8QSRH0COhslJ7j0WjOyO8xBSGTCq\n-QKGppFmDLs440cCVUOpnPz1kYG3YFgdCsFxOQ1GBJuHFLUdA1BEbb/nG4C4+y3Ek\n-Bihhu+3ZRoaBgE7ZmVOMEV7xdslPNssiTh+CxIUtugY2mhGnANvEcWrqTgG9+EHf\n-ax2avHR4CQMn7onZAPt2sOMoPkE8R3H3Knlta4kCJQQYAQIADwUCVapRjgIbIAUJ\n-AeEzgAAKCRDl0Tj15zoa8rK4EACFfSUffkm80uzBxFDbo3+fWf2k5hnjXheZxE5w\n-gpT4Z6QGH70GjR+rbH5a6fMM4hkmqNRYWLf6n8RTYNvCLxopVg2l1QbHYFbA+pAB\n-0tM7HOng8iyvc+uUJ4hTicpePm66A4uc1/z+mr5mcLTQS6Nfix2j3hduzzCVIbuF\n-/3UUxS9hFAXOu1F1Oz6auFkeQ8R/w/49yXrq/MYYSUsWtOR66Yu4664TJKBkZGlw\n-CiGPYmpeE7To7LqdhAop+ZnZnc5agSnB9QZw1HVbMY0nwbPuiJx+6mmbh7Gf/OHu\n-2pHSAStvFUGA6ngbYVH2LlRC2XgAA/yFAy1FNFegxTXO+3DI9ykj/3WBmjbNZMIA\n-mhcvPPwwJCNdxbZJbCcot82FBGPpwmsiZJWynD4m4+aGErp/pZmKjfMwP5NAgOQd\n-77XaRlJTvW4GqAdmT0ib7tCqGwFAx5o80SszhgRCUqu8oLGAUlTfMoRgmFNRznP9\n-7xptwjNSl19YrlXdgbhOvVvNO0/J6uXnRc3v9yfaa8J7xU6GvuR5smejYNLUxccl\n-N1UmouS3Vol5z6hOmqnembN/zC3THOHqmJ1G6SdiCcn5dG5Tc+jmBKLRAnoIimWT\n-dO/UoWhm2EB40Hlj6HRFXure47oD9x28d48E0+HI9Jzlh4Wuu6kkr+ugOpdC0TbN\n-H/+RObkBDQRV35PpAQgAo1+V52e+8VFsDKyceNNEVE8NdUiPRKBZuVfCSP8nqNCj\n-hYf4lY/iygHCNZDtKaBs6BUCj0Ev1CLm+Uxvdl1trEr1FGz8E1kdUsh0LocKJgjh\n-wbuDrxM/6LNBxYTR9fEIGx+ka8o9OMLqWav+QjZtDC/nTWaJkXxvcgZPhadCmkkz\n-P0g/vnJVYbvDBBmxI9ofkxZIrwNR2Y8VO2oLVP0MpCA06cuUQWym/gQ2uqBToGqr\n-M/gc+vq0XQyFrNmH/iP8MuASrOoQfGhvZDg/x8rcFRs37itZWpUfP3pZ5zWztX3G\n-TBtc1EktSjs8fU828lPxtG80r4RB2sWVDJfoqhi7XQARAQABiQNEBBgBCgAPBQJV\n-35PpAhsCBQkB4TOAASkJEOXROPXnOhrywF0gBBkBCgAGBQJV35PpAAoJEPxkNPw6\n-MelWLCsH/R69Q2jgT2+sHVWbDsmNjTOkJIteKbz0uW8/vBJqZ2VEwKozGruCTkNI\n-orYKj52ZRcxKiAijN2XGw1TEccP0s5Trap1Z+xgjDDLByLswoVBUzAjbq77hedT+\n-ZUuQFKnm0Cc+PzB/Nz96I8AV4AxYc7RW4keGtvEv7qgdIlb6fbPpFB7Z5W573OZ7\n-G72B/T6QL43HRaN+ZbjwRJaY66tYKSl0Vd0WrO2p5xVdbTarVFn6q/A0IYEafVKY\n-QaRTh+VQbN7vNZCn1Gi6fvnjtWRsj0vMkafdAzVYqF42P+cf6iHrglE6DwR5AsaS\n-O9G+8kLpkXFRjDQJBaijWdBtaeOulCxTog/7BZwo1kpTC3ZCTxr/SHJDc1Nsxt8K\n-xnMCPxFSrHRJb/fUQDjhLv6lXXAm5SCBdFzAc9oDKUbcuGSEz2nZQjL1OADn9rVo\n-j/Y6wJ+okOCOs9AI1H+VW/rz5Z7wxvw3YOVa+dnYdV0w7FklCn+xFdZLj8Z5WjcZ\n-zoyqGlVAFGOZ4MbO+fz/+8f0Y7K/bW7E6smhnomTy2ZOk64eiO12d8quHTHMi7Xh\n-mmVYDiNn1gW9IxZwt/Ga9AvZbIAYhL2m/xBbdfMKAG7Ttjzd3Ac+8wrGm3lOesBD\n-AJUtBmURu8b1Eyj72IQcV0AJM8gvc1B0H345oX6VBgkBB0bf3nuUVftv6r529jTr\n-Jix6yrs4uf25tefzcFuqqE1s1r+pSZFIDpaNsP+jjMgYj/zn4dLOZaq4V3SHvnsU\n-v8KOUC2/qNH9U0KC6bh4mw0fVsHzhkaOjOM7SF1Doc8Lz4vZuk4BpumHpkHEG90x\n-CLg2k/R9iIDQfcGtKY++1/GitjXakPuKrJctZ1SJuW1KWyzFeF4qvuowmLGMFRVi\n-+CG5JJSLCUr+cPXa8NbjZv9BwSHqWbn3grr7ZE/j6SFNhuLmByeePPNKRt0cae6a\n-3TQkQFh/yvSIkB5BrB1n2x+xNoWMME+GR0zYQCOncCe8W+a5BZ1mTiVGacHgVqSN\n-eEaG0RH54+pi4gw=\n-=fFMC\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "559295109d9646f4baa3f2d7c1eb374333899fd9",
        "filename": "contrib/gitian-downloader/laanwj-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/gitian-downloader/laanwj-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/gitian-downloader/laanwj-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/laanwj-key.pgp?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,28 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: SKS 1.1.0\n-\n-mQENBE5UtMEBCADOUz2i9l/D8xYINCmfUDnxi+DXvX5LmZ39ZdvsoE+ugO0SRRGdIHEFO2is\n-0xezX50wXu9aneb+tEqM0BuiLo6VxaXpxrkxHpr6c4jf37SkE/H0qsi/txEUp7337y3+4HMG\n-lUjiuh802I72p1qusjsKBnmnnR0rwNouTcoDmGUDh7jpKCtzFv+2TR2dRthJn7vmmjq3+bG6\n-PYfqoFY1yHrAGT1lrDBULZsQ/NBLI2+J4oo2LYv3GCq8GNnzrovqvTvui50VSROhLrOe58o2\n-shE+sjQShAy5wYkPt1R1fQnpfx+5vf+TPnkxVwRb3h5GhCp0YL8XC/BXsd5vM4KlVH2rABEB\n-AAG0K1dsYWRpbWlyIEouIHZhbiBkZXIgTGFhbiA8bGFhbndqQGdtYWlsLmNvbT6JATgEEwEC\n-ACIFAk5UtMECGwMGCwkIBwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJEHSBCwEjRsmmy6YIAK09\n-buNXyYQrJBsX16sXxEhx5QPKyF3uHJDFJv66SdnpvIkNoznsaPiRJkbTANop93FZmaGa6wVn\n-zGDiz7jPA8Dpxx5aAYPhIT+zPJAdXWM3wJ/Gio9besRNzniai8Lwi5MZ9R/5yFGBobm6/AcN\n-4sUoqA3NSV2U3I29R0Vwlzo8GVtmyi9ENSi6Oo7AcXNTRt69cxW4nAHkB+amwwDJlcAb31ex\n-bogYXPhScwqQZixRr+JBkKxBjkTXXnQypT4KI5SegYwQVYfyiZmDP7UHKe/u6pSKKbVphLg8\n-xLB5spcXse8/a2+onrbNlw6y8TXiJ++Z54PE7zztWTXf2huakeG5AQ0ETlS0wQEIAMNO3OkP\n-xoPRKWzBLcI7JRITAW+HNaLTq3uN2+4WxA57DEjbL9EDoAv+7wTkDAL40f0T+xiu6GJcLFjw\n-GJZu/tYu7+mErHjrdo+K4suCQt7w5EXCBvOLjhW4tyYMzNx8hP+oqzOW9iEC+6VV91+DYeqt\n-EkJuyVXOI4vzBlTw8uGow8aMMsCq8XVvKUZFTPsjGl197Q5B3A+ZOFCR8xqiqdPjuz6MglVV\n-oFdDNu3EZn8zkGsQlovXoE9ndVeVzx/XMNmsxFaMYsReUs253RIf1FEfgExID0fg2OnyLCjS\n-2iFW1RgajS+/saIkKl+N1iuMzJA7wMAM0plhRueOG0MtZSsAEQEAAYkBHwQYAQIACQUCTlS0\n-wQIbDAAKCRB0gQsBI0bJpmsDB/4waenn2CvSHXyomykfpwf5lMte1V5LvH3z5R2LY+1NopRv\n-LSz3iC39x69XWiTbhywDfgafnGPW4pWBOff2/bu5/A6z1Hnan1vyrRRD/hx1uMJ7S6q+bIvZ\n-iVIg1p0jH6tdIIhwX3cydhdRZHo7e9oSMgOUWsr6Ar59NRo9CENwGPE4U61HXfOnxWdrFWoA\n-XdwZczBeLxmUy6Vo6sKqv+gE4bqrtAM0sY/MsQ9cU95x+52ox/sq44lQMwd3ZBYUP7B1qbHI\n-hZSZuch6MLi5scLPeau0ZvCaljiaMeivP5+x0gWPRs0kI+9sZxInbqvrsJ6oOBJM3xYGhtn1\n-zZ7qmZR7\n-=si/k\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "c0048d336e5e365da5d91f9a47db453d9614922d",
        "filename": "contrib/gitian-downloader/linux-download-config",
        "status": "removed",
        "additions": 0,
        "deletions": 45,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/gitian-downloader/linux-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/gitian-downloader/linux-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/linux-download-config?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,45 +0,0 @@\n---- \n-name: bitcoin\n-urls:\n-- http://bitcoin.org/bitcoin-latest-linux-gitian.zip\n-rss:\n-- url: \n-  xpath: //item/link/text()\n-  pattern: bitcoin-\\d+.\\d+.\\d+-linux-gitian.zip\n-signers:\n-  0A82509767C7D4A5D14DA2301AE1D35043E08E54:\n-    name: BlueMatt\n-    key: bluematt\n-  BF6273FAEF7CC0BA1F562E50989F6B3048A116B5:\n-    name: Devrandom\n-    key: devrandom\n-  E463A93F5F3117EEDE6C7316BD02942421F4889F:\n-    name: Luke-Jr\n-    key: luke-jr\n-  D762373D24904A3E42F33B08B9A408E71DAAC974:\n-    name: \"Pieter Wuille\"\n-    key: sipa\n-  77E72E69DA7EE0A148C06B21B34821D4944DE5F7:\n-    name: tcatm\n-    key: tcatm\n-  01CDF4627A3B88AAE4A571C87588242FBE38D3A8:\n-    name: \"Gavin Andresen\"\n-    key: gavinandresen\n-  71A3B16735405025D447E8F274810B012346C9A6:\n-    name: \"Wladimir J. van der Laan\"\n-    key: laanwj\n-  AEC1884398647C47413C1C3FB1179EB7347DC10D:\n-    name: \"Warren Togami\"\n-    key: wtogami\n-  9692B91BBF0E8D34DFD33B1882C5C009628ECF0C:\n-    name: michagogo\n-    key: michagogo\n-  E944AE667CF960B1004BC32FCA662BE18B877A60:\n-    name: \"Andreas Schildbach\"\n-    key: aschildbach\n-  C060A6635913D98A3587D7DB1C2491FFEB0EF770:\n-    name: \"Cory Fields\"\n-    key: \"cfields\"\n-  37EC7D7B0A217CDB4B4E007E7FAB114267E4FA04:\n-    name: \"Peter Todd\"\n-    key: \"petertodd\""
      },
      {
        "sha": "4406e6d5be02c1e9006c6ecccc1e4c7c0dbad60c",
        "filename": "contrib/gitian-downloader/luke-jr-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/gitian-downloader/luke-jr-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/gitian-downloader/luke-jr-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/luke-jr-key.pgp?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "0ad3bdd4f3e3faf0e8c20fa5259bf3660a395782",
        "filename": "contrib/gitian-downloader/win32-download-config",
        "status": "removed",
        "additions": 0,
        "deletions": 45,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/gitian-downloader/win32-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/gitian-downloader/win32-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/win32-download-config?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,45 +0,0 @@\n---- \n-name: bitcoin\n-urls:\n-- http://bitcoin.org/bitcoin-latest-win32-gitian.zip\n-rss:\n-- url: \n-  xpath: //item/link/text()\n-  pattern: bitcoin-\\d+.\\d+.\\d+-win32-gitian.zip\n-signers:\n-  0A82509767C7D4A5D14DA2301AE1D35043E08E54:\n-    name: BlueMatt\n-    key: bluematt\n-  BF6273FAEF7CC0BA1F562E50989F6B3048A116B5:\n-    name: Devrandom\n-    key: devrandom\n-  E463A93F5F3117EEDE6C7316BD02942421F4889F:\n-    name: Luke-Jr\n-    key: luke-jr\n-  D762373D24904A3E42F33B08B9A408E71DAAC974:\n-    name: \"Pieter Wuille\"\n-    key: sipa\n-  77E72E69DA7EE0A148C06B21B34821D4944DE5F7:\n-    name: tcatm\n-    key: tcatm\n-  01CDF4627A3B88AAE4A571C87588242FBE38D3A8:\n-    name: \"Gavin Andresen\"\n-    key: gavinandresen\n-  71A3B16735405025D447E8F274810B012346C9A6:\n-    name: \"Wladimir J. van der Laan\"\n-    key: laanwj\n-  AEC1884398647C47413C1C3FB1179EB7347DC10D:\n-    name: \"Warren Togami\"\n-    key: wtogami\n-  9692B91BBF0E8D34DFD33B1882C5C009628ECF0C:\n-    name: michagogo\n-    key: michagogo\n-  E944AE667CF960B1004BC32FCA662BE18B877A60:\n-    name: \"Andreas Schildbach\"\n-    key: aschildbach\n-  C060A6635913D98A3587D7DB1C2491FFEB0EF770:\n-    name: \"Cory Fields\"\n-    key: \"cfields\"\n-  37EC7D7B0A217CDB4B4E007E7FAB114267E4FA04:\n-    name: \"Peter Todd\"\n-    key: \"petertodd\""
      },
      {
        "sha": "4b0b7a261579c9c0bc8e20af373a1060c5981977",
        "filename": "contrib/gitian-keys/README.md",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/README.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,16 @@\n+PGP keys\n+========\n+\n+This folder contains the public keys of developers and active contributors.\n+\n+The keys are mainly used to sign git commits or the build results of Gitian\n+builds.\n+\n+You can import the keys into gpg as follows. Also, make sure to fetch the\n+latest version from the key server to see if any key was revoked in the\n+meantime.\n+\n+```sh\n+gpg --import ./*.pgp\n+gpg --refresh-keys\n+```"
      },
      {
        "sha": "030fd5cf3cd389976b9d07e6e48bb8d3524442fe",
        "filename": "contrib/gitian-keys/achow101-key.pgp",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/achow101-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/achow101-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/achow101-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,52 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1\n+\n+mQINBFT4snkBEACx90Wf5XLo1Xv09p81eaOXc+8bbkSYzqx3ThDNUPRzjYpex9A9\n+8FxfBenAykD3EgYuBTco4cbn7Dw11ppyXUw0VjWaagnnAVGxt3SDeY3ADwPss6xg\n+78FZXxT06xSHZXq1X6pOqhwTAnx3VGx+tR/A2DCsX0vHE6IVThZqyUq2Ei2C0Chc\n+od8y6JZ1CGNzlRkEgL9A0Zp0If6Uq4tXFxnLL6PtiS1b9V5rNfCSC7l99kIkG5oy\n++SPsGRwVqTE2kqtuzkt9qVn6v8KKoZr0BY4IO3KMfJJ4eidOkB+OZK9REEQguDvv\n+tJfkF2HcMYa1efvQObyvVIfS5gxs7+kcSJxgDVZI5YxRV1OOfI7+w3EW3G+bPBQF\n+gSBwEaLbD+udr9lDZ4NZc7vTeoZtYVNZ+EQtG+6I9GzxJwEgO5LIwZ3//vh/R4iy\n+z9W91r7TrlkHUuOGg1hXMCI9sRa65NJtP4BWD0xO07zDKj0JHzeyKwgxB/ixZF2V\n+kc8EzJSKzRfr+638BMXONcf6NW8n6qIlJT2U2qIwiixjM8AUujGKb8DEgU1vIAn9\n+7esOhceOtU/6iLuJrlK+TzMe97NoZCtt6ktmiAp8fu6l9uk3mr8JYLzIMtK+Asf4\n+np5YLizABwbt9gEretnGpHrdKMN88mPYwsLjjCh9wiM0bHZNL52JQRkt3QARAQAB\n+tDNBbmRyZXcgQ2hvdyAoT2ZmaWNpYWwgTmV3IEtleSkgPGFjaG93MTAxQGdtYWls\n+LmNvbT6JAjYEEwEKACAFAlT4snkCGwMFCwkIBwMFFQoJCAsEFgIBAAIeAQIXgAAK\n+CRAXVlcy4I5eQfyGD/9idtVjybuXl+LXS4ph4M738PrZfQeLDmnwhVjfZiEOLLs2\n+sAwGtL/CC0t9f7K7y+n5HtQoMX52jfVehnTDzeKCjRMs+5ssou+L9zadIAz68beU\n+7BZ0J1rR3n1kzwsFE3vx3IRno0VCTOgfL48AuuzMPxvEaLMxWQX8mL0PCV5/8Yxx\n+ftqg4kQ1JKMt5UTxE9/w0cBMphLTwV1Rx6lZILPJgOxYSQ0oOzQYSmucwzH1uOqH\n+wpgZ7SZIHfRWyi4TjQpU/5T2kMOlN/XdyWsj5+Eq+Y6zI6hq2se1vU3TOc8xN2S3\n+7YOza1onUj4if0rWtkJZ2yDnR4lIASUD+/VP2NoWtoy7rB0vIfzbojfwxAp8WuHT\n+sUTxXd52c3OB+673OlOA+GAg2FfFjR8REojsTbeip35/KmFMpafazVRn+E0c3MfP\n+/iS43UTlcxewRcDrx/gRplmgO0+CLgLstZOon7Dz0msypeSArhX2xEj4tJb/ccKd\n+CR/IQl8q/ULQsHX1LwRj0u9doAlkqgIQdKXou4+EmD1jKF92oJMZ+20AJCqfwYQY\n+9HlCB9SQeCRUtU/fHkAZLPApze6C7a1r0LVIuM6iolWyha5KJ++mj84fAagwy/ag\n+8TU8kHTLSGPYeg5G/TAbr1XU5kbbqfWfQFMK1xtdZd1BaGP2cDC2QGkr2ot1SLkC\n+DQRU+LJ5ARAArDftuFPE+ZhgJRuJK163fsD15aHPfv5s+h8kPFv0AuwVs+D75w3y\n+YGfaRtlwSvK+8EucKOoHI1AQYjTG0dtKJuwEGhQ2qsTWUKe05tEAWu0eN62MOZ/r\n+Awjxqotj4TeFksfyKedVAYSizD0Xj16fizeWFrfUBNND4OgUgD8KM79oRchtzKBE\n+HRBP27JksU8tQWc4YcEJUHV66Pji5OCiXxHXJ+JpqKSKeCrVvrvro+pwsY1I3ARA\n+F4UmLxCcb4GnNq+s76cb2K7XJtWJu5FHeHOsef5ped43pYs35UXI+EvOYNs39XI4\n+emMsI0KmuLME2LHO3CJNBirwRFxui27axZk/CSVE1lglnbb25n3QHvbs/31ASCCT\n+QKZ7+Gce89iow6yG4MkN5W4hLdkGAyNI74b6yAUfugSqPLNSj3YHvVFY3y1acge+\n+H7xDO/owRN1kbz+9VMJZxsxB/oZEyEVAE0szHxXbMBhqOME0Y3O6UBrXr7z6R8NG\n+S20RPet4kxCCTLZOvM/X5FtvimgR2u5qRPHs+zf2VPXIRsJsM3zq9EvmePryGM3r\n+1rEAvYagukuyt68lOWgKP/2wB0/NIFAs69b1QSJS3U4CQVIs2h84Ucvbh9gX9Y0B\n+LbV5mxvDDfC/4Nhf4yMfH/CwZDLOUsaRAjCv/lQuN9mnMz9aYnsPha0AEQEAAYkC\n+HwQYAQoACQUCVPiyeQIbDAAKCRAXVlcy4I5eQec+EACi14L8Vp7tw3tDm/Lrb9fM\n+LHfoOnZiDCGaXhiXqckbTSogp7hU82m1fIy4VwY7DWbs1iIq7QdDJMBuNn174Qd3\n+ZPxHeGwBbR04gEsHkbjXBAA5hMacLvmxYFiPlibz+AO4orUiYu/vlEXhXoFCjSlB\n+pw0kUG8W8yQ/RyE7ryLv5/bT4LkwUWF7/+gdDzLUy1VeaPDKmBupKVSbEACe4QRH\n+dUUqE3suKoJ/GylO2sGtFW8BM7+CffX+nvc8hJWzXdYW5InSh0omYJIypIgnQ1gM\n+MhUdu4gbtYwo44Tlax2mTSg8vSVboYO6pBZVX3IEUnjRHLOCZVZIBFXIFdRrHXO8\n+TTkzx9ZoDmZ/DH+Md1NDnS4QsvFbRO/EeDRQAI4cgGhCc4CTrrJSQv8jtl7x8OTx\n+fnDUbE/n8pLV93j9t1Gd07h0VJSmYj3AR7PiefHS7s2yxS9oOqRayGBqrJFzd2gS\n++oXvUBC6pUvM68NgNVCKH7HmIM9tFbqgy8kofTsVDkq9TEJRO+X4hn7UDNJhTjVE\n+AVRUdku6CJR6wj3RPCbERSNB8uabuv1lgo41baeepLn+tJNO/4hilJ0zvEoryVnJ\n+ldZ73mHRRRtXoPRXq7OKuDn10AvtYX8y3/q5z6XhLUePFKM91PO8GF0J6bNWrQSq\n+Khvd4+XHE/ecjLOPvLweAg==\n+=+hz7\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "df06e19fa4b109286dbbb7596c86d31fe0f1052f",
        "filename": "contrib/gitian-keys/aschildbach-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/aschildbach-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/aschildbach-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/aschildbach-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "previous_filename": "contrib/gitian-downloader/aschildbach-key.pgp"
      },
      {
        "sha": "2389d4657fb7f5f225f5d76e08841fd6e21d4be9",
        "filename": "contrib/gitian-keys/bluematt-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/bluematt-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/bluematt-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/bluematt-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "previous_filename": "contrib/gitian-downloader/bluematt-key.pgp"
      },
      {
        "sha": "f00dc729d57a2e7b7848324177c605dac9dc8e45",
        "filename": "contrib/gitian-keys/btcdrak-key.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/btcdrak-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/btcdrak-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/btcdrak-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "928a74b3155da22877d1b6ad32fa2a7cb745e0ba",
        "filename": "contrib/gitian-keys/cdecker-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/cdecker-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/cdecker-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/cdecker-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "previous_filename": "contrib/gitian-downloader/cdecker-key.pgp"
      },
      {
        "sha": "71a42e514881bc6383531ea2c82c93998453245e",
        "filename": "contrib/gitian-keys/centaur1-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/centaur1-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/centaur1-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/centaur1-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "previous_filename": "contrib/gitian-downloader/centaur1-key.pgp"
      },
      {
        "sha": "6b0bd240ba4cf8df485a8caa689717a12ef6b3c8",
        "filename": "contrib/gitian-keys/cfields-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/cfields-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/cfields-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/cfields-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "previous_filename": "contrib/gitian-downloader/cfields-key.pgp"
      },
      {
        "sha": "71898127ba0d6c9976ab7225d8c71ffc6380b0a2",
        "filename": "contrib/gitian-keys/devrandom-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/devrandom-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/devrandom-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/devrandom-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "previous_filename": "contrib/gitian-downloader/devrandom-key.pgp"
      },
      {
        "sha": "9d3f060627ee9cb4143e3b8945a261e90c39ba13",
        "filename": "contrib/gitian-keys/erkmos.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/erkmos.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/erkmos.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/erkmos.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "previous_filename": "contrib/gitian-downloader/erkmos.pgp"
      },
      {
        "sha": "9c03ff45226c5629d24e5f9925da7210df0760a5",
        "filename": "contrib/gitian-keys/fanquake-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/fanquake-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/fanquake-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/fanquake-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "previous_filename": "contrib/gitian-downloader/fanquake-key.pgp"
      },
      {
        "sha": "f81f44e874707837c13446858db2fed14ad5c501",
        "filename": "contrib/gitian-keys/gavinandresen-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/gavinandresen-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/gavinandresen-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/gavinandresen-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "previous_filename": "contrib/gitian-downloader/gavinandresen-key.pgp"
      },
      {
        "sha": "b8aad7fd88b42770c4aaab3ca97a115694bcb9c7",
        "filename": "contrib/gitian-keys/jl2012-key.pgp",
        "status": "added",
        "additions": 105,
        "deletions": 0,
        "changes": 105,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/jl2012-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/jl2012-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/jl2012-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,105 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Comment: GPGTools - https://gpgtools.org\n+\n+mQINBFYhRd0BEAC+2VU+8+f9RTPLtl0C815oxaOCA9Tle13xNER8NjFrVwIuFQ64\n+nO8Fbhd5KEEARuMS/lc5G6IV0QxBpDGE1sEjPQXrA6UnX8SDkNGhmoAsV07MP2Xl\n+glN9qqYUEoVD7ueh7Cp3A9rFjg7wcMJCPQDP6lZY4cPgYlE1C31TCrEdAsVVTQg+\n+xIYWnhB92VxOJhk0N0h6xtCQ2MOtYDjYcBndQ5iK7L5jy5LI89YVRfbKtWqWZdwR\n+lgj2JCLeXKauXBI1qbedCJrz5e8nXcdqZt9TXSHo/XhNlqvsLiqBq4aXNU3xRkrv\n+fcweZ9jR9DjyQzefYFGaiCk37R4qLbaqQRm0luUizkCegIuTv44e/zig0im8yPAI\n+WtGnmBPSy4MpvvWiVVb+jHikdQG1T7g9kF6gEmj4kj9UseWnasiq+kkSNE67vLxb\n+uZDfA3QhavRMJbCNEY49/IX6urIsiCLFbe6C7JVWvJ7d5l3MAHE8Sut+ytjX7z7O\n+LFt7YD6loxGAdopEUZm50xs8PswKDajlzWGFXjDZdzQA1tb2CpHUtDkAInYDutR4\n+qA29qtxaBswozzUYiDptGSkBqD1Nus7UAJYkwe2EjeszNPhmIAQXGWx2yWplPOJk\n+ZWDuhQtrDXZikl70q0ekIJ7bxkpMO8xUuhsBCS3Wn6GAtySy0XTttmItfQARAQAB\n+tBZqbDIwMTIgPGpsMjAxMkB4YnQuaGs+iQI3BBMBCgAhBQJWIUXdAhsBBQsJCAcD\n+BRUKCQgLBRYCAwEAAh4BAheAAAoJEMUkKhqzk2UXsbIQAJnXDjhEoKSILJRrKbg+\n+MXP3Rhxc/ThXu5C8yhfYqKblqCaNNfEmrlercJKJVMvjY0tVTXYo8BEJmNN7nSNI\n+su8NheJ9vXacN3XrgkMPuFiUyKj9PGpSsM6Q8MjT0Bzd0pxodk+g0UEjyMktfu/3\n+TqLsnoFPOtIjMOkr/uBzZn5d0AXIZQbAz4Xa2zBW+uR3OSXRRXCRJjCSWGIfDX0Y\n+i/Ea+3Be+y9bMqDa3nPULEkW7+RNuyjLr6QwPZ0/BpTTDcM6Vic2daFPO5B0+o3z\n+PMFmPcEd4nRHTPM9A5SaJtC8MjF/89mjhpxG3v8RqkqCdqdM2cezi/T4YD4jcynE\n+F36Ya3GuuewxEZci/N5ySG5gG8Y+80Wgc1e+sNtvIffHk3Wju2kOvNcBA2TBw36V\n+XCJXHROTA5+Cx4lUxOkQTJoYSVzx852WS6WHeLg1+XnDZvT7ciVIV0ExJQ9C1XOM\n+wjFMRsTWl+vflxmgCeHCIari57Jw3ij7ghRCgeqLp7FIXK5qSI4Tw2eajJpoTKPs\n+wlaO6kvOXtaCDH30FuVhKbPxII01Xi/A2ALtTkpA6mfnf19orQjv+HxX/iwUlpHM\n+UwsuhpZSQYIxIv/BOQnXDfw4TcjnHsqXZbqNzzFEjGurMTlOUX4KeTPscdOLUpnO\n+1FM4JIVybHHfhCH9Mpq+MIwCiQGBBBMBCABrBQJWpym9BYMJZgGAXhSAAAAAABUA\n+QGJsb2NraGFzaEBiaXRjb2luLm9yZzAwMDAwMDAwMDAwMDAwMDAwNWJiZWZkNGM3\n+Mzk5OTE0OGRmZDQ1MjA5ZjA2MTUwMTljMTNjMGVjOWUwYmQ4MzUACgkQf6sRQmfk\n++gQcZAgApPqnaIIE8Q5sruzua50RFRmmBtQys8sM95ciWYE4QaTXUnlhHl4QR4z/\n+TQTRSBqXpdHQ9HBWrhFb6E0ykDEVx9zdEt0fvtlhHx1ItrZetfiA4PwidnyoDKs/\n+/nt01RGreKSMDGInaQVEQxvEW+A0fwvcCdE8Mh3LcIydohfqUViB0c5zb7rUmize\n++2Kt4Uth9T+ooo+UE87pHSJcxlcPOv6Dc7KeoUicD8DwWdsT7oxAMk9jj/ut4UNx\n+xOEp9Sa3sFN20tHMqyOZwnl22Py0y4ayJnceawpuka/bx7samg/2uUrO+dNKXObN\n+trebP83+8UFHOo7VGhesuawgwNjWW7kBjQRWIUbHAQwAy6re/3ur/fgNfE9yKivp\n+Bqmjq0eU5l3iT59hvKr7S+6GHUa+YvE9BBsawDSI4UILNQX0YGT1LRa20mC1okBX\n+5SIEpWzoZhybTMVMwS2ZHkUyO6VBAieUVojP3XQHFcDAiBvW7RRhJ2BU+v9DGo88\n+HAYqKEB85P/i/E/a1xUfTWiiIhA8Dd/Hv6pzIG5QvN8XfrMIayLwpOV1G6KvBIJb\n+zyUVUvLyQySiZOyDczrAxzYq7b1qv8xwHDUzyUl6skPqbex1cFWIeiML9EY4DnZ9\n+l3qb31Bhp+EHydv0esclM5XKQriSg/hsnJOLlCS45z/YhqGOCoD8QxXUJ71NhD/H\n+QR/AvGyTDcPr1/U1DJ0lG778wCOEe1Nad0G/8rcpHSY66RZR/Wf318S7uJt0mUw2\n+JMt1BRxfbdgJaleUAqYjNQAMDb8LfPO6jhQnmf0nN99dpdzkwV/drVRcLDEnupDr\n+keBsokcuohzE0gbjUT4cNc0DuUsIELMTApG8KQCgzJy/ABEBAAGJA8QEGAEKAA8C\n+GwIFAlbi67wFCQGu8u4BqcDdIAQZAQoABgUCViFGxwAKCRDunlUgNL4k0qceC/91\n+2ocEDwiu9kpBGCW0HD+VSyMVjLWMiClk+jPngvNEt63ZkYqRiy7fwnPuJrLFlaL0\n+E0JLIweihC5AyPSJT1Q0LnOwbqCHn1s+9RfIodG/v6M48Ez4GffOtmYwW9KqogK7\n+4FwdIx/wOIYDeh4rT7LRaWBNcIXO8J1+v/83u+Vx6TWKZTiZKQMEV8VOJWfSmTCE\n+6HVgUYvLCPB6DI+X4aVead1kayKOSuXlG/l94B5RHlJB/xQXZd1INyrZetTZxYzZ\n+CBhIWaZ/ji5vqFot0xVNYplRkbg1Mc96X+hwee8eiB/ySSWxUV/DDkA5ZzuE8n8R\n+EEjzqazjMNe50P7XKVg/eBE+TpgCDlqv69dqnOF326m6T3+FH/LDOHguQfB7pQKx\n+siviqjO3molBSyMHL39XFWyteVbgbbSaTRkpX//b7dQoFMiVhigcM78qoymBi6yX\n+qwpN13JoNuNJhEOwex5eEEUCVibFReUkBrYoGnWbwuOxiLORx/IbuNYOvsTGYEAJ\n+EMUkKhqzk2UXWScQAIvAgEpQpzuE1CWMBWcM/n4ruUrOVTeo6dYpUGN1LI0758xm\n+4VI47I8wPEy4pAbdPcqoaNnMcA/NpSYa3hV0svQDLqT96qKTrN71N1gNJa+5w+KN\n+rwev8MRpjuze9b4dn3avs4L9f0fkpzjSzezKwVb7loFSZqgKAaI0aSoOUTec9+OU\n+5ymgkYPEEF12ydkyMzLwyKrtEnIqgwQpjYTN/3P1x7Gkhv+E8Lz06TSga84yVy5I\n+5gO1Hklc3MW0J9jPJe3uALUtEh49KxCE2rdbIX7YbkxWaHHfK98Mu998IXr/4eUe\n+Zhf2CLC2cuuYbk1/rOcxPmeIJKa6S5PlWOf3Y2yLRO0VKcjD5pcGxiImoDVXC4VM\n+hztCVLddjU70c1ktSIBQBu9gkpPcECrzjYtpeAavOUgmpP/zQ8X2NGp6+5n9Wwii\n+tAgByNCg0s+PqcAZxup34b3ZY/t475tDlAmIOovH14Aa8g+0Ketj++9rPpmg9kGs\n+sGmn4mVItClaA7L9vZQQFnSxjyfICKsSxBhqded0lsinlzBfXDEh3N6fEXh81/Gg\n+zLUmTlkhcGaFXplYqrUIlkdO9PD4R2h5P6laLhK2dAf7oKavWHZQp02Yb5nVBiDc\n+KiVWKBP4nuTkWZCG5R966wpR1IOQQ3LykSd5SstcZX6iTpv4NZpCxI4CXpaCuQGN\n+BFYhSHABDADHaEJVygBdwU81c4YynyTOnWTZX+BR3EvRW51GcnfvjqkqgmlWNLET\n+JkswQ8+s0mjKGVnz4dkdr4cUbVegj/St7wzoO+m5mYIDMJf1j83Vo6lTo9FJFzbc\n+HrYC9RS7NkQmD7qzJz4KY/h0n5szFIC/JpYECBNzYrJQc8m2kZiSlyUQJve5/I5J\n+iI6QnM0x4kixNe32GITmKw9s3E2iRf6yXVlsrPouNS33lPXKtvmO1ae7R+G8Ve+D\n+JDv+TLxccy2iU9wuz4I3k20+rlmEwk17feDhfleh5Q+qjI4vkaNcXFa5coZE0HyW\n+SwAtLPSOv2vWkuFeYncXRyzg/CvKR57i9wnqMzNTMt3bHY2HezE13bHln5B/Jqr4\n+ihhFQBqPG+UZlGYRfAI60PLh2yftX5xkm/POiLgEKF76/yIZI8wcPzzurAhFaZBp\n+8/MUv2ZJ/OUT4rdEVV+6XnrijNqVBU8mf8BML5CvjyhsU69yf1mvpiLQr34FNEcn\n+JekDGPIk97cAEQEAAYkCJQQYAQoADwIbDAUCVuLr0AUJAa7xWwAKCRDFJCoas5Nl\n+F8NMD/4hRoOKENEq940Z0iJg0TDvRvRnaIYsbneRQ3yg1DGVIQ+4RHmzQdpN9MW0\n+5RTRLqJsW25ydWwh7y0O/oBRjaoDRAkMSIyOo/Fy+E9WWBmAwzeYCi91MyfetKIO\n+ocrXxpXXKnotAFDOgWGF8K+LlTDH/biOrd8ftgOVJWhz3X04ma7xvT2tQTqfFdbt\n+EivA+jFExq3No0Iq+Ctt/e0H2d9np62SeKBVdpbx9xAc2tPKKDSl+FyB7lj5CK5/\n+FKhotl2bJhVXET48P6e+bFVwfRO7o48zuK5CJVbbdjhavQGhQoxfedW2dn9y7QoM\n+qayUuVIhULE/k+y3jsJBUT7p567nSdUGbc3uKt1sfPKYTdsFbHiTRltXmsIiv4bG\n+PslbXSvOQblFOXWrAE22CdKmGzhlEiFnbviZCCl0BFf4CwEVBJ3p9Lcoir1l9Aty\n+HIIFI3z1mmTz4F9BMbe6saNwBzO+Kh4+US5NV/hqvyz0aOLltb6KfI8WF8kOa1Cx\n+Djz/DTHnvMWO/dIOJuKsThfuxZZq3R1w3O36RB8XzDT/8NV86gfQwN07NWz1rdy4\n+60fK36EjOJDqm/434/BDzWh8TqmnSamENxBTbICmWOj/25M26tA2S9zcPLJHTGMA\n+3yL3QlBtjWY2uNqr51cnZHgPKxBWzaRvcrZ+lUq5EG+F4J7q5rkBjQRWIUitAQwA\n+5A2AhW9DFxVsM105WEErD2NuM2rvtq7dTwArBEi2KdWkSGQvCE9xgyH8u5AEWxj8\n+XXHE/rfunW0d9oF7Z9FbOuV+1HQOAj5hQQWLWHERwZ4gOAqG8ZKAbuwTlqitdiXE\n+PZiJYZSq0NXtngyeTx7XqzQSatfFOIQLzIiwPQXX0Tt+JB3B2SN/D2NP7rubzfS2\n+Bg0ErhV20fPDl8YloEJFfj9lpF0ZJnJ5hXYP9Fl4MoPkyBkGPrJPooZ4FqUFHDiw\n+mttzP1BzFlwpAPGpI0NrkBdBlfFAtvhjreeB5Z4VYwt1xqoXgI+jYXAxoMl+rtkK\n+FdWaoT7wHwqDBeBWYXoyXA2dYIY8Ux1jeDBnREck7vaXhln6zXqMAQowE+F9OQnr\n+Wgf/LoOn5MYxsBDY9mPAO8urxUDE+Dq43JBXlS+jybMNZWdtkaBrIde7dw9IT8Fn\n+p8pG78DmgPxmRFH9QoypTqMfB+x7ZuB0fk1ud4ut33qLo78BWZoW0H++13CbSmrZ\n+ABEBAAGJAiUEGAEKAA8CGyAFAlbi690FCQGu8SoACgkQxSQqGrOTZRcNQBAAmeL1\n+8Wr7vuvL5dySoYmWqHFvM8gRUwIGza5c3D29NYZJcPJRRkdGCV2IXEuUSOLtnjAN\n+kTM1TVMMnetqNR8Uryr7z3XjqYLnVwGqOPnFnlkE2zS3pG8AGG6OxxBhuEMvkwcd\n+1s3tWUlJYRWi1XhEjVZ5Km2pHsVxvoXeJCUVsa8nSXzqF8gOLm409NFMiKkp8QOG\n+heEV4yWrHkySi1fVfOdrHfBzu2lUmHGgSbmJIpLcK+cL3TjpJ+DkSNbniI13I/Eb\n+PO4Uai4a3QYz6sspZ7UzF/pjY5v6WpWXiVB5PP2Y5BrMUgWRlFxPYTc3KiIHUYVi\n+IjVtSOsVaRCHL/SYRq/qHs63XxlxKIhhilbR4OO+CvJ6N/vEpSbx69SqlxgDArZy\n+g3QQqerlLGpSFim9iWk3QBGWtQ96Ek6rjLLOn7b34I6bxXtfcOEo7gl0Y1TFkfOp\n+nsXAcRLrrXCpAhgC/vIQRTMKEcC18kj/vY144DwefzYCBhbI/rCSohAq8a/zhq2T\n+E+xlCYy931HWlUAGx/hms/0q+KQ712Zgk4XxXEx4RZiv3zl9Uph6c7SXxAMb8o2v\n+PzAxd3ShNOnng9hAl8zk5O1RZPa5u51ppkO1FsJ9zjb2Kvdg4ZEBtK8jETv9ckuq\n+yj9YmZZSRRQ2dujg81sLQ9CrO7WB3IGpwh+4lHQ=\n+=1irw\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "3831eaea114f77f30f9638e6772f446055f3c68d",
        "filename": "contrib/gitian-keys/jonasschnelli-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/jonasschnelli-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/jonasschnelli-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/jonasschnelli-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "previous_filename": "contrib/gitian-downloader/jonasschnelli-key.pgp"
      },
      {
        "sha": "88d0de1503bb6a6bed7710b68b5526e85a855812",
        "filename": "contrib/gitian-keys/jtimon-key.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/jtimon-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/jtimon-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/jtimon-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "eed232a8722de569dc75dc97fc926e18b060898a",
        "filename": "contrib/gitian-keys/laanwj-key.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/laanwj-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/laanwj-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/laanwj-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "a2d34e75e1c16c17cb721633038813800dbe45b3",
        "filename": "contrib/gitian-keys/luke-jr-key.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/luke-jr-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/luke-jr-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/luke-jr-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "ee626500a482448cb2c7717ba352260262a3422f",
        "filename": "contrib/gitian-keys/marcofalke-key.pgp",
        "status": "added",
        "additions": 69,
        "deletions": 0,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/marcofalke-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/marcofalke-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/marcofalke-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,69 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1\n+\n+mQINBFZu2toBEADGuBiRutibv2SlW/A7vBGeGA0n58coQaPkmi04QGMeGxdZyvad\n+h8olkPO1q5B0/5E1olEjs1YquHTjSjerLz8nUg8K5OEu14KtCGvFbmtSFW7fOUHD\n+/u+EykJrJczqcJJ31r4B51L8CdS1ODdBbinQRlTjtLq+pE/fJAjHI3iQ2E06vkpc\n+BRVA628fZKHIcd6uXZBrDyAcKtqq1TITlcYoVlYbvMrov9bPz1NW3P6pgnO1S+UK\n+RfkhG+N3bC8ttsTXo0aevz3klaVFEZ4Oo4N8TUcYoYDTZIfu/Gk23r0hBONI75IE\n+pbF8u+r0M5mpXxCHqmrUgmU33CBTeuCZon5r0iEsweF+ldh5rhEOhXWxHcUUz62S\n+64XoqzuOlorpWzIS53oyVTZcH6XszF+iLqSuMQCgOYhF/u47rt3Vh9D+TYJcnvGd\n+0ozRuajLIRGCdVlKt212ER9QLxZ6BTOePbb+g99I2DOx6heSUDzwXWKTxt00Lr89\n+LyBFa9kj2fI0BNuzx9XI0l+GK5M9xkNi5LwL5gaLsPCJHEEPaG2pcBIBbw6hjIka\n+L1fgDWng6MQ/eml5JsyA3G3J07/xxoVPaN9vZ8LLO9BEiz7e3Oss8a3Mw+SfsMcH\n+mJJIFT/CguJCxW3FeKs16XiDpO2Eg2WRoMJMB+psdfgo8e2q7dXIE6kCtwARAQAB\n+tCNNYXJjbyBGYWxrZSA8ZmFsa2UubWFyY29AZ21haWwuY29tPokCOAQTAQIAIgUC\n+Vm7a2gIbAwYLCQgHAwIGFQgCCQoLBBYCAwECHgECF4AACgkQNkiogvQxa5vgkA//\n+Q200J62bnplhyuWMvKmpCNFG7lTtLHmwVtZmvBJiHsRwe42KRWKz6IaQgEHfBMCU\n+tSra4i2KY47j4s/kyTgWeQooH9Zxh7c4EMeyOrxpqPmnKF/0tFnDyk9SCqbrrUQ+\n+VuL9/JrZ3zB74GtRikvWXS43cuBheKPZSwdGrGWtP74Z48eKXa8mOZtDfQJACqpZ\n+lF2Hv0GOFKDNfaol6BkANpeDv3orhnysY5TqE8iA4VuHAL2MDmWg68Rb9sjPoj7U\n+TIYyeqiok/R56SkN+WnGGI7l4+pk8pBqhkjZUjVTEEABR81Vu+Rn8OxTqpKu6gW3\n+YACXnk/kXYY4I3Ri63eK0BQEeZ6Q8nrPhqHYK7fzlbwwL4Id5bDJpBZW+a6Hvlw+\n+zQXpObhMSxtDJZzEonqq5PwJLlkLPU4sbS1tuinCdAII0Qz0Tv3Nwvcrr+KWiNqr\n+vf1ed7CecDcQpSqHfhhibgykLfdAJGNpGxyA4yhOUHax4TbYZctL3ZYXRWGrF//z\n+Gv33w+8DMb3zM+BP2SBR5D7MFTqE2X7bTn/0pRnfYObjgU7+pT0bed4SyEY2mnqb\n+ikPTKfz/g+xLL46lMaJKLgBdS14A6+k3qVUDaBNMb7crSQlutmU3fRhNYq1KW9IX\n+vEI7YuEfMa6vj4rLW+68CKYBu2pNBSQZ9LHedx1UM3u5AQ0EVm7hJQEIAMTDtNiw\n+0WJUO8T7G2vA4WFHbvBoGM4CH9LaOm0JpH3L0DQ+XD5EWGICwlpkoiQiRPpGSmSc\n+KAbAgtfS+a91z4GSWEgL+q9HqVZO22yQSeCbtbnJs44BMJzgMcVxiFOc0JQU0KPR\n+zrT2TtD/Z4ryOvI2nuepv3aRz0RSQEsBnhMx/aNIV9YbRJ0YofC8BPReK5hQ6rYT\n+V2C4P0RoPCdjeGx//0Ilg+xTbPSG1urSKVUEz6UCT21MaCBsyxN5Z+Wa2K9F/894\n+y+TsWMQQcUYZ57DXFHM1dOkfDYorVATNOnv3dIJEjQDU0dYEE0yNUYG5nu+UjluJ\n+LG/ZTiXhkNQla+MAEQEAAYkDRAQYAQIADwUCVm7hJQIbAgUJAO1OAAEpCRA2SKiC\n+9DFrm8BdIAQZAQIABgUCVm7hJQAKCRAtfyNy5Q/hN0XMB/94V+GgGRgCxvwdAT92\n+RCatOJcf1YJuw1aKWjAiib0FVeChZebZYqW+jwvMkXZwxlVFhcpFlUzAqCRwcJx/\n+QoalF7u2yTL6DEEGcC8bUKrhtXQch4/D28BWJAJlR/7bItdWMIuw4WV/8s97t8Ca\n+Fn2Fc1T6/B20VclsxoeaAoXZUcWG9YIKRbEaogt3LxsRjgQLZiIicjRl0C5YpYDt\n+JvnENKuLwSRte6gKkuUi7Xw4iIP1aEwTTdZe0km6If6pVPwCK1cU9xMpsMftT1Fl\n+NdK/dJbfWoYrS24U30XvCxsFMogD5jJ+PiXUoXDBjPJmDiXrGUDR+je/RqsUKBH5\n+zyKaI1oP/A5Dq/EU5ceIfMPaS8iK4DjgwKdh8zuprDQ+JSf4iD1b/HHlwcrXmGFG\n+4uRO0X/V0ybIdYj4U4qXRm2FTA20x7MDEDW0i/cJQKNrVZC7HQnvrdG7ggG0KVok\n+tTvsIWJTmpQ3MY47rTtWQrmRdiiSRWeTFyE4sPUy3XpuPA5ZKGF5vN7A1p1WYSZH\n+gl6NBv2vp3wjwplSpYumzh0q+o7W4bhdy9+BR+K8l5a9LKyCrwL92XKLqp3iAyvq\n+RdbCrTvfppYtNwJ06JBww/b+aO08vTFY08eYbMTOVxNJUtzpq+JUe9QHOzbBNCv5\n+viIVqNRJEQw8ITQQ1AjgN3iWdnbVQEwYv3D6VNkpzDpZD6tzOmJwwbRc5rISCVL3\n+DQQglc7BYIkcI47QHBdf979H8EvA39U4yFHW3DfApHBl/gzHcEbb5RoBYc5yb+02\n+U8xGHxGJ7q4h40N+oLCc4S04gepqtCeIQ8cgCPjRdPKuP8o2O2wzDYvqr3RlzM1M\n+l+GWmv+3em/RWwhWggDIf/XhYkSbC/USJuPjQEYqJRcpx+60HYV7Ro6/RryOoLUA\n+0ZXu6IYs2qT+KEcLQ4D1XKNb0GFnHW+3SXqehl4qI0zdPUOLKpXhCpThhC8BlqV5\n+O1aP/5jnogwcW1HF+tUc4h3nwrgvcajrikjffdBIrUidoDVEN04WuQENBFZu4oYB\n+CADQwtiaFcDxMms3bNyRrfaIA5gNWEhoTRFNXMKY5SacsavamWzlfNRBIlYMl27z\n+oMZK4hpxH568UKhwQyb/qLt7gI9hLBOdgRaWZuOCghNGX3MQCBodDLXTahnvUlXp\n+pXnUOtuQmODPjTDIjNXjcsZUUzSJoanQ+Zt8OWPBYumrFC9Xw5fFRcrNmSbWnllx\n+Nveyrm6mlOydSUXq8D1vh4vkNGtQ/0nrFuSTBGsl2vY+ClX4o8iYunaHmhEboqjp\n+BMEC4WdBql6N5CI64HQ0e2iGXVSTPiMHnpqQlnaOvx3gdaYPW15hjISgjPb6ygdp\n+uyGXyPRa+0X7TlTtGXLLcoB/ABEBAAGJAiUEGAECAA8FAlZu4oYCGwwFCQDtTgAA\n+CgkQNkiogvQxa5sE5w//VrTdVm1ak3RCtZU1D25D6yiSMKZ05j6PDyJfZNI/QubJ\n+5Qq/VKzITa4kr50LNnM/wZzQPxEM5K6HyA5Wk3tt4IXqmqyZ8VUS+55sl1b5Tg6q\n+NSLc2qXmY+BeVGmQZwke4nY8wvTNI3wGDekJTPd5a1rjkw64l8n2Xy5ErVaYlhkW\n+8KyD96PTKhsJgRqGmAtZjJ2i1e64oR/VYR1B9daghGzueV/uvdhD5DxH7UsKSBUZ\n+vb7lCeOK9Fuvs12/ULgMmymFxSvKeD5+etGUPsNA3gRpqwNcipp0QNhiQmm8nRq9\n+vH8Kv9tPmaXL2JHWJB4pMXQXX/DIww3I2gaFfHL60Dr120Ddte3uqdG9KSYQHz7s\n+/bH+vFsvqr17CHflA/Ogto4rfrlL5qo3SaJVRQwI5vhA3Nx/K22WeH7l25Mu6mAw\n+kQo0c76fmSvOTpvCVC8aDvhLlm1nF1ao+dq4QafnCrKU3PTn1SlkZ2hwfFzRy/Ru\n+Vdep6Xd2M3tux3O82UoHLF7Z+4G+NgP69h87rMOSikszRsNiCi80xO3aT2CU8Yt/\n+l3sduhFP5TqvfKjTJAK6EfUIukVC0JEL8ktpYCyxb9tN6DTPHEhCJUTXZI9Y60iT\n+ZIrV7MYY51HatEEJKhpUtLeYSyutj0ubbETfrt2b3cjHNfQh+OLEVUjaQwZXKdU=\n+=GC3s\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "20963e7e259d30d399be1f84a7e4246ff12ea61c",
        "filename": "contrib/gitian-keys/meshcollider-key.pgp",
        "status": "added",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/meshcollider-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/meshcollider-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/meshcollider-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,51 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+\n+mQINBFlm5UcBEADFhn2Tcfr7gtsLRj9dzHGPoZYjc8Jy7wceqT8918lqaULJKgDW\n+vkEWCVOHRlrr/h1ugldouTRv3k8cdzhCR9YBakVJ3vBmn73CvHQl57jGRSogyqm5\n+hb6IXJkBdualnZVFvCDV37VYeyuSYkJ+DL3c2wEjC2gdQKUsc8ePrJZZEMJVScdD\n+hoXR/sPnu8P5yHOi56XGJi9395GUmmxJKNucD4HXjSq+7yTTs5GXm4niaKfcKyBy\n+kIGN4aEeV8sqzkN8JzNH9fc8i8MPDYLW7SGljpLSnIvIsdBRjXXBHwRnfmGEO7lF\n+sVTyepUUYX3GhLcCNhZjoMkpagVjSpQPj1gylSM4EFkmU2AgK/iEzqB7Ay4WC8EE\n+E2HrcN0ysjyhuyntFwMa1cze99vtfOIQnVJ8E58AvsOs9+xYz8DkbYntCHDD+Zcv\n+y200/knT1jJSZMXkiDciLjGSeFFbh6H+VpaFUKjy3G3yJC4BTXwnACga5/WPsgmK\n++Y9gpTXRsZ8Op2teiwl8wI85mNF+2QmQw3uvymfojI8YPmjx2LOCbzkFYIJt20nw\n+iP1QMH3vtk+iSbcnexQlOPh03ZtDp3NbkBvBOy7cOc57Nc6IX7TllZicQj0FUjWq\n+ctUAU+f5pQuVgS8H3B4XE+Pk1u6/5zX9H0sTi0LzeQ0OdWFcvmZ8mYK5lQARAQAB\n+tCNNZXNoQ29sbGlkZXIgPGRvYnNvbnNhNjhAZ21haWwuY29tPokCOAQTAQgALAUC\n+WWblRwkQ0wARbhyHWj0CGwMFCR4TOAACGQEECwcJAwUVCAoCAwQWAAECAABJ2Q/8\n+D6FMutVLsz55vwy2FjWojcvSpk+BV50YMGYTCdnXZod7V0dP1iQ5+NMcYfpWgJKM\n+YbJ2eaWpW2TgsBd12LTjA6BKX3FquN8Y3nKZiknGCLiimDiys0+VuO9ieEH0flhC\n+olhGysRmPO5clNmZOzn3yiPgUekw6ejLVUEY8vPCbjojSuLZyjctQR3s/9oOMyvm\n+tldJ0waLi3KSOPEDQ8gXfE0QfDf2eMTdlMkbOHS6BlDIre6P5RZ5IJaLwCdzne+W\n+aS96CUqVcR3aqil4mG+T+kHf1wF99TZwY+tSXtweGENjc+QGEaR30to+catSc0nz\n+KQi3dGCH2Y+rc4VHE1S2Id88M38883mHXUeDMqzV9mHwMA50r/jzcLPybrJA1Qhn\n+ZQNWr8zGilmZfWnf2VyiPqZCIAEEFcwg6uNg9Rwy2N3Q/5+vhAVcVNJamMA/dpHa\n+hnq8HmZjraPWHL5Q9oL3Ggtc1Jahb8skaUMV26PHkXOxNFhVynghw3ujC3mocKqQ\n+stmsg+2m5Wf+TZtmbd8geMWcRpuxovYX2ZmeFPWIU+6p9XpwyiPR4mp5hWn/20dQ\n+YAyN/cQhWjDRU2i/HJB1lVnQIsSVsy3eWUJk4htQNHmk8crYocsXb5hgQ2C+JZ0L\n+gY2AxoGjqtzKkydTd5GbiCmqqFdW9ngmVerZ6yCbyRK5Ag0EWWblRwEQALdMSVUR\n+fCXTW2zCiP7g0Aj6yvyi1Wg1zK0CeRRljXKfgFoAI6IGW9QSSpXPmdsnAQOf7L0Q\n+wTTqwWNhKOLV0IWLenbpgIVwfLMkrwn71q9MBJFHiL+PgZLaRxqF5pmW34ZReUj5\n+k55Bg49kB98rfyz9K6qNxKLzY0j/8zsCvCgDMpr7U61xfz8Xo3Ds8bRdaFoH3RWR\n+wm3ePTe/8Rpm/LWWLlzhnfTpyZCUcOPh5+2yt0twHQ5zlzj7Gp8Il8XNlP6hvfx3\n+QGDuFTQ++Utom7T3QLa5E5Yx2iTD7qaNLdpQLZmcHUvdQV0QWSILccEvSJ+vXiE0\n+NvlgQIAE1pUuyTGpm97+mBeDC+4PvXUxQqFoOTJiwJxCpIAA0yvloUaZyeT0Toar\n+mowVOn0JXfbZRFFdxNUXgz9RbzANB+twGJ/ySh3mQz+Mur/1HqnCpHEjy73yOA9e\n+alN2LNvJt92hMdq+QU7I0bNqUS456h6Ft6mOpqG2y57qpl8ZL/MIvMaw3s45hA6p\n+7gzi7/TOnoqAkDUPf7lRbYjGgLkcGlimRxyL1SAYKuFgpNnhxk6BNPKdly7MRWF5\n+I+oUc5W7HkNefbHw5sdLgYZBQk8JoSwF1K/ES5gvJHWZjCiLAcbyum2W843etfU3\n+Qa/3YNt4Gri5zhAoD7U2kAs1ct3hQ6cLmDrxABEBAAGJAjUEGAEIACkFAllm5UcJ\n+ENMAEW4ch1o9AhsMBQkeEzgABAsHCQMFFQgKAgMEFgABAgAAWWcP/1ErBIqJ+SFZ\n+bL3YyLB9iObLEAUxNQP8bEV6lI9V0XUBhReasxQrMUFEXsFoFU6i/qlyfQFsBN8J\n+2QJFJT1pNE+Pleuz4yMuK5Ddcuuyl9ZklfEclmkLpSEwapFMm9IOgaGhucBMpvkC\n+2FE05oc0dEyTCdt1rBppGXvx2aw1khSiuWU13bWXw4hWfJaYKDKdTQyJLsjKGe0u\n+qjaR6yHWHbjlchQWKGUWLHomTKG6wZx9k5YbEy5LN7HnyCHos4SiWyaSpXSjCtNn\n+15i0JdH68fpKAtaGtkUYtoEJIg8qg7u4B6wM70BK2WCZr8T5yWK0c7NrojMIYjEu\n+HwEA9XPkcF9TF7V1VOZMze1ZOWSNzGOfq1yJf6hpUNrw+B3TbYsqJkuJmVSYoamH\n+0QBy0sHxlUtsALMnuKIQt8Sp20bJZLwpudXF+ZSRwrjmYc2RMc5AWaBHTGz2IGte\n+AvH+SOOaRWj+UvhSFZVKVOZHWqErzKG+NfqQzEaEL4h/6QU64h5GLhocYHCiCbFm\n+X1t01eKoDfOhwQlSlPjpDxxr7yi60ntt1R7DpgwqMNIdyXylxsc4SCvM6NDRXVM1\n+DoaPHI7GRuT1w6zEtkCGQoGsy1OBrnjeIy40mzh8L5q8L7n3jNtN/d6YCYDzP/P6\n+gb52/WPhR6CJQ2/7y3Uj7u8sPNpb7BGI\n+=as33\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "47bc404554b41866c5626384c30a9e4f9261958c",
        "filename": "contrib/gitian-keys/michagogo-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/michagogo-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/michagogo-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/michagogo-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "previous_filename": "contrib/gitian-downloader/michagogo-key.pgp"
      },
      {
        "sha": "5ee82a6f7ea42f0f4ecacbfc0b2541b3d98a48d7",
        "filename": "contrib/gitian-keys/petertodd-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/petertodd-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/petertodd-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/petertodd-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "previous_filename": "contrib/gitian-downloader/petertodd-key.pgp"
      },
      {
        "sha": "0870c88b9b3608b761565063dcbdc33536250227",
        "filename": "contrib/gitian-keys/prab-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/prab-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/prab-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/prab-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "previous_filename": "contrib/gitian-downloader/prab-key.pgp"
      },
      {
        "sha": "a1930ddee905f688dcb3a189a88e1317e7006a0f",
        "filename": "contrib/gitian-keys/sipa-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/sipa-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/sipa-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/sipa-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "previous_filename": "contrib/gitian-downloader/sipa-key.pgp"
      },
      {
        "sha": "baaec76b8c656a04beb4a91155dff40658c87bd7",
        "filename": "contrib/gitian-keys/tcatm-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/tcatm-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/tcatm-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/tcatm-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "previous_filename": "contrib/gitian-downloader/tcatm-key.pgp"
      },
      {
        "sha": "e0f6c4c5fdf56ffbd6308d4e0a6624290feadff6",
        "filename": "contrib/gitian-keys/wtogami-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/wtogami-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/gitian-keys/wtogami-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/wtogami-key.pgp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "previous_filename": "contrib/gitian-downloader/wtogami-key.pgp"
      },
      {
        "sha": "1a949f3c078bec11afeb991ccc28dac640481082",
        "filename": "contrib/init/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,12 +1,12 @@\n Sample configuration files for:\n-\n+```\n SystemD: bitcoind.service\n Upstart: bitcoind.conf\n OpenRC:  bitcoind.openrc\n          bitcoind.openrcconf\n CentOS:  bitcoind.init\n OS X:    org.bitcoin.bitcoind.plist\n-\n+```\n have been made available to assist packagers in creating node packages here.\n \n See doc/init.md for more information."
      },
      {
        "sha": "de4ea0ed522d1c6d764e5e05a5939e097b420e86",
        "filename": "contrib/init/bitcoind.conf",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/init/bitcoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/init/bitcoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.conf?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -30,12 +30,12 @@ pre-start script\n         echo\n         echo \"This password is security critical to securing wallets \"\n         echo \"and must not be the same as the rpcuser setting.\"\n-        echo \"You can generate a suitable random password using the following\"\n+        echo \"You can generate a suitable random password using the following \"\n         echo \"command from the shell:\"\n         echo\n         echo \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n         echo\n-        echo \"It is also recommended that you also set alertnotify so you are \"\n+        echo \"It is recommended that you also set alertnotify so you are \"\n         echo \"notified of problems:\"\n         echo\n         echo \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\"
      },
      {
        "sha": "50377c09957c0d087681365470f9852581296310",
        "filename": "contrib/init/bitcoind.openrc",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/init/bitcoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/init/bitcoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrc?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -76,12 +76,12 @@ checkconfig()\n \t\teerror \"\"\n \t\teerror \"This password is security critical to securing wallets \"\n \t\teerror \"and must not be the same as the rpcuser setting.\"\n-\t\teerror \"You can generate a suitable random password using the following\"\n+\t\teerror \"You can generate a suitable random password using the following \"\n \t\teerror \"command from the shell:\"\n \t\teerror \"\"\n \t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n \t\teerror \"\"\n-\t\teerror \"It is also recommended that you also set alertnotify so you are \"\n+\t\teerror \"It is recommended that you also set alertnotify so you are \"\n \t\teerror \"notified of problems:\"\n \t\teerror \"\"\n \t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\"
      },
      {
        "sha": "f70e25cb5fdd29e49de2c89b81bd92633e5b93df",
        "filename": "contrib/init/bitcoind.openrcconf",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/init/bitcoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/init/bitcoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrcconf?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -23,7 +23,7 @@\n #BITCOIND_NICE=0\n \n # Additional options (avoid -conf and -datadir, use flags above)\n-BITCOIND_OPTS=\"-disablewallet\"\n+#BITCOIND_OPTS=\"\"\n \n # The timeout in seconds OpenRC will wait for bitcoind to terminate\n # after a SIGTERM has been raised."
      },
      {
        "sha": "2985106982788c8bfa31ee077b05e8e77ba19e72",
        "filename": "contrib/linearize/README.md",
        "status": "modified",
        "additions": 37,
        "deletions": 15,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,33 +1,55 @@\n # Linearize\n-Construct a linear, no-fork, best version of the blockchain.\n+Construct a linear, no-fork, best version of the Bitcoin blockchain. The scripts\n+run using Python 3 but are compatible with Python 2.\n \n ## Step 1: Download hash list\n \n     $ ./linearize-hashes.py linearize.cfg > hashlist.txt\n \n Required configuration file settings for linearize-hashes:\n-* RPC: rpcuser, rpcpassword\n+* RPC: `datadir` (Required if `rpcuser` and `rpcpassword` are not specified)\n+* RPC: `rpcuser`, `rpcpassword` (Required if `datadir` is not specified)\n \n Optional config file setting for linearize-hashes:\n-* RPC: host, port\n-* Block chain: min_height, max_height\n+* RPC: `host`  (Default: `127.0.0.1`)\n+* RPC: `port`  (Default: `8332`)\n+* Blockchain: `min_height`, `max_height`\n+* `rev_hash_bytes`: If true, the written block hash list will be\n+byte-reversed. (In other words, the hash returned by getblockhash will have its\n+bytes reversed.) False by default. Intended for generation of\n+standalone hash lists but safe to use with linearize-data.py, which will output\n+the same data no matter which byte format is chosen.\n+\n+The `linearize-hashes` script requires a connection, local or remote, to a\n+JSON-RPC server. Running `bitcoind` or `bitcoin-qt -server` will be sufficient.\n \n ## Step 2: Copy local block data\n \n     $ ./linearize-data.py linearize.cfg\n \n Required configuration file settings:\n-* \"input\": bitcoind blocks/ directory containing blkNNNNN.dat\n-* \"hashlist\": text file containing list of block hashes, linearized-hashes.py\n-output.\n-* \"output_file\": bootstrap.dat\n+* `output_file`: The file that will contain the final blockchain.\n       or\n-* \"output\": output directory for linearized blocks/blkNNNNN.dat output\n+* `output`: Output directory for linearized `blocks/blkNNNNN.dat` output.\n \n Optional config file setting for linearize-data:\n-* \"netmagic\": network magic number\n-* \"max_out_sz\": maximum output file size (default `1000*1000*1000`)\n-* \"split_timestamp\": Split files when a new month is first seen, in addition to\n-reaching a maximum file size.\n-* \"file_timestamp\": Set each file's last-modified time to that of the\n-most recent block in that file.\n+* `debug_output`: Some printouts may not always be desired. If true, such output\n+will be printed.\n+* `file_timestamp`: Set each file's last-accessed and last-modified times,\n+respectively, to the current time and to the timestamp of the most recent block\n+written to the script's blockchain.\n+* `genesis`: The hash of the genesis block in the blockchain.\n+* `input`: bitcoind blocks/ directory containing blkNNNNN.dat\n+* `hashlist`: text file containing list of block hashes created by\n+linearize-hashes.py.\n+* `max_out_sz`: Maximum size for files created by the `output_file` option.\n+(Default: `1000*1000*1000 bytes`)\n+* `netmagic`: Network magic number.\n+* `out_of_order_cache_sz`: If out-of-order blocks are being read, the block can\n+be written to a cache so that the blockchain doesn't have to be sought again.\n+This option specifies the cache size. (Default: `100*1000*1000 bytes`)\n+* `rev_hash_bytes`: If true, the block hash list written by linearize-hashes.py\n+will be byte-reversed when read by linearize-data.py. See the linearize-hashes\n+entry for more information.\n+* `split_timestamp`: Split blockchain files when a new month is first seen, in\n+addition to reaching a maximum file size (`max_out_sz`)."
      },
      {
        "sha": "2315898bf1d7561260fe3a3b5c1dd21c09ca0d9b",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "modified",
        "additions": 24,
        "deletions": 3,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,11 +1,18 @@\n-\n # bitcoind RPC settings (linearize-hashes)\n rpcuser=someuser\n rpcpassword=somepassword\n+#datadir=~/.bitcoin\n host=127.0.0.1\n+\n+#mainnet default\n port=8332\n+\n+#testnet default\n #port=18332\n \n+#regtest default\n+#port=18443\n+\n # bootstrap.dat hashlist settings (linearize-hashes)\n max_height=313000\n \n@@ -21,9 +28,23 @@ input=/home/example/.bitcoin/blocks\n #genesis=000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\n #input=/home/example/.bitcoin/testnet3/blocks\n \n+# \"output\" option causes blockchain files to be written to the given location,\n+# with \"output_file\" ignored. If not used, \"output_file\" is used instead.\n+# output=/home/example/blockchain_directory\n output_file=/home/example/Downloads/bootstrap.dat\n hashlist=hashlist.txt\n-split_year=1\n \n-# Maxmimum size in bytes of out-of-order blocks cache in memory\n+# Maximum size in bytes of out-of-order blocks cache in memory\n out_of_order_cache_sz = 100000000\n+\n+# Do we want the reverse the hash bytes coming from getblockhash?\n+rev_hash_bytes = False\n+\n+# On a new month, do we want to set the access and modify times of the new\n+# blockchain file?\n+file_timestamp = 0\n+# Do we want to split the blockchain files given a new month or specific height?\n+split_timestamp = 0\n+\n+# Do we want debug printouts?\n+debug_output = False"
      },
      {
        "sha": "afcec2b60ae4f5d4ceae805bc076dbf39c982c62",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "modified",
        "additions": 49,
        "deletions": 30,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,30 +1,34 @@\n-#!/usr/bin/python\n+#!/usr/bin/env python3\n #\n # linearize-data.py: Construct a linear, no-fork version of the chain.\n #\n-# Copyright (c) 2013-2014 The Bitcoin Core developers\n+# Copyright (c) 2013-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n \n from __future__ import print_function, division\n-import json\n import struct\n import re\n import os\n import os.path\n-import base64\n-import httplib\n import sys\n import hashlib\n import datetime\n import time\n from collections import namedtuple\n+from binascii import hexlify, unhexlify\n \n settings = {}\n \n+##### Switch endian-ness #####\n+def hex_switchEndian(s):\n+\t\"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n+\tpairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n+\treturn b''.join(pairList[::-1]).decode()\n+\n def uint32(x):\n-\treturn x & 0xffffffffL\n+\treturn x & 0xffffffff\n \n def bytereverse(x):\n \treturn uint32(( ((x) << 24) | (((x) << 8) & 0x00ff0000) |\n@@ -35,14 +39,14 @@ def bufreverse(in_buf):\n \tfor i in range(0, len(in_buf), 4):\n \t\tword = struct.unpack('@I', in_buf[i:i+4])[0]\n \t\tout_words.append(struct.pack('@I', bytereverse(word)))\n-\treturn ''.join(out_words)\n+\treturn b''.join(out_words)\n \n def wordreverse(in_buf):\n \tout_words = []\n \tfor i in range(0, len(in_buf), 4):\n \t\tout_words.append(in_buf[i:i+4])\n \tout_words.reverse()\n-\treturn ''.join(out_words)\n+\treturn b''.join(out_words)\n \n def calc_hdr_hash(blk_hdr):\n \thash1 = hashlib.sha256()\n@@ -59,7 +63,7 @@ def calc_hash_str(blk_hdr):\n \thash = calc_hdr_hash(blk_hdr)\n \thash = bufreverse(hash)\n \thash = wordreverse(hash)\n-\thash_str = hash.encode('hex')\n+\thash_str = hexlify(hash).decode('utf-8')\n \treturn hash_str\n \n def get_blk_dt(blk_hdr):\n@@ -69,17 +73,21 @@ def get_blk_dt(blk_hdr):\n \tdt_ym = datetime.datetime(dt.year, dt.month, 1)\n \treturn (dt_ym, nTime)\n \n+# When getting the list of block hashes, undo any byte reversals.\n def get_block_hashes(settings):\n \tblkindex = []\n \tf = open(settings['hashlist'], \"r\")\n \tfor line in f:\n \t\tline = line.rstrip()\n+\t\tif settings['rev_hash_bytes'] == 'true':\n+\t\t\tline = hex_switchEndian(line)\n \t\tblkindex.append(line)\n \n \tprint(\"Read \" + str(len(blkindex)) + \" hashes\")\n \n \treturn blkindex\n \n+# The block map shouldn't give or receive byte-reversed hashes.\n def mkblockmap(blkindex):\n \tblkmap = {}\n \tfor height,hash in enumerate(blkindex):\n@@ -126,32 +134,32 @@ def writeBlock(self, inhdr, blk_hdr, rawblock):\n \t\tif not self.fileOutput and ((self.outsz + blockSizeOnDisk) > self.maxOutSz):\n \t\t\tself.outF.close()\n \t\t\tif self.setFileTime:\n-\t\t\t\tos.utime(outFname, (int(time.time()), highTS))\n+\t\t\t\tos.utime(self.outFname, (int(time.time()), self.highTS))\n \t\t\tself.outF = None\n \t\t\tself.outFname = None\n \t\t\tself.outFn = self.outFn + 1\n \t\t\tself.outsz = 0\n \n \t\t(blkDate, blkTS) = get_blk_dt(blk_hdr)\n \t\tif self.timestampSplit and (blkDate > self.lastDate):\n-\t\t\tprint(\"New month \" + blkDate.strftime(\"%Y-%m\") + \" @ \" + hash_str)\n-\t\t\tlastDate = blkDate\n-\t\t\tif outF:\n-\t\t\t\toutF.close()\n-\t\t\t\tif setFileTime:\n-\t\t\t\t\tos.utime(outFname, (int(time.time()), highTS))\n+\t\t\tprint(\"New month \" + blkDate.strftime(\"%Y-%m\") + \" @ \" + self.hash_str)\n+\t\t\tself.lastDate = blkDate\n+\t\t\tif self.outF:\n+\t\t\t\tself.outF.close()\n+\t\t\t\tif self.setFileTime:\n+\t\t\t\t\tos.utime(self.outFname, (int(time.time()), self.highTS))\n \t\t\t\tself.outF = None\n \t\t\t\tself.outFname = None\n \t\t\t\tself.outFn = self.outFn + 1\n \t\t\t\tself.outsz = 0\n \n \t\tif not self.outF:\n \t\t\tif self.fileOutput:\n-\t\t\t\toutFname = self.settings['output_file']\n+\t\t\t\tself.outFname = self.settings['output_file']\n \t\t\telse:\n-\t\t\t\toutFname = os.path.join(self.settings['output'], \"blk%05d.dat\" % self.outFn)\n-\t\t\tprint(\"Output file \" + outFname)\n-\t\t\tself.outF = open(outFname, \"wb\")\n+\t\t\t\tself.outFname = os.path.join(self.settings['output'], \"blk%05d.dat\" % self.outFn)\n+\t\t\tprint(\"Output file \" + self.outFname)\n+\t\t\tself.outF = open(self.outFname, \"wb\")\n \n \t\tself.outF.write(inhdr)\n \t\tself.outF.write(blk_hdr)\n@@ -207,21 +215,24 @@ def run(self):\n \n \t\t\tinMagic = inhdr[:4]\n \t\t\tif (inMagic != self.settings['netmagic']):\n-\t\t\t\tprint(\"Invalid magic: \" + inMagic.encode('hex'))\n+\t\t\t\tprint(\"Invalid magic: \" + hexlify(inMagic).decode('utf-8'))\n \t\t\t\treturn\n \t\t\tinLenLE = inhdr[4:]\n \t\t\tsu = struct.unpack(\"<I\", inLenLE)\n \t\t\tinLen = su[0] - 80 # length without header\n \t\t\tblk_hdr = self.inF.read(80)\n \t\t\tinExtent = BlockExtent(self.inFn, self.inF.tell(), inhdr, blk_hdr, inLen)\n \n-\t\t\thash_str = calc_hash_str(blk_hdr)\n-\t\t\tif not hash_str in blkmap:\n-\t\t\t\tprint(\"Skipping unknown block \" + hash_str)\n+\t\t\tself.hash_str = calc_hash_str(blk_hdr)\n+\t\t\tif not self.hash_str in blkmap:\n+\t\t\t\t# Because blocks can be written to files out-of-order as of 0.10, the script\n+\t\t\t\t# may encounter blocks it doesn't know about. Treat as debug output.\n+\t\t\t\tif settings['debug_output'] == 'true':\n+\t\t\t\t\tprint(\"Skipping unknown block \" + self.hash_str)\n \t\t\t\tself.inF.seek(inLen, os.SEEK_CUR)\n \t\t\t\tcontinue\n \n-\t\t\tblkHeight = self.blkmap[hash_str]\n+\t\t\tblkHeight = self.blkmap[self.hash_str]\n \t\t\tself.blkCountIn += 1\n \n \t\t\tif self.blkCountOut == blkHeight:\n@@ -265,6 +276,12 @@ def run(self):\n \t\tsettings[m.group(1)] = m.group(2)\n \tf.close()\n \n+\t# Force hash byte format setting to be lowercase to make comparisons easier.\n+\t# Also place upfront in case any settings need to know about it.\n+\tif 'rev_hash_bytes' not in settings:\n+\t\tsettings['rev_hash_bytes'] = 'false'\n+\tsettings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n+\n \tif 'netmagic' not in settings:\n \t\tsettings['netmagic'] = 'f9beb4d9'\n \tif 'genesis' not in settings:\n@@ -278,15 +295,18 @@ def run(self):\n \tif 'split_timestamp' not in settings:\n \t\tsettings['split_timestamp'] = 0\n \tif 'max_out_sz' not in settings:\n-\t\tsettings['max_out_sz'] = 1000L * 1000 * 1000\n+\t\tsettings['max_out_sz'] = 1000 * 1000 * 1000\n \tif 'out_of_order_cache_sz' not in settings:\n \t\tsettings['out_of_order_cache_sz'] = 100 * 1000 * 1000\n+\tif 'debug_output' not in settings:\n+\t\tsettings['debug_output'] = 'false'\n \n-\tsettings['max_out_sz'] = long(settings['max_out_sz'])\n+\tsettings['max_out_sz'] = int(settings['max_out_sz'])\n \tsettings['split_timestamp'] = int(settings['split_timestamp'])\n \tsettings['file_timestamp'] = int(settings['file_timestamp'])\n-\tsettings['netmagic'] = settings['netmagic'].decode('hex')\n+\tsettings['netmagic'] = unhexlify(settings['netmagic'].encode('utf-8'))\n \tsettings['out_of_order_cache_sz'] = int(settings['out_of_order_cache_sz'])\n+\tsettings['debug_output'] = settings['debug_output'].lower()\n \n \tif 'output_file' not in settings and 'output' not in settings:\n \t\tprint(\"Missing output file / directory\")\n@@ -295,9 +315,8 @@ def run(self):\n \tblkindex = get_block_hashes(settings)\n \tblkmap = mkblockmap(blkindex)\n \n+\t# Block hash map won't be byte-reversed. Neither should the genesis hash.\n \tif not settings['genesis'] in blkmap:\n \t\tprint(\"Genesis block not found in hashlist\")\n \telse:\n \t\tBlockDataCopier(settings, blkindex, blkmap).run()\n-\n-"
      },
      {
        "sha": "58fec6dddc78225cb515114dcd0b7161da5ba855",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "modified",
        "additions": 57,
        "deletions": 13,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,39 +1,55 @@\n-#!/usr/bin/python\n+#!/usr/bin/env python3\n #\n # linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n #\n-# Copyright (c) 2013-2014 The Bitcoin Core developers\n+# Copyright (c) 2013-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n \n from __future__ import print_function\n+try: # Python 3\n+    import http.client as httplib\n+except ImportError: # Python 2\n+    import httplib\n import json\n-import struct\n import re\n import base64\n-import httplib\n import sys\n+import os\n+import os.path\n \n settings = {}\n \n+##### Switch endian-ness #####\n+def hex_switchEndian(s):\n+\t\"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n+\tpairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n+\treturn b''.join(pairList[::-1]).decode()\n+\n class BitcoinRPC:\n \tdef __init__(self, host, port, username, password):\n \t\tauthpair = \"%s:%s\" % (username, password)\n-\t\tself.authhdr = \"Basic %s\" % (base64.b64encode(authpair))\n-\t\tself.conn = httplib.HTTPConnection(host, port, False, 30)\n+\t\tauthpair = authpair.encode('utf-8')\n+\t\tself.authhdr = b\"Basic \" + base64.b64encode(authpair)\n+\t\tself.conn = httplib.HTTPConnection(host, port=port, timeout=30)\n \n \tdef execute(self, obj):\n-\t\tself.conn.request('POST', '/', json.dumps(obj),\n-\t\t\t{ 'Authorization' : self.authhdr,\n-\t\t\t  'Content-type' : 'application/json' })\n+\t\ttry:\n+\t\t\tself.conn.request('POST', '/', json.dumps(obj),\n+\t\t\t\t{ 'Authorization' : self.authhdr,\n+\t\t\t\t  'Content-type' : 'application/json' })\n+\t\texcept ConnectionRefusedError:\n+\t\t\tprint('RPC connection refused. Check RPC settings and the server status.',\n+\t\t\t      file=sys.stderr)\n+\t\t\treturn None\n \n \t\tresp = self.conn.getresponse()\n \t\tif resp is None:\n \t\t\tprint(\"JSON-RPC: no response\", file=sys.stderr)\n \t\t\treturn None\n \n-\t\tbody = resp.read()\n+\t\tbody = resp.read().decode('utf-8')\n \t\tresp_obj = json.loads(body)\n \t\treturn resp_obj\n \n@@ -64,16 +80,29 @@ def get_block_hashes(settings, max_blocks_per_call=10000):\n \t\t\tbatch.append(rpc.build_request(x, 'getblockhash', [height + x]))\n \n \t\treply = rpc.execute(batch)\n+\t\tif reply is None:\n+\t\t\tprint('Cannot continue. Program will halt.')\n+\t\t\treturn None\n \n \t\tfor x,resp_obj in enumerate(reply):\n \t\t\tif rpc.response_is_error(resp_obj):\n \t\t\t\tprint('JSON-RPC: error at height', height+x, ': ', resp_obj['error'], file=sys.stderr)\n-\t\t\t\texit(1)\n+\t\t\t\tsys.exit(1)\n \t\t\tassert(resp_obj['id'] == x) # assume replies are in-sequence\n+\t\t\tif settings['rev_hash_bytes'] == 'true':\n+\t\t\t\tresp_obj['result'] = hex_switchEndian(resp_obj['result'])\n \t\t\tprint(resp_obj['result'])\n \n \t\theight += num_blocks\n \n+def get_rpc_cookie():\n+\t# Open the cookie file\n+\twith open(os.path.join(os.path.expanduser(settings['datadir']), '.cookie'), 'r') as f:\n+\t\tcombined = f.readline()\n+\t\tcombined_split = combined.split(\":\")\n+\t\tsettings['rpcuser'] = combined_split[0]\n+\t\tsettings['rpcpassword'] = combined_split[1]\n+\n if __name__ == '__main__':\n \tif len(sys.argv) != 2:\n \t\tprint(\"Usage: linearize-hashes.py CONFIG-FILE\")\n@@ -101,13 +130,28 @@ def get_block_hashes(settings, max_blocks_per_call=10000):\n \t\tsettings['min_height'] = 0\n \tif 'max_height' not in settings:\n \t\tsettings['max_height'] = 313000\n+\tif 'rev_hash_bytes' not in settings:\n+\t\tsettings['rev_hash_bytes'] = 'false'\n+\n+\tuse_userpass = True\n+\tuse_datadir = False\n \tif 'rpcuser' not in settings or 'rpcpassword' not in settings:\n-\t\tprint(\"Missing username and/or password in cfg file\", file=stderr)\n+\t\tuse_userpass = False\n+\tif 'datadir' in settings and not use_userpass:\n+\t\tuse_datadir = True\n+\tif not use_userpass and not use_datadir:\n+\t\tprint(\"Missing datadir or username and/or password in cfg file\", file=sys.stderr)\n \t\tsys.exit(1)\n \n \tsettings['port'] = int(settings['port'])\n \tsettings['min_height'] = int(settings['min_height'])\n \tsettings['max_height'] = int(settings['max_height'])\n \n-\tget_block_hashes(settings)\n+\t# Force hash byte format setting to be lowercase to make comparisons easier.\n+\tsettings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n \n+\t# Get the rpc user and pass from the cookie if the datadir is set\n+\tif use_datadir:\n+\t\tget_rpc_cookie()\n+\n+\tget_block_hashes(settings)"
      },
      {
        "sha": "b259ea141c00afdddd95c9c78df1b856d5b86f2d",
        "filename": "contrib/macdeploy/Base.lproj/InfoPlist.strings",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/macdeploy/Base.lproj/InfoPlist.strings",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/macdeploy/Base.lproj/InfoPlist.strings",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/Base.lproj/InfoPlist.strings?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1 +0,0 @@\n-{\tCFBundleDisplayName = \"Bitcoin Core\"; CFBundleName = \"Bitcoin Core\"; }"
      },
      {
        "sha": "db9d16f1d700f18b64edafa0f8d981a680567b4d",
        "filename": "contrib/macdeploy/DS_Store",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/macdeploy/DS_Store",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/macdeploy/DS_Store",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/DS_Store?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "f88a2ae74bdb33afc2806b6403ea8c0191b096ca",
        "filename": "contrib/macdeploy/background.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/macdeploy/background.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/macdeploy/background.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.png?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "fdc4f4ca4a07ea4c6082ee1357b6ec7e8db99d72",
        "filename": "contrib/macdeploy/background.psd",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/macdeploy/background.psd",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/macdeploy/background.psd",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.psd?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "9c330af45142e011e78b4b86874ac4b3457ed457",
        "filename": "contrib/macdeploy/background.svg",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/macdeploy/background.svg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/macdeploy/background.svg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.svg?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" standalone=\"no\"?>\n+<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 20010904//EN\"\n+ \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">\n+<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1000pt\" height=\"640pt\" viewBox=\"0 0 1000 640\" preserveAspectRatio=\"xMidYMid meet\">\n+\t<!-- kate: space-indent off;\n+\tCopyright (c) 2015 The Bitcoin Core developers\n+\tDistributed under the MIT software license, see the accompanying\n+\tfile COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\t-->\n+\t<style type=\"text/css\"><![CDATA[\n+\t\ttext {\n+\t\t\tfont-family: \"Tuffy\";\n+\t\t\tfont-size: 86px;\n+\t\t\tfill: gray;\n+\t\t\ttext-anchor: middle;\n+\t\t}\n+\t]]></style>\n+\t<defs>\n+\t\t<linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n+\t\t\t<stop offset=\"0%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n+\t\t\t<stop offset=\"33%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n+\t\t\t<stop offset=\"80%\" style=\"stop-color:rgb(205,205,205);stop-opacity:1\" />\n+\t\t\t<stop offset=\"100%\" style=\"stop-color:rgb(204,204,204);stop-opacity:1\" />\n+\t\t</linearGradient>\n+\t</defs>\n+\t<rect width=\"1000\" height=\"640\" style=\"fill:url(#gradient);stroke-width:0\" />\n+\t<g transform=\"translate(500,0) scale(0.9, 1)\">\n+\t\t<text x=\"0\" y=\"114\">PACKAGE_NAME</text>\n+\t</g>\n+\t<g transform=\"translate(0.000000,640.000000) scale(0.100000,-0.100000)\"\n+\tfill=\"#000000\" stroke=\"none\">\n+\t\t<path d=\"M4995 3705 c-24 -23 -25 -29 -25 -165 l0 -140 -306 0 -306 0 -29 -29 c-29 -29 -29 -31 -29 -141 0 -110 0 -112 29 -141 l29 -29 306 0 306 0 0 -140 c0 -136 1 -142 25 -165 16 -17 35 -25 57 -25 29 0 72 32 306 226 180 149 274 233 278 250 13 53 -2 70 -278 299 -235 194 -277 225 -306 225 -22 0 -41 -8 -57 -25z\" fixlter=\"url(#glow)\"/>\n+\t</g>\n+</svg>"
      },
      {
        "sha": "4b44ac672e627be82bb9b74dac0016057b11c126",
        "filename": "contrib/macdeploy/background.tiff",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/macdeploy/background.tiff",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/macdeploy/background.tiff",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.tiff?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "4858183f75c382a9b8d75ae4fb8a74abd830615f",
        "filename": "contrib/macdeploy/background@2x.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/macdeploy/background@2x.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/macdeploy/background@2x.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background@2x.png?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "e6ecabace1a429b85af0551b9c4622118450c221",
        "filename": "contrib/macdeploy/custom_dsstore.py",
        "status": "added",
        "additions": 60,
        "deletions": 0,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/macdeploy/custom_dsstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/macdeploy/custom_dsstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/custom_dsstore.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,60 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+from __future__ import division,print_function,unicode_literals\n+import biplist\n+from ds_store import DSStore\n+from mac_alias import Alias\n+import sys\n+\n+output_file = sys.argv[1]\n+package_name_ns = sys.argv[2]\n+\n+ds = DSStore.open(output_file, 'w+')\n+ds['.']['bwsp'] = {\n+    'ShowStatusBar': False,\n+    'WindowBounds': b'{{300, 280}, {500, 343}}',\n+    'ContainerShowSidebar': False,\n+    'SidebarWidth': 0,\n+    'ShowTabView': False,\n+    'PreviewPaneVisibility': False,\n+    'ShowToolbar': False,\n+    'ShowSidebar': False,\n+    'ShowPathbar': True\n+}\n+\n+icvp = {\n+    'gridOffsetX': 0.0,\n+    'textSize': 12.0,\n+    'viewOptionsVersion': 1,\n+    'backgroundImageAlias': b'\\x00\\x00\\x00\\x00\\x02\\x1e\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd1\\x94\\\\\\xb0H+\\x00\\x05\\x00\\x00\\x00\\x98\\x0fbackground.tiff\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x99\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x00\\x00\\r\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b.background\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x98\\x00\\x0e\\x00 \\x00\\x0f\\x00b\\x00a\\x00c\\x00k\\x00g\\x00r\\x00o\\x00u\\x00n\\x00d\\x00.\\x00t\\x00i\\x00f\\x00f\\x00\\x0f\\x00\\x02\\x00\\x00\\x00\\x12\\x00\\x1c/.background/background.tiff\\x00\\x14\\x01\\x06\\x00\\x00\\x00\\x00\\x01\\x06\\x00\\x02\\x00\\x00\\x0cMacintosh HD\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xce\\x97\\xab\\xc3H+\\x00\\x00\\x01\\x88[\\x88\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02u\\xab\\x8d\\xd1\\x94\\\\\\xb0devrddsk\\xff\\xff\\xff\\xff\\x00\\x00\\t \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07bitcoin\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xce\\x97\\xab\\xc3\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x01\\x00\\x14\\x01\\x88[\\x88\\x00\\x16\\xa9\\t\\x00\\x08\\xfaR\\x00\\x08\\xfaQ\\x00\\x02d\\x8e\\x00\\x0e\\x00\\x02\\x00\\x00\\x00\\x0f\\x00\\x1a\\x00\\x0c\\x00M\\x00a\\x00c\\x00i\\x00n\\x00t\\x00o\\x00s\\x00h\\x00 \\x00H\\x00D\\x00\\x13\\x00\\x01/\\x00\\x00\\x15\\x00\\x02\\x00\\x14\\xff\\xff\\x00\\x00\\xff\\xff\\x00\\x00',\n+    'backgroundColorBlue': 1.0,\n+    'iconSize': 96.0,\n+    'backgroundColorGreen': 1.0,\n+    'arrangeBy': 'none',\n+    'showIconPreview': True,\n+    'gridSpacing': 100.0,\n+    'gridOffsetY': 0.0,\n+    'showItemInfo': False,\n+    'labelOnBottom': True,\n+    'backgroundType': 2,\n+    'backgroundColorRed': 1.0\n+}\n+alias = Alias.from_bytes(icvp['backgroundImageAlias'])\n+alias.volume.name = package_name_ns\n+alias.volume.posix_path = '/Volumes/' + package_name_ns\n+alias.volume.disk_image_alias.target.filename = package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00bitcoinuser:\\x00Documents:\\x00bitcoin:\\x00bitcoin:\\x00' + package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.posix_path = 'Users/bitcoinuser/Documents/bitcoin/bitcoin/' + package_name_ns + '.temp.dmg'\n+alias.target.carbon_path = package_name_ns + ':.background:\\x00background.tiff'\n+icvp['backgroundImageAlias'] = biplist.Data(alias.to_bytes())\n+ds['.']['icvp'] = icvp\n+\n+ds['.']['vSrn'] = ('long', 1)\n+\n+ds['Applications']['Iloc'] = (370, 156)\n+ds['Bitcoin-Qt.app']['Iloc'] = (128, 156)\n+\n+ds.flush()\n+ds.close()"
      },
      {
        "sha": "91674a92e6fa6196c0190b6bf42fcdf32cf7d42f",
        "filename": "contrib/macdeploy/detached-sig-apply.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/macdeploy/detached-sig-apply.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/macdeploy/detached-sig-apply.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-apply.sh?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,4 +1,8 @@\n #!/bin/sh\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n set -e\n \n UNSIGNED=\"$1\""
      },
      {
        "sha": "7f017bb4f1c961714837b27424aa3f31ecf19964",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,12 +1,16 @@\n #!/bin/sh\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n set -e\n \n ROOTDIR=dist\n BUNDLE=\"${ROOTDIR}/Bitcoin-Qt.app\"\n CODESIGN=codesign\n TEMPDIR=sign.temp\n TEMPLIST=${TEMPDIR}/signatures.txt\n-OUT=signature.tar.gz\n+OUT=signature-osx.tar.gz\n OUTROOT=osx\n \n if [ ! -n \"$1\" ]; then"
      },
      {
        "sha": "ff9fbd58df0718d5bb123c927a6488ef5eef2ce0",
        "filename": "contrib/macdeploy/extract-osx-sdk.sh",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/macdeploy/extract-osx-sdk.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/macdeploy/extract-osx-sdk.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/extract-osx-sdk.sh?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,33 @@\n+#!/bin/bash\n+# Copyright (c) 2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+set -e\n+\n+INPUTFILE=\"Xcode_7.3.1.dmg\"\n+HFSFILENAME=\"5.hfs\"\n+SDKDIR=\"Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk\"\n+\n+7z x \"${INPUTFILE}\" \"${HFSFILENAME}\"\n+SDKNAME=\"$(basename \"${SDKDIR}\")\"\n+SDKDIRINODE=$(ifind -n \"${SDKDIR}\" \"${HFSFILENAME}\")\n+fls \"${HFSFILENAME}\" -rpF ${SDKDIRINODE} |\n+ while read type inode filename; do\n+\tinode=\"${inode::-1}\"\n+\tif [ \"${filename:0:14}\" = \"usr/share/man/\" ]; then\n+\t\tcontinue\n+\tfi\n+\tfilename=\"${SDKNAME}/$filename\"\n+\techo \"Extracting $filename ...\"\n+\tmkdir -p \"$(dirname \"$filename\")\"\n+\tif [ \"$type\" = \"l/l\" ]; then\n+\t\tln -s \"$(icat \"${HFSFILENAME}\" $inode)\" \"$filename\"\n+\telse\n+\t\ticat \"${HFSFILENAME}\" $inode >\"$filename\"\n+\tfi\n+done\n+echo \"Building ${SDKNAME}.tar.gz ...\"\n+MTIME=\"$(istat \"${HFSFILENAME}\" \"${SDKDIRINODE}\" | perl -nle 'm/Content Modified:\\s+(.*?)\\s\\(/ && print $1')\"\n+find \"${SDKNAME}\" | sort | tar --no-recursion --mtime=\"${MTIME}\" --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > \"${SDKNAME}.tar.gz\"\n+echo 'All done!'"
      },
      {
        "sha": "23a568ad13aeb91d79e51de4283b0959c4baf027",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 88,
        "deletions": 82,
        "changes": 170,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python\n-\n+from __future__ import division, print_function, unicode_literals\n #\n # Copyright (C) 2011  Patrick \"p2k\" Schneider <me@p2k-network.org>\n #\n@@ -201,7 +201,7 @@ class DeploymentInfo(object):\n \n def getFrameworks(binaryPath, verbose):\n     if verbose >= 3:\n-        print \"Inspecting with otool: \" + binaryPath\n+        print(\"Inspecting with otool: \" + binaryPath)\n     otoolbin=os.getenv(\"OTOOL\", \"otool\")\n     otool = subprocess.Popen([otoolbin, \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n     o_stdout, o_stderr = otool.communicate()\n@@ -210,8 +210,8 @@ def getFrameworks(binaryPath, verbose):\n             sys.stderr.write(o_stderr)\n             sys.stderr.flush()\n             raise RuntimeError(\"otool failed with return code %d\" % otool.returncode)\n-    \n-    otoolLines = o_stdout.split(\"\\n\")\n+\n+    otoolLines = o_stdout.decode().split(\"\\n\")\n     otoolLines.pop(0) # First line is the inspected binary\n     if \".framework\" in binaryPath or binaryPath.endswith(\".dylib\"):\n         otoolLines.pop(0) # Frameworks and dylibs list themselves as a dependency.\n@@ -222,8 +222,8 @@ def getFrameworks(binaryPath, verbose):\n         info = FrameworkInfo.fromOtoolLibraryLine(line.strip())\n         if info is not None:\n             if verbose >= 3:\n-                print \"Found framework:\"\n-                print info\n+                print(\"Found framework:\")\n+                print(info)\n             libraries.append(info)\n     \n     return libraries\n@@ -234,24 +234,24 @@ def runInstallNameTool(action, *args):\n \n def changeInstallName(oldName, newName, binaryPath, verbose):\n     if verbose >= 3:\n-        print \"Using install_name_tool:\"\n-        print \" in\", binaryPath\n-        print \" change reference\", oldName\n-        print \" to\", newName\n+        print(\"Using install_name_tool:\")\n+        print(\" in\", binaryPath)\n+        print(\" change reference\", oldName)\n+        print(\" to\", newName)\n     runInstallNameTool(\"change\", oldName, newName, binaryPath)\n \n def changeIdentification(id, binaryPath, verbose):\n     if verbose >= 3:\n-        print \"Using install_name_tool:\"\n-        print \" change identification in\", binaryPath\n-        print \" to\", id\n+        print(\"Using install_name_tool:\")\n+        print(\" change identification in\", binaryPath)\n+        print(\" to\", id)\n     runInstallNameTool(\"id\", id, binaryPath)\n \n def runStrip(binaryPath, verbose):\n     stripbin=os.getenv(\"STRIP\", \"strip\")\n     if verbose >= 3:\n-        print \"Using strip:\"\n-        print \" stripped\", binaryPath\n+        print(\"Using strip:\")\n+        print(\" stripped\", binaryPath)\n     subprocess.check_call([stripbin, \"-x\", binaryPath])\n \n def copyFramework(framework, path, verbose):\n@@ -274,8 +274,8 @@ def copyFramework(framework, path, verbose):\n     \n     shutil.copy2(fromPath, toPath)\n     if verbose >= 3:\n-        print \"Copied:\", fromPath\n-        print \" to:\", toPath\n+        print(\"Copied:\", fromPath)\n+        print(\" to:\", toPath)\n \n     permissions = os.stat(toPath)\n     if not permissions.st_mode & stat.S_IWRITE:\n@@ -288,32 +288,31 @@ def copyFramework(framework, path, verbose):\n         if not os.path.exists(linkfrom):\n             os.symlink(linkto, linkfrom)\n             if verbose >= 2:\n-                print \"Linked:\", linkfrom, \"->\", linkto\n+                print(\"Linked:\", linkfrom, \"->\", linkto)\n         fromResourcesDir = framework.sourceResourcesDirectory\n         if os.path.exists(fromResourcesDir):\n             toResourcesDir = os.path.join(path, framework.destinationResourcesDirectory)\n             shutil.copytree(fromResourcesDir, toResourcesDir, symlinks=True)\n             if verbose >= 3:\n-                print \"Copied resources:\", fromResourcesDir\n-                print \" to:\", toResourcesDir\n+                print(\"Copied resources:\", fromResourcesDir)\n+                print(\" to:\", toResourcesDir)\n         fromContentsDir = framework.sourceVersionContentsDirectory\n         if not os.path.exists(fromContentsDir):\n             fromContentsDir = framework.sourceContentsDirectory\n         if os.path.exists(fromContentsDir):\n             toContentsDir = os.path.join(path, framework.destinationVersionContentsDirectory)\n             shutil.copytree(fromContentsDir, toContentsDir, symlinks=True)\n-            contentslinkfrom = os.path.join(path, framework.destinationContentsDirectory)\n             if verbose >= 3:\n-                print \"Copied Contents:\", fromContentsDir\n-                print \" to:\", toContentsDir\n+                print(\"Copied Contents:\", fromContentsDir)\n+                print(\" to:\", toContentsDir)\n     elif framework.frameworkName.startswith(\"libQtGui\"): # Copy qt_menu.nib (applies to non-framework layout)\n         qtMenuNibSourcePath = os.path.join(framework.frameworkDirectory, \"Resources\", \"qt_menu.nib\")\n         qtMenuNibDestinationPath = os.path.join(path, \"Contents\", \"Resources\", \"qt_menu.nib\")\n         if os.path.exists(qtMenuNibSourcePath) and not os.path.exists(qtMenuNibDestinationPath):\n             shutil.copytree(qtMenuNibSourcePath, qtMenuNibDestinationPath, symlinks=True)\n             if verbose >= 3:\n-                print \"Copied for libQtGui:\", qtMenuNibSourcePath\n-                print \" to:\", qtMenuNibDestinationPath\n+                print(\"Copied for libQtGui:\", qtMenuNibSourcePath)\n+                print(\" to:\", qtMenuNibDestinationPath)\n     \n     return toPath\n \n@@ -326,21 +325,21 @@ def deployFrameworks(frameworks, bundlePath, binaryPath, strip, verbose, deploym\n         deploymentInfo.deployedFrameworks.append(framework.frameworkName)\n         \n         if verbose >= 2:\n-            print \"Processing\", framework.frameworkName, \"...\"\n+            print(\"Processing\", framework.frameworkName, \"...\")\n         \n         # Get the Qt path from one of the Qt frameworks\n         if deploymentInfo.qtPath is None and framework.isQtFramework():\n             deploymentInfo.detectQtPath(framework.frameworkDirectory)\n         \n         if framework.installName.startswith(\"@executable_path\") or framework.installName.startswith(bundlePath):\n             if verbose >= 2:\n-                print framework.frameworkName, \"already deployed, skipping.\"\n+                print(framework.frameworkName, \"already deployed, skipping.\")\n             continue\n         \n         # install_name_tool the new id into the binary\n         changeInstallName(framework.installName, framework.deployedInstallName, binaryPath, verbose)\n         \n-        # Copy farmework to app bundle.\n+        # Copy framework to app bundle.\n         deployedBinaryPath = copyFramework(framework, bundlePath, verbose)\n         # Skip the rest if already was deployed.\n         if deployedBinaryPath is None:\n@@ -366,7 +365,7 @@ def deployFrameworks(frameworks, bundlePath, binaryPath, strip, verbose, deploym\n def deployFrameworksForAppBundle(applicationBundle, strip, verbose):\n     frameworks = getFrameworks(applicationBundle.binaryPath, verbose)\n     if len(frameworks) == 0 and verbose >= 1:\n-        print \"Warning: Could not find any external frameworks to deploy in %s.\" % (applicationBundle.path)\n+        print(\"Warning: Could not find any external frameworks to deploy in %s.\" % (applicationBundle.path))\n         return DeploymentInfo()\n     else:\n         return deployFrameworks(frameworks, applicationBundle.path, applicationBundle.binaryPath, strip, verbose)\n@@ -444,7 +443,7 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n     \n     for pluginDirectory, pluginName in plugins:\n         if verbose >= 2:\n-            print \"Processing plugin\", os.path.join(pluginDirectory, pluginName), \"...\"\n+            print(\"Processing plugin\", os.path.join(pluginDirectory, pluginName), \"...\")\n         \n         sourcePath = os.path.join(deploymentInfo.pluginPath, pluginDirectory, pluginName)\n         destinationDirectory = os.path.join(appBundleInfo.pluginPath, pluginDirectory)\n@@ -454,8 +453,8 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n         destinationPath = os.path.join(destinationDirectory, pluginName)\n         shutil.copy2(sourcePath, destinationPath)\n         if verbose >= 3:\n-            print \"Copied:\", sourcePath\n-            print \" to:\", destinationPath\n+            print(\"Copied:\", sourcePath)\n+            print(\" to:\", destinationPath)\n         \n         if strip:\n             runStrip(destinationPath, verbose)\n@@ -492,9 +491,10 @@ ap.add_argument(\"-no-strip\", dest=\"strip\", action=\"store_false\", default=True, h\n ap.add_argument(\"-sign\", dest=\"sign\", action=\"store_true\", default=False, help=\"sign .app bundle with codesign tool\")\n ap.add_argument(\"-dmg\", nargs=\"?\", const=\"\", metavar=\"basename\", help=\"create a .dmg disk image; if basename is not specified, a camel-cased version of the app name is used\")\n ap.add_argument(\"-fancy\", nargs=1, metavar=\"plist\", default=[], help=\"make a fancy looking disk image using the given plist file with instructions; requires -dmg to work\")\n-ap.add_argument(\"-add-qt-tr\", nargs=1, metavar=\"languages\", default=[], help=\"add Qt translation files to the bundle's ressources; the language list must be separated with commas, not with whitespace\")\n+ap.add_argument(\"-add-qt-tr\", nargs=1, metavar=\"languages\", default=[], help=\"add Qt translation files to the bundle's resources; the language list must be separated with commas, not with whitespace\")\n ap.add_argument(\"-translations-dir\", nargs=1, metavar=\"path\", default=None, help=\"Path to Qt's translation files\")\n ap.add_argument(\"-add-resources\", nargs=\"+\", metavar=\"path\", default=[], help=\"list of additional files or folders to be copied into the bundle's resources; must be the last argument\")\n+ap.add_argument(\"-volname\", nargs=1, metavar=\"volname\", default=[], help=\"custom volume name for dmg\")\n \n config = ap.parse_args()\n \n@@ -524,7 +524,7 @@ if config.translations_dir and config.translations_dir[0]:\n \n for p in config.add_resources:\n     if verbose >= 3:\n-        print \"Checking for \\\"%s\\\"...\" % p\n+        print(\"Checking for \\\"%s\\\"...\" % p)\n     if not os.path.exists(p):\n         if verbose >= 1:\n             sys.stderr.write(\"Error: Could not find additional resource file \\\"%s\\\"\\n\" % (p))\n@@ -534,7 +534,7 @@ for p in config.add_resources:\n \n if len(config.fancy) == 1:\n     if verbose >= 3:\n-        print \"Fancy: Importing plistlib...\"\n+        print(\"Fancy: Importing plistlib...\")\n     try:\n         import plistlib\n     except ImportError:\n@@ -544,7 +544,7 @@ if len(config.fancy) == 1:\n     \n     p = config.fancy[0]\n     if verbose >= 3:\n-        print \"Fancy: Loading \\\"%s\\\"...\" % p\n+        print(\"Fancy: Loading \\\"%s\\\"...\" % p)\n     if not os.path.exists(p):\n         if verbose >= 1:\n             sys.stderr.write(\"Error: Could not find fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n@@ -558,23 +558,23 @@ if len(config.fancy) == 1:\n         sys.exit(1)\n     \n     try:\n-        assert not fancy.has_key(\"window_bounds\") or (isinstance(fancy[\"window_bounds\"], list) and len(fancy[\"window_bounds\"]) == 4)\n-        assert not fancy.has_key(\"background_picture\") or isinstance(fancy[\"background_picture\"], str)\n-        assert not fancy.has_key(\"icon_size\") or isinstance(fancy[\"icon_size\"], int)\n-        assert not fancy.has_key(\"applications_symlink\") or isinstance(fancy[\"applications_symlink\"], bool)\n-        if fancy.has_key(\"items_position\"):\n+        assert \"window_bounds\" not in fancy or (isinstance(fancy[\"window_bounds\"], list) and len(fancy[\"window_bounds\"]) == 4)\n+        assert \"background_picture\" not in fancy or isinstance(fancy[\"background_picture\"], str)\n+        assert \"icon_size\" not in fancy or isinstance(fancy[\"icon_size\"], int)\n+        assert \"applications_symlink\" not in fancy or isinstance(fancy[\"applications_symlink\"], bool)\n+        if \"items_position\" in fancy:\n             assert isinstance(fancy[\"items_position\"], dict)\n-            for key, value in fancy[\"items_position\"].iteritems():\n+            for key, value in fancy[\"items_position\"].items():\n                 assert isinstance(value, list) and len(value) == 2 and isinstance(value[0], int) and isinstance(value[1], int)\n     except:\n         if verbose >= 1:\n             sys.stderr.write(\"Error: Bad format of fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n         sys.exit(1)\n     \n-    if fancy.has_key(\"background_picture\"):\n+    if \"background_picture\" in fancy:\n         bp = fancy[\"background_picture\"]\n         if verbose >= 3:\n-            print \"Fancy: Resolving background picture \\\"%s\\\"...\" % bp\n+            print(\"Fancy: Resolving background picture \\\"%s\\\"...\" % bp)\n         if not os.path.exists(bp):\n             bp = os.path.join(os.path.dirname(p), bp)\n             if not os.path.exists(bp):\n@@ -590,18 +590,25 @@ else:\n \n if os.path.exists(\"dist\"):\n     if verbose >= 2:\n-        print \"+ Removing old dist folder +\"\n+        print(\"+ Removing old dist folder +\")\n     \n     shutil.rmtree(\"dist\")\n \n # ------------------------------------------------\n \n+if len(config.volname) == 1:\n+    volname = config.volname[0]\n+else:\n+    volname = app_bundle_name\n+\n+# ------------------------------------------------\n+\n target = os.path.join(\"dist\", \"Bitcoin-Qt.app\")\n \n if verbose >= 2:\n-    print \"+ Copying source bundle +\"\n+    print(\"+ Copying source bundle +\")\n if verbose >= 3:\n-    print app_bundle, \"->\", target\n+    print(app_bundle, \"->\", target)\n \n os.mkdir(\"dist\")\n shutil.copytree(app_bundle, target, symlinks=True)\n@@ -611,7 +618,7 @@ applicationBundle = ApplicationBundleInfo(target)\n # ------------------------------------------------\n \n if verbose >= 2:\n-    print \"+ Deploying frameworks +\"\n+    print(\"+ Deploying frameworks +\")\n \n try:\n     deploymentInfo = deployFrameworksForAppBundle(applicationBundle, config.strip, verbose)\n@@ -630,7 +637,7 @@ except RuntimeError as e:\n \n if config.plugins:\n     if verbose >= 2:\n-        print \"+ Deploying plugins +\"\n+        print(\"+ Deploying plugins +\")\n     \n     try:\n         deployPlugins(applicationBundle, deploymentInfo, config.strip, verbose)\n@@ -656,7 +663,7 @@ else:\n     for lng_file in add_qt_tr:\n         p = os.path.join(qt_tr_dir, lng_file)\n         if verbose >= 3:\n-            print \"Checking for \\\"%s\\\"...\" % p\n+            print(\"Checking for \\\"%s\\\"...\" % p)\n         if not os.path.exists(p):\n             if verbose >= 1:\n                 sys.stderr.write(\"Error: Could not find Qt translation file \\\"%s\\\"\\n\" % (lng_file))\n@@ -665,31 +672,30 @@ else:\n # ------------------------------------------------\n \n if verbose >= 2:\n-    print \"+ Installing qt.conf +\"\n+    print(\"+ Installing qt.conf +\")\n \n-f = open(os.path.join(applicationBundle.resourcesPath, \"qt.conf\"), \"wb\")\n-f.write(qt_conf)\n-f.close()\n+with open(os.path.join(applicationBundle.resourcesPath, \"qt.conf\"), \"wb\") as f:\n+    f.write(qt_conf.encode())\n \n # ------------------------------------------------\n \n if len(add_qt_tr) > 0 and verbose >= 2:\n-    print \"+ Adding Qt translations +\"\n+    print(\"+ Adding Qt translations +\")\n \n for lng_file in add_qt_tr:\n     if verbose >= 3:\n-        print os.path.join(qt_tr_dir, lng_file), \"->\", os.path.join(applicationBundle.resourcesPath, lng_file)\n+        print(os.path.join(qt_tr_dir, lng_file), \"->\", os.path.join(applicationBundle.resourcesPath, lng_file))\n     shutil.copy2(os.path.join(qt_tr_dir, lng_file), os.path.join(applicationBundle.resourcesPath, lng_file))\n \n # ------------------------------------------------\n \n if len(config.add_resources) > 0 and verbose >= 2:\n-    print \"+ Adding additional resources +\"\n+    print(\"+ Adding additional resources +\")\n \n for p in config.add_resources:\n     t = os.path.join(applicationBundle.resourcesPath, os.path.basename(p))\n     if verbose >= 3:\n-        print p, \"->\", t\n+        print(p, \"->\", t)\n     if os.path.isdir(p):\n         shutil.copytree(p, t, symlinks=True)\n     else:\n@@ -698,10 +704,10 @@ for p in config.add_resources:\n # ------------------------------------------------\n \n if config.sign and 'CODESIGNARGS' not in os.environ:\n-    print \"You must set the CODESIGNARGS environment variable. Skipping signing.\"\n+    print(\"You must set the CODESIGNARGS environment variable. Skipping signing.\")\n elif config.sign:\n     if verbose >= 1:\n-        print \"Code-signing app bundle %s\"%(target,)\n+        print(\"Code-signing app bundle %s\"%(target,))\n     subprocess.check_call(\"codesign --force %s %s\"%(os.environ['CODESIGNARGS'], target), shell=True)\n \n # ------------------------------------------------\n@@ -726,7 +732,7 @@ if config.dmg is not None:\n \n     def runHDIUtil(verb, image_basename, **kwargs):\n         hdiutil_args = [\"hdiutil\", verb, image_basename + \".dmg\"]\n-        if kwargs.has_key(\"capture_stdout\"):\n+        if \"capture_stdout\" in kwargs:\n             del kwargs[\"capture_stdout\"]\n             run = subprocess.check_output\n         else:\n@@ -736,7 +742,7 @@ if config.dmg is not None:\n                 hdiutil_args.append(\"-verbose\")\n             run = subprocess.check_call\n         \n-        for key, value in kwargs.iteritems():\n+        for key, value in kwargs.items():\n             hdiutil_args.append(\"-\" + key)\n             if not value is True:\n                 hdiutil_args.append(str(value))\n@@ -745,9 +751,9 @@ if config.dmg is not None:\n     \n     if verbose >= 2:\n         if fancy is None:\n-            print \"+ Creating .dmg disk image +\"\n+            print(\"+ Creating .dmg disk image +\")\n         else:\n-            print \"+ Preparing .dmg disk image +\"\n+            print(\"+ Preparing .dmg disk image +\")\n     \n     if config.dmg != \"\":\n         dmg_name = config.dmg\n@@ -757,44 +763,44 @@ if config.dmg is not None:\n     \n     if fancy is None:\n         try:\n-            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=\"Bitcoin-Core\", ov=True)\n+            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=volname, ov=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n     else:\n         if verbose >= 3:\n-            print \"Determining size of \\\"dist\\\"...\"\n+            print(\"Determining size of \\\"dist\\\"...\")\n         size = 0\n         for path, dirs, files in os.walk(\"dist\"):\n             for file in files:\n                 size += os.path.getsize(os.path.join(path, file))\n         size += int(size * 0.15)\n         \n         if verbose >= 3:\n-            print \"Creating temp image for modification...\"\n+            print(\"Creating temp image for modification...\")\n         try:\n-            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=\"Bitcoin-Core\", ov=True)\n+            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=volname, ov=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n         \n         if verbose >= 3:\n-            print \"Attaching temp image...\"\n+            print(\"Attaching temp image...\")\n         try:\n             output = runHDIUtil(\"attach\", dmg_name + \".temp\", readwrite=True, noverify=True, noautoopen=True, capture_stdout=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n         \n-        m = re.search(\"/Volumes/(.+$)\", output)\n+        m = re.search(\"/Volumes/(.+$)\", output.decode())\n         disk_root = m.group(0)\n         disk_name = m.group(1)\n         \n         if verbose >= 2:\n-            print \"+ Applying fancy settings +\"\n+            print(\"+ Applying fancy settings +\")\n         \n-        if fancy.has_key(\"background_picture\"):\n+        if \"background_picture\" in fancy:\n             bg_path = os.path.join(disk_root, \".background\", os.path.basename(fancy[\"background_picture\"]))\n             os.mkdir(os.path.dirname(bg_path))\n             if verbose >= 3:\n-                print fancy[\"background_picture\"], \"->\", bg_path\n+                print(fancy[\"background_picture\"], \"->\", bg_path)\n             shutil.copy2(fancy[\"background_picture\"], bg_path)\n         else:\n             bg_path = None\n@@ -831,21 +837,21 @@ if config.dmg is not None:\n \n         itemscript = Template('set position of item \"${item}\" of container window to {${position}}')\n         items_positions = []\n-        if fancy.has_key(\"items_position\"):\n-            for name, position in fancy[\"items_position\"].iteritems():\n+        if \"items_position\" in fancy:\n+            for name, position in fancy[\"items_position\"].items():\n                 params = { \"item\" : name, \"position\" : \",\".join([str(p) for p in position]) }\n                 items_positions.append(itemscript.substitute(params))\n \n         params = {\n-            \"disk\" : \"Bitcoin-Core\",\n+            \"disk\" : volname,\n             \"window_bounds\" : \"300,300,800,620\",\n             \"icon_size\" : \"96\",\n             \"background_commands\" : \"\",\n             \"items_positions\" : \"\\n                   \".join(items_positions)\n             }\n-        if fancy.has_key(\"window_bounds\"):\n-            params[\"window.bounds\"] = \",\".join([str(p) for p in fancy[\"window_bounds\"]])\n-        if fancy.has_key(\"icon_size\"):\n+        if \"window_bounds\" in fancy:\n+            params[\"window_bounds\"] = \",\".join([str(p) for p in fancy[\"window_bounds\"]])\n+        if \"icon_size\" in fancy:\n             params[\"icon_size\"] = str(fancy[\"icon_size\"])\n         if bg_path is not None:\n             # Set background file, then call SetFile to make it invisible.\n@@ -860,12 +866,12 @@ if config.dmg is not None:\n             print(s)\n \n         p = subprocess.Popen(['osascript', '-'], stdin=subprocess.PIPE)\n-        p.communicate(input=s)\n+        p.communicate(input=s.encode('utf-8'))\n         if p.returncode:\n             print(\"Error running osascript.\")\n \n         if verbose >= 2:\n-            print \"+ Finalizing .dmg disk image +\"\n+            print(\"+ Finalizing .dmg disk image +\")\n             time.sleep(5)\n         \n         try:\n@@ -878,6 +884,6 @@ if config.dmg is not None:\n # ------------------------------------------------\n \n if verbose >= 2:\n-    print \"+ Done +\"\n+    print(\"+ Done +\")\n \n sys.exit(0)"
      },
      {
        "sha": "0ded87c58f4ee721058f914682a283f9f9a69787",
        "filename": "contrib/qos/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/qos/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/qos/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/README.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,5 +1,5 @@\n-### Qos ###\n+### QoS (Quality of service) ###\n \n-This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Bitcoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN (defined as 192.168.x.x).\n+This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Bitcoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN.\n \n This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it."
      },
      {
        "sha": "0d1dd65b4f58f1fdd57c268c508938f6287e8311",
        "filename": "contrib/qos/tc.sh",
        "status": "modified",
        "additions": 25,
        "deletions": 7,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,11 +1,17 @@\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n #network interface on which to limit traffic\n IF=\"eth0\"\n #limit of the network interface in question\n LINKCEIL=\"1gbit\"\n #limit outbound Bitcoin protocol traffic to this rate\n LIMIT=\"160kbit\"\n-#defines the address space for which you wish to disable rate limiting\n-LOCALNET=\"192.168.0.0/16\"\n+#defines the IPv4 address space for which you wish to disable rate limiting\n+LOCALNET_V4=\"192.168.0.0/16\"\n+#defines the IPv6 address space for which you wish to disable rate limiting\n+LOCALNET_V6=\"fe80::/10\"\n \n #delete existing rules\n tc qdisc del dev ${IF} root\n@@ -24,6 +30,12 @@ tc class add dev ${IF} parent 1:1 classid 1:11 htb rate ${LIMIT} ceil ${LIMIT} p\n tc filter add dev ${IF} parent 1: protocol ip prio 1 handle 1 fw classid 1:10\n tc filter add dev ${IF} parent 1: protocol ip prio 2 handle 2 fw classid 1:11\n \n+if [ ! -z \"${LOCALNET_V6}\" ] ; then\n+\t# v6 cannot have the same priority value as v4\n+\ttc filter add dev ${IF} parent 1: protocol ipv6 prio 3 handle 1 fw classid 1:10\n+\ttc filter add dev ${IF} parent 1: protocol ipv6 prio 4 handle 2 fw classid 1:11\n+fi\n+\n #delete any existing rules\n #disable for now\n #ret=0\n@@ -33,9 +45,15 @@ tc filter add dev ${IF} parent 1: protocol ip prio 2 handle 2 fw classid 1:11\n #done\n \n #limit outgoing traffic to and from port 8333. but not when dealing with a host on the local network\n-#\t(defined by $LOCALNET)\n-#\t--set-mark marks packages matching these criteria with the number \"2\"\n-#\tthese packages are filtered by the tc filter with \"handle 2\"\n+#\t(defined by $LOCALNET_V4 and $LOCALNET_V6)\n+#\t--set-mark marks packages matching these criteria with the number \"2\" (v4)\n+#\t--set-mark marks packages matching these criteria with the number \"4\" (v6)\n+#\tthese packets are filtered by the tc filter with \"handle 2\"\n #\tthis filter sends the packages into the 1:11 class, and this class is limited to ${LIMIT}\n-iptables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET} -j MARK --set-mark 0x2\n-iptables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET} -j MARK --set-mark 0x2\n+iptables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n+iptables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n+\n+if [ ! -z \"${LOCALNET_V6}\" ] ; then\n+\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n+\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n+fi"
      },
      {
        "sha": "fd8a8b71298c6b5878c83842cd3f68804560a2e2",
        "filename": "contrib/qt_translations.py",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/qt_translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/qt_translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qt_translations.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,22 +0,0 @@\n-#!/usr/bin/env python\n-\n-# Helpful little script that spits out a comma-separated list of\n-# language codes for Qt icons that should be included\n-# in binary bitcoin distributions\n-\n-import glob\n-import os\n-import re\n-import sys\n-\n-if len(sys.argv) != 3:\n-  sys.exit(\"Usage: %s $QTDIR/translations $BITCOINDIR/src/qt/locale\"%sys.argv[0])\n-\n-d1 = sys.argv[1]\n-d2 = sys.argv[2]\n-\n-l1 = set([ re.search(r'qt_(.*).qm', f).group(1) for f in glob.glob(os.path.join(d1, 'qt_*.qm')) ])\n-l2 = set([ re.search(r'bitcoin_(.*).qm', f).group(1) for f in glob.glob(os.path.join(d2, 'bitcoin_*.qm')) ])\n-\n-print \",\".join(sorted(l1.intersection(l2)))\n-"
      },
      {
        "sha": "e1e0745fd636d7240a6eb6a20775c9d043eac826",
        "filename": "contrib/rpm/README.md",
        "status": "added",
        "additions": 185,
        "deletions": 0,
        "changes": 185,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/rpm/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/rpm/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/README.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,185 @@\n+RPM Spec File Notes\n+-------------------\n+\n+The RPM spec file provided here is for Bitcoin-Core 0.12.0 and builds on CentOS\n+7 with either the CentOS provided OpenSSL library or with LibreSSL as packaged\n+at [LibreLAMP.com](https://librelamp.com/). It should hopefully not be too\n+difficult to port the RPM spec file to most RPM based Linux distributions.\n+\n+When porting the spec file to build for a particular distribution, there are\n+some important notes.\n+\n+## Sources\n+\n+It is considered good form for all sources to reference a URL where the source\n+can be downloaded.\n+\n+Sources 0-9 should be reserved for source code tarballs. `Source0` should\n+reference the release tarball available from https://bitcoin.org/bin/ and\n+`Source1` should reference the BerkeleyDB source.\n+\n+Sources 10-99 are for source files that are maintained in the\n+[Bitcoin git repository](https://github.com/bitcoin/bitcoin) but are not part of\n+the release tarball. Most of these will reside in the `contrib` sub-directory.\n+\n+Sources 10-19 should be reserved for miscellaneous configuration files.\n+Currently only `Source10` is used, for the example `bitcoin.conf` file.\n+\n+Sources 20-29 should be reserved for man pages. Currently only `Source20`\n+through `Source23` are used.\n+\n+Sources 30-39 should be reserved for SELinux related files. Currently only\n+`Source30` through `Source32` are used. Until those files are in a tagged\n+release, the full URL specified in the RPM spec file will not work. You can get\n+them from the git repository where you retrieved this file.\n+\n+Sources 100+ are for files that are not source tarballs and are not maintained\n+in the bitcoin git repository. At present only an SVG version of the Bitcoin\n+icon is used.\n+\n+## Patches\n+\n+In general, patches should be avoided. When a packager feels a patch is\n+necessary, the packager should bring the problem to the attention of the bitcoin\n+developers so that an official fix to the issue can make it into the next\n+release.\n+\n+### Patch0 bitcoin-0.12.0-libressl.patch\n+\n+This patch is only needed if building against LibreSSL. LibreSSL is not the\n+standard TLS library on most Linux distributions. The patch will likely not be\n+needed when 0.12.1 is released, a proper fix is already in the Bitcoin git\n+master branch.\n+\n+## BuildRequires\n+\n+The packages specified in the `BuildRequires` are specified according to the\n+package naming convention currently used in CentOS 7 and EPEL for CentOS 7. You\n+may need to change some of the package names for other distributions. This is\n+most likely to be the case with the Qt packages.\n+\n+## BerkeleyDB\n+\n+The `build-unix.md` file recommends building against BerkeleyDB 4.8.30. Even if\n+that is the version your Linux distribution ships with, it probably is a good\n+idea to build Bitcoin Core against a static version of that library compiled\n+according to the instructions in the `build-unix.md` file so that any changes\n+the distribution may make in the future will not result in a problem for users.\n+\n+The problem that can exist, clients built against different versions of\n+BerkeleyDB may not be able read each other's `wallet.dat` file which can make it\n+difficult for a user to recover from backup in the event of a system failure.\n+\n+## Graphical User Interface and Qt Version\n+\n+The RPM spec file will by default build the GUI client linked against the Qt5\n+libraries. If you wish instead to link against the Qt4 libraries you need to\n+pass the switch `-D '_use_qt4 1'` at build time to the `rpmbuild` or `mock`\n+command used to build the packages.\n+\n+If you would prefer not to build the GUI at all, you can pass the switch\n+`-D '_no_gui 1'` to the `rpmbuild` or `mock` build command.\n+\n+## Desktop and KDE Files\n+\n+The desktop and KDE meta files are created in the spec file itself with the\n+`cat` command. This is done to allow easy distribution specific changes without\n+needing to use any patches. A specific timestamp is given to the files so that\n+it does not they do not appear to have been updated every time the package is\n+built. If you do make changes to them, you probably should update timestamp\n+assigned to them in the `touch` command that specifies the timestamp.\n+\n+## SVG, PNG, and XPM Icons\n+\n+The `bitcoin.svg` file is from the source listed as `Source100`. It is used as\n+the source for the PNG and XPM files. The generated PNG and XPM files are given\n+the same timestamp as the source SVG file as a means of indicating they are\n+derived from it.\n+\n+## Systemd\n+\n+This spec file assumes the target distribution uses systemd. That really only\n+matters for the `bitcoin-server` package. At this point, most RPM based\n+distributions that still receive vendor updates do in fact use systemd.\n+\n+The files to control the service are created in the RPM spec file itself using\n+the `cat` command. This is done to make it easy to modify for other\n+distributions that may implement things differently without needing to patch\n+source. A specific timestamp is given to the files so that they do not appear\n+to have been updated every time the package is built. If you do make changes to\n+them, you probably should update the timestamp assigned to them in the `touch`\n+command that specifies the timestamp.\n+\n+## SELinux\n+\n+The `bitcoin-server` package should have SELinux support. How to properly do\n+that *may* vary by distribution and version of distribution.\n+\n+The SELinux stuff in this RPM spec file *should* be correct for CentOS, RHEL,\n+and Fedora but it would be a good idea to review it before building the package\n+on other distributions.\n+\n+## Tests\n+\n+The `%check` section takes a very long time to run. If your build system has a\n+time limit for package build, you may need to make an exception for this\n+package. On CentOS 7 the `%check` section completes successfully with both\n+OpenSSL and LibreSSL, a failure really does mean something is wrong.\n+\n+## LibreSSL Build Notes\n+\n+To build against LibreSSL you will need to pass the switch\n+`-D '_use_libressl 1'` to the `rpmbuild` or `mock` command or the spec file will\n+want the OpenSSL development files.\n+\n+### LibreSSL and Boost\n+\n+LibreSSL (and some newer builds of OpenSSL) do not have support for SSLv3. This\n+can cause issues with the Boost package if the Boost package has not been\n+patched accordingly. On those distributions, you will either need to build\n+Bitcoin-Core against OpenSSL or use a patched version of Boost in the build\n+system.\n+\n+As SSLv3 is no longer safe, distributions that have not patched Boost to work\n+with TLS libraries that do not support SSLv3 should have bug reports filed\n+against the Boost package. This bug report has already been filed for RHEL 7 but\n+it may need to be filed for other distributions.\n+\n+A patch for Boost: https://github.com/boostorg/asio/pull/23/files\n+\n+## ZeroMQ\n+\n+At this time, this RPM spec file does not support the ZeroMQ build options. A\n+suitable version of ZeroMQ is not available for the platform this spec file was\n+developed on (CentOS 7).\n+\n+## Legacy Credit\n+\n+This RPM spec file is largely based upon the work of Michael Hampton at\n+[Ringing Liberty](https://www.ringingliberty.com/bitcoin/). He has been\n+packaging Bitcoin for Fedora at least since 2012.\n+\n+Most of the differences between his packaging and this package are stylistic in\n+nature. The major differences:\n+\n+1. He builds from a github tagged release rather than a release tarball. This\n+should not result in different source code.\n+\n+2. He does not build BerkeleyDB but instead uses the BerkeleyDB provided by the\n+Linux distribution. For the distributions he packages for, they currently all\n+use the same version of BerkeleyDB so that difference is *probably* just\n+academic.\n+\n+3. As of his 10.11.2 package he did not allow for building against LibreSSL,\n+specifying a build without the Qt GUI, or specifying which version of the Qt\n+libraries to use.\n+\n+4. I renamed the `bitcoin` package that contains the Qt GUI to `bitcoin-core` as\n+that appears to be how the general population refers to it, in contrast to\n+`bitcoin-xt` or `bitcoin-classic`. I wanted to make sure the general population\n+knows what they are getting when installing the GUI package.\n+\n+As far as minor differences, I generally prefer to assign the file permissions\n+in the `%files` portion of an RPM spec file rather than specifying the\n+permissions of a file during `%install` and other minor things like that\n+are largely just cosmetic."
      },
      {
        "sha": "555614a06d49ab820fce1e08f723005b26cdcb01",
        "filename": "contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin-0.12.0-libressl.patch?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,24 @@\n+diff -ur bitcoin-0.12.0.orig/src/init.cpp bitcoin-0.12.0/src/init.cpp\n+--- bitcoin-0.12.0.orig/src/init.cpp\t2015-12-31 16:00:00.000000000 -0800\n++++ bitcoin-0.12.0/src/init.cpp\t2016-02-23 06:03:47.133227757 -0800\n+@@ -1075,7 +1075,7 @@\n+     if (fPrintToDebugLog)\n+         OpenDebugLog();\n+ \n+-#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n++#if defined(LIBRESSL_VERSION_NUMBER) || (OPENSSL_VERSION_NUMBER < 0x10100000L)\n+     LogPrintf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n+ #else\n+     LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n+diff -ur bitcoin-0.12.0.orig/src/qt/rpcconsole.cpp bitcoin-0.12.0/src/qt/rpcconsole.cpp\n+--- bitcoin-0.12.0.orig/src/qt/rpcconsole.cpp\t2015-12-31 16:00:00.000000000 -0800\n++++ bitcoin-0.12.0/src/qt/rpcconsole.cpp\t2016-02-23 15:09:42.881126841 -0800\n+@@ -264,7 +264,7 @@\n+ \n+     // set library version labels\n+ \n+-#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n++#if defined(LIBRESSL_VERSION_NUMBER) || (OPENSSL_VERSION_NUMBER < 0x10100000L)\n+     ui->openSSLVersion->setText(SSLeay_version(SSLEAY_VERSION));\n+ #else\n+     ui->openSSLVersion->setText(OpenSSL_version(OPENSSL_VERSION));"
      },
      {
        "sha": "6f5eef6375255381f7c4552715ffdaf329e4a502",
        "filename": "contrib/rpm/bitcoin.fc",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/rpm/bitcoin.fc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/rpm/bitcoin.fc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.fc?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,8 @@\n+/usr/bin/bitcoin-cli\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n+/usr/sbin/bitcoind\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n+/usr/lib(64)?/bitcoin/bitcoind\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n+\n+/etc/bitcoin(/.*)?\t\tgen_context(system_u:object_r:bitcoin_conf_t,s0)\n+/var/lib/bitcoin(/.*)?\t\tgen_context(system_u:object_r:bitcoin_var_lib_t,s0)\n+\n+(/var)?/run/bitcoind(/.*)?   gen_context(system_u:object_r:bitcoin_var_run_t,s0)"
      },
      {
        "sha": "b206866cc5eb4abc3075f8692637a7096d7f0b0e",
        "filename": "contrib/rpm/bitcoin.if",
        "status": "added",
        "additions": 157,
        "deletions": 0,
        "changes": 157,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/rpm/bitcoin.if",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/rpm/bitcoin.if",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.if?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,157 @@\n+\n+## <summary>policy for bitcoin</summary>\n+\n+\n+########################################\n+## <summary>\n+##\tTransition to bitcoin.\n+## </summary>\n+## <param name=\"domain\">\n+## <summary>\n+##\tDomain allowed to transition.\n+## </summary>\n+## </param>\n+#\n+interface(`bitcoin_domtrans',`\n+\tgen_require(`\n+\t\ttype bitcoin_t, bitcoin_exec_t;\n+\t')\n+\n+\tcorecmd_search_bin($1)\n+\tdomtrans_pattern($1, bitcoin_exec_t, bitcoin_t)\n+')\n+\n+\n+########################################\n+## <summary>\n+##\tExecute bitcoin server in the bitcoin domain.\n+## </summary>\n+## <param name=\"domain\">\n+##\t<summary>\n+##\tDomain allowed access.\n+##\t</summary>\n+## </param>\n+#\n+interface(`bitcoin_initrc_domtrans',`\n+\tgen_require(`\n+\t\ttype bitcoin_initrc_exec_t;\n+\t')\n+\n+\tinit_labeled_script_domtrans($1, bitcoin_initrc_exec_t)\n+')\n+\n+\n+########################################\n+## <summary>\n+##\tSearch bitcoin lib directories.\n+## </summary>\n+## <param name=\"domain\">\n+##\t<summary>\n+##\tDomain allowed access.\n+##\t</summary>\n+## </param>\n+#\n+interface(`bitcoin_search_lib',`\n+\tgen_require(`\n+\t\ttype bitcoin_var_lib_t;\n+\t')\n+\n+\tallow $1 bitcoin_var_lib_t:dir search_dir_perms;\n+\tfiles_search_var_lib($1)\n+')\n+\n+########################################\n+## <summary>\n+##\tRead bitcoin lib files.\n+## </summary>\n+## <param name=\"domain\">\n+##\t<summary>\n+##\tDomain allowed access.\n+##\t</summary>\n+## </param>\n+#\n+interface(`bitcoin_read_lib_files',`\n+\tgen_require(`\n+\t\ttype bitcoin_var_lib_t;\n+\t')\n+\n+\tfiles_search_var_lib($1)\n+\tread_files_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+')\n+\n+########################################\n+## <summary>\n+##\tManage bitcoin lib files.\n+## </summary>\n+## <param name=\"domain\">\n+##\t<summary>\n+##\tDomain allowed access.\n+##\t</summary>\n+## </param>\n+#\n+interface(`bitcoin_manage_lib_files',`\n+\tgen_require(`\n+\t\ttype bitcoin_var_lib_t;\n+\t')\n+\n+\tfiles_search_var_lib($1)\n+\tmanage_files_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+')\n+\n+########################################\n+## <summary>\n+##\tManage bitcoin lib directories.\n+## </summary>\n+## <param name=\"domain\">\n+##\t<summary>\n+##\tDomain allowed access.\n+##\t</summary>\n+## </param>\n+#\n+interface(`bitcoin_manage_lib_dirs',`\n+\tgen_require(`\n+\t\ttype bitcoin_var_lib_t;\n+\t')\n+\n+\tfiles_search_var_lib($1)\n+\tmanage_dirs_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+')\n+\n+\n+########################################\n+## <summary>\n+##\tAll of the rules required to administrate\n+##\ta bitcoin environment\n+## </summary>\n+## <param name=\"domain\">\n+##\t<summary>\n+##\tDomain allowed access.\n+##\t</summary>\n+## </param>\n+## <param name=\"role\">\n+##\t<summary>\n+##\tRole allowed access.\n+##\t</summary>\n+## </param>\n+## <rolecap/>\n+#\n+interface(`bitcoin_admin',`\n+\tgen_require(`\n+\t\ttype bitcoin_t;\n+\t\ttype bitcoin_initrc_exec_t;\n+\t\ttype bitcoin_var_lib_t;\n+\t')\n+\n+\tallow $1 bitcoin_t:process { ptrace signal_perms };\n+\tps_process_pattern($1, bitcoin_t)\n+\n+\tbitcoin_initrc_domtrans($1)\n+\tdomain_system_change_exemption($1)\n+\trole_transition $2 bitcoin_initrc_exec_t system_r;\n+\tallow $2 system_r;\n+\n+\tfiles_search_var_lib($1)\n+\tadmin_pattern($1, bitcoin_var_lib_t)\n+\n+')\n+"
      },
      {
        "sha": "7c4d933ee05a41ea41d02a358c9b0f4ba3f638e9",
        "filename": "contrib/rpm/bitcoin.spec",
        "status": "added",
        "additions": 442,
        "deletions": 0,
        "changes": 442,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/rpm/bitcoin.spec",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/rpm/bitcoin.spec",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.spec?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,442 @@\n+%define bdbv 4.8.30\n+%global selinux_variants mls strict targeted\n+\n+%if 0%{?_no_gui:1}\n+%define _buildqt 0\n+%define buildargs --with-gui=no\n+%else\n+%define _buildqt 1\n+%if 0%{?_use_qt4}\n+%define buildargs --with-qrencode --with-gui=qt4\n+%else\n+%define buildargs --with-qrencode --with-gui=qt5\n+%endif\n+%endif\n+\n+Name:\t\tbitcoin\n+Version:\t0.12.0\n+Release:\t2%{?dist}\n+Summary:\tPeer to Peer Cryptographic Currency\n+\n+Group:\t\tApplications/System\n+License:\tMIT\n+URL:\t\thttps://bitcoin.org/\n+Source0:\thttps://bitcoin.org/bin/bitcoin-core-%{version}/bitcoin-%{version}.tar.gz\n+Source1:\thttp://download.oracle.com/berkeley-db/db-%{bdbv}.NC.tar.gz\n+\n+Source10:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/examples/bitcoin.conf\n+\n+#man pages\n+Source20:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/doc/man/bitcoind.1\n+Source21:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/doc/man/bitcoin-cli.1\n+Source22:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/doc/man/bitcoin-qt.1\n+\n+#selinux\n+Source30:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.te\n+# Source31 - what about bitcoin-tx and bench_bitcoin ???\n+Source31:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.fc\n+Source32:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.if\n+\n+Source100:\thttps://upload.wikimedia.org/wikipedia/commons/4/46/Bitcoin.svg\n+\n+%if 0%{?_use_libressl:1}\n+BuildRequires:\tlibressl-devel\n+%else\n+BuildRequires:\topenssl-devel\n+%endif\n+BuildRequires:\tboost-devel\n+BuildRequires:\tminiupnpc-devel\n+BuildRequires:\tautoconf automake libtool\n+BuildRequires:\tlibevent-devel\n+\n+\n+Patch0:\t\tbitcoin-0.12.0-libressl.patch\n+\n+\n+%description\n+Bitcoin is a digital cryptographic currency that uses peer-to-peer technology to\n+operate with no central authority or banks; managing transactions and the\n+issuing of bitcoins is carried out collectively by the network.\n+\n+%if %{_buildqt}\n+%package core\n+Summary:\tPeer to Peer Cryptographic Currency\n+Group:\t\tApplications/System\n+Obsoletes:\t%{name} < %{version}-%{release}\n+Provides:\t%{name} = %{version}-%{release}\n+%if 0%{?_use_qt4}\n+BuildRequires:\tqt-devel\n+%else\n+BuildRequires:\tqt5-qtbase-devel\n+# for /usr/bin/lrelease-qt5\n+BuildRequires:\tqt5-linguist\n+%endif\n+BuildRequires:\tprotobuf-devel\n+BuildRequires:\tqrencode-devel\n+BuildRequires:\t%{_bindir}/desktop-file-validate\n+# for icon generation from SVG\n+BuildRequires:\t%{_bindir}/inkscape\n+BuildRequires:\t%{_bindir}/convert\n+\n+%description core\n+Bitcoin is a digital cryptographic currency that uses peer-to-peer technology to\n+operate with no central authority or banks; managing transactions and the\n+issuing of bitcoins is carried out collectively by the network.\n+\n+This package contains the Qt based graphical client and node. If you are looking\n+to run a Bitcoin wallet, this is probably the package you want.\n+%endif\n+\n+\n+%package libs\n+Summary:\tBitcoin shared libraries\n+Group:\t\tSystem Environment/Libraries\n+\n+%description libs\n+This package provides the bitcoinconsensus shared libraries. These libraries\n+may be used by third party software to provide consensus verification\n+functionality.\n+\n+Unless you know need this package, you probably do not.\n+\n+%package devel\n+Summary:\tDevelopment files for bitcoin\n+Group:\t\tDevelopment/Libraries\n+Requires:\t%{name}-libs = %{version}-%{release}\n+\n+%description devel\n+This package contains the header files and static library for the\n+bitcoinconsensus shared library. If you are developing or compiling software\n+that wants to link against that library, then you need this package installed.\n+\n+Most people do not need this package installed.\n+\n+%package server\n+Summary:\tThe bitcoin daemon\n+Group:\t\tSystem Environment/Daemons\n+Requires:\tbitcoin-utils = %{version}-%{release}\n+Requires:\tselinux-policy policycoreutils-python\n+Requires(pre):\tshadow-utils\n+Requires(post):\t%{_sbindir}/semodule %{_sbindir}/restorecon %{_sbindir}/fixfiles %{_sbindir}/sestatus\n+Requires(postun):\t%{_sbindir}/semodule %{_sbindir}/restorecon %{_sbindir}/fixfiles %{_sbindir}/sestatus\n+BuildRequires:\tsystemd\n+BuildRequires:\tcheckpolicy\n+BuildRequires:\t%{_datadir}/selinux/devel/Makefile\n+\n+%description server\n+This package provides a stand-alone bitcoin-core daemon. For most users, this\n+package is only needed if they need a full-node without the graphical client.\n+\n+Some third party wallet software will want this package to provide the actual\n+bitcoin-core node they use to connect to the network.\n+\n+If you use the graphical bitcoin-core client then you almost certainly do not\n+need this package.\n+\n+%package utils\n+Summary:\tBitcoin utilities\n+Group:\t\tApplications/System\n+\n+%description utils\n+This package provides several command line utilities for interacting with a\n+bitcoin-core daemon.\n+\n+The bitcoin-cli utility allows you to communicate and control a bitcoin daemon\n+over RPC, the bitcoin-tx utility allows you to create a custom transaction, and\n+the bench_bitcoin utility can be used to perform some benchmarks.\n+\n+This package contains utilities needed by the bitcoin-server package.\n+\n+\n+%prep\n+%setup -q\n+%patch0 -p1 -b .libressl\n+cp -p %{SOURCE10} ./bitcoin.conf.example\n+tar -zxf %{SOURCE1}\n+cp -p db-%{bdbv}.NC/LICENSE ./db-%{bdbv}.NC-LICENSE\n+mkdir db4 SELinux\n+cp -p %{SOURCE30} %{SOURCE31} %{SOURCE32} SELinux/\n+\n+\n+%build\n+CWD=`pwd`\n+cd db-%{bdbv}.NC/build_unix/\n+../dist/configure --enable-cxx --disable-shared --with-pic --prefix=${CWD}/db4\n+make install\n+cd ../..\n+\n+./autogen.sh\n+%configure LDFLAGS=\"-L${CWD}/db4/lib/\" CPPFLAGS=\"-I${CWD}/db4/include/\" --with-miniupnpc --enable-glibc-back-compat %{buildargs}\n+make %{?_smp_mflags}\n+\n+pushd SELinux\n+for selinuxvariant in %{selinux_variants}; do\n+\tmake NAME=${selinuxvariant} -f %{_datadir}/selinux/devel/Makefile\n+\tmv bitcoin.pp bitcoin.pp.${selinuxvariant}\n+\tmake NAME=${selinuxvariant} -f %{_datadir}/selinux/devel/Makefile clean\n+done\n+popd\n+\n+\n+%install\n+make install DESTDIR=%{buildroot}\n+\n+mkdir -p -m755 %{buildroot}%{_sbindir}\n+mv %{buildroot}%{_bindir}/bitcoind %{buildroot}%{_sbindir}/bitcoind\n+\n+# systemd stuff\n+mkdir -p %{buildroot}%{_tmpfilesdir}\n+cat <<EOF > %{buildroot}%{_tmpfilesdir}/bitcoin.conf\n+d /run/bitcoind 0750 bitcoin bitcoin -\n+EOF\n+touch -a -m -t 201504280000 %{buildroot}%{_tmpfilesdir}/bitcoin.conf\n+\n+mkdir -p %{buildroot}%{_sysconfdir}/sysconfig\n+cat <<EOF > %{buildroot}%{_sysconfdir}/sysconfig/bitcoin\n+# Provide options to the bitcoin daemon here, for example\n+# OPTIONS=\"-testnet -disable-wallet\"\n+\n+OPTIONS=\"\"\n+\n+# System service defaults.\n+# Don't change these unless you know what you're doing.\n+CONFIG_FILE=\"%{_sysconfdir}/bitcoin/bitcoin.conf\"\n+DATA_DIR=\"%{_localstatedir}/lib/bitcoin\"\n+PID_FILE=\"/run/bitcoind/bitcoind.pid\"\n+EOF\n+touch -a -m -t 201504280000 %{buildroot}%{_sysconfdir}/sysconfig/bitcoin\n+\n+mkdir -p %{buildroot}%{_unitdir}\n+cat <<EOF > %{buildroot}%{_unitdir}/bitcoin.service\n+[Unit]\n+Description=Bitcoin daemon\n+After=syslog.target network.target\n+\n+[Service]\n+Type=forking\n+ExecStart=%{_sbindir}/bitcoind -daemon -conf=\\${CONFIG_FILE} -datadir=\\${DATA_DIR} -pid=\\${PID_FILE} \\$OPTIONS\n+EnvironmentFile=%{_sysconfdir}/sysconfig/bitcoin\n+User=bitcoin\n+Group=bitcoin\n+\n+Restart=on-failure\n+PrivateTmp=true\n+TimeoutStopSec=120\n+TimeoutStartSec=60\n+StartLimitInterval=240\n+StartLimitBurst=5\n+\n+[Install]\n+WantedBy=multi-user.target\n+EOF\n+touch -a -m -t 201504280000 %{buildroot}%{_unitdir}/bitcoin.service\n+#end systemd stuff\n+\n+mkdir %{buildroot}%{_sysconfdir}/bitcoin\n+mkdir -p %{buildroot}%{_localstatedir}/lib/bitcoin\n+\n+#SELinux\n+for selinuxvariant in %{selinux_variants}; do\n+\tinstall -d %{buildroot}%{_datadir}/selinux/${selinuxvariant}\n+\tinstall -p -m 644 SELinux/bitcoin.pp.${selinuxvariant} %{buildroot}%{_datadir}/selinux/${selinuxvariant}/bitcoin.pp\n+done\n+\n+%if %{_buildqt}\n+# qt icons\n+install -D -p share/pixmaps/bitcoin.ico %{buildroot}%{_datadir}/pixmaps/bitcoin.ico\n+install -p share/pixmaps/nsis-header.bmp %{buildroot}%{_datadir}/pixmaps/\n+install -p share/pixmaps/nsis-wizard.bmp %{buildroot}%{_datadir}/pixmaps/\n+install -p %{SOURCE100} %{buildroot}%{_datadir}/pixmaps/bitcoin.svg\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin16.png -w16 -h16\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin32.png -w32 -h32\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin64.png -w64 -h64\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin128.png -w128 -h128\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin256.png -w256 -h256\n+%{_bindir}/convert -resize 16x16 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin16.xpm\n+%{_bindir}/convert -resize 32x32 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin32.xpm\n+%{_bindir}/convert -resize 64x64 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin64.xpm\n+%{_bindir}/convert -resize 128x128 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin128.xpm\n+%{_bindir}/convert %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin256.xpm\n+touch %{buildroot}%{_datadir}/pixmaps/*.png -r %{SOURCE100}\n+touch %{buildroot}%{_datadir}/pixmaps/*.xpm -r %{SOURCE100}\n+\n+# Desktop File - change the touch timestamp if modifying\n+mkdir -p %{buildroot}%{_datadir}/applications\n+cat <<EOF > %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n+[Desktop Entry]\n+Encoding=UTF-8\n+Name=Bitcoin\n+Comment=Bitcoin P2P Cryptocurrency\n+Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n+Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n+Exec=bitcoin-qt %u\n+Terminal=false\n+Type=Application\n+Icon=bitcoin128\n+MimeType=x-scheme-handler/bitcoin;\n+Categories=Office;Finance;\n+EOF\n+# change touch date when modifying desktop\n+touch -a -m -t 201511100546 %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n+%{_bindir}/desktop-file-validate %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n+\n+# KDE protocol - change the touch timestamp if modifying\n+mkdir -p %{buildroot}%{_datadir}/kde4/services\n+cat <<EOF > %{buildroot}%{_datadir}/kde4/services/bitcoin-core.protocol\n+[Protocol]\n+exec=bitcoin-qt '%u'\n+protocol=bitcoin\n+input=none\n+output=none\n+helper=true\n+listing=\n+reading=false\n+writing=false\n+makedir=false\n+deleting=false\n+EOF\n+# change touch date when modifying protocol\n+touch -a -m -t 201511100546 %{buildroot}%{_datadir}/kde4/services/bitcoin-core.protocol\n+%endif\n+\n+# man pages\n+install -D -p %{SOURCE20} %{buildroot}%{_mandir}/man1/bitcoind.1\n+install -p %{SOURCE21} %{buildroot}%{_mandir}/man1/bitcoin-cli.1\n+%if %{_buildqt}\n+install -p %{SOURCE22} %{buildroot}%{_mandir}/man1/bitcoin-qt.1\n+%endif\n+\n+# nuke these, we do extensive testing of binaries in %%check before packaging\n+rm -f %{buildroot}%{_bindir}/test_*\n+\n+%check\n+make check\n+srcdir=src test/bitcoin-util-test.py\n+test/functional/test_runner.py --extended\n+\n+%post libs -p /sbin/ldconfig\n+\n+%postun libs -p /sbin/ldconfig\n+\n+%pre server\n+getent group bitcoin >/dev/null || groupadd -r bitcoin\n+getent passwd bitcoin >/dev/null ||\n+\tuseradd -r -g bitcoin -d /var/lib/bitcoin -s /sbin/nologin \\\n+\t-c \"Bitcoin wallet server\" bitcoin\n+exit 0\n+\n+%post server\n+%systemd_post bitcoin.service\n+# SELinux\n+if [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n+for selinuxvariant in %{selinux_variants}; do\n+\t%{_sbindir}/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/bitcoin.pp &> /dev/null || :\n+done\n+%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8332\n+%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8333\n+%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18332\n+%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18333\n+%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18443\n+%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18444\n+%{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n+%{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin || :\n+fi\n+\n+%posttrans server\n+%{_bindir}/systemd-tmpfiles --create\n+\n+%preun server\n+%systemd_preun bitcoin.service\n+\n+%postun server\n+%systemd_postun bitcoin.service\n+# SELinux\n+if [ $1 -eq 0 ]; then\n+\tif [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n+\t%{_sbindir}/semanage port -d -p tcp 8332\n+\t%{_sbindir}/semanage port -d -p tcp 8333\n+\t%{_sbindir}/semanage port -d -p tcp 18332\n+\t%{_sbindir}/semanage port -d -p tcp 18333\n+\t%{_sbindir}/semanage port -d -p tcp 18443\n+\t%{_sbindir}/semanage port -d -p tcp 18444\n+\tfor selinuxvariant in %{selinux_variants}; do\n+\t\t%{_sbindir}/semodule -s ${selinuxvariant} -r bitcoin &> /dev/null || :\n+\tdone\n+\t%{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n+\t[ -d %{_localstatedir}/lib/bitcoin ] && \\\n+\t\t%{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin &> /dev/null || :\n+\tfi\n+fi\n+\n+%clean\n+rm -rf %{buildroot}\n+\n+%if %{_buildqt}\n+%files core\n+%defattr(-,root,root,-)\n+%license COPYING db-%{bdbv}.NC-LICENSE\n+%doc COPYING bitcoin.conf.example doc/README.md doc/bips.md doc/files.md doc/multiwallet-qt.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n+%attr(0755,root,root) %{_bindir}/bitcoin-qt\n+%attr(0644,root,root) %{_datadir}/applications/bitcoin-core.desktop\n+%attr(0644,root,root) %{_datadir}/kde4/services/bitcoin-core.protocol\n+%attr(0644,root,root) %{_datadir}/pixmaps/*.ico\n+%attr(0644,root,root) %{_datadir}/pixmaps/*.bmp\n+%attr(0644,root,root) %{_datadir}/pixmaps/*.svg\n+%attr(0644,root,root) %{_datadir}/pixmaps/*.png\n+%attr(0644,root,root) %{_datadir}/pixmaps/*.xpm\n+%attr(0644,root,root) %{_mandir}/man1/bitcoin-qt.1*\n+%endif\n+\n+%files libs\n+%defattr(-,root,root,-)\n+%license COPYING\n+%doc COPYING doc/README.md doc/shared-libraries.md\n+%{_libdir}/lib*.so.*\n+\n+%files devel\n+%defattr(-,root,root,-)\n+%license COPYING\n+%doc COPYING doc/README.md doc/developer-notes.md doc/shared-libraries.md\n+%attr(0644,root,root) %{_includedir}/*.h\n+%{_libdir}/*.so\n+%{_libdir}/*.a\n+%{_libdir}/*.la\n+%attr(0644,root,root) %{_libdir}/pkgconfig/*.pc\n+\n+%files server\n+%defattr(-,root,root,-)\n+%license COPYING db-%{bdbv}.NC-LICENSE\n+%doc COPYING bitcoin.conf.example doc/README.md doc/REST-interface.md doc/bips.md doc/dnsseed-policy.md doc/files.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n+%attr(0755,root,root) %{_sbindir}/bitcoind\n+%attr(0644,root,root) %{_tmpfilesdir}/bitcoin.conf\n+%attr(0644,root,root) %{_unitdir}/bitcoin.service\n+%dir %attr(0750,bitcoin,bitcoin) %{_sysconfdir}/bitcoin\n+%dir %attr(0750,bitcoin,bitcoin) %{_localstatedir}/lib/bitcoin\n+%config(noreplace) %attr(0600,root,root) %{_sysconfdir}/sysconfig/bitcoin\n+%attr(0644,root,root) %{_datadir}/selinux/*/*.pp\n+%attr(0644,root,root) %{_mandir}/man1/bitcoind.1*\n+\n+%files utils\n+%defattr(-,root,root,-)\n+%license COPYING\n+%doc COPYING bitcoin.conf.example doc/README.md\n+%attr(0755,root,root) %{_bindir}/bitcoin-cli\n+%attr(0755,root,root) %{_bindir}/bitcoin-tx\n+%attr(0755,root,root) %{_bindir}/bench_bitcoin\n+%attr(0644,root,root) %{_mandir}/man1/bitcoin-cli.1*\n+\n+\n+\n+%changelog\n+* Fri Feb 26 2016 Alice Wonder <buildmaster@librelamp.com> - 0.12.0-2\n+- Rename Qt package from bitcoin to bitcoin-core\n+- Make building of the Qt package optional\n+- When building the Qt package, default to Qt5 but allow building\n+-  against Qt4\n+- Only run SELinux stuff in post scripts if it is not set to disabled\n+\n+* Wed Feb 24 2016 Alice Wonder <buildmaster@librelamp.com> - 0.12.0-1\n+- Initial spec file for 0.12.0 release\n+\n+# This spec file is written from scratch but a lot of the packaging decisions are directly\n+# based upon the 0.11.2 package spec file from https://www.ringingliberty.com/bitcoin/"
      },
      {
        "sha": "d6231c591a24312b3c073f7658533587279aeba7",
        "filename": "contrib/rpm/bitcoin.te",
        "status": "added",
        "additions": 81,
        "deletions": 0,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/rpm/bitcoin.te",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/rpm/bitcoin.te",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.te?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,81 @@\n+policy_module(bitcoin, 1.100.1)\n+\n+########################################\n+#\n+# Declarations\n+#\n+\n+type bitcoin_t;\n+type bitcoin_exec_t;\n+init_daemon_domain(bitcoin_t, bitcoin_exec_t)\n+\n+permissive bitcoin_t;\n+\n+type bitcoin_initrc_exec_t;\n+init_script_file(bitcoin_initrc_exec_t)\n+\n+type bitcoin_conf_t;\n+files_type(bitcoin_conf_t)\n+\n+type bitcoin_var_lib_t;\n+files_type(bitcoin_var_lib_t)\n+\n+type bitcoin_var_run_t;\n+files_type(bitcoin_var_run_t)\n+\n+type bitcoin_port_t;\n+corenet_port(bitcoin_port_t)\n+\n+########################################\n+#\n+# bitcoin local policy\n+#\n+allow bitcoin_t self:process { fork };\n+\n+allow bitcoin_t self:fifo_file rw_fifo_file_perms;\n+allow bitcoin_t self:unix_stream_socket create_stream_socket_perms;\n+\n+manage_dirs_pattern(bitcoin_t, bitcoin_conf_t, bitcoin_conf_t)\n+manage_files_pattern(bitcoin_t, bitcoin_conf_t, bitcoin_conf_t)\n+\n+manage_dirs_pattern(bitcoin_t, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+manage_files_pattern(bitcoin_t, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+files_var_lib_filetrans(bitcoin_t, bitcoin_var_lib_t, { dir file })\n+\n+manage_dirs_pattern(bitcoin_t, bitcoin_var_run_t, bitcoin_var_run_t)\n+manage_files_pattern(bitcoin_t, bitcoin_var_run_t, bitcoin_var_run_t)\n+\n+sysnet_dns_name_resolve(bitcoin_t)\n+corenet_all_recvfrom_unlabeled(bitcoin_t)\n+\n+allow bitcoin_t self:tcp_socket create_stream_socket_perms;\n+corenet_tcp_sendrecv_generic_if(bitcoin_t)\n+corenet_tcp_sendrecv_generic_node(bitcoin_t)\n+corenet_tcp_sendrecv_all_ports(bitcoin_t)\n+corenet_tcp_bind_generic_node(bitcoin_t)\n+\n+gen_require(`\n+    type bitcoin_port_t;\n+')\n+allow bitcoin_t bitcoin_port_t:tcp_socket name_bind;\n+\n+gen_require(`\n+    type bitcoin_port_t;\n+')\n+allow bitcoin_t bitcoin_port_t:tcp_socket name_connect;\n+\n+domain_use_interactive_fds(bitcoin_t)\n+\n+files_read_etc_files(bitcoin_t)\n+\n+miscfiles_read_localization(bitcoin_t)\n+\n+sysnet_dns_name_resolve(bitcoin_t)\n+\n+allow bitcoin_t bitcoin_exec_t:file execute_no_trans;\n+allow bitcoin_t self:process setsched;\n+corecmd_exec_ls(bitcoin_t)\n+corenet_tcp_connect_http_port(bitcoin_t)\n+dev_read_urand(bitcoin_t)\n+fs_getattr_xattr_fs(bitcoin_t)\n+kernel_read_system_state(bitcoin_t)"
      },
      {
        "sha": "139c03181fc806a9854a3ad307146883df0e47cf",
        "filename": "contrib/seeds/README.md",
        "status": "modified",
        "additions": 14,
        "deletions": 3,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,8 +1,19 @@\n-### Seeds ###\n+# Seeds\n \n Utility to generate the seeds.txt list that is compiled into the client\n (see [src/chainparamsseeds.h](/src/chainparamsseeds.h) and other utilities in [contrib/seeds](/contrib/seeds)).\n \n-The 512 seeds compiled into the 0.10 release were created from sipa's DNS seed data, like this:\n+Be sure to update `PATTERN_AGENT` in `makeseeds.py` to include the current version,\n+and remove old versions as necessary.\n \n-\tcurl -s http://bitcoin.sipa.be/seeds.txt | makeseeds.py\n+The seeds compiled into the release are created from sipa's DNS seed data, like this:\n+\n+    curl -s http://bitcoin.sipa.be/seeds.txt.gz | gzip -dc > seeds_main.txt\n+    python3 makeseeds.py < seeds_main.txt > nodes_main.txt\n+    python3 generate-seeds.py . > ../../src/chainparamsseeds.h\n+\n+## Dependencies\n+\n+Ubuntu:\n+\n+    sudo apt-get install python3-dnspython"
      },
      {
        "sha": "28068a752333f6ebd08b7051ed64d996241b8d83",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,5 +1,5 @@\n-#!/usr/bin/python\n-# Copyright (c) 2014 Wladmir J. van der Laan\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2017 Wladimir J. van der Laan\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n@@ -31,7 +31,7 @@\n \n These should be pasted into `src/chainparamsseeds.h`.\n '''\n-from __future__ import print_function, division\n+\n from base64 import b32decode\n from binascii import a2b_hex\n import sys, os\n@@ -114,7 +114,7 @@ def process_nodes(g, f, structname, defaultport):\n def main():\n     if len(sys.argv)<2:\n         print(('Usage: %s <path_to_nodes_txt>' % sys.argv[0]), file=sys.stderr)\n-        exit(1)\n+        sys.exit(1)\n     g = sys.stdout\n     indir = sys.argv[1]\n     g.write('#ifndef BITCOIN_CHAINPARAMSSEEDS_H\\n')"
      },
      {
        "sha": "877a7836ef74a8a382cc76d7407179b108329af5",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "modified",
        "additions": 10,
        "deletions": 7,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,4 +1,7 @@\n-#!/usr/bin/env python\n+#!/usr/bin/env python3\n+# Copyright (c) 2013-2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n # Generate seeds.txt from Pieter's DNS seeder\n #\n@@ -11,13 +14,13 @@\n \n # These are hosts that have been observed to be behaving strangely (e.g.\n # aggressively connecting to every node).\n-SUSPICIOUS_HOSTS = set([\n+SUSPICIOUS_HOSTS = {\n     \"130.211.129.106\", \"178.63.107.226\",\n     \"83.81.130.26\", \"88.198.17.7\", \"148.251.238.178\", \"176.9.46.6\",\n     \"54.173.72.127\", \"54.174.10.182\", \"54.183.64.54\", \"54.194.231.211\",\n     \"54.66.214.167\", \"54.66.220.137\", \"54.67.33.14\", \"54.77.251.214\",\n     \"54.94.195.96\", \"54.94.200.247\"\n-])\n+}\n \n import re\n import sys\n@@ -27,7 +30,7 @@\n PATTERN_IPV4 = re.compile(r\"^((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})):(\\d+)$\")\n PATTERN_IPV6 = re.compile(r\"^\\[([0-9a-z:]+)\\]:(\\d+)$\")\n PATTERN_ONION = re.compile(r\"^([abcdefghijklmnopqrstuvwxyz234567]{16}\\.onion):(\\d+)$\")\n-PATTERN_AGENT = re.compile(r\"^(\\/Satoshi:0\\.8\\.6\\/|\\/Satoshi:0\\.9\\.(2|3|4|5)\\/|\\/Satoshi:0\\.10\\.\\d{1,2}\\/|\\/Satoshi:0\\.11\\.\\d{1,2}\\/)$\")\n+PATTERN_AGENT = re.compile(r\"^(/Satoshi:0.13.(1|2|99)/|/Satoshi:0.14.(0|1|2|99)/)$\")\n \n def parseline(line):\n     sline = line.split()\n@@ -101,7 +104,7 @@ def filtermultiport(ips):\n     hist = collections.defaultdict(list)\n     for ip in ips:\n         hist[ip['sortkey']].append(ip)\n-    return [value[0] for (key,value) in hist.items() if len(value)==1]\n+    return [value[0] for (key,value) in list(hist.items()) if len(value)==1]\n \n # Based on Greg Maxwell's seed_filter.py\n def filterbyasn(ips, max_per_asn, max_total):\n@@ -161,9 +164,9 @@ def main():\n \n     for ip in ips:\n         if ip['net'] == 'ipv6':\n-            print '[%s]:%i' % (ip['ip'], ip['port'])\n+            print('[%s]:%i' % (ip['ip'], ip['port']))\n         else:\n-            print '%s:%i' % (ip['ip'], ip['port'])\n+            print('%s:%i' % (ip['ip'], ip['port']))\n \n if __name__ == '__main__':\n     main()"
      },
      {
        "sha": "60b34216cd634388e2bd697077616c1075aad204",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "modified",
        "additions": 1420,
        "deletions": 849,
        "changes": 2269,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,879 +1,1450 @@\n-1.34.168.128:8333\n-1.202.128.218:8333\n-2.30.0.210:8333\n-5.9.96.203:8333\n-5.45.71.130:8333\n-5.45.98.141:8333\n-5.102.145.68:8333\n-5.135.160.77:8333\n-5.189.134.246:8333\n-5.199.164.132:8333\n-5.249.135.102:8333\n-8.19.44.110:8333\n-8.22.230.8:8333\n-14.200.200.145:8333\n-18.228.0.188:8333\n-18.228.0.200:8333\n-23.24.168.97:8333\n-23.28.35.227:8333\n-23.92.76.170:8333\n-23.99.64.119:8333\n-23.228.166.128:8333\n-23.229.45.32:8333\n-24.8.105.128:8333\n-24.16.69.137:8333\n-24.94.98.96:8333\n-24.102.118.7:8333\n-24.118.166.228:8333\n-24.122.133.49:8333\n-24.166.97.162:8333\n-24.213.235.242:8333\n-24.226.107.64:8333\n-24.228.192.171:8333\n-27.140.133.18:8333\n-31.41.40.25:8333\n-31.43.101.59:8333\n-31.184.195.181:8333\n-31.193.139.66:8333\n-37.200.70.102:8333\n-37.205.10.151:8333\n-42.3.106.227:8333\n-42.60.133.106:8333\n-45.56.85.231:8333\n-45.56.102.228:8333\n-45.79.130.235:8333\n-46.28.204.61:11101\n-46.38.235.229:8333\n-46.59.2.74:8333\n-46.101.132.37:8333\n-46.101.168.50:8333\n-46.163.76.230:8333\n-46.166.161.103:8333\n-46.182.132.100:8333\n-46.223.36.94:8333\n-46.227.66.132:8333\n-46.227.66.138:8333\n-46.239.107.74:8333\n-46.249.39.100:8333\n-46.250.98.108:8333\n-50.7.37.114:8333\n-50.81.53.151:8333\n-50.115.43.253:8333\n-50.116.20.87:8333\n-50.116.33.92:8333\n-50.125.167.245:8333\n-50.143.9.51:8333\n-50.188.192.133:8333\n-54.77.162.76:8333\n-54.153.97.109:8333\n-54.165.192.125:8333\n-58.96.105.85:8333\n-59.167.196.135:8333\n-60.29.227.163:8333\n-61.35.225.19:8333\n+2.228.70.198:8333\n+4.15.180.29:8333\n+4.15.180.30:8333\n+5.2.67.110:8333\n+5.39.224.103:8333\n+5.43.124.154:8333\n+5.189.165.102:8333\n+5.226.149.145:8333\n+5.228.7.146:8333\n+5.228.64.71:8333\n+5.249.152.101:8333\n+5.254.124.55:8333\n+5.255.64.231:8333\n+5.255.90.234:8333\n+14.192.8.27:21301\n+18.62.3.86:8333\n+18.85.35.80:8333\n+23.28.128.65:8333\n+23.108.83.12:8333\n+23.233.2.238:8333\n+24.27.65.168:8333\n+24.56.241.219:8333\n+24.64.75.132:8333\n+24.73.70.26:8333\n+24.121.154.140:8333\n+24.203.96.72:8333\n+24.225.34.62:8333\n+24.227.69.146:8333\n+24.232.136.119:8333\n+31.16.123.235:8333\n+31.19.205.53:8333\n+31.132.136.35:8333\n+31.184.234.85:8333\n+31.211.102.161:8333\n+37.48.64.140:8333\n+37.97.141.116:8333\n+37.120.160.12:8333\n+37.120.164.16:8333\n+37.134.226.181:8333\n+37.147.110.43:8333\n+37.194.10.30:8333\n+37.247.22.53:8333\n+38.27.65.158:8333\n+38.133.141.34:8333\n+43.248.160.151:8333\n+45.32.130.19:8333\n+45.32.193.157:8333\n+45.46.161.121:8333\n+45.56.97.63:8333\n+45.116.178.79:8188\n+46.16.240.98:8333\n+46.20.246.100:8333\n+46.21.97.135:8333\n+46.59.10.237:8333\n+46.59.13.59:8333\n+46.148.16.210:8333\n+46.166.160.96:8333\n+46.188.44.20:8333\n+46.229.238.187:8333\n+46.231.16.149:8333\n+47.88.35.181:8333\n+47.88.100.130:8333\n+47.184.129.94:8333\n+47.199.68.204:8333\n+50.30.38.203:8333\n+50.63.162.242:8333\n+50.97.133.208:8333\n+50.114.227.224:8333\n+51.15.0.17:8333\n+51.174.69.239:8333\n+52.7.135.69:8333\n+52.14.64.82:8333\n+52.204.105.25:8333\n+54.255.160.87:8333\n+61.47.2.20:8333\n+61.125.131.55:8333\n 62.43.130.178:8333\n-62.109.49.26:8333\n-62.202.0.97:8333\n-62.210.66.227:8333\n-62.210.192.169:8333\n-64.74.98.205:8333\n-64.156.193.100:8333\n+62.106.16.111:8333\n+62.107.200.30:8333\n+62.109.20.99:8333\n+62.133.194.2:8333\n+62.133.194.156:8333\n+62.176.6.94:8333\n+62.182.169.222:8333\n+62.205.132.245:8333\n+62.216.238.133:8333\n+63.231.239.212:8333\n+64.34.231.140:8333\n 64.203.102.86:8333\n-64.229.142.48:8333\n-65.96.193.165:8333\n-66.30.3.7:8333\n-66.114.33.49:8333\n-66.118.133.194:8333\n-66.135.10.126:8333\n-66.172.10.4:8333\n+64.233.245.39:8333\n+65.183.76.73:8333\n+66.96.199.166:8333\n 66.194.38.250:8333\n 66.194.38.253:8333\n-66.215.192.104:8333\n-67.60.98.115:8333\n-67.164.35.36:8333\n-67.191.162.244:8333\n-67.207.195.77:8333\n-67.219.233.140:8333\n+66.196.12.63:8333\n+67.215.6.34:8333\n 67.221.193.55:8333\n-67.228.162.228:8333\n-68.50.67.199:8333\n-68.62.3.203:8333\n-68.65.205.226:9000\n-68.106.42.191:8333\n-68.150.181.198:8333\n-68.196.196.106:8333\n-68.224.194.81:8333\n-69.46.5.194:8333\n-69.50.171.238:8333\n-69.64.43.152:8333\n-69.65.41.13:8333\n-69.90.132.200:8333\n-69.143.1.243:8333\n-69.146.98.216:8333\n-69.165.246.38:8333\n-69.207.6.135:8333\n-69.251.208.26:8333\n-70.38.1.101:8333\n-70.38.9.66:8333\n-70.90.2.18:8333\n-71.58.228.226:8333\n-71.199.11.189:8333\n-71.199.193.202:8333\n-71.205.232.181:8333\n-71.236.200.162:8333\n-72.24.73.186:8333\n-72.52.130.110:8333\n-72.53.111.37:8333\n-72.235.38.70:8333\n-73.31.171.149:8333\n-73.32.137.72:8333\n-73.137.133.238:8333\n-73.181.192.103:8333\n-73.190.2.60:8333\n-73.195.192.137:8333\n-73.222.35.117:8333\n-74.57.199.180:8333\n-74.82.233.205:8333\n-74.85.66.82:8333\n-74.101.224.127:8333\n-74.113.69.16:8333\n-74.122.235.68:8333\n-74.193.68.141:8333\n-74.208.164.219:8333\n-75.100.37.122:8333\n-75.145.149.169:8333\n-75.168.34.20:8333\n-76.20.44.240:8333\n-76.100.70.17:8333\n-76.168.3.239:8333\n-76.186.140.103:8333\n-77.92.68.221:8333\n-77.109.101.142:8333\n-77.110.11.86:8333\n-77.242.108.18:8333\n-78.46.96.150:9020\n-78.84.100.95:8333\n+68.66.193.192:8333\n+68.69.235.230:8333\n+68.111.10.219:8333\n+68.119.138.175:8333\n+68.132.193.222:8333\n+68.194.42.76:8333\n+68.235.41.204:8333\n+69.11.97.43:8333\n+69.41.3.212:8333\n+69.41.171.35:8333\n+69.41.171.36:8333\n+69.55.64.216:8333\n+69.84.42.56:8333\n+70.48.48.250:8333\n+70.112.32.29:8333\n+70.250.74.20:8333\n+71.93.161.162:8333\n+71.198.0.126:8333\n+72.5.167.41:8333\n+72.224.11.103:8333\n+73.72.160.213:8333\n+74.122.237.124:8333\n+75.86.137.34:8333\n+75.165.99.144:8333\n+76.64.74.193:8333\n+76.76.227.136:8333\n+76.173.161.44:8333\n+76.178.22.44:8333\n+77.47.137.27:8333\n+77.77.46.250:8333\n+77.91.193.152:8333\n+77.95.226.194:8333\n+77.120.246.254:8333\n+77.163.136.136:8333\n+77.203.13.57:8333\n+77.236.37.214:8333\n+77.239.37.12:8333\n+77.247.179.44:8333\n+78.34.14.52:8333\n+78.109.163.153:8333\n+78.196.172.45:8333\n 79.132.230.144:8333\n-79.133.43.63:8333\n-79.160.76.153:8333\n-79.169.34.24:8333\n-79.188.7.78:8333\n-80.217.226.25:8333\n-80.223.100.179:8333\n-80.240.129.221:8333\n-81.1.173.243:8333\n-81.7.11.50:8333\n-81.7.16.17:8333\n-81.66.111.3:8333\n-81.80.9.71:8333\n-81.140.43.138:8333\n-81.171.34.37:8333\n-81.174.247.50:8333\n-81.181.155.53:8333\n-81.184.5.253:8333\n-81.187.69.130:8333\n-81.230.3.84:8333\n-82.42.128.51:8333\n-82.74.226.21:8333\n-82.142.75.50:8333\n+79.160.2.105:8333\n+80.82.77.138:8333\n+80.100.203.151:8333\n+80.147.68.237:8333\n+80.237.240.102:8333\n+81.2.246.127:8333\n+81.7.7.86:8333\n+81.7.10.238:8333\n+81.27.96.37:8333\n+81.83.96.5:8333\n+81.228.194.187:8333\n+82.45.69.216:8333\n+82.69.44.183:8333\n+82.72.198.68:8333\n+82.95.204.10:8333\n+82.118.236.127:8333\n+82.118.242.4:8333\n+82.134.66.146:8333\n+82.193.109.199:8333\n+82.197.210.65:8333\n 82.199.102.10:8333\n 82.200.205.30:8333\n-82.221.108.21:8333\n-82.221.128.35:8333\n-82.238.124.41:8333\n-82.242.0.245:8333\n-83.76.123.110:8333\n-83.150.9.196:8333\n-83.162.196.192:8333\n-83.162.234.224:8333\n-83.170.104.91:8333\n-83.255.66.118:8334\n-84.2.34.104:8333\n-84.45.98.91:8333\n-84.47.161.150:8333\n-84.212.192.131:8333\n-84.215.169.101:8333\n-84.238.140.176:8333\n-84.245.71.31:8333\n-85.17.4.212:8333\n-85.114.128.134:8333\n-85.159.237.191:8333\n-85.166.130.189:8333\n-85.199.4.228:8333\n-85.214.66.168:8333\n-85.214.195.210:8333\n-85.229.0.73:8333\n-86.21.96.45:8333\n-87.48.42.199:8333\n-87.81.143.82:8333\n-87.81.251.72:8333\n-87.104.24.185:8333\n-87.104.168.104:8333\n-87.117.234.71:8333\n-87.118.96.197:8333\n-87.145.12.57:8333\n-87.159.170.190:8333\n-88.150.168.160:8333\n-88.208.0.79:8333\n-88.208.0.149:8333\n-88.214.194.226:8343\n-89.1.11.32:8333\n-89.36.235.108:8333\n-89.67.96.2:15321\n-89.98.16.41:8333\n-89.108.72.195:8333\n-89.156.35.157:8333\n-89.163.227.28:8333\n-89.212.33.237:8333\n-89.212.160.165:8333\n-89.231.96.83:8333\n-89.248.164.64:8333\n-90.149.193.199:8333\n-91.77.239.245:8333\n+82.221.108.27:8333\n+82.221.128.81:8333\n+82.221.139.97:8333\n+82.232.202.246:8333\n+83.60.64.252:8333\n+83.61.8.228:8333\n+83.128.41.48:8333\n+83.128.111.69:8333\n+83.137.41.10:8333\n+83.150.43.17:8333\n+83.169.2.43:8333\n+83.174.209.87:8333\n+83.255.43.163:8333\n+84.42.193.6:8333\n+84.52.145.231:8333\n+84.52.234.70:8333\n+84.85.102.113:8333\n+84.92.92.247:8333\n+84.146.35.123:8333\n+84.212.198.222:8333\n+84.217.163.135:8333\n+84.245.27.185:8333\n+84.251.203.5:8333\n+85.21.144.226:8333\n+85.25.194.12:8333\n+85.25.194.28:8333\n+85.144.119.222:8333\n+85.183.140.62:8333\n+85.214.228.203:8333\n+85.214.234.254:8333\n+85.218.150.1:8333\n+85.228.196.10:8333\n+86.15.2.235:8333\n+86.61.6.210:8333\n+87.92.115.194:8333\n+87.120.8.5:8333\n+87.120.37.230:8333\n+87.233.181.146:8333\n+87.239.101.102:8333\n+88.87.78.126:8333\n+88.98.198.130:8333\n+88.98.225.214:8333\n+88.99.58.194:8333\n+88.150.192.17:8333\n+88.196.136.31:17556\n+88.208.58.193:8333\n+88.208.58.194:8333\n+89.22.96.132:8333\n+89.22.104.48:8333\n+89.25.80.98:8333\n+89.34.99.41:8333\n+89.142.195.112:8333\n+89.163.224.187:8333\n+89.163.224.195:8333\n+89.238.79.235:8333\n+90.46.240.214:8333\n+90.65.232.129:8333\n+90.71.117.90:8333\n+90.149.38.172:8333\n+90.156.97.145:8333\n+90.177.48.104:8333\n 91.106.194.97:8333\n-91.126.77.77:8333\n-91.134.38.195:8333\n-91.156.97.181:8333\n-91.207.68.144:8333\n-91.209.77.101:8333\n-91.214.200.205:8333\n-91.220.131.242:8333\n-91.220.163.18:8333\n-91.233.23.35:8333\n-92.13.96.93:8333\n-92.14.74.114:8333\n+91.135.0.187:8333\n+91.150.189.155:8333\n+91.185.198.216:8333\n+91.196.11.45:8333\n+91.197.44.133:8333\n+91.224.0.227:8333\n+91.226.10.90:8333\n+91.228.45.130:8333\n+91.229.77.239:8333\n+91.238.100.249:8333\n+91.240.141.169:8333\n 92.27.7.209:8333\n-92.221.228.13:8333\n-92.255.207.73:8333\n-93.72.167.148:8333\n-93.74.163.234:8333\n-93.123.174.66:8333\n-93.152.166.29:8333\n-93.181.45.188:8333\n-94.19.12.244:8333\n-94.190.227.112:8333\n-94.198.135.29:8333\n-94.224.162.65:8333\n-94.226.107.86:8333\n-94.242.198.161:8333\n-95.31.10.209:8333\n-95.65.72.244:8333\n-95.84.162.95:8333\n-95.90.139.46:8333\n-95.183.49.27:8005\n-95.215.47.133:8333\n-96.23.67.85:8333\n-96.44.166.190:8333\n-97.93.225.74:8333\n-98.26.0.34:8333\n-98.27.225.102:8333\n-98.229.117.229:8333\n-98.249.68.125:8333\n-98.255.5.155:8333\n-99.101.240.114:8333\n-101.100.174.138:8333\n-101.251.203.6:8333\n-103.3.60.61:8333\n-103.30.42.189:8333\n-103.224.165.48:8333\n-104.36.83.233:8333\n-104.37.129.22:8333\n-104.54.192.251:8333\n-104.128.228.252:8333\n-104.128.230.185:8334\n-104.130.161.47:8333\n-104.131.33.60:8333\n-104.143.0.156:8333\n-104.156.111.72:8333\n-104.167.111.84:8333\n-104.193.40.248:8333\n-104.197.7.174:8333\n-104.197.8.250:8333\n-104.223.1.133:8333\n-104.236.97.140:8333\n-104.238.128.214:8333\n-104.238.130.182:8333\n-106.38.234.84:8333\n-106.185.36.204:8333\n-107.6.4.145:8333\n-107.150.2.6:8333\n-107.150.40.234:8333\n-107.155.108.130:8333\n-107.161.182.115:8333\n-107.170.66.231:8333\n-107.190.128.226:8333\n-107.191.106.115:8333\n-108.16.2.61:8333\n-109.70.4.168:8333\n-109.162.35.196:8333\n-109.163.235.239:8333\n-109.190.196.220:8333\n-109.191.39.60:8333\n-109.234.106.191:8333\n-109.238.81.82:8333\n-114.76.147.27:8333\n-115.28.224.127:8333\n-115.68.110.82:18333\n-118.97.79.218:8333\n-118.189.207.197:8333\n-119.228.96.233:8333\n-120.147.178.81:8333\n-121.41.123.5:8333\n-121.67.5.230:8333\n-122.107.143.110:8333\n-123.2.170.98:8333\n-123.110.65.94:8333\n-123.193.139.19:8333\n-125.239.160.41:8333\n-128.101.162.193:8333\n-128.111.73.10:8333\n-128.140.229.73:8333\n-128.175.195.31:8333\n-128.199.107.63:8333\n-128.199.192.153:8333\n-128.253.3.193:20020\n-129.123.7.7:8333\n-130.89.160.234:8333\n-131.72.139.164:8333\n-131.191.112.98:8333\n-133.1.134.162:8333\n-134.19.132.53:8333\n-137.226.34.42:8333\n-141.41.2.172:8333\n-141.255.128.204:8333\n-142.217.12.106:8333\n-143.215.129.126:8333\n-146.0.32.101:8337\n-147.229.13.199:8333\n-149.210.133.244:8333\n-149.210.162.187:8333\n-150.101.163.241:8333\n-151.236.11.189:8333\n-153.121.66.211:8333\n-154.20.2.139:8333\n-159.253.23.132:8333\n-162.209.106.123:8333\n-162.210.198.184:8333\n-162.218.65.121:8333\n-162.222.161.49:8333\n-162.243.132.6:8333\n-162.243.132.58:8333\n-162.248.99.164:53011\n-162.248.102.117:8333\n-163.158.35.110:8333\n-164.15.10.189:8333\n-164.40.134.171:8333\n-166.230.71.67:8333\n-167.160.161.199:8333\n-168.103.195.250:8333\n-168.144.27.112:8333\n-168.158.129.29:8333\n-170.75.162.86:8333\n-172.90.99.174:8333\n-172.245.5.156:8333\n-173.23.166.47:8333\n-173.32.11.194:8333\n-173.34.203.76:8333\n-173.171.1.52:8333\n-173.175.136.13:8333\n-173.230.228.139:8333\n-173.247.193.70:8333\n-174.49.132.28:8333\n-174.52.202.72:8333\n-174.53.76.87:8333\n-174.109.33.28:8333\n-176.28.12.169:8333\n-176.35.182.214:8333\n-176.36.33.113:8333\n-176.36.33.121:8333\n-176.58.96.173:8333\n-176.121.76.84:8333\n-178.62.70.16:8333\n-178.62.111.26:8333\n-178.76.169.59:8333\n-178.79.131.32:8333\n-178.162.199.216:8333\n-178.175.134.35:8333\n-178.248.111.4:8333\n-178.254.1.170:8333\n-178.254.34.161:8333\n-179.43.143.120:8333\n-179.208.156.198:8333\n+92.54.16.135:8333\n+93.89.84.93:8333\n+93.100.51.48:8333\n+93.100.76.151:8333\n+93.104.214.235:8333\n+93.115.86.246:8333\n+93.123.80.47:8333\n+93.174.88.211:8333\n+93.188.224.253:8333\n+93.190.69.242:8333\n+94.74.81.93:8333\n+94.156.35.8:8333\n+94.176.237.241:8333\n+94.181.44.104:8333\n+94.227.43.171:8333\n+95.79.102.208:8333\n+95.79.102.209:8333\n+95.154.237.24:8333\n+95.183.48.62:8333\n+95.183.48.71:8333\n+95.213.161.2:8333\n+95.213.201.94:8333\n+96.20.227.39:8333\n+96.28.41.91:8333\n+98.127.130.17:8333\n+100.36.48.101:8333\n+101.0.81.42:8333\n+101.0.81.43:8333\n+103.11.64.46:8333\n+103.24.244.69:8333\n+103.47.210.50:8333\n+103.76.41.169:8333\n+103.80.168.57:8333\n+103.203.51.186:8333\n+103.224.118.79:8333\n+103.250.4.74:8333\n+104.192.170.202:8333\n+104.196.0.99:8333\n+104.199.192.85:8333\n+104.219.251.46:8333\n+104.223.108.33:8333\n+104.237.2.189:8333\n+104.247.230.28:8333\n+107.150.45.210:8333\n+107.174.34.77:8333\n+107.174.34.78:8333\n+107.180.71.47:8333\n+108.59.12.163:8333\n+108.168.37.13:8333\n+108.175.3.18:8333\n+108.234.193.106:8333\n+109.9.173.13:8333\n+109.101.220.151:8333\n+109.172.104.119:8333\n+109.195.193.138:8333\n+109.206.177.21:8333\n+109.226.35.28:8333\n+109.255.0.107:8333\n+113.29.183.143:8333\n+114.145.97.73:8333\n+115.66.205.171:8333\n+118.67.201.40:8333\n+118.194.226.168:8333\n+119.28.70.144:8333\n+120.24.166.73:9998\n+120.76.244.201:10022\n+121.82.4.232:8333\n+121.254.173.40:8333\n+123.203.163.128:8333\n+124.171.70.45:8333\n+125.63.57.7:8333\n+125.128.35.41:8333\n+128.208.244.124:8333\n+128.230.208.73:8333\n+131.114.10.233:8333\n+131.114.10.235:8333\n+132.239.36.105:8333\n+134.213.214.233:8333\n+136.61.238.121:8333\n+136.62.86.140:8333\n+136.144.128.49:8333\n+137.48.144.52:8333\n+137.116.160.176:8333\n+137.117.193.113:8333\n+138.19.79.208:8333\n+138.68.64.19:8333\n+139.59.96.16:8333\n+139.162.160.232:8333\n+141.136.115.230:8333\n+142.59.232.111:8333\n+142.111.2.74:8333\n+142.162.128.23:8333\n+143.107.116.5:8333\n+143.229.22.74:8333\n+143.229.36.71:8333\n+144.2.105.60:8333\n+144.76.224.214:8333\n+146.185.19.30:8333\n+147.32.30.25:8333\n+147.229.13.210:8333\n+148.103.7.119:8333\n+150.101.114.194:8333\n+150.229.0.143:8333\n+154.66.207.126:8333\n+158.129.212.236:8333\n+158.129.212.251:8333\n+160.16.206.31:8333\n+162.209.1.233:8333\n+162.209.4.125:8333\n+162.220.246.225:8333\n+163.172.218.186:8333\n+166.230.70.145:8333\n+168.235.74.45:8333\n+169.44.34.88:8333\n+170.75.195.168:8333\n+172.112.2.67:8333\n+173.94.164.38:8333\n+173.183.232.109:8333\n+173.208.176.122:8333\n+173.212.194.114:8333\n+173.232.228.146:8333\n+175.126.124.92:8333\n+175.145.109.51:8333\n+176.24.198.205:8333\n+176.36.37.62:8333\n+176.36.99.222:8333\n+176.106.144.183:8333\n+177.33.1.40:8333\n+178.162.214.225:8333\n+178.164.109.83:8333\n+178.170.138.202:8333\n+178.175.136.122:8333\n+178.218.209.162:8333\n+178.254.2.64:8333\n+178.254.34.144:8333\n+178.255.41.21:8333\n+178.255.144.163:8333\n+180.181.208.42:8333\n 180.200.128.58:8333\n-183.78.169.108:8333\n-183.96.96.152:8333\n-184.68.2.46:8333\n-184.73.160.160:8333\n-184.94.227.58:8333\n-184.152.68.163:8333\n-185.7.35.114:8333\n+180.235.50.14:8333\n+181.215.148.154:8333\n+184.64.13.43:8333\n+184.94.164.170:8333\n+184.152.107.251:8333\n+184.182.233.206:8333\n+185.4.24.199:8333\n+185.20.99.49:8333\n+185.24.97.11:8333\n+185.25.48.27:8333\n+185.25.48.71:8333\n+185.26.196.249:8333\n 185.28.76.179:8333\n-185.31.160.202:8333\n-185.45.192.129:8333\n-185.66.140.15:8333\n-186.2.167.23:8333\n-186.220.101.142:8333\n-188.26.5.33:8333\n-188.75.136.146:8333\n-188.120.194.140:8333\n-188.121.5.150:8333\n-188.138.0.114:8333\n-188.138.33.239:8333\n-188.166.0.82:8333\n-188.182.108.129:8333\n-188.191.97.208:8333\n-188.226.198.102:8001\n-190.10.9.217:8333\n-190.75.143.144:8333\n-190.139.102.146:8333\n-191.237.64.28:8333\n-192.3.131.61:8333\n-192.99.225.3:8333\n-192.110.160.122:8333\n-192.146.137.1:8333\n-192.183.198.204:8333\n-192.203.228.71:8333\n-193.0.109.3:8333\n-193.12.238.204:8333\n-193.91.200.85:8333\n-193.234.225.156:8333\n-194.6.233.38:8333\n-194.63.143.136:8333\n-194.126.100.246:8333\n-195.134.99.195:8333\n-195.159.111.98:8333\n-195.159.226.139:8333\n-195.197.175.190:8333\n-198.48.199.108:8333\n-198.57.208.134:8333\n-198.57.210.27:8333\n-198.62.109.223:8333\n-198.167.140.8:8333\n-198.167.140.18:8333\n-199.91.173.234:8333\n-199.127.226.245:8333\n-199.180.134.116:8333\n-200.7.96.99:8333\n-201.160.106.86:8333\n-202.55.87.45:8333\n-202.60.68.242:8333\n-202.60.69.232:8333\n-202.124.109.103:8333\n-203.30.197.77:8333\n-203.88.160.43:8333\n-203.151.140.14:8333\n-203.219.14.204:8333\n-205.147.40.62:8333\n-207.235.39.214:8333\n-207.244.73.8:8333\n-208.12.64.225:8333\n-208.76.200.200:8333\n-209.40.96.121:8333\n-209.126.107.176:8333\n-209.141.40.149:8333\n-209.190.75.59:8333\n-209.208.111.142:8333\n-210.54.34.164:8333\n-211.72.66.229:8333\n-212.51.144.42:8333\n-212.112.33.157:8333\n-212.116.72.63:8333\n-212.126.14.122:8333\n-213.66.205.194:8333\n-213.111.196.21:8333\n-213.122.107.102:8333\n-213.136.75.175:8333\n-213.155.7.24:8333\n-213.163.64.31:8333\n-213.163.64.208:8333\n-213.165.86.136:8333\n-213.184.8.22:8333\n-216.15.78.182:8333\n-216.55.143.154:8333\n-216.115.235.32:8333\n-216.126.226.166:8333\n-216.145.67.87:8333\n-216.169.141.169:8333\n+185.35.139.250:8333\n+185.41.113.69:8333\n+185.50.213.123:8333\n+185.50.213.124:8333\n+185.50.232.114:8333\n+185.51.192.40:8333\n+185.53.129.244:8333\n+185.71.177.100:8333\n+185.77.129.176:8333\n+185.82.201.51:8333\n+185.121.173.223:8333\n+185.140.252.253:8333\n+185.145.129.184:8333\n+185.145.130.163:8333\n+185.154.156.50:8333\n+185.162.124.69:8333\n+185.170.42.2:8333\n+186.149.197.96:8333\n+188.65.212.138:8333\n+188.65.213.48:8333\n+188.93.209.192:8333\n+188.113.79.45:8333\n+188.113.84.116:8333\n+188.113.164.231:8333\n+188.122.16.153:8333\n+188.165.224.28:8333\n+188.175.239.227:8333\n+188.214.128.18:8333\n+188.227.64.19:8333\n+188.253.2.125:8333\n+189.45.203.166:8333\n+190.184.198.34:8333\n+192.151.145.250:8333\n+192.206.202.6:8333\n+192.228.101.157:8333\n+193.2.76.41:8333\n+193.27.209.100:8333\n+193.33.237.187:8333\n+193.46.83.17:8333\n+193.49.43.219:8333\n+194.24.182.27:8333\n+194.28.206.201:8333\n+194.63.143.197:8333\n+194.71.109.91:8333\n+194.79.8.36:8333\n+194.135.93.38:8333\n+194.186.160.253:8333\n+195.9.140.134:8333\n+195.39.206.29:8333\n+195.67.36.89:8333\n+195.169.99.82:8333\n+195.214.214.253:8333\n+195.223.71.147:8333\n+198.37.118.11:8333\n+198.54.113.125:8333\n+198.101.12.139:8333\n+198.143.12.105:8333\n+198.251.83.19:8333\n+199.127.224.50:8333\n+200.12.138.146:8333\n+200.116.98.185:8333\n+200.122.128.130:8333\n+202.29.6.48:8333\n+202.133.115.115:8333\n+203.59.17.160:8333\n+204.15.11.4:8333\n+204.111.241.195:8333\n+205.251.85.151:8333\n+207.244.70.40:8333\n+207.254.50.72:8333\n+208.76.93.83:8333\n+208.107.97.242:8333\n+208.110.73.107:8333\n+208.118.235.190:8333\n+209.73.142.226:8333\n+209.81.9.223:8333\n+209.126.107.166:8333\n+209.177.86.19:8333\n+209.250.6.190:8333\n+210.1.219.155:8333\n+210.211.109.165:8333\n+210.223.3.44:8333\n+211.21.129.69:8333\n+212.50.98.161:8333\n+212.51.140.183:8333\n+212.56.108.81:8333\n+212.83.35.173:8333\n+212.90.179.206:8333\n+212.93.226.90:8333\n+212.110.171.118:8333\n+213.5.36.58:8333\n+213.5.181.205:8333\n+213.17.16.251:8333\n+213.91.205.134:8333\n+213.91.211.17:8333\n+213.155.3.216:8333\n+213.168.13.151:8333\n+213.186.170.109:8334\n+213.222.208.150:8333\n+216.32.213.112:8333\n+216.59.4.212:8333\n+216.126.193.163:8333\n+216.197.79.74:8333\n+216.218.147.140:8333\n+216.227.39.84:8333\n+216.245.206.181:8333\n 216.249.92.230:8333\n-216.250.138.230:8333\n-217.20.171.43:8333\n-217.23.2.71:8333\n-217.23.2.242:8333\n-217.25.9.76:8333\n-217.40.226.169:8333\n-217.123.98.9:8333\n-217.155.36.62:8333\n-217.172.32.18:20993\n-218.61.196.202:8333\n-218.231.205.41:8333\n-220.233.77.200:8333\n-223.18.226.85:8333\n-223.197.203.82:8333\n-223.255.166.142:8333\n-[2001:1291:2bf:1::100]:8333\n-[2001:1418:100:5c2::2]:8333\n-[2001:16d8:dd24:0:86c9:681e:f931:256]:8333\n-[2001:19f0:1624:e6::579d:9428]:8333\n-[2001:19f0:300:1340:225:90ff:fec9:2b6d]:8333\n-[2001:19f0:4009:1405::64]:8333\n-[2001:1b40:5000:2e::3fb0:6571]:8333\n-[2001:410:a000:4050:8463:90b0:fffb:4e58]:8333\n-[2001:410:a002:cafe:8463:90b0:fffb:4e58]:8333\n-[2001:41d0:1:541e::1]:8333\n-[2001:41d0:1:6a34::3]:8333\n-[2001:41d0:1:6cd3::]:8333\n+217.12.199.207:8333\n+217.23.2.177:8333\n+217.23.5.68:8333\n+217.28.194.2:8333\n+217.35.130.42:8333\n+217.64.47.138:8333\n+217.101.72.242:8333\n+217.145.81.229:8333\n+217.168.143.169:8333\n+217.169.7.111:8333\n+217.182.192.7:8333\n+219.88.232.229:8333\n+219.113.244.52:8333\n+220.130.128.58:8333\n+220.244.225.239:8333\n+221.141.3.12:8333\n+222.166.176.99:8333\n+223.252.173.147:8333\n+[2001:0:4137:9e76:1025:4e5:acb0:22cd]:8333\n+[2001:0:4137:9e76:1078:18a6:5d2c:2461]:8333\n+[2001:0:4137:9e76:10ec:236a:bd3b:f3c0]:8333\n+[2001:0:4137:9e76:186d:3f17:b7ad:95cf]:8333\n+[2001:0:4137:9e76:1870:242:ac03:aaf9]:8333\n+[2001:0:4137:9e76:18a6:1102:2abf:eb70]:8333\n+[2001:0:4137:9e76:1ce5:248c:4ff5:2b1d]:8333\n+[2001:0:4137:9e76:200f:156a:bc77:3acd]:8333\n+[2001:0:4137:9e76:2418:19d1:cddc:b1af]:8333\n+[2001:0:4137:9e76:2857:3d78:aaf8:eb28]:8333\n+[2001:0:4137:9e76:28b2:1b84:64fb:2d6a]:8333\n+[2001:0:4137:9e76:2c70:d51:d046:1209]:8333\n+[2001:0:4137:9e76:2cac:2fcf:46bb:be0d]:8333\n+[2001:0:4137:9e76:305e:20ee:a94f:6f69]:8333\n+[2001:0:4137:9e76:30cd:849:adfe:6e67]:8333\n+[2001:0:4137:9e76:345b:f12:ae1e:2948]:8333\n+[2001:0:4137:9e76:3c40:146e:9741:5a3a]:8333\n+[2001:0:4137:9e76:3c9e:3c3e:9d6e:7340]:8333\n+[2001:0:4137:9e76:499:29a8:d047:7ea1]:8333\n+[2001:0:4137:9e76:51:24:81b2:59e3]:8333\n+[2001:0:4137:9e76:889:2d7c:b61b:bf0d]:8333\n+[2001:0:4137:9e76:c9f:379c:add2:c938]:8333\n+[2001:0:4137:9e76:cd6:2eb4:b82b:addb]:8333\n+[2001:0:4137:9e76:cf0:2e3a:b29d:6207]:8333\n+[2001:0:53aa:64c:1485:fbf9:a798:1ffe]:8333\n+[2001:0:53aa:64c:59:617f:a10d:e0]:8333\n+[2001:0:5ef5:79fb:1020:2cd0:4750:eb12]:8333\n+[2001:0:5ef5:79fb:1036:1d50:3881:6930]:8333\n+[2001:0:5ef5:79fb:10a4:27d8:9c0a:cfa9]:8333\n+[2001:0:5ef5:79fb:10ae:5a8:524b:dcc4]:8333\n+[2001:0:5ef5:79fb:1892:3e3a:3f74:affa]:8333\n+[2001:0:5ef5:79fb:1c95:1a60:d1f5:215b]:8333\n+[2001:0:5ef5:79fb:200b:16ef:b9cf:9860]:8333\n+[2001:0:5ef5:79fb:28e4:fbff:3237:992]:8333\n+[2001:0:5ef5:79fb:2ce8:1d9e:b3bf:b53e]:8333\n+[2001:0:5ef5:79fb:300a:2e20:4750:eb12]:8333\n+[2001:0:5ef5:79fb:30a2:1ad9:5324:836a]:8333\n+[2001:0:5ef5:79fb:3409:1996:bcac:241f]:8333\n+[2001:0:5ef5:79fb:344b:2bd4:bb3e:e26]:8333\n+[2001:0:5ef5:79fb:34b3:11db:e7da:d461]:8333\n+[2001:0:5ef5:79fb:3839:2e0c:ba30:288e]:8333\n+[2001:0:5ef5:79fb:3880:ef4:b5f0:ee4d]:8333\n+[2001:0:5ef5:79fb:389f:52:9c0c:1f41]:8333\n+[2001:0:5ef5:79fb:3c73:304a:9d8b:99d5]:8333\n+[2001:0:5ef5:79fb:3cac:33e4:39ca:38c]:8333\n+[2001:0:5ef5:79fb:6f:3667:5398:538f]:8333\n+[2001:0:5ef5:79fb:88c:3e6:9454:3331]:8333\n+[2001:0:5ef5:79fb:89:3b55:9fcc:8e66]:8333\n+[2001:0:5ef5:79fb:c9b:3d65:bdf4:5d58]:8333\n+[2001:0:5ef5:79fb:cb7:8cc:b8ee:6806]:8333\n+[2001:0:5ef5:79fd:24f6:37b5:b9d2:2aa7]:8333\n+[2001:0:5ef5:79fd:3c63:82e:aabc:bd39]:8333\n+[2001:0:5ef5:79fd:3cf5:2eb7:c966:561d]:8333\n+[2001:0:5ef5:79fd:cf4:28e2:aabd:b766]:8333\n+[2001:0:9d38:6ab8:10f6:453:3ca4:1a8e]:8333\n+[2001:0:9d38:6ab8:14dd:298b:431c:bfec]:8333\n+[2001:0:9d38:6ab8:3051:1561:b62d:73a5]:8333\n+[2001:0:9d38:6ab8:3467:ffa:b612:e9c6]:8333\n+[2001:0:9d38:6ab8:8e8:1e26:e8e3:eed7]:8333\n+[2001:0:9d38:6ab8:c82:37b3:47ee:3ae2]:8333\n+[2001:0:9d38:6abd:1052:3cd8:a89b:e67]:8333\n+[2001:0:9d38:6abd:144d:23f3:abcb:8bcb]:8333\n+[2001:0:9d38:6abd:1c2e:31df:adf1:e616]:8333\n+[2001:0:9d38:6abd:1c41:213b:facc:9c6b]:8333\n+[2001:0:9d38:6abd:2093:12b5:8cbf:4f57]:8333\n+[2001:0:9d38:6abd:243a:2394:fd91:712c]:8333\n+[2001:0:9d38:6abd:2833:9f8:c94c:6881]:8333\n+[2001:0:9d38:6abd:2c84:29d3:ae5a:f6f0]:8333\n+[2001:0:9d38:6abd:2ce4:d50:cb22:3672]:8333\n+[2001:0:9d38:6abd:3824:816:c30d:e9d4]:8333\n+[2001:0:9d38:6abd:389a:24e9:cb5c:a1cd]:8333\n+[2001:0:9d38:6abd:38bd:88f:2193:4932]:8333\n+[2001:0:9d38:6abd:3c4f:cb1:d65b:d775]:8333\n+[2001:0:9d38:6abd:3c51:280b:b1e9:ffd]:8333\n+[2001:0:9d38:6abd:3c5a:2e2:2193:4932]:8333\n+[2001:0:9d38:6abd:3c5e:3ebf:3dc0:703a]:8333\n+[2001:0:9d38:6abd:4c9:12fc:d1d9:dc21]:8333\n+[2001:0:9d38:6abd:6e:34e7:d0a7:6772]:8333\n+[2001:0:9d38:6abd:8de:1f29:2aea:f96f]:8333\n+[2001:0:9d38:6abd:c5f:2674:a467:787c]:8333\n+[2001:0:9d38:6abd:cc0:23a4:ad7c:c998]:8333\n+[2001:0:9d38:78cf:20c0:2097:d188:9c3b]:8333\n+[2001:0:9d38:78cf:2420:dda:4ff6:8794]:8333\n+[2001:0:9d38:78cf:2892:fcb:26b2:22ac]:8333\n+[2001:0:9d38:78cf:3020:1ad7:26b2:22ac]:8333\n+[2001:0:9d38:78cf:30ae:211b:e717:7788]:8333\n+[2001:0:9d38:78cf:30d0:6edd:a418:a9e9]:8333\n+[2001:0:9d38:78cf:30d9:3278:b004:65a7]:8333\n+[2001:0:9d38:78cf:387a:17d5:dacb:bdf1]:8333\n+[2001:0:9d38:78cf:3c38:c41:433c:7b87]:8333\n+[2001:0:9d38:78cf:467:193:a8b0:a122]:8333\n+[2001:0:9d38:78cf:c65:fb96:97d2:a9b0]:8333\n+[2001:0:9d38:78cf:c9f:2633:d169:9999]:8333\n+[2001:0:9d38:78cf:ce2:aba:d120:90db]:8333\n+[2001:0:9d38:90d7:105d:26f2:a241:7339]:8333\n+[2001:0:9d38:90d7:1062:3f95:e065:fc21]:8333\n+[2001:0:9d38:90d7:10a6:19f6:ab95:ebcb]:8333\n+[2001:0:9d38:90d7:14e2:22cb:738f:9489]:8333\n+[2001:0:9d38:90d7:18fb:3da9:893d:1d57]:8333\n+[2001:0:9d38:90d7:1cc3:2534:e020:53fa]:8333\n+[2001:0:9d38:90d7:206d:2b34:d0cb:9de8]:8333\n+[2001:0:9d38:90d7:20cb:2cb:b9a7:ca5e]:8333\n+[2001:0:9d38:90d7:245c:2753:4382:704b]:8333\n+[2001:0:9d38:90d7:24d6:225f:793b:bf5]:8333\n+[2001:0:9d38:90d7:24da:8f0:bbf9:9c93]:8333\n+[2001:0:9d38:90d7:28a2:107b:438e:b08d]:8333\n+[2001:0:9d38:90d7:2c16:d58:b381:b61]:8333\n+[2001:0:9d38:90d7:2c68:3068:cb59:3be7]:8333\n+[2001:0:9d38:90d7:2c90:3855:b94f:c926]:8333\n+[2001:0:9d38:90d7:2ca2:3592:c111:dd82]:8333\n+[2001:0:9d38:90d7:2cce:1f6e:b381:8605]:8333\n+[2001:0:9d38:90d7:3435:3915:2bcc:6cc7]:8333\n+[2001:0:9d38:90d7:3438:2b9f:ad57:a721]:8333\n+[2001:0:9d38:90d7:3474:1df1:e732:e5e3]:8333\n+[2001:0:9d38:90d7:38c4:37af:ab0a:f5ef]:8333\n+[2001:0:9d38:90d7:3a:39fd:a43b:5591]:8333\n+[2001:0:9d38:90d7:3c9d:2a45:d537:3bd6]:8333\n+[2001:0:9d38:90d7:3cfb:2cf5:5254:4d1e]:8333\n+[2001:0:9d38:90d7:43f:337:adb4:6310]:8333\n+[2001:0:9d38:90d7:493:995:d2e9:39be]:8333\n+[2001:0:9d38:90d7:5b:ce3:b275:92ab]:8333\n+[2001:0:9d38:90d7:8a8:59d:d0cb:d585]:8333\n+[2001:0:9d38:90d7:c8e:1ba0:c5a9:dace]:8333\n+[2001:0:9d38:90d7:cdb:365f:2302:f729]:8333\n+[2001:0:9d38:90d7:cf5:222e:893e:716c]:8333\n+[2001:0:9d38:90d7:d6:1085:b8dd:41c2]:8333\n+[2001:0:9d38:953c:101a:23b3:6b98:f888]:8333\n+[2001:0:9d38:953c:1805:f38:3eb2:2121]:8333\n+[2001:0:9d38:953c:1858:16f9:3833:da19]:8333\n+[2001:0:9d38:953c:18ea:2735:e73d:adc5]:8333\n+[2001:0:9d38:953c:1c44:2b70:9de7:a7cc]:8333\n+[2001:0:9d38:953c:200a:3f95:bb7c:c09f]:8333\n+[2001:0:9d38:953c:200c:3473:b85d:ddd]:8333\n+[2001:0:9d38:953c:200f:5a0:47c6:5507]:8333\n+[2001:0:9d38:953c:2097:204a:47c5:5881]:8333\n+[2001:0:9d38:953c:248f:24cd:aaf5:dee3]:8333\n+[2001:0:9d38:953c:287d:168e:3caf:47af]:8333\n+[2001:0:9d38:953c:28c1:58d:b721:94c1]:8333\n+[2001:0:9d38:953c:2c31:30a3:39d3:528]:8188\n+[2001:0:9d38:953c:2c3d:309b:d2db:8288]:8333\n+[2001:0:9d38:953c:2c47:1b36:52c1:3c73]:8333\n+[2001:0:9d38:953c:304a:10e1:b739:822a]:8333\n+[2001:0:9d38:953c:30a3:29fd:33f6:eaab]:8333\n+[2001:0:9d38:953c:3427:859b:b525:1069]:8333\n+[2001:0:9d38:953c:3459:2541:3651:d675]:8333\n+[2001:0:9d38:953c:4f5:9c88:af91:d3d3]:8333\n+[2001:0:9d38:953c:cd1:1d54:b80a:42f4]:8333\n+[2001:0:9d38:953c:cfa:37e6:9d8e:7474]:8333\n+[2001:13d8:1c01:2000:2470::1]:8333\n+[2001:1470:fffd:202c:225:90ff:fe8f:5f62]:8333\n+[2001:14ba:200:0:543c:42ce:a48b:b0d0]:8333\n+[2001:14ba:2fc:700:41b2:df51:efd8:f581]:8333\n+[2001:19f0:5000:8c8b:5400:ff:fe1f:c023]:8333\n+[2001:19f0:5:749:5400:ff:fe71:c3fc]:8333\n+[2001:19f0:5:bc:5400:ff:fe3b:9339]:8333\n+[2001:19f0:7402:42c:5400:ff:fe6c:b9b8]:8333\n+[2001:1af8:4010:a08f:f811:e5f0:3f63:e753]:8333\n+[2001:1af8:4010:a094:3333::8c38]:8333\n+[2001:1af8:4070:a016:3333::5afb]:8333\n+[2001:1af8:4700:a071:4444::e26e]:8333\n+[2001:1bc8:1a0:590e:2e0:f4ff:fe16:3a39]:8333\n+[2001:2040:77::89]:8333\n+[2001:288:1001:107:294e:5581:74bd:42f9]:8333\n+[2001:3c8:c103:a001::48]:8333\n+[2001:4128:6135:10:20c:29ff:fe69:9e81]:8333\n+[2001:4128:6135:2010:21e:bff:fee8:a3c0]:8333\n+[2001:4128:6135:e001:5054:ff:fe37:e9eb]:8333\n+[2001:4178:6:1427:62:116:188:85]:8333\n+[2001:41d0:1004:20f0::]:8333\n+[2001:41d0:1008:2752::]:8333\n+[2001:41d0:1:4722::1]:8333\n+[2001:41d0:1:6f57::1]:8333\n+[2001:41d0:1:7353::1]:8333\n+[2001:41d0:1:7469::1]:8333\n+[2001:41d0:1:7d09::1]:8333\n [2001:41d0:1:8b26::1]:8333\n-[2001:41d0:1:a33d::1]:8333\n-[2001:41d0:1:b855::1]:8333\n-[2001:41d0:1:c139::1]:8333\n-[2001:41d0:1:c8d7::1]:8333\n-[2001:41d0:1:dd3f::1]:8333\n-[2001:41d0:1:e29d::1]:8333\n-[2001:41d0:1:f59f::33]:8333\n-[2001:41d0:1:f7cc::1]:8333\n-[2001:41d0:1:ff87::1]:8333\n-[2001:41d0:2:2f05::1]:8333\n-[2001:41d0:2:37c3::]:8200\n-[2001:41d0:2:3e13::1]:8333\n-[2001:41d0:2:8619::]:8333\n+[2001:41d0:1:c129::1]:8333\n+[2001:41d0:1:d227::]:8333\n+[2001:41d0:1:e13b::1]:8333\n+[2001:41d0:1:e623::1]:8333\n+[2001:41d0:2:16be::1]:8333\n+[2001:41d0:2:203c::1]:8333\n+[2001:41d0:2:3242::]:8333\n+[2001:41d0:2:8a0f::]:8333\n+[2001:41d0:2:8c65::]:8333\n+[2001:41d0:2:8d13::]:8333\n+[2001:41d0:2:9459::]:8333\n+[2001:41d0:2:950a:ffff:ffff:0:3]:8333\n [2001:41d0:2:9c94::1]:8333\n-[2001:41d0:2:a24f::]:8333\n-[2001:41d0:2:adbf::]:8333\n-[2001:41d0:2:b721::1]:8333\n-[2001:41d0:2:ee52::1]:8333\n-[2001:41d0:2:f1a5::]:8333\n-[2001:41d0:2:fa54::1]:8333\n-[2001:41d0:51:1::2036]:8333\n-[2001:41d0:52:a00::1a1]:8333\n-[2001:41d0:52:cff::6f5]:8333\n-[2001:41d0:52:d00::2c0]:8333\n-[2001:41d0:52:d00::cf2]:8333\n-[2001:41d0:8:1087::1]:8333\n-[2001:41d0:8:4a3c::b7c]:8333\n-[2001:41d0:8:6728::]:8333\n-[2001:41d0:8:b779::1]:8333\n-[2001:41d0:8:c30f::1]:8333\n-[2001:41d0:8:d2b2::1]:8333\n-[2001:41d0:8:d5c3::1]:8333\n-[2001:41d0:8:eb8b::]:8333\n-[2001:41d0:a:16d0::1]:8333\n-[2001:41d0:a:2b18::1]:8333\n-[2001:41d0:a:3a9c::1]:8333\n-[2001:41d0:a:4903::]:8333\n-[2001:41d0:a:57b::1]:8333\n-[2001:41d0:a:5c7a::]:8333\n+[2001:41d0:2:a212::]:8333\n+[2001:41d0:2:a232::]:8333\n+[2001:41d0:2:ab1c::]:8333\n+[2001:41d0:2:bf2a::]:8333\n+[2001:41d0:2:c793::]:8333\n+[2001:41d0:302:1000::fa25]:8333\n+[2001:41d0:303:1907::]:8333\n+[2001:41d0:52:d00::6e2]:8333\n+[2001:41d0:52:d00::6e3]:8333\n+[2001:41d0:8:1b29::]:8333\n+[2001:41d0:8:3d4b::1]:8333\n+[2001:41d0:8:4d4d::1]:8333\n+[2001:41d0:8:7a38::1]:8333\n+[2001:41d0:8:8f46::1]:8333\n+[2001:41d0:8:ba87::1]:8333\n+[2001:41d0:8:bd45::1]:8333\n+[2001:41d0:8:bed3::]:8333\n+[2001:41d0:8:c67c::]:8333\n+[2001:41d0:8:d844:1337::1017]:8333\n+[2001:41d0:8:ddb::1]:8333\n+[2001:41d0:8:ddf::1]:8333\n+[2001:41d0:8:de3d::1]:8333\n+[2001:41d0:8:e3e4::1]:8333\n+[2001:41d0:a:4e3f::1c7d:6b01]:8333\n+[2001:41d0:a:635b::1]:8333\n+[2001:41d0:a:6810::1]:8333\n [2001:41d0:a:6c29::1]:8333\n-[2001:41d0:a:f482::1]:8333\n-[2001:41d0:b:854:b7c:b7c:b7c:b7c]:8333\n+[2001:41d0:a:6fd0::]:8333\n+[2001:41d0:a:fac7::1]:8333\n [2001:41d0:d:111c::]:8333\n-[2001:44b8:4116:7801:4216:7eff:fe78:3fe4]:8333\n-[2001:470:1f08:837::2]:8333\n-[2001:470:1f08:c33::2]:8333\n-[2001:470:1f09:bca:218:7dff:fe10:be33]:8333\n-[2001:470:1f0f:22d::212:26]:8333\n-[2001:470:1f11:12d5::ae1:5611]:8333\n-[2001:470:1f14:57a::2]:8333\n-[2001:470:1f14:7d::2]:8333\n-[2001:470:1f15:57c::1]:8333\n-[2001:470:1f15:dda:3d9a:3f11:9a56:ed64]:8333\n+[2001:41d0:d:2ac8::]:8333\n+[2001:41d0:e:1388::1]:8333\n+[2001:41f0:61:0:72f3:95ff:fe09:7521]:8333\n+[2001:41f0:61::7]:8333\n+[2001:470:1f07:151c:baac:6fff:feb7:3ba9]:8333\n+[2001:470:1f0b:8c4::5]:8333\n+[2001:470:1f0b:967::11]:8333\n+[2001:470:1f15:11f8::10]:8333\n+[2001:470:1f15:1b95:2c3e:8a9a:24e1:7084]:8333\n+[2001:470:1f15:f28::3]:8333\n+[2001:470:1f1a:172::2]:8333\n+[2001:470:1f1c:b07::2]:8333\n+[2001:470:1f1d:3a9::10]:8333\n [2001:470:25:482::2]:8333\n-[2001:470:25:e4::2]:8333\n-[2001:470:4:26b::2]:8333\n-[2001:470:5f:5f::232]:8333\n-[2001:470:66:119::2]:8333\n-[2001:470:67:39d::71]:8333\n-[2001:470:6c4f::cafe]:8333\n-[2001:470:8:2e1::43]:8333\n-[2001:470:90a7:96::afe:6021]:8333\n-[2001:470:95c1::2]:8333\n-[2001:470:b1d0:ffff::1000]:8333\n-[2001:470:c1f2:3::201]:8333\n+[2001:470:28:365::4]:8333\n+[2001:470:754f:42::17a]:8333\n+[2001:470:7:b74::2]:8333\n+[2001:470:7dda:1::1]:8333\n+[2001:470:8:c70:20c:29ff:fe6a:8fdc]:8333\n+[2001:470:8:c70::54]:8333\n+[2001:470:a:c13::2]:8333\n [2001:470:d00d:0:3664:a9ff:fe9a:5150]:8333\n-[2001:470:e250:0:211:11ff:feb9:924c]:8333\n-[2001:4800:7817:101:be76:4eff:fe04:dc52]:8333\n-[2001:4800:7819:104:be76:4eff:fe04:7809]:8333\n-[2001:4800:7819:104:be76:4eff:fe05:c828]:8333\n-[2001:4802:7800:2:30d7:1775:ff20:1858]:8333\n-[2001:4802:7802:101:be76:4eff:fe20:256]:8333\n-[2001:4802:7802:103:be76:4eff:fe20:2de8]:8333\n-[2001:4830:1100:2e8::2]:8333\n-[2001:4ba0:fff7:181:dead::1]:8333\n-[2001:4ba0:fffa:5d::93]:8333\n-[2001:4ba0:ffff:1be:1:1005:0:1]:8335\n-[2001:4c48:110:101:216:3eff:fe24:1162]:8333\n-[2001:4dd0:f101::32]:8333\n-[2001:4dd0:ff00:867f::3]:8333\n-[2001:4dd0:ff00:9a67::9]:8333\n-[2001:4dd0:ff00:9c55:c23f:d5ff:fe6c:7ee9]:8333\n-[2001:5c0:1400:b::3cc7]:8333\n-[2001:5c0:1400:b::3d01]:8333\n-[2001:5c0:1400:b::8df]:8333\n-[2001:5c0:1501:300::3]:8333\n-[2001:610:1b19::3]:8333\n-[2001:620:500:fff0:f21f:afff:fecf:91cc]:8333\n-[2001:67c:1220:80c:ad:8de2:f7e2:c784]:8333\n-[2001:67c:21ec:1000::b]:8333\n-[2001:6f8:1296:0:76d4:35ff:feba:1d26]:8333\n-[2001:840:f000:4250:3e4a:92ff:fe6d:145f]:8333\n-[2001:8d8:840:500::39:1ae]:8333\n-[2001:980:efd8:0:21:de4a:2709:912]:8333\n-[2001:981:46:1::3]:8333\n-[2001:981:9319:2:c0:a8:c8:8]:8333\n-[2001:9d8:cafe:3::91]:8333\n-[2001:ad0:1:1:26be:5ff:fe25:959d]:8333\n-[2001:ba8:1f1:f34c::2]:8333\n-[2001:bc8:381c:100::1]:8333\n-[2002:175c:4caa::175c:4caa]:8333\n-[2002:4404:82f1:0:8d55:8fbb:15fa:f4e0]:8333\n-[2002:4475:2233:0:21f:5bff:fe33:9f70]:8333\n-[2002:596c:48c3::596c:48c3]:8333\n-[2002:8c6d:6521:9617:12bf:48ff:fed8:1724]:8333\n-[2002:a646:5e6a::1:2]:8333\n-[2002:b009:20c5::b009:20c5]:8333\n-[2400:8900::f03c:91ff:fe6e:823e]:8333\n-[2400:8900::f03c:91ff:fe70:d164]:8333\n-[2400:8901::f03c:91ff:fe37:9761]:8333\n+[2001:470:dbf2:aaaa::b17:c01c]:8333\n+[2001:470:f457:8000::a6]:8333\n+[2001:4801:7819:74:b745:b9d5:ff10:a61a]:8333\n+[2001:4801:7819:74:b745:b9d5:ff10:aaec]:8333\n+[2001:4801:7828:104:be76:4eff:fe10:1325]:8333\n+[2001:4ba0:cafe:13c0::1]:8333\n+[2001:4ba0:cafe:418::1]:8333\n+[2001:558:6045:23:1830:896c:d901:190d]:8333\n+[2001:67c:1220:80c::93e5:dd2]:8333\n+[2001:67c:2128:ffff:6062:36ff:fe30:6532]:8333\n+[2001:8d8:923:8400::87:ebd]:8333\n+[2001:981:4452:1::100]:8333\n+[2001:981:46:1:ba27:ebff:fe5b:edee]:8333\n+[2001:981:bdbd:1:c506:7d38:4b47:da15]:8333\n+[2001:985:79af:20::35]:8333\n+[2001:bc8:225f:10e:505:6573:7573:d0a]:8333\n+[2001:bc8:323c:100::53]:8333\n+[2001:bc8:323c:100::80:4]:8333\n+[2001:bc8:323c:100::cafe]:8333\n+[2001:bc8:3680:4242::1]:8333\n+[2001:bc8:399f:f000::1]:8333\n+[2002:1e2:5587::1e2:5587]:8333\n+[2002:1e2:5588::1e2:5588]:8333\n+[2002:2a33:21c4::2a33:21c4]:8333\n+[2002:2e04:784b::2e04:784b]:8333\n+[2002:2ebc:2c14::16]:8333\n+[2002:2f5a:3c1c::2f5a:3c1c]:10011\n+[2002:2f5a:562a::2f5a:562a]:8333\n+[2002:2f5b:a5f9::2f5b:a5f9]:8333\n+[2002:3141:28c::3141:28c]:8333\n+[2002:323f:a2f2::323f:a2f2]:8333\n+[2002:323f:fbd::323f:fbd]:8333\n+[2002:33ff:69a0::1]:8333\n+[2002:3e6a:106f::3e6a:106f]:8333\n+[2002:3e70:bbc::3e70:bbc]:8333\n+[2002:3e7a:6727::3e7a:6727]:8333\n+[2002:3f62:e6bb::3f62:e6bb]:8333\n+[2002:4540:4b30::4540:4b30]:8333\n+[2002:4e6b:c745::1]:8333\n+[2002:5052:4d8a::5052:4d8a]:8333\n+[2002:51a9:9cc9::51a9:9cc9]:8333\n+[2002:54fb:cb05::1]:8333\n+[2002:5bc2:5428::5bc2:5428]:8333\n+[2002:5bce:1253::5bce:1253]:8333\n+[2002:5bdb:19e8::5bdb:19e8]:8333\n+[2002:5c3f:3912::5c3f:3912]:8333\n+[2002:5dbd:91a9::5dbd:91a9]:8333\n+[2002:5dbe:8cc6::5dbe:8cc6]:8333\n+[2002:5fd3:8944::5fd3:8944]:8333\n+[2002:65c8:a018::65c8:a018]:8333\n+[2002:6750:a839::6750:a839]:8333\n+[2002:67fa:44b::67fa:44b]:8333\n+[2002:6a0e:3ea8::6a0e:3ea8]:10011\n+[2002:6a0f:2497::6a0f:2497]:8333\n+[2002:6dec:5ac7::6dec:5ac7]:8333\n+[2002:704a:d6d4::704a:d6d4]:9997\n+[2002:7237:fcf6::7237:fcf6]:20188\n+[2002:76b2:7f40::76b2:7f40]:8333\n+[2002:7819:7e80::7819:7e80]:7743\n+[2002:781b:8db8::781b:8db8]:8333\n+[2002:7b38:cd00::7b38:cd00]:8333\n+[2002:ac52:b854::ac52:b854]:8333\n+[2002:b610:1ca3::b610:1ca3]:8333\n+[2002:b946:694a::b946:694a]:8339\n+[2002:b994:9167::b994:9167]:8333\n+[2002:bc28:6b92::bc28:6b92]:8333\n+[2002:c23f:8fc5::c23f:8fc5]:8333\n+[2002:c338:3f0a::c338:3f0a]:8333\n+[2002:d1b1:5615::d1b1:5615]:8333\n+[2002:d2d3:6da5::d2d3:6da5]:8333\n+[2002:d917:2b1::d917:2b1]:8333\n+[2002:db71:f434::db71:f434]:8333\n+[2003:a:36f:4f01::1]:8333\n+[2003:a:37f:ef4f:dead:babe:b00b:beef]:8333\n+[2400:8901::f03c:91ff:fe2c:63d8]:8333\n+[2400:8902::f03c:91ff:fed5:9d8d]:8333\n+[2401:2500:203:10:153:120:156:83]:8333\n+[2401:a400:3200:5600:14ee:f361:4bdc:1f7c]:8333\n+[2402:1f00:8100:36::]:8333\n [2403:4200:403:2::ff]:8333\n-[2403:b800:1000:64:40a:e9ff:fe5f:94c1]:8333\n-[2403:b800:1000:64:9879:17ff:fe6a:a59f]:8333\n-[2600:3c00::f03c:91ff:fe18:59b2]:8333\n-[2600:3c00::f03c:91ff:fe37:a4b1]:8333\n-[2600:3c00::f03c:91ff:fe56:2973]:8333\n-[2600:3c00::f03c:91ff:fe6e:7297]:8333\n-[2600:3c00::f03c:91ff:fe84:8a6e]:8333\n-[2600:3c01::f03c:91ff:fe18:6adf]:8333\n-[2600:3c01::f03c:91ff:fe18:e217]:8333\n-[2600:3c01::f03c:91ff:fe33:1b31]:8333\n-[2600:3c01::f03c:91ff:fe33:2fe1]:8333\n-[2600:3c01::f03c:91ff:fe33:a03f]:8333\n-[2600:3c01::f03c:91ff:fe50:5e06]:8333\n-[2600:3c01::f03c:91ff:fe56:d645]:8333\n-[2600:3c01::f03c:91ff:fe6e:a3dc]:8333\n-[2600:3c01::f03c:91ff:fe89:a659]:8333\n-[2600:3c02::f03c:91ff:fe6e:6f0b]:8333\n-[2600:3c03::f03c:91ff:fe33:f6fb]:8333\n-[2600:3c03::f03c:91ff:fe50:5fa7]:8333\n-[2600:3c03::f03c:91ff:fe6e:1803]:8333\n-[2600:3c03::f03c:91ff:fe6e:4ac0]:8333\n-[2601:6:4800:47f:1e4e:1f4d:332c:3bf6]:8333\n-[2601:d:5400:fed:8d54:c1e8:7ed7:d45e]:8333\n-[2602:100:4b8f:6d2a:20c:29ff:feaf:c4c2]:8333\n-[2602:ffc5:1f::1f:2d61]:8333\n-[2602:ffc5:1f::1f:9211]:8333\n-[2602:ffc5::ffc5:b844]:8333\n-[2602:ffe8:100:2::457:936b]:8333\n-[2602:ffea:1001:125::2ad4]:8333\n-[2602:ffea:1001:6ff::837d]:8333\n-[2602:ffea:1001:72b::578b]:8333\n-[2602:ffea:1001:77a::9cae]:8333\n-[2602:ffea:1:2fe::6bc8]:8333\n-[2602:ffea:1:701::7968]:8333\n-[2602:ffea:1:70d::82ec]:8333\n-[2602:ffea:1:9ff::e957]:8333\n-[2602:ffea:1:a5d::4acb]:8333\n-[2602:ffea:a::24c4:d9fd]:8333\n-[2602:ffea:a::c06:ae32]:8333\n-[2604:0:c1:100:1ec1:deff:fe54:2235]:8333\n-[2604:180:1:1af::42a9]:8333\n-[2604:180::b208:398]:8333\n-[2604:2880::6072:aed]:8333\n-[2604:4080:1114:0:3285:a9ff:fe93:850c]:8333\n-[2604:7c00:17:3d0::5a4d]:8333\n-[2604:9a00:2100:a009:2::]:8333\n-[2604:a880:1:20::22a:4001]:8333\n-[2604:a880:800:10::752:f001]:8333\n-[2604:c00:88:32:216:3eff:fee4:fcca]:8333\n-[2604:c00:88:32:216:3eff:fef5:bc21]:8333\n-[2605:7980:1:2::1761:3d4e]:8333\n-[2605:e000:1417:4068:223:32ff:fe96:e2d]:8333\n-[2606:6000:a441:9903:5054:ff:fe78:66ff]:8333\n-[2606:df00:2::ae85:8fc6]:8333\n-[2607:5300:100:200::e7f]:8333\n-[2607:5300:10::a1]:8333\n-[2607:5300:60:116e::1]:8333\n-[2607:5300:60:1535::]:8333\n-[2607:5300:60:1b32::1]:8333\n-[2607:5300:60:2337::1]:8333\n-[2607:5300:60:2b90::1]:8333\n-[2607:5300:60:2d99::1]:8333\n-[2607:5300:60:3cb::1]:8333\n-[2607:5300:60:4a85::]:8333\n-[2607:5300:60:5112:0:2:4af5:63fe]:8333\n-[2607:5300:60:6dd5::]:8333\n-[2607:5300:60:a91::1]:8333\n-[2607:f1c0:820:1500::7f:3f44]:8333\n-[2607:f1c0:848:1000::48:943c]:8333\n-[2607:f948:0:1::7]:8333\n-[2607:fcd0:100:2300::4ad:e594]:8333\n-[2607:fcd0:100:2300::659e:9cb3]:8333\n-[2607:fcd0:100:2300::c74b:a8ae]:8333\n-[2607:fcd0:100:2300::d82:d8c2]:8333\n-[2607:fcd0:100:4300::8795:2fa8]:8333\n-[2607:fcd0:daaa:901::9561:e043]:8333\n-[2a00:1178:2:43:5054:ff:fee7:2eb6]:8333\n-[2a00:1328:e100:cc42:230:48ff:fe92:55d]:8333\n-[2a00:14f0:e000:80d2:cd1a::1]:8333\n+[2405:9800:b440:947f:59a5:f379:1876:858c]:8333\n+[2405:aa00:2::40]:8333\n+[2406:da14:445:5201::4]:8333\n+[2406:da18:f7c:4351:1a58:81fe:6ed0:1103]:8333\n+[2406:da18:f7c:4351:22aa:2585:fe88:7d58]:8333\n+[2406:da18:f7c:4351:2674:33bb:25d6:cbba]:8333\n+[2406:da18:f7c:4351:2e19:a8c7:a36a:bde0]:8333\n+[2406:da18:f7c:4351:3cc8:43d:fbcc:5067]:8333\n+[2406:da18:f7c:4351:5228:2b53:bb9a:edf5]:8333\n+[2406:da18:f7c:4351:5729:102:998c:d41a]:8333\n+[2406:da18:f7c:4351:591b:4881:3986:3703]:8333\n+[2406:da18:f7c:4351:59b9:b50:f47f:b560]:8333\n+[2406:da18:f7c:4351:61f2:cfb0:8c45:5fdd]:8333\n+[2406:da18:f7c:4351:6356:68e0:73fc:ac0b]:8333\n+[2406:da18:f7c:4351:660e:f6bc:3563:ba8e]:8333\n+[2406:da18:f7c:4351:691:9e:f2df:227d]:8333\n+[2406:da18:f7c:4351:721c:83d2:6765:4300]:8333\n+[2406:da18:f7c:4351:7237:9be:4601:bc15]:8333\n+[2406:da18:f7c:4351:7a3b:c203:fd11:6c7d]:8333\n+[2406:da18:f7c:4351:7a74:a80e:889a:ba42]:8333\n+[2406:da18:f7c:4351:7ee3:a181:f25c:fa79]:8333\n+[2406:da18:f7c:4351:8a25:9084:140:4549]:8333\n+[2406:da18:f7c:4351:8bc0:c6fd:ecfb:f074]:8333\n+[2406:da18:f7c:4351:91ce:d0ba:1b9e:c27b]:8333\n+[2406:da18:f7c:4351:9336:44e7:84b4:85b9]:8333\n+[2406:da18:f7c:4351:936c:c3b9:a1d0:848]:8333\n+[2406:da18:f7c:4351:93ef:1eef:65c8:766d]:8333\n+[2406:da18:f7c:4351:94e0:5b27:78c2:5111]:8333\n+[2406:da18:f7c:4351:9815:a202:18a3:2a36]:8333\n+[2406:da18:f7c:4351:9e1b:135c:7472:9d9]:8333\n+[2406:da18:f7c:4351:9f84:278:68f5:b8ea]:8333\n+[2406:da18:f7c:4351:a062:493f:a6f8:ca75]:8333\n+[2406:da18:f7c:4351:a192:b98:3066:8f11]:8333\n+[2406:da18:f7c:4351:a1cb:2f19:4a54:38c9]:8333\n+[2406:da18:f7c:4351:a4a2:4c9:c43a:98ae]:8333\n+[2406:da18:f7c:4351:a7e9:cd48:fa90:46d3]:8333\n+[2406:da18:f7c:4351:a88:99:6671:fce4]:8333\n+[2406:da18:f7c:4351:abe1:2e48:eb97:2ab5]:8333\n+[2406:da18:f7c:4351:acf5:2b21:5d2a:6b31]:8333\n+[2406:da18:f7c:4351:b51f:8966:74a5:6c53]:8333\n+[2406:da18:f7c:4351:b8e3:f3ca:e412:daa5]:8333\n+[2406:da18:f7c:4351:ba7c:6da8:da59:b1b6]:8333\n+[2406:da18:f7c:4351:be04:6f8e:8f93:c555]:8333\n+[2406:da18:f7c:4351:c82d:2a0b:31a5:e28d]:8333\n+[2406:da18:f7c:4351:c993:eb06:bd2c:1e65]:8333\n+[2406:da18:f7c:4351:d4b9:bff8:c4d4:1e05]:8333\n+[2406:da18:f7c:4351:d70d:a73d:1ddd:439e]:8333\n+[2406:da18:f7c:4351:e103:f456:b296:9f29]:8333\n+[2406:da18:f7c:4351:ea3b:27ec:7c2:aebc]:8333\n+[2406:da18:f7c:4351:f62c:5013:379b:363e]:8333\n+[240b:10:ca20:f0:224:e8ff:fe1f:60d9]:8333\n+[240b:250:1e0:2400:b9ef:8fe3:a69a:7378]:8333\n+[2600:1f14:34a:fe00:13f4:ceb6:a9db:4f47]:8333\n+[2600:1f14:34a:fe00:2550:9366:a5d9:78a5]:8333\n+[2600:1f14:34a:fe00:27d:6ed:7c8d:7bee]:8333\n+[2600:1f14:34a:fe00:2ed6:8a19:4eb:36c1]:8333\n+[2600:1f14:34a:fe00:34c7:2e9e:e60e:f823]:8333\n+[2600:1f14:34a:fe00:38de:442:72df:6346]:8333\n+[2600:1f14:34a:fe00:3a1e:878f:991a:9582]:8333\n+[2600:1f14:34a:fe00:3d88:1805:54e3:f4c8]:8333\n+[2600:1f14:34a:fe00:3f3e:58bd:ec82:5dac]:8333\n+[2600:1f14:34a:fe00:449a:9515:8436:f407]:8333\n+[2600:1f14:34a:fe00:4f84:277f:e64d:1f06]:8333\n+[2600:1f14:34a:fe00:5229:de84:8226:7257]:8333\n+[2600:1f14:34a:fe00:5743:42c3:951b:e97a]:8333\n+[2600:1f14:34a:fe00:5a29:85b:86b5:fa0e]:8333\n+[2600:1f14:34a:fe00:5de8:81e:6d79:330b]:8333\n+[2600:1f14:34a:fe00:5fca:ad1e:5b9c:5265]:8333\n+[2600:1f14:34a:fe00:68c4:ca1b:813e:1bce]:8333\n+[2600:1f14:34a:fe00:6:de9e:7b5e:a558]:8333\n+[2600:1f14:34a:fe00:6c72:1fcd:433:dc97]:8333\n+[2600:1f14:34a:fe00:77ee:629f:bc13:fb4f]:8333\n+[2600:1f14:34a:fe00:79d0:85d6:516f:3293]:8333\n+[2600:1f14:34a:fe00:81:422f:9ef3:4579]:8333\n+[2600:1f14:34a:fe00:822b:5f05:ec8d:48c6]:8333\n+[2600:1f14:34a:fe00:82a:76a2:fdc9:845e]:8333\n+[2600:1f14:34a:fe00:83ca:cef6:e04c:50c0]:8333\n+[2600:1f14:34a:fe00:8ba2:a36c:8687:d5aa]:8333\n+[2600:1f14:34a:fe00:8c80:5c67:3b47:90b3]:8333\n+[2600:1f14:34a:fe00:8eb8:f47f:6d53:e3ae]:8333\n+[2600:1f14:34a:fe00:989c:f8f8:a922:1b9a]:8333\n+[2600:1f14:34a:fe00:98c9:1eb3:ea12:a8f0]:8333\n+[2600:1f14:34a:fe00:9ee5:a8f6:6b2a:866e]:8333\n+[2600:1f14:34a:fe00:a46b:7bd5:629f:f75c]:8333\n+[2600:1f14:34a:fe00:a627:8299:8784:d439]:8333\n+[2600:1f14:34a:fe00:ad0b:955e:b4e5:d97d]:8333\n+[2600:1f14:34a:fe00:ae82:7117:9d69:7c86]:8333\n+[2600:1f14:34a:fe00:ccee:365a:43f8:b871]:8333\n+[2600:1f14:34a:fe00:d5ee:a3e2:2f85:e593]:8333\n+[2600:1f14:34a:fe00:d5f0:1fe0:6bd5:18a8]:8333\n+[2600:1f14:34a:fe00:e4a7:5aba:af87:4cdb]:8333\n+[2600:1f14:34a:fe00:e8e5:2d0:fb6f:2f5]:8333\n+[2600:1f14:34a:fe00:e9ef:4690:a5ac:92be]:8333\n+[2600:1f14:34a:fe00:efba:2260:6997:fcf7]:8333\n+[2600:1f14:34a:fe00:f107:2d08:c67:e5dd]:8333\n+[2600:1f14:34a:fe00:f1b9:88fb:f3db:a86e]:8333\n+[2600:1f14:34a:fe00:f79c:17b7:6f75:95b7]:8333\n+[2600:1f14:6ae:d900:6550:3fc5:e074:a72c]:8333\n+[2600:1f16:625:e00:1243:38b3:caa:d62e]:8333\n+[2600:1f16:625:e00:166d:a956:1041:f97d]:8333\n+[2600:1f16:625:e00:35f2:2428:fc57:d638]:8333\n+[2600:1f16:625:e00:3c75:333e:b7f:8cc0]:8333\n+[2600:1f16:625:e00:3fbf:31f:1b57:8b18]:8333\n+[2600:1f16:625:e00:5617:7575:379:a8cc]:8333\n+[2600:1f16:625:e00:58fa:fce6:30:a5dc]:8333\n+[2600:1f16:625:e00:5e74:70dc:af78:6b77]:8333\n+[2600:1f16:625:e00:7036:f651:2ee:39cd]:8333\n+[2600:1f16:625:e00:7fc:9004:e7be:ffe2]:8333\n+[2600:1f16:625:e00:814a:23f6:e996:5e64]:8333\n+[2600:1f16:625:e00:822c:a88b:f9c:57e3]:8333\n+[2600:1f16:625:e00:8314:b91e:a7ba:702]:8333\n+[2600:1f16:625:e00:88bb:ee9a:10de:12]:8333\n+[2600:1f16:625:e00:8c30:56f5:a29a:91de]:8333\n+[2600:1f16:625:e00:8fdf:6517:7718:8c42]:8333\n+[2600:1f16:625:e00:91fd:78b1:62a3:193]:8333\n+[2600:1f16:625:e00:930d:93ed:76a6:3285]:8333\n+[2600:1f16:625:e00:93c2:615f:a79a:c11f]:8333\n+[2600:1f16:625:e00:a780:8bc8:a1f6:d417]:8333\n+[2600:1f16:625:e00:a951:e663:4046:8c3a]:8333\n+[2600:1f16:625:e00:ab19:5fe3:f155:1371]:8333\n+[2600:1f16:625:e00:aefd:9cc7:d3:6e86]:8333\n+[2600:1f16:625:e00:b031:e86e:8604:324a]:8333\n+[2600:1f16:625:e00:b6e:4399:9dc2:6b45]:8333\n+[2600:1f16:625:e00:b7c7:58c6:21a1:fd41]:8333\n+[2600:1f16:625:e00:c169:6282:178c:27d6]:8333\n+[2600:1f16:625:e00:c94e:58b:bd35:d815]:8333\n+[2600:1f16:625:e00:caa5:7369:73a4:5711]:8333\n+[2600:1f16:625:e00:cd15:b9f2:6e3e:6fd1]:8333\n+[2600:1f16:625:e00:d6f3:775:66b7:3e92]:8333\n+[2600:1f16:625:e00:dbec:f7d9:e15:f8e0]:8333\n+[2600:1f16:625:e00:dbf4:4d41:594e:bc20]:8333\n+[2600:1f16:625:e00:e11b:4589:a0c3:9cc7]:8333\n+[2600:1f16:625:e00:ed68:15b0:3a97:be0c]:8333\n+[2600:1f16:625:e00:eef3:bce0:84ee:a98b]:8333\n+[2600:1f16:625:e00:ef3a:f66e:f059:d03f]:8333\n+[2600:1f16:625:e00:f67c:d398:5b6:d34f]:8333\n+[2600:1f16:625:e00:fe35:5099:3a8e:d123]:8333\n+[2600:1f18:64d9:1603:6f6f:eef9:b595:1958]:8333\n+[2600:3c00::f03c:91ff:fe84:d650]:8333\n+[2600:3c00::f03c:91ff:fe89:7438]:8333\n+[2600:3c00::f03c:91ff:fe91:3e49]:8333\n+[2600:3c00::f03c:91ff:febb:981e]:8333\n+[2600:3c01::f03c:91ff:fe69:89e9]:8333\n+[2600:3c01::f03c:91ff:fe91:6a29]:8333\n+[2600:3c03::f03c:91ff:fe28:1445]:8333\n+[2600:3c03::f03c:91ff:fee0:233e]:8333\n+[2600:6c55:7200:24d:cf4:811c:7cb3:f7a7]:8333\n+[2600:8805:2400:14e:226:4aff:fe02:2ba4]:8333\n+[2601:18d:4600:3cc2:20e7:b3ff:fecf:a99]:8333\n+[2601:1c2:1702:5241:47d:4016:ec42:6705]:8333\n+[2601:441:4101:70cd:4e3:8e81:3250:1f0b]:8333\n+[2601:602:9980:f78:211:11ff:fec5:1ae]:8333\n+[2601:646:4103:179f:5809:1bff:fe55:6678]:8333\n+[2602:4c:323:b101:35a3:9de8:6984:ef56]:8333\n+[2602:ff62:104:ac1:8000::]:8333\n+[2602:ffc5:40::1:711e]:8333\n+[2602:ffc5::c30:1c75]:8333\n+[2604:a880:2:d0::17e9:2001]:8333\n+[2604:a880:2:d0::22f8:f001]:8333\n+[2604:a880:2:d0::22f9:1]:8333\n+[2604:a880:2:d0::22f9:c001]:8333\n+[2604:a880:2:d0::22f9:d001]:8333\n+[2604:a880:2:d0::22f9:e001]:8333\n+[2604:a880:2:d0::22fa:2001]:8333\n+[2604:a880:2:d0::22fa:3001]:8333\n+[2604:a880:400:d0::1684:5001]:8333\n+[2604:a880:400:d0::1ac4:b001]:8333\n+[2604:a880:400:d0::2004:4001]:8333\n+[2604:a880:400:d0::2004:5001]:8333\n+[2604:a880:400:d0::2004:6001]:8333\n+[2604:a880:400:d0::2004:c001]:8333\n+[2604:a880:400:d0::2004:d001]:8333\n+[2604:a880:400:d0::2004:e001]:8333\n+[2604:a880:400:d0::2004:f001]:8333\n+[2604:a880:400:d0::2005:1]:8333\n+[2604:a880:400:d0::2005:3001]:8333\n+[2604:a880:400:d0::261f:6001]:8333\n+[2604:a880:400:d0::28b8:5001]:8333\n+[2604:a880:400:d0::ad7:e001]:8333\n+[2605:4d00::50]:8333\n+[2605:5d80:2002::245]:8333\n+[2605:9880:0:953:225:90ff:fed2:c0b4]:8333\n+[2606:c380::215:17ff:feb3:3ec]:8333\n+[2607:1c00:a:6:3c1c:1b0d:ba4:8ea9]:8333\n+[2607:1c00:a:6::1000]:8333\n+[2607:4480:2:2000:250:56ff:fe86:6449]:8333\n+[2607:5300:120:671::]:8333\n+[2607:5300:120:962::]:8333\n+[2607:5300:201:2000::1:556]:8333\n+[2607:5300:203:118:3733::1414]:8333\n+[2607:5300:60:10aa::1]:8333\n+[2607:5300:60:1e83::]:8333\n+[2607:5300:60:1e83::1000]:8333\n+[2607:5300:60:1e83::2000]:8333\n+[2607:5300:60:2d0::1]:8333\n+[2607:5300:60:3ddf::]:8333\n+[2607:5300:60:3f3c::]:8333\n+[2607:5300:60:5428::]:8333\n+[2607:5300:60:ac0::1]:8333\n+[2607:5300:61:f4b::1]:8333\n+[2607:9000:0:1:5054:ff:fe5d:264e]:8333\n+[2607:f1c0:846:9a00::87:d00e]:8333\n+[2607:f2d8:4005:d:a8a2:eeff:fee0:a859]:8333\n+[2607:f948:0:1::1:40]:8333\n+[2607:fa18:3a01::50]:8333\n+[2607:fea8:3ca0:926::2]:8333\n+[2607:fea8:4da0:3b0::2]:8333\n+[2607:ff10:c5:502:225:90ff:fe32:d446]:8333\n+[2607:ff28:9005:1::2567:57e0]:8333\n+[2620:71:4000:0:192:30:120:110]:8333\n+[2620:b8:4000:1000::93:1]:8333\n+[2800:1a0::9]:8333\n+[2801:84:0:1034:76d4:35ff:fe7f:5033]:8333\n [2a00:16d8:c::5b6a:c261]:8333\n-[2a00:61e0:4083:6d01:6852:1376:e972:2091]:8333\n-[2a00:c98:2030:a02f:2::2]:8333\n-[2a01:1b0:7999:402::131]:8333\n-[2a01:1e8:e100:811c:700f:65f0:f72a:1084]:8333\n-[2a01:238:42da:c500:6546:1293:5422:ab40]:8333\n-[2a01:348:6:473::2]:8333\n-[2a01:368:e010:2::2]:8333\n-[2a01:430:17:1::ffff:549]:8333\n-[2a01:430:17:1::ffff:830]:8333\n-[2a01:488:66:1000:53a9:d04:0:1]:8333\n-[2a01:488:66:1000:57e6:578c:0:1]:8333\n-[2a01:488:66:1000:b01c:178d:0:1]:8333\n-[2a01:488:67:1000:523:fdce:0:1]:8333\n-[2a01:488:67:1000:b01c:30ab:0:1]:8333\n-[2a01:4f8:100:24aa::2]:8333\n-[2a01:4f8:100:44e7::2]:8333\n-[2a01:4f8:100:5128::2]:8333\n-[2a01:4f8:100:84a7::1:1]:8333\n-[2a01:4f8:110:516c::2]:8333\n+[2a00:1768:2001:24::148:218]:8333\n+[2a00:19e0:1:1:225:90ff:fea5:fc0]:8333\n+[2a00:1a48:7810:101:be76:4eff:fe08:c774]:8333\n+[2a00:6340:2004:0:5054:ff:fe54:38c]:8333\n+[2a00:7b80:477:21::1c8c:83a6]:8333\n+[2a00:7c80:0:71::8]:8333\n+[2a00:7c80:0:97::7]:8333\n+[2a01:238:4363:4900:d85e:c1d9:2b32:61d0]:8333\n+[2a01:488:66:1000:53a9:22b:0:1]:8333\n+[2a01:488:67:1000:5bfa:5526:0:1]:8333\n+[2a01:488:67:1000:b01c:3379:0:1]:8333\n+[2a01:4d60:3:1:5::1]:8333\n+[2a01:4f8:10a:1d8f::2]:8333\n+[2a01:4f8:10a:1e81::2]:8333\n+[2a01:4f8:10a:2261::2]:8833\n+[2a01:4f8:10a:239c::2]:9002\n+[2a01:4f8:10a:294a::2]:8333\n+[2a01:4f8:10a:31d3::2]:8333\n+[2a01:4f8:10a:3fe6::2]:8333\n+[2a01:4f8:10a:b2e::2]:8333\n+[2a01:4f8:10b:12d7::2]:8333\n+[2a01:4f8:10b:d50::2]:8333\n+[2a01:4f8:10b:e2d::2]:8333\n+[2a01:4f8:10b:ee1::2]:8333\n+[2a01:4f8:110:5107::2]:8333\n+[2a01:4f8:110:5292::2]:8333\n [2a01:4f8:110:536e::2]:8333\n-[2a01:4f8:120:62e6::2]:8333\n-[2a01:4f8:120:702e::2]:8333\n-[2a01:4f8:120:8005::2]:8333\n-[2a01:4f8:120:8203::2]:8333\n-[2a01:4f8:120:8422::2]:8333\n-[2a01:4f8:121:11eb::2]:8333\n-[2a01:4f8:121:261::2]:8333\n-[2a01:4f8:130:242b::10]:8333\n-[2a01:4f8:130:242b::5]:8333\n-[2a01:4f8:130:2468::3]:8333\n-[2a01:4f8:130:632c::2]:8333\n-[2a01:4f8:130:6366::2]:8333\n-[2a01:4f8:130:6426::2]:8333\n-[2a01:4f8:130:934f::2]:8333\n-[2a01:4f8:131:2070::2]:8333\n-[2a01:4f8:131:54a2::2]:8333\n-[2a01:4f8:140:80ad::2]:8333\n-[2a01:4f8:141:186::2]:8333\n-[2a01:4f8:150:210b::2]:8333\n-[2a01:4f8:150:2263::5]:8333\n-[2a01:4f8:150:2349::2]:8333\n-[2a01:4f8:150:61ee::2]:8333\n-[2a01:4f8:150:7088:5054:ff:fe45:bff2]:8333\n-[2a01:4f8:150:8324::2]:9001\n-[2a01:4f8:151:1d8::2]:8333\n-[2a01:4f8:151:5128::2]:8333\n-[2a01:4f8:151:6347::2]:9001\n-[2a01:4f8:161:526d::2]:8333\n-[2a01:4f8:161:9349::2]:8333\n-[2a01:4f8:162:23c6::2]:8333\n-[2a01:4f8:162:4348::2]:8333\n-[2a01:4f8:162:7345::2]:8333\n-[2a01:4f8:162:7383::2]:8333\n-[2a01:4f8:162:74e3::2]:8333\n-[2a01:4f8:190:6065::2]:8333\n-[2a01:4f8:190:6349::2]:8333\n-[2a01:4f8:190:64c9::2]:8333\n-[2a01:4f8:190:91ce::2]:8333\n-[2a01:4f8:191:2194::83]:8333\n-[2a01:4f8:191:40a1::2]:8333\n-[2a01:4f8:191:4a7::2]:8333\n+[2a01:4f8:120:43e4::2]:8333\n+[2a01:4f8:130:3332::2]:8333\n+[2a01:4f8:130:430b::2]:8333\n+[2a01:4f8:130:618e::2]:8333\n+[2a01:4f8:130:71d2::2]:8333\n+[2a01:4f8:130:7422::2]:8333\n+[2a01:4f8:131:33ad::2]:8333\n+[2a01:4f8:131:33ad:fea1::666]:8333\n+[2a01:4f8:131:3428::2]:8333\n+[2a01:4f8:140:1326::2]:8333\n+[2a01:4f8:140:524a::2]:8333\n+[2a01:4f8:140:6055::2]:8333\n+[2a01:4f8:140:7410::2]:8333\n+[2a01:4f8:140:931a::2]:8333\n+[2a01:4f8:141:2254::2]:8333\n+[2a01:4f8:141:22ae::2]:8333\n+[2a01:4f8:150:11d4::2]:8333\n+[2a01:4f8:150:70a4::2]:8333\n+[2a01:4f8:150:726b::2]:8333\n+[2a01:4f8:150:72ee::4202]:8333\n+[2a01:4f8:150:90ca::2]:8333\n+[2a01:4f8:151:30c9::2]:8333\n+[2a01:4f8:151:334d::3]:8333\n+[2a01:4f8:151:7175::2]:8333\n+[2a01:4f8:160:41f0::1:33]:8333\n+[2a01:4f8:160:636e::2]:8333\n+[2a01:4f8:161:7026::2]:8333\n+[2a01:4f8:162:2108::2]:8333\n+[2a01:4f8:162:3121::50]:8333\n+[2a01:4f8:162:424c::2]:8333\n+[2a01:4f8:171:1c1b::2]:8333\n+[2a01:4f8:171:1c3::2]:8333\n+[2a01:4f8:171:2258::2]:8333\n+[2a01:4f8:171:27d6::2]:8333\n+[2a01:4f8:171:2f28::2]:8333\n+[2a01:4f8:171:d23::2]:8333\n+[2a01:4f8:172:10da::2]:8333\n+[2a01:4f8:172:504::2]:8333\n+[2a01:4f8:173:1622::2]:8333\n+[2a01:4f8:173:42::2]:8333\n+[2a01:4f8:190:24eb::2]:8333\n+[2a01:4f8:190:528d::2]:8333\n+[2a01:4f8:190:61f3::2]:8333\n+[2a01:4f8:191:418f::2]:3333\n [2a01:4f8:191:63b4:5000::1]:8333\n-[2a01:4f8:191:7121::2]:8333\n-[2a01:4f8:191:83a2::2]:8333\n-[2a01:4f8:191:93c4::2]:8333\n-[2a01:4f8:192:60a9:0:1:5:2]:8333\n-[2a01:4f8:192:73b2::2]:8333\n-[2a01:4f8:192:8098::2]:8333\n-[2a01:4f8:192:db::2]:8333\n+[2a01:4f8:191:81b7::2]:8333\n+[2a01:4f8:191:8328::3]:8333\n+[2a01:4f8:192:4a5::2]:8333\n+[2a01:4f8:192:5230::2]:8333\n [2a01:4f8:200:1012::2]:8333\n-[2a01:4f8:200:22e3::2]:8333\n+[2a01:4f8:200:32a6::2]:8333\n [2a01:4f8:200:414e::2]:8333\n-[2a01:4f8:200:63af::222]:8333\n-[2a01:4f8:200:71e3:78b4:f3ff:fead:e8cf]:8333\n-[2a01:4f8:201:5164::2]:8333\n+[2a01:4f8:200:416a::2]:8333\n+[2a01:4f8:200:90c3::2]:8333\n+[2a01:4f8:201:148d::2]:8333\n+[2a01:4f8:201:2cc::2]:8333\n+[2a01:4f8:201:3e3::2]:8333\n+[2a01:4f8:201:53cc::2]:8333\n [2a01:4f8:201:6011::4]:8333\n-[2a01:4f8:201:60d5::2]:8333\n-[2a01:4f8:202:53c3::2]:8333\n-[2a01:4f8:210:24aa::2]:8333\n-[2a01:4f8:210:502f::2]:8333\n-[2a01:4f8:211:14cf::2]:8333\n-[2a01:4f8:211:1a59::2]:8333\n-[2a01:4f8:211:2ac1::2]:8333\n-[2a01:4f8:211:cca::2]:8333\n-[2a01:4f8:a0:22a5::2]:8333\n-[2a01:4f8:a0:5023::2]:8333\n-[2a01:4f8:a0:5243::2]:8333\n-[2a01:4f8:a0:74c8::2]:8333\n-[2a01:4f8:a0:8227::2]:8333\n-[2a01:4f8:a0:822d::2]:8333\n-[2a01:4f8:d13:2183::2]:8333\n-[2a01:608:ffff:a009:8bf5:879d:e51a:f837]:8333\n-[2a01:79d:469e:ed94:c23f:d5ff:fe65:20c5]:8333\n+[2a01:4f8:202:3030::2]:8333\n+[2a01:4f8:202:31e3::2]:8333\n+[2a01:4f8:202:32c6::2]:8333\n+[2a01:4f8:202:6035::2]:8333\n+[2a01:4f8:210:5488::2]:8333\n+[2a01:4f8:211:1e17::2]:8333\n+[2a01:4f8:211:1ec5::2]:8333\n+[2a01:4f8:212:1826::2]:8333\n+[2a01:4f8:221:f59::2]:8333\n+[2a01:4f8:c0c:1026::2]:8333\n+[2a01:4f8:c0c:1028::2]:8333\n+[2a01:4f8:c0c:1029::2]:8333\n+[2a01:4f8:c0c:105f::2]:8333\n+[2a01:4f8:c0c:1064::2]:8333\n+[2a01:4f8:c0c:106b::2]:8333\n+[2a01:4f8:c0c:106d::2]:8333\n+[2a01:4f8:c0c:1070::2]:8333\n+[2a01:4f8:c0c:1105::2]:8333\n+[2a01:4f8:c0c:1106::2]:8333\n+[2a01:4f8:c0c:1134::2]:8333\n+[2a01:4f8:c0c:1135::2]:8333\n+[2a01:4f8:c0c:113c::2]:8333\n+[2a01:4f8:c0c:115c::2]:8333\n+[2a01:4f8:c0c:115e::2]:8333\n+[2a01:4f8:c0c:1170::2]:8333\n+[2a01:4f8:c0c:1172::2]:8333\n+[2a01:4f8:c0c:117b::2]:8333\n+[2a01:4f8:c0c:117c::2]:8333\n+[2a01:4f8:c0c:1180::2]:8333\n+[2a01:4f8:c0c:1181::2]:8333\n+[2a01:4f8:c0c:1185::2]:8333\n+[2a01:4f8:c0c:1186::2]:8333\n+[2a01:4f8:c0c:1187::2]:8333\n+[2a01:4f8:c0c:1188::2]:8333\n+[2a01:4f8:c0c:1189::2]:8333\n+[2a01:4f8:c0c:121::2]:8333\n+[2a01:4f8:c0c:122::2]:8333\n+[2a01:4f8:c0c:15a8::2]:8333\n+[2a01:4f8:c0c:1da4::2]:8333\n+[2a01:4f8:c0c:1ff7::2]:8333\n+[2a01:4f8:c0c:2262::2]:8333\n+[2a01:4f8:c0c:73d::2]:8333\n+[2a01:4f8:c0c:790::2]:8333\n+[2a01:4f8:c0c:7a8::2]:8333\n+[2a01:4f8:c0c:7a9::2]:8333\n+[2a01:4f8:c0c:7e9::2]:8333\n+[2a01:4f8:c0c:816::2]:8333\n+[2a01:4f8:c0c:817::2]:8333\n+[2a01:4f8:c0c:818::2]:8333\n+[2a01:4f8:c0c:820::2]:8333\n+[2a01:4f8:c0c:821::2]:8333\n+[2a01:4f8:c0c:822::2]:8333\n+[2a01:4f8:c0c:896::2]:8333\n+[2a01:4f8:c0c:8c6::2]:8333\n+[2a01:4f8:c0c:8c9::2]:8333\n+[2a01:4f8:c0c:8d1::2]:8333\n+[2a01:4f8:c0c:8d2::2]:8333\n+[2a01:4f8:c0c:8d9::2]:8333\n+[2a01:4f8:c0c:8da::2]:8333\n+[2a01:4f8:c0c:8dc::2]:8333\n+[2a01:4f8:c0c:8f1::2]:8333\n+[2a01:4f8:c0c:91e::2]:8333\n+[2a01:4f8:c0c:927::2]:8333\n+[2a01:4f8:c0c:939::2]:8333\n+[2a01:4f8:c0c:944::2]:8333\n+[2a01:4f8:c0c:951::2]:8333\n+[2a01:4f8:c0c:967::2]:8333\n+[2a01:4f8:c0c:96f::2]:8333\n+[2a01:4f8:c0c:97d::2]:8333\n+[2a01:4f8:c0c:982::2]:8333\n+[2a01:4f8:c0c:9fc::2]:8333\n+[2a01:4f8:c0c:b35::2]:8333\n+[2a01:4f8:c0c:b4c::2]:8333\n+[2a01:4f8:c0c:bfe::2]:8333\n+[2a01:4f8:c0c:c08::2]:8333\n+[2a01:4f8:c0c:c13::2]:8333\n+[2a01:4f8:c0c:c14::2]:8333\n+[2a01:4f8:c0c:c16::2]:8333\n+[2a01:4f8:c0c:c19::2]:8333\n+[2a01:4f8:c0c:c32::2]:8333\n+[2a01:4f8:c0c:c36::2]:8333\n+[2a01:4f8:c0c:c39::2]:8333\n+[2a01:4f8:c0c:c58::2]:8333\n+[2a01:4f8:c0c:c5e::2]:8333\n+[2a01:4f8:c0c:c70::2]:8333\n+[2a01:4f8:c0c:c72::2]:8333\n+[2a01:4f8:c0c:c79::2]:8333\n+[2a01:4f8:c0c:cb1::2]:8333\n+[2a01:4f8:c0c:cf5::2]:8333\n+[2a01:4f8:c0c:cff::2]:8333\n+[2a01:4f8:c0c:d0e::2]:8333\n+[2a01:4f8:c0c:d1b::2]:8333\n+[2a01:4f8:c0c:d67::2]:8333\n+[2a01:4f8:c0c:d68::2]:8333\n+[2a01:4f8:c0c:d81::2]:8333\n+[2a01:4f8:c0c:e2d::2]:8333\n+[2a01:4f8:c0c:e30::2]:8333\n+[2a01:4f8:c0c:e4f::2]:8333\n+[2a01:4f8:c0c:e5b::2]:8333\n+[2a01:4f8:c0c:e88::2]:8333\n+[2a01:4f8:c0c:f69::2]:8333\n+[2a01:4f8:c0c:f76::2]:8333\n+[2a01:4f8:c0c:f77::2]:8333\n+[2a01:4f8:c0c:f78::2]:8333\n+[2a01:4f8:c0c:f89::2]:8333\n+[2a01:4f8:c0c:f8a::2]:8333\n+[2a01:4f8:c0c:fd6::2]:8333\n+[2a01:4f8:c0c:fea::2]:8333\n+[2a01:4f8:c17:24ee::2]:8333\n+[2a01:4f8:c17:2c16::2]:8333\n+[2a01:4f8:c17:330f::2]:8333\n+[2a01:4f8:c17:34f0::2]:8333\n+[2a01:4f8:c17:3986::2]:8333\n+[2a01:4f8:c17:3b02::2]:8333\n+[2a01:4f8:c17:3d85::2]:8333\n+[2a01:4f8:c17:4271::2]:8333\n+[2a01:4f8:c17:5dc0::2]:8333\n+[2a01:4f8:c17:63a0::2]:8333\n+[2a01:4f8:c17:67f8::2]:8333\n+[2a01:4f8:c17:710b::2]:8333\n+[2a01:4f8:c17:e00::2]:8333\n+[2a01:680:10:10::1]:8333\n+[2a01:6f0:ffff:120::8dcb]:8333\n+[2a01:79d:b7dd:ffb4:5d86:70b8:fc7f:f253]:8333\n+[2a01:7a0:2:1374::4]:8333\n+[2a01:7a0:2:1374::5]:8333\n+[2a01:7a0:2:137c::3]:8333\n+[2a01:7c8:aaaa:373:5054:ff:feb3:2947]:8333\n+[2a01:7c8:aaaa:3a0:5054:ff:fe8c:974c]:8333\n+[2a01:7c8:aab0:4b7:910d:625e:a13e:c342]:8333\n [2a01:7c8:aab5:3e6:5054:ff:fed7:4e54]:8333\n-[2a01:7e00::f03c:91ff:fe18:301e]:8333\n-[2a01:7e00::f03c:91ff:fe18:7749]:8333\n-[2a01:7e00::f03c:91ff:fe33:2d67]:8333\n-[2a01:7e00::f03c:91ff:fe33:347c]:8333\n-[2a01:7e00::f03c:91ff:fe33:ae50]:8333\n-[2a01:7e00::f03c:91ff:fe56:6b5c]:8333\n-[2a01:7e00::f03c:91ff:fe56:bee6]:8333\n-[2a01:7e00::f03c:91ff:fe69:4895]:8333\n-[2a01:7e00::f03c:91ff:fe69:9912]:8333\n-[2a01:7e00::f03c:91ff:fe6e:26ee]:8333\n-[2a01:7e00::f03c:91ff:fe73:42f1]:8333\n-[2a01:7e00::f03c:91ff:fe84:434f]:8333\n-[2a01:7e00::f03c:91ff:fe84:b36b]:8333\n-[2a01:7e00::f03c:91ff:fe89:1faa]:8333\n-[2a01:7e00::f03c:91ff:fe98:816]:8333\n-[2a01:7e00::f03c:91ff:fedb:352e]:8333\n-[2a01:7e00::f03c:91ff:fedb:4a1d]:8333\n-[2a01:e34:edbb:6750:224:1dff:fe89:3897]:8333\n-[2a01:e35:2f1d:3fb0:7187:c7ba:bcfc:80ce]:8333\n-[2a01:e35:8787:96f0:9032:9297:39ae:496d]:8333\n-[2a01:e35:8a3f:47c0:c617:feff:fe3c:9fbd]:8333\n-[2a01:e35:8b66:6a0:4900:9dfd:d841:d025]:8333\n-[2a02:168:4a01::39]:8333\n-[2a02:168:5404:2:c23f:d5ff:fe6a:512e]:8333\n-[2a02:180:1:1::5b8f:538c]:8333\n-[2a02:2028:1016::2]:8333\n-[2a02:2528:503:2::14]:8333\n-[2a02:2528:503:2::15]:8333\n-[2a02:2528:ff00:81a6:21e:c5ff:fe8d:f9a5]:8333\n-[2a02:2770:5:0:21a:4aff:fee4:c7db]:8333\n-[2a02:2770:8:0:21a:4aff:fe7b:3dcd]:8333\n-[2a02:348:5e:5a29::1]:8333\n-[2a02:7aa0:1619::202f:c06a]:8333\n-[2a02:8109:8e40:35fc:ba27:ebff:feae:cf16]:8333\n-[2a02:af8:6:1500::1:130]:8333\n-[2a02:c200:0:10:1:0:6314:2222]:8333\n-[2a02:c200:0:10:2:3:3295:1]:8332\n-[2a02:c200:0:10:3:0:5449:1]:8333\n-[2a02:c200:1:10:2:3:5899:1]:8333\n-[2a02:c200:1:10::2705:1]:8333\n+[2a01:7c8:aab5:41e:5054:ff:fe38:f4fb]:8333\n+[2a01:7c8:aaba:343::8333]:8333\n+[2a01:7c8:aabc:18c:5054:ff:fefd:3b49]:8333\n+[2a01:7c8:aabd:3d5:5054:ff:fe95:f586]:8333\n+[2a01:7e00::f03c:91ff:fe50:94b8]:8333\n+[2a01:8e01:b943:3a63:d250:99ff:fe1f:4fb2]:8333\n+[2a01:b2e0:2::40]:8333\n+[2a01:d0:0:1c::245]:8333\n+[2a01:d0:8fc3::2]:8333\n+[2a01:e34:ec29:e8d0:25c7:c1ce:b7a3:d238]:8333\n+[2a01:e34:ec4a:c2d0:1cf3:40d2:a79f:3901]:8333\n+[2a01:e34:eed7:6670:ec1b:bf7c:b012:6069]:8333\n+[2a01:e35:2433:e320:9c8e:6ff0:990f:f06e]:8333\n+[2a01:e35:2ee5:610:21f:d0ff:fe4e:7460]:8333\n+[2a02:1205:5051:a640:d6ae:52ff:fea3:ac]:8333\n+[2a02:120b:2c2a:5ec0:10dd:31ff:fe42:5079]:8333\n+[2a02:168:6273::614]:8333\n+[2a02:180:6:1::18]:8333\n+[2a02:180:6:1::ed]:8333\n+[2a02:1811:b707:116:8c1f:c5be:bf3a:54df]:8333\n+[2a02:20c8:1422:1::a3]:8333\n+[2a02:2168:d05:2c00:216:3eff:fef7:a099]:8333\n+[2a02:27f8:2012:0:e9f7:268f:c441:6129]:8333\n+[2a02:2808:5401:0:225:90ff:fe4e:ee42]:8333\n+[2a02:390:9000:0:218:7dff:fe10:be33]:8333\n+[2a02:7aa0:1201::bd4e:1219]:8333\n+[2a02:7aa0:1619::590:eba2]:8333\n+[2a02:7aa0:1619::a7a2:7e86]:8333\n+[2a02:c200:1:10:2:5:800:1]:8333\n+[2a02:c205:2002:2550::17]:8333\n+[2a02:c205:2008:272::1]:8333\n+[2a02:c205:2010:5484::1]:8333\n+[2a02:c205:3001:6710::1]:8333\n+[2a02:c205:3001:7714::2]:8333\n+[2a02:c205:3002:888::1]:8333\n+[2a02:c207:2002:9013::1]:8333\n+[2a02:c207:2008:3392::1]:8333\n+[2a02:c207:2008:8337::1]:8333\n+[2a02:c207:2009:213::1]:8333\n+[2a02:c207:2010:7751::1]:8333\n+[2a02:c207:2010:7986::1]:8333\n+[2a02:c207:2011:7829::1]:8333\n+[2a02:c207:2011:8299::1]:8333\n+[2a02:c207:2012:2133::1]:8333\n+[2a02:c207:2012:263::1]:8333\n+[2a02:c207:2012:2682::1]:8333\n+[2a02:c207:2012:3635::1]:8333\n+[2a02:c207:2012:4826::1]:8333\n+[2a02:c207:2012:5668::1]:8333\n+[2a02:c207:3001:5824::1]:8333\n+[2a02:c207:3001:7776::1]:8333\n+[2a02:c207:3002:621::1]:8333\n [2a02:ce80:0:20::1]:8333\n-[2a02:fe0:c321:27e0:6ef0:49ff:fe11:a61d]:8333\n+[2a03:2260:11e:301::8]:8333\n+[2a03:2260:11e:302::3]:8333\n [2a03:4000:2:496::8]:8333\n-[2a03:b0c0:0:1010::62:f001]:8333\n-[2a03:f80:ed16:ca7:ea75:b12d:2af:9e2a]:8333\n-3ffk7iumtx3cegbi.onion:8333\n-3hshaantu6ot4upz.onion:8333\n-45c5lc77qgpikafy.onion:8333\n-77mx2jsxaoyesz2p.onion:8333\n-7g7j54btiaxhtsiy.onion:8333\n-b6fr7dlbu2kpiysf.onion:8333\n-bitcoincfqcssig5.onion:8333\n-bitcoinostk4e4re.onion:8333\n-bmutjfrj5btseddb.onion:8333\n+[2a03:4000:6:12e7::1]:8333\n+[2a03:4000:6:416c::53]:8333\n+[2a03:b0c0:3:d0::1219:6001]:8333\n+[2a03:b0c0:3:d0::1b99:c001]:8333\n+[2a03:b0c0:3:d0::1b99:e001]:8333\n+[2a03:b0c0:3:d0::1b9a:3001]:8333\n+[2a03:b0c0:3:d0::23f7:1001]:8333\n+[2a03:b0c0:3:d0::23f7:2001]:8333\n+[2a03:b0c0:3:d0::23f7:4001]:8333\n+[2a03:b0c0:3:d0::23f7:5001]:8333\n+[2a03:b0c0:3:d0::23f7:7001]:8333\n+[2a03:b0c0:3:d0::23f7:9001]:8333\n+[2a03:b0c0:3:d0::23fb:1001]:8333\n+[2a03:b0c0:3:d0::23fb:2001]:8333\n+[2a03:b0c0:3:d0::23fb:3001]:8333\n+[2a03:b0c0:3:d0::23fb:5001]:8333\n+[2a03:b0c0:3:d0::23fb:6001]:8333\n+[2a03:b0c0:3:d0::23fb:8001]:8333\n+[2a03:b0c0:3:d0::23ff:b001]:8333\n+[2a03:b0c0:3:d0::2400:1]:8333\n+[2a03:b0c0:3:d0::2400:3001]:8333\n+[2a03:b0c0:3:d0::2400:4001]:8333\n+[2a03:b0c0:3:d0::2400:e001]:8333\n+[2a03:b0c0:3:d0::2400:f001]:8333\n+[2a03:b0c0:3:d0::2401:e001]:8333\n+[2a03:b0c0:3:d0::2402:1]:8333\n+[2a03:b0c0:3:d0::2402:2001]:8333\n+[2a03:b0c0:3:d0::2402:8001]:8333\n+[2a03:b0c0:3:d0::2402:9001]:8333\n+[2a03:b0c0:3:d0::2402:b001]:8333\n+[2a03:b0c0:3:d0::2402:d001]:8333\n+[2a03:b0c0:3:d0::2402:e001]:8333\n+[2a03:b0c0:3:d0::2403:1001]:8333\n+[2a03:b0c0:3:d0::2403:2001]:8333\n+[2a03:b0c0:3:d0::2403:3001]:8333\n+[2a03:b0c0:3:d0::2403:4001]:8333\n+[2a03:b0c0:3:d0::2403:6001]:8333\n+[2a03:b0c0:3:d0::2403:a001]:8333\n+[2a03:b0c0:3:d0::2403:b001]:8333\n+[2a03:b0c0:3:d0::2403:e001]:8333\n+[2a03:b0c0:3:d0::2403:f001]:8333\n+[2a03:b0c0:3:d0::2404:1]:8333\n+[2a03:b0c0:3:d0::2404:3001]:8333\n+[2a03:b0c0:3:d0::2404:4001]:8333\n+[2a03:b0c0:3:d0::2404:6001]:8333\n+[2a03:b0c0:3:d0::2404:8001]:8333\n+[2a03:b0c0:3:d0::2404:9001]:8333\n+[2a03:b0c0:3:d0::2404:b001]:8333\n+[2a03:b0c0:3:d0::2405:2001]:8333\n+[2a03:b0c0:3:d0::2405:3001]:8333\n+[2a03:b0c0:3:d0::2405:8001]:8333\n+[2a03:b0c0:3:d0::2405:9001]:8333\n+[2a03:b0c0:3:d0::2405:a001]:8333\n+[2a03:b0c0:3:d0::44b8:9001]:8333\n+[2a03:b0c0:3:d0::44b8:e001]:8333\n+[2a03:b0c0:3:d0::44b8:f001]:8333\n+[2a03:b0c0:3:d0::44b9:1]:8333\n+[2a03:b0c0:3:d0::44b9:1001]:8333\n+[2a03:b0c0:3:d0::44b9:2001]:8333\n+[2a03:b0c0:3:d0::44b9:4001]:8333\n+[2a04:2180:0:2::94]:8333\n+[2a04:3542:1000:910:8492:b8ff:fe91:711d]:8333\n+[2a04:52c0:101:122::ba8e]:8333\n+[2a05:3580:d400:140d:da6e:826e:e771:4100]:8333\n+[2a06:9fc0:2a06:9fc0:2a06:9fc1:67c:e706]:8333\n+226eupdnaouu4h2v.onion:8333\n+2frgxpe5mheghyom.onion:8333\n+3ihjnsvwc3x6dp2o.onion:8333\n+3w77hrilg6q64opl.onion:8333\n+4ls4o6iszcd7mkfw.onion:8333\n+4p3abjxqppzxi7qi.onion:8333\n+546esc6botbjfbxb.onion:8333\n+5msftytzlsskr4ut.onion:8333\n+5ty6rxpgrkmdnk4a.onion:8333\n+akmqyuidrf56ip26.onion:8333\n+alhlegtjkdmbqsvt.onion:8333\n+bafk5ioatlgt7dgl.onion:8333\n+bup5n5e3kurvjzf3.onion:8333\n+cjygd7pu5lqkky5j.onion:8333\n+cyvpgt25274i5b7c.onion:8333\n+dekj4wacywpqsad3.onion:8333\n+dqpxwlpnv3z3hznl.onion:8333\n+drarzpycbtxwbcld.onion:8333\n drp4pvejybx2ejdr.onion:8333\n-gixnv56d63buypan.onion:8333\n-h2vlpudzphzqxutd.onion:8333\n-hhiv5pnxenvbf4am.onion:8333\n-lzxpkn6ptp3ohh63.onion:8333\n-msphsgfiqfq5stne.onion:8333\n-ncwk3lutemffcpc4.onion:8333\n-okdzjarwekbshnof.onion:8333\n-sjdomi4yb2dwkjbc.onion:8333\n-uvwozwxlihntigbb.onion:8333\n-v6ylz45dn5ybpk4d.onion:8333\n-vk3qjdehyy4dwcxw.onion:8333\n-vqpye2k5rcqvj5mq.onion:8333\n-xudkoztdfrsuyyou.onion:8333\n-z55v4ostefnwfy32.onion:8333\n+dxkmtmwiq7ddtgul.onion:8333\n+e6j57zkyibu2smad.onion:8333\n+ejcqevujcqltqn7d.onion:8333\n+eqgbt2ghfvsshbvo.onion:8333\n+fgizgkdnndilo6ka.onion:8333\n+fqxup4oev33eeidg.onion:8333\n+gb5ypqt63du3wfhn.onion:8333\n+ggdy2pb2avlbtjwq.onion:8333\n+hahhloezyfqh3hci.onion:8333\n+ihdv6bzz2gx72fs7.onion:8333\n+in7r5ieo7ogkxbne.onion:8333\n+kvd44sw7skb5folw.onion:8333\n+mn744hbioayn3ojs.onion:8333\n+ms4ntrrisfxzpvmy.onion:8333\n+n5lqwpjabqg62ihx.onion:8333\n+o4sl5na6jeqgi3l6.onion:8333\n+omjv24nbck4k5ud6.onion:8333\n+po3j2hfkmf7sh36o.onion:8333\n+psco6bxjewljrczx.onion:8333\n+qi5yr6lvlckzffor.onion:8333\n+qlv6py6hdtzipntn.onion:8333\n+qynmpgdbp23xyfnj.onion:8333\n+rhtawcs7xak4gi3t.onion:8333\n+rjacws757ai66lre.onion:8333\n+rjlnp3hwvrsmap6e.onion:8333\n+rkdvqcrtfv6yt4oy.onion:8333\n+rlafimkctvz63llg.onion:8333\n+rlj4ppok4dnsdu5n.onion:8333\n+seoskudzk6vn6mqz.onion:8333\n+tayqi57tfiy7x3vk.onion:8333\n+tchop676j6yppwwm.onion:8333\n+trrtyp3sirmwttyu.onion:8333\n+tx4zd7d5exonnblh.onion:8333\n+u4ecb7txxi6l3gix.onion:8333\n+umcxcmfycvejw264.onion:8333\n+v7xqd42ocemalurd.onion:8333\n+vb267mt3lnwfdmdb.onion:8333\n+vev3n5fxfrtqj6e5.onion:8333\n+visevrizz3quyagj.onion:8333\n+vpg6p5e5ln33dqtp.onion:8333\n+vr2ruasinafoy3fl.onion:8333\n+x6pthvd5x6abyfo7.onion:8333\n+xbwbzrspvav7u5ie.onion:8333\n+xfcevnql2chnawko.onion:8333\n+ycivnom44dmxx4ob.onion:8333\n+yzdvlv5daitafekn.onion:8333"
      },
      {
        "sha": "c0a9c9ccf93d335a7092e383ff8a59ae410e549d",
        "filename": "contrib/spendfrom/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/spendfrom/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/spendfrom/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/README.md?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,35 +0,0 @@\n-### SpendFrom ###\n-\n-Use the raw transactions API to send coins received on a particular\n-address (or addresses). \n-\n-### Usage: ###\n-Depends on [jsonrpc](http://json-rpc.org/).\n-\n-\tspendfrom.py --from=FROMADDRESS1[,FROMADDRESS2] --to=TOADDRESS --amount=amount \\\n-\t             --fee=fee --datadir=/path/to/.bitcoin --testnet --dry_run\n-\n-With no arguments, outputs a list of amounts associated with addresses.\n-\n-With arguments, sends coins received by the `FROMADDRESS` addresses to the `TOADDRESS`.\n-\n-### Notes ###\n-\n-- You may explicitly specify how much fee to pay (a fee more than 1% of the amount\n-will fail,  though, to prevent bitcoin-losing accidents). Spendfrom may fail if\n-it thinks the transaction would never be confirmed (if the amount being sent is\n-too small, or if the transaction is too many bytes for the fee).\n-\n-- If a change output needs to be created, the change will be sent to the last\n-`FROMADDRESS` (if you specify just one `FROMADDRESS`, change will go back to it).\n-\n-- If `--datadir` is not specified, the default datadir is used.\n-\n-- The `--dry_run` option will just create and sign the transaction and print\n-the transaction data (as hexadecimal), instead of broadcasting it.\n-\n-- If the transaction is created and broadcast successfully, a transaction id\n-is printed.\n-\n-- If this was a tool for end-users and not programmers, it would have much friendlier\n-error-handling."
      },
      {
        "sha": "01b9768a5b06a459808af61efca624239b301f1d",
        "filename": "contrib/spendfrom/setup.py",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/spendfrom/setup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/spendfrom/setup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/setup.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,9 +0,0 @@\n-from distutils.core import setup\n-setup(name='btcspendfrom',\n-      version='1.0',\n-      description='Command-line utility for bitcoin \"coin control\"',\n-      author='Gavin Andresen',\n-      author_email='gavin@bitcoinfoundation.org',\n-      requires=['jsonrpc'],\n-      scripts=['spendfrom.py'],\n-      )"
      },
      {
        "sha": "72ee0425eb2363ab39f85ba9d239891aa0279dcd",
        "filename": "contrib/spendfrom/spendfrom.py",
        "status": "removed",
        "additions": 0,
        "deletions": 267,
        "changes": 267,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/spendfrom/spendfrom.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/spendfrom/spendfrom.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/spendfrom.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,267 +0,0 @@\n-#!/usr/bin/env python\n-#\n-# Use the raw transactions API to spend bitcoins received on particular addresses,\n-# and send any change back to that same address.\n-#\n-# Example usage:\n-#  spendfrom.py  # Lists available funds\n-#  spendfrom.py --from=ADDRESS --to=ADDRESS --amount=11.00\n-#\n-# Assumes it will talk to a bitcoind or Bitcoin-Qt running\n-# on localhost.\n-#\n-# Depends on jsonrpc\n-#\n-\n-from decimal import *\n-import getpass\n-import math\n-import os\n-import os.path\n-import platform\n-import sys\n-import time\n-from jsonrpc import ServiceProxy, json\n-\n-BASE_FEE=Decimal(\"0.001\")\n-\n-def check_json_precision():\n-    \"\"\"Make sure json library being used does not lose precision converting BTC values\"\"\"\n-    n = Decimal(\"20000000.00000003\")\n-    satoshis = int(json.loads(json.dumps(float(n)))*1.0e8)\n-    if satoshis != 2000000000000003:\n-        raise RuntimeError(\"JSON encode/decode loses precision\")\n-\n-def determine_db_dir():\n-    \"\"\"Return the default location of the bitcoin data directory\"\"\"\n-    if platform.system() == \"Darwin\":\n-        return os.path.expanduser(\"~/Library/Application Support/Bitcoin/\")\n-    elif platform.system() == \"Windows\":\n-        return os.path.join(os.environ['APPDATA'], \"Bitcoin\")\n-    return os.path.expanduser(\"~/.bitcoin\")\n-\n-def read_bitcoin_config(dbdir):\n-    \"\"\"Read the bitcoin.conf file from dbdir, returns dictionary of settings\"\"\"\n-    from ConfigParser import SafeConfigParser\n-\n-    class FakeSecHead(object):\n-        def __init__(self, fp):\n-            self.fp = fp\n-            self.sechead = '[all]\\n'\n-        def readline(self):\n-            if self.sechead:\n-                try: return self.sechead\n-                finally: self.sechead = None\n-            else:\n-                s = self.fp.readline()\n-                if s.find('#') != -1:\n-                    s = s[0:s.find('#')].strip() +\"\\n\"\n-                return s\n-\n-    config_parser = SafeConfigParser()\n-    config_parser.readfp(FakeSecHead(open(os.path.join(dbdir, \"bitcoin.conf\"))))\n-    return dict(config_parser.items(\"all\"))\n-\n-def connect_JSON(config):\n-    \"\"\"Connect to a bitcoin JSON-RPC server\"\"\"\n-    testnet = config.get('testnet', '0')\n-    testnet = (int(testnet) > 0)  # 0/1 in config file, convert to True/False\n-    if not 'rpcport' in config:\n-        config['rpcport'] = 18332 if testnet else 8332\n-    connect = \"http://%s:%s@127.0.0.1:%s\"%(config['rpcuser'], config['rpcpassword'], config['rpcport'])\n-    try:\n-        result = ServiceProxy(connect)\n-        # ServiceProxy is lazy-connect, so send an RPC command mostly to catch connection errors,\n-        # but also make sure the bitcoind we're talking to is/isn't testnet:\n-        if result.getmininginfo()['testnet'] != testnet:\n-            sys.stderr.write(\"RPC server at \"+connect+\" testnet setting mismatch\\n\")\n-            sys.exit(1)\n-        return result\n-    except:\n-        sys.stderr.write(\"Error connecting to RPC server at \"+connect+\"\\n\")\n-        sys.exit(1)\n-\n-def unlock_wallet(bitcoind):\n-    info = bitcoind.getinfo()\n-    if 'unlocked_until' not in info:\n-        return True # wallet is not encrypted\n-    t = int(info['unlocked_until'])\n-    if t <= time.time():\n-        try:\n-            passphrase = getpass.getpass(\"Wallet is locked; enter passphrase: \")\n-            bitcoind.walletpassphrase(passphrase, 5)\n-        except:\n-            sys.stderr.write(\"Wrong passphrase\\n\")\n-\n-    info = bitcoind.getinfo()\n-    return int(info['unlocked_until']) > time.time()\n-\n-def list_available(bitcoind):\n-    address_summary = dict()\n-\n-    address_to_account = dict()\n-    for info in bitcoind.listreceivedbyaddress(0):\n-        address_to_account[info[\"address\"]] = info[\"account\"]\n-\n-    unspent = bitcoind.listunspent(0)\n-    for output in unspent:\n-        # listunspent doesn't give addresses, so:\n-        rawtx = bitcoind.getrawtransaction(output['txid'], 1)\n-        vout = rawtx[\"vout\"][output['vout']]\n-        pk = vout[\"scriptPubKey\"]\n-\n-        # This code only deals with ordinary pay-to-bitcoin-address\n-        # or pay-to-script-hash outputs right now; anything exotic is ignored.\n-        if pk[\"type\"] != \"pubkeyhash\" and pk[\"type\"] != \"scripthash\":\n-            continue\n-        \n-        address = pk[\"addresses\"][0]\n-        if address in address_summary:\n-            address_summary[address][\"total\"] += vout[\"value\"]\n-            address_summary[address][\"outputs\"].append(output)\n-        else:\n-            address_summary[address] = {\n-                \"total\" : vout[\"value\"],\n-                \"outputs\" : [output],\n-                \"account\" : address_to_account.get(address, \"\")\n-                }\n-\n-    return address_summary\n-\n-def select_coins(needed, inputs):\n-    # Feel free to improve this, this is good enough for my simple needs:\n-    outputs = []\n-    have = Decimal(\"0.0\")\n-    n = 0\n-    while have < needed and n < len(inputs):\n-        outputs.append({ \"txid\":inputs[n][\"txid\"], \"vout\":inputs[n][\"vout\"]})\n-        have += inputs[n][\"amount\"]\n-        n += 1\n-    return (outputs, have-needed)\n-\n-def create_tx(bitcoind, fromaddresses, toaddress, amount, fee):\n-    all_coins = list_available(bitcoind)\n-\n-    total_available = Decimal(\"0.0\")\n-    needed = amount+fee\n-    potential_inputs = []\n-    for addr in fromaddresses:\n-        if addr not in all_coins:\n-            continue\n-        potential_inputs.extend(all_coins[addr][\"outputs\"])\n-        total_available += all_coins[addr][\"total\"]\n-\n-    if total_available < needed:\n-        sys.stderr.write(\"Error, only %f BTC available, need %f\\n\"%(total_available, needed));\n-        sys.exit(1)\n-\n-    #\n-    # Note:\n-    # Python's json/jsonrpc modules have inconsistent support for Decimal numbers.\n-    # Instead of wrestling with getting json.dumps() (used by jsonrpc) to encode\n-    # Decimals, I'm casting amounts to float before sending them to bitcoind.\n-    #  \n-    outputs = { toaddress : float(amount) }\n-    (inputs, change_amount) = select_coins(needed, potential_inputs)\n-    if change_amount > BASE_FEE:  # don't bother with zero or tiny change\n-        change_address = fromaddresses[-1]\n-        if change_address in outputs:\n-            outputs[change_address] += float(change_amount)\n-        else:\n-            outputs[change_address] = float(change_amount)\n-\n-    rawtx = bitcoind.createrawtransaction(inputs, outputs)\n-    signed_rawtx = bitcoind.signrawtransaction(rawtx)\n-    if not signed_rawtx[\"complete\"]:\n-        sys.stderr.write(\"signrawtransaction failed\\n\")\n-        sys.exit(1)\n-    txdata = signed_rawtx[\"hex\"]\n-\n-    return txdata\n-\n-def compute_amount_in(bitcoind, txinfo):\n-    result = Decimal(\"0.0\")\n-    for vin in txinfo['vin']:\n-        in_info = bitcoind.getrawtransaction(vin['txid'], 1)\n-        vout = in_info['vout'][vin['vout']]\n-        result = result + vout['value']\n-    return result\n-\n-def compute_amount_out(txinfo):\n-    result = Decimal(\"0.0\")\n-    for vout in txinfo['vout']:\n-        result = result + vout['value']\n-    return result\n-\n-def sanity_test_fee(bitcoind, txdata_hex, max_fee):\n-    class FeeError(RuntimeError):\n-        pass\n-    try:\n-        txinfo = bitcoind.decoderawtransaction(txdata_hex)\n-        total_in = compute_amount_in(bitcoind, txinfo)\n-        total_out = compute_amount_out(txinfo)\n-        if total_in-total_out > max_fee:\n-            raise FeeError(\"Rejecting transaction, unreasonable fee of \"+str(total_in-total_out))\n-\n-        tx_size = len(txdata_hex)/2\n-        kb = tx_size/1000  # integer division rounds down\n-        if kb > 1 and fee < BASE_FEE:\n-            raise FeeError(\"Rejecting no-fee transaction, larger than 1000 bytes\")\n-        if total_in < 0.01 and fee < BASE_FEE:\n-            raise FeeError(\"Rejecting no-fee, tiny-amount transaction\")\n-        # Exercise for the reader: compute transaction priority, and\n-        # warn if this is a very-low-priority transaction\n-\n-    except FeeError as err:\n-        sys.stderr.write((str(err)+\"\\n\"))\n-        sys.exit(1)\n-\n-def main():\n-    import optparse\n-\n-    parser = optparse.OptionParser(usage=\"%prog [options]\")\n-    parser.add_option(\"--from\", dest=\"fromaddresses\", default=None,\n-                      help=\"addresses to get bitcoins from\")\n-    parser.add_option(\"--to\", dest=\"to\", default=None,\n-                      help=\"address to get send bitcoins to\")\n-    parser.add_option(\"--amount\", dest=\"amount\", default=None,\n-                      help=\"amount to send\")\n-    parser.add_option(\"--fee\", dest=\"fee\", default=\"0.0\",\n-                      help=\"fee to include\")\n-    parser.add_option(\"--datadir\", dest=\"datadir\", default=determine_db_dir(),\n-                      help=\"location of bitcoin.conf file with RPC username/password (default: %default)\")\n-    parser.add_option(\"--testnet\", dest=\"testnet\", default=False, action=\"store_true\",\n-                      help=\"Use the test network\")\n-    parser.add_option(\"--dry_run\", dest=\"dry_run\", default=False, action=\"store_true\",\n-                      help=\"Don't broadcast the transaction, just create and print the transaction data\")\n-\n-    (options, args) = parser.parse_args()\n-\n-    check_json_precision()\n-    config = read_bitcoin_config(options.datadir)\n-    if options.testnet: config['testnet'] = True\n-    bitcoind = connect_JSON(config)\n-\n-    if options.amount is None:\n-        address_summary = list_available(bitcoind)\n-        for address,info in address_summary.iteritems():\n-            n_transactions = len(info['outputs'])\n-            if n_transactions > 1:\n-                print(\"%s %.8f %s (%d transactions)\"%(address, info['total'], info['account'], n_transactions))\n-            else:\n-                print(\"%s %.8f %s\"%(address, info['total'], info['account']))\n-    else:\n-        fee = Decimal(options.fee)\n-        amount = Decimal(options.amount)\n-        while unlock_wallet(bitcoind) == False:\n-            pass # Keep asking for passphrase until they get it right\n-        txdata = create_tx(bitcoind, options.fromaddresses.split(\",\"), options.to, amount, fee)\n-        sanity_test_fee(bitcoind, txdata, amount*Decimal(\"0.01\"))\n-        if options.dry_run:\n-            print(txdata)\n-        else:\n-            txid = bitcoind.sendrawtransaction(txdata)\n-            print(txid)\n-\n-if __name__ == '__main__':\n-    main()"
      },
      {
        "sha": "0d09692b36f03bcd73c2f1db4788551512c7282b",
        "filename": "contrib/testgen/base58.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/testgen/base58.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/testgen/base58.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/base58.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,3 +1,6 @@\n+# Copyright (c) 2012-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n Bitcoin base58 encoding and decoding.\n \n@@ -81,7 +84,6 @@ def b58decode_chk(v):\n     result = b58decode(v)\n     if result is None:\n         return None\n-    h3 = checksum(result[:-4])\n     if result[-4:] == checksum(result[:-4]):\n         return result[:-4]\n     else:"
      },
      {
        "sha": "86366eb8e352278e7cfd46c028fe4cdff8d8da84",
        "filename": "contrib/testgen/gen_base58_test_vectors.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/testgen/gen_base58_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/testgen/gen_base58_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_base58_test_vectors.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,4 +1,7 @@\n #!/usr/bin/env python\n+# Copyright (c) 2012-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n Generate valid and invalid base58 address and private key test vectors.\n \n@@ -10,7 +13,7 @@\n # Released under MIT License\n import os\n from itertools import islice\n-from base58 import b58encode, b58decode, b58encode_chk, b58decode_chk, b58chars\n+from base58 import b58encode_chk, b58decode_chk, b58chars\n import random\n from binascii import b2a_hex\n \n@@ -42,7 +45,6 @@ def is_valid(v):\n     result = b58decode_chk(v)\n     if result is None:\n         return False\n-    valid = False\n     for template in templates:\n         prefix = str(bytearray(template[0]))\n         suffix = str(bytearray(template[2]))"
      },
      {
        "sha": "8960f8811d81e883773fc76add0f6421d173df82",
        "filename": "contrib/tidy_datadir.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/tidy_datadir.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/tidy_datadir.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/tidy_datadir.sh?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,4 +1,7 @@\n #!/bin/bash\n+# Copyright (c) 2013 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n if [ -d \"$1\" ]; then\n   cd \"$1\""
      },
      {
        "sha": "e9e3f65da292a5bd80377f43cbc21cdb9e7f2c37",
        "filename": "contrib/verify-commits/README.md",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/verify-commits/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/verify-commits/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/README.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,26 @@\n+Tooling for verification of PGP signed commits\n+----------------------------------------------\n+\n+This is an incomplete work in progress, but currently includes a pre-push hook\n+script (`pre-push-hook.sh`) for maintainers to ensure that their own commits\n+are PGP signed (nearly always merge commits), as well as a script to verify\n+commits against a trusted keys list.\n+\n+\n+Using verify-commits.sh safely\n+------------------------------\n+\n+Remember that you can't use an untrusted script to verify itself. This means\n+that checking out code, then running `verify-commits.sh` against `HEAD` is\n+_not_ safe, because the version of `verify-commits.sh` that you just ran could\n+be backdoored. Instead, you need to use a trusted version of verify-commits\n+prior to checkout to make sure you're checking out only code signed by trusted\n+keys:\n+\n+    git fetch origin && \\\n+      ./contrib/verify-commits/verify-commits.sh origin/master && \\\n+      git checkout origin/master\n+\n+Note that the above isn't a good UI/UX yet, and needs significant improvements\n+to make it more convenient and reduce the chance of errors; pull-reqs\n+improving this process would be much appreciated."
      },
      {
        "sha": "f0088cdca4af8e96c9c53ba6d68e6a8ea44df181",
        "filename": "contrib/verify-commits/allow-revsig-commits",
        "status": "modified",
        "additions": 104,
        "deletions": 2,
        "changes": 106,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/verify-commits/allow-revsig-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/verify-commits/allow-revsig-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-revsig-commits?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,2 +1,104 @@\n-586a29253dabec3ca0f1ccba9091daabd16b8411\n-eddaba7b5692288087a926da5733e86b47274e4e\n+a06ede9a138d0fb86b0de17c42b936d9fe6e2158\n+923dc447eaa8e017985b2afbbb12dd1283fbea0e\n+71148b8947fe8b4d756822420a7f31c380159425\n+6696b4635ceb9b47aaa63244bff9032fa7b08354\n+812714fd80e96e28cd288c553c83838cecbfc2d9\n+8a445c5651edb9a1f51497055b7ddf4402be9188\n+e126d0c12ca66278d9e7b12187c5ff4fc02a7e6c\n+3908fc4728059719bed0e1c7b1c8b388c2d4a8da\n+8b66bf74e2a349e71eaa183af81fa63eaee76ad2\n+05950427d310654774031764a7141a1a4fd9c6e4\n+07fd147b9f12e9205afd66a624edce357977d615\n+12e31127948fa4bb01c3bddc1b8c85b432f7465b\n+8c87f175d335e9d9e93f987d871ae9f05f6a10a7\n+46b249e578e8a3dfbe85bc7253a12e82ef4b658b\n+a55716abe5662ec74c2f8af93023f1e7cca901fc\n+f646275b90b1de93bc62b4c4d045d75ac0b96eee\n+c252685aa5867631e9a5ef07ccae7c7c25cae8ff\n+a7d55c93385359952d85decd5037843ac70ba3d4\n+7dac1e5e9e887f5f6ff146e812a05bd3bf281eae\n+2a524b8e8fe69ef487fd8ea1b4f7a03f473ed201\n+ce5c1f4acae43477989cdf9a82ed33703919cda2\n+2db4cbcc437f51f5dac82cc4de46f383b92e6f11\n+7aa700424cbda387536373d8dfec88aee43f950e\n+b99a093afed880f23fb279c443cc6ae5e379cc43\n+b83264d9c7a8ddb79f64bd9540caddc8632ef31f\n+57e337d40e94ba33d8cd265c134d6ef857b32b59\n+a1dcf2e1087beaf3981739fd2bb74f35ecad630a\n+d38b0d7a6b6056cba26999b702815775e2437d87\n+815640ec6af9a38d6a2da4a4400056e2f4105080\n+09c4fd157c5b88df2d97fad4826c79b094db90c9\n+2efcfa5acfacb958973d9e8125e1d81f102e2dfd\n+dc6dee41f7cf2ba93fcd0fea7c157e4b2775d439\n+ad826b3df9f763b49f1e3e3d50c4efdd438c7547\n+c1a52276848d8caa9a9789dff176408c1aa6b1ed\n+3bf06e9bac57b5b5a746677b75e297a7b154bdbd\n+72ae6f8cf0224370e8121d6769b21e612ca15d6f\n+a143b88dbd4971ecfdd1d39a494489c8f2db0344\n+76fec09d878d6dbf214bdb6228d480bd9195db4c\n+93566e0c37c5ae104095474fea89f00dcb40f551\n+407d9232ef5cb1ebf6cff21f3d13e07ea4158eeb\n+9346f8429957e356d21c665bab59fe45bcf1f74e\n+6eeac6e30d65f9a972067c1ea8c49978c8e631ac\n+dc6b9406bdfab2af8c86cb080cb3e6cf8f2385d8\n+9f554e03ebe5701c1b75ff03b3d6152095c0cad3\n+05009935f9ac070197113954d680bc2c9150b9b3\n+508404de98a8a5435f52916cef8f328e82651961\n+ed0cc50afed146c27f6d8129c683c225fb940093\n+6429cfa8a70308241c576aeb92ffe3db5203b2ef\n+6898213409811b140843c3d89af43328c3b22fad\n+5b2ea29cf4fd298346437bb16a54407f8c1f9dca\n+e2a1a1ee895149c544d4ae295466611f0cec3094\n+e82fb872ff5cc8fd22d43327c1ee3e755f61c562\n+19b0f33de0efd9da788e8e4f3fdc2a9e159abdb1\n+89de1538ce1f8c00f80e8d11f43e1b77e24d7dea\n+de07fdcf77e97b8613091285e4d0a734f5de7492\n+01680195f8aa586c55c44767397380def3a23b54\n+05e1c85fb687c82ae477c72d4a7e2d6b0c692167\n+c072b8fd95cd4fa84f08189a0cd8b173ea2dbb8e\n+9a0ed08b40b15ae2b791aa8549b53e69934b4ea7\n+53f8f226bd1d627c4a6dec5862a1d4ea5a933e45\n+9d0f43b7ca7241d8a018fd35dd3bc01555235ec6\n+f12d2b5a8ac397e4bcaefcc19898f8ff5705dea5\n+8250de13587ed05ca45df3e12c5dc9bcb1500e2c\n+d727f77e390426e9e463336bda08d50c451c7086\n+484312bda2d43e3ea60047be076332299463adf8\n+c7e05b35ab0a791c7a8e2d863e716fdec6f3f671\n+b9c1cd81848da9de1baf9c2f29c19c50e549de13\n+8ea7d31e384975019733b5778feabbd9955c79d8\n+f798b891bcecea9548eedacae70eeb9906c1ddbf\n+ebefe7a00b46579cdd1e033a8c7fd8ce9aa578e4\n+ad087638ee4864d6244ec9381ff764bfa6ee5086\n+66db2d62d59817320c9182fc18e75a93b76828ea\n+7ce9ac5c83b1844a518ef2e12e87aae3cacdfe58\n+4286f43025149cf44207c3ad98e4a1f068520ada\n+cd0c5135ab2291aaa5410ac919bad3fc87249a4a\n+66ed450d771a8fc01c159a8402648ebd1c35eb4c\n+a82f03393a32842d49236e8666ee57805ca701f8\n+f972b04d63eb8af79ff3cec1dc561ed13dfa6053\n+ec45cc5e27668171b55271b0c735194c70e7da41\n+715e9fd7454f7a48d7adba7d42f662c20a3e3367\n+2e0a99037dcc35bc63ba0d54371bc678af737c8e\n+7fa8d758598407f3bf0beb0118dc122ea5340736\n+6a22373771edbc3c7513cacb9355f880c73c2cbf\n+b89ef131147f71a96152a7b5c4374266cdf539b2\n+01d8359983e2f77b5118fede3ffa947072c666c8\n+58f0c929a3d70a4bff79cc200f1c186f71ef1675\n+950be19727a581970591d8f8138dfe4725750382\n+425278d17bd0edf8a3a7cc81e55016f7fd8e7726\n+c028c7b7557da2baff7af8840108e8be4db8e0c6\n+47a7cfb0aa2498f6801026d258a59f9de48f60b0\n+f6b7df3155ddb4cedfbcf5d3eb3383d4614b3a85\n+d72098038f3b55a714ed8adb34fab547b15eb0d5\n+c49c825bd9f4764536b45df5a684d97173673fc7\n+33799afe83eec4200ff140e9bf5eae83701a4d7f\n+5c3f8ddcaa1164079105c452429fccf8127b01b6\n+1f01443567b03ac75a91c810f1733f5c21b5699d\n+b3e42b6d02e8d19658a9135e427ebceab5367779\n+69b3a6dd9d9a0adf5506c8b9fde42187356bd4a8\n+bafd075c5e6a1088ef0f1aa0b0b224e026a3d3e0\n+7daa3adb242d9c8728fdb15c6af6596aaad5502f\n+514993554c370f4cf30a109ac28d5d64893dbf0a\n+c8d2473e6cb042e7275a10c49d3f6a4a91bf0166\n+386f4385ab04b0b2c3d47bddc0dc0f2de7354964\n+9f33dba05c01ecc5c56eb1284ab7d64d42f55171"
      },
      {
        "sha": "b01e2a6d39e5a30d30eca515844b4ac75af2ecca",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "modified",
        "additions": 38,
        "deletions": 12,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,32 +1,58 @@\n #!/bin/sh\n-INPUT=$(</dev/stdin)\n+# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+INPUT=$(cat /dev/stdin)\n VALID=false\n REVSIG=false\n-IFS=$'\\n'\n-for LINE in $(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null); do\n+IFS='\n+'\n+if [ \"$BITCOIN_VERIFY_COMMITS_ALLOW_SHA1\" = 1 ]; then\n+\tGPG_RES=\"$(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null)\"\n+else\n+\t# Note how we've disabled SHA1 with the --weak-digest option, disabling\n+\t# signatures - including selfsigs - that use SHA1. While you might think that\n+\t# collision attacks shouldn't be an issue as they'd be an attack on yourself,\n+\t# in fact because what's being signed is a commit object that's\n+\t# semi-deterministically generated by untrusted input (the pull-req) in theory\n+\t# an attacker could construct a pull-req that results in a commit object that\n+\t# they've created a collision for. Not the most likely attack, but preventing\n+\t# it is pretty easy so we do so as a \"belt-and-suspenders\" measure.\n+\tGPG_RES=\"\"\n+\tfor LINE in \"$(gpg --version)\"; do\n+\t\tcase \"$LINE\" in\n+\t\t\t\"gpg (GnuPG) 1.4.1\"*|\"gpg (GnuPG) 2.0.\"*)\n+\t\t\t\techo \"Please upgrade to at least gpg 2.1.10 to check for weak signatures\" > /dev/stderr\n+\t\t\t\tGPG_RES=\"$(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null)\"\n+\t\t\t\t;;\n+\t\t\t# We assume if you're running 2.1+, you're probably running 2.1.10+\n+\t\t\t# gpg will fail otherwise\n+\t\t\t# We assume if you're running 1.X, it is either 1.4.1X or 1.4.20+\n+\t\t\t# gpg will fail otherwise\n+\t\tesac\n+\tdone\n+\t[ \"$GPG_RES\" = \"\" ] && GPG_RES=\"$(echo \"$INPUT\" | gpg --trust-model always --weak-digest sha1 \"$@\" 2>/dev/null)\"\n+fi\n+for LINE in $(echo \"$GPG_RES\"); do\n \tcase \"$LINE\" in\n \t\"[GNUPG:] VALIDSIG \"*)\n \t\twhile read KEY; do\n-\t\t\tcase \"$LINE\" in \"[GNUPG:] VALIDSIG $KEY \"*) VALID=true;; esac\n+\t\t\t[ \"${LINE#?GNUPG:? VALIDSIG * * * * * * * * * }\" = \"$KEY\" ] && VALID=true\n \t\tdone < ./contrib/verify-commits/trusted-keys\n \t\t;;\n \t\"[GNUPG:] REVKEYSIG \"*)\n \t\t[ \"$BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n-\t\twhile read KEY; do\n-\t\t\tcase \"$LINE\" in \"[GNUPG:] REVKEYSIG ${KEY:24:40} \"*)\n-\t\t\t\tREVSIG=true\n-\t\t\t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${KEY:24:40} \"\n-\t\t\t\t;;\n-\t\t\tesac\n-\t\tdone < ./contrib/verify-commits/trusted-keys\n+\t\tREVSIG=true\n+\t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${LINE#* * *}\"\n \t\t;;\n \tesac\n done\n if ! $VALID; then\n \texit 1\n fi\n if $VALID && $REVSIG; then\n-\techo \"$INPUT\" | gpg --trust-model always \"$@\" | grep \"\\[GNUPG:\\] \\(NEWSIG\\|SIG_ID\\|VALIDSIG\\)\" 2>/dev/null\n+\techo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null | grep \"\\[GNUPG:\\] \\(NEWSIG\\|SIG_ID\\|VALIDSIG\\)\"\n \techo \"$GOODREVSIG\"\n else\n \techo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null"
      },
      {
        "sha": "c21febb9e9249958fa72ba240e6040a61d927565",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,4 +1,8 @@\n #!/bin/bash\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n if ! [[ \"$2\" =~ ^(git@)?(www.)?github.com(:|/)bitcoin/bitcoin(.git)?$ ]]; then\n     exit 0\n fi"
      },
      {
        "sha": "c60f8ab695e9c0fb01feafb1c28074cb98ab122d",
        "filename": "contrib/verify-commits/trusted-git-root",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/verify-commits/trusted-git-root",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/verify-commits/trusted-git-root",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-git-root?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1 +1 @@\n-165e323d851cc87213c7673c6f278e87a6f2e752\n+82bcf405f6db1d55b684a1f63a4aabad376cdad7"
      },
      {
        "sha": "5610692616e1dd228252f4abc58f3d1a66cefaa0",
        "filename": "contrib/verify-commits/trusted-keys",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/verify-commits/trusted-keys",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/verify-commits/trusted-keys",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-keys?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,7 +1,4 @@\n 71A3B16735405025D447E8F274810B012346C9A6\n-1F4410F6A89268CE3197A84C57896D2FF8F0B657\n-01CDF4627A3B88AAE4A571C87588242FBE38D3A8\n-AF8BE07C7049F3A26B239D5325B3083201782B2F\n-81291FA67D2C379A006A053FEAB5AF94D9E9ABE7\n-3F1888C6DCA92A6499C4911FDBA1A67379A1A931\n+133EAC179436F14A5CF1B794860FEB804E669320\n 32EE5C4C3FA15CCADB46ABE529D4BCB6416F53EC\n+B8B3F1C0E58C15DB6A81D30C3648A882F4316B9B"
      },
      {
        "sha": "7d41f90ad70ef87caa0ce40bee269ff9d61d9c05",
        "filename": "contrib/verify-commits/trusted-sha512-root-commit",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/verify-commits/trusted-sha512-root-commit",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/verify-commits/trusted-sha512-root-commit",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-sha512-root-commit?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1 @@\n+309bf16257b2395ce502017be627186b749ee749"
      },
      {
        "sha": "74b7f38375ac371571466e1b1af44522b41fbcf2",
        "filename": "contrib/verify-commits/verify-commits.sh",
        "status": "modified",
        "additions": 113,
        "deletions": 44,
        "changes": 157,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/verify-commits/verify-commits.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/verify-commits/verify-commits.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.sh?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,63 +1,132 @@\n #!/bin/sh\n+# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n DIR=$(dirname \"$0\")\n+[ \"/${DIR#/}\" != \"$DIR\" ] && DIR=$(dirname \"$(pwd)/$0\")\n \n-echo \"Please verify all commits in the following list are not evil:\"\n-git log \"$DIR\"\n+echo \"Using verify-commits data from ${DIR}\"\n \n VERIFIED_ROOT=$(cat \"${DIR}/trusted-git-root\")\n-\n-IS_REVSIG_ALLOWED () {\n-\twhile read LINE; do\n-\t\t[ \"$LINE\" = \"$1\" ] && return 0\n-\tdone < \"${DIR}/allow-revsig-commits\"\n-\treturn 1\n-}\n+VERIFIED_SHA512_ROOT=$(cat \"${DIR}/trusted-sha512-root-commit\")\n+REVSIG_ALLOWED=$(cat \"${DIR}/allow-revsig-commits\")\n \n HAVE_FAILED=false\n-IS_SIGNED () {\n-\tif [ $1 = $VERIFIED_ROOT ]; then\n-\t\treturn 0;\n+\n+HAVE_GNU_SHA512=1\n+[ ! -x \"$(which sha512sum)\" ] && HAVE_GNU_SHA512=0\n+\n+if [ x\"$1\" = \"x\" ]; then\n+\tCURRENT_COMMIT=\"HEAD\"\n+else\n+\tCURRENT_COMMIT=\"$1\"\n+fi\n+\n+if [ \"${CURRENT_COMMIT#* }\" != \"$CURRENT_COMMIT\" ]; then\n+\techo \"Commit must not contain spaces?\" > /dev/stderr\n+\texit 1\n+fi\n+\n+VERIFY_TREE=0\n+if [ x\"$2\" = \"x--tree-checks\" ]; then\n+\tVERIFY_TREE=1\n+fi\n+\n+NO_SHA1=1\n+PREV_COMMIT=\"\"\n+\n+while true; do\n+\tif [ \"$CURRENT_COMMIT\" = $VERIFIED_ROOT ]; then\n+\t\techo \"There is a valid path from \"$CURRENT_COMMIT\" to $VERIFIED_ROOT where all commits are signed!\"\n+\t\texit 0;\n+\tfi\n+\n+\tif [ \"$CURRENT_COMMIT\" = $VERIFIED_SHA512_ROOT ]; then\n+\t\tif [ \"$VERIFY_TREE\" = \"1\" ]; then\n+\t\t\techo \"All Tree-SHA512s matched up to $VERIFIED_SHA512_ROOT\" > /dev/stderr\n+\t\tfi\n+\t\tVERIFY_TREE=0\n+\t\tNO_SHA1=0\n \tfi\n-\tif IS_REVSIG_ALLOWED \"$1\"; then\n+\n+\tif [ \"$NO_SHA1\" = \"1\" ]; then\n+\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_SHA1=0\n+\telse\n+\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_SHA1=1\n+\tfi\n+\n+\tif [ \"${REVSIG_ALLOWED#*$CURRENT_COMMIT}\" != \"$REVSIG_ALLOWED\" ]; then\n \t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=1\n \telse\n \t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=0\n \tfi\n-\tif ! git -c \"gpg.program=${DIR}/gpg.sh\" verify-commit $1 > /dev/null 2>&1; then\n-\t\treturn 1;\n-\tfi\n-\tlocal PARENTS=$(git show -s --format=format:%P $1)\n-\tfor PARENT in $PARENTS; do\n-\t\tif IS_SIGNED $PARENT > /dev/null; then\n-\t\t\treturn 0;\n+\n+\tif ! git -c \"gpg.program=${DIR}/gpg.sh\" verify-commit \"$CURRENT_COMMIT\" > /dev/null; then\n+\t\tif [ \"$PREV_COMMIT\" != \"\" ]; then\n+\t\t\techo \"No parent of $PREV_COMMIT was signed with a trusted key!\" > /dev/stderr\n+\t\t\techo \"Parents are:\" > /dev/stderr\n+\t\t\tPARENTS=$(git show -s --format=format:%P $PREV_COMMIT)\n+\t\t\tfor PARENT in $PARENTS; do\n+\t\t\t\tgit show -s $PARENT > /dev/stderr\n+\t\t\tdone\n+\t\telse\n+\t\t\techo \"$CURRENT_COMMIT was not signed with a trusted key!\" > /dev/stderr\n \t\tfi\n-\tdone\n-\tif ! \"$HAVE_FAILED\"; then\n-\t\techo \"No parent of $1 was signed with a trusted key!\" > /dev/stderr\n-\t\techo \"Parents are:\" > /dev/stderr\n-\t\tfor PARENT in $PARENTS; do\n-\t\t\tgit show -s $PARENT > /dev/stderr\n-\t\tdone\n-\t\tHAVE_FAILED=true\n+\t\texit 1\n \tfi\n-\treturn 1;\n-}\n \n-if [ x\"$1\" = \"x\" ]; then\n-\tTEST_COMMIT=\"HEAD\"\n-else\n-\tTEST_COMMIT=\"$1\"\n-fi\n+\t# We always verify the top of the tree\n+\tif [ \"$VERIFY_TREE\" = 1 -o \"$PREV_COMMIT\" = \"\" ]; then\n+\t\tIFS_CACHE=\"$IFS\"\n+\t\tIFS='\n+'\n+\t\tfor LINE in $(git ls-tree --full-tree -r \"$CURRENT_COMMIT\"); do\n+\t\t\tcase \"$LINE\" in\n+\t\t\t\t\"12\"*)\n+\t\t\t\t\techo \"Repo contains symlinks\" > /dev/stderr\n+\t\t\t\t\tIFS=\"$IFS_CACHE\"\n+\t\t\t\t\texit 1\n+\t\t\t\t\t;;\n+\t\t\tesac\n+\t\tdone\n+\t\tIFS=\"$IFS_CACHE\"\n \n-IS_SIGNED \"$TEST_COMMIT\"\n-RES=$?\n-if [ \"$RES\" = 1 ]; then\n-\tif ! \"$HAVE_FAILED\"; then\n-\t\techo \"$TEST_COMMIT was not signed with a trusted key!\"\n+\t\tFILE_HASHES=\"\"\n+\t\tfor FILE in $(git ls-tree --full-tree -r --name-only \"$CURRENT_COMMIT\" | LC_ALL=C sort); do\n+\t\t\tif [ \"$HAVE_GNU_SHA512\" = 1 ]; then\n+\t\t\t\tHASH=$(git cat-file blob \"$CURRENT_COMMIT\":\"$FILE\" | sha512sum | { read FIRST OTHER; echo $FIRST; } )\n+\t\t\telse\n+\t\t\t\tHASH=$(git cat-file blob \"$CURRENT_COMMIT\":\"$FILE\" | shasum -a 512 | { read FIRST OTHER; echo $FIRST; } )\n+\t\t\tfi\n+\t\t\t[ \"$FILE_HASHES\" != \"\" ] && FILE_HASHES=\"$FILE_HASHES\"'\n+'\n+\t\t\tFILE_HASHES=\"$FILE_HASHES$HASH  $FILE\"\n+\t\tdone\n+\n+\t\tif [ \"$HAVE_GNU_SHA512\" = 1 ]; then\n+\t\t\tTREE_HASH=\"$(echo \"$FILE_HASHES\" | sha512sum)\"\n+\t\telse\n+\t\t\tTREE_HASH=\"$(echo \"$FILE_HASHES\" | shasum -a 512)\"\n+\t\tfi\n+\t\tHASH_MATCHES=0\n+\t\tMSG=\"$(git show -s --format=format:%B \"$CURRENT_COMMIT\" | tail -n1)\"\n+\n+\t\tcase \"$MSG  -\" in\n+\t\t\t\"Tree-SHA512: $TREE_HASH\")\n+\t\t\t\tHASH_MATCHES=1;;\n+\t\tesac\n+\n+\t\tif [ \"$HASH_MATCHES\" = \"0\" ]; then\n+\t\t\techo \"Tree-SHA512 did not match for commit $CURRENT_COMMIT\" > /dev/stderr\n+\t\t\texit 1\n+\t\tfi\n \tfi\n-else\n-\techo \"There is a valid path from $TEST_COMMIT to $VERIFIED_ROOT where all commits are signed!\"\n-fi\n \n-exit $RES\n+\tPARENTS=$(git show -s --format=format:%P \"$CURRENT_COMMIT\")\n+\tfor PARENT in $PARENTS; do\n+\t\tPREV_COMMIT=\"$CURRENT_COMMIT\"\n+\t\tCURRENT_COMMIT=\"$PARENT\"\n+\t\tbreak\n+\tdone\n+done"
      },
      {
        "sha": "3ffe0a2f289556d40fab4f5ed82ddefaab645ea9",
        "filename": "contrib/verifybinaries/README.md",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/verifybinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/verifybinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/README.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,41 @@\n+### Verify Binaries\n+\n+#### Preparation:\n+\n+Make sure you obtain the proper release signing key and verify the fingerprint with several independent sources.\n+\n+```sh\n+$ gpg --fingerprint \"Bitcoin Core binary release signing key\"\n+pub   4096R/36C2E964 2015-06-24 [expires: 2017-02-13]\n+      Key fingerprint = 01EA 5486 DE18 A882 D4C2  6845 90C8 019E 36C2 E964\n+uid                  Wladimir J. van der Laan (Bitcoin Core binary release signing key) <laanwj@gmail.com>\n+```\n+\n+#### Usage:\n+\n+This script attempts to download the signature file `SHA256SUMS.asc` from https://bitcoin.org.\n+\n+It first checks if the signature passes, and then downloads the files specified in the file, and checks if the hashes of these files match those that are specified in the signature file.\n+\n+The script returns 0 if everything passes the checks. It returns 1 if either the signature check or the hash check doesn't pass. If an error occurs the return value is 2.\n+\n+\n+```sh\n+./verify.sh bitcoin-core-0.11.2\n+./verify.sh bitcoin-core-0.12.0\n+./verify.sh bitcoin-core-0.13.0-rc3\n+```\n+\n+If you only want to download the binaries of certain platform, add the corresponding suffix, e.g.:\n+\n+```sh\n+./verify.sh bitcoin-core-0.11.2-osx\n+./verify.sh 0.12.0-linux\n+./verify.sh bitcoin-core-0.13.0-rc3-win64\n+```\n+\n+If you do not want to keep the downloaded binaries, specify anything as the second parameter.\n+\n+```sh\n+./verify.sh bitcoin-core-0.13.0 delete\n+```"
      },
      {
        "sha": "409f517c9fb2691549a8ff280461d14d1b2e9dd7",
        "filename": "contrib/verifybinaries/verify.sh",
        "status": "renamed",
        "additions": 78,
        "deletions": 20,
        "changes": 98,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/verifybinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/verifybinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/verify.sh?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,6 +1,10 @@\n #!/bin/bash\n+# Copyright (c) 2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-###   This script attempts to download the signature file SHA256SUMS.asc from bitcoin.org\n+###   This script attempts to download the signature file SHA256SUMS.asc from\n+###   bitcoincore.org and bitcoin.org and compares them.\n ###   It first checks if the signature passes, and then downloads the files specified in\n ###   the file, and checks if the hashes of these files match those that are specified\n ###   in the signature file.\n@@ -14,18 +18,17 @@ function clean_up {\n    done\n }\n \n-WORKINGDIR=\"/tmp/bitcoin\"\n+WORKINGDIR=\"/tmp/bitcoin_verify_binaries\"\n TMPFILE=\"hashes.tmp\"\n \n SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n-RCSUBDIR=\"test/\"\n-BASEDIR=\"https://bitcoin.org/bin/\"\n+RCSUBDIR=\"test\"\n+HOST1=\"https://bitcoincore.org\"\n+HOST2=\"https://bitcoin.org\"\n+BASEDIR=\"/bin/\"\n VERSIONPREFIX=\"bitcoin-core-\"\n RCVERSIONSTRING=\"rc\"\n \n-#this URL is used if a version number is not specified as an argument to the script\n-SIGNATUREFILE=\"$BASEDIR\"\"$VERSIONPREFIX\"\"0.10.4/\"\"$RCSUBDIR\"\"$SIGNATUREFILENAME\"\n-\n if [ ! -d \"$WORKINGDIR\" ]; then\n    mkdir \"$WORKINGDIR\"\n fi\n@@ -42,22 +45,46 @@ if [ -n \"$1\" ]; then\n       VERSION=\"$VERSIONPREFIX$1\"\n    fi\n \n-   #now let's see if the version string contains \"rc\", and strip it off if it does\n-   #  and simultaneously add RCSUBDIR to BASEDIR, where we will look for SIGNATUREFILENAME\n-   if [[ $VERSION == *\"$RCVERSIONSTRING\"* ]]; then\n-      BASEDIR=\"$BASEDIR${VERSION/%-$RCVERSIONSTRING*}/\"\n-      BASEDIR=\"$BASEDIR$RCSUBDIR\"\n+   STRIPPEDLAST=\"${VERSION%-*}\"\n+\n+   #now let's see if the version string contains \"rc\" or a platform name (e.g. \"osx\")\n+   if [[ \"$STRIPPEDLAST-\" == \"$VERSIONPREFIX\" ]]; then\n+      BASEDIR=\"$BASEDIR$VERSION/\"\n    else\n+      # let's examine the last part to see if it's rc and/or platform name\n+      STRIPPEDNEXTTOLAST=\"${STRIPPEDLAST%-*}\"\n+      if [[ \"$STRIPPEDNEXTTOLAST-\" == \"$VERSIONPREFIX\" ]]; then\n+\n+         LASTSUFFIX=\"${VERSION##*-}\"\n+         VERSION=\"$STRIPPEDLAST\"\n+\n+         if [[ $LASTSUFFIX == *\"$RCVERSIONSTRING\"* ]]; then\n+            RCVERSION=\"$LASTSUFFIX\"\n+         else\n+            PLATFORM=\"$LASTSUFFIX\"\n+         fi\n+\n+      else\n+         RCVERSION=\"${STRIPPEDLAST##*-}\"\n+         PLATFORM=\"${VERSION##*-}\"\n+\n+         VERSION=\"$STRIPPEDNEXTTOLAST\"\n+      fi\n+\n       BASEDIR=\"$BASEDIR$VERSION/\"\n+      if [[ $RCVERSION == *\"$RCVERSIONSTRING\"* ]]; then\n+         BASEDIR=\"$BASEDIR$RCSUBDIR.$RCVERSION/\"\n+      fi\n    fi\n \n    SIGNATUREFILE=\"$BASEDIR$SIGNATUREFILENAME\"\n else\n-   BASEDIR=\"${SIGNATUREFILE%/*}/\"\n+   echo \"Error: need to specify a version on the command line\"\n+   exit 2\n fi\n \n #first we fetch the file containing the signature\n-WGETOUT=$(wget -N \"$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n+WGETOUT=$(wget -N \"$HOST1$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n \n #and then see if wget completed successfully\n if [ $? -ne 0 ]; then\n@@ -68,6 +95,22 @@ if [ $? -ne 0 ]; then\n    exit 2\n fi\n \n+WGETOUT=$(wget -N -O \"$SIGNATUREFILENAME.2\" \"$HOST2$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n+if [ $? -ne 0 ]; then\n+   echo \"bitcoin.org failed to provide signature file, but bitcoincore.org did?\"\n+   echo \"wget output:\"\n+   echo \"$WGETOUT\"|sed 's/^/\\t/g'\n+   clean_up $SIGNATUREFILENAME\n+   exit 3\n+fi\n+\n+SIGFILEDIFFS=\"$(diff $SIGNATUREFILENAME $SIGNATUREFILENAME.2)\"\n+if [ \"$SIGFILEDIFFS\" != \"\" ]; then\n+   echo \"bitcoin.org and bitcoincore.org signature files were not equal?\"\n+   clean_up $SIGNATUREFILENAME $SIGNATUREFILENAME.2\n+   exit 4\n+fi\n+\n #then we check it\n GPGOUT=$(gpg --yes --decrypt --output \"$TMPFILE\" \"$SIGNATUREFILENAME\" 2>&1)\n \n@@ -87,17 +130,27 @@ if [ $RET -ne 0 ]; then\n \n    echo \"gpg output:\"\n    echo \"$GPGOUT\"|sed 's/^/\\t/g'\n-   clean_up $SIGNATUREFILENAME $TMPFILE\n+   clean_up $SIGNATUREFILENAME $SIGNATUREFILENAME.2 $TMPFILE\n    exit \"$RET\"\n fi\n \n+if [ -n \"$PLATFORM\" ]; then\n+   grep $PLATFORM $TMPFILE > \"$TMPFILE-plat\"\n+   TMPFILESIZE=$(stat -c%s \"$TMPFILE-plat\")\n+   if [ $TMPFILESIZE -eq 0 ]; then\n+      echo \"error: no files matched the platform specified\" && exit 3\n+   fi\n+   mv \"$TMPFILE-plat\" $TMPFILE\n+fi\n+\n #here we extract the filenames from the signature file\n FILES=$(awk '{print $2}' \"$TMPFILE\")\n \n #and download these one by one\n-for file in in $FILES\n+for file in $FILES\n do\n-   wget --quiet -N \"$BASEDIR$file\"\n+   echo \"Downloading $file\"\n+   wget --quiet -N \"$HOST1$BASEDIR$file\"\n done\n \n #check hashes\n@@ -110,11 +163,16 @@ if [ $? -eq 1 ]; then\n    exit 1\n elif [ $? -gt 1 ]; then\n    echo \"Error executing 'diff'\"\n-   exit 2   \n+   exit 2\n fi\n \n-#everything matches! clean up the mess\n-clean_up $FILES $SIGNATUREFILENAME $TMPFILE\n+if [ -n \"$2\" ]; then\n+   echo \"Clean up the binaries\"\n+   clean_up $FILES $SIGNATUREFILENAME $SIGNATUREFILENAME.2 $TMPFILE\n+else\n+   echo \"Keep the binaries in $WORKINGDIR\"\n+   clean_up $TMPFILE\n+fi\n \n echo -e \"Verified hashes of \\n$FILES\"\n ",
        "previous_filename": "contrib/verifysfbinaries/verify.sh"
      },
      {
        "sha": "8c038865bdaff592aed1cd8757733b4a78e23507",
        "filename": "contrib/verifysfbinaries/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/verifysfbinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/contrib/verifysfbinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifysfbinaries/README.md?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,6 +0,0 @@\n-### Verify SF Binaries ###\n-This script attempts to download the signature file `SHA256SUMS.asc` from https://bitcoin.org.\n-\n-It first checks if the signature passes, and then downloads the files specified in the file, and checks if the hashes of these files match those that are specified in the signature file.\n-\n-The script returns 0 if everything passes the checks. It returns 1 if either the signature check or the hash check doesn't pass. If an error occurs the return value is 2.\n\\ No newline at end of file"
      },
      {
        "sha": "bf4978d1430149b4ed3572a484c01e6bb40f22c0",
        "filename": "contrib/windeploy/detached-sig-create.sh",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/windeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/windeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/detached-sig-create.sh?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,34 @@\n+#!/bin/sh\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+if [ -z \"$OSSLSIGNCODE\" ]; then\n+  OSSLSIGNCODE=osslsigncode\n+fi\n+\n+if [ ! -n \"$1\" ]; then\n+  echo \"usage: $0 <osslcodesign args>\"\n+  echo \"example: $0 -key codesign.key\"\n+  exit 1\n+fi\n+\n+OUT=signature-win.tar.gz\n+SRCDIR=unsigned\n+WORKDIR=./.tmp\n+OUTDIR=\"${WORKDIR}/out\"\n+OUTSUBDIR=\"${OUTDIR}/win\"\n+TIMESERVER=http://timestamp.comodoca.com\n+CERTFILE=\"win-codesign.cert\"\n+\n+mkdir -p \"${OUTSUBDIR}\"\n+basename -a `ls -1 \"${SRCDIR}\"/*-unsigned.exe` | while read UNSIGNED; do\n+  echo Signing \"${UNSIGNED}\"\n+  \"${OSSLSIGNCODE}\" sign -certs \"${CERTFILE}\" -t \"${TIMESERVER}\" -in \"${SRCDIR}/${UNSIGNED}\" -out \"${WORKDIR}/${UNSIGNED}\" \"$@\"\n+  \"${OSSLSIGNCODE}\" extract-signature -pem -in \"${WORKDIR}/${UNSIGNED}\" -out \"${OUTSUBDIR}/${UNSIGNED}.pem\" && rm \"${WORKDIR}/${UNSIGNED}\"\n+done\n+\n+rm -f \"${OUT}\"\n+tar -C \"${OUTDIR}\" -czf \"${OUT}\" .\n+rm -rf \"${WORKDIR}\"\n+echo \"Created ${OUT}\""
      },
      {
        "sha": "200b30a3f0d2fd4c537d97baac79f22e81dd8a65",
        "filename": "contrib/windeploy/win-codesign.cert",
        "status": "added",
        "additions": 99,
        "deletions": 0,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/windeploy/win-codesign.cert",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/windeploy/win-codesign.cert",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/win-codesign.cert?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,99 @@\n+-----BEGIN CERTIFICATE-----\n+MIIFTTCCBDWgAwIBAgIRALlW05RLwG2hMQMX5d/o5J8wDQYJKoZIhvcNAQELBQAw\n+fTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\n+A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxIzAhBgNV\n+BAMTGkNPTU9ETyBSU0EgQ29kZSBTaWduaW5nIENBMB4XDTE2MDIwMzAwMDAwMFoX\n+DTE5MDMwNTIzNTk1OVowgbUxCzAJBgNVBAYTAlVTMQ4wDAYDVQQRDAU5ODEwNDEL\n+MAkGA1UECAwCV0ExEDAOBgNVBAcMB1NlYXR0bGUxEDAOBgNVBAkMB1N0ZSAzMDAx\n+FzAVBgNVBAkMDjcxIENvbHVtYmlhIFN0MSUwIwYDVQQKDBxUaGUgQml0Y29pbiBG\n+b3VuZGF0aW9uLCBJbmMuMSUwIwYDVQQDDBxUaGUgQml0Y29pbiBGb3VuZGF0aW9u\n+LCBJbmMuMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAw37Vrv9Gbku0\n++kuV0t89TuyxtAcmT7QE4GcwESKKjmkxfzD9a0qlhqk8GfQ+fw4DHNN+nLKNv7xB\n+bk6aS7J2v2DcXkOjrP99P9jqgTkp7MC04VtG3OqVRGB+gum0pptRovYZUQXIdkY7\n+GJOok/NDagwKiiUe2V2meZ7UctsZNvYeilQdTgKIIhrMB9NowCOhT8ocVL4Ki55/\n+l7hukJn3fueCM3fHTwY2/1gaGsOHoCkFRsD7vokjAVpiY+8rUgvHjb0gxgojiVGd\n+6a6/F5XJwKJacvUyN4Hfc2K5lRMQjTTmo4aWNWIa0iJ3TK9BHpdSLJBqerMPvmnM\n+kkapS+ZTNQIDAQABo4IBjTCCAYkwHwYDVR0jBBgwFoAUKZFg/4pN+uv5pmq4z/nm\n+S71JzhIwHQYDVR0OBBYEFONpQ+cV82URVe+V8G57377KxxexMA4GA1UdDwEB/wQE\n+AwIHgDAMBgNVHRMBAf8EAjAAMBMGA1UdJQQMMAoGCCsGAQUFBwMDMBEGCWCGSAGG\n++EIBAQQEAwIEEDBGBgNVHSAEPzA9MDsGDCsGAQQBsjEBAgEDAjArMCkGCCsGAQUF\n+BwIBFh1odHRwczovL3NlY3VyZS5jb21vZG8ubmV0L0NQUzBDBgNVHR8EPDA6MDig\n+NqA0hjJodHRwOi8vY3JsLmNvbW9kb2NhLmNvbS9DT01PRE9SU0FDb2RlU2lnbmlu\n+Z0NBLmNybDB0BggrBgEFBQcBAQRoMGYwPgYIKwYBBQUHMAKGMmh0dHA6Ly9jcnQu\n+Y29tb2RvY2EuY29tL0NPTU9ET1JTQUNvZGVTaWduaW5nQ0EuY3J0MCQGCCsGAQUF\n+BzABhhhodHRwOi8vb2NzcC5jb21vZG9jYS5jb20wDQYJKoZIhvcNAQELBQADggEB\n+AGnBSi9K/9rgTAyKFKrfGWSfNOwAghmsnsvpZSQ7QyoGWBFKSgCs/70kErl18oHA\n+g7Y8loQB1yukZmJaCa3OvGud7smn45TCh0TMf4EpP20Wxf4rMQTxwAatasHL3+vi\n+I+Nl5bsRZ09kWjvayqLII5upjS/yq0JfpmyGl5k2C/fIpztq0iOLvqWlXcL4+51r\n+cMUAfX6E6EaZQm//ikp+w2+7MEXTKguOuV3gwsrTy0DsvkZl4YDgx/FA4ImzXopv\n+d+3KJPLvO+OSBqUD3JPwXHnuJqGAbLBFyyCa/feGUjLlR8cxcNWLWdp4qxtoIUPG\n+3wTsC9YgrglS0F7FKMXlNRY=\n+-----END CERTIFICATE-----\n+-----BEGIN CERTIFICATE-----\n+MIIF4DCCA8igAwIBAgIQLnyHzA6TSlL+lP0ct800rzANBgkqhkiG9w0BAQwFADCB\n+hTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\n+A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNV\n+BAMTIkNPTU9ETyBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTMwNTA5\n+MDAwMDAwWhcNMjgwNTA4MjM1OTU5WjB9MQswCQYDVQQGEwJHQjEbMBkGA1UECBMS\n+R3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRowGAYDVQQKExFD\n+T01PRE8gQ0EgTGltaXRlZDEjMCEGA1UEAxMaQ09NT0RPIFJTQSBDb2RlIFNpZ25p\n+bmcgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCmmJBjd5E0f4rR\n+3elnMRHrzB79MR2zuWJXP5O8W+OfHiQyESdrvFGRp8+eniWzX4GoGA8dHiAwDvth\n+e4YJs+P9omidHCydv3Lj5HWg5TUjjsmK7hoMZMfYQqF7tVIDSzqwjiNLS2PgIpQ3\n+e9V5kAoUGFEs5v7BEvAcP2FhCoyi3PbDMKrNKBh1SMF5WgjNu4xVjPfUdpA6M0ZQ\n+c5hc9IVKaw+A3V7Wvf2pL8Al9fl4141fEMJEVTyQPDFGy3CuB6kK46/BAW+QGiPi\n+XzjbxghdR7ODQfAuADcUuRKqeZJSzYcPe9hiKaR+ML0btYxytEjy4+gh+V5MYnmL\n+Agaff9ULAgMBAAGjggFRMIIBTTAfBgNVHSMEGDAWgBS7r34CPfqm8TyEjq3uOJjs\n+2TIy1DAdBgNVHQ4EFgQUKZFg/4pN+uv5pmq4z/nmS71JzhIwDgYDVR0PAQH/BAQD\n+AgGGMBIGA1UdEwEB/wQIMAYBAf8CAQAwEwYDVR0lBAwwCgYIKwYBBQUHAwMwEQYD\n+VR0gBAowCDAGBgRVHSAAMEwGA1UdHwRFMEMwQaA/oD2GO2h0dHA6Ly9jcmwuY29t\n+b2RvY2EuY29tL0NPTU9ET1JTQUNlcnRpZmljYXRpb25BdXRob3JpdHkuY3JsMHEG\n+CCsGAQUFBwEBBGUwYzA7BggrBgEFBQcwAoYvaHR0cDovL2NydC5jb21vZG9jYS5j\n+b20vQ09NT0RPUlNBQWRkVHJ1c3RDQS5jcnQwJAYIKwYBBQUHMAGGGGh0dHA6Ly9v\n+Y3NwLmNvbW9kb2NhLmNvbTANBgkqhkiG9w0BAQwFAAOCAgEAAj8COcPu+Mo7id4M\n+bU2x8U6ST6/COCwEzMVjEasJY6+rotcCP8xvGcM91hoIlP8l2KmIpysQGuCbsQci\n+GlEcOtTh6Qm/5iR0rx57FjFuI+9UUS1SAuJ1CAVM8bdR4VEAxof2bO4QRHZXavHf\n+WGshqknUfDdOvf+2dVRAGDZXZxHNTwLk/vPa/HUX2+y392UJI0kfQ1eD6n4gd2HI\n+TfK7ZU2o94VFB696aSdlkClAi997OlE5jKgfcHmtbUIgos8MbAOMTM1zB5TnWo46\n+BLqioXwfy2M6FafUFRunUkcyqfS/ZEfRqh9TTjIwc8Jvt3iCnVz/RrtrIh2IC/gb\n+qjSm/Iz13X9ljIwxVzHQNuxHoc/Li6jvHBhYxQZ3ykubUa9MCEp6j+KjUuKOjswm\n+5LLY5TjCqO3GgZw1a6lYYUoKl7RLQrZVnb6Z53BtWfhtKgx/GWBfDJqIbDCsUgmQ\n+Fhv/K53b0CDKieoofjKOGd97SDMe12X4rsn4gxSTdn1k0I7OvjV9/3IxTZ+evR5s\n+L6iPDAZQ+4wns3bJ9ObXwzTijIchhmH+v1V04SF3AwpobLvkyanmz1kl63zsRQ55\n+ZmjoIs2475iFTZYRPAmK0H+8KCgT+2rKVI2SXM3CZZgGns5IW9S1N5NGQXwH3c/6\n+Q++6Z2H/fUnguzB9XIDj5hY5S6c=\n+-----END CERTIFICATE-----\n+-----BEGIN CERTIFICATE-----\n+MIIF2DCCA8CgAwIBAgIQTKr5yttjb+Af907YWwOGnTANBgkqhkiG9w0BAQwFADCB\n+hTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\n+A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNV\n+BAMTIkNPTU9ETyBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTAwMTE5\n+MDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCBhTELMAkGA1UEBhMCR0IxGzAZBgNVBAgT\n+EkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMR\n+Q09NT0RPIENBIExpbWl0ZWQxKzApBgNVBAMTIkNPTU9ETyBSU0EgQ2VydGlmaWNh\n+dGlvbiBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCR\n+6FSS0gpWsawNJN3Fz0RndJkrN6N9I3AAcbxT38T6KhKPS38QVr2fcHK3YX/JSw8X\n+pz3jsARh7v8Rl8f0hj4K+j5c+ZPmNHrZFGvnnLOFoIJ6dq9xkNfs/Q36nGz637CC\n+9BR++b7Epi9Pf5l/tfxnQ3K9DADWietrLNPtj5gcFKt+5eNu/Nio5JIk2kNrYrhV\n+/erBvGy2i/MOjZrkm2xpmfh4SDBF1a3hDTxFYPwyllEnvGfDyi62a+pGx8cgoLEf\n+Zd5ICLqkTqnyg0Y3hOvozIFIQ2dOciqbXL1MGyiKXCJ7tKuY2e7gUYPDCUZObT6Z\n++pUX2nwzV0E8jVHtC7ZcryxjGt9XyD+86V3Em69FmeKjWiS0uqlWPc9vqv9JWL7w\n+qP/0uK3pN/u6uPQLOvnoQ0IeidiEyxPx2bvhiWC4jChWrBQdnArncevPDt09qZah\n+SL0896+1DSJMwBGB7FY79tOi4lu3sgQiUpWAk2nojkxl8ZEDLXB0AuqLZxUpaVIC\n+u9ffUGpVRr+goyhhf3DQw6KqLCGqR84onAZFdr+CGCe01a60y1Dma/RMhnEw6abf\n+Fobg2P9A3fvQQoh/ozM6LlweQRGBY84YcWsr7KaKtzFcOmpH4MN5WdYgGq/yapiq\n+crxXStJLnbsQ/LBMQeXtHT1eKJ2czL+zUdqnR+WEUwIDAQABo0IwQDAdBgNVHQ4E\n+FgQUu69+Aj36pvE8hI6t7jiY7NkyMtQwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n+/wQFMAMBAf8wDQYJKoZIhvcNAQEMBQADggIBAArx1UaEt65Ru2yyTUEUAJNMnMvl\n+wFTPoCWOAvn9sKIN9SCYPBMtrFaisNZ+EZLpLrqeLppysb0ZRGxhNaKatBYSaVqM\n+4dc+pBroLwP0rmEdEBsqpIt6xf4FpuHA1sj+nq6PK7o9mfjYcwlYRm6mnPTXJ9OV\n+2jeDchzTc+CiR5kDOF3VSXkAKRzH7JsgHAckaVd4sjn8OoSgtZx8jb8uk2Intzna\n+FxiuvTwJaP+EmzzV1gsD41eeFPfR60/IvYcjt7ZJQ3mFXLrrkguhxuhoqEwWsRqZ\n+CuhTLJK7oQkYdQxlqHvLI7cawiiFwxv/0Cti76R7CZGYZ4wUAc1oBmpjIXUDgIiK\n+boHGhfKppC3n9KUkEEeDys30jXlYsQab5xoq2Z0B15R97QNKyvDb6KkBPvVWmcke\n+jkk9u+UJueBPSZI9FoJAzMxZxuY67RIuaTxslbH9qh17f4a+Hg4yRvv7E491f0yL\n+S0Zj/gA0QHDBw7mh3aZw4gSzQbzpgJHqZJx64SIDqZxubw5lT2yHh17zbqD5daWb\n+QOhTsiedSrnAdyGN/4fy3ryM7xfft0kL0fJuMAsaDk527RH89elWsn2/x20Kk4yl\n+0MC2Hb46TpSi125sC8KKfPog88Tk5c0NqMuRkrF8hey1FGlmDoLnzc7ILaZRfyHB\n+NVOFBkpdn627G190\n+-----END CERTIFICATE-----"
      },
      {
        "sha": "5cc19761d41fe3578e65d1b85cf1085932ac4e1c",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "modified",
        "additions": 76,
        "deletions": 29,
        "changes": 105,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,37 +1,84 @@\n-#!/usr/bin/env python2\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+    ZMQ example using python3's asyncio\n+\n+    Bitcoin should be started with the command line arguments:\n+        bitcoind -testnet -daemon \\\n+                -zmqpubhashblock=tcp://127.0.0.1:28332 \\\n+                -zmqpubrawtx=tcp://127.0.0.1:28332 \\\n+                -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n+                -zmqpubhashblock=tcp://127.0.0.1:28332\n+\n+    We use the asyncio library here.  `self.handle()` installs itself as a\n+    future at the end of the function.  Since it never returns with the event\n+    loop having an empty stack of futures, this creates an infinite loop.  An\n+    alternative is to wrap the contents of `handle` inside `while True`.\n+\n+    A blocking example using python 2.7 can be obtained from the git history:\n+    https://github.com/bitcoin/bitcoin/blob/37a7fe9e440b83e2364d5498931253937abe9294/contrib/zmq/zmq_sub.py\n+\"\"\"\n \n-import array\n import binascii\n+import asyncio\n import zmq\n+import zmq.asyncio\n+import signal\n+import struct\n+import sys\n+\n+if not (sys.version_info.major >= 3 and sys.version_info.minor >= 5):\n+    print(\"This example only works with Python 3.5 and greater\")\n+    sys.exit(1)\n \n port = 28332\n \n-zmqContext = zmq.Context()\n-zmqSubSocket = zmqContext.socket(zmq.SUB)\n-zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashblock\")\n-zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashtx\")\n-zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"rawblock\")\n-zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"rawtx\")\n-zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n-\n-try:\n-    while True:\n-        msg = zmqSubSocket.recv_multipart()\n-        topic = str(msg[0])\n+class ZMQHandler():\n+    def __init__(self):\n+        self.loop = zmq.asyncio.install()\n+        self.zmqContext = zmq.asyncio.Context()\n+\n+        self.zmqSubSocket = self.zmqContext.socket(zmq.SUB)\n+        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashblock\")\n+        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashtx\")\n+        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawblock\")\n+        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawtx\")\n+        self.zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n+\n+    async def handle(self) :\n+        msg = await self.zmqSubSocket.recv_multipart()\n+        topic = msg[0]\n         body = msg[1]\n+        sequence = \"Unknown\"\n+        if len(msg[-1]) == 4:\n+          msgSequence = struct.unpack('<I', msg[-1])[-1]\n+          sequence = str(msgSequence)\n+        if topic == b\"hashblock\":\n+            print('- HASH BLOCK ('+sequence+') -')\n+            print(binascii.hexlify(body))\n+        elif topic == b\"hashtx\":\n+            print('- HASH TX  ('+sequence+') -')\n+            print(binascii.hexlify(body))\n+        elif topic == b\"rawblock\":\n+            print('- RAW BLOCK HEADER ('+sequence+') -')\n+            print(binascii.hexlify(body[:80]))\n+        elif topic == b\"rawtx\":\n+            print('- RAW TX ('+sequence+') -')\n+            print(binascii.hexlify(body))\n+        # schedule ourselves to receive the next message\n+        asyncio.ensure_future(self.handle())\n+\n+    def start(self):\n+        self.loop.add_signal_handler(signal.SIGINT, self.stop)\n+        self.loop.create_task(self.handle())\n+        self.loop.run_forever()\n+\n+    def stop(self):\n+        self.loop.stop()\n+        self.zmqContext.destroy()\n \n-        if topic == \"hashblock\":\n-            print \"- HASH BLOCK -\"\n-            print binascii.hexlify(body)\n-        elif topic == \"hashtx\":\n-            print '- HASH TX -'\n-            print binascii.hexlify(body)\n-        elif topic == \"rawblock\":\n-            print \"- RAW BLOCK HEADER -\"\n-            print binascii.hexlify(body[:80])\n-        elif topic == \"rawtx\":\n-            print '- RAW TX -'\n-            print binascii.hexlify(body)\n-\n-except KeyboardInterrupt:\n-    zmqContext.destroy()\n+daemon = ZMQHandler()\n+daemon.start()"
      },
      {
        "sha": "bfb7ea9eaefc2cbdb1d163d6f35e8bf0946efb42",
        "filename": "contrib/zmq/zmq_sub3.4.py",
        "status": "added",
        "additions": 89,
        "deletions": 0,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/zmq/zmq_sub3.4.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/contrib/zmq/zmq_sub3.4.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub3.4.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,89 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+    ZMQ example using python3's asyncio\n+\n+    Bitcoin should be started with the command line arguments:\n+        bitcoind -testnet -daemon \\\n+                -zmqpubhashblock=tcp://127.0.0.1:28332 \\\n+                -zmqpubrawtx=tcp://127.0.0.1:28332 \\\n+                -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n+                -zmqpubhashblock=tcp://127.0.0.1:28332\n+\n+    We use the asyncio library here.  `self.handle()` installs itself as a\n+    future at the end of the function.  Since it never returns with the event\n+    loop having an empty stack of futures, this creates an infinite loop.  An\n+    alternative is to wrap the contents of `handle` inside `while True`.\n+\n+    The `@asyncio.coroutine` decorator and the `yield from` syntax found here\n+    was introduced in python 3.4 and has been deprecated in favor of the `async`\n+    and `await` keywords respectively.\n+\n+    A blocking example using python 2.7 can be obtained from the git history:\n+    https://github.com/bitcoin/bitcoin/blob/37a7fe9e440b83e2364d5498931253937abe9294/contrib/zmq/zmq_sub.py\n+\"\"\"\n+\n+import binascii\n+import asyncio\n+import zmq\n+import zmq.asyncio\n+import signal\n+import struct\n+import sys\n+\n+if not (sys.version_info.major >= 3 and sys.version_info.minor >= 4):\n+    print(\"This example only works with Python 3.4 and greater\")\n+    sys.exit(1)\n+\n+port = 28332\n+\n+class ZMQHandler():\n+    def __init__(self):\n+        self.loop = zmq.asyncio.install()\n+        self.zmqContext = zmq.asyncio.Context()\n+\n+        self.zmqSubSocket = self.zmqContext.socket(zmq.SUB)\n+        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashblock\")\n+        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashtx\")\n+        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawblock\")\n+        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawtx\")\n+        self.zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n+\n+    @asyncio.coroutine\n+    def handle(self) :\n+        msg = yield from self.zmqSubSocket.recv_multipart()\n+        topic = msg[0]\n+        body = msg[1]\n+        sequence = \"Unknown\"\n+        if len(msg[-1]) == 4:\n+          msgSequence = struct.unpack('<I', msg[-1])[-1]\n+          sequence = str(msgSequence)\n+        if topic == b\"hashblock\":\n+            print('- HASH BLOCK ('+sequence+') -')\n+            print(binascii.hexlify(body))\n+        elif topic == b\"hashtx\":\n+            print('- HASH TX  ('+sequence+') -')\n+            print(binascii.hexlify(body))\n+        elif topic == b\"rawblock\":\n+            print('- RAW BLOCK HEADER ('+sequence+') -')\n+            print(binascii.hexlify(body[:80]))\n+        elif topic == b\"rawtx\":\n+            print('- RAW TX ('+sequence+') -')\n+            print(binascii.hexlify(body))\n+        # schedule ourselves to receive the next message\n+        asyncio.ensure_future(self.handle())\n+\n+    def start(self):\n+        self.loop.add_signal_handler(signal.SIGINT, self.stop)\n+        self.loop.create_task(self.handle())\n+        self.loop.run_forever()\n+\n+    def stop(self):\n+        self.loop.stop()\n+        self.zmqContext.destroy()\n+\n+daemon = ZMQHandler()\n+daemon.start()"
      },
      {
        "sha": "3cb4b9ac15557906446b56ab75eb2d23ec0187e9",
        "filename": "depends/.gitignore",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/.gitignore?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -7,3 +7,4 @@ x86_64*\n i686*\n mips*\n arm*\n+aarch64*"
      },
      {
        "sha": "0ddd348e53edabc9069317ab52d5f99ac429781a",
        "filename": "depends/Makefile",
        "status": "modified",
        "additions": 28,
        "deletions": 7,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -15,6 +15,8 @@ BASEDIR = $(CURDIR)\n HASH_LENGTH:=11\n DOWNLOAD_CONNECT_TIMEOUT:=10\n DOWNLOAD_RETRIES:=3\n+HOST_ID_SALT ?= salt\n+BUILD_ID_SALT ?= salt\n \n host:=$(BUILD)\n ifneq ($(HOST),)\n@@ -73,13 +75,31 @@ include builders/$(build_os).mk\n include builders/default.mk\n include packages/packages.mk\n \n-qt_packages_$(NO_QT) = $(qt_packages) $(qt_$(host_os)_packages)\n-qt_native_packages_$(NO_QT) = $(qt_native_packages)\n+build_id_string:=$(BUILD_ID_SALT)\n+build_id_string+=$(shell $(build_CC) --version 2>/dev/null)\n+build_id_string+=$(shell $(build_AR) --version 2>/dev/null)\n+build_id_string+=$(shell $(build_CXX) --version 2>/dev/null)\n+build_id_string+=$(shell $(build_RANLIB) --version 2>/dev/null)\n+build_id_string+=$(shell $(build_STRIP) --version 2>/dev/null)\n+\n+$(host_arch)_$(host_os)_id_string:=$(HOST_ID_SALT)\n+$(host_arch)_$(host_os)_id_string+=$(shell $(host_CC) --version 2>/dev/null)\n+$(host_arch)_$(host_os)_id_string+=$(shell $(host_AR) --version 2>/dev/null)\n+$(host_arch)_$(host_os)_id_string+=$(shell $(host_CXX) --version 2>/dev/null)\n+$(host_arch)_$(host_os)_id_string+=$(shell $(host_RANLIB) --version 2>/dev/null)\n+$(host_arch)_$(host_os)_id_string+=$(shell $(host_STRIP) --version 2>/dev/null)\n+\n+qt_packages_$(NO_QT) = $(qt_packages) $(qt_$(host_os)_packages) $(qt_$(host_arch)_$(host_os)_packages)\n wallet_packages_$(NO_WALLET) = $(wallet_packages)\n upnp_packages_$(NO_UPNP) = $(upnp_packages)\n \n packages += $($(host_arch)_$(host_os)_packages) $($(host_os)_packages) $(qt_packages_) $(wallet_packages_) $(upnp_packages_)\n-native_packages += $($(host_arch)_$(host_os)_native_packages) $($(host_os)_native_packages) $(qt_native_packages_)\n+native_packages += $($(host_arch)_$(host_os)_native_packages) $($(host_os)_native_packages)\n+\n+ifneq ($(qt_packages_),)\n+native_packages += $(qt_native_packages)\n+endif\n+\n all_packages = $(packages) $(native_packages)\n \n meta_depends = Makefile funcs.mk builders/default.mk hosts/default.mk hosts/$(host_os).mk builders/$(build_os).mk\n@@ -90,7 +110,7 @@ include funcs.mk\n \n toolchain_path=$($($(host_arch)_$(host_os)_native_toolchain)_prefixbin)\n final_build_id_long+=$(shell $(build_SHA256SUM) config.site.in)\n-final_build_id+=$(shell echo -n $(final_build_id_long) | $(build_SHA256SUM) | cut -c-$(HASH_LENGTH))\n+final_build_id+=$(shell echo -n \"$(final_build_id_long)\" | $(build_SHA256SUM) | cut -c-$(HASH_LENGTH))\n $(host_prefix)/.stamp_$(final_build_id): $(native_packages) $(packages)\n \t$(AT)rm -rf $(@D)\n \t$(AT)mkdir -p $(@D)\n@@ -114,6 +134,7 @@ $(host_prefix)/share/config.site : config.site.in $(host_prefix)/.stamp_$(final_\n             -e 's|@CXXFLAGS@|$(strip $(host_CXXFLAGS) $(host_$(release_type)_CXXFLAGS))|' \\\n             -e 's|@CPPFLAGS@|$(strip $(host_CPPFLAGS) $(host_$(release_type)_CPPFLAGS))|' \\\n             -e 's|@LDFLAGS@|$(strip $(host_LDFLAGS) $(host_$(release_type)_LDFLAGS))|' \\\n+            -e 's|@allow_host_packages@|$(ALLOW_HOST_PACKAGES)|' \\\n             -e 's|@no_qt@|$(NO_QT)|' \\\n             -e 's|@no_wallet@|$(NO_WALLET)|' \\\n             -e 's|@no_upnp@|$(NO_UPNP)|' \\\n@@ -131,9 +152,9 @@ endef\n \n define check_or_remove_sources\n   mkdir -p $($(package)_source_dir); cd $($(package)_source_dir); \\\n-  $(build_SHA256SUM) -c $($(package)_fetched) >/dev/null 2>/dev/null || \\\n-    ( if test -f $($(package)_all_sources); then echo \"Checksum missing or mismatched for $(package) source. Forcing re-download.\"; fi; \\\n-      rm -f $($(package)_all_sources) $($(1)_fetched))\n+  test -f $($(package)_fetched) && ( $(build_SHA256SUM) -c $($(package)_fetched) >/dev/null 2>/dev/null || \\\n+    ( echo \"Checksum missing or mismatched for $(package) source. Forcing re-download.\"; \\\n+      rm -f $($(package)_all_sources) $($(1)_fetched))) || true\n endef\n \n check-packages:"
      },
      {
        "sha": "6053c531b46a7130fbc0f5b308d1e7258ecbbe80",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -23,7 +23,8 @@ Common `host-platform-triplets` for cross compilation are:\n - `i686-w64-mingw32` for Win32\n - `x86_64-w64-mingw32` for Win64\n - `x86_64-apple-darwin11` for MacOSX\n-- `arm-linux-gnueabihf` for Linux ARM\n+- `arm-linux-gnueabihf` for Linux ARM 32 bit\n+- `aarch64-linux-gnu` for Linux ARM 64 bit\n \n No other options are needed, the paths are automatically configured.\n \n@@ -38,6 +39,8 @@ The following can be set when running make: make FOO=bar\n     NO_WALLET: Don't download/build/cache libs needed to enable the wallet\n     NO_UPNP: Don't download/build/cache packages needed for enabling upnp\n     DEBUG: disable some optimizations and enable more runtime checking\n+    HOST_ID_SALT: Optional salt to use when generating host package ids\n+    BUILD_ID_SALT: Optional salt to use when generating build package ids\n \n If some packages are not built, for example `make NO_WALLET=1`, the appropriate\n options will be passed to bitcoin's configure. In this case, `--disable-wallet`."
      },
      {
        "sha": "27f550ab036aeea9ced0a003d40aceaff5e3dc9c",
        "filename": "depends/builders/darwin.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/builders/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/builders/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/darwin.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -7,11 +7,11 @@ build_darwin_OTOOL: = $(shell xcrun -f otool)\n build_darwin_NM: = $(shell xcrun -f nm)\n build_darwin_INSTALL_NAME_TOOL:=$(shell xcrun -f install_name_tool)\n build_darwin_SHA256SUM = shasum -a 256\n-build_darwin_DOWNLOAD = curl --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -L -o\n+build_darwin_DOWNLOAD = curl --location --fail --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -o\n \n #darwin host on darwin builder. overrides darwin host preferences.\n darwin_CC=$(shell xcrun -f clang) -mmacosx-version-min=$(OSX_MIN_VERSION)\n-darwin_CXX:=$(shell xcrun -f clang++) -mmacosx-version-min=$(OSX_MIN_VERSION)\n+darwin_CXX:=$(shell xcrun -f clang++) -mmacosx-version-min=$(OSX_MIN_VERSION) -stdlib=libc++\n darwin_AR:=$(shell xcrun -f ar)\n darwin_RANLIB:=$(shell xcrun -f ranlib)\n darwin_STRIP:=$(shell xcrun -f strip)"
      },
      {
        "sha": "b03f42401047adf98bc997a7eece42c2c79a2c2c",
        "filename": "depends/builders/linux.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/builders/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/builders/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/linux.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,2 +1,2 @@\n build_linux_SHA256SUM = sha256sum\n-build_linux_DOWNLOAD = wget --timeout=$(DOWNLOAD_CONNECT_TIMEOUT) --tries=$(DOWNLOAD_RETRIES) -nv -O\n+build_linux_DOWNLOAD = curl --location --fail --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -o"
      },
      {
        "sha": "69ed3e573bb3fa14476b0b539805850159eb23e0",
        "filename": "depends/config.guess",
        "status": "modified",
        "additions": 82,
        "deletions": 60,
        "changes": 142,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,8 +1,8 @@\n #! /bin/sh\n # Attempt to guess a canonical system name.\n-#   Copyright 1992-2015 Free Software Foundation, Inc.\n+#   Copyright 1992-2017 Free Software Foundation, Inc.\n \n-timestamp='2015-10-21'\n+timestamp='2017-03-05'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -27,7 +27,7 @@ timestamp='2015-10-21'\n # Originally written by Per Bothner; maintained since 2000 by Ben Elliston.\n #\n # You can get the latest version of this script from:\n-# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD\n+# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\n #\n # Please send patches to <config-patches@gnu.org>.\n \n@@ -50,7 +50,7 @@ version=\"\\\n GNU config.guess ($timestamp)\n \n Originally written by Per Bothner.\n-Copyright 1992-2015 Free Software Foundation, Inc.\n+Copyright 1992-2017 Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n@@ -186,9 +186,12 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \t    *) machine=${UNAME_MACHINE_ARCH}-unknown ;;\n \tesac\n \t# The Operating System including object format, if it has switched\n-\t# to ELF recently, or will in the future.\n+\t# to ELF recently (or will in the future) and ABI.\n \tcase \"${UNAME_MACHINE_ARCH}\" in\n-\t    arm*|earm*|i386|m68k|ns32k|sh3*|sparc|vax)\n+\t    earm*)\n+\t\tos=netbsdelf\n+\t\t;;\n+\t    arm*|i386|m68k|ns32k|sh3*|sparc|vax)\n \t\teval $set_cc_for_build\n \t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n \t\t\t| grep -q __ELF__\n@@ -237,6 +240,10 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \tUNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`\n \techo ${UNAME_MACHINE_ARCH}-unknown-openbsd${UNAME_RELEASE}\n \texit ;;\n+    *:LibertyBSD:*:*)\n+\tUNAME_MACHINE_ARCH=`arch | sed 's/^.*BSD\\.//'`\n+\techo ${UNAME_MACHINE_ARCH}-unknown-libertybsd${UNAME_RELEASE}\n+\texit ;;\n     *:ekkoBSD:*:*)\n \techo ${UNAME_MACHINE}-unknown-ekkobsd${UNAME_RELEASE}\n \texit ;;\n@@ -268,42 +275,42 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n \tcase \"$ALPHA_CPU_TYPE\" in\n \t    \"EV4 (21064)\")\n-\t\tUNAME_MACHINE=\"alpha\" ;;\n+\t\tUNAME_MACHINE=alpha ;;\n \t    \"EV4.5 (21064)\")\n-\t\tUNAME_MACHINE=\"alpha\" ;;\n+\t\tUNAME_MACHINE=alpha ;;\n \t    \"LCA4 (21066/21068)\")\n-\t\tUNAME_MACHINE=\"alpha\" ;;\n+\t\tUNAME_MACHINE=alpha ;;\n \t    \"EV5 (21164)\")\n-\t\tUNAME_MACHINE=\"alphaev5\" ;;\n+\t\tUNAME_MACHINE=alphaev5 ;;\n \t    \"EV5.6 (21164A)\")\n-\t\tUNAME_MACHINE=\"alphaev56\" ;;\n+\t\tUNAME_MACHINE=alphaev56 ;;\n \t    \"EV5.6 (21164PC)\")\n-\t\tUNAME_MACHINE=\"alphapca56\" ;;\n+\t\tUNAME_MACHINE=alphapca56 ;;\n \t    \"EV5.7 (21164PC)\")\n-\t\tUNAME_MACHINE=\"alphapca57\" ;;\n+\t\tUNAME_MACHINE=alphapca57 ;;\n \t    \"EV6 (21264)\")\n-\t\tUNAME_MACHINE=\"alphaev6\" ;;\n+\t\tUNAME_MACHINE=alphaev6 ;;\n \t    \"EV6.7 (21264A)\")\n-\t\tUNAME_MACHINE=\"alphaev67\" ;;\n+\t\tUNAME_MACHINE=alphaev67 ;;\n \t    \"EV6.8CB (21264C)\")\n-\t\tUNAME_MACHINE=\"alphaev68\" ;;\n+\t\tUNAME_MACHINE=alphaev68 ;;\n \t    \"EV6.8AL (21264B)\")\n-\t\tUNAME_MACHINE=\"alphaev68\" ;;\n+\t\tUNAME_MACHINE=alphaev68 ;;\n \t    \"EV6.8CX (21264D)\")\n-\t\tUNAME_MACHINE=\"alphaev68\" ;;\n+\t\tUNAME_MACHINE=alphaev68 ;;\n \t    \"EV6.9A (21264/EV69A)\")\n-\t\tUNAME_MACHINE=\"alphaev69\" ;;\n+\t\tUNAME_MACHINE=alphaev69 ;;\n \t    \"EV7 (21364)\")\n-\t\tUNAME_MACHINE=\"alphaev7\" ;;\n+\t\tUNAME_MACHINE=alphaev7 ;;\n \t    \"EV7.9 (21364A)\")\n-\t\tUNAME_MACHINE=\"alphaev79\" ;;\n+\t\tUNAME_MACHINE=alphaev79 ;;\n \tesac\n \t# A Pn.n version is a patched version.\n \t# A Vn.n version is a released version.\n \t# A Tn.n version is a released field test version.\n \t# A Xn.n version is an unreleased experimental baselevel.\n \t# 1.2 uses \"1.2\" for uname -r.\n-\techo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n+\techo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n \t# Reset EXIT trap before exiting to avoid spurious non-zero exit code.\n \texitcode=$?\n \ttrap '' 0\n@@ -376,16 +383,16 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \texit ;;\n     i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)\n \teval $set_cc_for_build\n-\tSUN_ARCH=\"i386\"\n+\tSUN_ARCH=i386\n \t# If there is a compiler, see if it is configured for 64-bit objects.\n \t# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.\n \t# This test works for both compilers.\n-\tif [ \"$CC_FOR_BUILD\" != 'no_compiler_found' ]; then\n+\tif [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n \t    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \\\n-\t\t(CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\t(CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n \t\tgrep IS_64BIT_ARCH >/dev/null\n \t    then\n-\t\tSUN_ARCH=\"x86_64\"\n+\t\tSUN_ARCH=x86_64\n \t    fi\n \tfi\n \techo ${SUN_ARCH}-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n@@ -410,7 +417,7 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \texit ;;\n     sun*:*:4.2BSD:*)\n \tUNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n-\ttest \"x${UNAME_RELEASE}\" = \"x\" && UNAME_RELEASE=3\n+\ttest \"x${UNAME_RELEASE}\" = x && UNAME_RELEASE=3\n \tcase \"`/bin/arch`\" in\n \t    sun3)\n \t\techo m68k-sun-sunos${UNAME_RELEASE}\n@@ -635,13 +642,13 @@ EOF\n \t\t    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`\n \t\t    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`\n \t\t    case \"${sc_cpu_version}\" in\n-\t\t      523) HP_ARCH=\"hppa1.0\" ;; # CPU_PA_RISC1_0\n-\t\t      528) HP_ARCH=\"hppa1.1\" ;; # CPU_PA_RISC1_1\n+\t\t      523) HP_ARCH=hppa1.0 ;; # CPU_PA_RISC1_0\n+\t\t      528) HP_ARCH=hppa1.1 ;; # CPU_PA_RISC1_1\n \t\t      532)                      # CPU_PA_RISC2_0\n \t\t\tcase \"${sc_kernel_bits}\" in\n-\t\t\t  32) HP_ARCH=\"hppa2.0n\" ;;\n-\t\t\t  64) HP_ARCH=\"hppa2.0w\" ;;\n-\t\t\t  '') HP_ARCH=\"hppa2.0\" ;;   # HP-UX 10.20\n+\t\t\t  32) HP_ARCH=hppa2.0n ;;\n+\t\t\t  64) HP_ARCH=hppa2.0w ;;\n+\t\t\t  '') HP_ARCH=hppa2.0 ;;   # HP-UX 10.20\n \t\t\tesac ;;\n \t\t    esac\n \t\tfi\n@@ -680,11 +687,11 @@ EOF\n \t\t    exit (0);\n \t\t}\n EOF\n-\t\t    (CCOPTS= $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`\n+\t\t    (CCOPTS=\"\" $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`\n \t\t    test -z \"$HP_ARCH\" && HP_ARCH=hppa\n \t\tfi ;;\n \tesac\n-\tif [ ${HP_ARCH} = \"hppa2.0w\" ]\n+\tif [ ${HP_ARCH} = hppa2.0w ]\n \tthen\n \t    eval $set_cc_for_build\n \n@@ -697,12 +704,12 @@ EOF\n \t    # $ CC_FOR_BUILD=\"cc +DA2.0w\" ./config.guess\n \t    # => hppa64-hp-hpux11.23\n \n-\t    if echo __LP64__ | (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) |\n+\t    if echo __LP64__ | (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) |\n \t\tgrep -q __LP64__\n \t    then\n-\t\tHP_ARCH=\"hppa2.0w\"\n+\t\tHP_ARCH=hppa2.0w\n \t    else\n-\t\tHP_ARCH=\"hppa64\"\n+\t\tHP_ARCH=hppa64\n \t    fi\n \tfi\n \techo ${HP_ARCH}-hp-hpux${HPUX_REV}\n@@ -807,14 +814,14 @@ EOF\n \techo craynv-cray-unicosmp${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n \texit ;;\n     F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n-\tFUJITSU_PROC=`uname -m | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n-\tFUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\\///'`\n+\tFUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n+\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n \tFUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`\n \techo \"${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n \texit ;;\n     5000:UNIX_System_V:4.*:*)\n-\tFUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\\///'`\n-\tFUJITSU_REL=`echo ${UNAME_RELEASE} | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/ /_/'`\n+\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n+\tFUJITSU_REL=`echo ${UNAME_RELEASE} | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`\n \techo \"sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n \texit ;;\n     i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\\ Embedded/OS:*:*)\n@@ -830,10 +837,11 @@ EOF\n \tUNAME_PROCESSOR=`/usr/bin/uname -p`\n \tcase ${UNAME_PROCESSOR} in\n \t    amd64)\n-\t\techo x86_64-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;\n-\t    *)\n-\t\techo ${UNAME_PROCESSOR}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;\n+\t\tUNAME_PROCESSOR=x86_64 ;;\n+\t    i386)\n+\t\tUNAME_PROCESSOR=i586 ;;\n \tesac\n+\techo ${UNAME_PROCESSOR}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\n \texit ;;\n     i*:CYGWIN*:*)\n \techo ${UNAME_MACHINE}-pc-cygwin\n@@ -896,7 +904,7 @@ EOF\n \texit ;;\n     *:GNU/*:*:*)\n \t# other systems with GNU libc and userland\n-\techo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr '[A-Z]' '[a-z]'``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-${LIBC}\n+\techo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr \"[:upper:]\" \"[:lower:]\"``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-${LIBC}\n \texit ;;\n     i*86:Minix:*:*)\n \techo ${UNAME_MACHINE}-pc-minix\n@@ -919,7 +927,7 @@ EOF\n \t  EV68*) UNAME_MACHINE=alphaev68 ;;\n \tesac\n \tobjdump --private-headers /bin/sh | grep -q ld.so.1\n-\tif test \"$?\" = 0 ; then LIBC=\"gnulibc1\" ; fi\n+\tif test \"$?\" = 0 ; then LIBC=gnulibc1 ; fi\n \techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n \texit ;;\n     arc:Linux:*:* | arceb:Linux:*:*)\n@@ -993,6 +1001,9 @@ EOF\n \teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^CPU'`\n \ttest x\"${CPU}\" != x && { echo \"${CPU}-unknown-linux-${LIBC}\"; exit; }\n \t;;\n+    mips64el:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n     openrisc*:Linux:*:*)\n \techo or1k-unknown-linux-${LIBC}\n \texit ;;\n@@ -1025,6 +1036,9 @@ EOF\n     ppcle:Linux:*:*)\n \techo powerpcle-unknown-linux-${LIBC}\n \texit ;;\n+    riscv32:Linux:*:* | riscv64:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n     s390:Linux:*:* | s390x:Linux:*:*)\n \techo ${UNAME_MACHINE}-ibm-linux-${LIBC}\n \texit ;;\n@@ -1272,6 +1286,9 @@ EOF\n     SX-8R:SUPER-UX:*:*)\n \techo sx8r-nec-superux${UNAME_RELEASE}\n \texit ;;\n+    SX-ACE:SUPER-UX:*:*)\n+\techo sxace-nec-superux${UNAME_RELEASE}\n+\texit ;;\n     Power*:Rhapsody:*:*)\n \techo powerpc-apple-rhapsody${UNAME_RELEASE}\n \texit ;;\n@@ -1285,9 +1302,9 @@ EOF\n \t    UNAME_PROCESSOR=powerpc\n \tfi\n \tif test `echo \"$UNAME_RELEASE\" | sed -e 's/\\..*//'` -le 10 ; then\n-\t    if [ \"$CC_FOR_BUILD\" != 'no_compiler_found' ]; then\n+\t    if [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n \t\tif (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n-\t\t    (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\t    (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n \t\t    grep IS_64BIT_ARCH >/dev/null\n \t\tthen\n \t\t    case $UNAME_PROCESSOR in\n@@ -1309,7 +1326,7 @@ EOF\n \texit ;;\n     *:procnto*:*:* | *:QNX:[0123456789]*:*)\n \tUNAME_PROCESSOR=`uname -p`\n-\tif test \"$UNAME_PROCESSOR\" = \"x86\"; then\n+\tif test \"$UNAME_PROCESSOR\" = x86; then\n \t\tUNAME_PROCESSOR=i386\n \t\tUNAME_MACHINE=pc\n \tfi\n@@ -1327,6 +1344,9 @@ EOF\n     NSR-?:NONSTOP_KERNEL:*:*)\n \techo nsr-tandem-nsk${UNAME_RELEASE}\n \texit ;;\n+    NSX-?:NONSTOP_KERNEL:*:*)\n+\techo nsx-tandem-nsk${UNAME_RELEASE}\n+\texit ;;\n     *:NonStop-UX:*:*)\n \techo mips-compaq-nonstopux\n \texit ;;\n@@ -1340,7 +1360,7 @@ EOF\n \t# \"uname -m\" is not consistent, so use $cputype instead. 386\n \t# is converted to i386 for consistency with other x86\n \t# operating systems.\n-\tif test \"$cputype\" = \"386\"; then\n+\tif test \"$cputype\" = 386; then\n \t    UNAME_MACHINE=i386\n \telse\n \t    UNAME_MACHINE=\"$cputype\"\n@@ -1382,7 +1402,7 @@ EOF\n \techo i386-pc-xenix\n \texit ;;\n     i*86:skyos:*:*)\n-\techo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE}` | sed -e 's/ .*$//'\n+\techo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE} | sed -e 's/ .*$//'`\n \texit ;;\n     i*86:rdos:*:*)\n \techo ${UNAME_MACHINE}-pc-rdos\n@@ -1393,23 +1413,25 @@ EOF\n     x86_64:VMkernel:*:*)\n \techo ${UNAME_MACHINE}-unknown-esx\n \texit ;;\n+    amd64:Isilon\\ OneFS:*:*)\n+\techo x86_64-unknown-onefs\n+\texit ;;\n esac\n \n cat >&2 <<EOF\n $0: unable to guess system type\n \n-This script, last modified $timestamp, has failed to recognize\n-the operating system you are using. It is advised that you\n-download the most up to date version of the config scripts from\n+This script (version $timestamp), has failed to recognize the\n+operating system you are using. If your script is old, overwrite\n+config.guess and config.sub with the latest versions from:\n \n-  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD\n+  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\n and\n-  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD\n+  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub\n \n-If the version you run ($0) is already up to date, please\n-send the following data and any information you think might be\n-pertinent to <config-patches@gnu.org> in order to provide the needed\n-information to handle your system.\n+If $0 has already been updated, send the following data and any\n+information you think might be pertinent to config-patches@gnu.org to\n+provide the necessary information to handle your system.\n \n config.guess timestamp = $timestamp\n "
      },
      {
        "sha": "0a4a9c327e2e73e55d226c4cdc8a543bcf0da1f5",
        "filename": "depends/config.site.in",
        "status": "modified",
        "additions": 20,
        "deletions": 20,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,24 +1,23 @@\n+depends_prefix=\"`dirname ${ac_site_file}`/..\"\n+\n cross_compiling=maybe\n host_alias=@HOST@\n ac_tool_prefix=${host_alias}-\n \n if test -z $with_boost; then\n-  with_boost=$prefix\n+  with_boost=$depends_prefix\n fi\n if test -z $with_qt_plugindir; then\n-  with_qt_plugindir=$prefix/plugins\n+  with_qt_plugindir=$depends_prefix/plugins\n fi\n if test -z $with_qt_translationdir; then\n-  with_qt_translationdir=$prefix/translations\n-fi\n-if test -z $with_qt_bindir; then\n-  with_qt_bindir=$prefix/native/bin\n+  with_qt_translationdir=$depends_prefix/translations\n fi\n-if test -z $with_protoc_bindir; then\n-  with_protoc_bindir=$prefix/native/bin\n+if test -z $with_qt_bindir && test -z \"@no_qt@\"; then\n+  with_qt_bindir=$depends_prefix/native/bin\n fi\n-if test -z $with_comparison_tool; then\n-  with_comparison_tool=$prefix/native/share/BitcoindComparisonTool_jar/BitcoindComparisonTool.jar\n+if test -z $with_protoc_bindir && test -z \"@no_qt@\"; then\n+  with_protoc_bindir=$depends_prefix/native/bin\n fi\n \n \n@@ -41,31 +40,32 @@ fi\n \n if test x@host_os@ = xmingw32; then\n   if test -z $with_qt_incdir; then\n-    with_qt_incdir=$prefix/include\n+    with_qt_incdir=$depends_prefix/include\n   fi\n   if test -z $with_qt_libdir; then\n-    with_qt_libdir=$prefix/lib\n+    with_qt_libdir=$depends_prefix/lib\n   fi\n fi\n \n-PATH=$prefix/native/bin:$PATH\n+PATH=$depends_prefix/native/bin:$PATH\n PKG_CONFIG=\"`which pkg-config` --static\"\n \n # These two need to remain exported because pkg-config does not see them\n # otherwise. That means they must be unexported at the end of configure.ac to\n # avoid ruining the cache. Sigh.\n+export PKG_CONFIG_PATH=$depends_prefix/share/pkgconfig:$depends_prefix/lib/pkgconfig\n+if test -z \"@allow_host_packages@\"; then\n+  export PKGCONFIG_LIBDIR=\n+fi\n \n-export PKG_CONFIG_LIBDIR=$prefix/lib/pkgconfig\n-export PKG_CONFIG_PATH=$prefix/share/pkgconfig\n-\n-CPPFLAGS=\"-I$prefix/include/ $CPPFLAGS\"\n-LDFLAGS=\"-L$prefix/lib $LDFLAGS\"\n+CPPFLAGS=\"-I$depends_prefix/include/ $CPPFLAGS\"\n+LDFLAGS=\"-L$depends_prefix/lib $LDFLAGS\"\n \n CC=\"@CC@\"\n CXX=\"@CXX@\"\n OBJC=\"${CC}\"\n-OBJCXX=\"${CXX}\"\n-CCACHE=$prefix/native/bin/ccache\n+CCACHE=$depends_prefix/native/bin/ccache\n+PYTHONPATH=$depends_prefix/native/lib/python/dist-packages:$PYTHONPATH\n \n if test -n \"@AR@\"; then\n   AR=@AR@"
      },
      {
        "sha": "40ea5dfe1152f0fc5160879bb71bfe1fae2595f6",
        "filename": "depends/config.sub",
        "status": "modified",
        "additions": 39,
        "deletions": 16,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,8 +1,8 @@\n #! /bin/sh\n # Configuration validation subroutine script.\n-#   Copyright 1992-2015 Free Software Foundation, Inc.\n+#   Copyright 1992-2017 Free Software Foundation, Inc.\n \n-timestamp='2015-08-20'\n+timestamp='2017-04-02'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -33,7 +33,7 @@ timestamp='2015-08-20'\n # Otherwise, we print the canonical config type on stdout and succeed.\n \n # You can get the latest version of this script from:\n-# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD\n+# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub\n \n # This file is supposed to be the same for all GNU packages\n # and recognize all the CPU types, system types and aliases\n@@ -53,8 +53,7 @@ timestamp='2015-08-20'\n me=`echo \"$0\" | sed -e 's,.*/,,'`\n \n usage=\"\\\n-Usage: $0 [OPTION] CPU-MFR-OPSYS\n-       $0 [OPTION] ALIAS\n+Usage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS\n \n Canonicalize a configuration name.\n \n@@ -68,7 +67,7 @@ Report bugs and patches to <config-patches@gnu.org>.\"\n version=\"\\\n GNU config.sub ($timestamp)\n \n-Copyright 1992-2015 Free Software Foundation, Inc.\n+Copyright 1992-2017 Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n@@ -118,7 +117,7 @@ case $maybe_os in\n   nto-qnx* | linux-gnu* | linux-android* | linux-dietlibc | linux-newlib* | \\\n   linux-musl* | linux-uclibc* | uclinux-uclibc* | uclinux-gnu* | kfreebsd*-gnu* | \\\n   knetbsd*-gnu* | netbsd*-gnu* | netbsd*-eabi* | \\\n-  kopensolaris*-gnu* | \\\n+  kopensolaris*-gnu* | cloudabi*-eabi* | \\\n   storm-chaos* | os2-emx* | rtmk-nova*)\n     os=-$maybe_os\n     basic_machine=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\1/'`\n@@ -264,7 +263,7 @@ case $basic_machine in\n \t| fido | fr30 | frv | ft32 \\\n \t| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n \t| hexagon \\\n-\t| i370 | i860 | i960 | ia64 \\\n+\t| i370 | i860 | i960 | ia16 | ia64 \\\n \t| ip2k | iq2000 \\\n \t| k1om \\\n \t| le32 | le64 \\\n@@ -302,6 +301,7 @@ case $basic_machine in\n \t| open8 | or1k | or1knd | or32 \\\n \t| pdp10 | pdp11 | pj | pjl \\\n \t| powerpc | powerpc64 | powerpc64le | powerpcle \\\n+\t| pru \\\n \t| pyramid \\\n \t| riscv32 | riscv64 \\\n \t| rl78 | rx \\\n@@ -315,6 +315,7 @@ case $basic_machine in\n \t| ubicom32 \\\n \t| v850 | v850e | v850e1 | v850e2 | v850es | v850e2v3 \\\n \t| visium \\\n+\t| wasm32 \\\n \t| we32k \\\n \t| x86 | xc16x | xstormy16 | xtensa \\\n \t| z8k | z80)\n@@ -388,7 +389,7 @@ case $basic_machine in\n \t| h8300-* | h8500-* \\\n \t| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \\\n \t| hexagon-* \\\n-\t| i*86-* | i860-* | i960-* | ia64-* \\\n+\t| i*86-* | i860-* | i960-* | ia16-* | ia64-* \\\n \t| ip2k-* | iq2000-* \\\n \t| k1om-* \\\n \t| le32-* | le64-* \\\n@@ -429,6 +430,7 @@ case $basic_machine in\n \t| orion-* \\\n \t| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \\\n \t| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* \\\n+\t| pru-* \\\n \t| pyramid-* \\\n \t| riscv32-* | riscv64-* \\\n \t| rl78-* | romp-* | rs6000-* | rx-* \\\n@@ -445,6 +447,7 @@ case $basic_machine in\n \t| v850-* | v850e-* | v850e1-* | v850es-* | v850e2-* | v850e2v3-* \\\n \t| vax-* \\\n \t| visium-* \\\n+\t| wasm32-* \\\n \t| we32k-* \\\n \t| x86-* | x86_64-* | xc16x-* | xps100-* \\\n \t| xstormy16-* | xtensa*-* \\\n@@ -521,7 +524,7 @@ case $basic_machine in\n \t\tbasic_machine=i386-pc\n \t\tos=-aros\n \t\t;;\n-        asmjs)\n+\tasmjs)\n \t\tbasic_machine=asmjs-unknown\n \t\t;;\n \taux)\n@@ -644,6 +647,14 @@ case $basic_machine in\n \t\tbasic_machine=m68k-bull\n \t\tos=-sysv3\n \t\t;;\n+\te500v[12])\n+\t\tbasic_machine=powerpc-unknown\n+\t\tos=$os\"spe\"\n+\t\t;;\n+\te500v[12]-*)\n+\t\tbasic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\tos=$os\"spe\"\n+\t\t;;\n \tebmon29k)\n \t\tbasic_machine=a29k-amd\n \t\tos=-ebmon\n@@ -939,6 +950,9 @@ case $basic_machine in\n \tnsr-tandem)\n \t\tbasic_machine=nsr-tandem\n \t\t;;\n+\tnsx-tandem)\n+\t\tbasic_machine=nsx-tandem\n+\t\t;;\n \top50n-* | op60c-*)\n \t\tbasic_machine=hppa1.1-oki\n \t\tos=-proelf\n@@ -1023,7 +1037,7 @@ case $basic_machine in\n \tppc-* | ppcbe-*)\n \t\tbasic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`\n \t\t;;\n-\tppcle | powerpclittle | ppc-le | powerpc-little)\n+\tppcle | powerpclittle)\n \t\tbasic_machine=powerpcle-unknown\n \t\t;;\n \tppcle-* | powerpclittle-*)\n@@ -1033,7 +1047,7 @@ case $basic_machine in\n \t\t;;\n \tppc64-*) basic_machine=powerpc64-`echo $basic_machine | sed 's/^[^-]*-//'`\n \t\t;;\n-\tppc64le | powerpc64little | ppc64-le | powerpc64-little)\n+\tppc64le | powerpc64little)\n \t\tbasic_machine=powerpc64le-unknown\n \t\t;;\n \tppc64le-* | powerpc64little-*)\n@@ -1234,6 +1248,9 @@ case $basic_machine in\n \t\tbasic_machine=a29k-wrs\n \t\tos=-vxworks\n \t\t;;\n+\twasm32)\n+\t\tbasic_machine=wasm32-unknown\n+\t\t;;\n \tw65*)\n \t\tbasic_machine=w65-wdc\n \t\tos=-none\n@@ -1383,14 +1400,14 @@ case $os in\n \t      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \\\n \t      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \\\n \t      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \\\n-\t      | -bitrig* | -openbsd* | -solidbsd* \\\n+\t      | -bitrig* | -openbsd* | -solidbsd* | -libertybsd* \\\n \t      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \\\n \t      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \\\n \t      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \\\n \t      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \\\n-\t      | -chorusos* | -chorusrdb* | -cegcc* \\\n+\t      | -chorusos* | -chorusrdb* | -cegcc* | -glidix* \\\n \t      | -cygwin* | -msys* | -pe* | -psos* | -moss* | -proelf* | -rtems* \\\n-\t      | -mingw32* | -mingw64* | -linux-gnu* | -linux-android* \\\n+\t      | -midipix* | -mingw32* | -mingw64* | -linux-gnu* | -linux-android* \\\n \t      | -linux-newlib* | -linux-musl* | -linux-uclibc* \\\n \t      | -uxpv* | -beos* | -mpeix* | -udk* | -moxiebox* \\\n \t      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \\\n@@ -1399,7 +1416,8 @@ case $os in\n \t      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \\\n \t      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \\\n \t      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \\\n-\t      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* | -tirtos*)\n+\t      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* \\\n+\t      | -onefs* | -tirtos* | -phoenix* | -fuchsia* | -redox*)\n \t# Remember, each alternative MUST END IN *, to match a version number.\n \t\t;;\n \t-qnx*)\n@@ -1531,6 +1549,8 @@ case $os in\n \t\t;;\n \t-nacl*)\n \t\t;;\n+\t-ios)\n+\t\t;;\n \t-none)\n \t\t;;\n \t*)\n@@ -1626,6 +1646,9 @@ case $basic_machine in\n \tsparc-* | *-sun)\n \t\tos=-sunos4.1.1\n \t\t;;\n+\tpru-*)\n+\t\tos=-elf\n+\t\t;;\n \t*-be)\n \t\tos=-beos\n \t\t;;"
      },
      {
        "sha": "15e404e42dcf372e8d75f9c3945cf4bad9a21837",
        "filename": "depends/funcs.mk",
        "status": "modified",
        "additions": 11,
        "deletions": 7,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/funcs.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/funcs.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/funcs.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -19,15 +19,19 @@ define int_get_all_dependencies\n $(sort $(foreach dep,$(2),$(2) $(call int_get_all_dependencies,$(1),$($(dep)_dependencies))))\n endef\n \n-define fetch_file\n-(test -f $$($(1)_source_dir)/$(4) || \\\n-  ( mkdir -p $$($(1)_download_dir) && echo Fetching $(1)... && \\\n-  ( $(build_DOWNLOAD) \"$$($(1)_download_dir)/$(4).temp\" \"$(2)/$(3)\" || \\\n-    $(build_DOWNLOAD) \"$$($(1)_download_dir)/$(4).temp\" \"$(FALLBACK_DOWNLOAD_PATH)/$(3)\" ) && \\\n+define fetch_file_inner\n+    ( mkdir -p $$($(1)_download_dir) && echo Fetching $(3) from $(2) && \\\n+    $(build_DOWNLOAD) \"$$($(1)_download_dir)/$(4).temp\" \"$(2)/$(3)\" && \\\n     echo \"$(5)  $$($(1)_download_dir)/$(4).temp\" > $$($(1)_download_dir)/.$(4).hash && \\\n     $(build_SHA256SUM) -c $$($(1)_download_dir)/.$(4).hash && \\\n     mv $$($(1)_download_dir)/$(4).temp $$($(1)_source_dir)/$(4) && \\\n-    rm -rf $$($(1)_download_dir) ))\n+    rm -rf $$($(1)_download_dir) )\n+endef\n+\n+define fetch_file\n+    ( test -f $$($(1)_source_dir)/$(4) || \\\n+    ( $(call fetch_file_inner,$(1),$(2),$(3),$(4),$(5)) || \\\n+      $(call fetch_file_inner,$(1),$(FALLBACK_DOWNLOAD_PATH),$(3),$(4),$(5))))\n endef\n \n define int_get_build_recipe_hash\n@@ -39,7 +43,7 @@ define int_get_build_id\n $(eval $(1)_dependencies += $($(1)_$(host_arch)_$(host_os)_dependencies) $($(1)_$(host_os)_dependencies))\n $(eval $(1)_all_dependencies:=$(call int_get_all_dependencies,$(1),$($($(1)_type)_native_toolchain) $($(1)_dependencies)))\n $(foreach dep,$($(1)_all_dependencies),$(eval $(1)_build_id_deps+=$(dep)-$($(dep)_version)-$($(dep)_recipe_hash)))\n-$(eval $(1)_build_id_long:=$(1)-$($(1)_version)-$($(1)_recipe_hash)-$(release_type) $($(1)_build_id_deps))\n+$(eval $(1)_build_id_long:=$(1)-$($(1)_version)-$($(1)_recipe_hash)-$(release_type) $($(1)_build_id_deps) $($($(1)_type)_id_string))\n $(eval $(1)_build_id:=$(shell echo -n \"$($(1)_build_id_long)\" | $(build_SHA256SUM) | cut -c-$(HASH_LENGTH)))\n final_build_id_long+=$($(package)_build_id_long)\n "
      },
      {
        "sha": "4e58bec74e395b108c965843d05dd957bf7d5f60",
        "filename": "depends/hosts/darwin.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/hosts/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/hosts/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/darwin.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,9 +1,9 @@\n-OSX_MIN_VERSION=10.7\n-OSX_SDK_VERSION=10.9\n+OSX_MIN_VERSION=10.8\n+OSX_SDK_VERSION=10.11\n OSX_SDK=$(SDK_PATH)/MacOSX$(OSX_SDK_VERSION).sdk\n-LD64_VERSION=241.9\n+LD64_VERSION=253.9\n darwin_CC=clang -target $(host) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(OSX_SDK) -mlinker-version=$(LD64_VERSION)\n-darwin_CXX=clang++ -target $(host) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(OSX_SDK) -mlinker-version=$(LD64_VERSION)\n+darwin_CXX=clang++ -target $(host) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(OSX_SDK) -mlinker-version=$(LD64_VERSION) -stdlib=libc++\n \n darwin_CFLAGS=-pipe\n darwin_CXXFLAGS=$(darwin_CFLAGS)"
      },
      {
        "sha": "6c9876c2c7c7c0d884f49dd00de58b5a12d42a31",
        "filename": "depends/packages/bdb.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/bdb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/bdb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/bdb.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -9,10 +9,13 @@ define $(package)_set_vars\n $(package)_config_opts=--disable-shared --enable-cxx --disable-replication\n $(package)_config_opts_mingw32=--enable-mingw\n $(package)_config_opts_linux=--with-pic\n+$(package)_cxxflags=-std=c++11\n endef\n \n define $(package)_preprocess_cmds\n-  sed -i.old 's/__atomic_compare_exchange/__atomic_compare_exchange_db/' dbinc/atomic.h\n+  sed -i.old 's/__atomic_compare_exchange/__atomic_compare_exchange_db/' dbinc/atomic.h && \\\n+  sed -i.old 's/atomic_init/atomic_init_db/' dbinc/atomic.h mp/mp_region.c mp/mp_mvcc.c mp/mp_fget.c mutex/mut_method.c mutex/mut_tas.c && \\\n+  cp -f $(BASEDIR)/config.guess $(BASEDIR)/config.sub dist\n endef\n \n define $(package)_config_cmds"
      },
      {
        "sha": "bf773ccd147d43228815200029dbddd9920fa09d",
        "filename": "depends/packages/boost.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,8 +1,8 @@\n package=boost\n-$(package)_version=1_58_0\n-$(package)_download_path=http://sourceforge.net/projects/boost/files/boost/1.58.0\n+$(package)_version=1_64_0\n+$(package)_download_path=https://dl.bintray.com/boostorg/release/1.64.0/source/\n $(package)_file_name=$(package)_$($(package)_version).tar.bz2\n-$(package)_sha256_hash=fdfc204fc33ec79c99b9a74944c3e54bd78be4f7f15e260c0e2700a36dc7d3e5\n+$(package)_sha256_hash=7bcc5caace97baa948931d712ea5f37038dbb1c5d89b43ad4def4ed7cb683332\n \n define $(package)_set_vars\n $(package)_config_opts_release=variant=release\n@@ -20,7 +20,7 @@ $(package)_archiver_$(host_os)=$($(package)_ar)\n $(package)_toolset_darwin=darwin\n $(package)_archiver_darwin=$($(package)_libtool)\n $(package)_config_libraries=chrono,filesystem,program_options,system,thread,test\n-$(package)_cxxflags=-fvisibility=hidden\n+$(package)_cxxflags=-std=c++11 -fvisibility=hidden\n $(package)_cxxflags_linux=-fPIC\n endef\n "
      },
      {
        "sha": "bbe03754099f53b6fe404876af8cbc68722fc216",
        "filename": "depends/packages/dbus.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/dbus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/dbus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/dbus.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,8 +1,8 @@\n package=dbus\n-$(package)_version=1.8.6\n-$(package)_download_path=http://dbus.freedesktop.org/releases/dbus\n+$(package)_version=1.10.18\n+$(package)_download_path=https://dbus.freedesktop.org/releases/dbus\n $(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=eded83ca007b719f32761e60fd8b9ffd0f5796a4caf455b01b5a5ef740ebd23f\n+$(package)_sha256_hash=6049ddd5f3f3e2618f615f1faeda0a115104423a7996b7aa73e2f36e38cc514a\n $(package)_dependencies=expat\n \n define $(package)_set_vars"
      },
      {
        "sha": "7f484724a49097b4ed403f16141ad1f2f2ec7b92",
        "filename": "depends/packages/expat.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/expat.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/expat.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/expat.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,8 +1,8 @@\n package=expat\n-$(package)_version=2.1.0\n-$(package)_download_path=http://sourceforge.net/projects/expat/files/expat/$($(package)_version)\n-$(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=823705472f816df21c8f6aa026dd162b280806838bb55b3432b0fb1fcca7eb86\n+$(package)_version=2.2.1\n+$(package)_download_path=https://downloads.sourceforge.net/project/expat/expat/$($(package)_version)\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=1868cadae4c82a018e361e2b2091de103cd820aaacb0d6cfa49bd2cd83978885\n \n define $(package)_set_vars\n $(package)_config_opts=--disable-static"
      },
      {
        "sha": "12695db4b9f781c9ce8aa9a62dab0ae36a0a1ce4",
        "filename": "depends/packages/fontconfig.mk",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/fontconfig.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/fontconfig.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/fontconfig.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,8 +1,8 @@\n package=fontconfig\n-$(package)_version=2.11.1\n+$(package)_version=2.12.1\n $(package)_download_path=http://www.freedesktop.org/software/fontconfig/release/\n $(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=dc62447533bca844463a3c3fd4083b57c90f18a70506e7a9f4936b5a1e516a99\n+$(package)_sha256_hash=b449a3e10c47e1d1c7a6ec6e2016cca73d3bd68fbbd4f0ae5cc6b573f7d6c7f3\n $(package)_dependencies=freetype expat\n \n define $(package)_set_vars\n@@ -13,7 +13,13 @@ define $(package)_config_cmds\n   $($(package)_autoconf)\n endef\n \n+# 2.12.1 uses CHAR_WIDTH which is reserved and clashes with some glibc versions, but newer versions of fontconfig\n+# have broken makefiles which needlessly attempt to re-generate headers with gperf.\n+# Instead, change all uses of CHAR_WIDTH, and disable the rule that forces header re-generation.\n+# This can be removed once the upstream build is fixed.\n define $(package)_build_cmds\n+  sed -i 's/CHAR_WIDTH/CHARWIDTH/g' fontconfig/fontconfig.h src/fcobjshash.gperf src/fcobjs.h src/fcobjshash.h && \\\n+  sed -i 's/fcobjshash.h: fcobjshash.gperf/fcobjshash.h:/' src/Makefile && \\\n   $(MAKE)\n endef\n "
      },
      {
        "sha": "76b025c463189870a0865d7b22a3ede02d839b79",
        "filename": "depends/packages/freetype.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/freetype.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/freetype.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/freetype.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,8 +1,8 @@\n package=freetype\n-$(package)_version=2.5.3\n-$(package)_download_path=http://downloads.sourceforge.net/$(package)\n+$(package)_version=2.7.1\n+$(package)_download_path=http://download.savannah.gnu.org/releases/$(package)\n $(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=c0848b29d52ef3ca27ad92e08351f023c5e24ce8cea7d8fe69fc96358e65f75e\n+$(package)_sha256_hash=3a3bb2c4e15ffb433f2032f50a5b5a92558206822e22bfe8cbe339af4aa82f88\n \n define $(package)_set_vars\n   $(package)_config_opts=--without-zlib --without-png --disable-static"
      },
      {
        "sha": "5f622f8e6e80694386fef45917b84b97ee1d2223",
        "filename": "depends/packages/libevent.mk",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,16 +1,15 @@\n package=libevent\n-$(package)_version=2.0.22\n-$(package)_download_path=https://github.com/libevent/libevent/releases/download/release-2.0.22-stable\n-$(package)_file_name=$(package)-$($(package)_version)-stable.tar.gz\n-$(package)_sha256_hash=71c2c49f0adadacfdbe6332a372c38cf9c8b7895bb73dabeaa53cdcc1d4e1fa3\n-$(package)_patches=reuseaddr.patch\n+$(package)_version=2.1.8-stable\n+$(package)_download_path=https://github.com/libevent/libevent/archive/\n+$(package)_file_name=release-$($(package)_version).tar.gz\n+$(package)_sha256_hash=316ddb401745ac5d222d7c529ef1eada12f58f6376a66c1118eee803cb70f83d\n \n define $(package)_preprocess_cmds\n-  patch -p1 < $($(package)_patch_dir)/reuseaddr.patch\n+  ./autogen.sh\n endef\n \n define $(package)_set_vars\n-  $(package)_config_opts=--disable-shared --disable-openssl --disable-libevent-regress\n+  $(package)_config_opts=--disable-shared --disable-openssl --disable-libevent-regress --disable-samples\n   $(package)_config_opts_release=--disable-debug-mode\n   $(package)_config_opts_linux=--with-pic\n endef"
      },
      {
        "sha": "1bb8cb5d2664746b943756a9efa0db8d8a9d385d",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,12 +1,12 @@\n package=miniupnpc\n-$(package)_version=1.9.20151008\n+$(package)_version=2.0.20170509\n $(package)_download_path=http://miniupnp.free.fr/files\n $(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=e444ac3b587ce82709c4d0cfca1fe71f44f9fc433e9f946b12b9e1bfe667a633\n+$(package)_sha256_hash=d3c368627f5cdfb66d3ebd64ca39ba54d6ff14a61966dbecb8dd296b7039f16a\n \n define $(package)_set_vars\n $(package)_build_opts=CC=\"$($(package)_cc)\"\n-$(package)_build_opts_darwin=OS=Darwin\n+$(package)_build_opts_darwin=OS=Darwin LIBTOOL=\"$($(package)_libtool)\"\n $(package)_build_opts_mingw32=-f Makefile.mingw\n $(package)_build_env+=CFLAGS=\"$($(package)_cflags) $($(package)_cppflags)\" AR=\"$($(package)_ar)\"\n endef"
      },
      {
        "sha": "3c6e8900f66465976a26b77a14683d8b9859c63e",
        "filename": "depends/packages/native_biplist.mk",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/native_biplist.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/native_biplist.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_biplist.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,20 @@\n+package=native_biplist\n+$(package)_version=0.9\n+$(package)_download_path=https://pypi.python.org/packages/source/b/biplist\n+$(package)_file_name=biplist-$($(package)_version).tar.gz\n+$(package)_sha256_hash=b57cadfd26e4754efdf89e9e37de87885f9b5c847b2615688ca04adfaf6ca604\n+$(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n+$(package)_patches=sorted_list.patch\n+\n+define $(package)_preprocess_cmds\n+  patch -p1 < $($(package)_patch_dir)/sorted_list.patch\n+endef\n+\n+define $(package)_build_cmds\n+    python setup.py build\n+endef\n+\n+define $(package)_stage_cmds\n+    mkdir -p $($(package)_install_libdir) && \\\n+    python setup.py install --root=$($(package)_staging_dir) --prefix=$(build_prefix) --install-lib=$($(package)_install_libdir)\n+endef"
      },
      {
        "sha": "966804ce8bbf677fae5446219420532b86fdb800",
        "filename": "depends/packages/native_ccache.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/native_ccache.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/native_ccache.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ccache.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,8 +1,8 @@\n package=native_ccache\n-$(package)_version=3.2.3\n-$(package)_download_path=http://samba.org/ftp/ccache\n+$(package)_version=3.3.4\n+$(package)_download_path=https://samba.org/ftp/ccache\n $(package)_file_name=ccache-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=b07165d4949d107d17f2f84b90b52953617bf1abbf249d5cc20636f43337c98c\n+$(package)_sha256_hash=fa9d7f38367431bc86b19ad107d709ca7ecf1574fdacca01698bdf0a47cd8567\n \n define $(package)_set_vars\n $(package)_config_opts="
      },
      {
        "sha": "44d238cc4c2a686231c167942c63ae4ec08154c1",
        "filename": "depends/packages/native_cctools.mk",
        "status": "modified",
        "additions": 17,
        "deletions": 10,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,14 +1,14 @@\n package=native_cctools\n-$(package)_version=ee31ae567931c426136c94aad457c7b51d844beb\n+$(package)_version=807d6fd1be5d2224872e381870c0a75387fe05e6\n $(package)_download_path=https://github.com/theuni/cctools-port/archive\n $(package)_file_name=$($(package)_version).tar.gz\n-$(package)_sha256_hash=ef107e6ab1b3994cb22e14f4f5c59ea0c0b5a988e6b21d42ed9616b018bbcbf9\n+$(package)_sha256_hash=a09c9ba4684670a0375e42d9d67e7f12c1f62581a27f28f7c825d6d7032ccc6a\n $(package)_build_subdir=cctools\n-$(package)_clang_version=3.3\n+$(package)_clang_version=3.7.1\n $(package)_clang_download_path=http://llvm.org/releases/$($(package)_clang_version)\n-$(package)_clang_download_file=clang+llvm-$($(package)_clang_version)-amd64-Ubuntu-12.04.2.tar.gz\n-$(package)_clang_file_name=clang-llvm-$($(package)_clang_version)-amd64-Ubuntu-12.04.2.tar.gz\n-$(package)_clang_sha256_hash=60d8f69f032d62ef61bf527857ebb933741ec3352d4d328c5516aa520662dab7\n+$(package)_clang_download_file=clang+llvm-$($(package)_clang_version)-x86_64-linux-gnu-ubuntu-14.04.tar.xz\n+$(package)_clang_file_name=clang-llvm-$($(package)_clang_version)-x86_64-linux-gnu-ubuntu-14.04.tar.xz\n+$(package)_clang_sha256_hash=99b28a6b48e793705228a390471991386daa33a9717cd9ca007fcdde69608fd9\n $(package)_extra_sources=$($(package)_clang_file_name)\n \n define $(package)_fetch_cmds\n@@ -17,23 +17,29 @@ $(call fetch_file,$(package),$($(package)_clang_download_path),$($(package)_clan\n endef\n \n define $(package)_extract_cmds\n+  mkdir -p $($(package)_extract_dir) && \\\n+  echo \"$($(package)_sha256_hash)  $($(package)_source)\" > $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  echo \"$($(package)_clang_sha256_hash)  $($(package)_source_dir)/$($(package)_clang_file_name)\" >> $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  $(build_SHA256SUM) -c $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n   mkdir -p toolchain/bin toolchain/lib/clang/3.5/include && \\\n   tar --strip-components=1 -C toolchain -xf $($(package)_source_dir)/$($(package)_clang_file_name) && \\\n+  rm -f toolchain/lib/libc++abi.so* && \\\n   echo \"#!/bin/sh\" > toolchain/bin/$(host)-dsymutil && \\\n   echo \"exit 0\" >> toolchain/bin/$(host)-dsymutil && \\\n   chmod +x toolchain/bin/$(host)-dsymutil && \\\n   tar --strip-components=1 -xf $($(package)_source)\n endef\n \n define $(package)_set_vars\n-$(package)_config_opts=--target=$(host) --disable-libuuid\n+$(package)_config_opts=--target=$(host) --disable-lto-support\n $(package)_ldflags+=-Wl,-rpath=\\\\$$$$$$$$\\$$$$$$$$ORIGIN/../lib\n $(package)_cc=$($(package)_extract_dir)/toolchain/bin/clang\n $(package)_cxx=$($(package)_extract_dir)/toolchain/bin/clang++\n endef\n \n define $(package)_preprocess_cmds\n-  cd $($(package)_build_subdir); ./autogen.sh\n+  cd $($(package)_build_subdir); ./autogen.sh && \\\n+  sed -i.old \"/define HAVE_PTHREADS/d\" ld64/src/ld/InputFiles.h\n endef\n \n define $(package)_config_cmds\n@@ -49,10 +55,11 @@ define $(package)_stage_cmds\n   cd $($(package)_extract_dir)/toolchain && \\\n   mkdir -p $($(package)_staging_prefix_dir)/lib/clang/$($(package)_clang_version)/include && \\\n   mkdir -p $($(package)_staging_prefix_dir)/bin $($(package)_staging_prefix_dir)/include && \\\n-  cp -P bin/clang bin/clang++ $($(package)_staging_prefix_dir)/bin/ &&\\\n+  cp bin/clang $($(package)_staging_prefix_dir)/bin/ &&\\\n+  cp -P bin/clang++ $($(package)_staging_prefix_dir)/bin/ &&\\\n   cp lib/libLTO.so $($(package)_staging_prefix_dir)/lib/ && \\\n   cp -rf lib/clang/$($(package)_clang_version)/include/* $($(package)_staging_prefix_dir)/lib/clang/$($(package)_clang_version)/include/ && \\\n-  cp bin/$(host)-dsymutil $($(package)_staging_prefix_dir)/bin && \\\n+  cp bin/llvm-dsymutil $($(package)_staging_prefix_dir)/bin/$(host)-dsymutil && \\\n   if `test -d include/c++/`; then cp -rf include/c++/ $($(package)_staging_prefix_dir)/include/; fi && \\\n   if `test -d lib/c++/`; then cp -rf lib/c++/ $($(package)_staging_prefix_dir)/lib/; fi\n endef"
      },
      {
        "sha": "e0ae0cec700e921cdfc6c4bdc9760467655dcb4d",
        "filename": "depends/packages/native_comparisontool.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/depends/packages/native_comparisontool.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/depends/packages/native_comparisontool.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_comparisontool.mk?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,21 +0,0 @@\n-package=native_comparisontool\n-$(package)_version=8c6666f\n-$(package)_download_path=https://github.com/theuni/bitcoind-comparisontool/raw/master\n-$(package)_file_name=pull-tests-$($(package)_version).jar\n-$(package)_sha256_hash=a865332b3827abcde684ab79f5f43c083b0b6a4c97ff5508c79f29fee24f11cd\n-$(package)_install_dirname=BitcoindComparisonTool_jar\n-$(package)_install_filename=BitcoindComparisonTool.jar\n-\n-define $(package)_extract_cmds\n-endef\n-\n-define $(package)_configure_cmds\n-endef\n-\n-define $(package)_build_cmds\n-endef\n-\n-define $(package)_stage_cmds\n-  mkdir -p $($(package)_staging_prefix_dir)/share/$($(package)_install_dirname) && \\\n-  cp $($(package)_source) $($(package)_staging_prefix_dir)/share/$($(package)_install_dirname)/$($(package)_install_filename)\n-endef"
      },
      {
        "sha": "49f5829ac1c0264acd6c47a9c4ad8006b683807a",
        "filename": "depends/packages/native_ds_store.mk",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/native_ds_store.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/native_ds_store.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ds_store.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,17 @@\n+package=native_ds_store\n+$(package)_version=1.1.0\n+$(package)_download_path=https://bitbucket.org/al45tair/ds_store/get\n+$(package)_download_file=v$($(package)_version).tar.bz2\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=921596764d71d1bbd3297a90ef6d286f718794d667e4f81d91d14053525d64c1\n+$(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n+$(package)_dependencies=native_biplist\n+\n+define $(package)_build_cmds\n+    python setup.py build\n+endef\n+\n+define $(package)_stage_cmds\n+    mkdir -p $($(package)_install_libdir) && \\\n+    python setup.py install --root=$($(package)_staging_dir) --prefix=$(build_prefix) --install-lib=$($(package)_install_libdir)\n+endef"
      },
      {
        "sha": "85a8a402bf92cefb0b406a6d8ddefa87984157cc",
        "filename": "depends/packages/native_mac_alias.mk",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/native_mac_alias.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/native_mac_alias.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_mac_alias.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,21 @@\n+package=native_mac_alias\n+$(package)_version=1.1.0\n+$(package)_download_path=https://bitbucket.org/al45tair/mac_alias/get\n+$(package)_download_file=v$($(package)_version).tar.bz2\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=87ad827e66790028361e43fc754f68ed041a9bdb214cca03c853f079b04fb120\n+$(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n+$(package)_patches=python3.patch\n+\n+define $(package)_preprocess_cmds\n+  patch -p1 < $($(package)_patch_dir)/python3.patch\n+endef\n+\n+define $(package)_build_cmds\n+    python setup.py build\n+endef\n+\n+define $(package)_stage_cmds\n+    mkdir -p $($(package)_install_libdir) && \\\n+    python setup.py install --root=$($(package)_staging_dir) --prefix=$(build_prefix) --install-lib=$($(package)_install_libdir)\n+endef"
      },
      {
        "sha": "5ee9f17a63235a9d68f74389566f1f257c182d3c",
        "filename": "depends/packages/openssl.mk",
        "status": "modified",
        "additions": 36,
        "deletions": 3,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/openssl.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/openssl.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/openssl.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -6,9 +6,42 @@ $(package)_sha256_hash=8f9faeaebad088e772f4ef5e38252d472be4d878c6b3a2718c10a4fce\n \n define $(package)_set_vars\n $(package)_config_env=AR=\"$($(package)_ar)\" RANLIB=\"$($(package)_ranlib)\" CC=\"$($(package)_cc)\"\n-$(package)_config_opts=--prefix=$(host_prefix) --openssldir=$(host_prefix)/etc/openssl no-zlib no-shared no-dso\n-$(package)_config_opts+=no-krb5 no-camellia no-capieng no-cast no-cms no-dtls1 no-gost no-gmp no-heartbeats no-idea no-jpake no-md2\n-$(package)_config_opts+=no-mdc2 no-rc5 no-rdrand no-rfc3779 no-rsax no-sctp no-seed no-sha0 no-static_engine no-whirlpool no-rc2 no-rc4 no-ssl2 no-ssl3\n+$(package)_config_opts=--prefix=$(host_prefix) --openssldir=$(host_prefix)/etc/openssl\n+$(package)_config_opts+=no-camellia\n+$(package)_config_opts+=no-capieng\n+$(package)_config_opts+=no-cast\n+$(package)_config_opts+=no-comp\n+$(package)_config_opts+=no-dso\n+$(package)_config_opts+=no-dtls1\n+$(package)_config_opts+=no-ec_nistp_64_gcc_128\n+$(package)_config_opts+=no-gost\n+$(package)_config_opts+=no-gmp\n+$(package)_config_opts+=no-heartbeats\n+$(package)_config_opts+=no-idea\n+$(package)_config_opts+=no-jpake\n+$(package)_config_opts+=no-krb5\n+$(package)_config_opts+=no-libunbound\n+$(package)_config_opts+=no-md2\n+$(package)_config_opts+=no-mdc2\n+$(package)_config_opts+=no-rc4\n+$(package)_config_opts+=no-rc5\n+$(package)_config_opts+=no-rdrand\n+$(package)_config_opts+=no-rfc3779\n+$(package)_config_opts+=no-rsax\n+$(package)_config_opts+=no-sctp\n+$(package)_config_opts+=no-seed\n+$(package)_config_opts+=no-sha0\n+$(package)_config_opts+=no-shared\n+$(package)_config_opts+=no-ssl-trace\n+$(package)_config_opts+=no-ssl2\n+$(package)_config_opts+=no-ssl3\n+$(package)_config_opts+=no-static_engine\n+$(package)_config_opts+=no-store\n+$(package)_config_opts+=no-unit-test\n+$(package)_config_opts+=no-weak-ssl-ciphers\n+$(package)_config_opts+=no-whirlpool\n+$(package)_config_opts+=no-zlib\n+$(package)_config_opts+=no-zlib-dynamic\n $(package)_config_opts+=$($(package)_cflags) $($(package)_cppflags)\n $(package)_config_opts_linux=-fPIC -Wa,--noexecstack\n $(package)_config_opts_x86_64_linux=linux-x86_64"
      },
      {
        "sha": "088723ebd0d56d6bc2ca2eba20597d52e142ac02",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,20 +1,21 @@\n-packages:=boost openssl libevent\n-darwin_packages:=zeromq\n-linux_packages:=zeromq\n-native_packages := native_ccache native_comparisontool\n+packages:=boost openssl libevent zeromq\n+native_packages := native_ccache\n \n qt_native_packages = native_protobuf\n-qt_packages = qrencode protobuf\n+qt_packages = qrencode protobuf zlib\n+\n+qt_x86_64_linux_packages:=qt expat dbus libxcb xcb_proto libXau xproto freetype fontconfig libX11 xextproto libXext xtrans\n+qt_i686_linux_packages:=$(qt_x86_64_linux_packages)\n \n-qt_linux_packages= qt expat dbus libxcb xcb_proto libXau xproto freetype fontconfig libX11 xextproto libXext xtrans\n qt_darwin_packages=qt\n qt_mingw32_packages=qt\n \n-\n wallet_packages=bdb\n \n upnp_packages=miniupnpc\n \n+darwin_native_packages = native_biplist native_ds_store native_mac_alias\n+\n ifneq ($(build_os),darwin)\n-darwin_native_packages=native_cctools native_cdrkit native_libdmg-hfsplus\n+darwin_native_packages += native_cctools native_cdrkit native_libdmg-hfsplus\n endif"
      },
      {
        "sha": "54d3fd924519be2ed612830e24c3baf25629c7fa",
        "filename": "depends/packages/protobuf.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/protobuf.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -4,6 +4,7 @@ $(package)_download_path=$(native_$(package)_download_path)\n $(package)_file_name=$(native_$(package)_file_name)\n $(package)_sha256_hash=$(native_$(package)_sha256_hash)\n $(package)_dependencies=native_$(package)\n+$(package)_cxxflags=-std=c++11\n \n define $(package)_set_vars\n   $(package)_config_opts=--disable-shared --with-protoc=$(build_prefix)/bin/protoc"
      },
      {
        "sha": "44fdf1c2952b6188b25ddfe56d2b4f1c71d1c07f",
        "filename": "depends/packages/qrencode.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/qrencode.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/qrencode.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qrencode.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,7 +1,7 @@\n package=qrencode\n $(package)_version=3.4.4\n $(package)_download_path=https://fukuchi.org/works/qrencode/\n-$(package)_file_name=qrencode-$(qrencode_version).tar.bz2\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n $(package)_sha256_hash=efe5188b1ddbcbf98763b819b146be6a90481aac30cfc8d858ab78a19cde1fa5\n \n define $(package)_set_vars"
      },
      {
        "sha": "bbfdb766ed694025c0124140c00b3044ca362d02",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 63,
        "deletions": 52,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,42 +1,55 @@\n PACKAGE=qt\n-$(package)_version=5.5.0\n-$(package)_download_path=http://download.qt.io/official_releases/qt/5.5/$($(package)_version)/submodules\n+$(package)_version=5.7.1\n+$(package)_download_path=http://download.qt.io/official_releases/qt/5.7/$($(package)_version)/submodules\n $(package)_suffix=opensource-src-$($(package)_version).tar.gz\n $(package)_file_name=qtbase-$($(package)_suffix)\n-$(package)_sha256_hash=7e82b1318f88e56a2a9376e069aa608d4fd96b48cb0e1b880ae658b0a1af0561\n-$(package)_dependencies=openssl\n-$(package)_linux_dependencies=freetype fontconfig dbus libxcb libX11 xproto libXext\n+$(package)_sha256_hash=95f83e532d23b3ddbde7973f380ecae1bac13230340557276f75f2e37984e410\n+$(package)_dependencies=openssl zlib\n+$(package)_linux_dependencies=freetype fontconfig libxcb libX11 xproto libXext\n $(package)_build_subdir=qtbase\n $(package)_qt_libs=corelib network widgets gui plugins testlib\n-$(package)_patches=mac-qmake.conf fix-xcb-include-order.patch mingw-uuidof.patch pidlist_absolute.patch\n+$(package)_patches=mac-qmake.conf mingw-uuidof.patch pidlist_absolute.patch fix-xcb-include-order.patch fix_qt_pkgconfig.patch\n \n $(package)_qttranslations_file_name=qttranslations-$($(package)_suffix)\n-$(package)_qttranslations_sha256_hash=c4bd6db6e426965c6f8824c54e81f68bbd61e2bae1bcadc328c6e81c45902a0d\n+$(package)_qttranslations_sha256_hash=3a15aebd523c6d89fb97b2d3df866c94149653a26d27a00aac9b6d3020bc5a1d\n+\n \n $(package)_qttools_file_name=qttools-$($(package)_suffix)\n-$(package)_qttools_sha256_hash=d9e06bd19ecc86afba5e95d45a906d1bc1ad579aa70001e36143c1aaf695bdd6\n+$(package)_qttools_sha256_hash=22d67de915cb8cd93e16fdd38fa006224ad9170bd217c2be1e53045a8dd02f0f\n \n $(package)_extra_sources  = $($(package)_qttranslations_file_name)\n $(package)_extra_sources += $($(package)_qttools_file_name)\n \n define $(package)_set_vars\n $(package)_config_opts_release = -release\n-$(package)_config_opts_debug   = -debug\n-$(package)_config_opts += -opensource -confirm-license\n+$(package)_config_opts_debug = -debug\n+$(package)_config_opts += -bindir $(build_prefix)/bin\n+$(package)_config_opts += -c++std c++11\n+$(package)_config_opts += -confirm-license\n+$(package)_config_opts += -dbus-runtime\n+$(package)_config_opts += -hostprefix $(build_prefix)\n+$(package)_config_opts += -no-alsa\n $(package)_config_opts += -no-audio-backend\n+$(package)_config_opts += -no-cups\n+$(package)_config_opts += -no-egl\n+$(package)_config_opts += -no-eglfs\n+$(package)_config_opts += -no-feature-style-windowsmobile\n+$(package)_config_opts += -no-feature-style-windowsce\n+$(package)_config_opts += -no-freetype\n+$(package)_config_opts += -no-gif\n $(package)_config_opts += -no-glib\n+$(package)_config_opts += -no-gstreamer\n $(package)_config_opts += -no-icu\n-$(package)_config_opts += -no-cups\n $(package)_config_opts += -no-iconv\n-$(package)_config_opts += -no-gif\n-$(package)_config_opts += -no-freetype\n-$(package)_config_opts += -no-nis\n-$(package)_config_opts += -no-pch\n+$(package)_config_opts += -no-kms\n+$(package)_config_opts += -no-linuxfb\n+$(package)_config_opts += -no-libudev\n+$(package)_config_opts += -no-mitshm\n+$(package)_config_opts += -no-mtdev\n+$(package)_config_opts += -no-pulseaudio\n+$(package)_config_opts += -no-openvg\n+$(package)_config_opts += -no-reduce-relocations\n $(package)_config_opts += -no-qml-debug\n-$(package)_config_opts += -nomake examples\n-$(package)_config_opts += -nomake tests\n-$(package)_config_opts += -no-feature-style-windowsmobile\n-$(package)_config_opts += -no-feature-style-windowsce\n $(package)_config_opts += -no-sql-db2\n $(package)_config_opts += -no-sql-ibase\n $(package)_config_opts += -no-sql-oci\n@@ -46,36 +59,27 @@ $(package)_config_opts += -no-sql-odbc\n $(package)_config_opts += -no-sql-psql\n $(package)_config_opts += -no-sql-sqlite\n $(package)_config_opts += -no-sql-sqlite2\n-$(package)_config_opts += -prefix $(host_prefix)\n-$(package)_config_opts += -hostprefix $(build_prefix)\n-$(package)_config_opts += -bindir $(build_prefix)/bin\n-$(package)_config_opts += -no-c++11\n+$(package)_config_opts += -no-use-gold-linker\n+$(package)_config_opts += -no-xinput2\n+$(package)_config_opts += -no-xrender\n+$(package)_config_opts += -nomake examples\n+$(package)_config_opts += -nomake tests\n+$(package)_config_opts += -opensource\n $(package)_config_opts += -openssl-linked\n-$(package)_config_opts += -v\n-$(package)_config_opts += -static\n-$(package)_config_opts += -silent\n+$(package)_config_opts += -optimized-qmake\n+$(package)_config_opts += -pch\n $(package)_config_opts += -pkg-config\n+$(package)_config_opts += -prefix $(host_prefix)\n $(package)_config_opts += -qt-libpng\n $(package)_config_opts += -qt-libjpeg\n-$(package)_config_opts += -qt-zlib\n $(package)_config_opts += -qt-pcre\n-$(package)_config_opts += -no-pulseaudio\n-$(package)_config_opts += -no-openvg\n-$(package)_config_opts += -no-xrender\n-$(package)_config_opts += -no-alsa\n-$(package)_config_opts += -no-mtdev\n-$(package)_config_opts += -no-gstreamer\n-$(package)_config_opts += -no-mitshm\n-$(package)_config_opts += -no-kms\n-$(package)_config_opts += -no-reduce-relocations\n-$(package)_config_opts += -no-egl\n-$(package)_config_opts += -no-eglfs\n-$(package)_config_opts += -no-linuxfb\n-$(package)_config_opts += -no-xinput2\n-$(package)_config_opts += -no-libudev\n-$(package)_config_opts += -no-use-gold-linker\n+$(package)_config_opts += -system-zlib\n $(package)_config_opts += -reduce-exports\n-$(package)_config_opts += -optimized-qmake\n+$(package)_config_opts += -static\n+$(package)_config_opts += -silent\n+$(package)_config_opts += -v\n+$(package)_config_opts += -no-feature-printer\n+$(package)_config_opts += -no-feature-printdialog\n \n ifneq ($(build_os),darwin)\n $(package)_config_opts_darwin = -xplatform macx-clang-linux\n@@ -108,8 +112,8 @@ endef\n define $(package)_extract_cmds\n   mkdir -p $($(package)_extract_dir) && \\\n   echo \"$($(package)_sha256_hash)  $($(package)_source)\" > $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n-  echo \"$($(package)_qttranslations_sha256_hash)  $($(package)_source_dir)/$($(package)_qttranslations_file_name)\" > $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n-  echo \"$($(package)_qttools_sha256_hash)  $($(package)_source_dir)/$($(package)_qttools_file_name)\" > $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  echo \"$($(package)_qttranslations_sha256_hash)  $($(package)_source_dir)/$($(package)_qttranslations_file_name)\" >> $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  echo \"$($(package)_qttools_sha256_hash)  $($(package)_source_dir)/$($(package)_qttools_file_name)\" >> $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n   $(build_SHA256SUM) -c $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n   mkdir qtbase && \\\n   tar --strip-components=1 -xf $($(package)_source) -C qtbase && \\\n@@ -119,32 +123,39 @@ define $(package)_extract_cmds\n   tar --strip-components=1 -xf $($(package)_source_dir)/$($(package)_qttools_file_name) -C qttools\n endef\n \n+\n define $(package)_preprocess_cmds\n   sed -i.old \"s|updateqm.commands = \\$$$$\\$$$$LRELEASE|updateqm.commands = $($(package)_extract_dir)/qttools/bin/lrelease|\" qttranslations/translations/translations.pro && \\\n+  sed -i.old \"/updateqm.depends =/d\" qttranslations/translations/translations.pro && \\\n   sed -i.old \"s/src_plugins.depends = src_sql src_xml src_network/src_plugins.depends = src_xml src_network/\" qtbase/src/src.pro && \\\n   sed -i.old \"s|X11/extensions/XIproto.h|X11/X.h|\" qtbase/src/plugins/platforms/xcb/qxcbxsettings.cpp && \\\n   sed -i.old 's/if \\[ \"$$$$XPLATFORM_MAC\" = \"yes\" \\]; then xspecvals=$$$$(macSDKify/if \\[ \"$$$$BUILD_ON_MAC\" = \"yes\" \\]; then xspecvals=$$$$(macSDKify/' qtbase/configure && \\\n+  sed -i.old 's/CGEventCreateMouseEvent(0, kCGEventMouseMoved, pos, 0)/CGEventCreateMouseEvent(0, kCGEventMouseMoved, pos, kCGMouseButtonLeft)/' qtbase/src/plugins/platforms/cocoa/qcocoacursor.mm && \\\n   mkdir -p qtbase/mkspecs/macx-clang-linux &&\\\n   cp -f qtbase/mkspecs/macx-clang/Info.plist.lib qtbase/mkspecs/macx-clang-linux/ &&\\\n   cp -f qtbase/mkspecs/macx-clang/Info.plist.app qtbase/mkspecs/macx-clang-linux/ &&\\\n   cp -f qtbase/mkspecs/macx-clang/qplatformdefs.h qtbase/mkspecs/macx-clang-linux/ &&\\\n   cp -f $($(package)_patch_dir)/mac-qmake.conf qtbase/mkspecs/macx-clang-linux/qmake.conf && \\\n-  patch -p1 < $($(package)_patch_dir)/fix-xcb-include-order.patch && \\\n   patch -p1 < $($(package)_patch_dir)/mingw-uuidof.patch && \\\n   patch -p1 < $($(package)_patch_dir)/pidlist_absolute.patch && \\\n-  echo \"QMAKE_CFLAGS     += $($(package)_cflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n-  echo \"QMAKE_CXXFLAGS   += $($(package)_cxxflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n-  echo \"QMAKE_LFLAGS     += $($(package)_ldflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n-  sed -i.old \"s|QMAKE_CFLAGS            = |QMAKE_CFLAGS            = $($(package)_cflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n-  sed -i.old \"s|QMAKE_LFLAGS            = |QMAKE_LFLAGS            = $($(package)_ldflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n-  sed -i.old \"s|QMAKE_CXXFLAGS          = |QMAKE_CXXFLAGS            = $($(package)_cxxflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf\n+  patch -p1 < $($(package)_patch_dir)/fix-xcb-include-order.patch && \\\n+  patch -p1 < $($(package)_patch_dir)/fix_qt_pkgconfig.patch && \\\n+  echo \"!host_build: QMAKE_CFLAGS     += $($(package)_cflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n+  echo \"!host_build: QMAKE_CXXFLAGS   += $($(package)_cxxflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n+  echo \"!host_build: QMAKE_LFLAGS     += $($(package)_ldflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n+  sed -i.old \"s|QMAKE_CFLAGS            = |!host_build: QMAKE_CFLAGS            = $($(package)_cflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n+  sed -i.old \"s|QMAKE_LFLAGS            = |!host_build: QMAKE_LFLAGS            = $($(package)_ldflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n+  sed -i.old \"s|QMAKE_CXXFLAGS          = |!host_build: QMAKE_CXXFLAGS            = $($(package)_cxxflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf\n+\n endef\n \n define $(package)_config_cmds\n   export PKG_CONFIG_SYSROOT_DIR=/ && \\\n   export PKG_CONFIG_LIBDIR=$(host_prefix)/lib/pkgconfig && \\\n   export PKG_CONFIG_PATH=$(host_prefix)/share/pkgconfig  && \\\n   ./configure $($(package)_config_opts) && \\\n+  echo \"host_build: QT_CONFIG ~= s/system-zlib/zlib\" >> mkspecs/qconfig.pri && \\\n+  echo \"CONFIG += force_bootstrap\" >> mkspecs/qconfig.pri && \\\n   $(MAKE) sub-src-clean && \\\n   cd ../qttranslations && ../qtbase/bin/qmake qttranslations.pro -o Makefile && \\\n   cd translations && ../../qtbase/bin/qmake translations.pro -o Makefile && cd ../.. &&\\"
      },
      {
        "sha": "8fb30a5c4471cfe1b4204c4507a103d37ba5a067",
        "filename": "depends/packages/qt46.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 66,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/depends/packages/qt46.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/depends/packages/qt46.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt46.mk?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,66 +0,0 @@\n-PACKAGE=qt46\n-$(package)_version=4.6.4\n-$(package)_download_path=http://download.qt-project.org/archive/qt/4.6/\n-$(package)_file_name=qt-everywhere-opensource-src-$($(package)_version).tar.gz\n-$(package)_sha256_hash=9ad4d46c721b53a429ed5a2eecfd3c239a9ab566562f183f99d3125f1a234250\n-$(package)_dependencies=openssl freetype dbus libX11 xproto libXext libICE libSM\n-$(package)_patches=stlfix.patch \n-\n-define $(package)_set_vars\n-$(package)_config_opts  = -prefix $(host_prefix) -headerdir $(host_prefix)/include/qt4 -bindir $(build_prefix)/bin\n-$(package)_config_opts += -release -no-separate-debug-info -opensource -confirm-license\n-$(package)_config_opts += -stl -qt-zlib\n-\n-$(package)_config_opts += -nomake examples -nomake tests -nomake tools -nomake translations -nomake demos -nomake docs\n-$(package)_config_opts += -no-audio-backend -no-glib -no-nis -no-cups -no-iconv -no-gif -no-pch\n-$(package)_config_opts += -no-xkb -no-xrender -no-xrandr -no-xfixes -no-xcursor -no-xinerama -no-xsync -no-xinput -no-mitshm -no-xshape\n-$(package)_config_opts += -no-libtiff -no-fontconfig -openssl-linked\n-$(package)_config_opts += -no-sql-db2 -no-sql-ibase -no-sql-oci -no-sql-tds -no-sql-mysql\n-$(package)_config_opts += -no-sql-odbc -no-sql-psql -no-sql-sqlite -no-sql-sqlite2\n-$(package)_config_opts += -no-xmlpatterns -no-multimedia -no-phonon -no-scripttools -no-declarative\n-$(package)_config_opts += -no-phonon-backend -no-webkit -no-javascript-jit -no-script\n-$(package)_config_opts += -no-svg -no-libjpeg -no-libtiff -no-libpng -no-libmng -no-qt3support -no-opengl\n-\n-$(package)_config_opts_x86_64_linux  += -platform linux-g++-64\n-$(package)_config_opts_i686_linux  = -platform linux-g++-32\n-$(package)_build_env  = QT_RCC_TEST=1\n-endef\n-\n-define $(package)_preprocess_cmds\n-   sed -i.old \"s|/include /usr/include||\" config.tests/unix/freetype/freetype.pri && \\\n-   sed -i.old \"s|src_plugins.depends = src_gui src_sql src_svg|src_plugins.depends = src_gui src_sql|\" src/src.pro && \\\n-   sed -i.old \"s|\\.lower(|\\.toLower(|g\" src/network/ssl/qsslsocket_openssl.cpp && \\\n-   sed -i.old \"s|Key_BackSpace|Key_Backspace|\" src/gui/itemviews/qabstractitemview.cpp && \\\n-   sed -i.old \"s|/usr/X11R6/lib64|$(host_prefix)/lib|\" mkspecs/*/*.conf && \\\n-   sed -i.old \"s|/usr/X11R6/lib|$(host_prefix)/lib|\" mkspecs/*/*.conf && \\\n-   sed -i.old \"s|/usr/X11R6/include|$(host_prefix)/include|\" mkspecs/*/*.conf && \\\n-   sed -i.old \"s|QMAKE_LFLAGS_SHLIB\\t+= -shared|QMAKE_LFLAGS_SHLIB\\t+= -shared -Wl,--exclude-libs,ALL|\" mkspecs/common/g++.conf && \\\n-   sed -i.old \"/SSLv2_client_method/d\" src/network/ssl/qsslsocket_openssl.cpp src/network/ssl/qsslsocket_openssl_symbols.cpp && \\\n-   sed -i.old \"/SSLv2_server_method/d\" src/network/ssl/qsslsocket_openssl.cpp src/network/ssl/qsslsocket_openssl_symbols.cpp && \\\n-   patch -p1 < $($(package)_patch_dir)/stlfix.patch \n-endef\n-\n-define $(package)_config_cmds\n-  export PKG_CONFIG_SYSROOT_DIR=/ && \\\n-  export PKG_CONFIG_LIBDIR=$(host_prefix)/lib/pkgconfig && \\\n-  export PKG_CONFIG_PATH=$(host_prefix)/share/pkgconfig  && \\\n-  export CPATH=$(host_prefix)/include && \\\n-  OPENSSL_LIBS='-L$(host_prefix)/lib -lssl -lcrypto' ./configure $($(package)_config_opts) && \\\n-  cd tools/linguist/lrelease; ../../../bin/qmake  -o Makefile lrelease.pro\n-endef\n-\n-define $(package)_build_cmds\n-  export CPATH=$(host_prefix)/include && \\\n-  $(MAKE) -C src && \\\n-  $(MAKE) -C tools/linguist/lrelease\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) -C src INSTALL_ROOT=$($(package)_staging_dir) install && \\\n-  $(MAKE) -C tools/linguist/lrelease INSTALL_ROOT=$($(package)_staging_dir) install\n-endef\n-\n-define $(package)_postprocess_cmds\n-  rm -rf mkspecs/ lib/cmake/ lib/*.prl lib/*.la && \\\n-  find native/bin -type f -exec mv {} {}-qt4 \\;\n-endef"
      },
      {
        "sha": "01146c26f69bc426f351424bc2cdcfded19e0b65",
        "filename": "depends/packages/zeromq.mk",
        "status": "modified",
        "additions": 14,
        "deletions": 6,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/zeromq.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/zeromq.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zeromq.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,24 +1,32 @@\n package=zeromq\n-$(package)_version=4.0.4\n-$(package)_download_path=http://download.zeromq.org\n+$(package)_version=4.1.5\n+$(package)_download_path=https://github.com/zeromq/zeromq4-1/releases/download/v$($(package)_version)/\n $(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=1ef71d46e94f33e27dd5a1661ed626cd39be4d2d6967792a275040e34457d399\n+$(package)_sha256_hash=04aac57f081ffa3a2ee5ed04887be9e205df3a7ddade0027460b8042432bdbcf\n+$(package)_patches=9114d3957725acd34aa8b8d011585812f3369411.patch 9e6745c12e0b100cd38acecc16ce7db02905e27c.patch\n \n define $(package)_set_vars\n-  $(package)_config_opts=--without-documentation --disable-shared\n+  $(package)_config_opts=--without-documentation --disable-shared --without-libsodium --disable-curve\n   $(package)_config_opts_linux=--with-pic\n+  $(package)_cxxflags=-std=c++11\n+endef\n+\n+define $(package)_preprocess_cmds\n+  patch -p1 < $($(package)_patch_dir)/9114d3957725acd34aa8b8d011585812f3369411.patch && \\\n+  patch -p1 < $($(package)_patch_dir)/9e6745c12e0b100cd38acecc16ce7db02905e27c.patch && \\\n+  ./autogen.sh\n endef\n \n define $(package)_config_cmds\n   $($(package)_autoconf)\n endef\n \n define $(package)_build_cmds\n-  $(MAKE) -C src\n+  $(MAKE) libzmq.la\n endef\n \n define $(package)_stage_cmds\n-  $(MAKE) -C src DESTDIR=$($(package)_staging_dir) install\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install-libLTLIBRARIES install-includeHEADERS install-pkgconfigDATA\n endef\n \n define $(package)_postprocess_cmds"
      },
      {
        "sha": "589490800f8bd894538aef4ce19366d0bf78d2ca",
        "filename": "depends/packages/zlib.mk",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/zlib.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/packages/zlib.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zlib.mk?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,27 @@\n+package=zlib\n+$(package)_version=1.2.11\n+$(package)_download_path=http://www.zlib.net\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=c3e5e9fdd5004dcb542feda5ee4f0ff0744628baf8ed2dd5d66f8ca1197cb1a1\n+\n+define $(package)_set_vars\n+$(package)_build_opts= CC=\"$($(package)_cc)\"\n+$(package)_build_opts+=CFLAGS=\"$($(package)_cflags) $($(package)_cppflags) -fPIC\"\n+$(package)_build_opts+=RANLIB=\"$($(package)_ranlib)\"\n+$(package)_build_opts+=AR=\"$($(package)_ar)\"\n+$(package)_build_opts_darwin+=AR=\"$($(package)_libtool)\"\n+$(package)_build_opts_darwin+=ARFLAGS=\"-o\"\n+endef\n+\n+define $(package)_config_cmds\n+  ./configure --static --prefix=$(host_prefix)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) $($(package)_build_opts) libz.a\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install $($(package)_build_opts)\n+endef\n+"
      },
      {
        "sha": "97f59cb7e4eea0575cf684936c7087d784a39437",
        "filename": "depends/patches/boost/darwin_boost_atomic-1.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/depends/patches/boost/darwin_boost_atomic-1.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/depends/patches/boost/darwin_boost_atomic-1.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/boost/darwin_boost_atomic-1.patch?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,35 +0,0 @@\n-diff --git a/include/boost/atomic/detail/cas128strong.hpp b/include/boost/atomic/detail/cas128strong.hpp\n-index 906c13e..dcb4d7d 100644\n---- a/include/boost/atomic/detail/cas128strong.hpp\n-+++ b/include/boost/atomic/detail/cas128strong.hpp\n-@@ -196,15 +196,17 @@ class base_atomic<T, void, 16, Sign>\n- \n- public:\n-     BOOST_DEFAULTED_FUNCTION(base_atomic(void), {})\n--    explicit base_atomic(value_type const& v) BOOST_NOEXCEPT : v_(0)\n-+    explicit base_atomic(value_type const& v) BOOST_NOEXCEPT\n-     {\n-+        memset(&v_, 0, sizeof(v_));\n-         memcpy(&v_, &v, sizeof(value_type));\n-     }\n- \n-     void\n-     store(value_type const& value, memory_order order = memory_order_seq_cst) volatile BOOST_NOEXCEPT\n-     {\n--        storage_type value_s = 0;\n-+        storage_type value_s;\n-+        memset(&value_s, 0, sizeof(value_s));\n-         memcpy(&value_s, &value, sizeof(value_type));\n-         platform_fence_before_store(order);\n-         platform_store128(value_s, &v_);\n-@@ -247,7 +249,9 @@ class base_atomic<T, void, 16, Sign>\n-         memory_order success_order,\n-         memory_order failure_order) volatile BOOST_NOEXCEPT\n-     {\n--        storage_type expected_s = 0, desired_s = 0;\n-+        storage_type expected_s, desired_s;\n-+        memset(&expected_s, 0, sizeof(expected_s));\n-+        memset(&desired_s, 0, sizeof(desired_s));\n-         memcpy(&expected_s, &expected, sizeof(value_type));\n-         memcpy(&desired_s, &desired, sizeof(value_type));\n- "
      },
      {
        "sha": "ca50765200ec86d6b5591446326afc91b6d389e7",
        "filename": "depends/patches/boost/darwin_boost_atomic-2.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 55,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/depends/patches/boost/darwin_boost_atomic-2.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/depends/patches/boost/darwin_boost_atomic-2.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/boost/darwin_boost_atomic-2.patch?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,55 +0,0 @@\n-diff --git a/include/boost/atomic/detail/gcc-atomic.hpp b/include/boost/atomic/detail/gcc-atomic.hpp\n-index a130590..4af99a1 100644\n---- a/include/boost/atomic/detail/gcc-atomic.hpp\n-+++ b/include/boost/atomic/detail/gcc-atomic.hpp\n-@@ -958,14 +958,16 @@ class base_atomic<T, void, 16, Sign>\n- \n- public:\n-     BOOST_DEFAULTED_FUNCTION(base_atomic(void), {})\n--    explicit base_atomic(value_type const& v) BOOST_NOEXCEPT : v_(0)\n-+    explicit base_atomic(value_type const& v) BOOST_NOEXCEPT\n-     {\n-+        memset(&v_, 0, sizeof(v_));\n-         memcpy(&v_, &v, sizeof(value_type));\n-     }\n- \n-     void store(value_type const& v, memory_order order = memory_order_seq_cst) volatile BOOST_NOEXCEPT\n-     {\n--        storage_type tmp = 0;\n-+        storage_type tmp;\n-+        memset(&tmp, 0, sizeof(tmp));\n-         memcpy(&tmp, &v, sizeof(value_type));\n-         __atomic_store_n(&v_, tmp, atomics::detail::convert_memory_order_to_gcc(order));\n-     }\n-@@ -980,7 +982,8 @@ class base_atomic<T, void, 16, Sign>\n- \n-     value_type exchange(value_type const& v, memory_order order = memory_order_seq_cst) volatile BOOST_NOEXCEPT\n-     {\n--        storage_type tmp = 0;\n-+        storage_type tmp;\n-+        memset(&tmp, 0, sizeof(tmp));\n-         memcpy(&tmp, &v, sizeof(value_type));\n-         tmp = __atomic_exchange_n(&v_, tmp, atomics::detail::convert_memory_order_to_gcc(order));\n-         value_type res;\n-@@ -994,7 +997,9 @@ class base_atomic<T, void, 16, Sign>\n-         memory_order success_order,\n-         memory_order failure_order) volatile BOOST_NOEXCEPT\n-     {\n--        storage_type expected_s = 0, desired_s = 0;\n-+        storage_type expected_s, desired_s;\n-+        memset(&expected_s, 0, sizeof(expected_s));\n-+        memset(&desired_s, 0, sizeof(desired_s));\n-         memcpy(&expected_s, &expected, sizeof(value_type));\n-         memcpy(&desired_s, &desired, sizeof(value_type));\n-         const bool success = __atomic_compare_exchange_n(&v_, &expected_s, desired_s, false,\n-@@ -1010,7 +1015,9 @@ class base_atomic<T, void, 16, Sign>\n-         memory_order success_order,\n-         memory_order failure_order) volatile BOOST_NOEXCEPT\n-     {\n--        storage_type expected_s = 0, desired_s = 0;\n-+        storage_type expected_s, desired_s;\n-+        memset(&expected_s, 0, sizeof(expected_s));\n-+        memset(&desired_s, 0, sizeof(desired_s));\n-         memcpy(&expected_s, &expected, sizeof(value_type));\n-         memcpy(&desired_s, &desired, sizeof(value_type));\n-         const bool success = __atomic_compare_exchange_n(&v_, &expected_s, desired_s, true,"
      },
      {
        "sha": "04514c593a101078af216a67bd905b5c615ded53",
        "filename": "depends/patches/boost/gcc_5_no_cxx11.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/depends/patches/boost/gcc_5_no_cxx11.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/depends/patches/boost/gcc_5_no_cxx11.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/boost/gcc_5_no_cxx11.patch?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,37 +0,0 @@\n-From eec808554936ae068b23df07ab54d4dc6302a695 Mon Sep 17 00:00:00 2001\n-From: jzmaddock <jzmaddock@gmail.com>\n-Date: Sat, 23 Aug 2014 09:38:02 +0100\n-Subject: [PATCH] Fix BOOST_NO_CXX11_VARIADIC_TEMPLATES definition - the\n- feature was introduced in GCC 4.4.\n-\n----\n- include/boost/config/compiler/gcc.hpp | 9 +--------\n- 1 file changed, 1 insertion(+), 8 deletions(-)\n-\n-diff --git a/include/boost/config/compiler/gcc.hpp b/include/boost/config/compiler/gcc.hpp\n-index f37159d..97d8a18 100644\n---- a/include/boost/config/compiler/gcc.hpp\n-+++ b/include/boost/config/compiler/gcc.hpp\n-@@ -154,14 +154,6 @@\n- #  define BOOST_NO_CXX11_FUNCTION_TEMPLATE_DEFAULT_ARGS\n- #  define BOOST_NO_CXX11_RVALUE_REFERENCES\n- #  define BOOST_NO_CXX11_STATIC_ASSERT\n--\n--// Variadic templates compiler:\n--//   http://www.generic-programming.org/~dgregor/cpp/variadic-templates.html\n--#  if defined(__VARIADIC_TEMPLATES) || (__GNUC__ > 4) || ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4) && defined(__GXX_EXPERIMENTAL_CXX0X__))\n--#    define BOOST_HAS_VARIADIC_TMPL\n--#  else\n--#    define BOOST_NO_CXX11_VARIADIC_TEMPLATES\n--#  endif\n- #endif\n- \n- // C++0x features in 4.4.n and later\n-@@ -176,6 +168,7 @@\n- #  define BOOST_NO_CXX11_DELETED_FUNCTIONS\n- #  define BOOST_NO_CXX11_TRAILING_RESULT_TYPES\n- #  define BOOST_NO_CXX11_INLINE_NAMESPACES\n-+#  define BOOST_NO_CXX11_VARIADIC_TEMPLATES\n- #endif\n- \n- #if __GNUC__ < 4 || (__GNUC__ == 4 && __GNUC_MINOR__ < 5)"
      },
      {
        "sha": "58695c11f5d976bd163429884e02d9a7f6f4eb4d",
        "filename": "depends/patches/libevent/reuseaddr.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/depends/patches/libevent/reuseaddr.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/depends/patches/libevent/reuseaddr.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/libevent/reuseaddr.patch?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,21 +0,0 @@\n---- old/evutil.c   2015-08-28 19:26:23.488765923 -0400\n-+++ new/evutil.c   2015-08-28 19:27:41.392767019 -0400\n-@@ -321,15 +321,16 @@\n- int\n- evutil_make_listen_socket_reuseable(evutil_socket_t sock)\n- {\n--#ifndef WIN32\n- \tint one = 1;\n-+#ifndef WIN32\n- \t/* REUSEADDR on Unix means, \"don't hang on to this address after the\n- \t * listener is closed.\"  On Windows, though, it means \"don't keep other\n- \t * processes from binding to this address while we're using it. */\n- \treturn setsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (void*) &one,\n- \t    (ev_socklen_t)sizeof(one));\n- #else\n--\treturn 0;\n-+\treturn setsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (const char*) &one,\n-+\t\t(ev_socklen_t)sizeof(one));\n- #endif\n- }\n- "
      },
      {
        "sha": "89abdb1b71ff81ffdcab8b138ae86d53b4a07442",
        "filename": "depends/patches/native_biplist/sorted_list.patch",
        "status": "added",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/patches/native_biplist/sorted_list.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/patches/native_biplist/sorted_list.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_biplist/sorted_list.patch?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,29 @@\n+--- a/biplist/__init__.py\t2014-10-26 19:03:11.000000000 +0000\n++++ b/biplist/__init__.py\t2016-07-19 19:30:17.663521999 +0000\n+@@ -541,7 +541,7 @@\n+             return HashableWrapper(n)\n+         elif isinstance(root, dict):\n+             n = {}\n+-            for key, value in iteritems(root):\n++            for key, value in sorted(iteritems(root)):\n+                 n[self.wrapRoot(key)] = self.wrapRoot(value)\n+             return HashableWrapper(n)\n+         elif isinstance(root, list):\n+@@ -616,7 +616,7 @@\n+             elif isinstance(obj, dict):\n+                 size = proc_size(len(obj))\n+                 self.incrementByteCount('dictBytes', incr=1+size)\n+-                for key, value in iteritems(obj):\n++                for key, value in sorted(iteritems(obj)):\n+                     check_key(key)\n+                     self.computeOffsets(key, asReference=True)\n+                     self.computeOffsets(value, asReference=True)\n+@@ -714,7 +714,7 @@\n+                 keys = []\n+                 values = []\n+                 objectsToWrite = []\n+-                for key, value in iteritems(obj):\n++                for key, value in sorted(iteritems(obj)):\n+                     keys.append(key)\n+                     values.append(value)\n+                 for key in keys:"
      },
      {
        "sha": "1a32340be5b13ae1d5be3e775462c3052c12953a",
        "filename": "depends/patches/native_mac_alias/python3.patch",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/patches/native_mac_alias/python3.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/patches/native_mac_alias/python3.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_mac_alias/python3.patch?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,72 @@\n+diff -dur a/mac_alias/alias.py b/mac_alias/alias.py\n+--- a/mac_alias/alias.py\t2015-10-19 12:12:48.000000000 +0200\n++++ b/mac_alias/alias.py\t2016-04-03 12:13:12.037159417 +0200\n+@@ -243,10 +243,10 @@\n+         alias = Alias()\n+         alias.appinfo = appinfo\n+             \n+-        alias.volume = VolumeInfo (volname.replace('/',':'),\n++        alias.volume = VolumeInfo (volname.decode().replace('/',':'),\n+                                    voldate, fstype, disktype,\n+                                    volattrs, volfsid)\n+-        alias.target = TargetInfo (kind, filename.replace('/',':'),\n++        alias.target = TargetInfo (kind, filename.decode().replace('/',':'),\n+                                    folder_cnid, cnid,\n+                                    crdate, creator_code, type_code)\n+         alias.target.levels_from = levels_from\n+@@ -261,9 +261,9 @@\n+                 b.read(1)\n+ \n+             if tag == TAG_CARBON_FOLDER_NAME:\n+-                alias.target.folder_name = value.replace('/',':')\n++                alias.target.folder_name = value.decode().replace('/',':')\n+             elif tag == TAG_CNID_PATH:\n+-                alias.target.cnid_path = struct.unpack(b'>%uI' % (length // 4),\n++                alias.target.cnid_path = struct.unpack('>%uI' % (length // 4),\n+                                                            value)\n+             elif tag == TAG_CARBON_PATH:\n+                 alias.target.carbon_path = value\n+@@ -298,9 +298,9 @@\n+                 alias.target.creation_date \\\n+                     = mac_epoch + datetime.timedelta(seconds=seconds)\n+             elif tag == TAG_POSIX_PATH:\n+-                alias.target.posix_path = value\n++                alias.target.posix_path = value.decode()\n+             elif tag == TAG_POSIX_PATH_TO_MOUNTPOINT:\n+-                alias.volume.posix_path = value\n++                alias.volume.posix_path = value.decode()\n+             elif tag == TAG_RECURSIVE_ALIAS_OF_DISK_IMAGE:\n+                 alias.volume.disk_image_alias = Alias.from_bytes(value)\n+             elif tag == TAG_USER_HOME_LENGTH_PREFIX:\n+@@ -422,13 +422,13 @@\n+         #       (so doing so is ridiculous, and nothing could rely on it).\n+         b.write(struct.pack(b'>h28pI2shI64pII4s4shhI2s10s',\n+                             self.target.kind,\n+-                            carbon_volname, voldate,\n++                            carbon_volname, int(voldate),\n+                             self.volume.fs_type,\n+                             self.volume.disk_type,\n+                             self.target.folder_cnid,\n+                             carbon_filename,\n+                             self.target.cnid,\n+-                            crdate,\n++                            int(crdate),\n+                             self.target.creator_code,\n+                             self.target.type_code,\n+                             self.target.levels_from,\n+@@ -449,12 +449,12 @@\n+ \n+         b.write(struct.pack(b'>hhQhhQ',\n+                 TAG_HIGH_RES_VOLUME_CREATION_DATE,\n+-                8, long(voldate * 65536),\n++                8, int(voldate * 65536),\n+                 TAG_HIGH_RES_CREATION_DATE,\n+-                8, long(crdate * 65536)))\n++                8, int(crdate * 65536)))\n+ \n+         if self.target.cnid_path:\n+-            cnid_path = struct.pack(b'>%uI' % len(self.target.cnid_path),\n++            cnid_path = struct.pack('>%uI' % len(self.target.cnid_path),\n+                                     *self.target.cnid_path)\n+             b.write(struct.pack(b'>hh', TAG_CNID_PATH,\n+                                  len(cnid_path)))"
      },
      {
        "sha": "ec2bc17d9bd9e032acfec9e34ea6afbbbb7e79f2",
        "filename": "depends/patches/qt/fix-xcb-include-order.patch",
        "status": "modified",
        "additions": 23,
        "deletions": 19,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/patches/qt/fix-xcb-include-order.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/patches/qt/fix-xcb-include-order.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix-xcb-include-order.patch?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,45 +1,49 @@\n---- old/qtbase/src/plugins/platforms/xcb/xcb_qpa_lib.pro 2015-03-17 02:06:42.705930685 +0000\n-+++ new/qtbase/src/plugins/platforms/xcb/xcb_qpa_lib.pro 2015-03-17 02:08:41.281926351 +0000\n-@@ -94,8 +94,6 @@\n-\n+--- old/qtbase/src/plugins/platforms/xcb/xcb_qpa_lib.pro 2015-03-17\n++++ new/qtbase/src/plugins/platforms/xcb/xcb_qpa_lib.pro 2015-03-17\n+@@ -76,8 +76,6 @@\n+ \n  DEFINES += $$QMAKE_DEFINES_XCB\n  LIBS += $$QMAKE_LIBS_XCB\n -QMAKE_CXXFLAGS += $$QMAKE_CFLAGS_XCB\n -QMAKE_CFLAGS += $$QMAKE_CFLAGS_XCB\n-\n+ \n  CONFIG += qpa/genericunixfontdatabase\n-\n-@@ -104,7 +102,8 @@\n+ \n+@@ -89,7 +87,8 @@\n  contains(QT_CONFIG, xcb-qt) {\n      DEFINES += XCB_USE_RENDER\n      XCB_DIR = ../../../3rdparty/xcb\n -    INCLUDEPATH += $$XCB_DIR/include $$XCB_DIR/sysinclude\n +    QMAKE_CFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/sysinclude $$QMAKE_CFLAGS_XCB\n +    QMAKE_CXXFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/sysinclude $$QMAKE_CFLAGS_XCB\n-     LIBS += -lxcb -L$$OUT_PWD/xcb-static -lxcb-static\n+     LIBS += -lxcb -L$$MODULE_BASE_OUTDIR/lib -lxcb-static$$qtPlatformTargetSuffix()\n  } else {\n-     LIBS += -lxcb -lxcb-image -lxcb-icccm -lxcb-sync -lxcb-xfixes -lxcb-shm -lxcb-randr -lxcb-shape -lxcb-keysyms\n---- old/qtbase/src/plugins/platforms/xcb/xcb-static/xcb-static.pro      2015-03-17 02:07:04.641929383 +0000\n-+++ new/qtbase/src/plugins/platforms/xcb/xcb-static/xcb-static.pro      2015-03-17 02:10:15.485922059 +0000\n-@@ -8,7 +8,8 @@\n-\n+     LIBS += -lxcb -lxcb-image -lxcb-icccm -lxcb-sync -lxcb-xfixes -lxcb-shm -lxcb-randr -lxcb-shape -lxcb-keysyms -lxcb-xinerama\n+--- old/qtbase/src/plugins/platforms/xcb/xcb-static/xcb-static.pro\n++++ new/qtbase/src/plugins/platforms/xcb/xcb-static/xcb-static.pro\n+@@ -9,7 +9,8 @@\n+ \n  XCB_DIR = ../../../../3rdparty/xcb\n-\n+ \n -INCLUDEPATH += $$XCB_DIR/include $$XCB_DIR/include/xcb $$XCB_DIR/sysinclude\n +QMAKE_CFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/include/xcb -I$$XCB_DIR/sysinclude\n +QMAKE_CXXFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/include/xcb -I$$XCB_DIR/sysinclude\n-\n+ \n  QMAKE_CXXFLAGS += $$QMAKE_CFLAGS_XCB\n  QMAKE_CFLAGS += $$QMAKE_CFLAGS_XCB\n---- old/qtbase/src/plugins/platforms/xcb/xcb-plugin.pro\t2015-07-24 16:02:59.530038830 -0400\n-+++ new/qtbase/src/plugins/platforms/xcb/xcb-plugin.pro\t2015-07-24 16:01:22.106037459 -0400\n-@@ -11,3 +11,9 @@\n+--- old/qtbase/src/plugins/platforms/xcb/xcb-plugin.pro\n++++ new/qtbase/src/plugins/platforms/xcb/xcb-plugin.pro\n+@@ -6,6 +6,13 @@\n      qxcbmain.cpp\n  OTHER_FILES += xcb.json README\n-\n+ \n +contains(QT_CONFIG, xcb-qt) {\n +    DEFINES += XCB_USE_RENDER\n +    XCB_DIR = ../../../3rdparty/xcb\n +    QMAKE_CFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/sysinclude $$QMAKE_CFLAGS_XCB\n +    QMAKE_CXXFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/sysinclude $$QMAKE_CFLAGS_XCB\n +}\n++\n+ PLUGIN_TYPE = platforms\n+ PLUGIN_CLASS_NAME = QXcbIntegrationPlugin\n+ !equals(TARGET, $$QT_DEFAULT_QPA_PLUGIN): PLUGIN_EXTENDS = -"
      },
      {
        "sha": "34302a9f2d2eb61117a274a53c8cfe1877c61246",
        "filename": "depends/patches/qt/fix_qt_pkgconfig.patch",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/patches/qt/fix_qt_pkgconfig.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/patches/qt/fix_qt_pkgconfig.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_qt_pkgconfig.patch?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,11 @@\n+--- old/qtbase/mkspecs/features/qt_module.prf\n++++ new/qtbase/mkspecs/features/qt_module.prf\n+@@ -245,7 +245,7 @@\n+ load(qt_targets)\n+ \n+ # this builds on top of qt_common\n+-!internal_module:!lib_bundle:if(unix|mingw) {\n++unix|mingw {\n+     CONFIG += create_pc\n+     QMAKE_PKGCONFIG_DESTDIR = pkgconfig\n+     host_build: \\"
      },
      {
        "sha": "ca70d30b15e9c4115f1e7c2ac885858244fd123b",
        "filename": "depends/patches/qt/mac-qmake.conf",
        "status": "modified",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/patches/qt/mac-qmake.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/patches/qt/mac-qmake.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mac-qmake.conf?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,6 +1,5 @@\n MAKEFILE_GENERATOR = UNIX\n CONFIG += app_bundle incremental global_init_link_order lib_version_first plugin_no_soname absolute_library_soname\n-DEFINES += QT_NO_PRINTER QT_NO_PRINTDIALOG\n QMAKE_INCREMENTAL_STYLE = sublib\n include(../common/macx.conf)\n include(../common/gcc-base-mac.conf)\n@@ -11,14 +10,14 @@ QMAKE_XCODE_VERSION=4.3\n QMAKE_XCODE_DEVELOPER_PATH=/Developer\n QMAKE_MACOSX_DEPLOYMENT_TARGET = $${MAC_MIN_VERSION}\n QMAKE_MAC_SDK=macosx\n-QMAKE_MAC_SDK.macosx.path = $${MAC_SDK_PATH}\n+QMAKE_MAC_SDK.macosx.Path = $${MAC_SDK_PATH}\n QMAKE_MAC_SDK.macosx.platform_name = macosx\n-QMAKE_MAC_SDK.macosx.version = $${MAC_SDK_VERSION}\n-QMAKE_MAC_SDK.macosx.platform_path = /phony\n-QMAKE_CFLAGS += -target $${MAC_TARGET}\n-QMAKE_OBJECTIVE_CFLAGS += $$QMAKE_CFLAGS\n-QMAKE_CXXFLAGS += $$QMAKE_CFLAGS\n-QMAKE_LFLAGS += -target $${MAC_TARGET} -mlinker-version=$${MAC_LD64_VERSION}\n+QMAKE_MAC_SDK.macosx.SDKVersion = $${MAC_SDK_VERSION}\n+QMAKE_MAC_SDK.macosx.PlatformPath = /phony\n+!host_build: QMAKE_CFLAGS += -target $${MAC_TARGET}\n+!host_build: QMAKE_OBJECTIVE_CFLAGS += $$QMAKE_CFLAGS\n+!host_build: QMAKE_CXXFLAGS += $$QMAKE_CFLAGS\n+!host_build: QMAKE_LFLAGS += -target $${MAC_TARGET} -mlinker-version=$${MAC_LD64_VERSION}\n QMAKE_AR = $${CROSS_COMPILE}ar cq\n QMAKE_RANLIB=$${CROSS_COMPILE}ranlib\n QMAKE_LIBTOOL=$${CROSS_COMPILE}libtool"
      },
      {
        "sha": "fb21923c8c36b60c337c20a9e8002fc593f5716d",
        "filename": "depends/patches/qt/mingw-uuidof.patch",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/patches/qt/mingw-uuidof.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/patches/qt/mingw-uuidof.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mingw-uuidof.patch?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,6 +1,6 @@\n---- old/qtbase/src/plugins/platforms/windows/qwindowscontext.cpp\t2015-06-20 17:40:20.956781548 -0400\n-+++ new/qtbase/src/plugins/platforms/windows/qwindowscontext.cpp\t2015-06-20 17:29:32.052772416 -0400\n-@@ -69,7 +69,7 @@\n+--- old/qtbase/src/plugins/platforms/windows/qwindowscontext.cpp\n++++ new/qtbase/src/plugins/platforms/windows/qwindowscontext.cpp\n+@@ -77,7 +77,7 @@\n  #include <stdlib.h>\n  #include <stdio.h>\n  #include <windowsx.h>\n@@ -9,25 +9,25 @@\n  #  include <comdef.h>\n  #endif\n  \n-@@ -762,7 +762,7 @@\n-                           HWND_MESSAGE, NULL, (HINSTANCE)GetModuleHandle(0), NULL);\n+@@ -814,7 +814,7 @@\n+                           HWND_MESSAGE, NULL, static_cast<HINSTANCE>(GetModuleHandle(0)), NULL);\n  }\n  \n -#ifndef Q_OS_WINCE\n +#if !defined(Q_OS_WINCE) && (!defined(USE___UUIDOF) || (defined(USE___UUIDOF) && USE___UUIDOF == 1))\n  // Re-engineered from the inline function _com_error::ErrorMessage().\n  // We cannot use it directly since it uses swprintf_s(), which is not\n  // present in the MSVCRT.DLL found on Windows XP (QTBUG-35617).\n-@@ -781,7 +781,7 @@\n-          return QStringLiteral(\"IDispatch error #\") + QString::number(wCode);\n-      return QStringLiteral(\"Unknown error 0x0\") + QString::number(comError.Error(), 16);\n+@@ -833,7 +833,7 @@\n+          return QString::asprintf(\"IDispatch error #%u\", uint(wCode));\n+      return QString::asprintf(\"Unknown error 0x0%x\", uint(comError.Error()));\n  }\n -#endif // !Q_OS_WINCE\n +#endif // !defined(Q_OS_WINCE) && (!defined(USE___UUIDOF) || (defined(USE___UUIDOF) && USE___UUIDOF == 1))\n  \n  /*!\n      \\brief Common COM error strings.\n-@@ -846,12 +846,12 @@\n+@@ -901,12 +901,12 @@\n      default:\n          break;\n      }"
      },
      {
        "sha": "c792824179056473fe97fa8f876f36ca950a6c80",
        "filename": "depends/patches/qt/pidlist_absolute.patch",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/patches/qt/pidlist_absolute.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/patches/qt/pidlist_absolute.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/pidlist_absolute.patch?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -1,7 +1,7 @@\n diff -dur old/qtbase/src/plugins/platforms/windows/qwindowscontext.h new/qtbase/src/plugins/platforms/windows/qwindowscontext.h\n---- old/qtbase/src/plugins/platforms/windows/qwindowscontext.h\t2015-06-29 22:04:40.000000000 +0200\n-+++ new/qtbase/src/plugins/platforms/windows/qwindowscontext.h\t2015-11-01 12:55:59.751234846 +0100\n-@@ -124,10 +124,18 @@\n+--- old/qtbase/src/plugins/platforms/windows/qwindowscontext.h\n++++ new/qtbase/src/plugins/platforms/windows/qwindowscontext.h\n+@@ -136,10 +136,18 @@\n      inline void init();\n  \n      typedef HRESULT (WINAPI *SHCreateItemFromParsingName)(PCWSTR, IBindCtx *, const GUID&, void **);\n@@ -21,9 +21,9 @@ diff -dur old/qtbase/src/plugins/platforms/windows/qwindowscontext.h new/qtbase/\n      SHCreateItemFromParsingName sHCreateItemFromParsingName;\n      SHGetKnownFolderIDList sHGetKnownFolderIDList;\n diff -dur old/qtbase/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp new/qtbase/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp\n---- old/qtbase/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp\t2015-06-29 22:04:40.000000000 +0200\n-+++ new/qtbase/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp\t2015-11-01 13:41:09.503149772 +0100\n-@@ -1008,7 +1008,11 @@\n+--- old/qtbase/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp\n++++ new/qtbase/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp\n+@@ -1016,7 +1016,11 @@\n              qWarning() << __FUNCTION__ << \": Invalid CLSID: \" << url.path();\n              return Q_NULLPTR;\n          }"
      },
      {
        "sha": "f8f6fb04b0b70db71dc5b2c75d2a5cfb6bc48893",
        "filename": "depends/patches/qt46/stlfix.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/depends/patches/qt46/stlfix.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/depends/patches/qt46/stlfix.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt46/stlfix.patch?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,10 +0,0 @@\n---- old/config.tests/unix/stl/stltest.cpp\t2011-06-23 03:45:23.000000000 -0400\n-+++ new/config.tests/unix/stl/stltest.cpp\t2014-08-28 00:54:04.154837604 -0400\n-@@ -49,6 +49,7 @@\n- #include <vector>\n- #include <algorithm>\n- #include <iostream>\n-+#include <cstddef>\n- \n- // something mean to see if the compiler and C++ standard lib are good enough\n- template<class K, class T>"
      },
      {
        "sha": "f704b3d94fda8a2bd90ac422c8b267b02bc60f5c",
        "filename": "depends/patches/zeromq/9114d3957725acd34aa8b8d011585812f3369411.patch",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/patches/zeromq/9114d3957725acd34aa8b8d011585812f3369411.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/patches/zeromq/9114d3957725acd34aa8b8d011585812f3369411.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/zeromq/9114d3957725acd34aa8b8d011585812f3369411.patch?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,22 @@\n+From 9114d3957725acd34aa8b8d011585812f3369411 Mon Sep 17 00:00:00 2001\n+From: Jeroen Ooms <jeroenooms@gmail.com>\n+Date: Tue, 20 Oct 2015 13:10:38 +0200\n+Subject: [PATCH] enable static libraries on mingw\n+\n+---\n+ configure.ac | 2 +-\n+ 1 file changed, 1 insertion(+), 1 deletion(-)\n+\n+diff --git a/configure.ac b/configure.ac\n+index 393505b..e92131a 100644\n+--- a/configure.ac\n++++ b/configure.ac\n+@@ -265,7 +265,7 @@ case \"${host_os}\" in\n+         libzmq_dso_visibility=\"no\"\n+\n+         if test \"x$enable_static\" = \"xyes\"; then\n+-            AC_MSG_ERROR([Building static libraries is not supported under MinGW32])\n++            CPPFLAGS=\"-DZMQ_STATIC\"\n+         fi\n+\n+ \t# Set FD_SETSIZE to 1024\n\\ No newline at end of file"
      },
      {
        "sha": "9aff2c179a1982e6af89a410d06c42d1a0fbad90",
        "filename": "depends/patches/zeromq/9e6745c12e0b100cd38acecc16ce7db02905e27c.patch",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/patches/zeromq/9e6745c12e0b100cd38acecc16ce7db02905e27c.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/depends/patches/zeromq/9e6745c12e0b100cd38acecc16ce7db02905e27c.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/zeromq/9e6745c12e0b100cd38acecc16ce7db02905e27c.patch?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1,22 @@\n+From 9e6745c12e0b100cd38acecc16ce7db02905e27c Mon Sep 17 00:00:00 2001\n+From: David Millard <dmillard10@gmail.com>\n+Date: Tue, 10 May 2016 13:53:53 -0700\n+Subject: [PATCH] Fix autotools for static MinGW builds\n+\n+---\n+ configure.ac | 2 +-\n+ 1 file changed, 1 insertion(+), 1 deletion(-)\n+\n+diff --git a/configure.ac b/configure.ac\n+index 5a0fa14..def6ea7 100644\n+--- a/configure.ac\n++++ b/configure.ac\n+@@ -259,7 +259,7 @@ case \"${host_os}\" in\n+         libzmq_dso_visibility=\"no\"\n+\n+         if test \"x$enable_static\" = \"xyes\"; then\n+-            CPPFLAGS=\"-DZMQ_STATIC\"\n++            CPPFLAGS=\"-DZMQ_STATIC $CPPFLAGS\"\n+         fi\n+\n+ \t# Set FD_SETSIZE to 1024\n\\ No newline at end of file"
      },
      {
        "sha": "38498103bb1704a3f13979c1359649a786d50aef",
        "filename": "doc/.gitignore",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/.gitignore?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "patch": "@@ -0,0 +1 @@\n+Doxyfile"
      },
      {
        "sha": "925a33ee89b51a763882be35f43c747606eb7291",
        "filename": "doc/Doxyfile",
        "status": "removed",
        "additions": 0,
        "deletions": 1752,
        "changes": 1752,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/doc/Doxyfile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/doc/Doxyfile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d",
        "patch": "@@ -1,1752 +0,0 @@\n-# Doxyfile 1.7.4\n-\n-# !!! Invoke doxygen from project root using: \n-#    doxygen doc/Doxyfile\n-\n-# This file describes the settings to be used by the documentation system\n-# doxygen (www.doxygen.org) for a project\n-#\n-# All text after a hash (#) is considered a comment and will be ignored\n-# The format is:\n-#       TAG = value [value, ...]\n-# For lists items can also be appended using:\n-#       TAG += value [value, ...]\n-# Values that contain spaces should be placed between quotes (\" \")\n-\n-#---------------------------------------------------------------------------\n-# Project related configuration options\n-#---------------------------------------------------------------------------\n-\n-# This tag specifies the encoding used for all characters in the config file \n-# that follow. The default is UTF-8 which is also the encoding used for all \n-# text before the first occurrence of this tag. Doxygen uses libiconv (or the \n-# iconv built into libc) for the transcoding. See \n-# http://www.gnu.org/software/libiconv for the list of possible encodings.\n-\n-DOXYFILE_ENCODING      = UTF-8\n-\n-# The PROJECT_NAME tag is a single word (or a sequence of words surrounded \n-# by quotes) that should identify the project.\n-\n-PROJECT_NAME           = Bitcoin\n-\n-# The PROJECT_NUMBER tag can be used to enter a project or revision number. \n-# This could be handy for archiving the generated documentation or \n-# if some version control system is used.\n-\n-PROJECT_NUMBER         = 0.11.99\n-\n-# Using the PROJECT_BRIEF tag one can provide an optional one line description \n-# for a project that appears at the top of each page and should give viewer \n-# a quick idea about the purpose of the project. Keep the description short.\n-\n-PROJECT_BRIEF          = \"P2P Digital Currency\"\n-\n-# With the PROJECT_LOGO tag one can specify an logo or icon that is \n-# included in the documentation. The maximum height of the logo should not \n-# exceed 55 pixels and the maximum width should not exceed 200 pixels. \n-# Doxygen will copy the logo to the output directory.\n-\n-PROJECT_LOGO           = doc/bitcoin_logo_doxygen.png\n-\n-# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) \n-# base path where the generated documentation will be put. \n-# If a relative path is entered, it will be relative to the location \n-# where doxygen was started. If left blank the current directory will be used.\n-\n-OUTPUT_DIRECTORY       = doc/doxygen\n-\n-# If the CREATE_SUBDIRS tag is set to YES, then doxygen will create \n-# 4096 sub-directories (in 2 levels) under the output directory of each output \n-# format and will distribute the generated files over these directories. \n-# Enabling this option can be useful when feeding doxygen a huge amount of \n-# source files, where putting all generated files in the same directory would \n-# otherwise cause performance problems for the file system.\n-\n-CREATE_SUBDIRS         = NO\n-\n-# The OUTPUT_LANGUAGE tag is used to specify the language in which all \n-# documentation generated by doxygen is written. Doxygen will use this \n-# information to generate all constant output in the proper language. \n-# The default language is English, other supported languages are: \n-# Afrikaans, Arabic, Brazilian, Catalan, Chinese, Chinese-Traditional, \n-# Croatian, Czech, Danish, Dutch, Esperanto, Farsi, Finnish, French, German, \n-# Greek, Hungarian, Italian, Japanese, Japanese-en (Japanese with English \n-# messages), Korean, Korean-en, Lithuanian, Norwegian, Macedonian, Persian, \n-# Polish, Portuguese, Romanian, Russian, Serbian, Serbian-Cyrillic, Slovak, \n-# Slovene, Spanish, Swedish, Ukrainian, and Vietnamese.\n-\n-OUTPUT_LANGUAGE        = English\n-\n-# If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will \n-# include brief member descriptions after the members that are listed in \n-# the file and class documentation (similar to JavaDoc). \n-# Set to NO to disable this.\n-\n-BRIEF_MEMBER_DESC      = YES\n-\n-# If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will prepend \n-# the brief description of a member or function before the detailed description. \n-# Note: if both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the \n-# brief descriptions will be completely suppressed.\n-\n-REPEAT_BRIEF           = YES\n-\n-# This tag implements a quasi-intelligent brief description abbreviator \n-# that is used to form the text in various listings. Each string \n-# in this list, if found as the leading text of the brief description, will be \n-# stripped from the text and the result after processing the whole list, is \n-# used as the annotated text. Otherwise, the brief description is used as-is. \n-# If left blank, the following values are used (\"$name\" is automatically \n-# replaced with the name of the entity): \"The $name class\" \"The $name widget\" \n-# \"The $name file\" \"is\" \"provides\" \"specifies\" \"contains\" \n-# \"represents\" \"a\" \"an\" \"the\"\n-\n-ABBREVIATE_BRIEF       = \"The $name class\" \\\n-                         \"The $name widget\" \\\n-                         \"The $name file\" \\\n-                         is \\\n-                         provides \\\n-                         specifies \\\n-                         contains \\\n-                         represents \\\n-                         a \\\n-                         an \\\n-                         the\n-\n-# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then \n-# Doxygen will generate a detailed section even if there is only a brief \n-# description.\n-\n-ALWAYS_DETAILED_SEC    = NO\n-\n-# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all \n-# inherited members of a class in the documentation of that class as if those \n-# members were ordinary class members. Constructors, destructors and assignment \n-# operators of the base classes will not be shown.\n-\n-INLINE_INHERITED_MEMB  = NO\n-\n-# If the FULL_PATH_NAMES tag is set to YES then Doxygen will prepend the full \n-# path before files name in the file list and in the header files. If set \n-# to NO the shortest path that makes the file name unique will be used.\n-\n-FULL_PATH_NAMES        = YES\n-\n-# If the FULL_PATH_NAMES tag is set to YES then the STRIP_FROM_PATH tag \n-# can be used to strip a user-defined part of the path. Stripping is \n-# only done if one of the specified strings matches the left-hand part of \n-# the path. The tag can be used to show relative paths in the file list. \n-# If left blank the directory from which doxygen is run is used as the \n-# path to strip.\n-\n-STRIP_FROM_PATH        = \n-\n-# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of \n-# the path mentioned in the documentation of a class, which tells \n-# the reader which header file to include in order to use a class. \n-# If left blank only the name of the header file containing the class \n-# definition is used. Otherwise one should specify the include paths that \n-# are normally passed to the compiler using the -I flag.\n-\n-STRIP_FROM_INC_PATH    = \n-\n-# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter \n-# (but less readable) file names. This can be useful if your file system \n-# doesn't support long names like on DOS, Mac, or CD-ROM.\n-\n-SHORT_NAMES            = NO\n-\n-# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen \n-# will interpret the first line (until the first dot) of a JavaDoc-style \n-# comment as the brief description. If set to NO, the JavaDoc \n-# comments will behave just like regular Qt-style comments \n-# (thus requiring an explicit @brief command for a brief description.)\n-\n-JAVADOC_AUTOBRIEF      = YES\n-\n-# If the QT_AUTOBRIEF tag is set to YES then Doxygen will \n-# interpret the first line (until the first dot) of a Qt-style \n-# comment as the brief description. If set to NO, the comments \n-# will behave just like regular Qt-style comments (thus requiring \n-# an explicit \\brief command for a brief description.)\n-\n-QT_AUTOBRIEF           = NO\n-\n-# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make Doxygen \n-# treat a multi-line C++ special comment block (i.e. a block of //! or /// \n-# comments) as a brief description. This used to be the default behaviour. \n-# The new default is to treat a multi-line C++ comment block as a detailed \n-# description. Set this tag to YES if you prefer the old behaviour instead.\n-\n-MULTILINE_CPP_IS_BRIEF = NO\n-\n-# If the INHERIT_DOCS tag is set to YES (the default) then an undocumented \n-# member inherits the documentation from any documented member that it \n-# re-implements.\n-\n-INHERIT_DOCS           = YES\n-\n-# If the SEPARATE_MEMBER_PAGES tag is set to YES, then doxygen will produce \n-# a new page for each member. If set to NO, the documentation of a member will \n-# be part of the file/class/namespace that contains it.\n-\n-SEPARATE_MEMBER_PAGES  = NO\n-\n-# The TAB_SIZE tag can be used to set the number of spaces in a tab. \n-# Doxygen uses this value to replace tabs by spaces in code fragments.\n-\n-TAB_SIZE               = 8\n-\n-# This tag can be used to specify a number of aliases that acts \n-# as commands in the documentation. An alias has the form \"name=value\". \n-# For example adding \"sideeffect=\\par Side Effects:\\n\" will allow you to \n-# put the command \\sideeffect (or @sideeffect) in the documentation, which \n-# will result in a user-defined paragraph with heading \"Side Effects:\". \n-# You can put \\n in the value part of an alias to insert newlines.\n-\n-ALIASES                = \n-\n-# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C \n-# sources only. Doxygen will then generate output that is more tailored for C. \n-# For instance, some of the names that are used will be different. The list \n-# of all members will be omitted, etc.\n-\n-OPTIMIZE_OUTPUT_FOR_C  = NO\n-\n-# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java \n-# sources only. Doxygen will then generate output that is more tailored for \n-# Java. For instance, namespaces will be presented as packages, qualified \n-# scopes will look different, etc.\n-\n-OPTIMIZE_OUTPUT_JAVA   = NO\n-\n-# Set the OPTIMIZE_FOR_FORTRAN tag to YES if your project consists of Fortran \n-# sources only. Doxygen will then generate output that is more tailored for \n-# Fortran.\n-\n-OPTIMIZE_FOR_FORTRAN   = NO\n-\n-# Set the OPTIMIZE_OUTPUT_VHDL tag to YES if your project consists of VHDL \n-# sources. Doxygen will then generate output that is tailored for \n-# VHDL.\n-\n-OPTIMIZE_OUTPUT_VHDL   = NO\n-\n-# Doxygen selects the parser to use depending on the extension of the files it \n-# parses. With this tag you can assign which parser to use for a given extension. \n-# Doxygen has a built-in mapping, but you can override or extend it using this \n-# tag. The format is ext=language, where ext is a file extension, and language \n-# is one of the parsers supported by doxygen: IDL, Java, Javascript, CSharp, C, \n-# C++, D, PHP, Objective-C, Python, Fortran, VHDL, C, C++. For instance to make \n-# doxygen treat .inc files as Fortran files (default is PHP), and .f files as C \n-# (default is Fortran), use: inc=Fortran f=C. Note that for custom extensions \n-# you also need to set FILE_PATTERNS otherwise the files are not read by doxygen.\n-\n-EXTENSION_MAPPING      = \n-\n-# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want \n-# to include (a tag file for) the STL sources as input, then you should \n-# set this tag to YES in order to let doxygen match functions declarations and \n-# definitions whose arguments contain STL classes (e.g. func(std::string); v.s. \n-# func(std::string) {}). This also makes the inheritance and collaboration \n-# diagrams that involve STL classes more complete and accurate.\n-\n-BUILTIN_STL_SUPPORT    = NO\n-\n-# If you use Microsoft's C++/CLI language, you should set this option to YES to \n-# enable parsing support.\n-\n-CPP_CLI_SUPPORT        = NO\n-\n-# Set the SIP_SUPPORT tag to YES if your project consists of sip sources only. \n-# Doxygen will parse them like normal C++ but will assume all classes use public \n-# instead of private inheritance when no explicit protection keyword is present.\n-\n-SIP_SUPPORT            = NO\n-\n-# For Microsoft's IDL there are propget and propput attributes to indicate getter \n-# and setter methods for a property. Setting this option to YES (the default) \n-# will make doxygen replace the get and set methods by a property in the \n-# documentation. This will only work if the methods are indeed getting or \n-# setting a simple type. If this is not the case, or you want to show the \n-# methods anyway, you should set this option to NO.\n-\n-IDL_PROPERTY_SUPPORT   = YES\n-\n-# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC \n-# tag is set to YES, then doxygen will reuse the documentation of the first \n-# member in the group (if any) for the other members of the group. By default \n-# all members of a group must be documented explicitly.\n-\n-DISTRIBUTE_GROUP_DOC   = NO\n-\n-# Set the SUBGROUPING tag to YES (the default) to allow class member groups of \n-# the same type (for instance a group of public functions) to be put as a \n-# subgroup of that type (e.g. under the Public Functions section). Set it to \n-# NO to prevent subgrouping. Alternatively, this can be done per class using \n-# the \\nosubgrouping command.\n-\n-SUBGROUPING            = YES\n-\n-# When the INLINE_GROUPED_CLASSES tag is set to YES, classes, structs and \n-# unions are shown inside the group in which they are included (e.g. using \n-# @ingroup) instead of on a separate page (for HTML and Man pages) or \n-# section (for LaTeX and RTF).\n-\n-INLINE_GROUPED_CLASSES = NO\n-\n-# When TYPEDEF_HIDES_STRUCT is enabled, a typedef of a struct, union, or enum \n-# is documented as struct, union, or enum with the name of the typedef. So \n-# typedef struct TypeS {} TypeT, will appear in the documentation as a struct \n-# with name TypeT. When disabled the typedef will appear as a member of a file, \n-# namespace, or class. And the struct will be named TypeS. This can typically \n-# be useful for C code in case the coding convention dictates that all compound \n-# types are typedef'ed and only the typedef is referenced, never the tag name.\n-\n-TYPEDEF_HIDES_STRUCT   = NO\n-\n-# The SYMBOL_CACHE_SIZE determines the size of the internal cache use to \n-# determine which symbols to keep in memory and which to flush to disk. \n-# When the cache is full, less often used symbols will be written to disk. \n-# For small to medium size projects (<1000 input files) the default value is \n-# probably good enough. For larger projects a too small cache size can cause \n-# doxygen to be busy swapping symbols to and from disk most of the time \n-# causing a significant performance penalty. \n-# If the system has enough physical memory increasing the cache will improve the \n-# performance by keeping more symbols in memory. Note that the value works on \n-# a logarithmic scale so increasing the size by one will roughly double the \n-# memory usage. The cache size is given by this formula: \n-# 2^(16+SYMBOL_CACHE_SIZE). The valid range is 0..9, the default is 0, \n-# corresponding to a cache size of 2^16 = 65536 symbols\n-\n-SYMBOL_CACHE_SIZE      = 0\n-\n-#---------------------------------------------------------------------------\n-# Build related configuration options\n-#---------------------------------------------------------------------------\n-\n-# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in \n-# documentation are documented, even if no documentation was available. \n-# Private class members and static file members will be hidden unless \n-# the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES\n-\n-EXTRACT_ALL            = YES\n-\n-# If the EXTRACT_PRIVATE tag is set to YES all private members of a class \n-# will be included in the documentation.\n-\n-EXTRACT_PRIVATE        = YES\n-\n-# If the EXTRACT_STATIC tag is set to YES all static members of a file \n-# will be included in the documentation.\n-\n-EXTRACT_STATIC         = NO\n-\n-# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs) \n-# defined locally in source files will be included in the documentation. \n-# If set to NO only classes defined in header files are included.\n-\n-EXTRACT_LOCAL_CLASSES  = YES\n-\n-# This flag is only useful for Objective-C code. When set to YES local \n-# methods, which are defined in the implementation section but not in \n-# the interface are included in the documentation. \n-# If set to NO (the default) only methods in the interface are included.\n-\n-EXTRACT_LOCAL_METHODS  = NO\n-\n-# If this flag is set to YES, the members of anonymous namespaces will be \n-# extracted and appear in the documentation as a namespace called \n-# 'anonymous_namespace{file}', where file will be replaced with the base \n-# name of the file that contains the anonymous namespace. By default \n-# anonymous namespaces are hidden.\n-\n-EXTRACT_ANON_NSPACES   = NO\n-\n-# If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all \n-# undocumented members of documented classes, files or namespaces. \n-# If set to NO (the default) these members will be included in the \n-# various overviews, but no documentation section is generated. \n-# This option has no effect if EXTRACT_ALL is enabled.\n-\n-HIDE_UNDOC_MEMBERS     = NO\n-\n-# If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all \n-# undocumented classes that are normally visible in the class hierarchy. \n-# If set to NO (the default) these classes will be included in the various \n-# overviews. This option has no effect if EXTRACT_ALL is enabled.\n-\n-HIDE_UNDOC_CLASSES     = NO\n-\n-# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, Doxygen will hide all \n-# friend (class|struct|union) declarations. \n-# If set to NO (the default) these declarations will be included in the \n-# documentation.\n-\n-HIDE_FRIEND_COMPOUNDS  = NO\n-\n-# If the HIDE_IN_BODY_DOCS tag is set to YES, Doxygen will hide any \n-# documentation blocks found inside the body of a function. \n-# If set to NO (the default) these blocks will be appended to the \n-# function's detailed documentation block.\n-\n-HIDE_IN_BODY_DOCS      = NO\n-\n-# The INTERNAL_DOCS tag determines if documentation \n-# that is typed after a \\internal command is included. If the tag is set \n-# to NO (the default) then the documentation will be excluded. \n-# Set it to YES to include the internal documentation.\n-\n-INTERNAL_DOCS          = NO\n-\n-# If the CASE_SENSE_NAMES tag is set to NO then Doxygen will only generate \n-# file names in lower-case letters. If set to YES upper-case letters are also \n-# allowed. This is useful if you have classes or files whose names only differ \n-# in case and if your file system supports case sensitive file names. Windows \n-# and Mac users are advised to set this option to NO.\n-\n-CASE_SENSE_NAMES       = NO\n-\n-# If the HIDE_SCOPE_NAMES tag is set to NO (the default) then Doxygen \n-# will show members with their full class and namespace scopes in the \n-# documentation. If set to YES the scope will be hidden.\n-\n-HIDE_SCOPE_NAMES       = NO\n-\n-# If the SHOW_INCLUDE_FILES tag is set to YES (the default) then Doxygen \n-# will put a list of the files that are included by a file in the documentation \n-# of that file.\n-\n-SHOW_INCLUDE_FILES     = YES\n-\n-# If the FORCE_LOCAL_INCLUDES tag is set to YES then Doxygen \n-# will list include files with double quotes in the documentation \n-# rather than with sharp brackets.\n-\n-FORCE_LOCAL_INCLUDES   = NO\n-\n-# If the INLINE_INFO tag is set to YES (the default) then a tag [inline] \n-# is inserted in the documentation for inline members.\n-\n-INLINE_INFO            = YES\n-\n-# If the SORT_MEMBER_DOCS tag is set to YES (the default) then doxygen \n-# will sort the (detailed) documentation of file and class members \n-# alphabetically by member name. If set to NO the members will appear in \n-# declaration order.\n-\n-SORT_MEMBER_DOCS       = YES\n-\n-# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the \n-# brief documentation of file, namespace and class members alphabetically \n-# by member name. If set to NO (the default) the members will appear in \n-# declaration order.\n-\n-SORT_BRIEF_DOCS        = NO\n-\n-# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen \n-# will sort the (brief and detailed) documentation of class members so that \n-# constructors and destructors are listed first. If set to NO (the default) \n-# the constructors will appear in the respective orders defined by \n-# SORT_MEMBER_DOCS and SORT_BRIEF_DOCS. \n-# This tag will be ignored for brief docs if SORT_BRIEF_DOCS is set to NO \n-# and ignored for detailed docs if SORT_MEMBER_DOCS is set to NO.\n-\n-SORT_MEMBERS_CTORS_1ST = NO\n-\n-# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the \n-# hierarchy of group names into alphabetical order. If set to NO (the default) \n-# the group names will appear in their defined order.\n-\n-SORT_GROUP_NAMES       = NO\n-\n-# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be \n-# sorted by fully-qualified names, including namespaces. If set to \n-# NO (the default), the class list will be sorted only by class name, \n-# not including the namespace part. \n-# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES. \n-# Note: This option applies only to the class list, not to the \n-# alphabetical list.\n-\n-SORT_BY_SCOPE_NAME     = NO\n-\n-# If the STRICT_PROTO_MATCHING option is enabled and doxygen fails to \n-# do proper type resolution of all parameters of a function it will reject a \n-# match between the prototype and the implementation of a member function even \n-# if there is only one candidate or it is obvious which candidate to choose \n-# by doing a simple string match. By disabling STRICT_PROTO_MATCHING doxygen \n-# will still accept a match between prototype and implementation in such cases.\n-\n-STRICT_PROTO_MATCHING  = NO\n-\n-# The GENERATE_TODOLIST tag can be used to enable (YES) or \n-# disable (NO) the todo list. This list is created by putting \\todo \n-# commands in the documentation.\n-\n-GENERATE_TODOLIST      = YES\n-\n-# The GENERATE_TESTLIST tag can be used to enable (YES) or \n-# disable (NO) the test list. This list is created by putting \\test \n-# commands in the documentation.\n-\n-GENERATE_TESTLIST      = YES\n-\n-# The GENERATE_BUGLIST tag can be used to enable (YES) or \n-# disable (NO) the bug list. This list is created by putting \\bug \n-# commands in the documentation.\n-\n-GENERATE_BUGLIST       = YES\n-\n-# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or \n-# disable (NO) the deprecated list. This list is created by putting \n-# \\deprecated commands in the documentation.\n-\n-GENERATE_DEPRECATEDLIST= YES\n-\n-# The ENABLED_SECTIONS tag can be used to enable conditional \n-# documentation sections, marked by \\if sectionname ... \\endif.\n-\n-ENABLED_SECTIONS       = \n-\n-# The MAX_INITIALIZER_LINES tag determines the maximum number of lines \n-# the initial value of a variable or macro consists of for it to appear in \n-# the documentation. If the initializer consists of more lines than specified \n-# here it will be hidden. Use a value of 0 to hide initializers completely. \n-# The appearance of the initializer of individual variables and macros in the \n-# documentation can be controlled using \\showinitializer or \\hideinitializer \n-# command in the documentation regardless of this setting.\n-\n-MAX_INITIALIZER_LINES  = 30\n-\n-# Set the SHOW_USED_FILES tag to NO to disable the list of files generated \n-# at the bottom of the documentation of classes and structs. If set to YES the \n-# list will mention the files that were used to generate the documentation.\n-\n-SHOW_USED_FILES        = YES\n-\n-# If the sources in your project are distributed over multiple directories \n-# then setting the SHOW_DIRECTORIES tag to YES will show the directory hierarchy \n-# in the documentation. The default is NO.\n-\n-SHOW_DIRECTORIES       = NO\n-\n-# Set the SHOW_FILES tag to NO to disable the generation of the Files page. \n-# This will remove the Files entry from the Quick Index and from the \n-# Folder Tree View (if specified). The default is YES.\n-\n-SHOW_FILES             = YES\n-\n-# Set the SHOW_NAMESPACES tag to NO to disable the generation of the \n-# Namespaces page.  This will remove the Namespaces entry from the Quick Index \n-# and from the Folder Tree View (if specified). The default is YES.\n-\n-SHOW_NAMESPACES        = YES\n-\n-# The FILE_VERSION_FILTER tag can be used to specify a program or script that \n-# doxygen should invoke to get the current version for each file (typically from \n-# the version control system). Doxygen will invoke the program by executing (via \n-# popen()) the command <command> <input-file>, where <command> is the value of \n-# the FILE_VERSION_FILTER tag, and <input-file> is the name of an input file \n-# provided by doxygen. Whatever the program writes to standard output \n-# is used as the file version. See the manual for examples.\n-\n-FILE_VERSION_FILTER    = \n-\n-# The LAYOUT_FILE tag can be used to specify a layout file which will be parsed \n-# by doxygen. The layout file controls the global structure of the generated \n-# output files in an output format independent way. The create the layout file \n-# that represents doxygen's defaults, run doxygen with the -l option. \n-# You can optionally specify a file name after the option, if omitted \n-# DoxygenLayout.xml will be used as the name of the layout file.\n-\n-LAYOUT_FILE            = \n-\n-#---------------------------------------------------------------------------\n-# configuration options related to warning and progress messages\n-#---------------------------------------------------------------------------\n-\n-# The QUIET tag can be used to turn on/off the messages that are generated \n-# by doxygen. Possible values are YES and NO. If left blank NO is used.\n-\n-QUIET                  = NO\n-\n-# The WARNINGS tag can be used to turn on/off the warning messages that are \n-# generated by doxygen. Possible values are YES and NO. If left blank \n-# NO is used.\n-\n-WARNINGS               = YES\n-\n-# If WARN_IF_UNDOCUMENTED is set to YES, then doxygen will generate warnings \n-# for undocumented members. If EXTRACT_ALL is set to YES then this flag will \n-# automatically be disabled.\n-\n-WARN_IF_UNDOCUMENTED   = YES\n-\n-# If WARN_IF_DOC_ERROR is set to YES, doxygen will generate warnings for \n-# potential errors in the documentation, such as not documenting some \n-# parameters in a documented function, or documenting parameters that \n-# don't exist or using markup commands wrongly.\n-\n-WARN_IF_DOC_ERROR      = YES\n-\n-# The WARN_NO_PARAMDOC option can be enabled to get warnings for \n-# functions that are documented, but have no documentation for their parameters \n-# or return value. If set to NO (the default) doxygen will only warn about \n-# wrong or incomplete parameter documentation, but not about the absence of \n-# documentation.\n-\n-WARN_NO_PARAMDOC       = NO\n-\n-# The WARN_FORMAT tag determines the format of the warning messages that \n-# doxygen can produce. The string should contain the $file, $line, and $text \n-# tags, which will be replaced by the file and line number from which the \n-# warning originated and the warning text. Optionally the format may contain \n-# $version, which will be replaced by the version of the file (if it could \n-# be obtained via FILE_VERSION_FILTER)\n-\n-WARN_FORMAT            = \"$file:$line: $text\"\n-\n-# The WARN_LOGFILE tag can be used to specify a file to which warning \n-# and error messages should be written. If left blank the output is written \n-# to stderr.\n-\n-WARN_LOGFILE           = \n-\n-#---------------------------------------------------------------------------\n-# configuration options related to the input files\n-#---------------------------------------------------------------------------\n-\n-# The INPUT tag can be used to specify the files and/or directories that contain \n-# documented source files. You may enter file names like \"myfile.cpp\" or \n-# directories like \"/usr/src/myproject\". Separate the files or directories \n-# with spaces.\n-\n-INPUT                  = src\n-\n-# This tag can be used to specify the character encoding of the source files \n-# that doxygen parses. Internally doxygen uses the UTF-8 encoding, which is \n-# also the default input encoding. Doxygen uses libiconv (or the iconv built \n-# into libc) for the transcoding. See http://www.gnu.org/software/libiconv for \n-# the list of possible encodings.\n-\n-INPUT_ENCODING         = UTF-8\n-\n-# If the value of the INPUT tag contains directories, you can use the \n-# FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp \n-# and *.h) to filter out the source-files in the directories. If left \n-# blank the following patterns are tested: \n-# *.c *.cc *.cxx *.cpp *.c++ *.d *.java *.ii *.ixx *.ipp *.i++ *.inl *.h *.hh \n-# *.hxx *.hpp *.h++ *.idl *.odl *.cs *.php *.php3 *.inc *.m *.mm *.dox *.py \n-# *.f90 *.f *.for *.vhd *.vhdl\n-\n-FILE_PATTERNS          = *.c \\\n-                         *.cc \\\n-                         *.cxx \\\n-                         *.cpp \\\n-                         *.c++ \\\n-                         *.d \\\n-                         *.java \\\n-                         *.ii \\\n-                         *.ixx \\\n-                         *.ipp \\\n-                         *.i++ \\\n-                         *.inl \\\n-                         *.h \\\n-                         *.hh \\\n-                         *.hxx \\\n-                         *.hpp \\\n-                         *.h++ \\\n-                         *.idl \\\n-                         *.odl \\\n-                         *.cs \\\n-                         *.php \\\n-                         *.php3 \\\n-                         *.inc \\\n-                         *.m \\\n-                         *.mm \\\n-                         *.dox \\\n-                         *.py \\\n-                         *.f90 \\\n-                         *.f \\\n-                         *.for \\\n-                         *.vhd \\\n-                         *.vhdl\n-\n-# The RECURSIVE tag can be used to turn specify whether or not subdirectories \n-# should be searched for input files as well. Possible values are YES and NO. \n-# If left blank NO is used.\n-\n-RECURSIVE              = YES\n-\n-# The EXCLUDE tag can be used to specify files and/or directories that should \n-# excluded from the INPUT source files. This way you can easily exclude a \n-# subdirectory from a directory tree whose root is specified with the INPUT tag.\n-\n-EXCLUDE                = src/leveldb src/json src/test /src/qt/test\n-\n-# The EXCLUDE_SYMLINKS tag can be used select whether or not files or \n-# directories that are symbolic links (a Unix file system feature) are excluded \n-# from the input.\n-\n-EXCLUDE_SYMLINKS       = NO\n-\n-# If the value of the INPUT tag contains directories, you can use the \n-# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude \n-# certain files from those directories. Note that the wildcards are matched \n-# against the file with absolute path, so to exclude all test directories \n-# for example use the pattern */test/*\n-\n-EXCLUDE_PATTERNS       = \n-\n-# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names \n-# (namespaces, classes, functions, etc.) that should be excluded from the \n-# output. The symbol name can be a fully qualified name, a word, or if the \n-# wildcard * is used, a substring. Examples: ANamespace, AClass, \n-# AClass::ANamespace, ANamespace::*Test\n-\n-EXCLUDE_SYMBOLS        = boost google\n-\n-# The EXAMPLE_PATH tag can be used to specify one or more files or \n-# directories that contain example code fragments that are included (see \n-# the \\include command).\n-\n-EXAMPLE_PATH           = \n-\n-# If the value of the EXAMPLE_PATH tag contains directories, you can use the \n-# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp \n-# and *.h) to filter out the source-files in the directories. If left \n-# blank all files are included.\n-\n-EXAMPLE_PATTERNS       = *\n-\n-# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be \n-# searched for input files to be used with the \\include or \\dontinclude \n-# commands irrespective of the value of the RECURSIVE tag. \n-# Possible values are YES and NO. If left blank NO is used.\n-\n-EXAMPLE_RECURSIVE      = NO\n-\n-# The IMAGE_PATH tag can be used to specify one or more files or \n-# directories that contain image that are included in the documentation (see \n-# the \\image command).\n-\n-IMAGE_PATH             = \n-\n-# The INPUT_FILTER tag can be used to specify a program that doxygen should \n-# invoke to filter for each input file. Doxygen will invoke the filter program \n-# by executing (via popen()) the command <filter> <input-file>, where <filter> \n-# is the value of the INPUT_FILTER tag, and <input-file> is the name of an \n-# input file. Doxygen will then use the output that the filter program writes \n-# to standard output.  If FILTER_PATTERNS is specified, this tag will be \n-# ignored.\n-\n-INPUT_FILTER           = \n-\n-# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern \n-# basis.  Doxygen will compare the file name with each pattern and apply the \n-# filter if there is a match.  The filters are a list of the form: \n-# pattern=filter (like *.cpp=my_cpp_filter). See INPUT_FILTER for further \n-# info on how filters are used. If FILTER_PATTERNS is empty or if \n-# non of the patterns match the file name, INPUT_FILTER is applied.\n-\n-FILTER_PATTERNS        = \n-\n-# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using \n-# INPUT_FILTER) will be used to filter the input files when producing source \n-# files to browse (i.e. when SOURCE_BROWSER is set to YES).\n-\n-FILTER_SOURCE_FILES    = NO\n-\n-# The FILTER_SOURCE_PATTERNS tag can be used to specify source filters per file \n-# pattern. A pattern will override the setting for FILTER_PATTERN (if any) \n-# and it is also possible to disable source filtering for a specific pattern \n-# using *.ext= (so without naming a filter). This option only has effect when \n-# FILTER_SOURCE_FILES is enabled.\n-\n-FILTER_SOURCE_PATTERNS = \n-\n-#---------------------------------------------------------------------------\n-# configuration options related to source browsing\n-#---------------------------------------------------------------------------\n-\n-# If the SOURCE_BROWSER tag is set to YES then a list of source files will \n-# be generated. Documented entities will be cross-referenced with these sources. \n-# Note: To get rid of all source code in the generated output, make sure also \n-# VERBATIM_HEADERS is set to NO.\n-\n-SOURCE_BROWSER         = YES\n-\n-# Setting the INLINE_SOURCES tag to YES will include the body \n-# of functions and classes directly in the documentation.\n-\n-INLINE_SOURCES         = NO\n-\n-# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct \n-# doxygen to hide any special comment blocks from generated source code \n-# fragments. Normal C and C++ comments will always remain visible.\n-\n-STRIP_CODE_COMMENTS    = YES\n-\n-# If the REFERENCED_BY_RELATION tag is set to YES \n-# then for each documented function all documented \n-# functions referencing it will be listed.\n-\n-REFERENCED_BY_RELATION = NO\n-\n-# If the REFERENCES_RELATION tag is set to YES \n-# then for each documented function all documented entities \n-# called/used by that function will be listed.\n-\n-REFERENCES_RELATION    = NO\n-\n-# If the REFERENCES_LINK_SOURCE tag is set to YES (the default) \n-# and SOURCE_BROWSER tag is set to YES, then the hyperlinks from \n-# functions in REFERENCES_RELATION and REFERENCED_BY_RELATION lists will \n-# link to the source code.  Otherwise they will link to the documentation.\n-\n-REFERENCES_LINK_SOURCE = YES\n-\n-# If the USE_HTAGS tag is set to YES then the references to source code \n-# will point to the HTML generated by the htags(1) tool instead of doxygen \n-# built-in source browser. The htags tool is part of GNU's global source \n-# tagging system (see http://www.gnu.org/software/global/global.html). You \n-# will need version 4.8.6 or higher.\n-\n-USE_HTAGS              = NO\n-\n-# If the VERBATIM_HEADERS tag is set to YES (the default) then Doxygen \n-# will generate a verbatim copy of the header file for each class for \n-# which an include is specified. Set to NO to disable this.\n-\n-VERBATIM_HEADERS       = YES\n-\n-#---------------------------------------------------------------------------\n-# configuration options related to the alphabetical class index\n-#---------------------------------------------------------------------------\n-\n-# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index \n-# of all compounds will be generated. Enable this if the project \n-# contains a lot of classes, structs, unions or interfaces.\n-\n-ALPHABETICAL_INDEX     = YES\n-\n-# If the alphabetical index is enabled (see ALPHABETICAL_INDEX) then \n-# the COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns \n-# in which this list will be split (can be a number in the range [1..20])\n-\n-COLS_IN_ALPHA_INDEX    = 5\n-\n-# In case all classes in a project start with a common prefix, all \n-# classes will be put under the same header in the alphabetical index. \n-# The IGNORE_PREFIX tag can be used to specify one or more prefixes that \n-# should be ignored while generating the index headers.\n-\n-IGNORE_PREFIX          = \n-\n-#---------------------------------------------------------------------------\n-# configuration options related to the HTML output\n-#---------------------------------------------------------------------------\n-\n-# If the GENERATE_HTML tag is set to YES (the default) Doxygen will \n-# generate HTML output.\n-\n-GENERATE_HTML          = YES\n-\n-# The HTML_OUTPUT tag is used to specify where the HTML docs will be put. \n-# If a relative path is entered the value of OUTPUT_DIRECTORY will be \n-# put in front of it. If left blank `html' will be used as the default path.\n-\n-HTML_OUTPUT            = html\n-\n-# The HTML_FILE_EXTENSION tag can be used to specify the file extension for \n-# each generated HTML page (for example: .htm,.php,.asp). If it is left blank \n-# doxygen will generate files with .html extension.\n-\n-HTML_FILE_EXTENSION    = .html\n-\n-# The HTML_HEADER tag can be used to specify a personal HTML header for \n-# each generated HTML page. If it is left blank doxygen will generate a \n-# standard header. Note that when using a custom header you are responsible \n-# for the proper inclusion of any scripts and style sheets that doxygen \n-# needs, which is dependent on the configuration options used. \n-# It is adviced to generate a default header using \"doxygen -w html \n-# header.html footer.html stylesheet.css YourConfigFile\" and then modify \n-# that header. Note that the header is subject to change so you typically \n-# have to redo this when upgrading to a newer version of doxygen or when\n-# changing the value of configuration settings such as GENERATE_TREEVIEW!\n-\n-HTML_HEADER            = \n-\n-# The HTML_FOOTER tag can be used to specify a personal HTML footer for \n-# each generated HTML page. If it is left blank doxygen will generate a \n-# standard footer.\n-\n-HTML_FOOTER            = \n-\n-# The HTML_STYLESHEET tag can be used to specify a user-defined cascading \n-# style sheet that is used by each HTML page. It can be used to \n-# fine-tune the look of the HTML output. If the tag is left blank doxygen \n-# will generate a default style sheet. Note that doxygen will try to copy \n-# the style sheet file to the HTML output directory, so don't put your own \n-# stylesheet in the HTML output directory as well, or it will be erased!\n-\n-HTML_STYLESHEET        = \n-\n-# The HTML_EXTRA_FILES tag can be used to specify one or more extra images or \n-# other source files which should be copied to the HTML output directory. Note \n-# that these files will be copied to the base HTML output directory. Use the \n-# $relpath$ marker in the HTML_HEADER and/or HTML_FOOTER files to load these \n-# files. In the HTML_STYLESHEET file, use the file name only. Also note that \n-# the files will be copied as-is; there are no commands or markers available.\n-\n-HTML_EXTRA_FILES       = \n-\n-# The HTML_COLORSTYLE_HUE tag controls the color of the HTML output. \n-# Doxygen will adjust the colors in the stylesheet and background images \n-# according to this color. Hue is specified as an angle on a colorwheel, \n-# see http://en.wikipedia.org/wiki/Hue for more information. \n-# For instance the value 0 represents red, 60 is yellow, 120 is green, \n-# 180 is cyan, 240 is blue, 300 purple, and 360 is red again. \n-# The allowed range is 0 to 359.\n-\n-HTML_COLORSTYLE_HUE    = 220\n-\n-# The HTML_COLORSTYLE_SAT tag controls the purity (or saturation) of \n-# the colors in the HTML output. For a value of 0 the output will use \n-# grayscales only. A value of 255 will produce the most vivid colors.\n-\n-HTML_COLORSTYLE_SAT    = 100\n-\n-# The HTML_COLORSTYLE_GAMMA tag controls the gamma correction applied to \n-# the luminance component of the colors in the HTML output. Values below \n-# 100 gradually make the output lighter, whereas values above 100 make \n-# the output darker. The value divided by 100 is the actual gamma applied, \n-# so 80 represents a gamma of 0.8, The value 220 represents a gamma of 2.2, \n-# and 100 does not change the gamma.\n-\n-HTML_COLORSTYLE_GAMMA  = 80\n-\n-# If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML \n-# page will contain the date and time when the page was generated. Setting \n-# this to NO can help when comparing the output of multiple runs.\n-\n-HTML_TIMESTAMP         = YES\n-\n-# If the HTML_ALIGN_MEMBERS tag is set to YES, the members of classes, \n-# files or namespaces will be aligned in HTML using tables. If set to \n-# NO a bullet list will be used.\n-\n-HTML_ALIGN_MEMBERS     = YES\n-\n-# If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML \n-# documentation will contain sections that can be hidden and shown after the \n-# page has loaded. For this to work a browser that supports \n-# JavaScript and DHTML is required (for instance Mozilla 1.0+, Firefox \n-# Netscape 6.0+, Internet explorer 5.0+, Konqueror, or Safari).\n-\n-HTML_DYNAMIC_SECTIONS  = NO\n-\n-# If the GENERATE_DOCSET tag is set to YES, additional index files \n-# will be generated that can be used as input for Apple's Xcode 3 \n-# integrated development environment, introduced with OSX 10.5 (Leopard). \n-# To create a documentation set, doxygen will generate a Makefile in the \n-# HTML output directory. Running make will produce the docset in that \n-# directory and running \"make install\" will install the docset in \n-# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find \n-# it at startup. \n-# See http://developer.apple.com/tools/creatingdocsetswithdoxygen.html \n-# for more information.\n-\n-GENERATE_DOCSET        = NO\n-\n-# When GENERATE_DOCSET tag is set to YES, this tag determines the name of the \n-# feed. A documentation feed provides an umbrella under which multiple \n-# documentation sets from a single provider (such as a company or product suite) \n-# can be grouped.\n-\n-DOCSET_FEEDNAME        = \"Doxygen generated docs\"\n-\n-# When GENERATE_DOCSET tag is set to YES, this tag specifies a string that \n-# should uniquely identify the documentation set bundle. This should be a \n-# reverse domain-name style string, e.g. com.mycompany.MyDocSet. Doxygen \n-# will append .docset to the name.\n-\n-DOCSET_BUNDLE_ID       = org.doxygen.Project\n-\n-# When GENERATE_PUBLISHER_ID tag specifies a string that should uniquely identify \n-# the documentation publisher. This should be a reverse domain-name style \n-# string, e.g. com.mycompany.MyDocSet.documentation.\n-\n-DOCSET_PUBLISHER_ID    = org.doxygen.Publisher\n-\n-# The GENERATE_PUBLISHER_NAME tag identifies the documentation publisher.\n-\n-DOCSET_PUBLISHER_NAME  = Publisher\n-\n-# If the GENERATE_HTMLHELP tag is set to YES, additional index files \n-# will be generated that can be used as input for tools like the \n-# Microsoft HTML help workshop to generate a compiled HTML help file (.chm) \n-# of the generated HTML documentation.\n-\n-GENERATE_HTMLHELP      = NO\n-\n-# If the GENERATE_HTMLHELP tag is set to YES, the CHM_FILE tag can \n-# be used to specify the file name of the resulting .chm file. You \n-# can add a path in front of the file if the result should not be \n-# written to the html output directory.\n-\n-CHM_FILE               = \n-\n-# If the GENERATE_HTMLHELP tag is set to YES, the HHC_LOCATION tag can \n-# be used to specify the location (absolute path including file name) of \n-# the HTML help compiler (hhc.exe). If non-empty doxygen will try to run \n-# the HTML help compiler on the generated index.hhp.\n-\n-HHC_LOCATION           = \n-\n-# If the GENERATE_HTMLHELP tag is set to YES, the GENERATE_CHI flag \n-# controls if a separate .chi index file is generated (YES) or that \n-# it should be included in the master .chm file (NO).\n-\n-GENERATE_CHI           = NO\n-\n-# If the GENERATE_HTMLHELP tag is set to YES, the CHM_INDEX_ENCODING \n-# is used to encode HtmlHelp index (hhk), content (hhc) and project file \n-# content.\n-\n-CHM_INDEX_ENCODING     = \n-\n-# If the GENERATE_HTMLHELP tag is set to YES, the BINARY_TOC flag \n-# controls whether a binary table of contents is generated (YES) or a \n-# normal table of contents (NO) in the .chm file.\n-\n-BINARY_TOC             = NO\n-\n-# The TOC_EXPAND flag can be set to YES to add extra items for group members \n-# to the contents of the HTML help documentation and to the tree view.\n-\n-TOC_EXPAND             = NO\n-\n-# If the GENERATE_QHP tag is set to YES and both QHP_NAMESPACE and \n-# QHP_VIRTUAL_FOLDER are set, an additional index file will be generated \n-# that can be used as input for Qt's qhelpgenerator to generate a \n-# Qt Compressed Help (.qch) of the generated HTML documentation.\n-\n-GENERATE_QHP           = NO\n-\n-# If the QHG_LOCATION tag is specified, the QCH_FILE tag can \n-# be used to specify the file name of the resulting .qch file. \n-# The path specified is relative to the HTML output folder.\n-\n-QCH_FILE               = \n-\n-# The QHP_NAMESPACE tag specifies the namespace to use when generating \n-# Qt Help Project output. For more information please see \n-# http://doc.trolltech.com/qthelpproject.html#namespace\n-\n-QHP_NAMESPACE          = org.doxygen.Project\n-\n-# The QHP_VIRTUAL_FOLDER tag specifies the namespace to use when generating \n-# Qt Help Project output. For more information please see \n-# http://doc.trolltech.com/qthelpproject.html#virtual-folders\n-\n-QHP_VIRTUAL_FOLDER     = doc\n-\n-# If QHP_CUST_FILTER_NAME is set, it specifies the name of a custom filter to \n-# add. For more information please see \n-# http://doc.trolltech.com/qthelpproject.html#custom-filters\n-\n-QHP_CUST_FILTER_NAME   = \n-\n-# The QHP_CUST_FILT_ATTRS tag specifies the list of the attributes of the \n-# custom filter to add. For more information please see \n-# <a href=\"http://doc.trolltech.com/qthelpproject.html#custom-filters\"> \n-# Qt Help Project / Custom Filters</a>.\n-\n-QHP_CUST_FILTER_ATTRS  = \n-\n-# The QHP_SECT_FILTER_ATTRS tag specifies the list of the attributes this \n-# project's \n-# filter section matches. \n-# <a href=\"http://doc.trolltech.com/qthelpproject.html#filter-attributes\"> \n-# Qt Help Project / Filter Attributes</a>.\n-\n-QHP_SECT_FILTER_ATTRS  = \n-\n-# If the GENERATE_QHP tag is set to YES, the QHG_LOCATION tag can \n-# be used to specify the location of Qt's qhelpgenerator. \n-# If non-empty doxygen will try to run qhelpgenerator on the generated \n-# .qhp file.\n-\n-QHG_LOCATION           = \n-\n-# If the GENERATE_ECLIPSEHELP tag is set to YES, additional index files  \n-# will be generated, which together with the HTML files, form an Eclipse help \n-# plugin. To install this plugin and make it available under the help contents \n-# menu in Eclipse, the contents of the directory containing the HTML and XML \n-# files needs to be copied into the plugins directory of eclipse. The name of \n-# the directory within the plugins directory should be the same as \n-# the ECLIPSE_DOC_ID value. After copying Eclipse needs to be restarted before \n-# the help appears.\n-\n-GENERATE_ECLIPSEHELP   = NO\n-\n-# A unique identifier for the eclipse help plugin. When installing the plugin \n-# the directory name containing the HTML and XML files should also have \n-# this name.\n-\n-ECLIPSE_DOC_ID         = org.doxygen.Project\n-\n-# The DISABLE_INDEX tag can be used to turn on/off the condensed index at \n-# top of each HTML page. The value NO (the default) enables the index and \n-# the value YES disables it.\n-\n-DISABLE_INDEX          = NO\n-\n-# The ENUM_VALUES_PER_LINE tag can be used to set the number of enum values \n-# (range [0,1..20]) that doxygen will group on one line in the generated HTML \n-# documentation. Note that a value of 0 will completely suppress the enum \n-# values from appearing in the overview section.\n-\n-ENUM_VALUES_PER_LINE   = 4\n-\n-# The GENERATE_TREEVIEW tag is used to specify whether a tree-like index \n-# structure should be generated to display hierarchical information. \n-# If the tag value is set to YES, a side panel will be generated \n-# containing a tree-like index structure (just like the one that \n-# is generated for HTML Help). For this to work a browser that supports \n-# JavaScript, DHTML, CSS and frames is required (i.e. any modern browser). \n-# Windows users are probably better off using the HTML help feature.\n-\n-GENERATE_TREEVIEW      = NO\n-\n-# By enabling USE_INLINE_TREES, doxygen will generate the Groups, Directories, \n-# and Class Hierarchy pages using a tree view instead of an ordered list.\n-\n-USE_INLINE_TREES       = NO\n-\n-# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be \n-# used to set the initial width (in pixels) of the frame in which the tree \n-# is shown.\n-\n-TREEVIEW_WIDTH         = 250\n-\n-# When the EXT_LINKS_IN_WINDOW option is set to YES doxygen will open \n-# links to external symbols imported via tag files in a separate window.\n-\n-EXT_LINKS_IN_WINDOW    = NO\n-\n-# Use this tag to change the font size of Latex formulas included \n-# as images in the HTML documentation. The default is 10. Note that \n-# when you change the font size after a successful doxygen run you need \n-# to manually remove any form_*.png images from the HTML output directory \n-# to force them to be regenerated.\n-\n-FORMULA_FONTSIZE       = 10\n-\n-# Use the FORMULA_TRANPARENT tag to determine whether or not the images \n-# generated for formulas are transparent PNGs. Transparent PNGs are \n-# not supported properly for IE 6.0, but are supported on all modern browsers. \n-# Note that when changing this option you need to delete any form_*.png files \n-# in the HTML output before the changes have effect.\n-\n-FORMULA_TRANSPARENT    = YES\n-\n-# Enable the USE_MATHJAX option to render LaTeX formulas using MathJax \n-# (see http://www.mathjax.org) which uses client side Javascript for the \n-# rendering instead of using prerendered bitmaps. Use this if you do not \n-# have LaTeX installed or if you want to formulas look prettier in the HTML \n-# output. When enabled you also need to install MathJax separately and \n-# configure the path to it using the MATHJAX_RELPATH option.\n-\n-USE_MATHJAX            = NO\n-\n-# When MathJax is enabled you need to specify the location relative to the \n-# HTML output directory using the MATHJAX_RELPATH option. The destination \n-# directory should contain the MathJax.js script. For instance, if the mathjax \n-# directory is located at the same level as the HTML output directory, then \n-# MATHJAX_RELPATH should be ../mathjax. The default value points to the \n-# mathjax.org site, so you can quickly see the result without installing \n-# MathJax, but it is strongly recommended to install a local copy of MathJax \n-# before deployment.\n-\n-MATHJAX_RELPATH        = http://www.mathjax.org/mathjax\n-\n-# When the SEARCHENGINE tag is enabled doxygen will generate a search box \n-# for the HTML output. The underlying search engine uses javascript \n-# and DHTML and should work on any modern browser. Note that when using \n-# HTML help (GENERATE_HTMLHELP), Qt help (GENERATE_QHP), or docsets \n-# (GENERATE_DOCSET) there is already a search function so this one should \n-# typically be disabled. For large projects the javascript based search engine \n-# can be slow, then enabling SERVER_BASED_SEARCH may provide a better solution.\n-\n-SEARCHENGINE           = YES\n-\n-# When the SERVER_BASED_SEARCH tag is enabled the search engine will be \n-# implemented using a PHP enabled web server instead of at the web client \n-# using Javascript. Doxygen will generate the search PHP script and index \n-# file to put on the web server. The advantage of the server \n-# based approach is that it scales better to large projects and allows \n-# full text search. The disadvantages are that it is more difficult to setup \n-# and does not have live searching capabilities.\n-\n-SERVER_BASED_SEARCH    = NO\n-\n-#---------------------------------------------------------------------------\n-# configuration options related to the LaTeX output\n-#---------------------------------------------------------------------------\n-\n-# If the GENERATE_LATEX tag is set to YES (the default) Doxygen will \n-# generate Latex output.\n-\n-GENERATE_LATEX         = NO\n-\n-# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put. \n-# If a relative path is entered the value of OUTPUT_DIRECTORY will be \n-# put in front of it. If left blank `latex' will be used as the default path.\n-\n-LATEX_OUTPUT           = latex\n-\n-# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be \n-# invoked. If left blank `latex' will be used as the default command name. \n-# Note that when enabling USE_PDFLATEX this option is only used for \n-# generating bitmaps for formulas in the HTML output, but not in the \n-# Makefile that is written to the output directory.\n-\n-LATEX_CMD_NAME         = latex\n-\n-# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to \n-# generate index for LaTeX. If left blank `makeindex' will be used as the \n-# default command name.\n-\n-MAKEINDEX_CMD_NAME     = makeindex\n-\n-# If the COMPACT_LATEX tag is set to YES Doxygen generates more compact \n-# LaTeX documents. This may be useful for small projects and may help to \n-# save some trees in general.\n-\n-COMPACT_LATEX          = NO\n-\n-# The PAPER_TYPE tag can be used to set the paper type that is used \n-# by the printer. Possible values are: a4, letter, legal and \n-# executive. If left blank a4wide will be used.\n-\n-PAPER_TYPE             = a4\n-\n-# The EXTRA_PACKAGES tag can be to specify one or more names of LaTeX \n-# packages that should be included in the LaTeX output.\n-\n-EXTRA_PACKAGES         = \n-\n-# The LATEX_HEADER tag can be used to specify a personal LaTeX header for \n-# the generated latex document. The header should contain everything until \n-# the first chapter. If it is left blank doxygen will generate a \n-# standard header. Notice: only use this tag if you know what you are doing!\n-\n-LATEX_HEADER           = \n-\n-# The LATEX_FOOTER tag can be used to specify a personal LaTeX footer for \n-# the generated latex document. The footer should contain everything after \n-# the last chapter. If it is left blank doxygen will generate a \n-# standard footer. Notice: only use this tag if you know what you are doing!\n-\n-LATEX_FOOTER           = \n-\n-# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated \n-# is prepared for conversion to pdf (using ps2pdf). The pdf file will \n-# contain links (just like the HTML output) instead of page references \n-# This makes the output suitable for online browsing using a pdf viewer.\n-\n-PDF_HYPERLINKS         = YES\n-\n-# If the USE_PDFLATEX tag is set to YES, pdflatex will be used instead of \n-# plain latex in the generated Makefile. Set this option to YES to get a \n-# higher quality PDF documentation.\n-\n-USE_PDFLATEX           = YES\n-\n-# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\\\batchmode. \n-# command to the generated LaTeX files. This will instruct LaTeX to keep \n-# running if errors occur, instead of asking the user for help. \n-# This option is also used when generating formulas in HTML.\n-\n-LATEX_BATCHMODE        = NO\n-\n-# If LATEX_HIDE_INDICES is set to YES then doxygen will not \n-# include the index chapters (such as File Index, Compound Index, etc.) \n-# in the output.\n-\n-LATEX_HIDE_INDICES     = NO\n-\n-# If LATEX_SOURCE_CODE is set to YES then doxygen will include \n-# source code with syntax highlighting in the LaTeX output. \n-# Note that which sources are shown also depends on other settings \n-# such as SOURCE_BROWSER.\n-\n-LATEX_SOURCE_CODE      = NO\n-\n-#---------------------------------------------------------------------------\n-# configuration options related to the RTF output\n-#---------------------------------------------------------------------------\n-\n-# If the GENERATE_RTF tag is set to YES Doxygen will generate RTF output \n-# The RTF output is optimized for Word 97 and may not look very pretty with \n-# other RTF readers or editors.\n-\n-GENERATE_RTF           = NO\n-\n-# The RTF_OUTPUT tag is used to specify where the RTF docs will be put. \n-# If a relative path is entered the value of OUTPUT_DIRECTORY will be \n-# put in front of it. If left blank `rtf' will be used as the default path.\n-\n-RTF_OUTPUT             = rtf\n-\n-# If the COMPACT_RTF tag is set to YES Doxygen generates more compact \n-# RTF documents. This may be useful for small projects and may help to \n-# save some trees in general.\n-\n-COMPACT_RTF            = NO\n-\n-# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated \n-# will contain hyperlink fields. The RTF file will \n-# contain links (just like the HTML output) instead of page references. \n-# This makes the output suitable for online browsing using WORD or other \n-# programs which support those fields. \n-# Note: wordpad (write) and others do not support links.\n-\n-RTF_HYPERLINKS         = NO\n-\n-# Load stylesheet definitions from file. Syntax is similar to doxygen's \n-# config file, i.e. a series of assignments. You only have to provide \n-# replacements, missing definitions are set to their default value.\n-\n-RTF_STYLESHEET_FILE    = \n-\n-# Set optional variables used in the generation of an rtf document. \n-# Syntax is similar to doxygen's config file.\n-\n-RTF_EXTENSIONS_FILE    = \n-\n-#---------------------------------------------------------------------------\n-# configuration options related to the man page output\n-#---------------------------------------------------------------------------\n-\n-# If the GENERATE_MAN tag is set to YES (the default) Doxygen will \n-# generate man pages\n-\n-GENERATE_MAN           = NO\n-\n-# The MAN_OUTPUT tag is used to specify where the man pages will be put. \n-# If a relative path is entered the value of OUTPUT_DIRECTORY will be \n-# put in front of it. If left blank `man' will be used as the default path.\n-\n-MAN_OUTPUT             = man\n-\n-# The MAN_EXTENSION tag determines the extension that is added to \n-# the generated man pages (default is the subroutine's section .3)\n-\n-MAN_EXTENSION          = .3\n-\n-# If the MAN_LINKS tag is set to YES and Doxygen generates man output, \n-# then it will generate one additional man file for each entity \n-# documented in the real man page(s). These additional files \n-# only source the real man page, but without them the man command \n-# would be unable to find the correct page. The default is NO.\n-\n-MAN_LINKS              = NO\n-\n-#---------------------------------------------------------------------------\n-# configuration options related to the XML output\n-#---------------------------------------------------------------------------\n-\n-# If the GENERATE_XML tag is set to YES Doxygen will \n-# generate an XML file that captures the structure of \n-# the code including all documentation.\n-\n-GENERATE_XML           = NO\n-\n-# The XML_OUTPUT tag is used to specify where the XML pages will be put. \n-# If a relative path is entered the value of OUTPUT_DIRECTORY will be \n-# put in front of it. If left blank `xml' will be used as the default path.\n-\n-XML_OUTPUT             = xml\n-\n-# The XML_SCHEMA tag can be used to specify an XML schema, \n-# which can be used by a validating XML parser to check the \n-# syntax of the XML files.\n-\n-XML_SCHEMA             = \n-\n-# The XML_DTD tag can be used to specify an XML DTD, \n-# which can be used by a validating XML parser to check the \n-# syntax of the XML files.\n-\n-XML_DTD                = \n-\n-# If the XML_PROGRAMLISTING tag is set to YES Doxygen will \n-# dump the program listings (including syntax highlighting \n-# and cross-referencing information) to the XML output. Note that \n-# enabling this will significantly increase the size of the XML output.\n-\n-XML_PROGRAMLISTING     = YES\n-\n-#---------------------------------------------------------------------------\n-# configuration options for the AutoGen Definitions output\n-#---------------------------------------------------------------------------\n-\n-# If the GENERATE_AUTOGEN_DEF tag is set to YES Doxygen will \n-# generate an AutoGen Definitions (see autogen.sf.net) file \n-# that captures the structure of the code including all \n-# documentation. Note that this feature is still experimental \n-# and incomplete at the moment.\n-\n-GENERATE_AUTOGEN_DEF   = NO\n-\n-#---------------------------------------------------------------------------\n-# configuration options related to the Perl module output\n-#---------------------------------------------------------------------------\n-\n-# If the GENERATE_PERLMOD tag is set to YES Doxygen will \n-# generate a Perl module file that captures the structure of \n-# the code including all documentation. Note that this \n-# feature is still experimental and incomplete at the \n-# moment.\n-\n-GENERATE_PERLMOD       = NO\n-\n-# If the PERLMOD_LATEX tag is set to YES Doxygen will generate \n-# the necessary Makefile rules, Perl scripts and LaTeX code to be able \n-# to generate PDF and DVI output from the Perl module output.\n-\n-PERLMOD_LATEX          = NO\n-\n-# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be \n-# nicely formatted so it can be parsed by a human reader.  This is useful \n-# if you want to understand what is going on.  On the other hand, if this \n-# tag is set to NO the size of the Perl module output will be much smaller \n-# and Perl will parse it just the same.\n-\n-PERLMOD_PRETTY         = YES\n-\n-# The names of the make variables in the generated doxyrules.make file \n-# are prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX. \n-# This is useful so different doxyrules.make files included by the same \n-# Makefile don't overwrite each other's variables.\n-\n-PERLMOD_MAKEVAR_PREFIX = \n-\n-#---------------------------------------------------------------------------\n-# Configuration options related to the preprocessor\n-#---------------------------------------------------------------------------\n-\n-# If the ENABLE_PREPROCESSING tag is set to YES (the default) Doxygen will \n-# evaluate all C-preprocessor directives found in the sources and include \n-# files.\n-\n-ENABLE_PREPROCESSING   = YES\n-\n-# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro \n-# names in the source code. If set to NO (the default) only conditional \n-# compilation will be performed. Macro expansion can be done in a controlled \n-# way by setting EXPAND_ONLY_PREDEF to YES.\n-\n-MACRO_EXPANSION        = NO\n-\n-# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES \n-# then the macro expansion is limited to the macros specified with the \n-# PREDEFINED and EXPAND_AS_DEFINED tags.\n-\n-EXPAND_ONLY_PREDEF     = NO\n-\n-# If the SEARCH_INCLUDES tag is set to YES (the default) the includes files \n-# pointed to by INCLUDE_PATH will be searched when a #include is found.\n-\n-SEARCH_INCLUDES        = YES\n-\n-# The INCLUDE_PATH tag can be used to specify one or more directories that \n-# contain include files that are not input files but should be processed by \n-# the preprocessor.\n-\n-INCLUDE_PATH           = \n-\n-# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard \n-# patterns (like *.h and *.hpp) to filter out the header-files in the \n-# directories. If left blank, the patterns specified with FILE_PATTERNS will \n-# be used.\n-\n-INCLUDE_FILE_PATTERNS  = \n-\n-# The PREDEFINED tag can be used to specify one or more macro names that \n-# are defined before the preprocessor is started (similar to the -D option of \n-# gcc). The argument of the tag is a list of macros of the form: name \n-# or name=definition (no spaces). If the definition and the = are \n-# omitted =1 is assumed. To prevent a macro definition from being \n-# undefined via #undef or recursively expanded use the := operator \n-# instead of the = operator.\n-\n-PREDEFINED             = \n-\n-# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then \n-# this tag can be used to specify a list of macro names that should be expanded. \n-# The macro definition that is found in the sources will be used. \n-# Use the PREDEFINED tag if you want to use a different macro definition that \n-# overrules the definition found in the source code.\n-\n-EXPAND_AS_DEFINED      = \n-\n-# If the SKIP_FUNCTION_MACROS tag is set to YES (the default) then \n-# doxygen's preprocessor will remove all references to function-like macros \n-# that are alone on a line, have an all uppercase name, and do not end with a \n-# semicolon, because these will confuse the parser if not removed.\n-\n-SKIP_FUNCTION_MACROS   = YES\n-\n-#---------------------------------------------------------------------------\n-# Configuration::additions related to external references\n-#---------------------------------------------------------------------------\n-\n-# The TAGFILES option can be used to specify one or more tagfiles. \n-# Optionally an initial location of the external documentation \n-# can be added for each tagfile. The format of a tag file without \n-# this location is as follows: \n-#   TAGFILES = file1 file2 ... \n-# Adding location for the tag files is done as follows: \n-#   TAGFILES = file1=loc1 \"file2 = loc2\" ... \n-# where \"loc1\" and \"loc2\" can be relative or absolute paths or \n-# URLs. If a location is present for each tag, the installdox tool \n-# does not have to be run to correct the links. \n-# Note that each tag file must have a unique name \n-# (where the name does NOT include the path) \n-# If a tag file is not located in the directory in which doxygen \n-# is run, you must also specify the path to the tagfile here.\n-\n-TAGFILES               = \n-\n-# When a file name is specified after GENERATE_TAGFILE, doxygen will create \n-# a tag file that is based on the input files it reads.\n-\n-GENERATE_TAGFILE       = \n-\n-# If the ALLEXTERNALS tag is set to YES all external classes will be listed \n-# in the class index. If set to NO only the inherited external classes \n-# will be listed.\n-\n-ALLEXTERNALS           = NO\n-\n-# If the EXTERNAL_GROUPS tag is set to YES all external groups will be listed \n-# in the modules index. If set to NO, only the current project's groups will \n-# be listed.\n-\n-EXTERNAL_GROUPS        = YES\n-\n-# The PERL_PATH should be the absolute path and name of the perl script \n-# interpreter (i.e. the result of `which perl').\n-\n-PERL_PATH              = /usr/bin/perl\n-\n-#---------------------------------------------------------------------------\n-# Configuration options related to the dot tool\n-#---------------------------------------------------------------------------\n-\n-# If the CLASS_DIAGRAMS tag is set to YES (the default) Doxygen will \n-# generate a inheritance diagram (in HTML, RTF and LaTeX) for classes with base \n-# or super classes. Setting the tag to NO turns the diagrams off. Note that \n-# this option also works with HAVE_DOT disabled, but it is recommended to \n-# install and use dot, since it yields more powerful graphs.\n-\n-CLASS_DIAGRAMS         = YES\n-\n-# You can define message sequence charts within doxygen comments using the \\msc \n-# command. Doxygen will then run the mscgen tool (see \n-# http://www.mcternan.me.uk/mscgen/) to produce the chart and insert it in the \n-# documentation. The MSCGEN_PATH tag allows you to specify the directory where \n-# the mscgen tool resides. If left empty the tool is assumed to be found in the \n-# default search path.\n-\n-MSCGEN_PATH            = \n-\n-# If set to YES, the inheritance and collaboration graphs will hide \n-# inheritance and usage relations if the target is undocumented \n-# or is not a class.\n-\n-HIDE_UNDOC_RELATIONS   = YES\n-\n-# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is \n-# available from the path. This tool is part of Graphviz, a graph visualization \n-# toolkit from AT&T and Lucent Bell Labs. The other options in this section \n-# have no effect if this option is set to NO (the default)\n-\n-HAVE_DOT               = YES\n-\n-# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is \n-# allowed to run in parallel. When set to 0 (the default) doxygen will \n-# base this on the number of processors available in the system. You can set it \n-# explicitly to a value larger than 0 to get control over the balance \n-# between CPU load and processing speed.\n-\n-DOT_NUM_THREADS        = 0\n-\n-# By default doxygen will write a font called Helvetica to the output \n-# directory and reference it in all dot files that doxygen generates. \n-# When you want a differently looking font you can specify the font name \n-# using DOT_FONTNAME. You need to make sure dot is able to find the font, \n-# which can be done by putting it in a standard location or by setting the \n-# DOTFONTPATH environment variable or by setting DOT_FONTPATH to the directory \n-# containing the font.\n-\n-DOT_FONTNAME           = Helvetica\n-\n-# The DOT_FONTSIZE tag can be used to set the size of the font of dot graphs. \n-# The default size is 10pt.\n-\n-DOT_FONTSIZE           = 10\n-\n-# By default doxygen will tell dot to use the output directory to look for the \n-# FreeSans.ttf font (which doxygen will put there itself). If you specify a \n-# different font using DOT_FONTNAME you can set the path where dot \n-# can find it using this tag.\n-\n-DOT_FONTPATH           = \n-\n-# If the CLASS_GRAPH and HAVE_DOT tags are set to YES then doxygen \n-# will generate a graph for each documented class showing the direct and \n-# indirect inheritance relations. Setting this tag to YES will force the \n-# the CLASS_DIAGRAMS tag to NO.\n-\n-CLASS_GRAPH            = YES\n-\n-# If the COLLABORATION_GRAPH and HAVE_DOT tags are set to YES then doxygen \n-# will generate a graph for each documented class showing the direct and \n-# indirect implementation dependencies (inheritance, containment, and \n-# class references variables) of the class with other documented classes.\n-\n-COLLABORATION_GRAPH    = YES\n-\n-# If the GROUP_GRAPHS and HAVE_DOT tags are set to YES then doxygen \n-# will generate a graph for groups, showing the direct groups dependencies\n-\n-GROUP_GRAPHS           = YES\n-\n-# If the UML_LOOK tag is set to YES doxygen will generate inheritance and \n-# collaboration diagrams in a style similar to the OMG's Unified Modeling \n-# Language.\n-\n-UML_LOOK               = NO\n-\n-# If set to YES, the inheritance and collaboration graphs will show the \n-# relations between templates and their instances.\n-\n-TEMPLATE_RELATIONS     = NO\n-\n-# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDE_GRAPH, and HAVE_DOT \n-# tags are set to YES then doxygen will generate a graph for each documented \n-# file showing the direct and indirect include dependencies of the file with \n-# other documented files.\n-\n-INCLUDE_GRAPH          = YES\n-\n-# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDED_BY_GRAPH, and \n-# HAVE_DOT tags are set to YES then doxygen will generate a graph for each \n-# documented header file showing the documented files that directly or \n-# indirectly include this file.\n-\n-INCLUDED_BY_GRAPH      = YES\n-\n-# If the CALL_GRAPH and HAVE_DOT options are set to YES then \n-# doxygen will generate a call dependency graph for every global function \n-# or class method. Note that enabling this option will significantly increase \n-# the time of a run. So in most cases it will be better to enable call graphs \n-# for selected functions only using the \\callgraph command.\n-\n-CALL_GRAPH             = YES\n-\n-# If the CALLER_GRAPH and HAVE_DOT tags are set to YES then \n-# doxygen will generate a caller dependency graph for every global function \n-# or class method. Note that enabling this option will significantly increase \n-# the time of a run. So in most cases it will be better to enable caller \n-# graphs for selected functions only using the \\callergraph command.\n-\n-CALLER_GRAPH           = YES\n-\n-# If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen \n-# will generate a graphical hierarchy of all classes instead of a textual one.\n-\n-GRAPHICAL_HIERARCHY    = YES\n-\n-# If the DIRECTORY_GRAPH, SHOW_DIRECTORIES and HAVE_DOT tags are set to YES \n-# then doxygen will show the dependencies a directory has on other directories \n-# in a graphical way. The dependency relations are determined by the #include \n-# relations between the files in the directories.\n-\n-DIRECTORY_GRAPH        = YES\n-\n-# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images \n-# generated by dot. Possible values are svg, png, jpg, or gif. \n-# If left blank png will be used.\n-\n-DOT_IMAGE_FORMAT       = svg\n-\n-# The tag DOT_PATH can be used to specify the path where the dot tool can be \n-# found. If left blank, it is assumed the dot tool can be found in the path.\n-\n-DOT_PATH               = \n-\n-# The DOTFILE_DIRS tag can be used to specify one or more directories that \n-# contain dot files that are included in the documentation (see the \n-# \\dotfile command).\n-\n-DOTFILE_DIRS           = \n-\n-# The MSCFILE_DIRS tag can be used to specify one or more directories that \n-# contain msc files that are included in the documentation (see the \n-# \\mscfile command).\n-\n-MSCFILE_DIRS           = \n-\n-# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of \n-# nodes that will be shown in the graph. If the number of nodes in a graph \n-# becomes larger than this value, doxygen will truncate the graph, which is \n-# visualized by representing a node as a red box. Note that doxygen if the \n-# number of direct children of the root node in a graph is already larger than \n-# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note \n-# that the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n-\n-DOT_GRAPH_MAX_NODES    = 50\n-\n-# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the \n-# graphs generated by dot. A depth value of 3 means that only nodes reachable \n-# from the root by following a path via at most 3 edges will be shown. Nodes \n-# that lay further from the root node will be omitted. Note that setting this \n-# option to 1 or 2 may greatly reduce the computation time needed for large \n-# code bases. Also note that the size of a graph can be further restricted by \n-# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n-\n-MAX_DOT_GRAPH_DEPTH    = 0\n-\n-# Set the DOT_TRANSPARENT tag to YES to generate images with a transparent \n-# background. This is disabled by default, because dot on Windows does not \n-# seem to support this out of the box. Warning: Depending on the platform used, \n-# enabling this option may lead to badly anti-aliased labels on the edges of \n-# a graph (i.e. they become hard to read).\n-\n-DOT_TRANSPARENT        = NO\n-\n-# Set the DOT_MULTI_TARGETS tag to YES allow dot to generate multiple output \n-# files in one run (i.e. multiple -o and -T options on the command line). This \n-# makes dot run faster, but since only newer versions of dot (>1.8.10) \n-# support this, this feature is disabled by default.\n-\n-DOT_MULTI_TARGETS      = NO\n-\n-# If the GENERATE_LEGEND tag is set to YES (the default) Doxygen will \n-# generate a legend page explaining the meaning of the various boxes and \n-# arrows in the dot generated graphs.\n-\n-GENERATE_LEGEND        = YES\n-\n-# If the DOT_CLEANUP tag is set to YES (the default) Doxygen will \n-# remove the intermediate dot files that are used to generate \n-# the various graphs.\n-\n-DOT_CLEANUP            = YES"
      },
      {
        "sha": "58c65fb7e25514043bef4caad82a668aabca4914",
        "filename": "doc/Doxyfile.in",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/Doxyfile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/Doxyfile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile.in?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "988019869e4387fe11362e29480761d827dcf85a",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "2a4460478c9d6a90105d95f3997065225d0e4ddd",
        "filename": "doc/README_osx.md",
        "status": "renamed",
        "additions": 33,
        "deletions": 19,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/README_osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/README_osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "previous_filename": "doc/README_osx.txt"
      },
      {
        "sha": "07d61b3bda13acb5ac4775db4d23a97586aed646",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "f3dc124ece94bf82e50005d294098fc058a91509",
        "filename": "doc/REST-interface.md",
        "status": "modified",
        "additions": 25,
        "deletions": 18,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "0ba75afcda3cbcef4c024c9acec21e35f40017c9",
        "filename": "doc/benchmarking.md",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/benchmarking.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/benchmarking.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/benchmarking.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "bc8dcb6fb3c33cbd1d9fda2535de703c9765fdab",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 17,
        "deletions": 2,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "4ea8e30b53d57ba5bd4594d89224f2eff892ded2",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 33,
        "deletions": 19,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "836c856a64e75ddb23193a26d4510c07a812b52e",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 59,
        "deletions": 75,
        "changes": 134,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "8a102abaea642668883d0cbf885baa033beee32d",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 126,
        "deletions": 17,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "ce837a222aeafd37b78496123ef1f602de02a733",
        "filename": "doc/build-windows.md",
        "status": "modified",
        "additions": 80,
        "deletions": 11,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "964c03ba8866a988b5a91e75d54645b34342bf11",
        "filename": "doc/dependencies.md",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "8fdae25340026d0bc466247bbc70f3a6cc8eb33c",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 431,
        "deletions": 11,
        "changes": 442,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "928977143be3b3e470593884b63d4e086bcb315d",
        "filename": "doc/files.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "5dedcb51c895e612c6953b99ca3bb532899cb4aa",
        "filename": "doc/fuzzing.md",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/fuzzing.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/fuzzing.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/fuzzing.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "636686b39165714422766619bd47141353c32eca",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 44,
        "deletions": 31,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "8cbb0d8adc1deda1c7c4023611b65521e054ff69",
        "filename": "doc/gitian-building/all_files_in_one_partition.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/gitian-building/all_files_in_one_partition.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/gitian-building/all_files_in_one_partition.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/all_files_in_one_partition.png?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "5f77206b6fa8f9f0f1bbd6d02819d67bf18327ad",
        "filename": "doc/gitian-building/create_vm_file_location_size.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/gitian-building/create_vm_file_location_size.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/gitian-building/create_vm_file_location_size.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_file_location_size.png?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "6f42cda73f3cabb02e39ae0309ac67f419a168c7",
        "filename": "doc/gitian-building/create_vm_memsize.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/gitian-building/create_vm_memsize.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/gitian-building/create_vm_memsize.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_memsize.png?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "59bc093e2c3d35bee0d1bdc50f11f2cf2a6fdafe",
        "filename": "doc/gitian-building/select_startup_disk.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/gitian-building/select_startup_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/gitian-building/select_startup_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/select_startup_disk.png?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "a5720ef3a345d9a52a64298fd68c3c8402f86b38",
        "filename": "doc/gitian-building/system_settings.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/gitian-building/system_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/gitian-building/system_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/system_settings.png?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "75f9013f296b9ee0ffc79e19fdf43819eab5007b",
        "filename": "doc/init.md",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "08ff4d6ac1d5cc1135ee6c38d54d17fcfd7252eb",
        "filename": "doc/man/Makefile.am",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/man/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/man/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/Makefile.am?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "0493241b1e07e90db2ac06eacaaa12ff3a6cd1e9",
        "filename": "doc/man/bitcoin-cli.1",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/man/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/man/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-cli.1?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "ce252612e57a2ae402921f7ed50cf7199679aa1e",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "added",
        "additions": 546,
        "deletions": 0,
        "changes": 546,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "98adf2f5b1e5d7445326a0782ddd081a3e079b99",
        "filename": "doc/man/bitcoin-tx.1",
        "status": "added",
        "additions": 122,
        "deletions": 0,
        "changes": 122,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/man/bitcoin-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/man/bitcoin-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-tx.1?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "fb066e0c6f310fbbe34423cff059052bcdf73af6",
        "filename": "doc/man/bitcoind.1",
        "status": "added",
        "additions": 525,
        "deletions": 0,
        "changes": 525,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "3caab818076b88f54e1da3d9cd25a809b9352ca9",
        "filename": "doc/multiwallet-qt.md",
        "status": "removed",
        "additions": 0,
        "deletions": 48,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/doc/multiwallet-qt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/doc/multiwallet-qt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/multiwallet-qt.md?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "697099beabe96ee7eb15032e557fea652fe98901",
        "filename": "doc/reduce-traffic.md",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/reduce-traffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/reduce-traffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-traffic.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "46fbae0423940fff9f39243ade0945408e1dade6",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 54,
        "deletions": 245,
        "changes": 299,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "38a2c1347d0b8afbfe0c0481cd90b9db06854328",
        "filename": "doc/release-notes/release-notes-0.10.4.md",
        "status": "added",
        "additions": 172,
        "deletions": 0,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.10.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.10.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.4.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "2351b80656542c3eee9b27c1f3fae5d3a46179d3",
        "filename": "doc/release-notes/release-notes-0.11.2.md",
        "status": "added",
        "additions": 217,
        "deletions": 0,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.11.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.11.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.2.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "cf74a1797520713b405da0ac47e54fb978e344da",
        "filename": "doc/release-notes/release-notes-0.12.0.md",
        "status": "added",
        "additions": 894,
        "deletions": 0,
        "changes": 894,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.12.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.12.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.0.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "610cd481de4855f3d0d05e5d7d089f9c41ee9f06",
        "filename": "doc/release-notes/release-notes-0.12.1.md",
        "status": "added",
        "additions": 198,
        "deletions": 0,
        "changes": 198,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.12.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.12.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.1.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "4c3cb97df34cf5e13939e538bd8af50759cc92f6",
        "filename": "doc/release-notes/release-notes-0.13.0.md",
        "status": "added",
        "additions": 868,
        "deletions": 0,
        "changes": 868,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.13.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.13.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.0.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "75c2d61be8d3c1b3c85bf9a89df1821b39d42e56",
        "filename": "doc/release-notes/release-notes-0.13.1.md",
        "status": "added",
        "additions": 410,
        "deletions": 0,
        "changes": 410,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.13.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.13.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.1.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "45fff5c8bbdc1bb2834e204412164f8b34140bde",
        "filename": "doc/release-notes/release-notes-0.13.2.md",
        "status": "added",
        "additions": 178,
        "deletions": 0,
        "changes": 178,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.13.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.13.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.2.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "c41f22979b581f3ba6af58b73b578c8d138fa966",
        "filename": "doc/release-notes/release-notes-0.14.0.md",
        "status": "added",
        "additions": 873,
        "deletions": 0,
        "changes": 873,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.14.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.14.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.0.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "ef072afd4d7fb94d29007038e587eacb40358a98",
        "filename": "doc/release-notes/release-notes-0.14.1.md",
        "status": "added",
        "additions": 143,
        "deletions": 0,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.14.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.14.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.1.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "0ad554b7738c17a4017b57234fce1132f9a9ed45",
        "filename": "doc/release-notes/release-notes-0.14.2.md",
        "status": "added",
        "additions": 102,
        "deletions": 0,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.14.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.14.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.2.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "29816cacf73024538d20e24a261fa9565b05801f",
        "filename": "doc/release-notes/release-notes-0.15.0.md",
        "status": "added",
        "additions": 878,
        "deletions": 0,
        "changes": 878,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.15.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.15.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.15.0.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "c27f607b5c58e3c2f16bb49bbcf7d8122e40af85",
        "filename": "doc/release-notes/release-notes-0.6.3.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.6.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-notes/release-notes-0.6.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.3.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "f429b4bbdb9acebbc0739b7203f0b7085bfd2c1a",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 217,
        "deletions": 112,
        "changes": 329,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "dc363582cc8dee8c6ce0d0afadad030d08958793",
        "filename": "doc/shared-libraries.md",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/shared-libraries.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/shared-libraries.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/shared-libraries.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "a05979fca84e3758c1ff0f82c560468fe0a3ec10",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 30,
        "deletions": 11,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "1702637d53ebd7a0c2f827ed114260d0f515ee51",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "38085cec353ad321fec081e69769708a64244bde",
        "filename": "doc/travis-ci.md",
        "status": "renamed",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/travis-ci.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/travis-ci.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/travis-ci.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58",
        "previous_filename": "doc/travis-ci.txt"
      },
      {
        "sha": "72613054b91deb68c5fdd3bb3e9e30ca563959cb",
        "filename": "doc/unit-tests.md",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/doc/unit-tests.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/doc/unit-tests.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/unit-tests.md?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "38c58fb7fdf96768f0de3a12b2c340e8c56561b7",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "eb920c47eb521e5e42f3cff196c92627015e6dc7",
        "filename": "libbitcoinconsensus.pc.in",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/libbitcoinconsensus.pc.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/libbitcoinconsensus.pc.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/libbitcoinconsensus.pc.in?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "758d1f47e5ec658cceeb96d9c8e3e06a14fe993e",
        "filename": "qa/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 57,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/README.md?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "7a30db68dd53d4d53eebdba9a780ed4d45c7fa91",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "removed",
        "additions": 0,
        "deletions": 242,
        "changes": 242,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "14ae08e4e58f0a0eb36dcf22dc86ad73bb34c5fb",
        "filename": "qa/pull-tester/run-bitcoind-for-test.sh.in",
        "status": "removed",
        "additions": 0,
        "deletions": 36,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/pull-tester/run-bitcoind-for-test.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/pull-tester/run-bitcoind-for-test.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/run-bitcoind-for-test.sh.in?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "937b4231f12f82841c52d7f34133c2daf5575668",
        "filename": "qa/pull-tester/tests_config.py.in",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/pull-tester/tests_config.py.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/pull-tester/tests_config.py.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/tests_config.py.in?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "898931936b448e1a69921bc9b82f6e82be444d3d",
        "filename": "qa/rpc-tests/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 111,
        "changes": 111,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/README.md?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "9ca5c69f162d23752337d0408996b3d54df90751",
        "filename": "qa/rpc-tests/bip65-cltv-p2p.py",
        "status": "removed",
        "additions": 0,
        "deletions": 182,
        "changes": 182,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/bip65-cltv-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/bip65-cltv-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv-p2p.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "e90e11e6a75a8960e3aa403e67ad4249ab646f24",
        "filename": "qa/rpc-tests/bip65-cltv.py",
        "status": "removed",
        "additions": 0,
        "deletions": 89,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/bip65-cltv.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/bip65-cltv.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "ec1678cc2cfe9de4e5de3f4570666701fbdfe806",
        "filename": "qa/rpc-tests/bipdersig-p2p.py",
        "status": "removed",
        "additions": 0,
        "deletions": 190,
        "changes": 190,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/bipdersig-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/bipdersig-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bipdersig-p2p.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "243f816f652647739a8f3833fbede7f3f96f4478",
        "filename": "qa/rpc-tests/bipdersig.py",
        "status": "removed",
        "additions": 0,
        "deletions": 89,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/bipdersig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/bipdersig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bipdersig.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "b7bfe362855cadcfc9ea8801167eb1cf099f5d5d",
        "filename": "qa/rpc-tests/blockchain.py",
        "status": "removed",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/blockchain.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "4cb01575e2805ec69b0cdc2fb440f30b70a56810",
        "filename": "qa/rpc-tests/disablewallet.py",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/disablewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/disablewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/disablewallet.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "aca0cd7495d2881bf7c62a70a8779404e802bfe9",
        "filename": "qa/rpc-tests/getblocktemplate_proposals.py",
        "status": "removed",
        "additions": 0,
        "deletions": 182,
        "changes": 182,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/getblocktemplate_proposals.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/getblocktemplate_proposals.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_proposals.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "7888114c54df4a30b133feb48e1f197f583517db",
        "filename": "qa/rpc-tests/httpbasics.py",
        "status": "removed",
        "additions": 0,
        "deletions": 115,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/httpbasics.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/httpbasics.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/httpbasics.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "5a67220021c96699abc6c113a6d9712c89a506d7",
        "filename": "qa/rpc-tests/keypool.py",
        "status": "removed",
        "additions": 0,
        "deletions": 145,
        "changes": 145,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/keypool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/keypool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/keypool.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "b30a6bc9d1c6debfb92c8bf8ed65b76a05538ecc",
        "filename": "qa/rpc-tests/listtransactions.py",
        "status": "removed",
        "additions": 0,
        "deletions": 108,
        "changes": 108,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/listtransactions.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "a601147ce832f024f5d1e7d680e931aa6916457c",
        "filename": "qa/rpc-tests/maxblocksinflight.py",
        "status": "removed",
        "additions": 0,
        "deletions": 101,
        "changes": 101,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/maxblocksinflight.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/maxblocksinflight.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxblocksinflight.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "e714465db16d2884008df8f0833e6c56ca8781ff",
        "filename": "qa/rpc-tests/maxuploadtarget.py",
        "status": "removed",
        "additions": 0,
        "deletions": 282,
        "changes": 282,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxuploadtarget.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "c64a15b9f5d31e794869e99cb27e130a956c252f",
        "filename": "qa/rpc-tests/mempool_coinbase_spends.py",
        "status": "removed",
        "additions": 0,
        "deletions": 93,
        "changes": 93,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/mempool_coinbase_spends.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/mempool_coinbase_spends.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_coinbase_spends.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "e383a3a12c375b2e22b5670ec6cafa53efaebb57",
        "filename": "qa/rpc-tests/nodehandling.py",
        "status": "removed",
        "additions": 0,
        "deletions": 87,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/nodehandling.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/nodehandling.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/nodehandling.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "9555940cece5e4789f9c6657f687ae74b733a402",
        "filename": "qa/rpc-tests/p2p-fullblocktest.py",
        "status": "removed",
        "additions": 0,
        "deletions": 272,
        "changes": 272,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/p2p-fullblocktest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/p2p-fullblocktest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-fullblocktest.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "21f8d69382d02055141f1a57829b8e6aaf217d9f",
        "filename": "qa/rpc-tests/pruning.py",
        "status": "removed",
        "additions": 0,
        "deletions": 359,
        "changes": 359,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/pruning.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "173faf736ec85c522320fa0b5787fed2dd006def",
        "filename": "qa/rpc-tests/rawtransactions.py",
        "status": "removed",
        "additions": 0,
        "deletions": 145,
        "changes": 145,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/rawtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/rawtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rawtransactions.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "f2e3f248ea5fa2d0cfeb83d7bdf89909a1386323",
        "filename": "qa/rpc-tests/reindex.py",
        "status": "removed",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/reindex.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/reindex.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/reindex.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "7a9da667874b8f44f6047825549fe7d49547fe49",
        "filename": "qa/rpc-tests/rpcbind_test.py",
        "status": "removed",
        "additions": 0,
        "deletions": 152,
        "changes": 152,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/rpcbind_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/rpcbind_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rpcbind_test.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "59aa8c15cc936626ca87b4654ebd1afe28f44555",
        "filename": "qa/rpc-tests/test_framework/blocktools.py",
        "status": "removed",
        "additions": 0,
        "deletions": 67,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/test_framework/blocktools.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/test_framework/blocktools.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/blocktools.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "b7d78e74fa83d0b003d96a4f77421c8d13db1cba",
        "filename": "qa/rpc-tests/test_framework/mininode.py",
        "status": "removed",
        "additions": 0,
        "deletions": 1256,
        "changes": 1256,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/mininode.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "ae2d91ab60b7c0d7a7fbdda20ad7878e572ba5a8",
        "filename": "qa/rpc-tests/test_framework/test_framework.py",
        "status": "removed",
        "additions": 0,
        "deletions": 197,
        "changes": 197,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/test_framework.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "30dd5de58560492c70b0ea55c98a20f8ddcc146a",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "removed",
        "additions": 0,
        "deletions": 403,
        "changes": 403,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "f9ec6f429bac5f3a11203c58e26b01eb36d08568",
        "filename": "qa/rpc-tests/wallet.py",
        "status": "removed",
        "additions": 0,
        "deletions": 254,
        "changes": 254,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "0ec8ec53648c0f8d51a62dc1dddc57df20919945",
        "filename": "qa/rpc-tests/zapwallettxes.py",
        "status": "removed",
        "additions": 0,
        "deletions": 82,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/zapwallettxes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/zapwallettxes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zapwallettxes.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "bcb132321a4c6931efe41d8d1ae3605d9278d62b",
        "filename": "qa/rpc-tests/zmq_test.py",
        "status": "removed",
        "additions": 0,
        "deletions": 91,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/qa/rpc-tests/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zmq_test.py?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "8d50144c21f9bd3726b9b12e09e8c3ff44d6e595",
        "filename": "share/certs/PrivateKeyNotes.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/share/certs/PrivateKeyNotes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/share/certs/PrivateKeyNotes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/PrivateKeyNotes.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "32ef2a5755aa4e93d3da541f78f576a846b53db0",
        "filename": "share/genbuild.sh",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/share/genbuild.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/share/genbuild.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/genbuild.sh?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "f54e249a0c1e77003e93d9f9a0f1325caa859e42",
        "filename": "share/pixmaps/nsis-header.bmp",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/share/pixmaps/nsis-header.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/share/pixmaps/nsis-header.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/nsis-header.bmp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "14349528853f1198bfdbf7f9f180a5618820ef76",
        "filename": "share/pixmaps/nsis-wizard.bmp",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/share/pixmaps/nsis-wizard.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/share/pixmaps/nsis-wizard.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/nsis-wizard.bmp?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "5ca6d9d015b45237a4a619b57cdbe41e6de19484",
        "filename": "share/qt/Info.plist.in",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/share/qt/Info.plist.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/share/qt/Info.plist.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist.in?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "e3be18205d7d4ea11501ea303bda9e98c53f5f95",
        "filename": "share/qt/extract_strings_qt.py",
        "status": "modified",
        "additions": 17,
        "deletions": 6,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/share/qt/extract_strings_qt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/share/qt/extract_strings_qt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/extract_strings_qt.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "865fe865550ae21f2eec4bb7c8f8c1817bdf1bce",
        "filename": "share/qt/protobuf.pri",
        "status": "removed",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a8e27a6a1901152822d59622f9aeb25a78a78d/share/qt/protobuf.pri",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a8e27a6a1901152822d59622f9aeb25a78a78d/share/qt/protobuf.pri",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/protobuf.pri?ref=f8a8e27a6a1901152822d59622f9aeb25a78a78d"
      },
      {
        "sha": "12a8e6fb0cc5b9458cf1ca430ed8e497096dfeeb",
        "filename": "share/rpcuser/README.md",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/share/rpcuser/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/share/rpcuser/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcuser/README.md?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "63c69e308af24404eb6ba96e458747a87535c09f",
        "filename": "share/rpcuser/rpcuser.py",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/share/rpcuser/rpcuser.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/share/rpcuser/rpcuser.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcuser/rpcuser.py?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "dd42085a27609232a3e2c3c35085077e3cfb777e",
        "filename": "share/setup.nsi.in",
        "status": "modified",
        "additions": 17,
        "deletions": 19,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/share/setup.nsi.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/share/setup.nsi.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/setup.nsi.in?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "2d2ee67035991568ce34df826feadb88e0e10f74",
        "filename": "src/.clang-format",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/src/.clang-format",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/src/.clang-format",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/.clang-format?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "ebae53a8c1f08fd2ec17b372338f096fe175c96a",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 188,
        "deletions": 123,
        "changes": 311,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "2b1f70b25bc4588d26470216dc9c07d0b4b5c676",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 40,
        "deletions": 5,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "833f3d2a10cac9465c72045bc244e3efc76156c8",
        "filename": "src/Makefile.leveldb.include",
        "status": "added",
        "additions": 149,
        "deletions": 0,
        "changes": 149,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/src/Makefile.leveldb.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/src/Makefile.leveldb.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.leveldb.include?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      },
      {
        "sha": "e4b64c1ca79c3e6ab98e9c5d3662b9c3f9a315bb",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 60,
        "deletions": 21,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=3f5cd1fc1cc78f7a7c1fd16a7e93f0741978de58"
      }
    ]
  }
]