[
  {
    "sha": "7396fb7ecafe914f4e985fc7ef348f63c32634ce",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3Mzk2ZmI3ZWNhZmU5MTRmNGU5ODVmYzdlZjM0OGY2M2MzMjYzNGNl",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-12-28T15:45:45Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-12-28T16:13:01Z"
      },
      "message": "[Qt] Base coin control priority labels always on max confirmation target",
      "tree": {
        "sha": "d16fa9712aa5921cde406796cf530101c9110326",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d16fa9712aa5921cde406796cf530101c9110326"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7396fb7ecafe914f4e985fc7ef348f63c32634ce",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7396fb7ecafe914f4e985fc7ef348f63c32634ce",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7396fb7ecafe914f4e985fc7ef348f63c32634ce",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7396fb7ecafe914f4e985fc7ef348f63c32634ce/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e5153095ea410dd07770c0327447856488bfd137",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5153095ea410dd07770c0327447856488bfd137",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e5153095ea410dd07770c0327447856488bfd137"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 10,
      "deletions": 7
    },
    "files": [
      {
        "sha": "2d6f6e91e1af23e944537406b028b1e52d07d376",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7396fb7ecafe914f4e985fc7ef348f63c32634ce/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7396fb7ecafe914f4e985fc7ef348f63c32634ce/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=7396fb7ecafe914f4e985fc7ef348f63c32634ce",
        "patch": "@@ -533,15 +533,15 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         nBytes = nBytesInputs + ((CoinControlDialog::payAmounts.size() > 0 ? CoinControlDialog::payAmounts.size() + 1 : 2) * 34) + 10; // always assume +1 output for change here\n \n         // Priority\n-        double mempoolEstimatePriority = mempool.estimatePriority(nTxConfirmTarget);\n+        double mempoolEstimatePriority = mempool.estimatePriority(MEMPOOL_ESTIMATE_MAXTARGET);\n         dPriority = dPriorityInputs / (nBytes - nBytesInputs + (nQuantityUncompressed * 29)); // 29 = 180 - 151 (uncompressed public keys are over the limit. max 151 bytes of the input are ignored for priority)\n         sPriorityLabel = CoinControlDialog::getPriorityLabel(dPriority, mempoolEstimatePriority);\n \n         // Fee\n         nPayFee = CWallet::GetMinimumFee(nBytes, nTxConfirmTarget, mempool);\n \n         // Allow free?\n-        double dPriorityNeeded = mempoolEstimatePriority;\n+        double dPriorityNeeded = mempool.estimatePriority(nTxConfirmTarget);\n         if (dPriorityNeeded <= 0)\n             dPriorityNeeded = AllowFreeThreshold(); // not enough data, back to hard-coded\n         fAllowFree = (dPriority >= dPriorityNeeded);\n@@ -623,7 +623,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     toolTip1 += tr(\"Can vary +/- 1 byte per input.\");\n \n     QString toolTip2 = tr(\"Transactions with higher priority are more likely to get included into a block.\") + \"<br /><br />\";\n-    toolTip2 += tr(\"This label turns red, if the priority is smaller than \\\"medium\\\".\") + \"<br /><br />\";\n+    toolTip2 += tr(\"This label turns red, if the priority is too low to send as zero-fee transaction.\") + \"<br /><br />\";\n     toolTip2 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CWallet::minTxFee.GetFeePerK()));\n \n     QString toolTip3 = tr(\"This label turns red, if any recipient receives an amount smaller than %1.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, ::minRelayTxFee.GetFee(546)));\n@@ -669,7 +669,7 @@ void CoinControlDialog::updateView()\n     QFlags<Qt::ItemFlag> flgTristate = Qt::ItemIsSelectable | Qt::ItemIsEnabled | Qt::ItemIsUserCheckable | Qt::ItemIsTristate;\n \n     int nDisplayUnit = model->getOptionsModel()->getDisplayUnit();\n-    double mempoolEstimatePriority = mempool.estimatePriority(nTxConfirmTarget);\n+    double mempoolEstimatePriority = mempool.estimatePriority(MEMPOOL_ESTIMATE_MAXTARGET);\n \n     map<QString, vector<COutput> > mapCoins;\n     model->listCoins(mapCoins);"
      },
      {
        "sha": "f68d29a31a492ab3249b1e1bb027e8c5840a117a",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7396fb7ecafe914f4e985fc7ef348f63c32634ce/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7396fb7ecafe914f4e985fc7ef348f63c32634ce/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=7396fb7ecafe914f4e985fc7ef348f63c32634ce",
        "patch": "@@ -585,12 +585,12 @@ void SendCoinsDialog::updateGlobalFeeVariables()\n {\n     if (ui->radioSmartFee->isChecked())\n     {\n-        nTxConfirmTarget = (int)25 - (int)std::max(0, std::min(24, ui->sliderSmartFee->value()));\n+        nTxConfirmTarget = MEMPOOL_ESTIMATE_MAXTARGET - (unsigned int)std::max((unsigned int)0, std::min((MEMPOOL_ESTIMATE_MAXTARGET - 1), (unsigned int)ui->sliderSmartFee->value()));\n         payTxFee = CFeeRate(0);\n     }\n     else\n     {\n-        nTxConfirmTarget = 25;\n+        nTxConfirmTarget = MEMPOOL_ESTIMATE_MAXTARGET;\n         payTxFee = CFeeRate(ui->customFee->value());\n         fPayAtLeastCustomFee = ui->radioCustomAtLeast->isChecked();\n     }"
      },
      {
        "sha": "d954be5f6241450e4cde122bb6b80c3804ea5838",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7396fb7ecafe914f4e985fc7ef348f63c32634ce/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7396fb7ecafe914f4e985fc7ef348f63c32634ce/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=7396fb7ecafe914f4e985fc7ef348f63c32634ce",
        "patch": "@@ -385,7 +385,7 @@ CTxMemPool::CTxMemPool(const CFeeRate& _minRelayFee) :\n     // to wait a day or two to save a fraction of a penny in fees.\n     // Confirmation times for very-low-fee transactions that take more\n     // than an hour or three to confirm are highly variable.\n-    minerPolicyEstimator = new CMinerPolicyEstimator(25);\n+    minerPolicyEstimator = new CMinerPolicyEstimator(MEMPOOL_ESTIMATE_MAXTARGET);\n }\n \n CTxMemPool::~CTxMemPool()"
      },
      {
        "sha": "24b9b61781b701370cd8f60946f79aa00e6bc7ae",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7396fb7ecafe914f4e985fc7ef348f63c32634ce/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7396fb7ecafe914f4e985fc7ef348f63c32634ce/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=7396fb7ecafe914f4e985fc7ef348f63c32634ce",
        "patch": "@@ -30,6 +30,9 @@ inline bool AllowFree(double dPriority)\n /** Fake height value used in CCoins to signify they are only in the memory pool (since 0.8) */\n static const unsigned int MEMPOOL_HEIGHT = 0x7FFFFFFF;\n \n+/** CMinerPolicyEstimator bucket count */\n+static const unsigned int MEMPOOL_ESTIMATE_MAXTARGET = 25;\n+\n /**\n  * CTxMemPool stores these:\n  */"
      }
    ]
  }
]