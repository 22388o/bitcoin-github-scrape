[
  {
    "sha": "dd5b0114cf9021e8639e48c2a33f0aaf82aeb14e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZDViMDExNGNmOTAyMWU4NjM5ZTQ4YzJhMzNmMGFhZjgyYWViMTRl",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-01-20T19:13:14Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-01-20T20:05:12Z"
      },
      "message": "[Trivial] add comment about setting peer as HB peer.\n\nThis adds a comment to the new logic for setting HB peers based\non block validation (and aligns the code below to reflect the comment).\nIt's not obvious why we're checking mapBlocksInFlight. Add a comment to\nexplain.",
      "tree": {
        "sha": "1e39dd97a423962aafe604cdf9532909d4ccda6b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1e39dd97a423962aafe604cdf9532909d4ccda6b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd5b0114cf9021e8639e48c2a33f0aaf82aeb14e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd5b0114cf9021e8639e48c2a33f0aaf82aeb14e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dd5b0114cf9021e8639e48c2a33f0aaf82aeb14e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd5b0114cf9021e8639e48c2a33f0aaf82aeb14e/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "af01cd3a3d0647c071e94d7b0bda7128fb9aeebe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af01cd3a3d0647c071e94d7b0bda7128fb9aeebe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/af01cd3a3d0647c071e94d7b0bda7128fb9aeebe"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 9,
      "deletions": 1
    },
    "files": [
      {
        "sha": "94faaac37b2a9d34c395f2e833e38a3eb3f08be1",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd5b0114cf9021e8639e48c2a33f0aaf82aeb14e/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd5b0114cf9021e8639e48c2a33f0aaf82aeb14e/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=dd5b0114cf9021e8639e48c2a33f0aaf82aeb14e",
        "patch": "@@ -865,7 +865,15 @@ void PeerLogicValidation::BlockChecked(const CBlock& block, const CValidationSta\n                 Misbehaving(it->second.first, nDoS);\n         }\n     }\n-    else if (state.IsValid() && !IsInitialBlockDownload() && mapBlocksInFlight.count(hash) == mapBlocksInFlight.size()) {\n+    // Check that:\n+    // 1. The block is valid\n+    // 2. We're not in initial block download\n+    // 3. This is currently the best block we're aware of. We haven't updated\n+    //    the tip yet so we have no way to check this directly here. Instead we\n+    //    just check that there are currently no other blocks in flight.\n+    else if (state.IsValid() &&\n+             !IsInitialBlockDownload() &&\n+             mapBlocksInFlight.count(hash) == mapBlocksInFlight.size()) {\n         if (it != mapBlockSource.end()) {\n             MaybeSetPeerAsAnnouncingHeaderAndIDs(it->second.first, *connman);\n         }"
      }
    ]
  }
]