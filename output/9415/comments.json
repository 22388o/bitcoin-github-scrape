[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269073566",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9415#issuecomment-269073566",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9415",
    "id": 269073566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTA3MzU2Ng==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-24T07:41:16Z",
    "updated_at": "2016-12-24T07:41:16Z",
    "author_association": "MEMBER",
    "body": "There's so much currently wrong with this loop that I'm hesitant to make changes before rewriting it entirely. I've been discussing my plans with @TheBlueMatt for doing just that after #9289 is merged.\r\n\r\nSome other fun issues with this loop (I'm sure I'm leaving several out):\r\n- messageHandlerCondition wakes spuriously\r\n- The depth of vRecvGetData and messages to send aren't taken into consideration\r\n- cs_vRecvMsg is held for the duration of message processing, leading to insane lock contention\r\n\r\nI have no objections to slapping some band-aids on here, but I'm really really hoping to address all of those at once in my next PR which moves this handler into net_processing. As a bonus, it should simplify @TheBlueMatt's multi-threaded processing.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269073566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269102470",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9415#issuecomment-269102470",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9415",
    "id": 269102470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTEwMjQ3MA==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-24T22:19:56Z",
    "updated_at": "2016-12-24T22:19:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "> messageHandlerCondition wakes spuriously\r\n\r\nwho cares? :) It's not like this loop or processing that results from random wakes ever shows up in profiles. \r\n\r\nIf it were a real concern it would be easy to go back to sleep if the boolean hasn't been flipped and not enough time has passed.\r\n\r\n>  but I'm really really hoping to address all of those at once in my next PR which moves this handler into net_processing.\r\n\r\nMy guess is that we may be a bit close to the end of 0.14 to achieve much more in the way of big changes, especially ones with difficult to test concurrency implications.  I just don't want efforts to make big sweeping changes to stand in the way of meaningful improvement-- we probably should have made the changes in this PR a year ago.\r\n\r\nI'm reviewing 9289-- hopefully we can get that in soon.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269102470/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269102850",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9415#issuecomment-269102850",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9415",
    "id": 269102850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTEwMjg1MA==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-24T22:33:42Z",
    "updated_at": "2016-12-24T22:33:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm hoping the next PR isn't huge in the way of complicated locking implications, more like simplified locking implications compared to master. Let's wait and take a look next week (and if we decide it can't make it we can come back to here - I think the potential advantage in initial from-network sync time from \"doing it right\" might be worth the extra review/testing implications).\n\nOn December 24, 2016 5:19:59 PM EST, Gregory Maxwell <notifications@github.com> wrote:\n>> messageHandlerCondition wakes spuriously\n>\n>who cares? :) It's not like this loop or processing that results from\n>random wakes ever shows up in profiles. \n>\n>If it were a real concern it would be easy to go back to sleep if the\n>boolean hasn't been flipped and not enough time has passed.\n>\n>>  but I'm really really hoping to address all of those at once in my\n>next PR which moves this handler into net_processing.\n>\n>My guess is that we may be a bit close to the end of 0.14 to achieve\n>much more in the way of big changes, especially ones with difficult to\n>test concurrency implications.  I just don't want efforts to make big\n>sweeping changes to stand in the way of meaningful improvement-- we\n>probably should have made the changes in this PR a year ago.\n>\n>I'm reviewing 9289-- hopefully we can get that in soon.\n>\n>\n>-- \n>You are receiving this because you were mentioned.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/9415#issuecomment-269102470\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269102850/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269111417",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9415#issuecomment-269111417",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9415",
    "id": 269111417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTExMTQxNw==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-25T06:00:58Z",
    "updated_at": "2016-12-25T06:00:58Z",
    "author_association": "MEMBER",
    "body": "> who cares? :) It's not like this loop or processing that results from random wakes ever shows up in profiles.\r\n\r\nMy concern was moreso that some platforms (win32) may vary significantly in this wakeup behavior.\r\n\r\nCompletely agree with you though. I certainly wasn't suggesting that we not take the improvements here for the sake of something coming later. In fact, the wake from the miner is necessary either way. I was just pointing out that I'm hoping to be able to delete most of this code soon anyway :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269111417/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269316189",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9415#issuecomment-269316189",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9415",
    "id": 269316189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTMxNjE4OQ==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-27T11:52:55Z",
    "updated_at": "2016-12-27T11:52:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Mystery: this slows the IBD of the first 200k blocks from a local gigabit ethernet connected peer by about 40%. I've run the test 4 times each way, same result.  Maybe if we solve that, we make IBD faster.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269316189/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269398595",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9415#issuecomment-269398595",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9415",
    "id": 269398595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTM5ODU5NQ==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-27T23:39:24Z",
    "updated_at": "2016-12-27T23:39:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I bisected my patch down to the  cs_vSend cs_vRecvMsg contention causing fsleep=false to be the cause of the IBD performance regression.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269398595/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269465287",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9415#issuecomment-269465287",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9415",
    "id": 269465287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTQ2NTI4Nw==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-28T11:34:06Z",
    "updated_at": "2016-12-28T11:34:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ugh, yea, those desperately need splitting. I know @theuni has been working on a patch to do that, see-also https://github.com/bitcoin/bitcoin/pull/9419/commits/c214d120a363a05ba9afdccff6b4bda6e29ae7c4\n\nOn December 28, 2016 12:39:28 AM GMT+01:00, Gregory Maxwell <notifications@github.com> wrote:\n>I bisected my patch down to the  cs_vSend cs_vRecvMsg contention\n>causing fsleep=false to be the cause of the IBD performance regression.\n>\n>-- \n>You are receiving this because you were mentioned.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/9415#issuecomment-269398595\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269465287/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269595765",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9415#issuecomment-269595765",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9415",
    "id": 269595765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTU5NTc2NQ==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-29T08:12:03Z",
    "updated_at": "2016-12-29T14:08:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I tested reducing the message handler hold of cs_vrecv lock to be just a narrow space small enough to std::move the message out, and speed up IBD to 200k from a single peer by more than a factor of two over master.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269595765/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269640771",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9415#issuecomment-269640771",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9415",
    "id": 269640771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTY0MDc3MQ==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-29T14:51:43Z",
    "updated_at": "2016-12-29T14:51:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sync to 200k with master:  243.7 blocks per second.\r\nWith this PR on the receiver:  465.431 blocks per second.\r\nWith the PR on both sender and receiver: 782.287  (3.2x master's speed).\r\n\r\n(Chainstate reindex is about 1000/s so there is still perhaps some room for improvement.)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269640771/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269648692",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9415#issuecomment-269648692",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9415",
    "id": 269648692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTY0ODY5Mg==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-29T15:46:55Z",
    "updated_at": "2016-12-29T15:46:55Z",
    "author_association": "MEMBER",
    "body": "Looks like we\u2019re stepping on each-other :)\r\n\r\nWe\u2019re definitely working to solve the same issue, though it seems we disagree on the approach. This is less flexible for a clean separation of layers as it requires constant two-way communication between the net layer and the message processor. Done this way, the net must notify the processor that new messages are available, then the processor must grab the messages from the net.\r\n\r\nThe more typical approach (what I\u2019ve seen, anyway) is a one-way model where the net throws its messages to the processor, which is forced to consume them. That greatly reduces the risk of the processor throttling the network. It also makes things much easier as processing becomes multi-threaded, because the processor maintains the message queue, as opposed to having each new thread contend with the net lock. So the net side doesn\u2019t care what happens once it\u2019s handed off a message, it only has to have a means of being corked if the processor is at capacity.\r\n\r\nThe last abstraction step (moving processing out of CConnman, as seen [in a quick/dirty attempt here](https://github.com/theuni/bitcoin/commit/1a6b10aea129ac363727c2d68fae809c2861e4da)) relies on this one-way model.\r\n\r\nAll that to say: I prefer the approach in #9441, which yields the same speedups :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269648692/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269653447",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9415#issuecomment-269653447",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9415",
    "id": 269653447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTY1MzQ0Nw==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-29T16:18:27Z",
    "updated_at": "2016-12-29T16:18:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't follow your two-way comments.  There is communication only one way here: from the ThreadSocketHandler to ThreadMessageHandler  for receive, and the reverse for sending.\r\n\r\nThe processing cannot itself throttle the network (except in terms of the input rate exceeding the processing rate):  Assuming we haven't hit the GetReceiveFloodSize  the only time message processing can stall reception is holding the per-peer lock during a simple move.  The network does let it know new things are available-- allowing it to sleep when there is nothing to do.  \r\n\r\nIf messages were to be handled concurrently, it would be no finer grained than per-peer+per-direction in any case to preserve ordering; which is the granularity of the locks in this configuration. Though message handling takes cs_main for effectively everything, so at the moment there wouldn't really be any gain in making it concurrent.\r\n\r\nPerhaps you're referring to the WakeMessageHandler calls in ProcessMessages?  Those are communication from ThreadMessageHandler to itself-- just reusing the mechanism so that the handler doesn't sleep when there is more work to be done. It could more cleanly be done with a return argument, but the signaling mechanism already exists.\r\n\r\n> which yields the same speedups \r\n\r\nSure takes a lot more code to do it. The purpose of its architecture is unclear to me, I don't see what we're gaining for the extra complexity. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269653447/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269657451",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9415#issuecomment-269657451",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9415",
    "id": 269657451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTY1NzQ1MQ==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-29T16:45:09Z",
    "updated_at": "2016-12-29T16:45:09Z",
    "author_association": "MEMBER",
    "body": "> I don't follow your two-way comments. There is communication only one way here: from the ThreadSocketHandler to ThreadMessageHandler for receive, and the reverse for sending.\r\n\r\nThreadSocketHandler notifies ThreadMessageHandler that it has a new message. \r\nThreadMessageHandler then reaches into the socket handler's buffer to get and remove it. Logically the queue belongs in the processor so that it can delegate intelligently. After all, the net is done with a message as soon as it's come in.\r\n\r\n> Sure takes a lot more code to do it. The purpose of its architecture is unclear to me, I don't see what we're gaining for the extra complexity.\r\n\r\nEh? It's essentially 2 changes. The first changes to use a return value rather than signaling (as you suggested above): https://github.com/bitcoin/bitcoin/pull/9441/commits/1d232f47ab9ad978aa3324e390f8baca1bea72e3\r\n And the second looks much like yours: https://github.com/bitcoin/bitcoin/pull/9441/commits/65e916c499658e656a6e23455f22666fb0068edc\r\n\r\nMaybe you're referring to the boost commits that it's built on? That's only because they touch so much of the same code that I didn't want to have to keep up with rebasing.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269657451/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269661459",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9415#issuecomment-269661459",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9415",
    "id": 269661459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTY2MTQ1OQ==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-29T17:12:56Z",
    "updated_at": "2016-12-29T17:17:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "> After all, the net is done with a message as soon as it's come in.\r\n\r\nI don't think it is-- e.g need to stop reading data off the socket if we have too much queued data. Otherwise the memory usage is unbounded: I don't think going around and lazily asking it to stop is sufficient, as AFAIK we have no guarantee about how much data we can receive between times the message handler will make its way back around to notice that it's too large. E.g. cold caches it can take 5 seconds to validate a block, an on a gigabit link you could receive >500MB of data in that time.  It looks to me like your code handles this-- by having the socket side stay aware of the queue usage. So it's functionally fine, though you end up duplicating the code that does this size management in both message handling and socket handling.\r\n\r\nI don't think that \"belongs\" is even the right way to think about this.  The queue \"belongs\" to the node-- as its the destruction of the node that ultimately destroys the queue.  It is accessed by the socket thread and the message handling thread, for their respective operations.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269661459/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269666581",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9415#issuecomment-269666581",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9415",
    "id": 269666581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTY2NjU4MQ==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-29T17:48:51Z",
    "updated_at": "2016-12-29T17:48:51Z",
    "author_association": "MEMBER",
    "body": "> I don't think it is its need to stop reading data off the socket if we have too much queued data. Otherwise the memory usage is unbounded: I don't think going around and lazily asking it to stop is sufficient, as AFAIK we have no guarantee about how much data we can receive between times the message handler will make its way back around to notice that it's too large.\r\n\r\nNor do I.\r\n\r\nWith each message, the message handler immediately notifies the socket handler whether it should cork. There's no lag there, it's done atomically with the message hand-off: https://github.com/bitcoin/bitcoin/pull/9441/files#diff-eff7adeaec73a769788bb78858815c91R2463\r\n\r\nIn the refactored code, the cork is the return value of the \"take my message\" function: https://github.com/theuni/bitcoin/commit/1a6b10aea129ac363727c2d68fae809c2861e4da#diff-9a82240fe7dfe86564178691cc57f2f1R1255\r\n\r\n> I don't think that \"belongs\" is even the right way to think about this. The queue \"belongs\" to the node-- as its the destruction of the node that ultimately destroys the queue. It is accessed by the socket thread and the message handling thread, for their respective operations.\r\n\r\nDisagreed. These are two separate layers. The queue could easily outlive the node. For ex, during IBD a node may send 10 blocks and immediately disconnect. There's no requirement that we destroy the queue before deleting the node.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269666581/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]