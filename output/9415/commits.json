[
  {
    "sha": "a832c9e10a38a64deda0bc8d96a8cca1ad2ec8d0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphODMyYzllMTBhMzhhNjRkZWRhMGJjOGQ5NmE4Y2NhMWFkMmVjOGQw",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-12-23T22:11:42Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-12-29T14:31:48Z"
      },
      "message": "Reduce latency of ThreadMessageHandler.\n\nInstead of using a 100ms sleep in the condition variable, this changes\n it to sleep for 100ms after the loop started, so if the loop takes a\n long time (e.g. due to waiting on the vnodes lock at the end) it will\n restart sooner.",
      "tree": {
        "sha": "b653f85d2feb45bdd9baeda6b5ef8146137324b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b653f85d2feb45bdd9baeda6b5ef8146137324b8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a832c9e10a38a64deda0bc8d96a8cca1ad2ec8d0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a832c9e10a38a64deda0bc8d96a8cca1ad2ec8d0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a832c9e10a38a64deda0bc8d96a8cca1ad2ec8d0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a832c9e10a38a64deda0bc8d96a8cca1ad2ec8d0/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0f921e6a0492c4e9f037a9ed91f474885032d68c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f921e6a0492c4e9f037a9ed91f474885032d68c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0f921e6a0492c4e9f037a9ed91f474885032d68c"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "27ac1ce0825940ecf4a1388abe5cbe63d68480ff",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a832c9e10a38a64deda0bc8d96a8cca1ad2ec8d0/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a832c9e10a38a64deda0bc8d96a8cca1ad2ec8d0/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=a832c9e10a38a64deda0bc8d96a8cca1ad2ec8d0",
        "patch": "@@ -1827,6 +1827,7 @@ void CConnman::ThreadMessageHandler()\n \n     while (true)\n     {\n+        boost::system_time start_time = boost::posix_time::microsec_clock::universal_time();\n         std::vector<CNode*> vNodesCopy;\n         {\n             LOCK(cs_vNodes);\n@@ -1878,7 +1879,7 @@ void CConnman::ThreadMessageHandler()\n         }\n \n         if (fSleep)\n-            messageHandlerCondition.timed_wait(lock, boost::posix_time::microsec_clock::universal_time() + boost::posix_time::milliseconds(100));\n+            messageHandlerCondition.timed_wait(lock, start_time + boost::posix_time::milliseconds(100));\n     }\n }\n "
      }
    ]
  },
  {
    "sha": "685f5047faaa9fe5b5449bf976767faad3b2ba13",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ODVmNTA0N2ZhYWE5ZmU1YjU0NDliZjk3Njc2N2ZhYWQzYjJiYTEz",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-12-24T02:19:39Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-12-29T14:32:01Z"
      },
      "message": "Make submitblock wake the message handler thread.\n\nAvoids a potential 100ms delay before announcing a new block that\n arrived via submitblock.",
      "tree": {
        "sha": "53ae0caaeb5096848c0edcf511f02579849466ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/53ae0caaeb5096848c0edcf511f02579849466ce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/685f5047faaa9fe5b5449bf976767faad3b2ba13",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/685f5047faaa9fe5b5449bf976767faad3b2ba13",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/685f5047faaa9fe5b5449bf976767faad3b2ba13",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/685f5047faaa9fe5b5449bf976767faad3b2ba13/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a832c9e10a38a64deda0bc8d96a8cca1ad2ec8d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a832c9e10a38a64deda0bc8d96a8cca1ad2ec8d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a832c9e10a38a64deda0bc8d96a8cca1ad2ec8d0"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 9,
      "deletions": 0
    },
    "files": [
      {
        "sha": "49b5ac232bba14f474c95de545530f53ace29b5e",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/685f5047faaa9fe5b5449bf976767faad3b2ba13/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/685f5047faaa9fe5b5449bf976767faad3b2ba13/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=685f5047faaa9fe5b5449bf976767faad3b2ba13",
        "patch": "@@ -154,6 +154,8 @@ class CConnman\n \n     void PushMessage(CNode* pnode, CSerializedNetMsg&& msg);\n \n+    void WakeMessageHandler() { messageHandlerCondition.notify_one(); };\n+\n     template<typename Callable>\n     bool ForEachNodeContinueIf(Callable&& func)\n     {"
      },
      {
        "sha": "c239180af98cbffed5f747163a1a8b5692abdc7c",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/685f5047faaa9fe5b5449bf976767faad3b2ba13/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/685f5047faaa9fe5b5449bf976767faad3b2ba13/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=685f5047faaa9fe5b5449bf976767faad3b2ba13",
        "patch": "@@ -770,6 +770,13 @@ UniValue submitblock(const JSONRPCRequest& request)\n     }\n     if (!sc.found)\n         return \"inconclusive\";\n+\n+    if (g_connman && fAccepted)\n+    {\n+        // Wake up thread message handler so it sends out the block.\n+        g_connman->WakeMessageHandler();\n+    }\n+\n     return BIP22ValidationResult(sc.state);\n }\n "
      }
    ]
  },
  {
    "sha": "b95d7a506eca0963b22c5e6f46d1a1b0fe3e2d50",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiOTVkN2E1MDZlY2EwOTYzYjIyYzVlNmY0NmQxYTFiMGZlM2UyZDUw",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-12-24T02:46:12Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-12-29T14:32:01Z"
      },
      "message": "Introduce an atomic flag to indicate when the message handler has more work.\n\nThis prevents delays in processing messages for early peers when they arrive\n part way through the message handler loop.\n\nThis also reruns the message handler when some peers don't finish sendmessages\n due to contention for cs_main.",
      "tree": {
        "sha": "4d578bb756717de6cf1bc1fbe1348742f9e7eaa3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d578bb756717de6cf1bc1fbe1348742f9e7eaa3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b95d7a506eca0963b22c5e6f46d1a1b0fe3e2d50",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b95d7a506eca0963b22c5e6f46d1a1b0fe3e2d50",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b95d7a506eca0963b22c5e6f46d1a1b0fe3e2d50",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b95d7a506eca0963b22c5e6f46d1a1b0fe3e2d50/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "685f5047faaa9fe5b5449bf976767faad3b2ba13",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/685f5047faaa9fe5b5449bf976767faad3b2ba13",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/685f5047faaa9fe5b5449bf976767faad3b2ba13"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 10,
      "deletions": 4
    },
    "files": [
      {
        "sha": "48a7b13e92a8a601645cb9415bea9a184ff7843e",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b95d7a506eca0963b22c5e6f46d1a1b0fe3e2d50/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b95d7a506eca0963b22c5e6f46d1a1b0fe3e2d50/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=b95d7a506eca0963b22c5e6f46d1a1b0fe3e2d50",
        "patch": "@@ -1241,7 +1241,7 @@ void CConnman::ThreadSocketHandler()\n                             if (!pnode->ReceiveMsgBytes(pchBuf, nBytes, notify))\n                                 pnode->CloseSocketDisconnect();\n                             if(notify)\n-                                messageHandlerCondition.notify_one();\n+                                WakeMessageHandler();\n                             pnode->nLastRecv = GetTime();\n                             pnode->nRecvBytes += nBytes;\n                             RecordBytesRecv(nBytes);\n@@ -1827,6 +1827,7 @@ void CConnman::ThreadMessageHandler()\n \n     while (true)\n     {\n+        fMessageHandlerWork.store(false, std::memory_order_relaxed);\n         boost::system_time start_time = boost::posix_time::microsec_clock::universal_time();\n         std::vector<CNode*> vNodesCopy;\n         {\n@@ -1878,7 +1879,7 @@ void CConnman::ThreadMessageHandler()\n                 pnode->Release();\n         }\n \n-        if (fSleep)\n+        if (fSleep && !fMessageHandlerWork.load(std::memory_order_relaxed))\n             messageHandlerCondition.timed_wait(lock, start_time + boost::posix_time::milliseconds(100));\n     }\n }\n@@ -2071,6 +2072,7 @@ CConnman::CConnman(uint64_t nSeed0In, uint64_t nSeed1In) : nSeed0(nSeed0In), nSe\n     nMaxOutbound = 0;\n     nBestHeight = 0;\n     clientInterface = NULL;\n+    fMessageHandlerWork = false;\n }\n \n NodeId CConnman::GetNewNodeId()"
      },
      {
        "sha": "b21ce149a932c23d381b00d29d659a6c72ee84d9",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b95d7a506eca0963b22c5e6f46d1a1b0fe3e2d50/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b95d7a506eca0963b22c5e6f46d1a1b0fe3e2d50/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=b95d7a506eca0963b22c5e6f46d1a1b0fe3e2d50",
        "patch": "@@ -154,7 +154,7 @@ class CConnman\n \n     void PushMessage(CNode* pnode, CSerializedNetMsg&& msg);\n \n-    void WakeMessageHandler() { messageHandlerCondition.notify_one(); };\n+    void WakeMessageHandler() { fMessageHandlerWork.store(true, std::memory_order_relaxed); messageHandlerCondition.notify_one(); };\n \n     template<typename Callable>\n     bool ForEachNodeContinueIf(Callable&& func)\n@@ -405,6 +405,7 @@ class CConnman\n     mutable CCriticalSection cs_vNodes;\n     std::atomic<NodeId> nLastNodeId;\n     boost::condition_variable messageHandlerCondition;\n+    std::atomic<bool> fMessageHandlerWork;\n \n     /** Services this instance offers */\n     ServiceFlags nLocalServices;"
      },
      {
        "sha": "808f6214fb1da06690fc28f7bd1bc956fb4cb448",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b95d7a506eca0963b22c5e6f46d1a1b0fe3e2d50/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b95d7a506eca0963b22c5e6f46d1a1b0fe3e2d50/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=b95d7a506eca0963b22c5e6f46d1a1b0fe3e2d50",
        "patch": "@@ -2608,8 +2608,11 @@ bool SendMessages(CNode* pto, CConnman& connman)\n         }\n \n         TRY_LOCK(cs_main, lockMain); // Acquire cs_main for IsInitialBlockDownload() and CNodeState()\n-        if (!lockMain)\n+        if (!lockMain) {\n+            // Couldn't make progress here, so we want to try again after handling other peers.\n+            connman.WakeMessageHandler();\n             return true;\n+        }\n \n         CNodeState &state = *State(pto->GetId());\n "
      }
    ]
  },
  {
    "sha": "e255f7dcaec4ef4fdd7702c6cc3b9b5815f823f3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMjU1ZjdkY2FlYzRlZjRmZGQ3NzAyYzZjYzNiOWI1ODE1ZjgyM2Yz",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-12-29T09:15:05Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-12-29T14:58:41Z"
      },
      "message": "Only hold cs_vRecvMsg long enough to move out the message.\n\nThis also eliminates a race on nSendSize by making it atomic.\n\nThis speeds up IBD up to 200k from a single peer over GbE\n compared to master by about 200%, by eliminating cs_vRecvMsg\n contention (that the prior commits happened to also make worse).",
      "tree": {
        "sha": "5531e1a0e24695ae2a4c10fb10ed2193f94535c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5531e1a0e24695ae2a4c10fb10ed2193f94535c4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e255f7dcaec4ef4fdd7702c6cc3b9b5815f823f3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e255f7dcaec4ef4fdd7702c6cc3b9b5815f823f3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e255f7dcaec4ef4fdd7702c6cc3b9b5815f823f3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e255f7dcaec4ef4fdd7702c6cc3b9b5815f823f3/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b95d7a506eca0963b22c5e6f46d1a1b0fe3e2d50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b95d7a506eca0963b22c5e6f46d1a1b0fe3e2d50",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b95d7a506eca0963b22c5e6f46d1a1b0fe3e2d50"
      }
    ],
    "stats": {
      "total": 94,
      "additions": 32,
      "deletions": 62
    },
    "files": [
      {
        "sha": "163b32707dd5b4618e5b476d1f39f7e250ab3d51",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 28,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e255f7dcaec4ef4fdd7702c6cc3b9b5815f823f3/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e255f7dcaec4ef4fdd7702c6cc3b9b5815f823f3/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=e255f7dcaec4ef4fdd7702c6cc3b9b5815f823f3",
        "patch": "@@ -1169,9 +1169,8 @@ void CConnman::ThreadSocketHandler()\n                     }\n                 }\n                 {\n-                    TRY_LOCK(pnode->cs_vRecvMsg, lockRecv);\n-                    if (lockRecv && (\n-                        pnode->vRecvMsg.empty() || !pnode->vRecvMsg.front().complete() ||\n+                    LOCK(pnode->cs_vRecvMsg);\n+                    if ((pnode->vRecvMsg.empty() || !pnode->vRecvMsg.front().complete() ||\n                         pnode->GetTotalRecvSize() <= GetReceiveFloodSize()))\n                         FD_SET(pnode->hSocket, &fdsetRecv);\n                 }\n@@ -1228,8 +1227,7 @@ void CConnman::ThreadSocketHandler()\n                 continue;\n             if (FD_ISSET(pnode->hSocket, &fdsetRecv) || FD_ISSET(pnode->hSocket, &fdsetError))\n             {\n-                TRY_LOCK(pnode->cs_vRecvMsg, lockRecv);\n-                if (lockRecv)\n+                LOCK(pnode->cs_vRecvMsg);\n                 {\n                     {\n                         // typical socket buffer is 8K-64K\n@@ -1838,38 +1836,20 @@ void CConnman::ThreadMessageHandler()\n             }\n         }\n \n-        bool fSleep = true;\n-\n         BOOST_FOREACH(CNode* pnode, vNodesCopy)\n         {\n             if (pnode->fDisconnect)\n                 continue;\n \n             // Receive messages\n-            {\n-                TRY_LOCK(pnode->cs_vRecvMsg, lockRecv);\n-                if (lockRecv)\n-                {\n-                    if (!GetNodeSignals().ProcessMessages(pnode, *this))\n-                        pnode->CloseSocketDisconnect();\n+            if (!GetNodeSignals().ProcessMessages(pnode, *this))\n+                pnode->CloseSocketDisconnect();\n \n-                    if (pnode->nSendSize < GetSendBufferSize())\n-                    {\n-                        if (!pnode->vRecvGetData.empty() || (!pnode->vRecvMsg.empty() && pnode->vRecvMsg[0].complete()))\n-                        {\n-                            fSleep = false;\n-                        }\n-                    }\n-                }\n-            }\n             boost::this_thread::interruption_point();\n \n             // Send messages\n-            {\n-                TRY_LOCK(pnode->cs_vSend, lockSend);\n-                if (lockSend)\n-                    GetNodeSignals().SendMessages(pnode, *this);\n-            }\n+            GetNodeSignals().SendMessages(pnode, *this);\n+\n             boost::this_thread::interruption_point();\n         }\n \n@@ -1879,7 +1859,7 @@ void CConnman::ThreadMessageHandler()\n                 pnode->Release();\n         }\n \n-        if (fSleep && !fMessageHandlerWork.load(std::memory_order_relaxed))\n+        if (!fMessageHandlerWork.load(std::memory_order_relaxed))\n             messageHandlerCondition.timed_wait(lock, start_time + boost::posix_time::milliseconds(100));\n     }\n }"
      },
      {
        "sha": "52ff6730fdcfa7c26908f3f7716e2d5992191b1b",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e255f7dcaec4ef4fdd7702c6cc3b9b5815f823f3/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e255f7dcaec4ef4fdd7702c6cc3b9b5815f823f3/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=e255f7dcaec4ef4fdd7702c6cc3b9b5815f823f3",
        "patch": "@@ -586,7 +586,7 @@ class CNode\n     ServiceFlags nServices;\n     ServiceFlags nServicesExpected;\n     SOCKET hSocket;\n-    size_t nSendSize; // total size of all vSendMsg entries\n+    std::atomic<size_t> nSendSize; // total size of all vSendMsg entries\n     size_t nSendOffset; // offset inside the first vSendMsg already sent\n     uint64_t nSendBytes;\n     std::deque<std::vector<unsigned char>> vSendMsg;\n@@ -736,9 +736,9 @@ class CNode\n     // requires LOCK(cs_vRecvMsg)\n     bool ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete);\n \n-    // requires LOCK(cs_vRecvMsg)\n     void SetRecvVersion(int nVersionIn)\n     {\n+        LOCK(cs_vRecvMsg);\n         nRecvVersion = nVersionIn;\n         BOOST_FOREACH(CNetMessage &msg, vRecvMsg)\n             msg.SetVersion(nVersionIn);"
      },
      {
        "sha": "1d53f57c88d75845a3116404f1d57d301b3c2c0e",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 32,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e255f7dcaec4ef4fdd7702c6cc3b9b5815f823f3/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e255f7dcaec4ef4fdd7702c6cc3b9b5815f823f3/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=e255f7dcaec4ef4fdd7702c6cc3b9b5815f823f3",
        "patch": "@@ -2422,7 +2422,6 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     return true;\n }\n \n-// requires LOCK(cs_vRecvMsg)\n bool ProcessMessages(CNode* pfrom, CConnman& connman)\n {\n     const CChainParams& chainparams = Params();\n@@ -2444,36 +2443,32 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman)\n         ProcessGetData(pfrom, chainparams.GetConsensus(), connman);\n \n     // this maintains the order of responses\n-    if (!pfrom->vRecvGetData.empty()) return fOk;\n-\n-    std::deque<CNetMessage>::iterator it = pfrom->vRecvMsg.begin();\n-    while (!pfrom->fDisconnect && it != pfrom->vRecvMsg.end()) {\n-        // Don't bother if send buffer is too full to respond anyway\n-        if (pfrom->nSendSize >= nMaxSendBufferSize)\n-            break;\n-\n-        // get next message\n-        CNetMessage& msg = *it;\n-\n-        //if (fDebug)\n-        //    LogPrintf(\"%s(message %u msgsz, %u bytes, complete:%s)\\n\", __func__,\n-        //            msg.hdr.nMessageSize, msg.vRecv.size(),\n-        //            msg.complete() ? \"Y\" : \"N\");\n-\n-        // end, if an incomplete message is found\n-        if (!msg.complete())\n-            break;\n-\n-        // at this point, any failure means we can delete the current message\n-        it++;\n+    if (!pfrom->vRecvGetData.empty()) {\n+        connman.WakeMessageHandler();\n+        return fOk;\n+    }\n \n-        // Scan for message start\n-        if (memcmp(msg.hdr.pchMessageStart, chainparams.MessageStart(), CMessageHeader::MESSAGE_START_SIZE) != 0) {\n-            LogPrintf(\"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.hdr.GetCommand()), pfrom->id);\n-            fOk = false;\n+    while (!pfrom->fDisconnect) {\n+        std::vector<CNetMessage> vMsg;\n+        if (pfrom->nSendSize >= nMaxSendBufferSize) {\n+            connman.WakeMessageHandler();\n             break;\n         }\n+        {\n+            LOCK(pfrom->cs_vRecvMsg);\n+            if (!pfrom->vRecvMsg.empty()) {\n+                if (!pfrom->vRecvMsg.front().complete()) break;\n+                // Move the message.\n+                vMsg.push_back(std::move(pfrom->vRecvMsg.front()));\n+                if (pfrom->fDisconnect) break;\n+                pfrom->vRecvMsg.pop_front();\n+                if (!pfrom->vRecvMsg.empty() && pfrom->vRecvMsg.front().complete()) connman.WakeMessageHandler();\n+            }\n+        }\n+\n+        if (vMsg.size() < 1) break;\n \n+        CNetMessage& msg = vMsg.front();\n         // Read header\n         CMessageHeader& hdr = msg.hdr;\n         if (!hdr.IsValid(chainparams.MessageStart()))\n@@ -2542,11 +2537,6 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman)\n \n         break;\n     }\n-\n-    // In case the connection got shut down, its receive buffer was wiped\n-    if (!pfrom->fDisconnect)\n-        pfrom->vRecvMsg.erase(pfrom->vRecvMsg.begin(), it);\n-\n     return fOk;\n }\n "
      }
    ]
  }
]