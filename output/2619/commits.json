[
  {
    "sha": "06960f43944aa986df43b8d71a1883686688593f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNjk2MGY0Mzk0NGFhOTg2ZGY0M2I4ZDcxYTE4ODM2ODY2ODg1OTNm",
    "commit": {
      "author": {
        "name": "freewil",
        "email": "sean@eternalrise.com",
        "date": "2013-05-05T06:16:16Z"
      },
      "committer": {
        "name": "freewil",
        "email": "sean@eternalrise.com",
        "date": "2013-05-05T06:24:20Z"
      },
      "message": "always show wallet encryption commands in `help`\n\nHiding commands in the output of `help` based on user's current\nconfiguration (the wallet is encrypted or not) can be confusing.\nIt doesn't seem to make sense to hide basic documentation from the\nuser in this way.",
      "tree": {
        "sha": "0ab1dc8e303f33ab838863d1e6b5c7478d26fd1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ab1dc8e303f33ab838863d1e6b5c7478d26fd1f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06960f43944aa986df43b8d71a1883686688593f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06960f43944aa986df43b8d71a1883686688593f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/06960f43944aa986df43b8d71a1883686688593f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06960f43944aa986df43b8d71a1883686688593f/comments",
    "author": {
      "login": "freewil",
      "id": 716621,
      "node_id": "MDQ6VXNlcjcxNjYyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/716621?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/freewil",
      "html_url": "https://github.com/freewil",
      "followers_url": "https://api.github.com/users/freewil/followers",
      "following_url": "https://api.github.com/users/freewil/following{/other_user}",
      "gists_url": "https://api.github.com/users/freewil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/freewil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/freewil/subscriptions",
      "organizations_url": "https://api.github.com/users/freewil/orgs",
      "repos_url": "https://api.github.com/users/freewil/repos",
      "events_url": "https://api.github.com/users/freewil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/freewil/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "freewil",
      "id": 716621,
      "node_id": "MDQ6VXNlcjcxNjYyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/716621?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/freewil",
      "html_url": "https://github.com/freewil",
      "followers_url": "https://api.github.com/users/freewil/followers",
      "following_url": "https://api.github.com/users/freewil/following{/other_user}",
      "gists_url": "https://api.github.com/users/freewil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/freewil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/freewil/subscriptions",
      "organizations_url": "https://api.github.com/users/freewil/orgs",
      "repos_url": "https://api.github.com/users/freewil/repos",
      "events_url": "https://api.github.com/users/freewil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/freewil/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a0db772d13a33a3ff18b3dc615a4a1e9c81f6f43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0db772d13a33a3ff18b3dc615a4a1e9c81f6f43",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a0db772d13a33a3ff18b3dc615a4a1e9c81f6f43"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 4,
      "deletions": 12
    },
    "files": [
      {
        "sha": "d84f3d063f06c9e71bb7aae540c054ae51df187f",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 12,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06960f43944aa986df43b8d71a1883686688593f/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06960f43944aa986df43b8d71a1883686688593f/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=06960f43944aa986df43b8d71a1883686688593f",
        "patch": "@@ -1313,12 +1313,10 @@ void ThreadCleanWalletPassphrase(void* parg)\n \n Value walletpassphrase(const Array& params, bool fHelp)\n {\n-    if (pwalletMain->IsCrypted() && (fHelp || params.size() != 2))\n+    if (fHelp || params.size() != 2)\n         throw runtime_error(\n             \"walletpassphrase <passphrase> <timeout>\\n\"\n             \"Stores the wallet decryption key in memory for <timeout> seconds.\");\n-    if (fHelp)\n-        return true;\n     if (!pwalletMain->IsCrypted())\n         throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n \n@@ -1352,12 +1350,10 @@ Value walletpassphrase(const Array& params, bool fHelp)\n \n Value walletpassphrasechange(const Array& params, bool fHelp)\n {\n-    if (pwalletMain->IsCrypted() && (fHelp || params.size() != 2))\n+    if (fHelp || params.size() != 2)\n         throw runtime_error(\n             \"walletpassphrasechange <oldpassphrase> <newpassphrase>\\n\"\n             \"Changes the wallet passphrase from <oldpassphrase> to <newpassphrase>.\");\n-    if (fHelp)\n-        return true;\n     if (!pwalletMain->IsCrypted())\n         throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrasechange was called.\");\n \n@@ -1385,14 +1381,12 @@ Value walletpassphrasechange(const Array& params, bool fHelp)\n \n Value walletlock(const Array& params, bool fHelp)\n {\n-    if (pwalletMain->IsCrypted() && (fHelp || params.size() != 0))\n+    if (fHelp || params.size() != 0)\n         throw runtime_error(\n             \"walletlock\\n\"\n             \"Removes the wallet encryption key from memory, locking the wallet.\\n\"\n             \"After calling this method, you will need to call walletpassphrase again\\n\"\n             \"before being able to call any methods which require the wallet to be unlocked.\");\n-    if (fHelp)\n-        return true;\n     if (!pwalletMain->IsCrypted())\n         throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletlock was called.\");\n \n@@ -1408,12 +1402,10 @@ Value walletlock(const Array& params, bool fHelp)\n \n Value encryptwallet(const Array& params, bool fHelp)\n {\n-    if (!pwalletMain->IsCrypted() && (fHelp || params.size() != 1))\n+    if (fHelp || params.size() != 1)\n         throw runtime_error(\n             \"encryptwallet <passphrase>\\n\"\n             \"Encrypts the wallet with <passphrase>.\");\n-    if (fHelp)\n-        return true;\n     if (pwalletMain->IsCrypted())\n         throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an encrypted wallet, but encryptwallet was called.\");\n "
      }
    ]
  }
]