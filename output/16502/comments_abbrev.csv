achow101,2019-07-30 22:56:35,"ACK c1c0819a3d9fb6815dcda2a5f1680d704188dcb8\n\nReviewed code. Looked through the git history and I could not find anywhere where `wkey` was written to the wallet, only where it was read. Thus I believe that it is safe to remove this and won't break compatibility with any wallets created using released versions.",https://github.com/bitcoin/bitcoin/pull/16502#issuecomment-516626676,516626676,
DrahtBot,2019-07-30 22:57:36,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16341](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16341.html) (Introduce ScriptPubKeyMan interface and use",https://github.com/bitcoin/bitcoin/pull/16502#issuecomment-516626876,516626876,
jnewbery,2019-07-30 23:32:07,Concept ACK,https://github.com/bitcoin/bitcoin/pull/16502#issuecomment-516634625,516634625,
laanwj,2019-07-31 06:03:28,"I'm confused. So this ""wkey"" code has existed all the way from the beginning and was never used? That's a very interesting observation. \n\nOne though though: please fail loading when you encounter one instead of ignoring it. So if someone (it's very unlikely, but still) happens to load a wallet with one of these old keys in it, this makes sure they get a compatibility error, instead of the keys",https://github.com/bitcoin/bitcoin/pull/16502#issuecomment-516709186,516709186,
practicalswift,2019-07-31 07:25:05,"Very nice find!\n\nConcept ACK assuming fail on encountering old key",https://github.com/bitcoin/bitcoin/pull/16502#issuecomment-516731255,516731255,
jonasschnelli,2019-07-31 07:50:50,Looks good and agree with @laanwj about that it should fail in case a `wkey` is found.,https://github.com/bitcoin/bitcoin/pull/16502#issuecomment-516738824,516738824,
practicalswift,2019-07-31 09:29:06,utACK df577f7ed0ab06c756110060e01b5be73582f115 modulo squash,https://github.com/bitcoin/bitcoin/pull/16502#issuecomment-516772940,516772940,
promag,2019-07-31 17:37:03,Squashed.,https://github.com/bitcoin/bitcoin/pull/16502#issuecomment-516947974,516947974,
jnewbery,2019-07-31 19:44:45,ACK 0b1f4b3c6685d0a6307926d43d166add538061b7,https://github.com/bitcoin/bitcoin/pull/16502#issuecomment-516993267,516993267,
promag,2019-07-31 13:19:11,I could make this one line.,https://github.com/bitcoin/bitcoin/pull/16502#discussion_r309214637,309214637,src/wallet/walletdb.cpp
promag,2019-07-31 13:19:27,Is the error message OK?,https://github.com/bitcoin/bitcoin/pull/16502#discussion_r309214750,309214750,src/wallet/walletdb.cpp
jnewbery,2019-07-31 13:56:12,"You could add the name of the unsupported record:\n\n```\nstrErr = ""Found unsupported 'wkey' record, try loading with version 0.18"";\n```\n\nYou could even deserialize the pubkey and print that, but it seems unnecessary.\n\nYou might also want to move this `if else` block to the end, immediately before:\n\n```\n        } else if (strType != DBKeys::BESTBLOCK && strType != DBKeys::BESTBL",https://github.com/bitcoin/bitcoin/pull/16502#discussion_r309234351,309234351,src/wallet/walletdb.cpp
promag,2019-07-31 17:36:14,"Done and done, thanks ;)",https://github.com/bitcoin/bitcoin/pull/16502#discussion_r309345465,309345465,src/wallet/walletdb.cpp
fanquake,2019-08-01 03:54:21,I think it's ok to leave this as is.,https://github.com/bitcoin/bitcoin/pull/16502#discussion_r309514014,309514014,src/wallet/walletdb.cpp
