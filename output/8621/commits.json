[
  {
    "sha": "fa994a7b8e8f2dbcbfb446e2fe2845866d4cd2cc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTk5NGE3YjhlOGYyZGJjYmZiNDQ2ZTJmZTI4NDU4NjZkNGNkMmNj",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-08-28T15:01:52Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-08-28T15:04:55Z"
      },
      "message": "contrib: Don't use shell=True",
      "tree": {
        "sha": "a8af129352f27db2e096937d72c577c7137a19a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a8af129352f27db2e096937d72c577c7137a19a3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa994a7b8e8f2dbcbfb446e2fe2845866d4cd2cc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa994a7b8e8f2dbcbfb446e2fe2845866d4cd2cc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa994a7b8e8f2dbcbfb446e2fe2845866d4cd2cc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa994a7b8e8f2dbcbfb446e2fe2845866d4cd2cc/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fafe7b3432d5117e3f207eafe2fca1f9637b24f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fafe7b3432d5117e3f207eafe2fca1f9637b24f6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fafe7b3432d5117e3f207eafe2fca1f9637b24f6"
      }
    ],
    "stats": {
      "total": 77,
      "additions": 49,
      "deletions": 28
    },
    "files": [
      {
        "sha": "54836bd83f592964296ce8a8b6bce2281f069b4f",
        "filename": "contrib/devtools/fix-copyright-headers.py",
        "status": "modified",
        "additions": 49,
        "deletions": 28,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa994a7b8e8f2dbcbfb446e2fe2845866d4cd2cc/contrib/devtools/fix-copyright-headers.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa994a7b8e8f2dbcbfb446e2fe2845866d4cd2cc/contrib/devtools/fix-copyright-headers.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/fix-copyright-headers.py?ref=fa994a7b8e8f2dbcbfb446e2fe2845866d4cd2cc",
        "patch": "@@ -1,5 +1,5 @@\n-#!/usr/bin/env python\n-'''\n+#!/usr/bin/env python3\n+\"\"\"\n Run this script to update all the copyright headers of files\n that were changed this year.\n \n@@ -10,37 +10,58 @@\n it will change it to\n \n // Copyright (c) 2009-2015 The Bitcoin Core developers\n-'''\n-import os\n+\"\"\"\n+import subprocess\n import time\n import re\n \n-year = time.gmtime()[0]\n-CMD_GIT_DATE = 'git log --format=%%ad --date=short -1 %s | cut -d\"-\" -f 1'\n-CMD_REGEX= \"perl -pi -e 's/(20\\d\\d)(?:-20\\d\\d)? The Bitcoin/$1-%s The Bitcoin/' %s\"\n-REGEX_CURRENT= re.compile(\"%s The Bitcoin\" % year)\n-CMD_LIST_FILES= \"find %s | grep %s\"\n+CMD_GIT_LIST_FILES = ['git', 'ls-files']\n+CMD_GIT_DATE = ['git', 'log', '--format=%ad', '--date=short', '-1']\n+CMD_PERL_REGEX = ['perl', '-pi', '-e']\n+REGEX_TEMPLATE = 's/(20\\\\d\\\\d)(?:-20\\\\d\\\\d)? The Bitcoin/$1-%s The Bitcoin/'\n \n-FOLDERS = [\"./qa\", \"./src\"]\n+FOLDERS = [\"qa/\", \"src/\"]\n EXTENSIONS = [\".cpp\",\".h\", \".py\"]\n \n+\n def get_git_date(file_path):\n-  r = os.popen(CMD_GIT_DATE % file_path)\n-  for l in r:\n-    # Result is one line, so just return\n-    return l.replace(\"\\n\",\"\")\n-  return \"\"\n-\n-n=1\n-for folder in FOLDERS:\n-  for extension in EXTENSIONS:\n-    for file_path in os.popen(CMD_LIST_FILES % (folder, extension)):\n-      file_path = os.getcwd() + file_path[1:-1]\n-      if file_path.endswith(extension):\n-        git_date = get_git_date(file_path)\n-        if str(year) == git_date:\n-          # Only update if current year is not found\n-          if REGEX_CURRENT.search(open(file_path, \"r\").read()) is None:\n-            print n,\"Last git edit\", git_date, \"-\", file_path\n-            os.popen(CMD_REGEX % (year,file_path))\n+    d = subprocess.run(CMD_GIT_DATE + [file_path],\n+                       stdout=subprocess.PIPE,\n+                       check=True,\n+                       universal_newlines=True).stdout\n+    # yyyy-mm-dd\n+    return d.split('-')[0]\n+\n+\n+def skip_file(file_path):\n+    for ext in EXTENSIONS:\n+        if file_path.endswith(ext):\n+            return False\n+    else:\n+        return True\n+\n+if __name__ == \"__main__\":\n+    year = str(time.gmtime()[0])\n+    regex_current = re.compile(\"%s The Bitcoin\" % year)\n+    n = 1\n+    for folder in FOLDERS:\n+        for file_path in subprocess.run(\n+            CMD_GIT_LIST_FILES + [folder],\n+            stdout=subprocess.PIPE,\n+            check=True,\n+            universal_newlines=True\n+        ).stdout.split(\"\\n\"):\n+            if skip_file(file_path):\n+                # print(file_path, \"(skip)\")\n+                continue\n+            git_date = get_git_date(file_path)\n+            if not year == git_date:\n+                # print(file_path, year, \"(skip)\")\n+                continue\n+            if regex_current.search(open(file_path, \"r\").read()) is not None:\n+                # already up to date\n+                # print(file_path, year, \"(skip)\")\n+                continue\n+            print(n, file_path, \"(update to %s)\" % year)\n+            subprocess.run(CMD_PERL_REGEX + [REGEX_TEMPLATE % year, file_path], check=True)\n             n = n + 1"
      }
    ]
  }
]