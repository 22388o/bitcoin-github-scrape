MarcoFalke,2018-06-25T12:20:55Z,Is this the only place in the code where this needs fixing?,https://github.com/bitcoin/bitcoin/pull/13534#issuecomment-399932193,399932193,
MarcoFalke,2018-06-25T21:56:06Z,"Again, I believe we use this excessively in other parts of the code. What makes you fix this specific instance?",https://github.com/bitcoin/bitcoin/pull/13534#issuecomment-400108748,400108748,
practicalswift,2018-06-26T12:53:30Z,"@MarcoFalke This is the only instance I know of where the `assert(…)` includes a function or expression that has a side effect (or more specifically where the execution would differ between `defined(NDEBUG)` vs. `!defined(NDEBUG)` beyond `assert(...)` obviously being expanded to a noop in the former case). Can you find another example? :-)\n\nCandidates:\n\n```\ngit grep '[^_]assert(.*);' | \",https://github.com/bitcoin/bitcoin/pull/13534#issuecomment-400296837,400296837,
MarcoFalke,2018-06-26T13:55:22Z,"They sound a bit like side-effects, haven't checked:\n\n```\n$ git grep 'assert(' src/bench/checkblock.cpp src/httprpc.cpp\nsrc/bench/checkblock.cpp:        assert(stream.Rewind(sizeof(block_bench::block413567)));\nsrc/bench/checkblock.cpp:        assert(stream.Rewind(sizeof(block_bench::block413567)));\nsrc/bench/checkblock.cpp:        assert(CheckBlock(block, validationState, chainParams->",https://github.com/bitcoin/bitcoin/pull/13534#issuecomment-400317671,400317671,
practicalswift,2018-06-26T15:21:57Z,@MarcoFalke `++block->nNonce` case is special in that `block` is used after the `assert(…)` takes place. I've now included the cases you mentioned and two others. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/13534#issuecomment-400349700,400349700,
promag,2018-06-29T07:06:35Z,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/13534#issuecomment-401267720,401267720,
Empact,2018-07-02T20:39:35Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/13534#issuecomment-401927627,401927627,
practicalswift,2018-07-06T08:33:55Z,@Empact @laanwj @promag Thanks for reviewing. Updated. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/13534#issuecomment-402966499,402966499,
practicalswift,2018-07-06T16:41:17Z,@Empact Good point. Feedback addressed. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/13534#issuecomment-403086396,403086396,
practicalswift,2018-07-06T22:08:53Z,@Empact Please re-review :-),https://github.com/bitcoin/bitcoin/pull/13534#issuecomment-403158878,403158878,
Empact,2018-07-07T01:12:12Z,utACK b0040a9,https://github.com/bitcoin/bitcoin/pull/13534#issuecomment-403178639,403178639,
Empact,2018-07-07T14:20:15Z,re-utACK 6ad0328,https://github.com/bitcoin/bitcoin/pull/13534#issuecomment-403218934,403218934,
gmaxwell,2018-07-10T08:30:55Z,"per our own style guide:\n\n- Assertions should not have side-effects\n\n  - *Rationale*: Even though the source code is set to refuse to compile\n    with assertions disabled, having side-effects in assertions is unexpected and\n    makes the code harder to understand\n\nSeveral people have in the past swept through the code and fixed these things, and they should keep getting fixed, so C",https://github.com/bitcoin/bitcoin/pull/13534#issuecomment-403743392,403743392,
MarcoFalke,2018-07-10T16:29:29Z,utACK 6ad0328,https://github.com/bitcoin/bitcoin/pull/13534#issuecomment-403885222,403885222,
ken2812221,2018-08-10T05:01:23Z,utACK 6ad0328,https://github.com/bitcoin/bitcoin/pull/13534#issuecomment-411975763,411975763,
MarcoFalke,2018-06-25T12:22:03Z,"You can just remove the assert. This is regtest, so a wrap is ""impossible"" anyway.",https://github.com/bitcoin/bitcoin/pull/13534#discussion_r197775550,197775550,src/bench/block_assemble.cpp
practicalswift,2018-06-25T12:33:57Z,"Like this?\n\n```\n     while (!CheckProofOfWork(block->GetHash(), block->nBits, Params().GetConsensus())) {\n         ++block->nNonce;\n     }\n```",https://github.com/bitcoin/bitcoin/pull/13534#discussion_r197778603,197778603,src/bench/block_assemble.cpp
MarcoFalke,2018-06-25T12:40:24Z,sure,https://github.com/bitcoin/bitcoin/pull/13534#discussion_r197780332,197780332,src/bench/block_assemble.cpp
Empact,2018-07-02T20:37:35Z,"nit: Could reuse `eventBase` on this line. The type `struct event_base*` could be informative, given it makes the assert's meaning clear.",https://github.com/bitcoin/bitcoin/pull/13534#discussion_r199613830,199613830,src/httprpc.cpp
Empact,2018-07-02T20:39:01Z,"The `->nNonce` access has no effect without the assert. I would be in favor of keeping the assert on the following line. Or something like:\n\n```cpp\nwhile (!CheckProofOfWork(block->GetHash(), block->nBits, Params().GetConsensus()) && ++block) {\n    assert(block->nNonce);\n}\n```\n",https://github.com/bitcoin/bitcoin/pull/13534#discussion_r199614236,199614236,src/bench/block_assemble.cpp
laanwj,2018-07-04T13:49:09Z,"I agree. If we assign this to a variable anyway, we should use that.\nNote, though, that `EventBase()` has no side effects, it is fully a getter function.",https://github.com/bitcoin/bitcoin/pull/13534#discussion_r200132589,200132589,src/httprpc.cpp
Empact,2018-07-06T10:47:20Z,This will never fail on account of `->nNonce` being in the `while` condition.,https://github.com/bitcoin/bitcoin/pull/13534#discussion_r200617737,200617737,src/bench/block_assemble.cpp
Empact,2018-07-06T21:20:55Z,Ok I realize I misread the precedence when I originally suggested to put it in the while condition. Sorry about that. Now I think it'd be better to put it in the block and let the assert do its thing. :P,https://github.com/bitcoin/bitcoin/pull/13534#discussion_r200772537,200772537,src/bench/block_assemble.cpp
Empact,2018-07-07T01:11:40Z,nit: could be `++block->nNonce` as before,https://github.com/bitcoin/bitcoin/pull/13534#discussion_r200798241,200798241,src/bench/block_assemble.cpp
practicalswift,2018-07-07T08:10:28Z,@Empact Updated. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/13534#discussion_r200805901,200805901,src/bench/block_assemble.cpp
promag,2018-07-08T21:07:34Z,"`++block`?\n\nNote that this is as: `assert(++(block->nNonce));`",https://github.com/bitcoin/bitcoin/pull/13534#discussion_r200853954,200853954,src/bench/block_assemble.cpp
Empact,2018-07-09T03:11:28Z,"Thanks, yeah figured that out here: https://github.com/bitcoin/bitcoin/pull/13534#discussion_r200772537 :P",https://github.com/bitcoin/bitcoin/pull/13534#discussion_r200872405,200872405,src/bench/block_assemble.cpp
