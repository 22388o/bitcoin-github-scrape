[
  {
    "sha": "6ad0328f1c3e145d3224197eafd0f66b17cc1a1c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YWQwMzI4ZjFjM2UxNDVkMzIyNDE5N2VhZmQwZjY2YjE3Y2MxYTFj",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-06-26T15:19:31Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-07-07T08:08:49Z"
      },
      "message": "Don't assert(foo()) where foo has side effects",
      "tree": {
        "sha": "882c1e7bb5c90609063a05e642b4efb8cf2c1660",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/882c1e7bb5c90609063a05e642b4efb8cf2c1660"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ad0328f1c3e145d3224197eafd0f66b17cc1a1c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ad0328f1c3e145d3224197eafd0f66b17cc1a1c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6ad0328f1c3e145d3224197eafd0f66b17cc1a1c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ad0328f1c3e145d3224197eafd0f66b17cc1a1c/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0212187fc624ea4a02fc99bc57ebd413499a9ee1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0212187fc624ea4a02fc99bc57ebd413499a9ee1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0212187fc624ea4a02fc99bc57ebd413499a9ee1"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 14,
      "deletions": 8
    },
    "files": [
      {
        "sha": "2bd67654ab792f5c6f6f44d8b1fca1972d768e52",
        "filename": "src/bench/block_assemble.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad0328f1c3e145d3224197eafd0f66b17cc1a1c/src/bench/block_assemble.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad0328f1c3e145d3224197eafd0f66b17cc1a1c/src/bench/block_assemble.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/block_assemble.cpp?ref=6ad0328f1c3e145d3224197eafd0f66b17cc1a1c",
        "patch": "@@ -41,7 +41,8 @@ static CTxIn MineBlock(const CScript& coinbase_scriptPubKey)\n     auto block = PrepareBlock(coinbase_scriptPubKey);\n \n     while (!CheckProofOfWork(block->GetHash(), block->nBits, Params().GetConsensus())) {\n-        assert(++block->nNonce);\n+        ++block->nNonce;\n+        assert(block->nNonce);\n     }\n \n     bool processed{ProcessNewBlock(Params(), block, true, nullptr)};"
      },
      {
        "sha": "387ae1769c89d6179f5d85878a49b6ef8bb56fb7",
        "filename": "src/bench/checkblock.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad0328f1c3e145d3224197eafd0f66b17cc1a1c/src/bench/checkblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad0328f1c3e145d3224197eafd0f66b17cc1a1c/src/bench/checkblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/checkblock.cpp?ref=6ad0328f1c3e145d3224197eafd0f66b17cc1a1c",
        "patch": "@@ -28,7 +28,8 @@ static void DeserializeBlockTest(benchmark::State& state)\n     while (state.KeepRunning()) {\n         CBlock block;\n         stream >> block;\n-        assert(stream.Rewind(sizeof(block_bench::block413567)));\n+        bool rewound = stream.Rewind(sizeof(block_bench::block413567));\n+        assert(rewound);\n     }\n }\n \n@@ -45,10 +46,12 @@ static void DeserializeAndCheckBlockTest(benchmark::State& state)\n     while (state.KeepRunning()) {\n         CBlock block; // Note that CBlock caches its checked state, so we need to recreate it here\n         stream >> block;\n-        assert(stream.Rewind(sizeof(block_bench::block413567)));\n+        bool rewound = stream.Rewind(sizeof(block_bench::block413567));\n+        assert(rewound);\n \n         CValidationState validationState;\n-        assert(CheckBlock(block, validationState, chainParams->GetConsensus()));\n+        bool checked = CheckBlock(block, validationState, chainParams->GetConsensus());\n+        assert(checked);\n     }\n }\n "
      },
      {
        "sha": "aec92711c9646cf2428716941591a1394c7fb121",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad0328f1c3e145d3224197eafd0f66b17cc1a1c/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad0328f1c3e145d3224197eafd0f66b17cc1a1c/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=6ad0328f1c3e145d3224197eafd0f66b17cc1a1c",
        "patch": "@@ -240,8 +240,9 @@ bool StartHTTPRPC()\n     // ifdef can be removed once we switch to better endpoint support and API versioning\n     RegisterHTTPHandler(\"/wallet/\", false, HTTPReq_JSONRPC);\n #endif\n-    assert(EventBase());\n-    httpRPCTimerInterface = MakeUnique<HTTPRPCTimerInterface>(EventBase());\n+    struct event_base* eventBase = EventBase();\n+    assert(eventBase);\n+    httpRPCTimerInterface = MakeUnique<HTTPRPCTimerInterface>(eventBase);\n     RPCSetTimerInterface(httpRPCTimerInterface.get());\n     return true;\n }"
      },
      {
        "sha": "541d90e78f30c90a6f11b7a3680b3e5b73e8e5dc",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad0328f1c3e145d3224197eafd0f66b17cc1a1c/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad0328f1c3e145d3224197eafd0f66b17cc1a1c/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=6ad0328f1c3e145d3224197eafd0f66b17cc1a1c",
        "patch": "@@ -424,7 +424,8 @@ bool IsSolvable(const SigningProvider& provider, const CScript& script)\n     static_assert(STANDARD_SCRIPT_VERIFY_FLAGS & SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, \"IsSolvable requires standard script flags to include WITNESS_PUBKEYTYPE\");\n     if (ProduceSignature(provider, DUMMY_SIGNATURE_CREATOR, script, sigs)) {\n         // VerifyScript check is just defensive, and should never fail.\n-        assert(VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, DUMMY_CHECKER));\n+        bool verified = VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, DUMMY_CHECKER);\n+        assert(verified);\n         return true;\n     }\n     return false;"
      },
      {
        "sha": "473ec5addfe1dd5f7bed30079935ad34f25a8bf0",
        "filename": "src/test/txvalidation_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad0328f1c3e145d3224197eafd0f66b17cc1a1c/src/test/txvalidation_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad0328f1c3e145d3224197eafd0f66b17cc1a1c/src/test/txvalidation_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/txvalidation_tests.cpp?ref=6ad0328f1c3e145d3224197eafd0f66b17cc1a1c",
        "patch": "@@ -30,7 +30,7 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_reject_coinbase, TestChain100Setup)\n     coinbaseTx.vout[0].nValue = 1 * CENT;\n     coinbaseTx.vout[0].scriptPubKey = scriptPubKey;\n \n-    assert(CTransaction(coinbaseTx).IsCoinBase());\n+    BOOST_CHECK(CTransaction(coinbaseTx).IsCoinBase());\n \n     CValidationState state;\n "
      }
    ]
  }
]