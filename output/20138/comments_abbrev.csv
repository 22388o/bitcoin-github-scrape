practicalswift,2020-10-12 21:04:08,"Concept ACK\n\nWhile touching `src/util/check.h`, would you mind cherry-picking in 91bdd439987fb3f24f9b841fe88b3cf416b38f48 from #20122 to make `Assert(â€¦)` usable in all contexts?",https://github.com/bitcoin/bitcoin/pull/20138#issuecomment-707344951,707344951,
MarcoFalke,2020-10-12 21:05:19,`DABORT_ON_FAILED_ASSUME` is taken from #16136 by @practicalswift ,https://github.com/bitcoin/bitcoin/pull/20138#issuecomment-707345466,707345466,
naumenkogs,2020-10-13 07:36:05,utACK fa1bcec498074de6f6780dc14e8cacaa6f951bb2,https://github.com/bitcoin/bitcoin/pull/20138#issuecomment-707552921,707552921,
practicalswift,2020-10-13 09:22:34,ACK fab93637867217266a810794d179487bb1eb8c69: patch looks correct,https://github.com/bitcoin/bitcoin/pull/20138#issuecomment-707613215,707613215,
naumenkogs,2020-10-13 09:49:33,ACK fab9363,https://github.com/bitcoin/bitcoin/pull/20138#issuecomment-707627684,707627684,
DrahtBot,2020-10-13 13:58:54,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20477 (test/net: Add unit testing of node eviction logic by practicalswift)\n* #19972 ([draft] fuzz/net: Add fuzzing harn",https://github.com/bitcoin/bitcoin/pull/20138#issuecomment-707758048,707758048,
jnewbery,2020-10-14 10:26:23,"What's the long-term plan for `assert`? Should all `assert`s eventually be changed to:\n\n- `Assert()` for fatal errors - always causes the software to terminate\n- `Assume()` for recoverable errors - only causes the software to terminate if compiled with -enable-debug?\n\nIs it ok for `Assert`/`Assume` condition to have side effects? The reason NDEBUG builds are not allowed is that some of t",https://github.com/bitcoin/bitcoin/pull/20138#issuecomment-708311745,708311745,
MarcoFalke,2020-10-14 11:42:32,"Excellent questions!\n\n* What's the long-term plan for assert?\n\n`assert` and `Assert` do almost the exact same thing and they can be used interchangeably, as long as the code compiles.\n\nExisting asserts should not be replaced with `Assume`, because asserts documents *fatal* checks. For example, the program should not continue when running into UB. (`Assert(pindex)->nHeight` can not cont",https://github.com/bitcoin/bitcoin/pull/20138#issuecomment-708346910,708346910,
jnewbery,2020-10-27 15:40:59,"The title of this PR should be changed to reflect that fact that most of the changes here are to introduce the `Assume()` macro, and it looks like the SetCommonVersion change is just an example of how to use `Assume()`.\n\nI think we should try to get agreement on how `assert`/`Assert`/`Assume` should be used, and document that before merging this.",https://github.com/bitcoin/bitcoin/pull/20138#issuecomment-717331838,717331838,
MarcoFalke,2020-10-27 18:30:34,"Thanks! Added dev docs and split out, as requested by @jnewbery \n\nPlease review #20255 first",https://github.com/bitcoin/bitcoin/pull/20138#issuecomment-717444465,717444465,
practicalswift,2020-12-04 11:25:37,cr ACK fa0f4157098ea68169ced44730986d0ed2c3a5aa: patch looks correct,https://github.com/bitcoin/bitcoin/pull/20138#issuecomment-738731828,738731828,
jnewbery,2020-12-07 11:29:22,utACK fa0f4157098ea68169ced44730986d0ed2c3a5aa,https://github.com/bitcoin/bitcoin/pull/20138#issuecomment-739859507,739859507,
