TheBlueMatt,2017-01-12T19:54:11Z,Note that this commit was pulled out of #9419 as it stands alone and is by itself a big win.,https://github.com/bitcoin/bitcoin/pull/9535#issuecomment-272265047,272265047,
theuni,2017-01-13T04:38:58Z,"utACK 11290734ca7261f732c9f43f152c69de3a42546c, I ran a nearly identical version for over a week with no issues.\n\nShameless beg/plea for 0.14. This was originally intended for #9441, but left out because #9419 (which has since been dropped for 0.14) already included it. I understand that we all have deep review queues atm though, not everything can make it.",https://github.com/bitcoin/bitcoin/pull/9535#issuecomment-272359448,272359448,
TheBlueMatt,2017-01-13T18:35:13Z,Rebased after #9441 merge.,https://github.com/bitcoin/bitcoin/pull/9535#issuecomment-272512577,272512577,
sipa,2017-01-14T03:41:35Z,utACK 376b3c2c6e329357e4793c1d1b90d1dc0f30fed0. Happy to see TRY_LOCKs go.,https://github.com/bitcoin/bitcoin/pull/9535#issuecomment-272599002,272599002,
instagibbs,2017-01-16T21:48:24Z,lock pleb utACK 376b3c2c6e329357e4793c1d1b90d1dc0f30fed0,https://github.com/bitcoin/bitcoin/pull/9535#issuecomment-272969630,272969630,
morcos,2017-01-17T15:55:27Z,"utACK 376b3c2 \n\nsimilar to @instagibbs, this is relatively new code to me, but it seems like it makes sense",https://github.com/bitcoin/bitcoin/pull/9535#issuecomment-273209614,273209614,
jtimon,2017-01-18T00:59:12Z,"I was told by @TheBlueMatt and @theuni:\n```\n<BlueMatt> well #9535 is just a lock split, so just going through each variable that is accessed in one side and making sure its not accessed on the other is a pretty good (though admittedly not 100% sufficient) review\n<BlueMatt> and one one of the sides in this case there are relatively few variables accessed, so its not so hard\n<cfields> BlueMa",https://github.com/bitcoin/bitcoin/pull/9535#issuecomment-273350502,273350502,
theuni,2017-01-18T02:05:19Z,"@jtimon looks good.\n\nRe #4646, something similar is definitely the plan. See https://github.com/theuni/bitcoin/commit/1a6b10aea129ac363727c2d68fae809c2861e4da. That's definitely the next step, it was just too much of a refactor for 0.14.\n\nAs for the non-recursive part, I simply meant that it should now be quite easy to spot potential deadlocks since cs_vSend is now limited enough in scope ",https://github.com/bitcoin/bitcoin/pull/9535#issuecomment-273361472,273361472,
jtimon,2017-01-19T01:27:49Z,"Alright, going through all pnode->cs_vSend was easy, but after going though all SendMessages (I updated the list in my comment above), looking only at the pto parameter for the first pass (which is the most relevant for this pr) and not being exhaustive about all potential globals and not going recursively though connman.PushMessage() IsInitialBlockDownload(), Broadcast(nTimeBestReceived, &connman",https://github.com/bitcoin/bitcoin/pull/9535#issuecomment-273655540,273655540,
jonasschnelli,2017-01-19T19:11:47Z,utACK https://github.com/bitcoin/bitcoin/commit/376b3c2c6e329357e4793c1d1b90d1dc0f30fed0,https://github.com/bitcoin/bitcoin/pull/9535#issuecomment-273869106,273869106,
theuni,2017-01-13T03:59:13Z,No need for the TRY_LOCK here. Death to 'em!,https://github.com/bitcoin/bitcoin/pull/9535#discussion_r95934476,95934476,src/net.cpp
TheBlueMatt,2017-01-13T04:09:50Z,Ok,https://github.com/bitcoin/bitcoin/pull/9535#discussion_r95935161,95935161,src/net.cpp
jtimon,2017-01-17T18:15:54Z,"RecordBytesSent() needs to be called from inside the lock? If so, I assume the same would be needed in CConnman::PushMessage",https://github.com/bitcoin/bitcoin/pull/9535#discussion_r96474354,96474354,src/net.cpp
theuni,2017-01-17T18:25:20Z,"@jtimon No, RecordBytesSent does not require the lock. It has its own.",https://github.com/bitcoin/bitcoin/pull/9535#discussion_r96476299,96476299,src/net.cpp
TheBlueMatt,2017-01-17T18:31:13Z,"Just double checked, it looks like every variable accessed in RecordBytesSent is only done with cs_totalBytesSent (and even if this weren't true, this change wouldnt be a regression, we still call PushMessage from other functions without cs_vSend).",https://github.com/bitcoin/bitcoin/pull/9535#discussion_r96477621,96477621,src/net.cpp
