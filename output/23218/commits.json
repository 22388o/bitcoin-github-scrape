[
  {
    "sha": "fadf1186c899f45787a91c28120b0608bdc6c246",
    "node_id": "C_kwDOABII59oAKGZhZGYxMTg2Yzg5OWY0NTc4N2E5MWMyODEyMGIwNjA4YmRjNmMyNDY",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-07T11:22:51Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-07T11:22:02Z"
      },
      "message": "p2p: Use mocktime for ping timeout",
      "tree": {
        "sha": "d7510161aa389dcbd0b7ed911cb5249c587f258a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d7510161aa389dcbd0b7ed911cb5249c587f258a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fadf1186c899f45787a91c28120b0608bdc6c246",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgqCgv/RTmsHofsKmcbsyPTSmFQiAsVtLT3fT+y4VXAqWxYWkgFkdHujUYioPXC\n6Xy5/ZEu4CtVr8wfzaoBoZPxfS3h2sJL/KD8br6lY6o9QvLWQhxmlr8R9Rvop0wm\nLaYFR8A0cdZswP6b4aWLEtU8sIhx8A/AcCfxblHkhiZr7cR5NEAdsybBLZpqsQu8\n0IPdnAS0ZRp5AGd/qCsfDaDsxU7kmumx/fkY9IiRFUCKkvFEUapqqxx5C9ZvgkKs\n6+KOuky3mOOMhhik85fKYcoVk98bYtojUvrB9xZ1mG0DOkBMjQ5e9rcGIZ3yzNqC\n7CbhOmF5JYVgE+cWmBN3CRipk5roIpmdn2ylTWpOIktpBXCK/t/psvmK4BO8ChFj\n8h61KMHrjFf7xnacLUoPoETs4NmXX2pJOhuIK6J09L+Pwm7mGzI2cruNrrDetm2w\nrhiRU8BDokga+/UMbEm1bEgjsOGbVlPNOh4mgURNzba9NHMLhkWbUaOmvwdzcU3c\nzmlxnUYQ\n=zgrV\n-----END PGP SIGNATURE-----",
        "payload": "tree d7510161aa389dcbd0b7ed911cb5249c587f258a\nparent c0b6c96eee7c9e24b78935516225259e61cdabf7\nauthor MarcoFalke <falke.marco@gmail.com> 1633605771 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1633605722 +0200\n\np2p: Use mocktime for ping timeout\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fadf1186c899f45787a91c28120b0608bdc6c246",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fadf1186c899f45787a91c28120b0608bdc6c246",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fadf1186c899f45787a91c28120b0608bdc6c246/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c0b6c96eee7c9e24b78935516225259e61cdabf7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c0b6c96eee7c9e24b78935516225259e61cdabf7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c0b6c96eee7c9e24b78935516225259e61cdabf7"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 25,
      "deletions": 7
    },
    "files": [
      {
        "sha": "ad558dd598f28517bb938eb0d3c10bf2c9496ee2",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fadf1186c899f45787a91c28120b0608bdc6c246/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fadf1186c899f45787a91c28120b0608bdc6c246/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=fadf1186c899f45787a91c28120b0608bdc6c246",
        "patch": "@@ -1295,9 +1295,8 @@ void CConnman::NotifyNumConnectionsChanged()\n     }\n }\n \n-bool CConnman::ShouldRunInactivityChecks(const CNode& node, std::optional<int64_t> now_in) const\n+bool CConnman::ShouldRunInactivityChecks(const CNode& node, int64_t now) const\n {\n-    const int64_t now = now_in ? now_in.value() : GetTimeSeconds();\n     return node.nTimeConnected + m_peer_connect_timeout < now;\n }\n "
      },
      {
        "sha": "86b58f37dec6a12ba8d5ad2fe524ae78f47c4596",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fadf1186c899f45787a91c28120b0608bdc6c246/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fadf1186c899f45787a91c28120b0608bdc6c246/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=fadf1186c899f45787a91c28120b0608bdc6c246",
        "patch": "@@ -942,7 +942,7 @@ class CConnman\n     std::chrono::microseconds PoissonNextSendInbound(std::chrono::microseconds now, std::chrono::seconds average_interval);\n \n     /** Return true if we should disconnect the peer for failing an inactivity check. */\n-    bool ShouldRunInactivityChecks(const CNode& node, std::optional<int64_t> now=std::nullopt) const;\n+    bool ShouldRunInactivityChecks(const CNode& node, int64_t secs_now) const;\n \n private:\n     struct ListenSocket {"
      },
      {
        "sha": "22586ba7da45c2d8c0c9b34591944bb6670b3765",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fadf1186c899f45787a91c28120b0608bdc6c246/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fadf1186c899f45787a91c28120b0608bdc6c246/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=fadf1186c899f45787a91c28120b0608bdc6c246",
        "patch": "@@ -4312,8 +4312,11 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n \n void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::microseconds now)\n {\n-    if (m_connman.ShouldRunInactivityChecks(node_to) && peer.m_ping_nonce_sent &&\n+    if (m_connman.ShouldRunInactivityChecks(node_to, std::chrono::duration_cast<std::chrono::seconds>(now).count()) &&\n+        peer.m_ping_nonce_sent &&\n         now > peer.m_ping_start.load() + std::chrono::seconds{TIMEOUT_INTERVAL}) {\n+        // The ping timeout is using mocktime. To disable the check during\n+        // testing, increase -peertimeout.\n         LogPrint(BCLog::NET, \"ping timeout: %fs peer=%d\\n\", 0.000001 * count_microseconds(now - peer.m_ping_start.load()), peer.m_id);\n         node_to.fDisconnect = true;\n         return;"
      },
      {
        "sha": "668ff150ee5ae66f4d458c3a01de3b320cba496d",
        "filename": "src/test/denialofservice_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fadf1186c899f45787a91c28120b0608bdc6c246/src/test/denialofservice_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fadf1186c899f45787a91c28120b0608bdc6c246/src/test/denialofservice_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/denialofservice_tests.cpp?ref=fadf1186c899f45787a91c28120b0608bdc6c246",
        "patch": "@@ -52,6 +52,8 @@ BOOST_AUTO_TEST_CASE(outbound_slow_chain_eviction)\n {\n     const CChainParams& chainparams = Params();\n     auto connman = std::make_unique<CConnman>(0x1337, 0x1337, *m_node.addrman);\n+    // Disable inactivity checks for this test to avoid interference\n+    static_cast<ConnmanTestMsg*>(connman.get())->SetPeerConnectTimeout(99999);\n     auto peerLogic = PeerManager::make(chainparams, *connman, *m_node.addrman, nullptr,\n                                        *m_node.chainman, *m_node.mempool, false);\n "
      },
      {
        "sha": "d89fc34b75a18cd793dda742b1b82c2234b74ca6",
        "filename": "src/test/util/net.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fadf1186c899f45787a91c28120b0608bdc6c246/src/test/util/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fadf1186c899f45787a91c28120b0608bdc6c246/src/test/util/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/net.h?ref=fadf1186c899f45787a91c28120b0608bdc6c246",
        "patch": "@@ -17,6 +17,12 @@\n \n struct ConnmanTestMsg : public CConnman {\n     using CConnman::CConnman;\n+\n+    void SetPeerConnectTimeout(int64_t timeout)\n+    {\n+        m_peer_connect_timeout = timeout;\n+    }\n+\n     void AddTestNode(CNode& node)\n     {\n         LOCK(cs_vNodes);"
      },
      {
        "sha": "d67e97acf7f717dfd7410d61e6d1e2abeef3e7a4",
        "filename": "test/functional/p2p_ping.py",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fadf1186c899f45787a91c28120b0608bdc6c246/test/functional/p2p_ping.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fadf1186c899f45787a91c28120b0608bdc6c246/test/functional/p2p_ping.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_ping.py?ref=fadf1186c899f45787a91c28120b0608bdc6c246",
        "patch": "@@ -30,11 +30,16 @@ def on_ping(self, message):\n         pass\n \n \n+TIMEOUT_INTERVAL = 20 * 60\n+\n+\n class PingPongTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n-        self.extra_args = [['-peertimeout=3']]\n+        # Set the peer connection timeout low. It does not matter for this\n+        # test, as long as it is less than TIMEOUT_INTERVAL.\n+        self.extra_args = [['-peertimeout=1']]\n \n     def check_peer_info(self, *, pingtime, minping, pingwait):\n         stats = self.nodes[0].getpeerinfo()[0]\n@@ -110,8 +115,11 @@ def run_test(self):\n         self.nodes[0].ping()\n         no_pong_node.wait_until(lambda: 'ping' in no_pong_node.last_message)\n         with self.nodes[0].assert_debug_log(['ping timeout: 1201.000000s']):\n-            self.mock_forward(20 * 60 + 1)\n-            time.sleep(4)  # peertimeout + 1\n+            self.mock_forward(TIMEOUT_INTERVAL // 2)\n+            # Check that sending a ping does not prevent the disconnect\n+            no_pong_node.sync_with_ping()\n+            self.mock_forward(TIMEOUT_INTERVAL // 2 + 1)\n+            no_pong_node.wait_for_disconnect()\n \n \n if __name__ == '__main__':"
      }
    ]
  }
]