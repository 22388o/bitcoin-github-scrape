DrahtBot,2020-12-08 12:18:04,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20592 (doc: update wtxidrelay documentation per BIP339 by jonatack)\n\nIf you consider this pull request important, pleas",https://github.com/bitcoin/bitcoin/pull/20599#issuecomment-740585939,740585939,
benthecarman,2020-12-08 16:30:30,ACK f72a62418c2c617ebe19e59f855f3bec1da9ee15,https://github.com/bitcoin/bitcoin/pull/20599#issuecomment-740743270,740743270,
naumenkogs,2020-12-09 07:58:10,"I'm wondering whether this is a good allocation of review resources?\nIt makes practically no difference today, and maybe it won't make a difference ever (unless there's a new implementation I assume)?\n\nAt the same time, it's not like the review is super-easy. We had this code working for years now, and now we might miss some corner case of an attacker sending us something while on-VERACK str",https://github.com/bitcoin/bitcoin/pull/20599#issuecomment-741602072,741602072,
jnewbery,2020-12-09 08:56:03,"> we might miss some corner case of an attacker sending us something while on-VERACK structs are not even initialized yet.\n\nWe don't initialize any structs in verack processing. verack processing simply sets `fSuccessfullyConnected`, logs, and sends the `send*` messages.\n\n> I'm wondering whether this is a good allocation of review resources?\n\nHow you allocate your time is up to you. If",https://github.com/bitcoin/bitcoin/pull/20599#issuecomment-741631081,741631081,
jnewbery,2020-12-09 08:56:08,rebased,https://github.com/bitcoin/bitcoin/pull/20599#issuecomment-741631122,741631122,
practicalswift,2020-12-09 09:41:04,"@jnewbery Just to understand the context of this change: is this purely a ""follow the BIP"" change, or is there any known scenario in which this change would improve interoperability with any currently existing client?",https://github.com/bitcoin/bitcoin/pull/20599#issuecomment-741655596,741655596,
jnewbery,2020-12-09 10:24:11,"> Is this purely a ""follow the BIP"" change, or is there any known scenario in which this change would improve interoperability with any currently existing client?\n\nThis is purely to follow the BIP. I don't know of any client that sends send* messages before verack. However, future clients may wish to do so (since that's a more rational place to negotiate features).",https://github.com/bitcoin/bitcoin/pull/20599#issuecomment-741679043,741679043,
jonatack,2020-12-09 11:29:36,"Concept ACK, IIUC correctly from a quick glance, the point of this PR is move-only of the hunk, from after the following ""unsupported message"" conditional to before it, confirm?\n\n```cpp\n    if (!pfrom.fSuccessfullyConnected) {\n        LogPrint(BCLog::NET, ""Unsupported message \""%s\"" prior to verack from peer=%d\n"", SanitizeString(msg_type), pfrom.GetId());\n        return;\n    }\n```\",https://github.com/bitcoin/bitcoin/pull/20599#issuecomment-741712730,741712730,
jnewbery,2020-12-09 11:46:11,"> the point of this PR is move-only of the hunk, from after the following ""unsupported message"" conditional to before it, confirm?\n\nCorrect, this PR moves the processing of sendheaders and sendcmpct to before the `!pfrom.fSuccessfullyConnected` conditional. I'm loathe to call it 'move-only' since it's a behaviour change.\n\n> Should a proposal be made to update the BIPs on this point, simila",https://github.com/bitcoin/bitcoin/pull/20599#issuecomment-741720324,741720324,
jnewbery,2020-12-09 12:05:17,">> the point of this PR is move-only of the hunk, from after the following ""unsupported message"" conditional to before it, confirm?\n\n> Correct, this PR moves the processing of sendheaders and sendcmpct to before the !pfrom.fSuccessfullyConnected conditional. I'm loathe to call it 'move-only' since it's a behaviour change.\n\nFor a bit more context, I'd like to make the following change at so",https://github.com/bitcoin/bitcoin/pull/20599#issuecomment-741728959,741728959,
DrahtBot,2020-12-09 16:09:18,<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\nüïµÔ∏è @sipa has been requested to review this pull request as specified in the REVIEWERS file.,https://github.com/bitcoin/bitcoin/pull/20599#issuecomment-741874463,741874463,
jnewbery,2020-12-10 10:20:21,rebased,https://github.com/bitcoin/bitcoin/pull/20599#issuecomment-742426994,742426994,
laanwj,2020-12-10 12:59:41,"Code review ACK 82d0a43a23519361d3801c9c087859e13065c535\nChecked that this is move-only.",https://github.com/bitcoin/bitcoin/pull/20599#issuecomment-742505882,742505882,
jonatack,2020-12-10 23:23:44,Code review re-ACK 82d0a43a23519361d3801c9c087859e13065c535 per `git range-diff da957cd 427f573 82d0a43`,https://github.com/bitcoin/bitcoin/pull/20599#issuecomment-742864183,742864183,
benthecarman,2020-12-11 17:42:16,Code review ACK 82d0a43,https://github.com/bitcoin/bitcoin/pull/20599#issuecomment-743331694,743331694,
jnewbery,2020-12-14 13:23:52,rebased,https://github.com/bitcoin/bitcoin/pull/20599#issuecomment-744437183,744437183,
MarcoFalke,2020-12-14 15:48:36,"review ACK b316dcb758e3dbd302fbb5941a1b5b0ef5f1f207 üìí\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nreview ACK b316dcb758e3dbd302fbb5941a1b5b0ef5f1f207 üìí\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjFTQv+MjBurQNjNB/sPp5ynOe9ZPZqoLsSdpWQK3Mc",https://github.com/bitcoin/bitcoin/pull/20599#issuecomment-744529086,744529086,
jonatack,2020-12-14 16:05:21,"Code review re-ACK b316dcb758e3dbd302fbb5941a1b5b0ef5f1f207 per `git range-diff b103fdcb 82d0a43 b316dcb`, rebase only",https://github.com/bitcoin/bitcoin/pull/20599#issuecomment-744540102,744540102,
MarcoFalke,2020-12-08 11:48:19,"if you move this hunk before the wtxidrelay msg handling, it will avoid a merge conflict with other open pulls",https://github.com/bitcoin/bitcoin/pull/20599#discussion_r538275873,538275873,src/net_processing.cpp
jnewbery,2020-12-08 12:58:59,Done,https://github.com/bitcoin/bitcoin/pull/20599#discussion_r538338802,538338802,src/net_processing.cpp
