laanwj,2017-12-16T07:58:11Z,"I don't think this is correct. The command line option should override the GUI setting with respect to the value used, but it should not set/change the GUI setting. Command line arguments shouldn't stick, which I think is what this does?\n\n(reason is, for example: to be able to run with `-dbcache=10000` temporarily, then quit, then run without `-dbcache` and go back to the normal setting)",https://github.com/bitcoin/bitcoin/pull/11915#issuecomment-352168178,352168178,
valentinewallace,2017-12-17T23:15:49Z,"@laanwj Sorry I'm not sure I understand. When I run the GUI with this code, if I run with `-dbcache=10000` it will display 10000 in the options menu. If I then quit and run without the flag, I see the either number in `bitcoin.conf` or the default in the options menu. \n\nAre you saying when you run without the flag a second time it still displays the last flag value used? ",https://github.com/bitcoin/bitcoin/pull/11915#issuecomment-352293875,352293875,
laanwj,2017-12-19T13:17:25Z,"Yes. This:\n```\nsettings.setValue(""nDatabaseCache"", (qint64)gArgs.GetArg(""-dbcache"", nDefaultDbCache));\n```\nWrites the value from the command line / bitcoin.conf to the QSettings object persistently. That's not how it's supposed to work.",https://github.com/bitcoin/bitcoin/pull/11915#issuecomment-352745883,352745883,
jonasschnelli,2017-12-19T18:52:00Z,"To fix #11788, I would propose to show the ""underlaying"" dbcache value (set via bitcoin.conf or `-dbcache=<value>`) in the GUI settings pannel...\n\nbut only, if the value has not been overwritten by the QT settings (` (!settings.contains(""nDatabaseCache"")`).\n\nAlso, only write the GUI set database cache to QSettings when...\n* Either `nDatabaseCache` is set\n* Or the new value is not equal",https://github.com/bitcoin/bitcoin/pull/11915#issuecomment-352851616,352851616,
valentinewallace,2017-12-21T01:14:20Z,"@jonasschnelli \n\n> but only, if the value has not been overwritten by the QT settings ((!settings.contains(""nDatabaseCache"")).\n\nCurrently, due to `init` in optionsmodel, QSettings will always contain `nDatabaseCache`, it'll just contain the default if the user doesn't give it a different value through the GUI. However, this could be altered so it doesn't get set in `settings` unless the us",https://github.com/bitcoin/bitcoin/pull/11915#issuecomment-353229346,353229346,
jonasschnelli,2017-12-22T07:14:03Z,"Oh. Your right...\nCurrent code:\n```\nif (!settings.contains(""nDatabaseCache""))\n        settings.setValue(""nDatabaseCache"", (qint64)nDefaultDbCache);\n```\nThis seems suboptimal. After executing this, you have no way to find out if the user has set a value or if we just have copied over the default from `nDefaultDbCache`.\n\nI think it should only write a value to `nDatabaseCache` if it ",https://github.com/bitcoin/bitcoin/pull/11915#issuecomment-353537282,353537282,
valentinewallace,2017-12-22T22:39:39Z,"That line you mentioned^ was there before I touched the file so I put it back in the spirit of making as few changes as possible to solve the problem (maybe I should've done the commits differently?), but I agree it does seem suboptimal. \n\n> I think it should only write a value to `nDatabaseCache` if it was set by the user and if it was different as the default.\n\nMight it make sense to wri",https://github.com/bitcoin/bitcoin/pull/11915#issuecomment-353685596,353685596,
valentinewallace,2018-01-01T04:27:35Z,"Okay, now we only write to QSettings if the user sets a non-default value! ",https://github.com/bitcoin/bitcoin/pull/11915#issuecomment-354636144,354636144,
jonasschnelli,2018-04-10T19:12:34Z,Needs rebase,https://github.com/bitcoin/bitcoin/pull/11915#issuecomment-380215261,380215261,
valentinewallace,2018-04-16T21:36:52Z,@jonasschnelli rebased! ,https://github.com/bitcoin/bitcoin/pull/11915#issuecomment-381757995,381757995,
fanquake,2018-10-20T05:51:26Z,"@valentinewallace Are you still interested in working on this? If so, could you address any nits & rebase. Otherwise we could close & label ""Up for Grabs"" etc.",https://github.com/bitcoin/bitcoin/pull/11915#issuecomment-431552032,431552032,
valentinewallace,2018-10-21T04:11:31Z,"@fanquake yes, sorry about that. I was planning to update it tomorrow if that's okay! ",https://github.com/bitcoin/bitcoin/pull/11915#issuecomment-431637434,431637434,
DrahtBot,2018-11-13T20:14:33Z,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/11915#issuecomment-438420290,438420290,
dongcarl,2019-02-22T04:46:17Z,No longer needed as #11788 is closed.,https://github.com/bitcoin/bitcoin/pull/11915#issuecomment-466272284,466272284,
jonasschnelli,2018-02-12T10:40:15Z,What if someone has `dbcache=2000` in `bitcoin.conf` and then tries to reduce the dbcache via GUI back to 450?,https://github.com/bitcoin/bitcoin/pull/11915#discussion_r167516951,167516951,src/qt/optionsmodel.cpp
valentinewallace,2018-02-14T20:50:15Z,Currently that wouldn't do anything because we don't write to QSettings if the user sets the GUI dbcache value to the default. Should we switch such that we write to QSettings no matter what value the user sets? ,https://github.com/bitcoin/bitcoin/pull/11915#discussion_r168305645,168305645,src/qt/optionsmodel.cpp
Empact,2018-10-09T01:47:32Z,"whitespace issue here, you can use `git diff -U0 HEAD~3.. | ./contrib/devtools/clang-format-diff.py -p1 -i -v` to fix: https://github.com/bitcoin/bitcoin/blob/master/contrib/devtools/README.md#clang-format-diffpy",https://github.com/bitcoin/bitcoin/pull/11915#discussion_r223540932,223540932,src/qt/optionsmodel.cpp
Empact,2018-10-09T01:50:07Z,`IsArgSet` could be more explicit,https://github.com/bitcoin/bitcoin/pull/11915#discussion_r223541187,223541187,src/qt/optionsmodel.cpp
Empact,2018-10-09T01:53:08Z,"Seems you can return the default directly, the QVariant will be constructed from it.",https://github.com/bitcoin/bitcoin/pull/11915#discussion_r223541515,223541515,src/qt/optionsmodel.cpp
Empact,2018-10-09T01:54:12Z,Why is this cast necessary?,https://github.com/bitcoin/bitcoin/pull/11915#discussion_r223541626,223541626,src/qt/optionsmodel.cpp
valentinewallace,2018-10-22T18:32:40Z,"good one, thanks!",https://github.com/bitcoin/bitcoin/pull/11915#discussion_r227086198,227086198,src/qt/optionsmodel.cpp
valentinewallace,2018-10-22T18:33:29Z,fixed :),https://github.com/bitcoin/bitcoin/pull/11915#discussion_r227086487,227086487,src/qt/optionsmodel.cpp
valentinewallace,2018-10-22T18:33:59Z,"I seem to be getting this error when I try to do that:\n\n![deepinscreenshot_select-area_20181021212834](https://user-images.githubusercontent.com/10647624/47311351-56344900-d5ee-11e8-9d96-192a12514d2a.png)\n",https://github.com/bitcoin/bitcoin/pull/11915#discussion_r227086674,227086674,src/qt/optionsmodel.cpp
valentinewallace,2018-10-22T18:35:10Z,"Hm, for the code to compile? Am I missing something? here's what happens when I remove the cast:\n\n![deepinscreenshot_select-area_20181021215649](https://user-images.githubusercontent.com/10647624/47311377-6b10dc80-d5ee-11e8-9e39-2b71aeaafc50.png)\n",https://github.com/bitcoin/bitcoin/pull/11915#discussion_r227087079,227087079,src/qt/optionsmodel.cpp
Empact,2018-10-23T18:53:24Z,How about casting instead as above?,https://github.com/bitcoin/bitcoin/pull/11915#discussion_r227521265,227521265,src/qt/optionsmodel.cpp
valentinewallace,2018-10-24T21:11:20Z,"that works, and makes the code prettier! fixed :)",https://github.com/bitcoin/bitcoin/pull/11915#discussion_r227961385,227961385,src/qt/optionsmodel.cpp
