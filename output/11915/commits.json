[
  {
    "sha": "b38659b7cfce5e3be706b3e1959478686f7b180b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMzg2NTliN2NmY2U1ZTNiZTcwNmIzZTE5NTk0Nzg2ODZmN2IxODBi",
    "commit": {
      "author": {
        "name": "Valentine Wallace",
        "email": "vwallace@protonmail.com",
        "date": "2018-10-22T05:03:26Z"
      },
      "committer": {
        "name": "Valentine Wallace",
        "email": "valentine.m.wallace@gmail.com",
        "date": "2018-10-24T21:12:46Z"
      },
      "message": "Qt: Reflect and persist correct dbcache value from options panel.\n\nResulting behavior:\n- If the `dbcache` flag is set, the value is displayed but not persisted.\n- If the user sets a value in the gui, it is persisted to QSettings.\n- Else the default is displayed (but not persisted).",
      "tree": {
        "sha": "a6c035f5672c2bedb2a816266d48b99a7c742a25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a6c035f5672c2bedb2a816266d48b99a7c742a25"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b38659b7cfce5e3be706b3e1959478686f7b180b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEguWVyMw05soCbX+6sOVejRd2pY0FAlvQ4FYACgkQsOVejRd2\npY16hBAAolVa2QXHd3sWi2eSMwIR0Yh5J0VofbMvGugHzBcm93cO5kZ6mB6l7kES\n6tcsw++2Rzbr6QHv2g7VTHwteXTVwqoc5Q2rETLutOMIuK28ckgZ94qZ8X6yuFKq\nfOphjOM+WHAnXE6fV3+TB3GQmgWQtUyKiqe7hnlIlwB0PammWiRZI5buNbXTArJR\n1n2WDiAM2K14Eg7t7yG99pbHT7sXGeobbwJc33Rjm4c2eNRWHf7QmP7HGjpU0N84\nVE3xht+X4mMfHz/0C8Uvdj+C/lHzeq/vKX+MFD7QKxuKfL2ni2B7gyxwnZdPJx5w\n0vP1Z8Ihydv6ipsfGrJpe209QpX3aA088NxJXYvSMFVmbTcSPOVH5OEOJGezPc2m\nytPiDRAwsyp4o4YrcT2h8cQ7LhVn7WeToCOmmG+ptgaqwHUArS1tAqh86pidEm7X\nC4AAqy0yZo+WQhpyxZDUnMjl+dlSPP0Vis/HpKjsZpVUNEE+Lopyna1Yah4VZoM4\n0IgqK4d9cZsx2rxM8UoO6Tx2BAA41lmRyHdOLh9nCwEEWYUFNWgPLoqFdoWj8Dor\n3vd9dNv5YqAK3lADkFZVUPY/zminBc6cHs4F4rGo1JQiAHIG1veNsSUi5Bv5O3/E\nAq1WwH5jOK27bqsoePUMSPDCd/tV+6v2nmJYLrf5t9zc4dizi6g=\n=Fi2b\n-----END PGP SIGNATURE-----",
        "payload": "tree a6c035f5672c2bedb2a816266d48b99a7c742a25\nparent 5c25409d6851182c5e351720cee36812c229b77a\nauthor Valentine Wallace <vwallace@protonmail.com> 1540184606 -0700\ncommitter Valentine Wallace <valentine.m.wallace@gmail.com> 1540415566 -0700\n\nQt: Reflect and persist correct dbcache value from options panel.\n\nResulting behavior:\n- If the `dbcache` flag is set, the value is displayed but not persisted.\n- If the user sets a value in the gui, it is persisted to QSettings.\n- Else the default is displayed (but not persisted).\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b38659b7cfce5e3be706b3e1959478686f7b180b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b38659b7cfce5e3be706b3e1959478686f7b180b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b38659b7cfce5e3be706b3e1959478686f7b180b/comments",
    "author": {
      "login": "valentinewallace",
      "id": 10647624,
      "node_id": "MDQ6VXNlcjEwNjQ3NjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/10647624?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/valentinewallace",
      "html_url": "https://github.com/valentinewallace",
      "followers_url": "https://api.github.com/users/valentinewallace/followers",
      "following_url": "https://api.github.com/users/valentinewallace/following{/other_user}",
      "gists_url": "https://api.github.com/users/valentinewallace/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/valentinewallace/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/valentinewallace/subscriptions",
      "organizations_url": "https://api.github.com/users/valentinewallace/orgs",
      "repos_url": "https://api.github.com/users/valentinewallace/repos",
      "events_url": "https://api.github.com/users/valentinewallace/events{/privacy}",
      "received_events_url": "https://api.github.com/users/valentinewallace/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "valentinewallace",
      "id": 10647624,
      "node_id": "MDQ6VXNlcjEwNjQ3NjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/10647624?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/valentinewallace",
      "html_url": "https://github.com/valentinewallace",
      "followers_url": "https://api.github.com/users/valentinewallace/followers",
      "following_url": "https://api.github.com/users/valentinewallace/following{/other_user}",
      "gists_url": "https://api.github.com/users/valentinewallace/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/valentinewallace/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/valentinewallace/subscriptions",
      "organizations_url": "https://api.github.com/users/valentinewallace/orgs",
      "repos_url": "https://api.github.com/users/valentinewallace/repos",
      "events_url": "https://api.github.com/users/valentinewallace/events{/privacy}",
      "received_events_url": "https://api.github.com/users/valentinewallace/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5c25409d6851182c5e351720cee36812c229b77a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c25409d6851182c5e351720cee36812c229b77a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5c25409d6851182c5e351720cee36812c229b77a"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 14,
      "deletions": 5
    },
    "files": [
      {
        "sha": "51b6c74c0dea14c2e6ed79d4c1e7fe43fbbb5187",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 5,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b38659b7cfce5e3be706b3e1959478686f7b180b/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b38659b7cfce5e3be706b3e1959478686f7b180b/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=b38659b7cfce5e3be706b3e1959478686f7b180b",
        "patch": "@@ -98,9 +98,10 @@ void OptionsModel::Init(bool resetSettings)\n       addOverriddenOption(\"-prune\");\n     }\n \n-    if (!settings.contains(\"nDatabaseCache\"))\n-        settings.setValue(\"nDatabaseCache\", (qint64)nDefaultDbCache);\n-    if (!m_node.softSetArg(\"-dbcache\", settings.value(\"nDatabaseCache\").toString().toStdString()))\n+    std::string nDbCacheSettings = settings.contains(\"nDatabaseCache\") ?\n+                                       settings.value(\"nDatabaseCache\").toString().toStdString() :\n+                                       std::to_string(nDefaultDbCache);\n+    if (!m_node.softSetArg(\"-dbcache\", nDbCacheSettings))\n         addOverriddenOption(\"-dbcache\");\n \n     if (!settings.contains(\"nThreadsScriptVerif\"))\n@@ -296,7 +297,11 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n         case PruneSize:\n             return settings.value(\"nPruneSize\");\n         case DatabaseCache:\n-            return settings.value(\"nDatabaseCache\");\n+            if (gArgs.IsArgSet(\"-dbcache\"))\n+                return (qint64)gArgs.GetArg(\"-dbcache\", nDefaultDbCache);\n+            if (settings.contains(\"nDatabaseCache\"))\n+                return settings.value(\"nDatabaseCache\");\n+            return (qint64)nDefaultDbCache;\n         case ThreadsScriptVerif:\n             return settings.value(\"nThreadsScriptVerif\");\n         case Listen:\n@@ -432,7 +437,11 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             }\n             break;\n         case DatabaseCache:\n-            if (settings.value(\"nDatabaseCache\") != value) {\n+            if (QVariant::fromValue(gArgs.GetArg(\"-dbcache\", nDefaultDbCache)) == value) break;\n+            if (QVariant::fromValue(nDefaultDbCache) == value) {\n+                settings.remove(\"nDatabaseCache\");\n+                setRestartRequired(true);\n+            } else if (settings.value(\"nDatabaseCache\") != value) {\n                 settings.setValue(\"nDatabaseCache\", value);\n                 setRestartRequired(true);\n             }"
      }
    ]
  }
]