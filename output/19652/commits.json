[
  {
    "sha": "09b1ef2262e72e708b71a3e70948f8a42ceb1030",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOWIxZWYyMjYyZTcyZTcwOGI3MWEzZTcwOTQ4ZjhhNDJjZWIxMDMw",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-03T13:17:21Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-12-07T14:02:52Z"
      },
      "message": "refactor: Add thread safety annotations to Mempool{Info}ToJSON()\n\nThis change avoids locking CTxMemPool::cs recursively in\nMempool{Info}ToJSON() functions.",
      "tree": {
        "sha": "7a3c53abe6d1842b43aa45ed79d02b756ccc2f85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7a3c53abe6d1842b43aa45ed79d02b756ccc2f85"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09b1ef2262e72e708b71a3e70948f8a42ceb1030",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/ONgwACgkQQQEIES5+\nqB/y/g/+Kbf63V+zEV/7rxXCt8lFvfdR/7VCAPzn2bFlVTannRbBy/I/RpDtpQva\nUgrT0fYXLJCI/sl28yR6bzHhpjSVkzjgk8ksfdMio9bUZ1rAt9IAkQoYFZJJ4uFx\n1hSZVmq6LSMuTLOJrUwGXGPVkDawcoZTsuEUhn9405304ufMo9okeQpdvG2Nr0BV\nBjSCvl94exsgIEPp1yupZ5nfXmaXSoYlgZbJYZfVwaKvybhkBp9s4uhtPch0aSwb\nm9+8OUL+ANSsKC8ECSZdD6Mj2XJqqJNm0j02+Ur79055OftxEqO3veumDm34wlzZ\noai3MPzSMRHNFqV2nPW0870X14vBjgHC/45b/ncjGKPT8QrgueKe52YdE7DqLmZ/\n04BIQoWBzcaduXq2XW89nwQBju4ZN1CpW2zy0lSZgf6WXrA8eTANMj597rCfgaZw\nTqcM1pfR91mbIJujuFCY2WlZUFx41kn/VxY7tyU9JWouuhnnvkv/8G9BiQZdnXpd\nOnb+eeysNxEAKQcrkF7sObEgJupMAETOiXmll+GMi+8608JN4A9EkjWwr/qqpAmp\nY7bpR8WbfpN6Q5EPdelf0f4nlZB/+7VjMowESF8sqbn1E7rXTXT4YW4VQ3I7D7SP\nFcjzczeetFL1RwzE+sDtVipBfvAvm0p5OZUGtLn78u/VBT0MD24=\n=lfYK\n-----END PGP SIGNATURE-----",
        "payload": "tree 7a3c53abe6d1842b43aa45ed79d02b756ccc2f85\nparent 5c4911e7e7523fb7643da209254bbc2ef7898d2e\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596460641 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1607349772 +0200\n\nrefactor: Add thread safety annotations to Mempool{Info}ToJSON()\n\nThis change avoids locking CTxMemPool::cs recursively in\nMempool{Info}ToJSON() functions.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09b1ef2262e72e708b71a3e70948f8a42ceb1030",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/09b1ef2262e72e708b71a3e70948f8a42ceb1030",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09b1ef2262e72e708b71a3e70948f8a42ceb1030/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5c4911e7e7523fb7643da209254bbc2ef7898d2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c4911e7e7523fb7643da209254bbc2ef7898d2e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5c4911e7e7523fb7643da209254bbc2ef7898d2e"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 9,
      "deletions": 3
    },
    "files": [
      {
        "sha": "ea6a6ce24761244d65623a350fd08061f4e951bd",
        "filename": "src/bench/rpc_mempool.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09b1ef2262e72e708b71a3e70948f8a42ceb1030/src/bench/rpc_mempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09b1ef2262e72e708b71a3e70948f8a42ceb1030/src/bench/rpc_mempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/rpc_mempool.cpp?ref=09b1ef2262e72e708b71a3e70948f8a42ceb1030",
        "patch": "@@ -18,6 +18,7 @@ static void AddTx(const CTransactionRef& tx, const CAmount& fee, CTxMemPool& poo\n static void RpcMempool(benchmark::Bench& bench)\n {\n     CTxMemPool pool;\n+    {\n     LOCK2(cs_main, pool.cs);\n \n     for (int i = 0; i < 1000; ++i) {\n@@ -31,6 +32,7 @@ static void RpcMempool(benchmark::Bench& bench)\n         const CTransactionRef tx_r{MakeTransactionRef(tx)};\n         AddTx(tx_r, /* fee */ i, pool);\n     }\n+    }\n \n     bench.run([&] {\n         (void)MempoolToJSON(pool, /*verbose*/ true);"
      },
      {
        "sha": "ae37e6c3332c23f08600b4331ad246180dec5b71",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09b1ef2262e72e708b71a3e70948f8a42ceb1030/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09b1ef2262e72e708b71a3e70948f8a42ceb1030/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=09b1ef2262e72e708b71a3e70948f8a42ceb1030",
        "patch": "@@ -512,6 +512,8 @@ static void entryToJSON(const CTxMemPool& pool, UniValue& info, const CTxMemPool\n \n UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose, bool include_mempool_sequence)\n {\n+    AssertLockNotHeld(pool.cs);\n+\n     if (verbose) {\n         if (include_mempool_sequence) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Verbose results cannot contain mempool sequence values.\");\n@@ -1487,6 +1489,8 @@ static RPCHelpMan getchaintips()\n \n UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n {\n+    AssertLockNotHeld(pool.cs);\n+\n     // Make sure this call is atomic in the pool.\n     LOCK(pool.cs);\n     UniValue ret(UniValue::VOBJ);"
      },
      {
        "sha": "f8954c0ab57578cd6ac43272655734e3bdc392c9",
        "filename": "src/rpc/blockchain.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09b1ef2262e72e708b71a3e70948f8a42ceb1030/src/rpc/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09b1ef2262e72e708b71a3e70948f8a42ceb1030/src/rpc/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.h?ref=09b1ef2262e72e708b71a3e70948f8a42ceb1030",
        "patch": "@@ -7,6 +7,7 @@\n \n #include <amount.h>\n #include <sync.h>\n+#include <txmempool.h>\n \n #include <stdint.h>\n #include <vector>\n@@ -16,7 +17,6 @@ extern RecursiveMutex cs_main;\n class CBlock;\n class CBlockIndex;\n class CBlockPolicyEstimator;\n-class CTxMemPool;\n class ChainstateManager;\n class UniValue;\n struct NodeContext;\n@@ -41,10 +41,10 @@ void RPCNotifyBlockChange(const CBlockIndex*);\n UniValue blockToJSON(const CBlock& block, const CBlockIndex* tip, const CBlockIndex* blockindex, bool txDetails = false) LOCKS_EXCLUDED(cs_main);\n \n /** Mempool information to JSON */\n-UniValue MempoolInfoToJSON(const CTxMemPool& pool);\n+UniValue MempoolInfoToJSON(const CTxMemPool& pool) EXCLUSIVE_LOCKS_REQUIRED(!pool.cs);\n \n /** Mempool to JSON */\n-UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose = false, bool include_mempool_sequence = false);\n+UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose = false, bool include_mempool_sequence = false) EXCLUSIVE_LOCKS_REQUIRED(!pool.cs);\n \n /** Block header to JSON */\n UniValue blockheaderToJSON(const CBlockIndex* tip, const CBlockIndex* blockindex) LOCKS_EXCLUDED(cs_main);"
      }
    ]
  }
]