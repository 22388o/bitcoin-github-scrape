[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478763783",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-478763783",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 478763783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODc2Mzc4Mw==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-01T22:01:09Z",
    "updated_at": "2021-12-01T10:14:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23581](https://github.com/bitcoin/bitcoin/pull/23581) (Move BlockManager to node/blockstorage by MarcoFalke)\n* [#23417](https://github.com/bitcoin/bitcoin/pull/23417) (wallet, spkm: Move key management from DescriptorScriptPubKeyMan to wallet level KeyManager by achow101)\n* [#23019](https://github.com/bitcoin/bitcoin/pull/23019) (rpc, wallet: Add listaddresses RPC by lsilva01)\n* [#22341](https://github.com/bitcoin/bitcoin/pull/22341) (rpc: add getxpub by Sjors)\n* [#21603](https://github.com/bitcoin/bitcoin/pull/21603) (log: Mitigate disk filling attacks by rate limiting LogPrintf by dergoegge)\n* [#20205](https://github.com/bitcoin/bitcoin/pull/20205) (wallet: Properly support a wallet id by achow101)\n* [#18554](https://github.com/bitcoin/bitcoin/pull/18554) (wallet: ensure wallet files are not reused across chains by rodentrabies)\n* [#16673](https://github.com/bitcoin/bitcoin/pull/16673) (Relog configuration args on debug.log rotation by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478763783/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478765890",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-478765890",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 478765890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODc2NTg5MA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-01T22:09:58Z",
    "updated_at": "2019-04-01T22:09:58Z",
    "author_association": "MEMBER",
    "body": "How will `snapshot_fn` work with IPC?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478765890/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478797459",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-478797459",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 478797459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODc5NzQ1OQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-02T00:37:50Z",
    "updated_at": "2019-04-02T00:37:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-478765890\r\n\r\n> How will snapshot_fn work with IPC?\r\n\r\nNo different than other callback arguments. In #10102, `std::function` arguments are passed as objects with a single `call()` method:\r\n\r\nhttps://github.com/ryanofsky/bitcoin/blob/3440513a45e94a5f1f0c67ab7409439afbbef673/src/interfaces/capnp/messages.capnp#L144-L154\r\n\r\nhttps://github.com/ryanofsky/bitcoin/blob/3440513a45e94a5f1f0c67ab7409439afbbef673/src/interfaces/capnp/messages.capnp#L236-L239\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478797459/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478972074",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-478972074",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 478972074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODk3MjA3NA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-02T12:24:57Z",
    "updated_at": "2019-04-02T12:24:57Z",
    "author_association": "MEMBER",
    "body": "@ryanofsky ok thanks, will look into that.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478972074/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479177413",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-479177413",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 479177413,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTE3NzQxMw==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-02T20:07:37Z",
    "updated_at": "2019-04-02T20:07:37Z",
    "author_association": "MEMBER",
    "body": "Should we assert cs_main is held in the relevant validation interface notifications?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479177413/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479184766",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-479184766",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 479184766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTE4NDc2Ng==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-02T20:24:25Z",
    "updated_at": "2019-04-02T20:24:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-479177413\r\n\r\n> Should we assert cs_main is held in the relevant validation interface notifications?\r\n\r\n`cs_main` can be acquired inside notification callbacks, if necessary, but it is not held when these notifications happen. This PR and #15632 disentangle notifications and locking, so locks are never held when notifications are received (right now they are inconsistently held in some cases but not others). \r\n\r\nRemoving locking from notifications is a step toward eventually removing Chain::Lock completely, and having the wallet just asynchronously process notifications without being able to hold on to `cs_main`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479184766/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479491609",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-479491609",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 479491609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTQ5MTYwOQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T13:35:00Z",
    "updated_at": "2019-04-03T13:35:00Z",
    "author_association": "MEMBER",
    "body": "Sorry for not being clear. I mean that `cs_main` is locked when `GetMainSignals().TransactionAddedToMempool()` is called, and it is important that doesn't change, by adding:\r\n```diff\r\n@@ -152,6 +152,8 @@ void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInd\r\n }\r\n\r\n void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\r\n+    AssertLockHeld(::cs_main);\r\n+    AssertLockHeld(::mempool.cs);\r\n     m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\r\n         m_internals->TransactionAddedToMempool(ptx);\r\n     });\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479491609/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482312004",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-482312004",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 482312004,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjMxMjAwNA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-11T21:00:12Z",
    "updated_at": "2019-04-11T21:00:12Z",
    "author_association": "MEMBER",
    "body": "Concept ACK\r\n\r\n> Mempool transactions are sent in a single IPC call instead of in a loop calling an IPC method repeatedly.\r\n\r\nDo we know what this does to memory usage if there's a very large mempool (either at startup when starting one or multiple wallets, or when loading a wallet dynamically during runtime)?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482312004/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482334255",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-482334255",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 482334255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjMzNDI1NQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-11T21:49:12Z",
    "updated_at": "2019-04-11T21:49:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Do we know what this does to memory usage if there's a very large mempool (either at startup when starting one or multiple wallets, or when loading a wallet dynamically during runtime)?\r\n\r\nWith this PR by itself, a new temporary vector with one pointer per mempool transaction is created when a wallet is loaded. It's something to consider, but probably not likely to cause problems.\r\n\r\nWith this PR combined with #10102 and running `bitcoin-node` with a wallet loading in a different process, this will use significantly more memory, because serializing the vector serializes all the transactions at once in memory before sending them. This might be about as expensive as a `getrawmempool` call. If this is a problem, the `snapshot_fn` callback could be tweaked to send the transactions in batches. I guess I wouldn't want to try to optimize this prematurely, though.\r\n\r\nSince I did write this PR \"Improves performance over IPC\" in the description, the increased memory usage might factor into that. But to be sure, the motivation for this PR is mainly to make notifications show up cleanly and in order on the client side.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482334255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522017731",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-522017731",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 522017731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjAxNzczMQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-16T13:56:25Z",
    "updated_at": "2019-08-16T13:56:25Z",
    "author_association": "MEMBER",
    "body": "@ryanofsky Are you still working on this? If no, then please close it.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522017731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522631512",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-522631512",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 522631512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjYzMTUxMg==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-19T15:35:29Z",
    "updated_at": "2019-08-19T15:35:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @ryanofsky Are you still working on this? If no, then please close it.\r\n\r\nThanks for the reminder. I looked into this again and I think the WIP tag still applies. I had been indecisive about involving rescan in this this change after John pointed out it was necessary, since I was unsure if it was better to incrementally change the rescan code (first synchronize rescan with notifications, then consolidate rescans across wallets https://gist.github.com/ariard/89f9bcc3a7ab9576fc6d15d251032cfa), or to just do both things in a single PR.\r\n\r\nBut now I think it should be possible to synchronize rescan with notifications in a way that doesn't change existing code too much and should also make ariard's proposed change easier.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522631512/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614143942",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-614143942",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 614143942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDE0Mzk0Mg==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-15T16:30:58Z",
    "updated_at": "2020-04-15T16:30:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased 3eb122b4a10024d86561492db19a881d420e34c5 -> b7716d0272125f4b4d2bce179d86d896f67869bd ([`pr/pool.9`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.9) -> [`pr/pool.10`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.10), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.9-rebase..pr/pool.10)) after merge of #17954 and conflict with #18192\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614143942/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/617408292",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-617408292",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 617408292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzQwODI5Mg==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-21T20:53:15Z",
    "updated_at": "2020-04-21T20:53:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased b7716d0272125f4b4d2bce179d86d896f67869bd -> bb7e272bd968adff75bed5038680f23b665880c5 ([`pr/pool.10`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.10) -> [`pr/pool.11`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.11), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.10-rebase..pr/pool.11)) due to minor conflicts with #15761 and #18601",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/617408292/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621362625",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-621362625",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 621362625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTM2MjYyNQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-29T17:45:08Z",
    "updated_at": "2020-04-29T17:45:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased bb7e272bd968adff75bed5038680f23b665880c5 -> 3c50af4c76889261d19262086542b44220c74457 ([`pr/pool.11`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.11) -> [`pr/pool.12`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.12), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.11-rebase..pr/pool.12)) due to conflict with #18759\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621362625/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621660518",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-621660518",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 621660518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTY2MDUxOA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T07:22:04Z",
    "updated_at": "2020-04-30T07:22:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased 3c50af4c76889261d19262086542b44220c74457 -> 044418037a6ead2e9c38f404228ea8536369b683 ([`pr/pool.12`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.12) -> [`pr/pool.13`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.13), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.12-rebase..pr/pool.13)) after #18727 to deal with failures in new CreateWalletFromFile test. Rewrote test to handle new startup sequence.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621660518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622430649",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-622430649",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 622430649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjQzMDY0OQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-01T15:20:12Z",
    "updated_at": "2020-05-01T15:20:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased 044418037a6ead2e9c38f404228ea8536369b683 -> 26e4ee32273ab232fa3898f86289131a6379b69b ([`pr/pool.13`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.13) -> [`pr/pool.14`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.14), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.13-rebase..pr/pool.14)) due to conflict with #16426\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622430649/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623644521",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-623644521",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 623644521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzY0NDUyMQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-04T18:58:56Z",
    "updated_at": "2020-05-04T18:58:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased 26e4ee32273ab232fa3898f86289131a6379b69b -> 52d152f0bf2543fc6fbb80cdde7ae2249305662f ([`pr/pool.14`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.14) -> [`pr/pool.15`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.15), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.14-rebase..pr/pool.15)) due to conflict with #18699",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623644521/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623856806",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-623856806",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 623856806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzg1NjgwNg==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-05T04:59:05Z",
    "updated_at": "2020-05-05T05:01:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Travis error `test_framework.authproxy.JSONRPCException: non-mandatory-script-verify-flag (Signature must be zero for failed CHECK(MULTI)SIG operation) (-26)` in sendrawtransaction call in rpc_rawtransaction.py in bionic C++17 build https://travis-ci.org/github/bitcoin/bitcoin/jobs/683072285#L5042 seems unrelated. It's reported in #18803",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623856806/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627315723",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-627315723",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 627315723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNzMxNTcyMw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-12T12:37:09Z",
    "updated_at": "2020-06-01T20:16:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Updated 78a42ce0251426051ff789e64a9bfae3200d1f83 -> de030e6258251fba2159788c2bdf135f6e2369f3 ([`pr/pool.17`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.17) -> [`pr/pool.18`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.18), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.17..pr/pool.18)) adding commit descriptions, locator test, and partially fixing travis macos error \"comparison of integers of different signs\" https://travis-ci.org/github/bitcoin/bitcoin/jobs/685957982#L3778\r\nUpdated de030e6258251fba2159788c2bdf135f6e2369f3 -> d1ae53126babf5dd7e714c3ea954913fe35b94bc ([`pr/pool.18`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.18) -> [`pr/pool.19`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.19), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.18..pr/pool.19)) with fix for travis errors \"comparison of integers of different signs\" https://travis-ci.org/github/bitcoin/bitcoin/jobs/686087628#L3688\r\nRebased d1ae53126babf5dd7e714c3ea954913fe35b94bc -> 9ffa3622484c55f15bd30daed61ef829421aa7de ([`pr/pool.19`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.19) -> [`pr/pool.20`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.20), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.19-rebase..pr/pool.20)) due to conflicts with #16127 and #18635, also rewriting PR description in light of #16426 and #18964 and #11756\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627315723/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638533220",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-638533220",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 638533220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzODUzMzIyMA==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-04T00:42:57Z",
    "updated_at": "2020-06-04T00:42:57Z",
    "author_association": "MEMBER",
    "body": "Actually rebasing #17484, I think to avoid breaking anti-fee snipping it would be better to setup IBD state at mempool/block notification sync. Ideally calling `updateBlockTip` at any ending of block rescan. But likely I need to wait for `ScanForWalletTransactions` being moved inside the node, if I want to drop `isInitialBlockDownload`\r\n\r\nIs this PR ready for review ?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638533220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638554158",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-638554158",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 638554158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzODU1NDE1OA==",
    "user": {
      "login": "vahidjalaliii",
      "id": 65213647,
      "node_id": "MDQ6VXNlcjY1MjEzNjQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/65213647?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vahidjalaliii",
      "html_url": "https://github.com/vahidjalaliii",
      "followers_url": "https://api.github.com/users/vahidjalaliii/followers",
      "following_url": "https://api.github.com/users/vahidjalaliii/following{/other_user}",
      "gists_url": "https://api.github.com/users/vahidjalaliii/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vahidjalaliii/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vahidjalaliii/subscriptions",
      "organizations_url": "https://api.github.com/users/vahidjalaliii/orgs",
      "repos_url": "https://api.github.com/users/vahidjalaliii/repos",
      "events_url": "https://api.github.com/users/vahidjalaliii/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vahidjalaliii/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-04T01:54:35Z",
    "updated_at": "2020-06-04T01:54:35Z",
    "author_association": "NONE",
    "body": ".\n\n\u062f\u0631 \u062a\u0627\u0631\u06cc\u062e \u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647 \u06f3 \u0698\u0648\u0626\u0646 \u06f2\u06f0\u06f2\u06f0\u060c\u200f \u06f3:\u06f0\u06f5 DrahtBot <notifications@github.com>\n\u0646\u0648\u0634\u062a:\n\n> \ud83d\udc19 This pull request conflicts with the target branch and needs rebase\n> <https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes>\n> .\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-637842411>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/APRRJT7E4TN3UBHBPFS2U3LRUV5BNANCNFSM4HC2YJWQ>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638554158/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639491391",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-639491391",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 639491391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzOTQ5MTM5MQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-05T13:49:26Z",
    "updated_at": "2021-04-12T00:00:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "re: ariard https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-638533220\r\n> Is this PR ready for review ?\r\n\r\nPR is complete and ready for review. Only caveat is that the unit test is triggering thread sanitizer errors. The errors look like they could be real, but I think they are errors in the test itself, not the code, and I'll look into them.\r\n\r\n---\r\n\r\nRebased 9ffa3622484c55f15bd30daed61ef829421aa7de -> 57108199fc6f81b4b6caef082390f6550b2e20b8 ([`pr/pool.20`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.20) -> [`pr/pool.21`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.21), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.20-rebase..pr/pool.21)) due to conflict with #18982\r\nRebased 57108199fc6f81b4b6caef082390f6550b2e20b8 -> 8db3520954e033f07986979fb77a46d8a08be351 ([`pr/pool.21`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.21) -> [`pr/pool.22`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.22), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.21-rebase..pr/pool.22)) after #19164 to try to avoid tsan errors in https://travis-ci.org/github/bitcoin/bitcoin/jobs/694884461\r\nUpdated 8db3520954e033f07986979fb77a46d8a08be351 -> 182df0f94a72668074b8b41105a2250a3900456f ([`pr/pool.22`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.22) -> [`pr/pool.23`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.23), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.22..pr/pool.23)) with TSAN suppression to fix spurious std::cout data race error https://travis-ci.org/github/bitcoin/bitcoin/jobs/695004018#L5755\r\nRebased 182df0f94a72668074b8b41105a2250a3900456f -> 3704d3b97e497ba69acc957760743f0ce81e20e3 ([`pr/pool.23`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.23) -> [`pr/pool.24`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.24), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.23-rebase..pr/pool.24)) due to silent conflict with #19249\r\nUpdated 3704d3b97e497ba69acc957760743f0ce81e20e3 -> 111a2ebec6c9ef3310a72db0d9456b839f8433ae ([`pr/pool.24`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.24) -> [`pr/pool.25`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.25), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.24..pr/pool.25)) to try to work around TSAN data race https://cirrus-ci.com/task/6561667200843776\r\nUpdated 111a2ebec6c9ef3310a72db0d9456b839f8433ae -> 0d41ed87fc0afbbe0916d363fd71b12c5fe981eb ([`pr/pool.25`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.25) -> [`pr/pool.26`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.26), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.25..pr/pool.26)) to work around TSAN data race https://cirrus-ci.com/task/6556801657208832\r\nRebased 0d41ed87fc0afbbe0916d363fd71b12c5fe981eb -> 68cd2f23e78843c903fb46b9dda1830639f7bf1e ([`pr/pool.26`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.26) -> [`pr/pool.27`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.27), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.26-rebase..pr/pool.27)) due to cherry-picked commit in #19538\r\nRebased 68cd2f23e78843c903fb46b9dda1830639f7bf1e -> 9eab04972bdeda48914ea32b9506667f34d718ba ([`pr/pool.27`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.27) -> [`pr/pool.28`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.28), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.27-rebase..pr/pool.28)) due to conflict with #15937\r\nRebased 9eab04972bdeda48914ea32b9506667f34d718ba -> 072e1d17569647105801b5bdc9f283e46d426f6c ([`pr/pool.28`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.28) -> [`pr/pool.29`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.29), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.28-rebase..pr/pool.29)) due to conflicts with #19099 and #19671\r\nRebased 072e1d17569647105801b5bdc9f283e46d426f6c -> 5328fe9623b47ac989c57df57bb34cf1038cbc13 ([`pr/pool.29`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.29) -> [`pr/pool.30`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.30), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.29-rebase..pr/pool.30)) due to conflict with #19572\r\nRebased 5328fe9623b47ac989c57df57bb34cf1038cbc13 -> 8aa64ef7f5d6e02407aa09904092e0213dcdd2c4 ([`pr/pool.30`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.30) -> [`pr/pool.31`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.31), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.30-rebase..pr/pool.31)) due to conflicts with #19425, #19980, #21404, #21415, #21525 and others",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639491391/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/822054257",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-822054257",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 822054257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMjA1NDI1Nw==",
    "user": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?u=6a4a31aaddbc438e053c52d084a698a5f622f1ea&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-18T20:17:26Z",
    "updated_at": "2021-04-18T20:17:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ryanofsky I've not looked at this yet, but does this cause the GUI to become available sooner (e.g. the rescan can run after the splash screen rather than during)? I'd test this if so, or if I understand what benefits it provides - e.g. I'm not sure why we'd want parallel multiwallet scans - unless it means it would scan them all faster in total, for example.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/822054257/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/824033825",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-824033825",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 824033825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDAzMzgyNQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-21T12:49:50Z",
    "updated_at": "2021-04-21T12:49:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for looking at this.\r\n\r\n> @ryanofsky I've not looked at this yet, but does this cause the GUI to become available sooner (e.g. the rescan can run after the splash screen rather than during)?\r\n\r\nYes, this separates opening a wallet from attaching to the node, so should it be possible to interact with the wallet before the rescan finishes if GUI is changed to remove the rescan dialog or make it nonmodal.\r\n\r\nAlso if there are multiple wallets, rescanning once instead of multiple times should make loading faster in general.\r\n\r\n> I'd test this if so, or if I understand what benefits it provides - e.g. I'm not sure why we'd want parallel multiwallet scans - unless it means it would scan them all faster in total, for example.\r\n\r\nUpdated the description to drop the word parallel. It's not really a question of parallel or serial, it's a question of scanning blocks one time for all wallets, or scanning blocks multiple times, once for each wallet.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/824033825/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/844352091",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#issuecomment-844352091",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15719",
    "id": 844352091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NDM1MjA5MQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-19T18:16:58Z",
    "updated_at": "2021-11-29T21:13:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased 8aa64ef7f5d6e02407aa09904092e0213dcdd2c4 -> d36335f643f309790c4b26307eca622a3a9ed688 ([`pr/pool.31`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.31) -> [`pr/pool.32`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.32), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.31-rebase..pr/pool.32)) due to conflict with #20773\r\nRebased d36335f643f309790c4b26307eca622a3a9ed688 -> 6a3705214086420f8548b9ab9456559358911f8c ([`pr/pool.32`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.32) -> [`pr/pool.33`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.33), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.32-rebase..pr/pool.33)) due to conflict with #22156 and #21866\r\nUpdated 6a3705214086420f8548b9ab9456559358911f8c -> 4c2532cf31033120d9d47575c926f618a78dae51 ([`pr/pool.33`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.33) -> [`pr/pool.34`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.34), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.33..pr/pool.34)) to fix thread sanitizer failure https://cirrus-ci.com/task/4605787663237120\r\nUpdated 4c2532cf31033120d9d47575c926f618a78dae51 -> cfe2009ff8671724908c69ae48c84c77e3793c25 ([`pr/pool.34`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.34) -> [`pr/pool.35`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.35), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.34..pr/pool.35)) to fix thread sanitizer failure https://cirrus-ci.com/task/6525364810809344?logs=ci#L3365\r\nRebased cfe2009ff8671724908c69ae48c84c77e3793c25 -> 591dd974dceec8bf0154c7ac3b305d8811ed51c4 ([`pr/pool.35`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.35) -> [`pr/pool.36`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.36), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.35-rebase..pr/pool.36)) due to conflict with #19101\r\nRebased 591dd974dceec8bf0154c7ac3b305d8811ed51c4 -> 793f40361133f9abcf79cd87d1d9f24308094b09 ([`pr/pool.36`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.36) -> [`pr/pool.37`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.37), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.36-rebase..pr/pool.37)) due to conflict with #22100\r\nRebased 793f40361133f9abcf79cd87d1d9f24308094b09 -> 74821eda663561548f575bff6cc1c57286c8952b ([`pr/pool.37`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.37) -> [`pr/pool.38`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.38), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.37-rebase..pr/pool.38)) due to conflict with #23123\r\nRebased 74821eda663561548f575bff6cc1c57286c8952b -> 24dfff610ecf01338c9a9b7c1a28307c3fcfbc78 ([`pr/pool.38`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.38) -> [`pr/pool.39`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.39), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.38-rebase..pr/pool.39)) due to conflict with #23003\r\nRebased 24dfff610ecf01338c9a9b7c1a28307c3fcfbc78 -> b5635c5cfd537dd9db18d2e29f9fbfeb01767b00 ([`pr/pool.39`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.39) -> [`pr/pool.40`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.40), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.39-rebase..pr/pool.40)) due to conflict with #23512\r\nRebased b5635c5cfd537dd9db18d2e29f9fbfeb01767b00 -> 2b898a0456d742911c1f74229c9fc64a0012ca42 ([`pr/pool.40`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.40) -> [`pr/pool.41`](https://github.com/ryanofsky/bitcoin/commits/pr/pool.41), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/pool.40-rebase..pr/pool.41)) due to conflict with #22868\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/844352091/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271169011",
    "pull_request_review_id": 221492587,
    "id": 271169011,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTE2OTAxMQ==",
    "diff_hunk": "@@ -358,22 +359,38 @@ class ChainImpl : public Chain\n     {\n         ::uiInterface.ShowProgress(title, progress, resume_possible);\n     }\n-    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications, SnapshotFn snapshot_fn) override\n     {\n-        return MakeUnique<NotificationsHandlerImpl>(*this, notifications);\n+        AssertLockNotHeld(::cs_main);\n+        AssertLockNotHeld(::mempool.cs);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "10f92ce5c41a6936066f159012be72395385f282",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could use `LOCKS_EXCLUDED` annotations for those? ",
    "created_at": "2019-04-02T07:43:06Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271169011",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271169011"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271169011"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271169011/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 362,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271292127",
    "pull_request_review_id": 221643011,
    "id": 271292127,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTI5MjEyNw==",
    "diff_hunk": "@@ -358,22 +359,38 @@ class ChainImpl : public Chain\n     {\n         ::uiInterface.ShowProgress(title, progress, resume_possible);\n     }\n-    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications, SnapshotFn snapshot_fn) override\n     {\n-        return MakeUnique<NotificationsHandlerImpl>(*this, notifications);\n+        AssertLockNotHeld(::cs_main);\n+        AssertLockNotHeld(::mempool.cs);\n+\n+        // Declare packaged task to run in notification thread, and to first\n+        // send the snapshot before enabling subsequent notifications.\n+        std::vector<CTransactionRef> snapshot;\n+        std::packaged_task<std::unique_ptr<Handler>()> task([&] {\n+            if (snapshot_fn) snapshot_fn(std::move(snapshot));\n+            return MakeUnique<NotificationsHandlerImpl>(*this, notifications);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 24,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "10f92ce5c41a6936066f159012be72395385f282",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Mempool can change after the snapshot but before registering the interface and so those changes will be missed.",
    "created_at": "2019-04-02T13:05:07Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271292127",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271292127"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271292127"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271292127/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 369,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271355792",
    "pull_request_review_id": 221722990,
    "id": 271355792,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTM1NTc5Mg==",
    "diff_hunk": "@@ -358,22 +359,38 @@ class ChainImpl : public Chain\n     {\n         ::uiInterface.ShowProgress(title, progress, resume_possible);\n     }\n-    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications, SnapshotFn snapshot_fn) override\n     {\n-        return MakeUnique<NotificationsHandlerImpl>(*this, notifications);\n+        AssertLockNotHeld(::cs_main);\n+        AssertLockNotHeld(::mempool.cs);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "10f92ce5c41a6936066f159012be72395385f282",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271169011\r\n\r\n> Could use LOCKS_EXCLUDED annotations for those?\r\n\r\nAdded annotations. Effect is kind of limited since this is an override and these mutexes aren't accessible where this is called in the wallet, but it still seems better to have these annotations than not.\r\n\r\nLonger term, after more changes like this and #15632, which reduce Chain::Lock usage, wallet code should stop holding these locks altogether.",
    "created_at": "2019-04-02T15:09:41Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271355792",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271355792"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271355792"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271355792/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 362,
    "side": "RIGHT",
    "in_reply_to_id": 271169011
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271355828",
    "pull_request_review_id": 221722990,
    "id": 271355828,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTM1NTgyOA==",
    "diff_hunk": "@@ -358,22 +359,38 @@ class ChainImpl : public Chain\n     {\n         ::uiInterface.ShowProgress(title, progress, resume_possible);\n     }\n-    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications, SnapshotFn snapshot_fn) override\n     {\n-        return MakeUnique<NotificationsHandlerImpl>(*this, notifications);\n+        AssertLockNotHeld(::cs_main);\n+        AssertLockNotHeld(::mempool.cs);\n+\n+        // Declare packaged task to run in notification thread, and to first\n+        // send the snapshot before enabling subsequent notifications.\n+        std::vector<CTransactionRef> snapshot;\n+        std::packaged_task<std::unique_ptr<Handler>()> task([&] {\n+            if (snapshot_fn) snapshot_fn(std::move(snapshot));\n+            return MakeUnique<NotificationsHandlerImpl>(*this, notifications);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 24,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "10f92ce5c41a6936066f159012be72395385f282",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271292127\r\n\r\n> Mempool can change after the snapshot but before registering the interface and so those changes will be missed.\r\n\r\nThis isn't true, and the comment below, \"Hold locks while scheduling the task so notifications about added and removed transactions after the snapshot arrive after the snapshot\" is specifically referring to this case.\r\n\r\nLet me know if I should make it more clear, but as long as the locks are held, transactions can't be added / removed by other threads, and as long as CallFunctionInValidationInterfaceQueue is called before transactions are added/removed, the handler will be registered before the queued notifications signal it.",
    "created_at": "2019-04-02T15:09:45Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271355828",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271355828"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271355828"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271355828/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 369,
    "side": "RIGHT",
    "in_reply_to_id": 271292127
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271375746",
    "pull_request_review_id": 221748475,
    "id": 271375746,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTM3NTc0Ng==",
    "diff_hunk": "@@ -358,22 +359,38 @@ class ChainImpl : public Chain\n     {\n         ::uiInterface.ShowProgress(title, progress, resume_possible);\n     }\n-    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications, SnapshotFn snapshot_fn) override\n     {\n-        return MakeUnique<NotificationsHandlerImpl>(*this, notifications);\n+        AssertLockNotHeld(::cs_main);\n+        AssertLockNotHeld(::mempool.cs);\n+\n+        // Declare packaged task to run in notification thread, and to first\n+        // send the snapshot before enabling subsequent notifications.\n+        std::vector<CTransactionRef> snapshot;\n+        std::packaged_task<std::unique_ptr<Handler>()> task([&] {\n+            if (snapshot_fn) snapshot_fn(std::move(snapshot));\n+            return MakeUnique<NotificationsHandlerImpl>(*this, notifications);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 24,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "10f92ce5c41a6936066f159012be72395385f282",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "But the queue can be non empty when CallFunctionInValidationInterfaceQueue is called?",
    "created_at": "2019-04-02T15:50:29Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271375746",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271375746"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271375746"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271375746/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 369,
    "side": "RIGHT",
    "in_reply_to_id": 271292127
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271384607",
    "pull_request_review_id": 221760023,
    "id": 271384607,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTM4NDYwNw==",
    "diff_hunk": "@@ -358,22 +359,38 @@ class ChainImpl : public Chain\n     {\n         ::uiInterface.ShowProgress(title, progress, resume_possible);\n     }\n-    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications, SnapshotFn snapshot_fn) override\n     {\n-        return MakeUnique<NotificationsHandlerImpl>(*this, notifications);\n+        AssertLockNotHeld(::cs_main);\n+        AssertLockNotHeld(::mempool.cs);\n+\n+        // Declare packaged task to run in notification thread, and to first\n+        // send the snapshot before enabling subsequent notifications.\n+        std::vector<CTransactionRef> snapshot;\n+        std::packaged_task<std::unique_ptr<Handler>()> task([&] {\n+            if (snapshot_fn) snapshot_fn(std::move(snapshot));\n+            return MakeUnique<NotificationsHandlerImpl>(*this, notifications);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 24,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "10f92ce5c41a6936066f159012be72395385f282",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271375746\r\n\r\n> But the queue can be non empty when CallFunctionInValidationInterfaceQueue is called?\r\n\r\nI think you are referring to a different problem now (problem of old notifications being received when they shouldn't be, which is different from the problem of new notifications not being received when they should be). The problem of old notifications being received when they shouldn't be is what happens without this PR in the current code:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/2c364fde423e74b4e03ebcff4582a9db7a6c4e4b/src/interfaces/chain.h#L273-L281\r\n\r\nThe problem is fixed by this PR by not constructing NotificationsHandlerImpl until after snapshot_fn is called. The comment there \"to first send the snapshot before enabling subsequent notifications\" is about this.",
    "created_at": "2019-04-02T16:10:27Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271384607",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271384607"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271384607"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271384607/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 369,
    "side": "RIGHT",
    "in_reply_to_id": 271292127
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271409110",
    "pull_request_review_id": 221791281,
    "id": 271409110,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTQwOTExMA==",
    "diff_hunk": "@@ -358,22 +359,38 @@ class ChainImpl : public Chain\n     {\n         ::uiInterface.ShowProgress(title, progress, resume_possible);\n     }\n-    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications, SnapshotFn snapshot_fn) override\n     {\n-        return MakeUnique<NotificationsHandlerImpl>(*this, notifications);\n+        AssertLockNotHeld(::cs_main);\n+        AssertLockNotHeld(::mempool.cs);\n+\n+        // Declare packaged task to run in notification thread, and to first\n+        // send the snapshot before enabling subsequent notifications.\n+        std::vector<CTransactionRef> snapshot;\n+        std::packaged_task<std::unique_ptr<Handler>()> task([&] {\n+            if (snapshot_fn) snapshot_fn(std::move(snapshot));\n+            return MakeUnique<NotificationsHandlerImpl>(*this, notifications);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 24,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "10f92ce5c41a6936066f159012be72395385f282",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`AddToProcessQueue` tricked me, what really goes to that queue are notifications.",
    "created_at": "2019-04-02T17:12:10Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271409110",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271409110"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271409110"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271409110/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 369,
    "side": "RIGHT",
    "in_reply_to_id": 271292127
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271410636",
    "pull_request_review_id": 221791281,
    "id": 271410636,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTQxMDYzNg==",
    "diff_hunk": "@@ -358,22 +359,39 @@ class ChainImpl : public Chain\n     {\n         ::uiInterface.ShowProgress(title, progress, resume_possible);\n     }\n-    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications, SnapshotFn snapshot_fn) override\n+        LOCKS_EXCLUDED(::cs_main, ::mempool.cs)\n     {\n-        return MakeUnique<NotificationsHandlerImpl>(*this, notifications);\n+        AssertLockNotHeld(::cs_main);\n+        AssertLockNotHeld(::mempool.cs);\n+\n+        // Declare packaged task to run in notification thread, and to first\n+        // send the snapshot before enabling subsequent notifications.\n+        std::vector<CTransactionRef> snapshot;\n+        std::packaged_task<std::unique_ptr<Handler>()> task([&] {\n+            if (snapshot_fn) snapshot_fn(std::move(snapshot));\n+            return MakeUnique<NotificationsHandlerImpl>(*this, notifications);\n+        });\n+\n+        // Snapshot mempool transactions, then schedule the task to execute.\n+        // Hold locks while scheduling the task so notifications about added and\n+        // removed transactions after the snapshot arrive after the snapshot.",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 30,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "5f593ab2e1dd52a50062abffbbe5e601fea165a8",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "also \"arrive after task() is called\" right?",
    "created_at": "2019-04-02T17:16:02Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271410636",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271410636"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271410636"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271410636/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 378,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271430419",
    "pull_request_review_id": 221817666,
    "id": 271430419,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTQzMDQxOQ==",
    "diff_hunk": "@@ -358,22 +359,39 @@ class ChainImpl : public Chain\n     {\n         ::uiInterface.ShowProgress(title, progress, resume_possible);\n     }\n-    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications, SnapshotFn snapshot_fn) override\n+        LOCKS_EXCLUDED(::cs_main, ::mempool.cs)\n     {\n-        return MakeUnique<NotificationsHandlerImpl>(*this, notifications);\n+        AssertLockNotHeld(::cs_main);\n+        AssertLockNotHeld(::mempool.cs);\n+\n+        // Declare packaged task to run in notification thread, and to first\n+        // send the snapshot before enabling subsequent notifications.\n+        std::vector<CTransactionRef> snapshot;\n+        std::packaged_task<std::unique_ptr<Handler>()> task([&] {\n+            if (snapshot_fn) snapshot_fn(std::move(snapshot));\n+            return MakeUnique<NotificationsHandlerImpl>(*this, notifications);\n+        });\n+\n+        // Snapshot mempool transactions, then schedule the task to execute.\n+        // Hold locks while scheduling the task so notifications about added and\n+        // removed transactions after the snapshot arrive after the snapshot.",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 30,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "5f593ab2e1dd52a50062abffbbe5e601fea165a8",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271410636\r\n\r\n> also \"arrive after task() is called\" right?\r\n\r\nYes task() is what sends the snapshot, so that's what this is referring to. Replaced \"transactions after the snapshot arrive after the snapshot\" with \"transactions after taking the snapshot arrive after the snapshot callback in task()\" to reference it and be more specific.",
    "created_at": "2019-04-02T18:04:40Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271430419",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271430419"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r271430419"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271430419/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 378,
    "side": "RIGHT",
    "in_reply_to_id": 271410636
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274932794",
    "pull_request_review_id": 226115629,
    "id": 274932794,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDkzMjc5NA==",
    "diff_hunk": "@@ -4213,6 +4215,17 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     // Try to top up keypool. No-op if the wallet is locked.\n     walletInstance->TopUpKeyPool();\n \n+    // Register with the validation interface. Skip requesting mempool transactions if wallet is empty.\n+    interfaces::Chain::SnapshotFn snapshot_fn;\n+    if (!fFirstRun) {\n+        snapshot_fn = [walletInstance](std::vector<CTransactionRef> mempool_txs) {\n+            for (const auto& mempool_tx : mempool_txs) {\n+                walletInstance->TransactionAddedToMempool(mempool_tx);\n+            }\n+        };\n+    }\n+    walletInstance->m_chain_notifications_handler = chain.handleNotifications(*walletInstance, snapshot_fn);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 46,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "0ebc74e7636f6eadfde5685466c2b08065681702",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@jnewbery points out that it is too early to handle mempool transactions here at this point, because the rescan hasn't happened yet. Processing a mempool transaction before the rescan could result in the `IsFromMe` check in `AddToWalletIfInvolvingMe` failing to add the transaction to the walelt when it depends on a block that hasn't been scanned yet.\r\n\r\nSo the mempool loop here needs to be moved below and will require some changes to locking, since handleNotifications in this PR can't be called with cs_main (it would deadlock).",
    "created_at": "2019-04-12T14:33:46Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r274932794",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274932794"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r274932794"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274932794/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4227,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274934195",
    "pull_request_review_id": 226117444,
    "id": 274934195,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDkzNDE5NQ==",
    "diff_hunk": "@@ -4213,6 +4215,17 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     // Try to top up keypool. No-op if the wallet is locked.\n     walletInstance->TopUpKeyPool();\n \n+    // Register with the validation interface. Skip requesting mempool transactions if wallet is empty.",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 37,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "0ebc74e7636f6eadfde5685466c2b08065681702",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think moving the sync-from-mempool function to above the initial rescan breaks the (undocumented) expectation that the wallet is notified of transactions in dependency order. In fact, this was slightly broken by #15652, but this PR makes it worse.\r\n\r\nPrior to dynamically-loaded wallets, the wallet would always receive a transaction after it had received all of that transaction's ancestors. That wallet relies on that expectation:\r\n\r\n- `CWallet::IsFromMe()` will only match on a transaction if its parent is already in the wallet.\r\n- `nTimeSmart` should be monotonically increasing for transaction descendency. If transactions arrive in the wrong order then this is no longer true, and they'll be shown out-of-order in the GUI.\r\n\r\nSince #10740, a wallet could receive mempool transactions out-of-order (since a newly loaded wallet would not be notified of transactions in the mempool, but could be notified of their descendant transactions when they arrive).  #15652 improved the situtation by notifying the wallet of all mempool transactions, but didn't sort them first, so a wallet could still be notified of the mempool txs in the wrong order. This PR potentially makes things worse by notifying the wallet of mempool txs before the blocks which could contain the mempool txs' ancestors.\r\n\r\nI think to fix this, we need to:\r\n- move the sync-from-mempool to after the rescan call, while cs_main is still held\r\n- sort the mempool txs by using `mempool.infoAll()` before notifying the wallet.\r\n\r\nWe should also document that the wallet expects to see transactions in order!",
    "created_at": "2019-04-12T14:36:43Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r274934195",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274934195"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r274934195"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274934195/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4218,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274946683",
    "pull_request_review_id": 226133835,
    "id": 274946683,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDk0NjY4Mw==",
    "diff_hunk": "@@ -4213,6 +4215,17 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     // Try to top up keypool. No-op if the wallet is locked.\n     walletInstance->TopUpKeyPool();\n \n+    // Register with the validation interface. Skip requesting mempool transactions if wallet is empty.",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 37,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "0ebc74e7636f6eadfde5685466c2b08065681702",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I also wonder if there could brokenness in the case where a reorg happens during a `rescanblockchain` or `importmulti` RPC call (these rescans are different because cs_main isn't held the whole time).",
    "created_at": "2019-04-12T15:03:53Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r274946683",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274946683"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r274946683"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274946683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4218,
    "side": "RIGHT",
    "in_reply_to_id": 274934195
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417813966",
    "pull_request_review_id": 403272443,
    "id": 417813966,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgxMzk2Ng==",
    "diff_hunk": "@@ -4213,6 +4215,17 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     // Try to top up keypool. No-op if the wallet is locked.\n     walletInstance->TopUpKeyPool();\n \n+    // Register with the validation interface. Skip requesting mempool transactions if wallet is empty.\n+    interfaces::Chain::SnapshotFn snapshot_fn;\n+    if (!fFirstRun) {\n+        snapshot_fn = [walletInstance](std::vector<CTransactionRef> mempool_txs) {\n+            for (const auto& mempool_tx : mempool_txs) {\n+                walletInstance->TransactionAddedToMempool(mempool_tx);\n+            }\n+        };\n+    }\n+    walletInstance->m_chain_notifications_handler = chain.handleNotifications(*walletInstance, snapshot_fn);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 46,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "0ebc74e7636f6eadfde5685466c2b08065681702",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15719#discussion_r274932794\r\n\r\n> @jnewbery points out that it is too early to handle mempool transactions here at this point\r\n\r\nThis is resolved in the current version of the PR which integrates rescans and finishes recsanning before creating the mempool snapshot",
    "created_at": "2020-04-30T07:36:50Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r417813966",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417813966"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r417813966"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417813966/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4227,
    "side": "RIGHT",
    "in_reply_to_id": 274932794
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417821656",
    "pull_request_review_id": 403282040,
    "id": 417821656,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgyMTY1Ng==",
    "diff_hunk": "@@ -4213,6 +4215,17 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     // Try to top up keypool. No-op if the wallet is locked.\n     walletInstance->TopUpKeyPool();\n \n+    // Register with the validation interface. Skip requesting mempool transactions if wallet is empty.",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 37,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "0ebc74e7636f6eadfde5685466c2b08065681702",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15719#discussion_r274934195\r\n\r\n> I think to fix this, we need to:\r\n> \r\n> * move the sync-from-mempool to after the rescan call, while cs_main is still held\r\n> * sort the mempool txs by using `mempool.infoAll()` before notifying the wallet.\r\n> \r\n> We should also document that the wallet expects to see transactions in order!\r\n\r\nMoving sync is done. Rescanning happens before syncing from mempool in the current version of this PR. Sorting mempool isn't done yet. So this will still be as broken as it has been since https://github.com/bitcoin/bitcoin/pull/15652, but not more broken. There's already a lot going on here, so I think I would want to address this in a different PR. It seems pretty easy to fix independently of this PR, but writing a test case could be a challenge",
    "created_at": "2020-04-30T07:51:34Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r417821656",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417821656"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r417821656"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417821656/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4218,
    "side": "RIGHT",
    "in_reply_to_id": 274934195
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422018373",
    "pull_request_review_id": 408087730,
    "id": 422018373,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAxODM3Mw==",
    "diff_hunk": "@@ -4071,16 +4010,69 @@ bool CWallet::UpgradeWallet(int version, bilingual_str& error, std::vector<bilin\n     return true;\n }\n \n-void CWallet::postInitProcess()\n+CWallet::ScanStatus CWallet::HandleNotifications(std::shared_ptr<CWallet> wallet, bool scan)\n {\n-    LOCK(cs_wallet);\n+    // Register with the validation interface. Skip requesting mempool transactions if wallet is empty.\n+    interfaces::Chain::ScanFn scan_fn;\n+    interfaces::Chain::MempoolFn mempool_fn;\n+    Optional<CBlockLocator> best_block_locator;\n+    // The way the 'time_first_key' is initialized is just a workaround for the gcc bug #47679 since version 4.6.0.\n+    Optional<int64_t> time_first_key = MakeOptional(false, int64_t());;\n+    ScanStatus scan_status = ScanStatus::SKIPPED;\n+    if (scan) {\n+        // Get best block locator to rescan if not going back and rescanning\n+        if (!gArgs.GetBoolArg(\"-rescan\", false)) {\n+            best_block_locator.emplace();\n+            WalletBatch(*wallet->database).ReadBestBlock(*best_block_locator);\n+        }\n \n+        // No need to read and scan block if block was created before\n+        // our wallet birthday (as adjusted for block time variability)",
    "path": "src/wallet/wallet.cpp",
    "position": 112,
    "original_position": 131,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "52d152f0bf2543fc6fbb80cdde7ae2249305662f",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Block time variability is unclear, you mean the absence of order guarantee between `nTime`  and `nTimeFirstKey`?",
    "created_at": "2020-05-08T08:32:38Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422018373",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422018373"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422018373"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422018373/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2818,
    "original_line": 2818,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422020481",
    "pull_request_review_id": 408087730,
    "id": 422020481,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAyMDQ4MQ==",
    "diff_hunk": "@@ -245,8 +228,38 @@ class Chain\n         virtual void chainStateFlushed(const CBlockLocator& locator) {}\n     };\n \n-    //! Register handler for notifications.\n-    virtual std::unique_ptr<Handler> handleNotifications(std::shared_ptr<Notifications> notifications) = 0;\n+    using ScanFn = std::function<Optional<uint256>(const uint256& start_hash, int start_height, const uint256& tip_hash, int tip_height)>;\n+    using MempoolFn = std::function<void(std::vector<CTransactionRef>)>;\n+\n+    //! Register handler for notifications. Before returning and before sending\n+    //! the first notification, call ScanFn with a scan range of blocks after a\n+    //! specified location and time, and then call MempoolFn with a snapshot of\n+    //! transactions in the mempool before the first transactionAddedToMempool /",
    "path": "src/interfaces/chain.h",
    "position": null,
    "original_position": 57,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "52d152f0bf2543fc6fbb80cdde7ae2249305662f",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This part of comment may be made more intuitively instead of one chunk, like \"Call MempoolFn with a snapshot of transaction before firing transactions back to caller\".",
    "created_at": "2020-05-08T08:37:14Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422020481",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422020481"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422020481"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422020481/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 237,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422022021",
    "pull_request_review_id": 408087730,
    "id": 422022021,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAyMjAyMQ==",
    "diff_hunk": "@@ -245,8 +228,38 @@ class Chain\n         virtual void chainStateFlushed(const CBlockLocator& locator) {}\n     };\n \n-    //! Register handler for notifications.\n-    virtual std::unique_ptr<Handler> handleNotifications(std::shared_ptr<Notifications> notifications) = 0;\n+    using ScanFn = std::function<Optional<uint256>(const uint256& start_hash, int start_height, const uint256& tip_hash, int tip_height)>;\n+    using MempoolFn = std::function<void(std::vector<CTransactionRef>)>;\n+\n+    //! Register handler for notifications. Before returning and before sending\n+    //! the first notification, call ScanFn with a scan range of blocks after a\n+    //! specified location and time, and then call MempoolFn with a snapshot of\n+    //! transactions in the mempool before the first transactionAddedToMempool /\n+    //! TransactionRemovedFromMempool notifications.\n+    //!\n+    //! @param[in] notify        callback object receiving notifications\n+    //! @param[in] scan_fn       callback invoked before notifications are sent\n+    //!                          to scan blocks after a specified location and\n+    //!                          time. This should return the hash of the last\n+    //!                          block scanned, and may be called more than once\n+    //!                          if new blocks were connected during the scan.\n+    //! @param[in] mempool_fn    callback invoked before notifications are sent\n+    //!                          with snapshot of mempool transactions\n+    //! @param[in] scan_locator  location of last block previously scanned.\n+    //!                          scan_fn will be only be called for blocks after\n+    //!                          this point. Can be null to scan from genesis.\n+    //! @param[in] scan_time     minimum block timestamp for beginning the scan",
    "path": "src/interfaces/chain.h",
    "position": 74,
    "original_position": 71,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "52d152f0bf2543fc6fbb80cdde7ae2249305662f",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "May we drop either or `scan_locator` or `scan_time`, like if wallet first key is older that locator use it as a starting point, if not use wallet last block `nTime`. Do we still really need wallet locator ?",
    "created_at": "2020-05-08T08:40:37Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422022021",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422022021"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422022021"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422022021/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 257,
    "original_line": 257,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422023756",
    "pull_request_review_id": 408087730,
    "id": 422023756,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAyMzc1Ng==",
    "diff_hunk": "@@ -245,8 +228,38 @@ class Chain\n         virtual void chainStateFlushed(const CBlockLocator& locator) {}\n     };\n \n-    //! Register handler for notifications.\n-    virtual std::unique_ptr<Handler> handleNotifications(std::shared_ptr<Notifications> notifications) = 0;\n+    using ScanFn = std::function<Optional<uint256>(const uint256& start_hash, int start_height, const uint256& tip_hash, int tip_height)>;\n+    using MempoolFn = std::function<void(std::vector<CTransactionRef>)>;\n+\n+    //! Register handler for notifications. Before returning and before sending\n+    //! the first notification, call ScanFn with a scan range of blocks after a\n+    //! specified location and time, and then call MempoolFn with a snapshot of\n+    //! transactions in the mempool before the first transactionAddedToMempool /\n+    //! TransactionRemovedFromMempool notifications.\n+    //!\n+    //! @param[in] notify        callback object receiving notifications\n+    //! @param[in] scan_fn       callback invoked before notifications are sent\n+    //!                          to scan blocks after a specified location and\n+    //!                          time. This should return the hash of the last\n+    //!                          block scanned, and may be called more than once\n+    //!                          if new blocks were connected during the scan.\n+    //! @param[in] mempool_fn    callback invoked before notifications are sent\n+    //!                          with snapshot of mempool transactions\n+    //! @param[in] scan_locator  location of last block previously scanned.\n+    //!                          scan_fn will be only be called for blocks after\n+    //!                          this point. Can be null to scan from genesis.\n+    //! @param[in] scan_time     minimum block timestamp for beginning the scan\n+    //!                          scan_fn will only be called for blocks starting\n+    //!                          from this timestamp\n+    //! @param[out] tip          information about chain tip at the point where\n+    //!                          notifications will begin\n+    virtual std::unique_ptr<Handler> handleNotifications(std::shared_ptr<Notifications> notifications,",
    "path": "src/interfaces/chain.h",
    "position": 87,
    "original_position": 76,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "52d152f0bf2543fc6fbb80cdde7ae2249305662f",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it would be better to rename `handleNotifications`. IMO it does 3 different tasks:\r\n* trigger rescan\r\n* sync with mempool\r\n* register notification\r\n\r\nI'm fine with doing all of three in same functions rather than 3 chunks for each, but name could be something like `syncClient` ?\r\n\r\nAlso you may be interested by rescan but not mempool-sync and therefore it may be made optional.",
    "created_at": "2020-05-08T08:44:36Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422023756",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422023756"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422023756"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422023756/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 270,
    "original_line": 270,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422024446",
    "pull_request_review_id": 408087730,
    "id": 422024446,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAyNDQ0Ng==",
    "diff_hunk": "@@ -245,8 +228,38 @@ class Chain\n         virtual void chainStateFlushed(const CBlockLocator& locator) {}\n     };\n \n-    //! Register handler for notifications.\n-    virtual std::unique_ptr<Handler> handleNotifications(std::shared_ptr<Notifications> notifications) = 0;\n+    using ScanFn = std::function<Optional<uint256>(const uint256& start_hash, int start_height, const uint256& tip_hash, int tip_height)>;\n+    using MempoolFn = std::function<void(std::vector<CTransactionRef>)>;\n+\n+    //! Register handler for notifications. Before returning and before sending\n+    //! the first notification, call ScanFn with a scan range of blocks after a\n+    //! specified location and time, and then call MempoolFn with a snapshot of\n+    //! transactions in the mempool before the first transactionAddedToMempool /\n+    //! TransactionRemovedFromMempool notifications.\n+    //!\n+    //! @param[in] notify        callback object receiving notifications\n+    //! @param[in] scan_fn       callback invoked before notifications are sent\n+    //!                          to scan blocks after a specified location and\n+    //!                          time. This should return the hash of the last\n+    //!                          block scanned, and may be called more than once\n+    //!                          if new blocks were connected during the scan.\n+    //! @param[in] mempool_fn    callback invoked before notifications are sent\n+    //!                          with snapshot of mempool transactions\n+    //! @param[in] scan_locator  location of last block previously scanned.\n+    //!                          scan_fn will be only be called for blocks after\n+    //!                          this point. Can be null to scan from genesis.\n+    //! @param[in] scan_time     minimum block timestamp for beginning the scan\n+    //!                          scan_fn will only be called for blocks starting\n+    //!                          from this timestamp\n+    //! @param[out] tip          information about chain tip at the point where",
    "path": "src/interfaces/chain.h",
    "position": 77,
    "original_position": 74,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "52d152f0bf2543fc6fbb80cdde7ae2249305662f",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You may precise tip included.",
    "created_at": "2020-05-08T08:46:05Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422024446",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422024446"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422024446"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422024446/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 260,
    "original_line": 260,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422025061",
    "pull_request_review_id": 408087730,
    "id": 422025061,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAyNTA2MQ==",
    "diff_hunk": "@@ -350,9 +330,72 @@ class ChainImpl : public Chain\n     {\n         ::uiInterface.ShowProgress(title, progress, resume_possible);\n     }\n-    std::unique_ptr<Handler> handleNotifications(std::shared_ptr<Notifications> notifications) override\n-    {\n-        return MakeUnique<NotificationsHandlerImpl>(std::move(notifications));\n+    std::unique_ptr<Handler> handleNotifications(std::shared_ptr<Notifications> notifications,\n+        ScanFn scan_fn,\n+        MempoolFn mempool_fn,\n+        const CBlockLocator* scan_locator,\n+        int64_t scan_time,\n+        const FoundBlock& tip,\n+        bool& missing_block_data) override LOCKS_EXCLUDED(::cs_main, ::mempool.cs)\n+    {\n+        std::packaged_task<std::unique_ptr<Handler>()> register_task;\n+        std::vector<CTransactionRef> mempool_snapshot;\n+        {\n+            AssertLockNotHeld(::cs_main);\n+            AssertLockNotHeld(::mempool.cs);\n+            WAIT_LOCK(::cs_main, main_lock);\n+\n+            // Call scan_fn until it has scanned all blocks after specified\n+            // location and time. Looping is necessary because new blocks may\n+            // be connected during rescans.",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 100,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "52d152f0bf2543fc6fbb80cdde7ae2249305662f",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Isn't taking `cs_main` lock avoid block tip increase ?",
    "created_at": "2020-05-08T08:47:26Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422025061",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422025061"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422025061"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422025061/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 367,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422223004",
    "pull_request_review_id": 408338211,
    "id": 422223004,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIyMzAwNA==",
    "diff_hunk": "@@ -350,9 +330,72 @@ class ChainImpl : public Chain\n     {\n         ::uiInterface.ShowProgress(title, progress, resume_possible);\n     }\n-    std::unique_ptr<Handler> handleNotifications(std::shared_ptr<Notifications> notifications) override\n-    {\n-        return MakeUnique<NotificationsHandlerImpl>(std::move(notifications));\n+    std::unique_ptr<Handler> handleNotifications(std::shared_ptr<Notifications> notifications,\n+        ScanFn scan_fn,\n+        MempoolFn mempool_fn,\n+        const CBlockLocator* scan_locator,\n+        int64_t scan_time,\n+        const FoundBlock& tip,\n+        bool& missing_block_data) override LOCKS_EXCLUDED(::cs_main, ::mempool.cs)\n+    {\n+        std::packaged_task<std::unique_ptr<Handler>()> register_task;\n+        std::vector<CTransactionRef> mempool_snapshot;\n+        {\n+            AssertLockNotHeld(::cs_main);\n+            AssertLockNotHeld(::mempool.cs);\n+            WAIT_LOCK(::cs_main, main_lock);\n+\n+            // Call scan_fn until it has scanned all blocks after specified\n+            // location and time. Looping is necessary because new blocks may\n+            // be connected during rescans.",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 100,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "52d152f0bf2543fc6fbb80cdde7ae2249305662f",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422025061\r\n\r\n> Isn't taking `cs_main` lock avoid block tip increase ?\r\n\r\nNope, cs_main isn't held while rescanning so node will not lock up when loading a wallet",
    "created_at": "2020-05-08T15:54:30Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422223004",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422223004"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422223004"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422223004/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 367,
    "side": "RIGHT",
    "in_reply_to_id": 422025061
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422223330",
    "pull_request_review_id": 408338211,
    "id": 422223330,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIyMzMzMA==",
    "diff_hunk": "@@ -245,8 +228,38 @@ class Chain\n         virtual void chainStateFlushed(const CBlockLocator& locator) {}\n     };\n \n-    //! Register handler for notifications.\n-    virtual std::unique_ptr<Handler> handleNotifications(std::shared_ptr<Notifications> notifications) = 0;\n+    using ScanFn = std::function<Optional<uint256>(const uint256& start_hash, int start_height, const uint256& tip_hash, int tip_height)>;\n+    using MempoolFn = std::function<void(std::vector<CTransactionRef>)>;\n+\n+    //! Register handler for notifications. Before returning and before sending\n+    //! the first notification, call ScanFn with a scan range of blocks after a\n+    //! specified location and time, and then call MempoolFn with a snapshot of\n+    //! transactions in the mempool before the first transactionAddedToMempool /",
    "path": "src/interfaces/chain.h",
    "position": null,
    "original_position": 57,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "52d152f0bf2543fc6fbb80cdde7ae2249305662f",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422020481\r\n\r\n> This part of comment may be made more intuitively instead of one chunk, like \"Call MempoolFn with a snapshot of transaction before firing transactions back to caller\".\r\n\r\nThat seems good. I shortened existing description to match it",
    "created_at": "2020-05-08T15:55:07Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422223330",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422223330"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422223330"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422223330/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 237,
    "side": "RIGHT",
    "in_reply_to_id": 422020481
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422223548",
    "pull_request_review_id": 408338211,
    "id": 422223548,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIyMzU0OA==",
    "diff_hunk": "@@ -245,8 +228,38 @@ class Chain\n         virtual void chainStateFlushed(const CBlockLocator& locator) {}\n     };\n \n-    //! Register handler for notifications.\n-    virtual std::unique_ptr<Handler> handleNotifications(std::shared_ptr<Notifications> notifications) = 0;\n+    using ScanFn = std::function<Optional<uint256>(const uint256& start_hash, int start_height, const uint256& tip_hash, int tip_height)>;\n+    using MempoolFn = std::function<void(std::vector<CTransactionRef>)>;\n+\n+    //! Register handler for notifications. Before returning and before sending\n+    //! the first notification, call ScanFn with a scan range of blocks after a\n+    //! specified location and time, and then call MempoolFn with a snapshot of\n+    //! transactions in the mempool before the first transactionAddedToMempool /\n+    //! TransactionRemovedFromMempool notifications.\n+    //!\n+    //! @param[in] notify        callback object receiving notifications\n+    //! @param[in] scan_fn       callback invoked before notifications are sent\n+    //!                          to scan blocks after a specified location and\n+    //!                          time. This should return the hash of the last\n+    //!                          block scanned, and may be called more than once\n+    //!                          if new blocks were connected during the scan.\n+    //! @param[in] mempool_fn    callback invoked before notifications are sent\n+    //!                          with snapshot of mempool transactions\n+    //! @param[in] scan_locator  location of last block previously scanned.\n+    //!                          scan_fn will be only be called for blocks after\n+    //!                          this point. Can be null to scan from genesis.\n+    //! @param[in] scan_time     minimum block timestamp for beginning the scan",
    "path": "src/interfaces/chain.h",
    "position": 74,
    "original_position": 71,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "52d152f0bf2543fc6fbb80cdde7ae2249305662f",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422022021\r\n\r\n> May we drop either or `scan_locator` or `scan_time`, like if wallet first key is older that locator use it as a starting point, if not use wallet last block `nTime`. Do we still really need wallet locator ?\r\n\r\nI think the idea is to allow scanning as little as necessary. Both arguments are optional so callers aren't obligated to provide them. This rescan behavior be revisited in a followup PR, but in this PR I think it makes sense for wallet to continue scanning same blocks it was scanning previously.",
    "created_at": "2020-05-08T15:55:29Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422223548",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422223548"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422223548"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422223548/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 257,
    "original_line": 257,
    "side": "RIGHT",
    "in_reply_to_id": 422022021
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422223665",
    "pull_request_review_id": 408338211,
    "id": 422223665,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIyMzY2NQ==",
    "diff_hunk": "@@ -245,8 +228,38 @@ class Chain\n         virtual void chainStateFlushed(const CBlockLocator& locator) {}\n     };\n \n-    //! Register handler for notifications.\n-    virtual std::unique_ptr<Handler> handleNotifications(std::shared_ptr<Notifications> notifications) = 0;\n+    using ScanFn = std::function<Optional<uint256>(const uint256& start_hash, int start_height, const uint256& tip_hash, int tip_height)>;\n+    using MempoolFn = std::function<void(std::vector<CTransactionRef>)>;\n+\n+    //! Register handler for notifications. Before returning and before sending\n+    //! the first notification, call ScanFn with a scan range of blocks after a\n+    //! specified location and time, and then call MempoolFn with a snapshot of\n+    //! transactions in the mempool before the first transactionAddedToMempool /\n+    //! TransactionRemovedFromMempool notifications.\n+    //!\n+    //! @param[in] notify        callback object receiving notifications\n+    //! @param[in] scan_fn       callback invoked before notifications are sent\n+    //!                          to scan blocks after a specified location and\n+    //!                          time. This should return the hash of the last\n+    //!                          block scanned, and may be called more than once\n+    //!                          if new blocks were connected during the scan.\n+    //! @param[in] mempool_fn    callback invoked before notifications are sent\n+    //!                          with snapshot of mempool transactions\n+    //! @param[in] scan_locator  location of last block previously scanned.\n+    //!                          scan_fn will be only be called for blocks after\n+    //!                          this point. Can be null to scan from genesis.\n+    //! @param[in] scan_time     minimum block timestamp for beginning the scan\n+    //!                          scan_fn will only be called for blocks starting\n+    //!                          from this timestamp\n+    //! @param[out] tip          information about chain tip at the point where",
    "path": "src/interfaces/chain.h",
    "position": 77,
    "original_position": 74,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "52d152f0bf2543fc6fbb80cdde7ae2249305662f",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422024446\r\n\r\n> You may precise tip included.\r\n\r\nThis seems precise, but I may not be seeing what is is unclear. The important point is that there shouldn't be any gap between the tip and the blockConnected or blockDisconnected notification",
    "created_at": "2020-05-08T15:55:43Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422223665",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422223665"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422223665"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422223665/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 260,
    "original_line": 260,
    "side": "RIGHT",
    "in_reply_to_id": 422024446
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422223801",
    "pull_request_review_id": 408338211,
    "id": 422223801,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIyMzgwMQ==",
    "diff_hunk": "@@ -245,8 +228,38 @@ class Chain\n         virtual void chainStateFlushed(const CBlockLocator& locator) {}\n     };\n \n-    //! Register handler for notifications.\n-    virtual std::unique_ptr<Handler> handleNotifications(std::shared_ptr<Notifications> notifications) = 0;\n+    using ScanFn = std::function<Optional<uint256>(const uint256& start_hash, int start_height, const uint256& tip_hash, int tip_height)>;\n+    using MempoolFn = std::function<void(std::vector<CTransactionRef>)>;\n+\n+    //! Register handler for notifications. Before returning and before sending\n+    //! the first notification, call ScanFn with a scan range of blocks after a\n+    //! specified location and time, and then call MempoolFn with a snapshot of\n+    //! transactions in the mempool before the first transactionAddedToMempool /\n+    //! TransactionRemovedFromMempool notifications.\n+    //!\n+    //! @param[in] notify        callback object receiving notifications\n+    //! @param[in] scan_fn       callback invoked before notifications are sent\n+    //!                          to scan blocks after a specified location and\n+    //!                          time. This should return the hash of the last\n+    //!                          block scanned, and may be called more than once\n+    //!                          if new blocks were connected during the scan.\n+    //! @param[in] mempool_fn    callback invoked before notifications are sent\n+    //!                          with snapshot of mempool transactions\n+    //! @param[in] scan_locator  location of last block previously scanned.\n+    //!                          scan_fn will be only be called for blocks after\n+    //!                          this point. Can be null to scan from genesis.\n+    //! @param[in] scan_time     minimum block timestamp for beginning the scan\n+    //!                          scan_fn will only be called for blocks starting\n+    //!                          from this timestamp\n+    //! @param[out] tip          information about chain tip at the point where\n+    //!                          notifications will begin\n+    virtual std::unique_ptr<Handler> handleNotifications(std::shared_ptr<Notifications> notifications,",
    "path": "src/interfaces/chain.h",
    "position": 87,
    "original_position": 76,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "52d152f0bf2543fc6fbb80cdde7ae2249305662f",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422023756\r\n\r\n> I think it would be better to rename `handleNotifications`. IMO it does 3 different tasks:\r\n> \r\n> * trigger rescan\r\n> * sync with mempool\r\n> * register notification\r\n> \r\n> I'm fine with doing all of three in same functions rather than 3 chunks for each, but name could be something like `syncClient` ?\r\n> \r\n> Also you may be interested by rescan but not mempool-sync and therefore it may be made optional.\r\n\r\nI think it's important to stick with the convention used throughout `src/interfaces/` where functions that register for notifications and return `Handler` begin with `handle`. There are 20 of these functions currently, though only 2 in `chain.h`.\r\n\r\nThe main thing this function does, and only permanent thing it is intended to do is register a handler for notifications. `scan_fn` and `mempool_fn` are both optional arguments and are temporary. I want to rebase your https://github.com/bitcoin/bitcoin/compare/master...ariard:2019-08-rescan-index-refactor branch on top of this PR so the `scan_fn` callback will disappear and be replaced by normal blockConnected / blockDisconnected calls. And I want to update the  transactionAddedToMempool function to take a list of transactions instead of a single transaction so the mempool_fn can go away.",
    "created_at": "2020-05-08T15:55:55Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422223801",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422223801"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422223801"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422223801/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 270,
    "original_line": 270,
    "side": "RIGHT",
    "in_reply_to_id": 422023756
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422224798",
    "pull_request_review_id": 408338211,
    "id": 422224798,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIyNDc5OA==",
    "diff_hunk": "@@ -4071,16 +4010,69 @@ bool CWallet::UpgradeWallet(int version, bilingual_str& error, std::vector<bilin\n     return true;\n }\n \n-void CWallet::postInitProcess()\n+CWallet::ScanStatus CWallet::HandleNotifications(std::shared_ptr<CWallet> wallet, bool scan)\n {\n-    LOCK(cs_wallet);\n+    // Register with the validation interface. Skip requesting mempool transactions if wallet is empty.\n+    interfaces::Chain::ScanFn scan_fn;\n+    interfaces::Chain::MempoolFn mempool_fn;\n+    Optional<CBlockLocator> best_block_locator;\n+    // The way the 'time_first_key' is initialized is just a workaround for the gcc bug #47679 since version 4.6.0.\n+    Optional<int64_t> time_first_key = MakeOptional(false, int64_t());;\n+    ScanStatus scan_status = ScanStatus::SKIPPED;\n+    if (scan) {\n+        // Get best block locator to rescan if not going back and rescanning\n+        if (!gArgs.GetBoolArg(\"-rescan\", false)) {\n+            best_block_locator.emplace();\n+            WalletBatch(*wallet->database).ReadBestBlock(*best_block_locator);\n+        }\n \n+        // No need to read and scan block if block was created before\n+        // our wallet birthday (as adjusted for block time variability)",
    "path": "src/wallet/wallet.cpp",
    "position": 112,
    "original_position": 131,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "52d152f0bf2543fc6fbb80cdde7ae2249305662f",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422018373\r\n\r\n> Block time variability is unclear, you mean the absence of order guarantee between `nTime` and `nTimeFirstKey`?\r\n\r\nThis is not a new comment (just moved) but it is just referring to TIMESTAMP_WINDOW",
    "created_at": "2020-05-08T15:57:50Z",
    "updated_at": "2021-04-11T23:59:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422224798",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422224798"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r422224798"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422224798/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2818,
    "original_line": 2818,
    "side": "RIGHT",
    "in_reply_to_id": 422018373
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/737314436",
    "pull_request_review_id": 790428734,
    "id": 737314436,
    "node_id": "PRRC_kwDOABII584r8oaE",
    "diff_hunk": "@@ -30,6 +30,15 @@ race:validation_chainstatemanager_tests\n deadlock:libdb\n race:libzmq\n \n+# Disable spurious error about std::cout.\n+# data race /usr/lib/llvm-10/bin/../include/c++/v1/ios:522:12 in std::__1::ios_base::width() const\n+# Location is global 'std::__1::cout' of size 160 at 0x7f492785e270 (libc++.so.1+0x0000000c0290)\n+# https://travis-ci.org/github/bitcoin/bitcoin/jobs/695004018\n+#\n+# Uses of std::cout are guaranteed thread safe by the c++ standard\n+# https://stackoverflow.com/questions/50322790/thread-safety-and-piping-to-streams\n+race:std::__1::ios_base::width",
    "path": "test/sanitizer_suppressions/tsan",
    "position": 11,
    "original_position": 11,
    "commit_id": "2b898a0456d742911c1f74229c9fc64a0012ca42",
    "original_commit_id": "24dfff610ecf01338c9a9b7c1a28307c3fcfbc78",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can remove this after #23370 ",
    "created_at": "2021-10-27T10:09:50Z",
    "updated_at": "2021-10-27T10:09:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r737314436",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/737314436"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15719#discussion_r737314436"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15719"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/737314436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 40,
    "original_line": 40,
    "side": "RIGHT"
  }
]