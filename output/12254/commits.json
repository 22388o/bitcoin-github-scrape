[
  {
    "sha": "947133dec92cd25ec2b3358c09b8614ba6fb40d4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NDcxMzNkZWM5MmNkMjVlYzJiMzM1OGMwOWI4NjE0YmE2ZmI0MGQ0",
    "commit": {
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-01-23T23:59:36Z"
      },
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "message": "streams: Create VectorReader stream interface for vectors.\n\nThis is a read analogue for the existing CVectorWriter.",
      "tree": {
        "sha": "4810f825a87cf27f24708a76a5fc0273808451ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4810f825a87cf27f24708a76a5fc0273808451ba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/947133dec92cd25ec2b3358c09b8614ba6fb40d4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/947133dec92cd25ec2b3358c09b8614ba6fb40d4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/947133dec92cd25ec2b3358c09b8614ba6fb40d4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/947133dec92cd25ec2b3358c09b8614ba6fb40d4/comments",
    "author": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "021dce935af25adc17ae04a721d5f74a2ea1ca76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/021dce935af25adc17ae04a721d5f74a2ea1ca76",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/021dce935af25adc17ae04a721d5f74a2ea1ca76"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 74,
      "deletions": 0
    },
    "files": [
      {
        "sha": "32a70738155ae06cecb490136eb8fabd9926622f",
        "filename": "src/streams.h",
        "status": "modified",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/947133dec92cd25ec2b3358c09b8614ba6fb40d4/src/streams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/947133dec92cd25ec2b3358c09b8614ba6fb40d4/src/streams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/streams.h?ref=947133dec92cd25ec2b3358c09b8614ba6fb40d4",
        "patch": "@@ -139,6 +139,80 @@ class CVectorWriter\n     size_t nPos;\n };\n \n+/** Minimal stream for reading from an existing vector by reference\n+ */\n+class VectorReader\n+{\n+private:\n+    const int m_type;\n+    const int m_version;\n+    const std::vector<unsigned char>& m_data;\n+    size_t m_pos = 0;\n+\n+public:\n+\n+    /*\n+     * @param[in]  type Serialization Type\n+     * @param[in]  version Serialization Version (including any flags)\n+     * @param[in]  data Referenced byte vector to overwrite/append\n+     * @param[in]  pos Starting position. Vector index where reads should start.\n+     */\n+    VectorReader(int type, int version, const std::vector<unsigned char>& data, size_t pos)\n+        : m_type(type), m_version(version), m_data(data)\n+    {\n+        seek(pos);\n+    }\n+\n+    /*\n+     * (other params same as above)\n+     * @param[in]  args  A list of items to deserialize starting at pos.\n+     */\n+    template <typename... Args>\n+    VectorReader(int type, int version, const std::vector<unsigned char>& data, size_t pos,\n+                  Args&&... args)\n+        : VectorReader(type, version, data, pos)\n+    {\n+        ::UnserializeMany(*this, std::forward<Args>(args)...);\n+    }\n+\n+    template<typename T>\n+    VectorReader& operator>>(T& obj)\n+    {\n+        // Unserialize from this stream\n+        ::Unserialize(*this, obj);\n+        return (*this);\n+    }\n+\n+    int GetVersion() const { return m_version; }\n+    int GetType() const { return m_type; }\n+\n+    size_t size() const { return m_data.size() - m_pos; }\n+    bool empty() const { return m_data.size() == m_pos; }\n+\n+    void read(char* dst, size_t n)\n+    {\n+        if (n == 0) {\n+            return;\n+        }\n+\n+        // Read from the beginning of the buffer\n+        size_t pos_next = m_pos + n;\n+        if (pos_next > m_data.size()) {\n+            throw std::ios_base::failure(\"VectorReader::read(): end of data\");\n+        }\n+        memcpy(dst, m_data.data() + m_pos, n);\n+        m_pos = pos_next;\n+    }\n+\n+    void seek(size_t n)\n+    {\n+        m_pos += n;\n+        if (m_pos > m_data.size()) {\n+            throw std::ios_base::failure(\"VectorReader::seek(): end of data\");\n+        }\n+    }\n+};\n+\n /** Double ended buffer combining vector and stream-like interfaces.\n  *\n  * >> and << read and write unformatted data using the above serialization templates."
      }
    ]
  },
  {
    "sha": "87f2d9ee43a9220076b1959d1ca65245d9591be9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4N2YyZDllZTQzYTkyMjAwNzZiMTk1OWQxY2E2NTI0NWQ5NTkxYmU5",
    "commit": {
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-04-12T03:51:44Z"
      },
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "message": "streams: Unit test for VectorReader class.",
      "tree": {
        "sha": "ac31329040276b63058ffcca5975afa0893c4883",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac31329040276b63058ffcca5975afa0893c4883"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87f2d9ee43a9220076b1959d1ca65245d9591be9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87f2d9ee43a9220076b1959d1ca65245d9591be9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/87f2d9ee43a9220076b1959d1ca65245d9591be9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87f2d9ee43a9220076b1959d1ca65245d9591be9/comments",
    "author": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "947133dec92cd25ec2b3358c09b8614ba6fb40d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/947133dec92cd25ec2b3358c09b8614ba6fb40d4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/947133dec92cd25ec2b3358c09b8614ba6fb40d4"
      }
    ],
    "stats": {
      "total": 45,
      "additions": 45,
      "deletions": 0
    },
    "files": [
      {
        "sha": "592ebcbd0a0d8ff89cb4778baf24b74846aa1177",
        "filename": "src/test/streams_tests.cpp",
        "status": "modified",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87f2d9ee43a9220076b1959d1ca65245d9591be9/src/test/streams_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87f2d9ee43a9220076b1959d1ca65245d9591be9/src/test/streams_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/streams_tests.cpp?ref=87f2d9ee43a9220076b1959d1ca65245d9591be9",
        "patch": "@@ -68,6 +68,51 @@ BOOST_AUTO_TEST_CASE(streams_vector_writer)\n     vch.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(streams_vector_reader)\n+{\n+    std::vector<unsigned char> vch = {1, 255, 3, 4, 5, 6};\n+\n+    VectorReader reader(SER_NETWORK, INIT_PROTO_VERSION, vch, 0);\n+    BOOST_CHECK_EQUAL(reader.size(), 6);\n+    BOOST_CHECK(!reader.empty());\n+\n+    // Read a single byte as an unsigned char.\n+    unsigned char a;\n+    reader >> a;\n+    BOOST_CHECK_EQUAL(a, 1);\n+    BOOST_CHECK_EQUAL(reader.size(), 5);\n+    BOOST_CHECK(!reader.empty());\n+\n+    // Read a single byte as a signed char.\n+    signed char b;\n+    reader >> b;\n+    BOOST_CHECK_EQUAL(b, -1);\n+    BOOST_CHECK_EQUAL(reader.size(), 4);\n+    BOOST_CHECK(!reader.empty());\n+\n+    // Read a 4 bytes as an unsigned int.\n+    unsigned int c;\n+    reader >> c;\n+    BOOST_CHECK_EQUAL(c, 100992003); // 3,4,5,6 in little-endian base-256\n+    BOOST_CHECK_EQUAL(reader.size(), 0);\n+    BOOST_CHECK(reader.empty());\n+\n+    // Reading after end of byte vector throws an error.\n+    signed int d;\n+    BOOST_CHECK_THROW(reader >> d, std::ios_base::failure);\n+\n+    // Read a 4 bytes as a signed int from the beginning of the buffer.\n+    reader.seek(-6);\n+    reader >> d;\n+    BOOST_CHECK_EQUAL(d, 67370753); // 1,255,3,4 in little-endian base-256\n+    BOOST_CHECK_EQUAL(reader.size(), 2);\n+    BOOST_CHECK(!reader.empty());\n+\n+    // Reading after end of byte vector throws an error even if the reader is\n+    // not totally empty.\n+    BOOST_CHECK_THROW(reader >> d, std::ios_base::failure);\n+}\n+\n BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n {\n     std::vector<char> in;"
      }
    ]
  },
  {
    "sha": "fe943f99bf0a2bbb12e30bc4803c0337e3c95b93",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZTk0M2Y5OWJmMGEyYmJiMTJlMzBiYzQ4MDNjMDMzN2UzYzk1Yjkz",
    "commit": {
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-01-24T00:12:51Z"
      },
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "message": "streams: Implement BitStreamReader/Writer classes.\n\nGolomb-Rice coding, as specified in BIP 158, involves operations on\nindividual bits. These classes will be used to implement the\nencoding/decoding operations.",
      "tree": {
        "sha": "2e69c03f96a7199e6e1773b4cab9c3941192c1fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2e69c03f96a7199e6e1773b4cab9c3941192c1fb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe943f99bf0a2bbb12e30bc4803c0337e3c95b93",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe943f99bf0a2bbb12e30bc4803c0337e3c95b93",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fe943f99bf0a2bbb12e30bc4803c0337e3c95b93",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe943f99bf0a2bbb12e30bc4803c0337e3c95b93/comments",
    "author": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "87f2d9ee43a9220076b1959d1ca65245d9591be9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87f2d9ee43a9220076b1959d1ca65245d9591be9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/87f2d9ee43a9220076b1959d1ca65245d9591be9"
      }
    ],
    "stats": {
      "total": 93,
      "additions": 93,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d4a309be3cd9e899657ebdbd71bd7e77303eed98",
        "filename": "src/streams.h",
        "status": "modified",
        "additions": 93,
        "deletions": 0,
        "changes": 93,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe943f99bf0a2bbb12e30bc4803c0337e3c95b93/src/streams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe943f99bf0a2bbb12e30bc4803c0337e3c95b93/src/streams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/streams.h?ref=fe943f99bf0a2bbb12e30bc4803c0337e3c95b93",
        "patch": "@@ -510,12 +510,105 @@ class CDataStream\n     }\n };\n \n+template <typename IStream>\n+class BitStreamReader\n+{\n+private:\n+    IStream& m_istream;\n+\n+    /// Buffered byte read in from the input stream. A new byte is read into the\n+    /// buffer when m_offset reaches 8.\n+    uint8_t m_buffer{0};\n+\n+    /// Number of high order bits in m_buffer already returned by previous\n+    /// Read() calls. The next bit to be returned is at this offset from the\n+    /// most significant bit position.\n+    int m_offset{8};\n+\n+public:\n+    explicit BitStreamReader(IStream& istream) : m_istream(istream) {}\n+\n+    /** Read the specified number of bits from the stream. The data is returned\n+     * in the nbits least signficant bits of a 64-bit uint.\n+     */\n+    uint64_t Read(int nbits) {\n+        if (nbits < 0 || nbits > 64) {\n+            throw std::out_of_range(\"nbits must be between 0 and 64\");\n+        }\n+\n+        uint64_t data = 0;\n+        while (nbits > 0) {\n+            if (m_offset == 8) {\n+                m_istream >> m_buffer;\n+                m_offset = 0;\n+            }\n+\n+            int bits = std::min(8 - m_offset, nbits);\n+            data <<= bits;\n+            data |= static_cast<uint8_t>(m_buffer << m_offset) >> (8 - bits);\n+            m_offset += bits;\n+            nbits -= bits;\n+        }\n+        return data;\n+    }\n+};\n+\n+template <typename OStream>\n+class BitStreamWriter\n+{\n+private:\n+    OStream& m_ostream;\n \n+    /// Buffered byte waiting to be written to the output stream. The byte is\n+    /// written buffer when m_offset reaches 8 or Flush() is called.\n+    uint8_t m_buffer{0};\n \n+    /// Number of high order bits in m_buffer already written by previous\n+    /// Write() calls and not yet flushed to the stream. The next bit to be\n+    /// written to is at this offset from the most significant bit position.\n+    int m_offset{0};\n \n+public:\n+    explicit BitStreamWriter(OStream& ostream) : m_ostream(ostream) {}\n \n+    ~BitStreamWriter()\n+    {\n+        Flush();\n+    }\n \n+    /** Write the nbits least significant bits of a 64-bit int to the output\n+     * stream. Data is buffered until it completes an octet.\n+     */\n+    void Write(uint64_t data, int nbits) {\n+        if (nbits < 0 || nbits > 64) {\n+            throw std::out_of_range(\"nbits must be between 0 and 64\");\n+        }\n+\n+        while (nbits > 0) {\n+            int bits = std::min(8 - m_offset, nbits);\n+            m_buffer |= (data << (64 - nbits)) >> (64 - 8 + m_offset);\n+            m_offset += bits;\n+            nbits -= bits;\n \n+            if (m_offset == 8) {\n+                Flush();\n+            }\n+        }\n+    }\n+\n+    /** Flush any unwritten bits to the output stream, padding with 0's to the\n+     * next byte boundary.\n+     */\n+    void Flush() {\n+        if (m_offset == 0) {\n+            return;\n+        }\n+\n+        m_ostream << m_buffer;\n+        m_buffer = 0;\n+        m_offset = 0;\n+    }\n+};\n \n \n "
      }
    ]
  },
  {
    "sha": "9b622dc72279b027c59d6541cddff53800fc689b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YjYyMmRjNzIyNzliMDI3YzU5ZDY1NDFjZGRmZjUzODAwZmM2ODli",
    "commit": {
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-04-17T09:19:36Z"
      },
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "message": "streams: Unit tests for BitStreamReader and BitStreamWriter.",
      "tree": {
        "sha": "71dcd4e1a76ff09ccb19c5461453ca4654bc1ca0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/71dcd4e1a76ff09ccb19c5461453ca4654bc1ca0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b622dc72279b027c59d6541cddff53800fc689b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b622dc72279b027c59d6541cddff53800fc689b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9b622dc72279b027c59d6541cddff53800fc689b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b622dc72279b027c59d6541cddff53800fc689b/comments",
    "author": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fe943f99bf0a2bbb12e30bc4803c0337e3c95b93",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe943f99bf0a2bbb12e30bc4803c0337e3c95b93",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fe943f99bf0a2bbb12e30bc4803c0337e3c95b93"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 35,
      "deletions": 0
    },
    "files": [
      {
        "sha": "26cf74830dac28506ad1e65a9cc6ecce5b9bbeb0",
        "filename": "src/test/streams_tests.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b622dc72279b027c59d6541cddff53800fc689b/src/test/streams_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b622dc72279b027c59d6541cddff53800fc689b/src/test/streams_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/streams_tests.cpp?ref=9b622dc72279b027c59d6541cddff53800fc689b",
        "patch": "@@ -113,6 +113,41 @@ BOOST_AUTO_TEST_CASE(streams_vector_reader)\n     BOOST_CHECK_THROW(reader >> d, std::ios_base::failure);\n }\n \n+BOOST_AUTO_TEST_CASE(bitstream_reader_writer)\n+{\n+    CDataStream data(SER_NETWORK, INIT_PROTO_VERSION);\n+\n+    BitStreamWriter<CDataStream> bit_writer(data);\n+    bit_writer.Write(0, 1);\n+    bit_writer.Write(2, 2);\n+    bit_writer.Write(6, 3);\n+    bit_writer.Write(11, 4);\n+    bit_writer.Write(1, 5);\n+    bit_writer.Write(32, 6);\n+    bit_writer.Write(7, 7);\n+    bit_writer.Write(30497, 16);\n+    bit_writer.Flush();\n+\n+    CDataStream data_copy(data);\n+    uint32_t serialized_int1;\n+    data >> serialized_int1;\n+    BOOST_CHECK_EQUAL(serialized_int1, (uint32_t)0x7700C35A); // NOTE: Serialized as LE\n+    uint16_t serialized_int2;\n+    data >> serialized_int2;\n+    BOOST_CHECK_EQUAL(serialized_int2, (uint16_t)0x1072); // NOTE: Serialized as LE\n+\n+    BitStreamReader<CDataStream> bit_reader(data_copy);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(1), 0);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(2), 2);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(3), 6);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(4), 11);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(5), 1);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(6), 32);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(7), 7);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(16), 30497);\n+    BOOST_CHECK_THROW(bit_reader.Read(8), std::ios_base::failure);\n+}\n+\n BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n {\n     std::vector<char> in;"
      }
    ]
  },
  {
    "sha": "c454f0ac63c6028f54c7eb51683b3ccdb475b19b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNDU0ZjBhYzYzYzYwMjhmNTRjN2ViNTE2ODNiM2NjZGI0NzViMTli",
    "commit": {
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-01-24T00:10:08Z"
      },
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "message": "blockfilter: Declare GCSFilter class for BIP 158 impl.",
      "tree": {
        "sha": "e856c564f6edb178f14bc6111fdbc87034ff8eea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e856c564f6edb178f14bc6111fdbc87034ff8eea"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c454f0ac63c6028f54c7eb51683b3ccdb475b19b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c454f0ac63c6028f54c7eb51683b3ccdb475b19b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c454f0ac63c6028f54c7eb51683b3ccdb475b19b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c454f0ac63c6028f54c7eb51683b3ccdb475b19b/comments",
    "author": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9b622dc72279b027c59d6541cddff53800fc689b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b622dc72279b027c59d6541cddff53800fc689b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9b622dc72279b027c59d6541cddff53800fc689b"
      }
    ],
    "stats": {
      "total": 67,
      "additions": 67,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d8f8e57b4d9b71f26e27ca3e06ba2d1ac468f5d4",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c454f0ac63c6028f54c7eb51683b3ccdb475b19b/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c454f0ac63c6028f54c7eb51683b3ccdb475b19b/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=c454f0ac63c6028f54c7eb51683b3ccdb475b19b",
        "patch": "@@ -96,6 +96,7 @@ BITCOIN_CORE_H = \\\n   bech32.h \\\n   bloom.h \\\n   blockencodings.h \\\n+  blockfilter.h \\\n   chain.h \\\n   chainparams.h \\\n   chainparamsbase.h \\"
      },
      {
        "sha": "c0bd69b332625e5a9fea6142daa9682397f9380f",
        "filename": "src/blockfilter.h",
        "status": "added",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c454f0ac63c6028f54c7eb51683b3ccdb475b19b/src/blockfilter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c454f0ac63c6028f54c7eb51683b3ccdb475b19b/src/blockfilter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.h?ref=c454f0ac63c6028f54c7eb51683b3ccdb475b19b",
        "patch": "@@ -0,0 +1,66 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOCKFILTER_H\n+#define BITCOIN_BLOCKFILTER_H\n+\n+#include <set>\n+#include <stdint.h>\n+#include <vector>\n+\n+#include <serialize.h>\n+#include <uint256.h>\n+\n+/**\n+ * This implements a Golomb-coded set as defined in BIP 158. It is a\n+ * compact, probabilistic data structure for testing set membership.\n+ */\n+class GCSFilter\n+{\n+public:\n+    typedef std::vector<unsigned char> Element;\n+    typedef std::set<Element> ElementSet;\n+\n+private:\n+    uint64_t m_siphash_k0;\n+    uint64_t m_siphash_k1;\n+    uint8_t m_P;  //!< Golomb-Rice coding parameter\n+    uint32_t m_M;  //!< Inverse false positive rate\n+    uint32_t m_N;  //!< Number of elements in the filter\n+    uint64_t m_F;  //!< Range of element hashes, F = N * M\n+    std::vector<unsigned char> m_encoded;\n+\n+public:\n+\n+    /** Constructs an empty filter. */\n+    GCSFilter(uint64_t siphash_k0 = 0, uint64_t siphash_k1 = 0, uint8_t P = 0, uint32_t M = 0);\n+\n+    /** Reconstructs an already-created filter from an encoding. */\n+    GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P, uint32_t M,\n+              std::vector<unsigned char> encoded_filter);\n+\n+    /** Builds a new filter from the params and set of elements. */\n+    GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P, uint32_t M,\n+              const ElementSet& elements);\n+\n+    uint8_t GetP() const { return m_P; }\n+    uint32_t GetN() const { return m_N; }\n+    uint32_t GetM() const { return m_M; }\n+    const std::vector<unsigned char>& GetEncoded() const { return m_encoded; }\n+\n+    /**\n+     * Checks if the element may be in the set. False positives are possible\n+     * with probability 1/M.\n+     */\n+    bool Match(const Element& element) const;\n+\n+    /**\n+     * Checks if any of the given elements may be in the set. False positives\n+     * are possible with probability 1/M per element checked. This is more\n+     * efficient that checking Match on multiple elements separately.\n+     */\n+    bool MatchAny(const ElementSet& elements) const;\n+};\n+\n+#endif // BITCOIN_BLOCKFILTER_H"
      }
    ]
  },
  {
    "sha": "cf70b550054eed36f194eaa13f4a9cb31e32df38",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZjcwYjU1MDA1NGVlZDM2ZjE5NGVhYTEzZjRhOWNiMzFlMzJkZjM4",
    "commit": {
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-01-24T00:25:21Z"
      },
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "message": "blockfilter: Implement GCSFilter constructors.",
      "tree": {
        "sha": "90ce9019d8e1b45bca1bae137aaf3ed70b9f58b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/90ce9019d8e1b45bca1bae137aaf3ed70b9f58b7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf70b550054eed36f194eaa13f4a9cb31e32df38",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf70b550054eed36f194eaa13f4a9cb31e32df38",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cf70b550054eed36f194eaa13f4a9cb31e32df38",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf70b550054eed36f194eaa13f4a9cb31e32df38/comments",
    "author": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c454f0ac63c6028f54c7eb51683b3ccdb475b19b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c454f0ac63c6028f54c7eb51683b3ccdb475b19b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c454f0ac63c6028f54c7eb51683b3ccdb475b19b"
      }
    ],
    "stats": {
      "total": 157,
      "additions": 157,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3701ee8f3c7c5cc2c89775c8c0f58635e9141a65",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf70b550054eed36f194eaa13f4a9cb31e32df38/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf70b550054eed36f194eaa13f4a9cb31e32df38/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=cf70b550054eed36f194eaa13f4a9cb31e32df38",
        "patch": "@@ -220,6 +220,7 @@ libbitcoin_server_a_SOURCES = \\\n   addrman.cpp \\\n   bloom.cpp \\\n   blockencodings.cpp \\\n+  blockfilter.cpp \\\n   chain.cpp \\\n   checkpoints.cpp \\\n   consensus/tx_verify.cpp \\"
      },
      {
        "sha": "e4c95ccfbd135f2d6cc2a97e8838099cf176ad4e",
        "filename": "src/blockfilter.cpp",
        "status": "added",
        "additions": 151,
        "deletions": 0,
        "changes": 151,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf70b550054eed36f194eaa13f4a9cb31e32df38/src/blockfilter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf70b550054eed36f194eaa13f4a9cb31e32df38/src/blockfilter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.cpp?ref=cf70b550054eed36f194eaa13f4a9cb31e32df38",
        "patch": "@@ -0,0 +1,151 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+static constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+static constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t P, uint64_t x)\n+{\n+    // Write quotient as unary-encoded: q 1's followed by one 0.\n+    uint64_t q = x >> P;\n+    while (q > 0) {\n+        int nbits = q <= 64 ? static_cast<int>(q) : 64;\n+        bitwriter.Write(~0ULL, nbits);\n+        q -= nbits;\n+    }\n+    bitwriter.Write(0, 1);\n+\n+    // Write the remainder in P bits. Since the remainder is just the bottom\n+    // P bits of x, there is no need to mask first.\n+    bitwriter.Write(x, P);\n+}\n+\n+template <typename IStream>\n+static uint64_t GolombRiceDecode(BitStreamReader<IStream>& bitreader, uint8_t P)\n+{\n+    // Read unary-encoded quotient: q 1's followed by one 0.\n+    uint64_t q = 0;\n+    while (bitreader.Read(1) == 1) {\n+        ++q;\n+    }\n+\n+    uint64_t r = bitreader.Read(P);\n+\n+    return (q << P) + r;\n+}\n+\n+// Map a value x that is uniformly distributed in the range [0, 2^64) to a\n+// value uniformly distributed in [0, n) by returning the upper 64 bits of\n+// x * n.\n+//\n+// See: https://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/\n+static uint64_t MapIntoRange(uint64_t x, uint64_t n)\n+{\n+    // To perform the calculation on 64-bit numbers without losing the\n+    // result to overflow, split the numbers into the most significant and\n+    // least significant 32 bits and perform multiplication piece-wise.\n+    //\n+    // See: https://stackoverflow.com/a/26855440\n+    uint64_t x_hi = x >> 32;\n+    uint64_t x_lo = x & 0xFFFFFFFF;\n+    uint64_t n_hi = n >> 32;\n+    uint64_t n_lo = n & 0xFFFFFFFF;\n+\n+    uint64_t ac = x_hi * n_hi;\n+    uint64_t ad = x_hi * n_lo;\n+    uint64_t bc = x_lo * n_hi;\n+    uint64_t bd = x_lo * n_lo;\n+\n+    uint64_t mid34 = (bd >> 32) + (bc & 0xFFFFFFFF) + (ad & 0xFFFFFFFF);\n+    uint64_t upper64 = ac + (bc >> 32) + (ad >> 32) + (mid34 >> 32);\n+    return upper64;\n+}\n+\n+uint64_t GCSFilter::HashToRange(const Element& element) const\n+{\n+    uint64_t hash = CSipHasher(m_siphash_k0, m_siphash_k1)\n+        .Write(element.data(), element.size())\n+        .Finalize();\n+    return MapIntoRange(hash, m_F);\n+}\n+\n+std::vector<uint64_t> GCSFilter::BuildHashedSet(const ElementSet& elements) const\n+{\n+    std::vector<uint64_t> hashed_elements;\n+    hashed_elements.reserve(elements.size());\n+    for (const Element& element : elements) {\n+        hashed_elements.push_back(HashToRange(element));\n+    }\n+    std::sort(hashed_elements.begin(), hashed_elements.end());\n+    return hashed_elements;\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P, uint32_t M)\n+    : m_siphash_k0(siphash_k0), m_siphash_k1(siphash_k1), m_P(P), m_M(M), m_N(0), m_F(0)\n+{}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P, uint32_t M,\n+                     std::vector<unsigned char> encoded_filter)\n+    : GCSFilter(siphash_k0, siphash_k1, P, M)\n+{\n+    m_encoded = std::move(encoded_filter);\n+\n+    VectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    uint64_t N = ReadCompactSize(stream);\n+    m_N = static_cast<uint32_t>(N);\n+    if (m_N != N) {\n+        throw std::ios_base::failure(\"N must be <2^32\");\n+    }\n+    m_F = static_cast<uint64_t>(m_N) * static_cast<uint64_t>(m_M);\n+\n+    // Verify that the encoded filter contains exactly N elements. If it has too much or too little\n+    // data, a std::ios_base::failure exception will be raised.\n+    BitStreamReader<VectorReader> bitreader(stream);\n+    for (uint64_t i = 0; i < m_N; ++i) {\n+        GolombRiceDecode(bitreader, m_P);\n+    }\n+    if (!stream.empty()) {\n+        throw std::ios_base::failure(\"encoded_filter contains excess data\");\n+    }\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P, uint32_t M,\n+                     const ElementSet& elements)\n+    : GCSFilter(siphash_k0, siphash_k1, P, M)\n+{\n+    size_t N = elements.size();\n+    m_N = static_cast<uint32_t>(N);\n+    if (m_N != N) {\n+        throw std::invalid_argument(\"N must be <2^32\");\n+    }\n+    m_F = static_cast<uint64_t>(m_N) * static_cast<uint64_t>(m_M);\n+\n+    CVectorWriter stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    WriteCompactSize(stream, m_N);\n+\n+    if (elements.empty()) {\n+        return;\n+    }\n+\n+    BitStreamWriter<CVectorWriter> bitwriter(stream);\n+\n+    uint64_t last_value = 0;\n+    for (uint64_t value : BuildHashedSet(elements)) {\n+        uint64_t delta = value - last_value;\n+        GolombRiceEncode(bitwriter, m_P, delta);\n+        last_value = value;\n+    }\n+\n+    bitwriter.Flush();\n+}"
      },
      {
        "sha": "7809e6875ab7e5d0a8a3532bc3e7b0b9f34d76c6",
        "filename": "src/blockfilter.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf70b550054eed36f194eaa13f4a9cb31e32df38/src/blockfilter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf70b550054eed36f194eaa13f4a9cb31e32df38/src/blockfilter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.h?ref=cf70b550054eed36f194eaa13f4a9cb31e32df38",
        "patch": "@@ -31,6 +31,11 @@ class GCSFilter\n     uint64_t m_F;  //!< Range of element hashes, F = N * M\n     std::vector<unsigned char> m_encoded;\n \n+    /** Hash a data element to an integer in the range [0, N * M). */\n+    uint64_t HashToRange(const Element& element) const;\n+\n+    std::vector<uint64_t> BuildHashedSet(const ElementSet& elements) const;\n+\n public:\n \n     /** Constructs an empty filter. */"
      }
    ]
  },
  {
    "sha": "558c536e35a25594881693e6ff01d275c88d7af1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NThjNTM2ZTM1YTI1NTk0ODgxNjkzZTZmZjAxZDI3NWM4OGQ3YWYx",
    "commit": {
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-01-24T00:33:26Z"
      },
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "message": "blockfilter: Implement GCSFilter Match methods.",
      "tree": {
        "sha": "37e7fd3ee010219eee6f2206efd4c58843b5ed0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/37e7fd3ee010219eee6f2206efd4c58843b5ed0d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/558c536e35a25594881693e6ff01d275c88d7af1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/558c536e35a25594881693e6ff01d275c88d7af1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/558c536e35a25594881693e6ff01d275c88d7af1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/558c536e35a25594881693e6ff01d275c88d7af1/comments",
    "author": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cf70b550054eed36f194eaa13f4a9cb31e32df38",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf70b550054eed36f194eaa13f4a9cb31e32df38",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cf70b550054eed36f194eaa13f4a9cb31e32df38"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 47,
      "deletions": 0
    },
    "files": [
      {
        "sha": "52d8f8c2965214ac04ed83fe79fc1a2fc253ffb6",
        "filename": "src/blockfilter.cpp",
        "status": "modified",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/558c536e35a25594881693e6ff01d275c88d7af1/src/blockfilter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/558c536e35a25594881693e6ff01d275c88d7af1/src/blockfilter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.cpp?ref=558c536e35a25594881693e6ff01d275c88d7af1",
        "patch": "@@ -149,3 +149,47 @@ GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P, uint32\n \n     bitwriter.Flush();\n }\n+\n+bool GCSFilter::MatchInternal(const uint64_t* element_hashes, size_t size) const\n+{\n+    VectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    // Seek forward by size of N\n+    uint64_t N = ReadCompactSize(stream);\n+    assert(N == m_N);\n+\n+    BitStreamReader<VectorReader> bitreader(stream);\n+\n+    uint64_t value = 0;\n+    size_t hashes_index = 0;\n+    for (uint32_t i = 0; i < m_N; ++i) {\n+        uint64_t delta = GolombRiceDecode(bitreader, m_P);\n+        value += delta;\n+\n+        while (true) {\n+            if (hashes_index == size) {\n+                return false;\n+            } else if (element_hashes[hashes_index] == value) {\n+                return true;\n+            } else if (element_hashes[hashes_index] > value) {\n+                break;\n+            }\n+\n+            hashes_index++;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+bool GCSFilter::Match(const Element& element) const\n+{\n+    uint64_t query = HashToRange(element);\n+    return MatchInternal(&query, 1);\n+}\n+\n+bool GCSFilter::MatchAny(const ElementSet& elements) const\n+{\n+    const std::vector<uint64_t> queries = BuildHashedSet(elements);\n+    return MatchInternal(queries.data(), queries.size());\n+}"
      },
      {
        "sha": "d45d31046f9bfeda03c5d90b9d372abcfb2a445e",
        "filename": "src/blockfilter.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/558c536e35a25594881693e6ff01d275c88d7af1/src/blockfilter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/558c536e35a25594881693e6ff01d275c88d7af1/src/blockfilter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.h?ref=558c536e35a25594881693e6ff01d275c88d7af1",
        "patch": "@@ -36,6 +36,9 @@ class GCSFilter\n \n     std::vector<uint64_t> BuildHashedSet(const ElementSet& elements) const;\n \n+    /** Helper method used to implement Match and MatchAny */\n+    bool MatchInternal(const uint64_t* sorted_element_hashes, size_t size) const;\n+\n public:\n \n     /** Constructs an empty filter. */"
      }
    ]
  },
  {
    "sha": "53e7874e079f9ddfe8b176f11d46e6b59c7283d5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1M2U3ODc0ZTA3OWY5ZGRmZThiMTc2ZjExZDQ2ZTZiNTljNzI4M2Q1",
    "commit": {
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-01-24T01:13:04Z"
      },
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "message": "blockfilter: Simple test for GCSFilter construction and Match.",
      "tree": {
        "sha": "a27a83b09fac2b81380dc68d3b33fcc4a423eec8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a27a83b09fac2b81380dc68d3b33fcc4a423eec8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53e7874e079f9ddfe8b176f11d46e6b59c7283d5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53e7874e079f9ddfe8b176f11d46e6b59c7283d5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/53e7874e079f9ddfe8b176f11d46e6b59c7283d5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53e7874e079f9ddfe8b176f11d46e6b59c7283d5/comments",
    "author": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "558c536e35a25594881693e6ff01d275c88d7af1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/558c536e35a25594881693e6ff01d275c88d7af1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/558c536e35a25594881693e6ff01d275c88d7af1"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 35,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1e318eed021b444f9e15d3054d36cb92b4aaae50",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53e7874e079f9ddfe8b176f11d46e6b59c7283d5/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53e7874e079f9ddfe8b176f11d46e6b59c7283d5/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=53e7874e079f9ddfe8b176f11d46e6b59c7283d5",
        "patch": "@@ -39,6 +39,7 @@ BITCOIN_TESTS =\\\n   test/bip32_tests.cpp \\\n   test/blockchain_tests.cpp \\\n   test/blockencodings_tests.cpp \\\n+  test/blockfilter_tests.cpp \\\n   test/bloom_tests.cpp \\\n   test/bswap_tests.cpp \\\n   test/checkqueue_tests.cpp \\"
      },
      {
        "sha": "339a7fcfebac1b50f2ea7a4f285a622b8025da89",
        "filename": "src/test/blockfilter_tests.cpp",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53e7874e079f9ddfe8b176f11d46e6b59c7283d5/src/test/blockfilter_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53e7874e079f9ddfe8b176f11d46e6b59c7283d5/src/test/blockfilter_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/blockfilter_tests.cpp?ref=53e7874e079f9ddfe8b176f11d46e6b59c7283d5",
        "patch": "@@ -0,0 +1,34 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(blockfilter_tests)\n+\n+BOOST_AUTO_TEST_CASE(gcsfilter_test)\n+{\n+    GCSFilter::ElementSet included_elements, excluded_elements;\n+    for (int i = 0; i < 100; ++i) {\n+        GCSFilter::Element element1(32);\n+        element1[0] = i;\n+        included_elements.insert(std::move(element1));\n+\n+        GCSFilter::Element element2(32);\n+        element2[1] = i;\n+        excluded_elements.insert(std::move(element2));\n+    }\n+\n+    GCSFilter filter(0, 0, 10, 1 << 10, included_elements);\n+    for (const auto& element : included_elements) {\n+        BOOST_CHECK(filter.Match(element));\n+\n+        auto insertion = excluded_elements.insert(element);\n+        BOOST_CHECK(filter.MatchAny(excluded_elements));\n+        excluded_elements.erase(insertion.first);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "c1855f6052aca806fdb51be01b30dfeee8b55f40",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMTg1NWY2MDUyYWNhODA2ZmRiNTFiZTAxYjMwZGZlZWU4YjU1ZjQw",
    "commit": {
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-01-24T01:25:30Z"
      },
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "message": "blockfilter: Construction of basic block filters.",
      "tree": {
        "sha": "7bfbd95109be83236777956b9465727eba5cd3da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7bfbd95109be83236777956b9465727eba5cd3da"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1855f6052aca806fdb51be01b30dfeee8b55f40",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1855f6052aca806fdb51be01b30dfeee8b55f40",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c1855f6052aca806fdb51be01b30dfeee8b55f40",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1855f6052aca806fdb51be01b30dfeee8b55f40/comments",
    "author": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "53e7874e079f9ddfe8b176f11d46e6b59c7283d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53e7874e079f9ddfe8b176f11d46e6b59c7283d5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/53e7874e079f9ddfe8b176f11d46e6b59c7283d5"
      }
    ],
    "stats": {
      "total": 129,
      "additions": 129,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1119b549015bfabefd90f2327ad225615f7bf5ee",
        "filename": "src/blockfilter.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1855f6052aca806fdb51be01b30dfeee8b55f40/src/blockfilter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1855f6052aca806fdb51be01b30dfeee8b55f40/src/blockfilter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.cpp?ref=c1855f6052aca806fdb51be01b30dfeee8b55f40",
        "patch": "@@ -4,6 +4,8 @@\n \n #include <blockfilter.h>\n #include <hash.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n #include <streams.h>\n \n /// SerType used to serialize parameters in GCS filter encoding.\n@@ -193,3 +195,41 @@ bool GCSFilter::MatchAny(const ElementSet& elements) const\n     const std::vector<uint64_t> queries = BuildHashedSet(elements);\n     return MatchInternal(queries.data(), queries.size());\n }\n+\n+static GCSFilter::ElementSet BasicFilterElements(const CBlock& block,\n+                                                 const CBlockUndo& block_undo)\n+{\n+    GCSFilter::ElementSet elements;\n+\n+    for (const CTransactionRef& tx : block.vtx) {\n+        for (const CTxOut& txout : tx->vout) {\n+            const CScript& script = txout.scriptPubKey;\n+            if (script[0] == OP_RETURN) continue;\n+            elements.emplace(script.begin(), script.end());\n+        }\n+    }\n+\n+    for (const CTxUndo& tx_undo : block_undo.vtxundo) {\n+        for (const Coin& prevout : tx_undo.vprevout) {\n+            const CScript& script = prevout.out.scriptPubKey;\n+            elements.emplace(script.begin(), script.end());\n+        }\n+    }\n+\n+    return elements;\n+}\n+\n+BlockFilter::BlockFilter(BlockFilterType filter_type, const CBlock& block, const CBlockUndo& block_undo)\n+    : m_filter_type(filter_type), m_block_hash(block.GetHash())\n+{\n+    switch (m_filter_type) {\n+    case BlockFilterType::BASIC:\n+        m_filter = GCSFilter(m_block_hash.GetUint64(0), m_block_hash.GetUint64(1),\n+                             BASIC_FILTER_P, BASIC_FILTER_M,\n+                             BasicFilterElements(block, block_undo));\n+        break;\n+\n+    default:\n+        throw std::invalid_argument(\"unknown filter_type\");\n+    }\n+}"
      },
      {
        "sha": "afb8d7a7b7871224d7481a8aab29e1596f768e6c",
        "filename": "src/blockfilter.h",
        "status": "modified",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1855f6052aca806fdb51be01b30dfeee8b55f40/src/blockfilter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1855f6052aca806fdb51be01b30dfeee8b55f40/src/blockfilter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.h?ref=c1855f6052aca806fdb51be01b30dfeee8b55f40",
        "patch": "@@ -9,8 +9,10 @@\n #include <stdint.h>\n #include <vector>\n \n+#include <primitives/block.h>\n #include <serialize.h>\n #include <uint256.h>\n+#include <undo.h>\n \n /**\n  * This implements a Golomb-coded set as defined in BIP 158. It is a\n@@ -71,4 +73,37 @@ class GCSFilter\n     bool MatchAny(const ElementSet& elements) const;\n };\n \n+constexpr uint8_t BASIC_FILTER_P = 19;\n+constexpr uint32_t BASIC_FILTER_M = 784931;\n+\n+enum BlockFilterType : uint8_t\n+{\n+    BASIC = 0,\n+};\n+\n+/**\n+ * Complete block filter struct as defined in BIP 157.\n+ */\n+class BlockFilter\n+{\n+private:\n+    BlockFilterType m_filter_type;\n+    uint256 m_block_hash;\n+    GCSFilter m_filter;\n+\n+public:\n+\n+    // Construct a new BlockFilter of the specified type from a block.\n+    BlockFilter(BlockFilterType filter_type, const CBlock& block, const CBlockUndo& block_undo);\n+\n+    BlockFilterType GetFilterType() const { return m_filter_type; }\n+\n+    const GCSFilter& GetFilter() const { return m_filter; }\n+\n+    const std::vector<unsigned char>& GetEncodedFilter() const\n+    {\n+        return m_filter.GetEncoded();\n+    }\n+};\n+\n #endif // BITCOIN_BLOCKFILTER_H"
      },
      {
        "sha": "4fe34dedcbbfc0893f09d063b2515b1f1ad4fbf3",
        "filename": "src/test/blockfilter_tests.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1855f6052aca806fdb51be01b30dfeee8b55f40/src/test/blockfilter_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1855f6052aca806fdb51be01b30dfeee8b55f40/src/test/blockfilter_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/blockfilter_tests.cpp?ref=c1855f6052aca806fdb51be01b30dfeee8b55f40",
        "patch": "@@ -2,7 +2,11 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <test/test_bitcoin.h>\n+\n #include <blockfilter.h>\n+#include <serialize.h>\n+#include <streams.h>\n \n #include <boost/test/unit_test.hpp>\n \n@@ -31,4 +35,53 @@ BOOST_AUTO_TEST_CASE(gcsfilter_test)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(blockfilter_basic_test)\n+{\n+    CScript included_scripts[5], excluded_scripts[2];\n+\n+    // First two are outputs on a single transaction.\n+    included_scripts[0] << std::vector<unsigned char>(0, 65) << OP_CHECKSIG;\n+    included_scripts[1] << OP_DUP << OP_HASH160 << std::vector<unsigned char>(1, 20) << OP_EQUALVERIFY << OP_CHECKSIG;\n+\n+    // Third is an output on in a second transaction.\n+    included_scripts[2] << OP_1 << std::vector<unsigned char>(2, 33) << OP_1 << OP_CHECKMULTISIG;\n+\n+    // Last two are spent by a single transaction.\n+    included_scripts[3] << OP_0 << std::vector<unsigned char>(3, 32);\n+    included_scripts[4] << OP_4 << OP_ADD << OP_8 << OP_EQUAL;\n+\n+    // OP_RETURN output is an output on the second transaction.\n+    excluded_scripts[0] << OP_RETURN << std::vector<unsigned char>(4, 40);\n+\n+    // This script is not related to the block at all.\n+    excluded_scripts[1] << std::vector<unsigned char>(5, 33) << OP_CHECKSIG;\n+\n+    CMutableTransaction tx_1;\n+    tx_1.vout.emplace_back(100, included_scripts[0]);\n+    tx_1.vout.emplace_back(200, included_scripts[1]);\n+\n+    CMutableTransaction tx_2;\n+    tx_2.vout.emplace_back(300, included_scripts[2]);\n+    tx_2.vout.emplace_back(0, excluded_scripts[0]);\n+\n+    CBlock block;\n+    block.vtx.push_back(MakeTransactionRef(tx_1));\n+    block.vtx.push_back(MakeTransactionRef(tx_2));\n+\n+    CBlockUndo block_undo;\n+    block_undo.vtxundo.emplace_back();\n+    block_undo.vtxundo.back().vprevout.emplace_back(CTxOut(400, included_scripts[3]), 1000, true);\n+    block_undo.vtxundo.back().vprevout.emplace_back(CTxOut(500, included_scripts[4]), 10000, false);\n+\n+    BlockFilter block_filter(BlockFilterType::BASIC, block, block_undo);\n+    const GCSFilter& filter = block_filter.GetFilter();\n+\n+    for (const CScript& script : included_scripts) {\n+        BOOST_CHECK(filter.Match(GCSFilter::Element(script.begin(), script.end())));\n+    }\n+    for (const CScript& script : excluded_scripts) {\n+        BOOST_CHECK(!filter.Match(GCSFilter::Element(script.begin(), script.end())));\n+    }\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "4a7823894442f0f33f670e8797a8f7d6c9e8a746",
        "filename": "src/undo.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1855f6052aca806fdb51be01b30dfeee8b55f40/src/undo.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1855f6052aca806fdb51be01b30dfeee8b55f40/src/undo.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/undo.h?ref=c1855f6052aca806fdb51be01b30dfeee8b55f40",
        "patch": "@@ -6,6 +6,7 @@\n #ifndef BITCOIN_UNDO_H\n #define BITCOIN_UNDO_H\n \n+#include <coins.h>\n #include <compressor.h>\n #include <consensus/consensus.h>\n #include <primitives/transaction.h>"
      }
    ]
  },
  {
    "sha": "cd09c7925b5af4104834971cfe072251e3ac2bda",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZDA5Yzc5MjViNWFmNDEwNDgzNDk3MWNmZTA3MjI1MWUzYWMyYmRh",
    "commit": {
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-01-24T01:27:06Z"
      },
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "message": "blockfilter: Serialization methods on BlockFilter.",
      "tree": {
        "sha": "c9205cf5497ba8a07b64b15738613b0133a3231e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c9205cf5497ba8a07b64b15738613b0133a3231e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd09c7925b5af4104834971cfe072251e3ac2bda",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd09c7925b5af4104834971cfe072251e3ac2bda",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cd09c7925b5af4104834971cfe072251e3ac2bda",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd09c7925b5af4104834971cfe072251e3ac2bda/comments",
    "author": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c1855f6052aca806fdb51be01b30dfeee8b55f40",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1855f6052aca806fdb51be01b30dfeee8b55f40",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c1855f6052aca806fdb51be01b30dfeee8b55f40"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 31,
      "deletions": 1
    },
    "files": [
      {
        "sha": "010f868aeea65997e5af8e49d5b0ec32b826719c",
        "filename": "src/blockfilter.h",
        "status": "modified",
        "additions": 31,
        "deletions": 1,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd09c7925b5af4104834971cfe072251e3ac2bda/src/blockfilter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd09c7925b5af4104834971cfe072251e3ac2bda/src/blockfilter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.h?ref=cd09c7925b5af4104834971cfe072251e3ac2bda",
        "patch": "@@ -82,7 +82,8 @@ enum BlockFilterType : uint8_t\n };\n \n /**\n- * Complete block filter struct as defined in BIP 157.\n+ * Complete block filter struct as defined in BIP 157. Serialization matches\n+ * payload of \"cfilter\" messages.\n  */\n class BlockFilter\n {\n@@ -104,6 +105,35 @@ class BlockFilter\n     {\n         return m_filter.GetEncoded();\n     }\n+\n+    template <typename Stream>\n+    void Serialize(Stream& s) const {\n+        s << m_block_hash\n+          << static_cast<uint8_t>(m_filter_type)\n+          << m_filter.GetEncoded();\n+    }\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s) {\n+        std::vector<unsigned char> encoded_filter;\n+        uint8_t filter_type;\n+\n+        s >> m_block_hash\n+          >> filter_type\n+          >> encoded_filter;\n+\n+        m_filter_type = static_cast<BlockFilterType>(filter_type);\n+\n+        switch (m_filter_type) {\n+        case BlockFilterType::BASIC:\n+            m_filter = GCSFilter(m_block_hash.GetUint64(0), m_block_hash.GetUint64(1),\n+                                 BASIC_FILTER_P, BASIC_FILTER_M, std::move(encoded_filter));\n+            break;\n+\n+        default:\n+            throw std::ios_base::failure(\"unknown filter_type\");\n+        }\n+    }\n };\n \n #endif // BITCOIN_BLOCKFILTER_H"
      }
    ]
  },
  {
    "sha": "a4afb9cadbaecb0676e6475ab8d32a52faecb47a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNGFmYjljYWRiYWVjYjA2NzZlNjQ3NWFiOGQzMmE1MmZhZWNiNDdh",
    "commit": {
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-01-24T01:32:46Z"
      },
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "message": "blockfilter: Additional helper methods to compute hash and header.",
      "tree": {
        "sha": "df0d824aaa7687fb97c7153ea4826e2267eaab73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df0d824aaa7687fb97c7153ea4826e2267eaab73"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4afb9cadbaecb0676e6475ab8d32a52faecb47a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4afb9cadbaecb0676e6475ab8d32a52faecb47a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a4afb9cadbaecb0676e6475ab8d32a52faecb47a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4afb9cadbaecb0676e6475ab8d32a52faecb47a/comments",
    "author": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cd09c7925b5af4104834971cfe072251e3ac2bda",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd09c7925b5af4104834971cfe072251e3ac2bda",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cd09c7925b5af4104834971cfe072251e3ac2bda"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 27,
      "deletions": 0
    },
    "files": [
      {
        "sha": "124cbcfd927a7162b34e259ff474371eeba39087",
        "filename": "src/blockfilter.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4afb9cadbaecb0676e6475ab8d32a52faecb47a/src/blockfilter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4afb9cadbaecb0676e6475ab8d32a52faecb47a/src/blockfilter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.cpp?ref=a4afb9cadbaecb0676e6475ab8d32a52faecb47a",
        "patch": "@@ -233,3 +233,24 @@ BlockFilter::BlockFilter(BlockFilterType filter_type, const CBlock& block, const\n         throw std::invalid_argument(\"unknown filter_type\");\n     }\n }\n+\n+uint256 BlockFilter::GetHash() const\n+{\n+    const std::vector<unsigned char>& data = GetEncodedFilter();\n+\n+    uint256 result;\n+    CHash256().Write(data.data(), data.size()).Finalize(result.begin());\n+    return result;\n+}\n+\n+uint256 BlockFilter::ComputeHeader(const uint256& prev_header) const\n+{\n+    const uint256& filter_hash = GetHash();\n+\n+    uint256 result;\n+    CHash256()\n+        .Write(filter_hash.begin(), filter_hash.size())\n+        .Write(prev_header.begin(), prev_header.size())\n+        .Finalize(result.begin());\n+    return result;\n+}"
      },
      {
        "sha": "46833ac0be2899c46c5d16aa0335824b1eef702c",
        "filename": "src/blockfilter.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4afb9cadbaecb0676e6475ab8d32a52faecb47a/src/blockfilter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4afb9cadbaecb0676e6475ab8d32a52faecb47a/src/blockfilter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.h?ref=a4afb9cadbaecb0676e6475ab8d32a52faecb47a",
        "patch": "@@ -106,6 +106,12 @@ class BlockFilter\n         return m_filter.GetEncoded();\n     }\n \n+    // Compute the filter hash.\n+    uint256 GetHash() const;\n+\n+    // Compute the filter header given the previous one.\n+    uint256 ComputeHeader(const uint256& prev_header) const;\n+\n     template <typename Stream>\n     void Serialize(Stream& s) const {\n         s << m_block_hash"
      }
    ]
  },
  {
    "sha": "97b64d67daf0336dfb64b132f3e4d6a4c1967da4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5N2I2NGQ2N2RhZjAzMzZkZmI2NGIxMzJmM2U0ZDZhNGMxOTY3ZGE0",
    "commit": {
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-01-24T01:38:23Z"
      },
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "message": "blockfilter: Unit test against BIP 158 test vectors.\n\nFull test of block filter and header construction.",
      "tree": {
        "sha": "56ceac58100d97c9cf70f5c0ec7fd0d83e5bee46",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/56ceac58100d97c9cf70f5c0ec7fd0d83e5bee46"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97b64d67daf0336dfb64b132f3e4d6a4c1967da4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97b64d67daf0336dfb64b132f3e4d6a4c1967da4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/97b64d67daf0336dfb64b132f3e4d6a4c1967da4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97b64d67daf0336dfb64b132f3e4d6a4c1967da4/comments",
    "author": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a4afb9cadbaecb0676e6475ab8d32a52faecb47a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4afb9cadbaecb0676e6475ab8d32a52faecb47a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a4afb9cadbaecb0676e6475ab8d32a52faecb47a"
      }
    ],
    "stats": {
      "total": 65,
      "additions": 65,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9e7d0dc745da8fcc61a41aea78548782ee714754",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97b64d67daf0336dfb64b132f3e4d6a4c1967da4/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97b64d67daf0336dfb64b132f3e4d6a4c1967da4/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=97b64d67daf0336dfb64b132f3e4d6a4c1967da4",
        "patch": "@@ -9,6 +9,7 @@ TEST_BINARY=test/test_bitcoin$(EXEEXT)\n \n JSON_TEST_FILES = \\\n   test/data/base58_encode_decode.json \\\n+  test/data/blockfilters.json \\\n   test/data/key_io_valid.json \\\n   test/data/key_io_invalid.json \\\n   test/data/script_tests.json \\"
      },
      {
        "sha": "e3cb05f09e9c12bbae2c62ce06a1302820da4200",
        "filename": "src/test/blockfilter_tests.cpp",
        "status": "modified",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97b64d67daf0336dfb64b132f3e4d6a4c1967da4/src/test/blockfilter_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97b64d67daf0336dfb64b132f3e4d6a4c1967da4/src/test/blockfilter_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/blockfilter_tests.cpp?ref=97b64d67daf0336dfb64b132f3e4d6a4c1967da4",
        "patch": "@@ -2,11 +2,15 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <test/data/blockfilters.json.h>\n #include <test/test_bitcoin.h>\n \n #include <blockfilter.h>\n+#include <core_io.h>\n #include <serialize.h>\n #include <streams.h>\n+#include <univalue.h>\n+#include <utilstrencodings.h>\n \n #include <boost/test/unit_test.hpp>\n \n@@ -84,4 +88,55 @@ BOOST_AUTO_TEST_CASE(blockfilter_basic_test)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(blockfilters_json_test)\n+{\n+    UniValue json;\n+    std::string json_data(json_tests::blockfilters,\n+                          json_tests::blockfilters + sizeof(json_tests::blockfilters));\n+    if (!json.read(json_data) || !json.isArray()) {\n+        BOOST_ERROR(\"Parse error.\");\n+        return;\n+    }\n+\n+    const UniValue& tests = json.get_array();\n+    for (unsigned int i = 0; i < tests.size(); i++) {\n+        UniValue test = tests[i];\n+        std::string strTest = test.write();\n+\n+        if (test.size() == 1) {\n+            continue;\n+        } else if (test.size() < 7) {\n+            BOOST_ERROR(\"Bad test: \" << strTest);\n+            continue;\n+        }\n+\n+        unsigned int pos = 0;\n+        /*int block_height =*/ test[pos++].get_int();\n+        /*uint256 block_hash =*/ ParseHashStr(test[pos++].get_str(), \"block_hash\");\n+\n+        CBlock block;\n+        BOOST_REQUIRE(DecodeHexBlk(block, test[pos++].get_str()));\n+\n+        CBlockUndo block_undo;\n+        block_undo.vtxundo.emplace_back();\n+        CTxUndo& tx_undo = block_undo.vtxundo.back();\n+        const UniValue& prev_scripts = test[pos++].get_array();\n+        for (unsigned int ii = 0; ii < prev_scripts.size(); ii++) {\n+            std::vector<unsigned char> raw_script = ParseHex(prev_scripts[ii].get_str());\n+            CTxOut txout(0, CScript(raw_script.begin(), raw_script.end()));\n+            tx_undo.vprevout.emplace_back(txout, 0, false);\n+        }\n+\n+        uint256 prev_filter_header_basic = ParseHashStr(test[pos++].get_str(), \"prev_filter_header_basic\");\n+        std::vector<unsigned char> filter_basic = ParseHex(test[pos++].get_str());\n+        uint256 filter_header_basic = ParseHashStr(test[pos++].get_str(), \"filter_header_basic\");\n+\n+        BlockFilter computed_filter_basic(BlockFilterType::BASIC, block, block_undo);\n+        BOOST_CHECK(computed_filter_basic.GetFilter().GetEncoded() == filter_basic);\n+\n+        uint256 computed_header_basic = computed_filter_basic.ComputeHeader(prev_filter_header_basic);\n+        BOOST_CHECK(computed_header_basic == filter_header_basic);\n+    }\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "2f00728ff69619d316208728eaff0c1101be5186",
        "filename": "src/test/data/blockfilters.json",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97b64d67daf0336dfb64b132f3e4d6a4c1967da4/src/test/data/blockfilters.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97b64d67daf0336dfb64b132f3e4d6a4c1967da4/src/test/data/blockfilters.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/blockfilters.json?ref=97b64d67daf0336dfb64b132f3e4d6a4c1967da4",
        "patch": "@@ -0,0 +1,9 @@\n+[\n+[\"Block Height,Block Hash,Block,[Prev Output Scripts for Block],Previous Basic Header,Basic Filter,Basic Header,Notes\"],\n+[0,\"000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\",\"0100000000000000000000000000000000000000000000000000000000000000000000003ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4adae5494dffff001d1aa4ae180101000000010000000000000000000000000000000000000000000000000000000000000000ffffffff4d04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73ffffffff0100f2052a01000000434104678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5fac00000000\",[],\"0000000000000000000000000000000000000000000000000000000000000000\",\"019dfca8\",\"21584579b7eb08997773e5aeff3a7f932700042d0ed2a6129012b7d7ae81b750\",\"Genesis block\"],\n+[2,\"000000006c02c8ea6e4ff69651f7fcde348fb9d557a06e6957b65552002a7820\",\"0100000006128e87be8b1b4dea47a7247d5528d2702c96826c7a648497e773b800000000e241352e3bec0a95a6217e10c3abb54adfa05abb12c126695595580fb92e222032e7494dffff001d00d235340101000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0e0432e7494d010e062f503253482fffffffff0100f2052a010000002321038a7f6ef1c8ca0c588aa53fa860128077c9e6c11e6830f4d7ee4e763a56b7718fac00000000\",[],\"d7bdac13a59d745b1add0d2ce852f1a0442e8945fc1bf3848d3cbffd88c24fe1\",\"0174a170\",\"186afd11ef2b5e7e3504f2e8cbf8df28a1fd251fe53d60dff8b1467d1b386cf0\",\"\"],\n+[3,\"000000008b896e272758da5297bcd98fdc6d97c9b765ecec401e286dc1fdbe10\",\"0100000020782a005255b657696ea057d5b98f34defcf75196f64f6eeac8026c0000000041ba5afc532aae03151b8aa87b65e1594f97504a768e010c98c0add79216247186e7494dffff001d058dc2b60101000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0e0486e7494d0151062f503253482fffffffff0100f2052a01000000232103f6d9ff4c12959445ca5549c811683bf9c88e637b222dd2e0311154c4c85cf423ac00000000\",[],\"186afd11ef2b5e7e3504f2e8cbf8df28a1fd251fe53d60dff8b1467d1b386cf0\",\"016cf7a0\",\"8d63aadf5ab7257cb6d2316a57b16f517bff1c6388f124ec4c04af1212729d2a\",\"\"],\n+[926485,\"000000000000015d6077a411a8f5cc95caf775ccf11c54e27df75ce58d187313\",\"0000002060bbab0edbf3ef8a49608ee326f8fd75c473b7e3982095e2d100000000000000c30134f8c9b6d2470488d7a67a888f6fa12f8692e0c3411fbfb92f0f68f67eedae03ca57ef13021acc22dc4105010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff2f0315230e0004ae03ca57043e3d1e1d0c8796bf579aef0c0000000000122f4e696e6a61506f6f6c2f5345475749542fffffffff038427a112000000001976a914876fbb82ec05caa6af7a3b5e5a983aae6c6cc6d688ac0000000000000000266a24aa21a9ed5c748e121c0fe146d973a4ac26fa4a68b0549d46ee22d25f50a5e46fe1b377ee00000000000000002952534b424c4f434b3acd16772ad61a3c5f00287480b720f6035d5e54c9efc71be94bb5e3727f10909001200000000000000000000000000000000000000000000000000000000000000000000000000100000000010145310e878941a1b2bc2d33797ee4d89d95eaaf2e13488063a2aa9a74490f510a0100000023220020b6744de4f6ec63cc92f7c220cdefeeb1b1bed2b66c8e5706d80ec247d37e65a1ffffffff01002d3101000000001976a9143ebc40e411ed3c76f86711507ab952300890397288ac0400473044022001dd489a5d4e2fbd8a3ade27177f6b49296ba7695c40dbbe650ea83f106415fd02200b23a0602d8ff1bdf79dee118205fc7e9b40672bf31563e5741feb53fb86388501483045022100f88f040e90cc5dc6c6189d04718376ac19ed996bf9e4a3c29c3718d90ffd27180220761711f16c9e3a44f71aab55cbc0634907a1fa8bb635d971a9a01d368727bea10169522103b3623117e988b76aaabe3d63f56a4fc88b228a71e64c4cc551d1204822fe85cb2103dd823066e096f72ed617a41d3ca56717db335b1ea47a1b4c5c9dbdd0963acba621033d7c89bd9da29fa8d44db7906a9778b53121f72191184a9fee785c39180e4be153ae00000000010000000120925534261de4dcebb1ed5ab1b62bfe7a3ef968fb111dc2c910adfebc6e3bdf010000006b483045022100f50198f5ae66211a4f485190abe4dc7accdabe3bc214ebc9ea7069b97097d46e0220316a70a03014887086e335fc1b48358d46cd6bdc9af3b57c109c94af76fc915101210316cff587a01a2736d5e12e53551b18d73780b83c3bfb4fcf209c869b11b6415effffffff0220a10700000000001976a91450333046115eaa0ac9e0216565f945070e44573988ac2e7cd01a000000001976a914c01a7ca16b47be50cbdbc60724f701d52d75156688ac00000000010000000203a25f58630d7a1ea52550365fd2156683f56daf6ca73a4b4bbd097e66516322010000006a47304402204efc3d70e4ca3049c2a425025edf22d5ca355f9ec899dbfbbeeb2268533a0f2b02204780d3739653035af4814ea52e1396d021953f948c29754edd0ee537364603dc012103f7a897e4dbecab2264b21917f90664ea8256189ea725d28740cf7ba5d85b5763ffffffff03a25f58630d7a1ea52550365fd2156683f56daf6ca73a4b4bbd097e66516322000000006a47304402202d96defdc5b4af71d6ba28c9a6042c2d5ee7bc6de565d4db84ef517445626e03022022da80320e9e489c8f41b74833dfb6a54a4eb5087cdb46eb663eef0b25caa526012103f7a897e4dbecab2264b21917f90664ea8256189ea725d28740cf7ba5d85b5763ffffffff0200e1f5050000000017a914b7e6f7ff8658b2d1fb107e3d7be7af4742e6b1b3876f88fc00000000001976a914913bcc2be49cb534c20474c4dee1e9c4c317e7eb88ac0000000001000000043ffd60d3818431c495b89be84afac205d5d1ed663009291c560758bbd0a66df5010000006b483045022100f344607de9df42049688dcae8ff1db34c0c7cd25ec05516e30d2bc8f12ac9b2f022060b648f6a21745ea6d9782e17bcc4277b5808326488a1f40d41e125879723d3a012103f7a897e4dbecab2264b21917f90664ea8256189ea725d28740cf7ba5d85b5763ffffffffa5379401cce30f84731ef1ba65ce27edf2cc7ce57704507ebe8714aa16a96b92010000006a473044022020c37a63bf4d7f564c2192528709b6a38ab8271bd96898c6c2e335e5208661580220435c6f1ad4d9305d2c0a818b2feb5e45d443f2f162c0f61953a14d097fd07064012103f7a897e4dbecab2264b21917f90664ea8256189ea725d28740cf7ba5d85b5763ffffffff70e731e193235ff12c3184510895731a099112ffca4b00246c60003c40f843ce000000006a473044022053760f74c29a879e30a17b5f03a5bb057a5751a39f86fa6ecdedc36a1b7db04c022041d41c9b95f00d2d10a0373322a9025dba66c942196bc9d8adeb0e12d3024728012103f7a897e4dbecab2264b21917f90664ea8256189ea725d28740cf7ba5d85b5763ffffffff66b7a71b3e50379c8e85fc18fe3f1a408fc985f257036c34702ba205cef09f6f000000006a4730440220499bf9e2db3db6e930228d0661395f65431acae466634d098612fd80b08459ee022040e069fc9e3c60009f521cef54c38aadbd1251aee37940e6018aadb10f194d6a012103f7a897e4dbecab2264b21917f90664ea8256189ea725d28740cf7ba5d85b5763ffffffff0200e1f5050000000017a9148fc37ad460fdfbd2b44fe446f6e3071a4f64faa6878f447f0b000000001976a914913bcc2be49cb534c20474c4dee1e9c4c317e7eb88ac00000000\",[\"a914feb8a29635c56d9cd913122f90678756bf23887687\",\"76a914c01a7ca16b47be50cbdbc60724f701d52d75156688ac\",\"76a914913bcc2be49cb534c20474c4dee1e9c4c317e7eb88ac\",\"76a914913bcc2be49cb534c20474c4dee1e9c4c317e7eb88ac\",\"76a914913bcc2be49cb534c20474c4dee1e9c4c317e7eb88ac\",\"76a914913bcc2be49cb534c20474c4dee1e9c4c317e7eb88ac\",\"76a914913bcc2be49cb534c20474c4dee1e9c4c317e7eb88ac\",\"76a914913bcc2be49cb534c20474c4dee1e9c4c317e7eb88ac\"],\"da49977ba1ee0d620a2c4f8f646b03cd0d230f5c6c994722e3ba884889f0be1a\",\"09027acea61b6cc3fb33f5d52f7d088a6b2f75d234e89ca800\",\"4cd9dd007a325199102f1fc0b7d77ca25ee3c84d46018c4353ecfcb56c0d3e7a\",\"Duplicate pushdata 913bcc2be49cb534c20474c4dee1e9c4c317e7eb\"],\n+[987876,\"0000000000000c00901f2049055e2a437c819d79a3d54fd63e6af796cd7b8a79\",\"000000202694f74969fdb542090e95a56bc8aa2d646e27033850e32f1c5f000000000000f7e53676b3f12d5beb524ed617f2d25f5a93b5f4f52c1ba2678260d72712f8dd0a6dfe5740257e1a4b1768960101000000010000000000000000000000000000000000000000000000000000000000000000ffffffff1603e4120ff9c30a1c216900002f424d4920546573742fffffff0001205fa012000000001e76a914c486de584a735ec2f22da7cd9681614681f92173d83d0aa68688ac00000000\",[],\"e9d729b72d533c29abe5276d5cf6c152f3723f10efe000b1e0c9ca5265a8beb6\",\"010c0b40\",\"e6137ae5a8424c40da1e5023c16975cc97b09300b4c050e6b1c713add3836c40\",\"Coinbase tx has unparseable output script\"],\n+[1263442,\"000000006f27ddfe1dd680044a34548f41bed47eba9e6f0b310da21423bc5f33\",\"000000201c8d1a529c39a396db2db234d5ec152fa651a2872966daccbde028b400000000083f14492679151dbfaa1a825ef4c18518e780c1f91044180280a7d33f4a98ff5f45765aaddc001d38333b9a02010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff230352471300fe5f45765afe94690a000963676d696e6572343208000000000000000000ffffffff024423a804000000001976a914f2c25ac3d59f3d674b1d1d0a25c27339aaac0ba688ac0000000000000000266a24aa21a9edcb26cb3052426b9ebb4d19c819ef87c19677bbf3a7c46ef0855bd1b2abe83491012000000000000000000000000000000000000000000000000000000000000000000000000002000000000101d20978463906ba4ff5e7192494b88dd5eb0de85d900ab253af909106faa22cc5010000000004000000014777ff000000000016001446c29eabe8208a33aa1023c741fa79aa92e881ff0347304402207d7ca96134f2bcfdd6b536536fdd39ad17793632016936f777ebb32c22943fda02206014d2fb8a6aa58279797f861042ba604ebd2f8f61e5bddbd9d3be5a245047b201004b632103eeaeba7ce5dc2470221e9517fb498e8d6bd4e73b85b8be655196972eb9ccd5566754b2752103a40b74d43df244799d041f32ce1ad515a6cd99501701540e38750d883ae21d3a68ac00000000\",[\"002027a5000c7917f785d8fc6e5a55adfca8717ecb973ebb7743849ff956d896a7ed\"],\"a4a4d6c6034da8aa06f01fe71f1fffbd79e032006b07f6c7a2c60a66aa310c01\",\"0385acb4f0fe889ef0\",\"3588f34fbbc11640f9ed40b2a66a4e096215d50389691309c1dac74d4268aa81\",\"Includes witness data\"]\n+]"
      }
    ]
  },
  {
    "sha": "f33b717a85363e067316c133a542559d2f4aaeca",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMzNiNzE3YTg1MzYzZTA2NzMxNmMxMzNhNTQyNTU5ZDJmNGFhZWNh",
    "commit": {
      "author": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-05-13T19:00:02Z"
      },
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "message": "blockfilter: Optimization on compilers with int128 support.",
      "tree": {
        "sha": "4434179067bab1ae68b8555678700b25fee4658f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4434179067bab1ae68b8555678700b25fee4658f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f33b717a85363e067316c133a542559d2f4aaeca",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f33b717a85363e067316c133a542559d2f4aaeca",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f33b717a85363e067316c133a542559d2f4aaeca",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f33b717a85363e067316c133a542559d2f4aaeca/comments",
    "author": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "97b64d67daf0336dfb64b132f3e4d6a4c1967da4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97b64d67daf0336dfb64b132f3e4d6a4c1967da4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/97b64d67daf0336dfb64b132f3e4d6a4c1967da4"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "38fcfacf7fed4152c6737bd637b427ffa8f67bb0",
        "filename": "src/blockfilter.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f33b717a85363e067316c133a542559d2f4aaeca/src/blockfilter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f33b717a85363e067316c133a542559d2f4aaeca/src/blockfilter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.cpp?ref=f33b717a85363e067316c133a542559d2f4aaeca",
        "patch": "@@ -52,6 +52,9 @@ static uint64_t GolombRiceDecode(BitStreamReader<IStream>& bitreader, uint8_t P)\n // See: https://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/\n static uint64_t MapIntoRange(uint64_t x, uint64_t n)\n {\n+#ifdef __SIZEOF_INT128__\n+    return (static_cast<unsigned __int128>(x) * static_cast<unsigned __int128>(n)) >> 64;\n+#else\n     // To perform the calculation on 64-bit numbers without losing the\n     // result to overflow, split the numbers into the most significant and\n     // least significant 32 bits and perform multiplication piece-wise.\n@@ -70,6 +73,7 @@ static uint64_t MapIntoRange(uint64_t x, uint64_t n)\n     uint64_t mid34 = (bd >> 32) + (bc & 0xFFFFFFFF) + (ad & 0xFFFFFFFF);\n     uint64_t upper64 = ac + (bc >> 32) + (ad >> 32) + (mid34 >> 32);\n     return upper64;\n+#endif\n }\n \n uint64_t GCSFilter::HashToRange(const Element& element) const"
      }
    ]
  },
  {
    "sha": "254c85b68794ada713dbdae415db72adf5fcbaf3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNTRjODViNjg3OTRhZGE3MTNkYmRhZTQxNWRiNzJhZGY1ZmNiYWYz",
    "commit": {
      "author": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-05-14T05:27:14Z"
      },
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "message": "bench: Benchmark GCS filter creation and matching.",
      "tree": {
        "sha": "7f733a1ca7c214ffe01e25e4021f7fdc4b2790cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f733a1ca7c214ffe01e25e4021f7fdc4b2790cc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/254c85b68794ada713dbdae415db72adf5fcbaf3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/254c85b68794ada713dbdae415db72adf5fcbaf3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/254c85b68794ada713dbdae415db72adf5fcbaf3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/254c85b68794ada713dbdae415db72adf5fcbaf3/comments",
    "author": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f33b717a85363e067316c133a542559d2f4aaeca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f33b717a85363e067316c133a542559d2f4aaeca",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f33b717a85363e067316c133a542559d2f4aaeca"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 44,
      "deletions": 0
    },
    "files": [
      {
        "sha": "76177630ab9aee1b66c5103873a47fce46e60d6f",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/254c85b68794ada713dbdae415db72adf5fcbaf3/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/254c85b68794ada713dbdae415db72adf5fcbaf3/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=254c85b68794ada713dbdae415db72adf5fcbaf3",
        "patch": "@@ -22,6 +22,7 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/rollingbloom.cpp \\\n   bench/crypto_hash.cpp \\\n   bench/ccoins_caching.cpp \\\n+  bench/gcs_filter.cpp \\\n   bench/merkle_root.cpp \\\n   bench/mempool_eviction.cpp \\\n   bench/verify_script.cpp \\"
      },
      {
        "sha": "6f4e384e3bf6e0f33496d46cb4997f02d514161b",
        "filename": "src/bench/gcs_filter.cpp",
        "status": "added",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/254c85b68794ada713dbdae415db72adf5fcbaf3/src/bench/gcs_filter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/254c85b68794ada713dbdae415db72adf5fcbaf3/src/bench/gcs_filter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/gcs_filter.cpp?ref=254c85b68794ada713dbdae415db72adf5fcbaf3",
        "patch": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <blockfilter.h>\n+\n+static void ConstructGCSFilter(benchmark::State& state)\n+{\n+    GCSFilter::ElementSet elements;\n+    for (int i = 0; i < 10000; ++i) {\n+        GCSFilter::Element element(32);\n+        element[0] = static_cast<unsigned char>(i);\n+        element[1] = static_cast<unsigned char>(i >> 8);\n+        elements.insert(std::move(element));\n+    }\n+\n+    uint64_t siphash_k0 = 0;\n+    while (state.KeepRunning()) {\n+        GCSFilter filter(siphash_k0, 0, 20, 1 << 20, elements);\n+\n+        siphash_k0++;\n+    }\n+}\n+\n+static void MatchGCSFilter(benchmark::State& state)\n+{\n+    GCSFilter::ElementSet elements;\n+    for (int i = 0; i < 10000; ++i) {\n+        GCSFilter::Element element(32);\n+        element[0] = static_cast<unsigned char>(i);\n+        element[1] = static_cast<unsigned char>(i >> 8);\n+        elements.insert(std::move(element));\n+    }\n+    GCSFilter filter(0, 0, 20, 1 << 20, elements);\n+\n+    while (state.KeepRunning()) {\n+        filter.Match(GCSFilter::Element());\n+    }\n+}\n+\n+BENCHMARK(ConstructGCSFilter, 1000);\n+BENCHMARK(MatchGCSFilter, 50 * 1000);"
      }
    ]
  }
]