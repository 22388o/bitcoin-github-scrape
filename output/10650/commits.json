[
  {
    "sha": "858bfcfd6cc7e326546eb14c5ebc797309b66222",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NThiZmNmZDZjYzdlMzI2NTQ2ZWIxNGM1ZWJjNzk3MzA5YjY2MjIy",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-07-07T13:24:02Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-07-13T15:02:44Z"
      },
      "message": "Expose JSON endpoint registration",
      "tree": {
        "sha": "1c03115bd9effbc1e9e73c6b7a73132b2bf95c30",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1c03115bd9effbc1e9e73c6b7a73132b2bf95c30"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/858bfcfd6cc7e326546eb14c5ebc797309b66222",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAllni5QACgkQHrd2uwPH\nki3SuRAAsTDe0p6vbYp+JyNDF8431kp2eQJihsjzHMaplB9gVJKnyItkfVd5muQ+\nSdHslVqJ3/snJAKTyMIFCbwwrVtlajMXJQfZq58y6/NZ0h76XfVrar5iFCyYVtOa\noORoJD6csoxLdLs2FDJ8cb/apLoio1E0LkUUZKKvTCCC+UqqkJWe8F3ve8Z0e6Ji\nYCawZD3UudIWojh8A1urE7gdWGg60xozkvChq+ZXrJ59NOeD4Md9krEfjBFRZkP8\npQpcgTGeW+5uOZv0wPTdmYxuds0EvnjbneF9OXt272/ZK2jMgQ9+4buRJSBR1l4Z\nMYvR2EZdib75iYBcPLFACj+t5XwSfzWbiKst2Lmkf3V23D393HHY2Mlt8C8Bim69\nPH1C7OYWfVfUqul7JkemhjjE5HeKX+3TXaFoEp1BATu0dZku75LO/TZaykxvhNDM\nv1s8c0m61ZD9Rp7dB7i/9WK1YnJqAY5heicdtr1bz0lfJQpZ0xZWVf4lYBowvcch\naMxuRCEwrP5oOYrXSWoQ4bZFDjQZa6l5MRplhycHWUSc0AkKbI7slrD03fuIEhv8\ncAAvk6RELH+L8mQGFFyglBGiH7NzguZCw3PxPXaucVzLtVkG4VX/+kE+GRKKChoZ\ng5usx5rxDi/Of41m9lGdX8GmQE8V46dFyxBBzBJMj9mAquQp5hU=\n=CGs+\n-----END PGP SIGNATURE-----",
        "payload": "tree 1c03115bd9effbc1e9e73c6b7a73132b2bf95c30\nparent 7666250ffb4e8fc5c98556e2c8e121c72d6fe54c\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1499433842 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1499958164 +0200\n\nExpose JSON endpoint registration\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/858bfcfd6cc7e326546eb14c5ebc797309b66222",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/858bfcfd6cc7e326546eb14c5ebc797309b66222",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/858bfcfd6cc7e326546eb14c5ebc797309b66222/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7666250ffb4e8fc5c98556e2c8e121c72d6fe54c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7666250ffb4e8fc5c98556e2c8e121c72d6fe54c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7666250ffb4e8fc5c98556e2c8e121c72d6fe54c"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c096b7569e30bb5bd3553885653e40b222921cb4",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/858bfcfd6cc7e326546eb14c5ebc797309b66222/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/858bfcfd6cc7e326546eb14c5ebc797309b66222/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=858bfcfd6cc7e326546eb14c5ebc797309b66222",
        "patch": "@@ -226,6 +226,11 @@ static bool InitRPCAuthentication()\n     return true;\n }\n \n+void RegisterJSONEndpoint(const std::string& endpoint, bool exactMatch)\n+{\n+    RegisterHTTPHandler(endpoint, exactMatch, HTTPReq_JSONRPC);\n+}\n+\n bool StartHTTPRPC()\n {\n     LogPrint(BCLog::RPC, \"Starting HTTP RPC server\\n\");"
      },
      {
        "sha": "4ed8fddbec81a73fa30841a6bf34475bbb1d8aef",
        "filename": "src/httprpc.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/858bfcfd6cc7e326546eb14c5ebc797309b66222/src/httprpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/858bfcfd6cc7e326546eb14c5ebc797309b66222/src/httprpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.h?ref=858bfcfd6cc7e326546eb14c5ebc797309b66222",
        "patch": "@@ -32,4 +32,6 @@ void InterruptREST();\n  */\n void StopREST();\n \n+void RegisterJSONEndpoint(const std::string& endpoint, bool exactMatch);\n+\n #endif"
      }
    ]
  },
  {
    "sha": "6e390d1c821e3fd530bd2525a78d04976d0b6e11",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZTM5MGQxYzgyMWUzZmQ1MzBiZDI1MjVhNzhkMDQ5NzZkMGI2ZTEx",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-07-07T13:07:20Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-07-13T20:26:19Z"
      },
      "message": "Split node / wallet RPC calls based on the endpoint",
      "tree": {
        "sha": "b3bf7f1ce57278e2380abf3d6c3f1489e1902c3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b3bf7f1ce57278e2380abf3d6c3f1489e1902c3d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e390d1c821e3fd530bd2525a78d04976d0b6e11",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlln120ACgkQHrd2uwPH\nki2Wdg//ZKPv4vrNihiMrzEExgiMX3H/xS68LMQT/s4J3B0wCMWoGeFvcP5+QX2R\nePHIkeSY/VEruP7zUGjp+70RRrYrkM+F0cB1klgoWLc2cr+IzXR+8mPuXcr3MhHH\nXs5Tup+p1Jr5waWx+2TvvPJ0+Mq6E4rbgmNoV7vQN/+cBIODWsL5ymc7hvfhm9fe\nqrzt2Rr6Wc+3dvBmYI0EDXYUpDFfKk7CJtuioNUNOC77mehlmU+aCqdd6G1ZLBxR\ni3RVYS6U+nrt8mzwaOvDHxdLdysNHvXHWmgeySpoUmJ76oF/SzzWXD0cCHRISWDd\n3P1qQnOm2CFrOSbyMJ4SfsGCPYds630fkltsx1Urz8kMFO+bJ1wVZzRidHyeP9wh\nevQDOm5PzXT2J+fGzCbhmJNPQF5pWXABloaBaqQuKTyjfrbJkQ6OXlwmKlnmKKVj\nJQriJA0xr6YkcXi3aaEyXmhQc+0xsRoOuY88msHhai62o5QoUpSsPDVYbZFba36X\nlCA5h04t7XQy41Ay+HvANQopBIrQzpA46HLvkqMT+5x+C+EJ/ZUVdx18o6gyn3OS\njSuRXhTeZtJLdQQXSqjY6xnPNsOttdgX8kGHc1M9umcbDt0OlAX49stfrHZ09lWy\nqZi417qUbdfMvrlwfdd6hbTCFGnC3s+v2zZIwSmrfZXEMVK8Z2A=\n=tqgh\n-----END PGP SIGNATURE-----",
        "payload": "tree b3bf7f1ce57278e2380abf3d6c3f1489e1902c3d\nparent 858bfcfd6cc7e326546eb14c5ebc797309b66222\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1499432840 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1499977579 +0200\n\nSplit node / wallet RPC calls based on the endpoint\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e390d1c821e3fd530bd2525a78d04976d0b6e11",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6e390d1c821e3fd530bd2525a78d04976d0b6e11",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e390d1c821e3fd530bd2525a78d04976d0b6e11/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "858bfcfd6cc7e326546eb14c5ebc797309b66222",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/858bfcfd6cc7e326546eb14c5ebc797309b66222",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/858bfcfd6cc7e326546eb14c5ebc797309b66222"
      }
    ],
    "stats": {
      "total": 282,
      "additions": 149,
      "deletions": 133
    },
    "files": [
      {
        "sha": "4673e7d1a6dbb6791ff7dad1b9f4ded1ceb80af5",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e390d1c821e3fd530bd2525a78d04976d0b6e11/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e390d1c821e3fd530bd2525a78d04976d0b6e11/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=6e390d1c821e3fd530bd2525a78d04976d0b6e11",
        "patch": "@@ -648,7 +648,11 @@ HTTPRequest::RequestMethod HTTPRequest::GetRequestMethod()\n void RegisterHTTPHandler(const std::string &prefix, bool exactMatch, const HTTPRequestHandler &handler)\n {\n     LogPrint(BCLog::HTTP, \"Registering HTTP handler for %s (exactmatch %d)\\n\", prefix, exactMatch);\n-    pathHandlers.push_back(HTTPPathHandler(prefix, exactMatch, handler));\n+    HTTPPathHandler pathHandler(prefix, exactMatch, handler);\n+    if (std::find_if(pathHandlers.begin(), pathHandlers.end(), [pathHandler](const HTTPPathHandler a){ return (a.prefix == pathHandler.prefix && a.exactMatch == pathHandler.exactMatch); }) == pathHandlers.end()) {\n+        // only add handlers if they do not exists yet\n+        pathHandlers.push_back(pathHandler);\n+    }\n }\n \n void UnregisterHTTPHandler(const std::string &prefix, bool exactMatch)"
      },
      {
        "sha": "356478262e48e5a23c3d09cf645d44a1d9d23281",
        "filename": "src/qt/test/rpcnestedtests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e390d1c821e3fd530bd2525a78d04976d0b6e11/src/qt/test/rpcnestedtests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e390d1c821e3fd530bd2525a78d04976d0b6e11/src/qt/test/rpcnestedtests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/rpcnestedtests.cpp?ref=6e390d1c821e3fd530bd2525a78d04976d0b6e11",
        "patch": "@@ -29,7 +29,7 @@ static UniValue rpcNestedTest_rpc(const JSONRPCRequest& request)\n \n static const CRPCCommand vRPCCommands[] =\n {\n-    { \"test\", \"rpcNestedTest\", &rpcNestedTest_rpc, true, {} },\n+    { \"test\", \"/\", \"rpcNestedTest\", &rpcNestedTest_rpc, true, {} },\n };\n \n void RPCNestedTests::rpcNestedTests()"
      },
      {
        "sha": "cc77c25a9c130a3d207807f4639d9c358d42cc57",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 27,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e390d1c821e3fd530bd2525a78d04976d0b6e11/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e390d1c821e3fd530bd2525a78d04976d0b6e11/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=6e390d1c821e3fd530bd2525a78d04976d0b6e11",
        "patch": "@@ -1533,35 +1533,35 @@ UniValue getchaintxstats(const JSONRPCRequest& request)\n }\n \n static const CRPCCommand commands[] =\n-{ //  category              name                      actor (function)         okSafe argNames\n-  //  --------------------- ------------------------  -----------------------  ------ ----------\n-    { \"blockchain\",         \"getblockchaininfo\",      &getblockchaininfo,      true,  {} },\n-    { \"blockchain\",         \"getchaintxstats\",        &getchaintxstats,        true,  {\"nblocks\", \"blockhash\"} },\n-    { \"blockchain\",         \"getbestblockhash\",       &getbestblockhash,       true,  {} },\n-    { \"blockchain\",         \"getblockcount\",          &getblockcount,          true,  {} },\n-    { \"blockchain\",         \"getblock\",               &getblock,               true,  {\"blockhash\",\"verbosity|verbose\"} },\n-    { \"blockchain\",         \"getblockhash\",           &getblockhash,           true,  {\"height\"} },\n-    { \"blockchain\",         \"getblockheader\",         &getblockheader,         true,  {\"blockhash\",\"verbose\"} },\n-    { \"blockchain\",         \"getchaintips\",           &getchaintips,           true,  {} },\n-    { \"blockchain\",         \"getdifficulty\",          &getdifficulty,          true,  {} },\n-    { \"blockchain\",         \"getmempoolancestors\",    &getmempoolancestors,    true,  {\"txid\",\"verbose\"} },\n-    { \"blockchain\",         \"getmempooldescendants\",  &getmempooldescendants,  true,  {\"txid\",\"verbose\"} },\n-    { \"blockchain\",         \"getmempoolentry\",        &getmempoolentry,        true,  {\"txid\"} },\n-    { \"blockchain\",         \"getmempoolinfo\",         &getmempoolinfo,         true,  {} },\n-    { \"blockchain\",         \"getrawmempool\",          &getrawmempool,          true,  {\"verbose\"} },\n-    { \"blockchain\",         \"gettxout\",               &gettxout,               true,  {\"txid\",\"n\",\"include_mempool\"} },\n-    { \"blockchain\",         \"gettxoutsetinfo\",        &gettxoutsetinfo,        true,  {} },\n-    { \"blockchain\",         \"pruneblockchain\",        &pruneblockchain,        true,  {\"height\"} },\n-    { \"blockchain\",         \"verifychain\",            &verifychain,            true,  {\"checklevel\",\"nblocks\"} },\n-\n-    { \"blockchain\",         \"preciousblock\",          &preciousblock,          true,  {\"blockhash\"} },\n+{ //  category              endpoint      name                      actor (function)         okSafeMode  named args\n+  //  ------------------    ------------  ----------------------    -----------------------  ----------  ------------------\n+    { \"blockchain\",         \"/v1/node/\",  \"getblockchaininfo\",      &getblockchaininfo,      true,       {} },\n+    { \"blockchain\",         \"/v1/node/\",  \"getchaintxstats\",        &getchaintxstats,        true,       {\"nblocks\", \"blockhash\"} },\n+    { \"blockchain\",         \"/v1/node/\",  \"getbestblockhash\",       &getbestblockhash,       true,       {} },\n+    { \"blockchain\",         \"/v1/node/\",  \"getblockcount\",          &getblockcount,          true,       {} },\n+    { \"blockchain\",         \"/v1/node/\",  \"getblock\",               &getblock,               true,       {\"blockhash\",\"verbosity|verbose\"} },\n+    { \"blockchain\",         \"/v1/node/\",  \"getblockhash\",           &getblockhash,           true,       {\"height\"} },\n+    { \"blockchain\",         \"/v1/node/\",  \"getblockheader\",         &getblockheader,         true,       {\"blockhash\",\"verbose\"} },\n+    { \"blockchain\",         \"/v1/node/\",  \"getchaintips\",           &getchaintips,           true,       {} },\n+    { \"blockchain\",         \"/v1/node/\",  \"getdifficulty\",          &getdifficulty,          true,       {} },\n+    { \"blockchain\",         \"/v1/node/\",  \"getmempoolancestors\",    &getmempoolancestors,    true,       {\"txid\",\"verbose\"} },\n+    { \"blockchain\",         \"/v1/node/\",  \"getmempooldescendants\",  &getmempooldescendants,  true,       {\"txid\",\"verbose\"} },\n+    { \"blockchain\",         \"/v1/node/\",  \"getmempoolentry\",        &getmempoolentry,        true,       {\"txid\"} },\n+    { \"blockchain\",         \"/v1/node/\",  \"getmempoolinfo\",         &getmempoolinfo,         true,       {} },\n+    { \"blockchain\",         \"/v1/node/\",  \"getrawmempool\",          &getrawmempool,          true,       {\"verbose\"} },\n+    { \"blockchain\",         \"/v1/node/\",  \"gettxout\",               &gettxout,               true,       {\"txid\",\"n\",\"include_mempool\"} },\n+    { \"blockchain\",         \"/v1/node/\",  \"gettxoutsetinfo\",        &gettxoutsetinfo,        true,       {} },\n+    { \"blockchain\",         \"/v1/node/\",  \"pruneblockchain\",        &pruneblockchain,        true,       {\"height\"} },\n+    { \"blockchain\",         \"/v1/node/\",  \"verifychain\",            &verifychain,            true,       {\"checklevel\",\"nblocks\"} },\n+\n+    { \"blockchain\",         \"/v1/node/\",  \"preciousblock\",          &preciousblock,          true,       {\"blockhash\"} },\n \n     /* Not shown in help */\n-    { \"hidden\",             \"invalidateblock\",        &invalidateblock,        true,  {\"blockhash\"} },\n-    { \"hidden\",             \"reconsiderblock\",        &reconsiderblock,        true,  {\"blockhash\"} },\n-    { \"hidden\",             \"waitfornewblock\",        &waitfornewblock,        true,  {\"timeout\"} },\n-    { \"hidden\",             \"waitforblock\",           &waitforblock,           true,  {\"blockhash\",\"timeout\"} },\n-    { \"hidden\",             \"waitforblockheight\",     &waitforblockheight,     true,  {\"height\",\"timeout\"} },\n+    { \"hidden\",             \"/v1/node/\",  \"invalidateblock\",        &invalidateblock,        true,       {\"blockhash\"} },\n+    { \"hidden\",             \"/v1/node/\",  \"reconsiderblock\",        &reconsiderblock,        true,       {\"blockhash\"} },\n+    { \"hidden\",             \"/v1/node/\",  \"waitfornewblock\",        &waitfornewblock,        true,       {\"timeout\"} },\n+    { \"hidden\",             \"/v1/node/\",  \"waitforblock\",           &waitforblock,           true,       {\"blockhash\",\"timeout\"} },\n+    { \"hidden\",             \"/v1/node/\",  \"waitforblockheight\",     &waitforblockheight,     true,       {\"height\",\"timeout\"} },\n };\n \n void RegisterBlockchainRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "f194ac5f057f4a1fe50237c05a6cc02506209263",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e390d1c821e3fd530bd2525a78d04976d0b6e11/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e390d1c821e3fd530bd2525a78d04976d0b6e11/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=6e390d1c821e3fd530bd2525a78d04976d0b6e11",
        "patch": "@@ -942,20 +942,20 @@ UniValue estimaterawfee(const JSONRPCRequest& request)\n }\n \n static const CRPCCommand commands[] =\n-{ //  category              name                      actor (function)         okSafeMode\n-  //  --------------------- ------------------------  -----------------------  ----------\n-    { \"mining\",             \"getnetworkhashps\",       &getnetworkhashps,       true,  {\"nblocks\",\"height\"} },\n-    { \"mining\",             \"getmininginfo\",          &getmininginfo,          true,  {} },\n-    { \"mining\",             \"prioritisetransaction\",  &prioritisetransaction,  true,  {\"txid\",\"dummy\",\"fee_delta\"} },\n-    { \"mining\",             \"getblocktemplate\",       &getblocktemplate,       true,  {\"template_request\"} },\n-    { \"mining\",             \"submitblock\",            &submitblock,            true,  {\"hexdata\",\"dummy\"} },\n+{ //  category              endpoint      name                      actor (function)         okSafeMode   named args\n+  //  ------------------    ------------  ------------------------  -----------------------  ----------   ------------------\n+    { \"mining\",             \"/v1/node/\",  \"getnetworkhashps\",       &getnetworkhashps,       true,        {\"nblocks\",\"height\"} },\n+    { \"mining\",             \"/v1/node/\",  \"getmininginfo\",          &getmininginfo,          true,        {} },\n+    { \"mining\",             \"/v1/node/\",  \"prioritisetransaction\",  &prioritisetransaction,  true,        {\"txid\",\"dummy\",\"fee_delta\"} },\n+    { \"mining\",             \"/v1/node/\",  \"getblocktemplate\",       &getblocktemplate,       true,        {\"template_request\"} },\n+    { \"mining\",             \"/v1/node/\",  \"submitblock\",            &submitblock,            true,        {\"hexdata\",\"dummy\"} },\n \n-    { \"generating\",         \"generatetoaddress\",      &generatetoaddress,      true,  {\"nblocks\",\"address\",\"maxtries\"} },\n+    { \"generating\",         \"/v1/node/\",  \"generatetoaddress\",      &generatetoaddress,      true,        {\"nblocks\",\"address\",\"maxtries\"} },\n \n-    { \"util\",               \"estimatefee\",            &estimatefee,            true,  {\"nblocks\"} },\n-    { \"util\",               \"estimatesmartfee\",       &estimatesmartfee,       true,  {\"nblocks\", \"conservative\"} },\n+    { \"util\",               \"/v1/node/\",  \"estimatefee\",            &estimatefee,            true,        {\"nblocks\"} },\n+    { \"util\",               \"/v1/node/\",  \"estimatesmartfee\",       &estimatesmartfee,       true,        {\"nblocks\", \"conservative\"} },\n \n-    { \"hidden\",             \"estimaterawfee\",         &estimaterawfee,         true,  {\"nblocks\", \"threshold\"} },\n+    { \"hidden\",             \"/v1/node/\",  \"estimaterawfee\",         &estimaterawfee,         true,        {\"nblocks\", \"threshold\"} },\n };\n \n void RegisterMiningRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "492c45b078386037cce8b8ff87d822d1aba23f5f",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e390d1c821e3fd530bd2525a78d04976d0b6e11/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e390d1c821e3fd530bd2525a78d04976d0b6e11/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=6e390d1c821e3fd530bd2525a78d04976d0b6e11",
        "patch": "@@ -644,20 +644,20 @@ UniValue echo(const JSONRPCRequest& request)\n }\n \n static const CRPCCommand commands[] =\n-{ //  category              name                      actor (function)         okSafeMode\n-  //  --------------------- ------------------------  -----------------------  ----------\n-    { \"control\",            \"getinfo\",                &getinfo,                true,  {} }, /* uses wallet if enabled */\n-    { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          true,  {\"mode\"} },\n-    { \"util\",               \"validateaddress\",        &validateaddress,        true,  {\"address\"} }, /* uses wallet if enabled */\n-    { \"util\",               \"createmultisig\",         &createmultisig,         true,  {\"nrequired\",\"keys\"} },\n-    { \"util\",               \"verifymessage\",          &verifymessage,          true,  {\"address\",\"signature\",\"message\"} },\n-    { \"util\",               \"signmessagewithprivkey\", &signmessagewithprivkey, true,  {\"privkey\",\"message\"} },\n+{ //  category              endpoint      name                      actor (function)         okSafeMode  named args\n+  //  ------------------    ------------  ----------------------    -----------------------  ----------  ------------------\n+    { \"control\",            \"/v1/node/\",  \"getinfo\",                &getinfo,                true,       {} }, /* uses wallet if enabled */\n+    { \"control\",            \"/v1/node/\",  \"getmemoryinfo\",          &getmemoryinfo,          true,       {\"mode\"} },\n+    { \"util\",               \"/v1/*\",      \"validateaddress\",        &validateaddress,        true,       {\"address\"} }, /* uses wallet if enabled */\n+    { \"util\",               \"/v1/*\",      \"createmultisig\",         &createmultisig,         true,       {\"nrequired\",\"keys\"} },\n+    { \"util\",               \"/v1/node/\",  \"verifymessage\",          &verifymessage,          true,       {\"address\",\"signature\",\"message\"} },\n+    { \"util\",               \"/v1/node/\",  \"signmessagewithprivkey\", &signmessagewithprivkey, true,       {\"privkey\",\"message\"} },\n \n     /* Not shown in help */\n-    { \"hidden\",             \"setmocktime\",            &setmocktime,            true,  {\"timestamp\"}},\n-    { \"hidden\",             \"echo\",                   &echo,                   true,  {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n-    { \"hidden\",             \"echojson\",               &echo,                   true,  {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n-    { \"hidden\",             \"logging\",                &logging,                true,  {\"include\", \"exclude\"}},\n+    { \"hidden\",             \"/v1/node/\",  \"setmocktime\",            &setmocktime,            true,       {\"timestamp\"}},\n+    { \"hidden\",             \"/v1/node/\",  \"echo\",                   &echo,                   true,       {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n+    { \"hidden\",             \"/v1/node/\",  \"echojson\",               &echo,                   true,       {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n+    { \"hidden\",             \"/v1/node/\",  \"logging\",                &logging,                true,       {\"include\", \"exclude\"}},\n };\n \n void RegisterMiscRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "80fda27602ae80daa067728a5103b62ceb67ca8b",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e390d1c821e3fd530bd2525a78d04976d0b6e11/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e390d1c821e3fd530bd2525a78d04976d0b6e11/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=6e390d1c821e3fd530bd2525a78d04976d0b6e11",
        "patch": "@@ -622,20 +622,20 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n }\n \n static const CRPCCommand commands[] =\n-{ //  category              name                      actor (function)         okSafeMode\n-  //  --------------------- ------------------------  -----------------------  ----------\n-    { \"network\",            \"getconnectioncount\",     &getconnectioncount,     true,  {} },\n-    { \"network\",            \"ping\",                   &ping,                   true,  {} },\n-    { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true,  {} },\n-    { \"network\",            \"addnode\",                &addnode,                true,  {\"node\",\"command\"} },\n-    { \"network\",            \"disconnectnode\",         &disconnectnode,         true,  {\"address\", \"nodeid\"} },\n-    { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       true,  {\"node\"} },\n-    { \"network\",            \"getnettotals\",           &getnettotals,           true,  {} },\n-    { \"network\",            \"getnetworkinfo\",         &getnetworkinfo,         true,  {} },\n-    { \"network\",            \"setban\",                 &setban,                 true,  {\"subnet\", \"command\", \"bantime\", \"absolute\"} },\n-    { \"network\",            \"listbanned\",             &listbanned,             true,  {} },\n-    { \"network\",            \"clearbanned\",            &clearbanned,            true,  {} },\n-    { \"network\",            \"setnetworkactive\",       &setnetworkactive,       true,  {\"state\"} },\n+{ //  category              endpoint      name                      actor (function)         okSafeMode  named args\n+  //  ------------------    ------------  ----------------------    -----------------------  ----------  ------------------\n+    { \"network\",            \"/v1/node/\",  \"getconnectioncount\",     &getconnectioncount,     true,       {} },\n+    { \"network\",            \"/v1/node/\",  \"ping\",                   &ping,                   true,       {} },\n+    { \"network\",            \"/v1/node/\",  \"getpeerinfo\",            &getpeerinfo,            true,       {} },\n+    { \"network\",            \"/v1/node/\",  \"addnode\",                &addnode,                true,       {\"node\",\"command\"} },\n+    { \"network\",            \"/v1/node/\",  \"disconnectnode\",         &disconnectnode,         true,       {\"address\", \"nodeid\"} },\n+    { \"network\",            \"/v1/node/\",  \"getaddednodeinfo\",       &getaddednodeinfo,       true,       {\"node\"} },\n+    { \"network\",            \"/v1/node/\",  \"getnettotals\",           &getnettotals,           true,       {} },\n+    { \"network\",            \"/v1/node/\",  \"getnetworkinfo\",         &getnetworkinfo,         true,       {} },\n+    { \"network\",            \"/v1/node/\",  \"setban\",                 &setban,                 true,       {\"subnet\", \"command\", \"bantime\", \"absolute\"} },\n+    { \"network\",            \"/v1/node/\",  \"listbanned\",             &listbanned,             true,       {} },\n+    { \"network\",            \"/v1/node/\",  \"clearbanned\",            &clearbanned,            true,       {} },\n+    { \"network\",            \"/v1/node/\",  \"setnetworkactive\",       &setnetworkactive,       true,       {\"state\"} },\n };\n \n void RegisterNetRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "ab93002f29fe5d852684391ab085354968bae8fe",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e390d1c821e3fd530bd2525a78d04976d0b6e11/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e390d1c821e3fd530bd2525a78d04976d0b6e11/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=6e390d1c821e3fd530bd2525a78d04976d0b6e11",
        "patch": "@@ -898,17 +898,17 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n }\n \n static const CRPCCommand commands[] =\n-{ //  category              name                      actor (function)         okSafeMode\n-  //  --------------------- ------------------------  -----------------------  ----------\n-    { \"rawtransactions\",    \"getrawtransaction\",      &getrawtransaction,      true,  {\"txid\",\"verbose\"} },\n-    { \"rawtransactions\",    \"createrawtransaction\",   &createrawtransaction,   true,  {\"inputs\",\"outputs\",\"locktime\",\"replaceable\"} },\n-    { \"rawtransactions\",    \"decoderawtransaction\",   &decoderawtransaction,   true,  {\"hexstring\"} },\n-    { \"rawtransactions\",    \"decodescript\",           &decodescript,           true,  {\"hexstring\"} },\n-    { \"rawtransactions\",    \"sendrawtransaction\",     &sendrawtransaction,     false, {\"hexstring\",\"allowhighfees\"} },\n-    { \"rawtransactions\",    \"signrawtransaction\",     &signrawtransaction,     false, {\"hexstring\",\"prevtxs\",\"privkeys\",\"sighashtype\"} }, /* uses wallet if enabled */\n-\n-    { \"blockchain\",         \"gettxoutproof\",          &gettxoutproof,          true,  {\"txids\", \"blockhash\"} },\n-    { \"blockchain\",         \"verifytxoutproof\",       &verifytxoutproof,       true,  {\"proof\"} },\n+{ //  category              endpoint      name                      actor (function)         okSafeMode  named args\n+  //  ------------------    ------------  ----------------------    -----------------------  ----------  ------------------\n+    { \"rawtransactions\",    \"/v1/node/\",  \"getrawtransaction\",      &getrawtransaction,      true,       {\"txid\",\"verbose\"} },\n+    { \"rawtransactions\",    \"/v1/node/\",  \"createrawtransaction\",   &createrawtransaction,   true,       {\"inputs\",\"outputs\",\"locktime\",\"replaceable\"} },\n+    { \"rawtransactions\",    \"/v1/node/\",  \"decoderawtransaction\",   &decoderawtransaction,   true,       {\"hexstring\"} },\n+    { \"rawtransactions\",    \"/v1/node/\",  \"decodescript\",           &decodescript,           true,       {\"hexstring\"} },\n+    { \"rawtransactions\",    \"/v1/node/\",  \"sendrawtransaction\",     &sendrawtransaction,     false,      {\"hexstring\",\"allowhighfees\"} },\n+    { \"rawtransactions\",    \"/v1/*\",      \"signrawtransaction\",     &signrawtransaction,     false,      {\"hexstring\",\"prevtxs\",\"privkeys\",\"sighashtype\"} }, /* uses wallet if enabled */\n+\n+    { \"blockchain\",         \"/v1/node/\",  \"gettxoutproof\",          &gettxoutproof,          true,       {\"txids\", \"blockhash\"} },\n+    { \"blockchain\",         \"/v1/node/\",  \"verifytxoutproof\",       &verifytxoutproof,       true,       {\"proof\"} },\n };\n \n void RegisterRawTransactionRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "ab996dc6b86e22b6ea10fd4cb9dfac70dea746ee",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 3,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e390d1c821e3fd530bd2525a78d04976d0b6e11/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e390d1c821e3fd530bd2525a78d04976d0b6e11/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=6e390d1c821e3fd530bd2525a78d04976d0b6e11",
        "patch": "@@ -8,6 +8,7 @@\n #include \"base58.h\"\n #include \"fs.h\"\n #include \"init.h\"\n+#include \"httprpc.h\"\n #include \"random.h\"\n #include \"sync.h\"\n #include \"ui_interface.h\"\n@@ -280,9 +281,9 @@ static const CRPCCommand vRPCCommands[] =\n { //  category              name                      actor (function)         okSafe argNames\n   //  --------------------- ------------------------  -----------------------  ------ ----------\n     /* Overall control/query calls */\n-    { \"control\",            \"help\",                   &help,                   true,  {\"command\"}  },\n-    { \"control\",            \"stop\",                   &stop,                   true,  {}  },\n-    { \"control\",            \"uptime\",                 &uptime,                 true,  {}  },\n+    { \"control\",            \"/v1/*\"    , \"help\",                   &help,                   true,  {\"command\"}  },\n+    { \"control\",            \"/v1/node/\", \"stop\",                   &stop,                   true,  {}  },\n+    { \"control\",            \"/v1/node/\", \"uptime\",                 &uptime,                 true,  {}  },\n };\n \n CRPCTable::CRPCTable()\n@@ -310,6 +311,9 @@ bool CRPCTable::appendCommand(const std::string& name, const CRPCCommand* pcmd)\n     if (IsRPCRunning())\n         return false;\n \n+    // make sure we register the command endpoint\n+    RegisterJSONEndpoint(pcmd->endpoint, false);\n+\n     // don't allow overwriting for now\n     std::map<std::string, const CRPCCommand*>::const_iterator it = mapCommands.find(name);\n     if (it != mapCommands.end())\n@@ -494,6 +498,13 @@ UniValue CRPCTable::execute(const JSONRPCRequest &request) const\n     if (!pcmd)\n         throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"Method not found\");\n \n+    // enfore endpoint only for non / and \"\" endpoint (the later is used by the GUI)\n+    if (request.URI != \"\" && request.URI != \"/\") {\n+        // enforce correct endpoint usage\n+        if (pcmd->endpoint != \"/v1/*\" && (request.URI.size() < pcmd->endpoint.size() || request.URI.substr(0, pcmd->endpoint.size()) != pcmd->endpoint)) {\n+            throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"Incorrect endpoint used (called method has \"+pcmd->endpoint+\" as endpoint)\");\n+        }\n+    }\n     g_rpcSignals.PreCommand(*pcmd);\n \n     try"
      },
      {
        "sha": "60d0c7c06ceba9cafe7ed097110d9562c1d4d1d9",
        "filename": "src/rpc/server.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e390d1c821e3fd530bd2525a78d04976d0b6e11/src/rpc/server.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e390d1c821e3fd530bd2525a78d04976d0b6e11/src/rpc/server.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.h?ref=6e390d1c821e3fd530bd2525a78d04976d0b6e11",
        "patch": "@@ -132,6 +132,7 @@ class CRPCCommand\n {\n public:\n     std::string category;\n+    std::string endpoint;\n     std::string name;\n     rpcfn_type actor;\n     bool okSafeMode;"
      },
      {
        "sha": "b94e5bc8d0d86dddbcda5555e47661fd399bf416",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 53,
        "changes": 106,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e390d1c821e3fd530bd2525a78d04976d0b6e11/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e390d1c821e3fd530bd2525a78d04976d0b6e11/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=6e390d1c821e3fd530bd2525a78d04976d0b6e11",
        "patch": "@@ -3051,59 +3051,59 @@ extern UniValue removeprunedfunds(const JSONRPCRequest& request);\n extern UniValue importmulti(const JSONRPCRequest& request);\n \n static const CRPCCommand commands[] =\n-{ //  category              name                        actor (function)           okSafeMode\n-    //  --------------------- ------------------------    -----------------------    ----------\n-    { \"rawtransactions\",    \"fundrawtransaction\",       &fundrawtransaction,       false,  {\"hexstring\",\"options\"} },\n-    { \"hidden\",             \"resendwallettransactions\", &resendwallettransactions, true,   {} },\n-    { \"wallet\",             \"abandontransaction\",       &abandontransaction,       false,  {\"txid\"} },\n-    { \"wallet\",             \"abortrescan\",              &abortrescan,              false,  {} },\n-    { \"wallet\",             \"addmultisigaddress\",       &addmultisigaddress,       true,   {\"nrequired\",\"keys\",\"account\"} },\n-    { \"wallet\",             \"addwitnessaddress\",        &addwitnessaddress,        true,   {\"address\"} },\n-    { \"wallet\",             \"backupwallet\",             &backupwallet,             true,   {\"destination\"} },\n-    { \"wallet\",             \"bumpfee\",                  &bumpfee,                  true,   {\"txid\", \"options\"} },\n-    { \"wallet\",             \"dumpprivkey\",              &dumpprivkey,              true,   {\"address\"}  },\n-    { \"wallet\",             \"dumpwallet\",               &dumpwallet,               true,   {\"filename\"} },\n-    { \"wallet\",             \"encryptwallet\",            &encryptwallet,            true,   {\"passphrase\"} },\n-    { \"wallet\",             \"getaccountaddress\",        &getaccountaddress,        true,   {\"account\"} },\n-    { \"wallet\",             \"getaccount\",               &getaccount,               true,   {\"address\"} },\n-    { \"wallet\",             \"getaddressesbyaccount\",    &getaddressesbyaccount,    true,   {\"account\"} },\n-    { \"wallet\",             \"getbalance\",               &getbalance,               false,  {\"account\",\"minconf\",\"include_watchonly\"} },\n-    { \"wallet\",             \"getnewaddress\",            &getnewaddress,            true,   {\"account\"} },\n-    { \"wallet\",             \"getrawchangeaddress\",      &getrawchangeaddress,      true,   {} },\n-    { \"wallet\",             \"getreceivedbyaccount\",     &getreceivedbyaccount,     false,  {\"account\",\"minconf\"} },\n-    { \"wallet\",             \"getreceivedbyaddress\",     &getreceivedbyaddress,     false,  {\"address\",\"minconf\"} },\n-    { \"wallet\",             \"gettransaction\",           &gettransaction,           false,  {\"txid\",\"include_watchonly\"} },\n-    { \"wallet\",             \"getunconfirmedbalance\",    &getunconfirmedbalance,    false,  {} },\n-    { \"wallet\",             \"getwalletinfo\",            &getwalletinfo,            false,  {} },\n-    { \"wallet\",             \"importmulti\",              &importmulti,              true,   {\"requests\",\"options\"} },\n-    { \"wallet\",             \"importprivkey\",            &importprivkey,            true,   {\"privkey\",\"label\",\"rescan\"} },\n-    { \"wallet\",             \"importwallet\",             &importwallet,             true,   {\"filename\"} },\n-    { \"wallet\",             \"importaddress\",            &importaddress,            true,   {\"address\",\"label\",\"rescan\",\"p2sh\"} },\n-    { \"wallet\",             \"importprunedfunds\",        &importprunedfunds,        true,   {\"rawtransaction\",\"txoutproof\"} },\n-    { \"wallet\",             \"importpubkey\",             &importpubkey,             true,   {\"pubkey\",\"label\",\"rescan\"} },\n-    { \"wallet\",             \"keypoolrefill\",            &keypoolrefill,            true,   {\"newsize\"} },\n-    { \"wallet\",             \"listaccounts\",             &listaccounts,             false,  {\"minconf\",\"include_watchonly\"} },\n-    { \"wallet\",             \"listaddressgroupings\",     &listaddressgroupings,     false,  {} },\n-    { \"wallet\",             \"listlockunspent\",          &listlockunspent,          false,  {} },\n-    { \"wallet\",             \"listreceivedbyaccount\",    &listreceivedbyaccount,    false,  {\"minconf\",\"include_empty\",\"include_watchonly\"} },\n-    { \"wallet\",             \"listreceivedbyaddress\",    &listreceivedbyaddress,    false,  {\"minconf\",\"include_empty\",\"include_watchonly\"} },\n-    { \"wallet\",             \"listsinceblock\",           &listsinceblock,           false,  {\"blockhash\",\"target_confirmations\",\"include_watchonly\"} },\n-    { \"wallet\",             \"listtransactions\",         &listtransactions,         false,  {\"account\",\"count\",\"skip\",\"include_watchonly\"} },\n-    { \"wallet\",             \"listunspent\",              &listunspent,              false,  {\"minconf\",\"maxconf\",\"addresses\",\"include_unsafe\",\"query_options\"} },\n-    { \"wallet\",             \"lockunspent\",              &lockunspent,              true,   {\"unlock\",\"transactions\"} },\n-    { \"wallet\",             \"move\",                     &movecmd,                  false,  {\"fromaccount\",\"toaccount\",\"amount\",\"minconf\",\"comment\"} },\n-    { \"wallet\",             \"sendfrom\",                 &sendfrom,                 false,  {\"fromaccount\",\"toaddress\",\"amount\",\"minconf\",\"comment\",\"comment_to\"} },\n-    { \"wallet\",             \"sendmany\",                 &sendmany,                 false,  {\"fromaccount\",\"amounts\",\"minconf\",\"comment\",\"subtractfeefrom\",\"replaceable\",\"conf_target\",\"estimate_mode\"} },\n-    { \"wallet\",             \"sendtoaddress\",            &sendtoaddress,            false,  {\"address\",\"amount\",\"comment\",\"comment_to\",\"subtractfeefromamount\",\"replaceable\",\"conf_target\",\"estimate_mode\"} },\n-    { \"wallet\",             \"setaccount\",               &setaccount,               true,   {\"address\",\"account\"} },\n-    { \"wallet\",             \"settxfee\",                 &settxfee,                 true,   {\"amount\"} },\n-    { \"wallet\",             \"signmessage\",              &signmessage,              true,   {\"address\",\"message\"} },\n-    { \"wallet\",             \"walletlock\",               &walletlock,               true,   {} },\n-    { \"wallet\",             \"walletpassphrasechange\",   &walletpassphrasechange,   true,   {\"oldpassphrase\",\"newpassphrase\"} },\n-    { \"wallet\",             \"walletpassphrase\",         &walletpassphrase,         true,   {\"passphrase\",\"timeout\"} },\n-    { \"wallet\",             \"removeprunedfunds\",        &removeprunedfunds,        true,   {\"txid\"} },\n-\n-    { \"generating\",         \"generate\",                 &generate,                 true,   {\"nblocks\",\"maxtries\"} },\n+{   //  category            endpoint        name                        actor (function)           okSafeMode  named args\n+    //  ------------------  --------------  ------------------------    -----------------------    ----------  ------------------\n+    { \"rawtransactions\",    \"/v1/wallet/\",  \"fundrawtransaction\",       &fundrawtransaction,       false,      {\"hexstring\",\"options\"} },\n+    { \"hidden\",             \"/v1/wallet/\",  \"resendwallettransactions\", &resendwallettransactions, true,       {} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"abandontransaction\",       &abandontransaction,       false,      {\"txid\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"abortrescan\",              &abortrescan,              false,      {} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"addmultisigaddress\",       &addmultisigaddress,       true,       {\"nrequired\",\"keys\",\"account\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"addwitnessaddress\",        &addwitnessaddress,        true,       {\"address\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"backupwallet\",             &backupwallet,             true,       {\"destination\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"bumpfee\",                  &bumpfee,                  true,       {\"txid\", \"options\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"dumpprivkey\",              &dumpprivkey,              true,       {\"address\"}  },\n+    { \"wallet\",             \"/v1/wallet/\",  \"dumpwallet\",               &dumpwallet,               true,       {\"filename\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"encryptwallet\",            &encryptwallet,            true,       {\"passphrase\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"getaccountaddress\",        &getaccountaddress,        true,       {\"account\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"getaccount\",               &getaccount,               true,       {\"address\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"getaddressesbyaccount\",    &getaddressesbyaccount,    true,       {\"account\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"getbalance\",               &getbalance,               false,      {\"account\",\"minconf\",\"include_watchonly\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"getnewaddress\",            &getnewaddress,            true,       {\"account\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"getrawchangeaddress\",      &getrawchangeaddress,      true,       {} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"getreceivedbyaccount\",     &getreceivedbyaccount,     false,      {\"account\",\"minconf\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"getreceivedbyaddress\",     &getreceivedbyaddress,     false,      {\"address\",\"minconf\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"gettransaction\",           &gettransaction,           false,      {\"txid\",\"include_watchonly\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"getunconfirmedbalance\",    &getunconfirmedbalance,    false,      {} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"getwalletinfo\",            &getwalletinfo,            false,      {} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"importmulti\",              &importmulti,              true,       {\"requests\",\"options\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"importprivkey\",            &importprivkey,            true,       {\"privkey\",\"label\",\"rescan\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"importwallet\",             &importwallet,             true,       {\"filename\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"importaddress\",            &importaddress,            true,       {\"address\",\"label\",\"rescan\",\"p2sh\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"importprunedfunds\",        &importprunedfunds,        true,       {\"rawtransaction\",\"txoutproof\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"importpubkey\",             &importpubkey,             true,       {\"pubkey\",\"label\",\"rescan\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"keypoolrefill\",            &keypoolrefill,            true,       {\"newsize\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"listaccounts\",             &listaccounts,             false,      {\"minconf\",\"include_watchonly\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"listaddressgroupings\",     &listaddressgroupings,     false,      {} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"listlockunspent\",          &listlockunspent,          false,      {} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"listreceivedbyaccount\",    &listreceivedbyaccount,    false,      {\"minconf\",\"include_empty\",\"include_watchonly\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"listreceivedbyaddress\",    &listreceivedbyaddress,    false,      {\"minconf\",\"include_empty\",\"include_watchonly\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"listsinceblock\",           &listsinceblock,           false,      {\"blockhash\",\"target_confirmations\",\"include_watchonly\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"listtransactions\",         &listtransactions,         false,      {\"account\",\"count\",\"skip\",\"include_watchonly\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"listunspent\",              &listunspent,              false,      {\"minconf\",\"maxconf\",\"addresses\",\"include_unsafe\",\"query_options\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"lockunspent\",              &lockunspent,              true,       {\"unlock\",\"transactions\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"move\",                     &movecmd,                  false,      {\"fromaccount\",\"toaccount\",\"amount\",\"minconf\",\"comment\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"sendfrom\",                 &sendfrom,                 false,      {\"fromaccount\",\"toaddress\",\"amount\",\"minconf\",\"comment\",\"comment_to\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"sendmany\",                 &sendmany,                 false,      {\"fromaccount\",\"amounts\",\"minconf\",\"comment\",\"subtractfeefrom\",\"replaceable\",\"conf_target\",\"estimate_mode\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"sendtoaddress\",            &sendtoaddress,            false,      {\"address\",\"amount\",\"comment\",\"comment_to\",\"subtractfeefromamount\",\"replaceable\",\"conf_target\",\"estimate_mode\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"setaccount\",               &setaccount,               true,       {\"address\",\"account\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"settxfee\",                 &settxfee,                 true,       {\"amount\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"signmessage\",              &signmessage,              true,       {\"address\",\"message\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"walletlock\",               &walletlock,               true,       {} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"walletpassphrasechange\",   &walletpassphrasechange,   true,       {\"oldpassphrase\",\"newpassphrase\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"walletpassphrase\",         &walletpassphrase,         true,       {\"passphrase\",\"timeout\"} },\n+    { \"wallet\",             \"/v1/wallet/\",  \"removeprunedfunds\",        &removeprunedfunds,        true,       {\"txid\"} },\n+\n+    { \"generating\",         \"/v1/wallet/\",  \"generate\",                 &generate,                 true,       {\"nblocks\",\"maxtries\"} },\n };\n \n void RegisterWalletRPCCommands(CRPCTable &t)"
      }
    ]
  },
  {
    "sha": "7506021afa733a55d2d5ef5543c7f59e311658eb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NTA2MDIxYWZhNzMzYTU1ZDJkNWVmNTU0M2M3ZjU5ZTMxMTY1OGVi",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-07-13T15:06:27Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-07-14T07:52:34Z"
      },
      "message": "Add wallet endpoint support to bitcoin-cli (-usewallet)",
      "tree": {
        "sha": "b5c2fbf4975c45fd6f2d48be9cb7cdaf183b24cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b5c2fbf4975c45fd6f2d48be9cb7cdaf183b24cf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7506021afa733a55d2d5ef5543c7f59e311658eb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlloeFAACgkQHrd2uwPH\nki2Y+RAAn1iKwQp2h53TWh28di6bvdcnpRI23krOlxVy3QBNxVrsQWKwvSpJe5Wq\nBNkivX3TloqAnIcRJyDMY0O+Miqn4MZpJ63/WcSSAguFKhpVn/dJXsUgdutqOi3c\nxY1wfi5ntmwPzLT0alGNdYBZcw/z+zHPV00o4U8NTllTV+rOAg3saFGHK0fMA56D\nxgfdqXlWP2iI/VVanLudyp9iWSyJJdad4hsCoiynN4a4aIicpmml4mErAIXqVLsS\ne8jXbI85jCKfSXgu2GPR0Diy+OfgMt/N6Rm5G3PdN1ugL+CLEkiU+MyCPdSb8sgd\nXejl23OzXp/D8VNGo90xAphR575gVmxivun09G5w5bpNYJmxQswh//QJs77/ersX\nKjifxu01//XP2UQVRWZEMcCPW0TjYBRR3bnGgjFmab/i/opX9coq4NCwytU3O3fR\njPd/bQakO/e4eJBrMDVgXfGdSiayRenZq8KFiuxCVbNSIQZXE7r5tipz4qY/5Ysl\nOLCSAT0rc0CvgQpH4MvUcwx0/WRknXlpYxndxnsu7tfqk9Ptk6r3ZP5466gekJvq\n+hJt4wcdjEG7x4RnPRbCqfHqjWBBJXm+3RTLkyr9k/supV2dljj1/O7DAPamtoab\nqJzopZFpe29Nyy58MSLwhi47zBxP/RS4Eu1z2wMPv0OBQFSDyvg=\n=Rn3e\n-----END PGP SIGNATURE-----",
        "payload": "tree b5c2fbf4975c45fd6f2d48be9cb7cdaf183b24cf\nparent 6e390d1c821e3fd530bd2525a78d04976d0b6e11\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1499958387 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1500018754 +0200\n\nAdd wallet endpoint support to bitcoin-cli (-usewallet)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7506021afa733a55d2d5ef5543c7f59e311658eb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7506021afa733a55d2d5ef5543c7f59e311658eb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7506021afa733a55d2d5ef5543c7f59e311658eb/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e390d1c821e3fd530bd2525a78d04976d0b6e11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e390d1c821e3fd530bd2525a78d04976d0b6e11",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e390d1c821e3fd530bd2525a78d04976d0b6e11"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 8,
      "deletions": 1
    },
    "files": [
      {
        "sha": "78d2b66815fd6f1625e1a383167b40d3155b0ecd",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7506021afa733a55d2d5ef5543c7f59e311658eb/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7506021afa733a55d2d5ef5543c7f59e311658eb/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=7506021afa733a55d2d5ef5543c7f59e311658eb",
        "patch": "@@ -46,6 +46,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcpassword=<pw>\", _(\"Password for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases)\"));\n+    strUsage += HelpMessageOpt(\"-usewallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (argument is wallet filename in bitcoind directory, required if bitcoind/-Qt runs with multiple wallets)\"));\n \n     return strUsage;\n }\n@@ -235,7 +236,13 @@ UniValue CallRPC(const std::string& strMethod, const UniValue& params)\n     assert(output_buffer);\n     evbuffer_add(output_buffer, strRequest.data(), strRequest.size());\n \n-    int r = evhttp_make_request(evcon.get(), req.get(), EVHTTP_REQ_POST, \"/\");\n+    // check if we should use a special wallet endpoint\n+    std::string endpoint = \"/\";\n+    if (GetArg(\"-usewallet\", \"\") != \"\") {\n+        // always use v1 endpoint if -usewallet has been provided\n+        endpoint = \"/v1/wallet/\"+GetArg(\"-usewallet\", \"\");\n+    }\n+    int r = evhttp_make_request(evcon.get(), req.get(), EVHTTP_REQ_POST, endpoint.c_str());\n     req.release(); // ownership moved to evcon in above call\n     if (r != 0) {\n         throw CConnectionFailed(\"send http request failed\");"
      }
    ]
  },
  {
    "sha": "f232ef53ecc36dc6350d2407c6031ede7920f0a1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMjMyZWY1M2VjYzM2ZGM2MzUwZDI0MDdjNjAzMWVkZTc5MjBmMGEx",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-07-13T15:08:42Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-07-14T07:53:25Z"
      },
      "message": "Add urlencode/decode via libevent2",
      "tree": {
        "sha": "2cc795c62181c0c53ef4fd484442c071c1b22295",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2cc795c62181c0c53ef4fd484442c071c1b22295"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f232ef53ecc36dc6350d2407c6031ede7920f0a1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlloeHcACgkQHrd2uwPH\nki2VtQ/5AX+pDfA33t7FNRcAAyJyHcibKqQbqcQFq3ygML208Bk9EsNDG//KgTbu\nJZFPFC0UFpF7yWOJvZ/GmOVmwTz+5kecxMA1MVMsqfcdYs/tg9wHCAYM16/BfaP5\nGAS5IBKudAm2P9JzlRjTncaI8jW6g6UJnrFlXIeCBFWZTdR6V5cautH+rDoVz9s0\nyylnDaiTBGgnGb+9Wjn21Zk6rDeXF5n3iIjS3muCZe/T06ITho8Ei3i/NmLzFl4T\n0CNZl1ZBGYpAli00D0Ldo5Erdsh2hIIXc80k05s74m95SLQ/82mzjyonaqkvifu9\nWq81j0R/sWlrMthIViZDl53wxmsWiLbGLkNuemwJEzrmXFhvaMNp/fb+DbsUkgrQ\ndJQTIhPwTWspv9B1Zf6edbkZXCEi/HB+4RwgsVdRLqNGFjSansJeaaqJ1iSxb/lr\n1np6xA0KwBT+TSKEN1zKNgKThgZUb1ep/sv0VgZOJcnohObfgYxxso9LJpb3JAh4\ngYB0FXhYTMaEEJsXp1R/ASF/x3a1i9dc0tSP+JK1aezLHns1/lWh8NeWvgxAdSEC\no0Ef+1hJG1DZxrLmbo+80G30ww9quopvHjvC7uSVtd79kWZXgczbFMwd+TiWopkZ\nkcPqh06hiByBo1DXMQgRLv2XiIQA6DPCdccZXO1XWdcSnaATGok=\n=dQup\n-----END PGP SIGNATURE-----",
        "payload": "tree 2cc795c62181c0c53ef4fd484442c071c1b22295\nparent 7506021afa733a55d2d5ef5543c7f59e311658eb\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1499958522 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1500018805 +0200\n\nAdd urlencode/decode via libevent2\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f232ef53ecc36dc6350d2407c6031ede7920f0a1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f232ef53ecc36dc6350d2407c6031ede7920f0a1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f232ef53ecc36dc6350d2407c6031ede7920f0a1/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7506021afa733a55d2d5ef5543c7f59e311658eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7506021afa733a55d2d5ef5543c7f59e311658eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7506021afa733a55d2d5ef5543c7f59e311658eb"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 23,
      "deletions": 2
    },
    "files": [
      {
        "sha": "623b3ccb95f1d6eb219e830f31a27e5e5e1fd430",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f232ef53ecc36dc6350d2407c6031ede7920f0a1/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f232ef53ecc36dc6350d2407c6031ede7920f0a1/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=f232ef53ecc36dc6350d2407c6031ede7920f0a1",
        "patch": "@@ -238,9 +238,17 @@ UniValue CallRPC(const std::string& strMethod, const UniValue& params)\n \n     // check if we should use a special wallet endpoint\n     std::string endpoint = \"/\";\n-    if (GetArg(\"-usewallet\", \"\") != \"\") {\n+    std::string walletName = GetArg(\"-usewallet\", \"\");\n+    if (walletName != \"\") {\n         // always use v1 endpoint if -usewallet has been provided\n-        endpoint = \"/v1/wallet/\"+GetArg(\"-usewallet\", \"\");\n+        char *encodedURI = evhttp_uriencode(walletName.c_str(), walletName.size(), false);\n+        if (encodedURI) {\n+            endpoint = \"/v1/wallet/\"+ std::string(encodedURI);\n+            free(encodedURI);\n+        }\n+        else {\n+            throw CConnectionFailed(\"uri-encode failed\");\n+        }\n     }\n     int r = evhttp_make_request(evcon.get(), req.get(), EVHTTP_REQ_POST, endpoint.c_str());\n     req.release(); // ownership moved to evcon in above call"
      },
      {
        "sha": "117ed00f3126b5047329e64701c602f833643657",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f232ef53ecc36dc6350d2407c6031ede7920f0a1/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f232ef53ecc36dc6350d2407c6031ede7920f0a1/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=f232ef53ecc36dc6350d2407c6031ede7920f0a1",
        "patch": "@@ -669,3 +669,14 @@ void UnregisterHTTPHandler(const std::string &prefix, bool exactMatch)\n     }\n }\n \n+std::string urlDecode(const std::string &urlEncoded) {\n+    std::string res;\n+    if (!urlEncoded.empty()) {\n+        char *decoded = evhttp_uridecode(urlEncoded.c_str(), false, NULL);\n+        if (decoded) {\n+            res = std::string(decoded);\n+            free(decoded);\n+        }\n+    }\n+    return res;\n+}"
      },
      {
        "sha": "3e434bf0a0b263ae1a26924710f29f2c5a33bf79",
        "filename": "src/httpserver.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f232ef53ecc36dc6350d2407c6031ede7920f0a1/src/httpserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f232ef53ecc36dc6350d2407c6031ede7920f0a1/src/httpserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.h?ref=f232ef53ecc36dc6350d2407c6031ede7920f0a1",
        "patch": "@@ -148,4 +148,6 @@ class HTTPEvent\n     struct event* ev;\n };\n \n+std::string urlDecode(const std::string &urlEncoded);\n+\n #endif // BITCOIN_HTTPSERVER_H"
      }
    ]
  },
  {
    "sha": "19fe32fc54f05f5e654d88430136e58b23fd2e7b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOWZlMzJmYzU0ZjA1ZjVlNjU0ZDg4NDMwMTM2ZTU4YjIzZmQyZTdi",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-07-13T15:15:45Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-07-14T07:53:27Z"
      },
      "message": "Select wallet based on the given endpoint",
      "tree": {
        "sha": "23a2341012cee1a71405802c992458f8dbf73db8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23a2341012cee1a71405802c992458f8dbf73db8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/19fe32fc54f05f5e654d88430136e58b23fd2e7b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlloeHcACgkQHrd2uwPH\nki0quA/5AQZlM7GwgUwfNdJDuy3AeN3Jjtzdt6WHYXdvGyei8aKaZ6Ih++c7E3jK\ns9JtilgmzNGE3nvb+dlyQFy4Ky9eaUgQyYueuUAzlpv0+pt8cLb/JzXWA+WK4wUK\nnTIcR7KtRAkE8sCv2HGZZpPre7o8k2B3UgrRoKvDMX67YDGMLtEBYVhzFFJBjIyN\nvoVR/NsimRVrqxT6fncLX5jBDrkrvFevzeiyvJC/pV1CQzWPrn3jf6iXO5R/yxWe\nD1IeRoxiuGeXaMgYyGwjpkPwgYYqwsdY8yBco7Ve2eRRsvs+fiiN58nImUDfFke6\nIzBSOKv0Wvrh/nAJvWVDBBMM5zp5ETEXTnHEF85eMaI070B/mYU/Ss/Mq4sjr2OB\n4VcyPaPRfDbGGTVQaOCxyNRISPuhzeFXKT65W80/mtimUldHJtsuMVW5Y14xkNw/\n7Ip9Rl4DwSlb/+oT6tJqvLnLf1XCuw4IgX7+vNYoTFeyv52NCiv5AmFGjy1o/55w\nMfhLsMXvEhe3Tr++Jt0LQfmDbEH37EOnpa0EWS3sx0hYOBQ5SkKAOTMeauWbqiW7\nWCP9287WFt8UdSucXxMl9/jbpklMg1VaCJbvbZ5DCyUleDT7ygtS7Zjp/+TonO1A\nBhvTozMOze0e/l1rxmAs/bvAyxA+8TPw2P6e4tVNvfZAZN98UfY=\n=liDY\n-----END PGP SIGNATURE-----",
        "payload": "tree 23a2341012cee1a71405802c992458f8dbf73db8\nparent f232ef53ecc36dc6350d2407c6031ede7920f0a1\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1499958945 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1500018807 +0200\n\nSelect wallet based on the given endpoint\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19fe32fc54f05f5e654d88430136e58b23fd2e7b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/19fe32fc54f05f5e654d88430136e58b23fd2e7b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19fe32fc54f05f5e654d88430136e58b23fd2e7b/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f232ef53ecc36dc6350d2407c6031ede7920f0a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f232ef53ecc36dc6350d2407c6031ede7920f0a1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f232ef53ecc36dc6350d2407c6031ede7920f0a1"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 23,
      "deletions": 2
    },
    "files": [
      {
        "sha": "86056ad49b2deca9ed14eb3c21e5a24c16855190",
        "filename": "src/rpc/protocol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19fe32fc54f05f5e654d88430136e58b23fd2e7b/src/rpc/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19fe32fc54f05f5e654d88430136e58b23fd2e7b/src/rpc/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/protocol.h?ref=19fe32fc54f05f5e654d88430136e58b23fd2e7b",
        "patch": "@@ -82,6 +82,7 @@ enum RPCErrorCode\n     RPC_WALLET_WRONG_ENC_STATE      = -15, //!< Command given in wrong wallet encryption state (encrypting an encrypted wallet etc.)\n     RPC_WALLET_ENCRYPTION_FAILED    = -16, //!< Failed to encrypt the wallet\n     RPC_WALLET_ALREADY_UNLOCKED     = -17, //!< Wallet is already unlocked\n+    RPC_WALLET_NOT_FOUND            = -18, //!< Wallet not found (multiwallet)\n };\n \n UniValue JSONRPCRequestObj(const std::string& strMethod, const UniValue& params, const UniValue& id);"
      },
      {
        "sha": "ca7a9358b7b0176b02f5be2fffb1f50ef654e4b2",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 2,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19fe32fc54f05f5e654d88430136e58b23fd2e7b/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19fe32fc54f05f5e654d88430136e58b23fd2e7b/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=19fe32fc54f05f5e654d88430136e58b23fd2e7b",
        "patch": "@@ -9,6 +9,7 @@\n #include \"consensus/validation.h\"\n #include \"core_io.h\"\n #include \"init.h\"\n+#include \"httpserver.h\"\n #include \"validation.h\"\n #include \"net.h\"\n #include \"policy/feerate.h\"\n@@ -30,10 +31,29 @@\n \n #include <univalue.h>\n \n+static const std::string WALLET_ENDPOINT_BASE = \"/v1/wallet/\";\n+\n CWallet *GetWalletForJSONRPCRequest(const JSONRPCRequest& request)\n {\n-    // TODO: Some way to access secondary wallets\n-    return vpwallets.empty() ? nullptr : vpwallets[0];\n+    if (request.URI.substr(0, WALLET_ENDPOINT_BASE.size()) == WALLET_ENDPOINT_BASE) {\n+        // wallet endpoint was used\n+        std::string requestedWallet = urlDecode(request.URI.substr(WALLET_ENDPOINT_BASE.size()));\n+        for (CWalletRef pwallet : vpwallets) {\n+            if (pwallet->GetName() == requestedWallet) {\n+                return pwallet;\n+            }\n+        }\n+        // no wallet found with the given endpoint\n+        throw JSONRPCError(RPC_WALLET_NOT_FOUND, \"Wallet file does not exist or is not loaded\");\n+    }\n+    else {\n+        if (vpwallets.size() > 1 && !request.fHelp) {\n+            // don't allow to use a default wallet in multiwallet\n+            return nullptr;\n+        }\n+        // default endpoint, use first wallet if possible\n+        return vpwallets.empty() ? nullptr : vpwallets[0];\n+    }\n }\n \n std::string HelpRequiringPassphrase(CWallet * const pwallet)"
      }
    ]
  },
  {
    "sha": "555b51d2e73f1c535b9c60cc6d56ec7530ad3712",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NTViNTFkMmU3M2YxYzUzNWI5YzYwY2M2ZDU2ZWM3NTMwYWQzNzEy",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-07-07T14:03:24Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-07-14T07:53:27Z"
      },
      "message": "Fix test_bitcoin circular dependency issue",
      "tree": {
        "sha": "575f1b7ae89bf448ea81fbc55a2577f1c98c6a42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/575f1b7ae89bf448ea81fbc55a2577f1c98c6a42"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/555b51d2e73f1c535b9c60cc6d56ec7530ad3712",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlloeHcACgkQHrd2uwPH\nki12tA//W6L8dU/0bMZTvYVU7gCcTv60iD2lkZTYp7QV92CQ4lbLXkD27dk/a2it\nJiSR4wwu0fmtkrbHR0HjaG9Uo4VIFGagcfLzD8NFDWCSW45kMGlxLoCppRemLk/b\n7654iyN1QGdhtca0odkJehDN568Ae9SWW+hxBDlTn1ctB/IixbW5LT1Gn5evRdgJ\niRYjOHLqW9SjBAEe+X7w+dm1D+HLXiNLWPvXKwEPXP8uMlsGV1muPGiaRIx8AJzt\n8sOD4x6/NMGDrYoty6MuwOgXx/YQ0qHeD6hH2UqrvRCRhtcFjO5rmMP1rgFsgkKy\nRbHQIozjB9rk50o+StrisBwOePtO05Kq7tRPz72z4j+pP7F+dWk6Ni+VyeEG/lEU\nxypRrgL1kHyJQk9uQiwkp6dD8YV8ZgBgattvNfJjbTxVb39nia9BGo7tB0PsdF1D\nBIVV7qUh103BlFRmB/F9btHZG+o816j6g2JG/FxaEywnL7z76PMAnm9aCum4i2CB\n/XdT//wSOWr4cjsvR2hwsNkQXu7JVYj78mlFHiimJBjvGiy0n/b8iqlsGaoBhqZa\nbYyIPxxeUqXbJ2cxACGz/5myGMbIGN/wxnGk7r3PDqljEH9VyanYiRIEIXvkD+Fj\nI+gOikWeDDedbAneqCseQ0Qnn5+HPSsDYg+6CJ89TEMLOX8rnCE=\n=PPVn\n-----END PGP SIGNATURE-----",
        "payload": "tree 575f1b7ae89bf448ea81fbc55a2577f1c98c6a42\nparent 19fe32fc54f05f5e654d88430136e58b23fd2e7b\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1499436204 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1500018807 +0200\n\nFix test_bitcoin circular dependency issue\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/555b51d2e73f1c535b9c60cc6d56ec7530ad3712",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/555b51d2e73f1c535b9c60cc6d56ec7530ad3712",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/555b51d2e73f1c535b9c60cc6d56ec7530ad3712/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "19fe32fc54f05f5e654d88430136e58b23fd2e7b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19fe32fc54f05f5e654d88430136e58b23fd2e7b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/19fe32fc54f05f5e654d88430136e58b23fd2e7b"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "6415b3d2e3399fa9971e017e979bd9a84bf8f96c",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/555b51d2e73f1c535b9c60cc6d56ec7530ad3712/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/555b51d2e73f1c535b9c60cc6d56ec7530ad3712/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=555b51d2e73f1c535b9c60cc6d56ec7530ad3712",
        "patch": "@@ -96,12 +96,13 @@ endif\n \n test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS) $(EVENT_CFLAGS)\n-test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) \\\n-  $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS) $(EVENT_PTHREADS_LIBS)\n-test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_test_bitcoin_LDADD =\n if ENABLE_WALLET\n test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n endif\n+test_test_bitcoin_LDADD += $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) \\\n+  $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS) $(EVENT_PTHREADS_LIBS)\n+test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n test_test_bitcoin_LDADD += $(LIBBITCOIN_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static"
      }
    ]
  },
  {
    "sha": "9710df955dbfc6687600e34263e57d903776bd31",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NzEwZGY5NTVkYmZjNjY4NzYwMGUzNDI2M2U1N2Q5MDM3NzZiZDMx",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-07-13T14:53:42Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-07-14T07:53:27Z"
      },
      "message": "[tests] [wallet] Add wallet endpoint support to authproxy",
      "tree": {
        "sha": "1e5abbcbf132151e15cfd488fe897092c83fc810",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1e5abbcbf132151e15cfd488fe897092c83fc810"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9710df955dbfc6687600e34263e57d903776bd31",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlloeHcACgkQHrd2uwPH\nki3p7A//YoRzMDR2/c933pPSozTjNHJKlK0i1XWbCMfjbPCLCeT77jysHxKh1T9V\nzcppDrToiWYU+z9P3DUSoT1o9SObxkc5kjlnOhulu8BHAnVQsGrLn+09/tVTSlHX\nkA6uolqas7OYLiLiIb6BykslQS4FqSudtCG1pZpbmWbcglMmM/196RcE+TiymOEQ\nALgE6go1tQf1XgxHF6ItG1GOb9huGk3bAHuEVBkFXx+HH8IMtG+NK7LYVDU/6p0l\nzsnwtjG18F9L0BesRbLNH3Tu+LjnWZIivaeoZ1vLammVIfRRufjfSIaPECslX2CL\nkAnIXZw8CaUR/kH1PjESVoY8fOakS+Z9l6D9UcyPIk0tfQO8RiREVplqanOQ4snY\nqIIOnMNDcisXX+nfwin0YCaVOgIzSlfdvwU2KZIR1QcwcmnfEtmArSci2gyWRyKK\nGnJ11xm3Gr6qm2rHsLP0pFZltFMg+mZtFttoVNRq1wX8B6ipZjgoRzpqX5DfOKCJ\n9JdJubUhm1vL76ITmG0DJQuXAUqsYjK3JZY66JPjgv7W1OySIuj8yRw/Kuzx9sbU\nD5Q8oetmompWYYoE+0HxWnRLID5+vKS6GcG8mpzh8xPlYNgDchfBe7bOId7ecOOX\nqyMSD79ehA1wIZ/pElgBnyoJ+hfsFI4pnmAn5LfZKVVSv1muP8o=\n=umpD\n-----END PGP SIGNATURE-----",
        "payload": "tree 1e5abbcbf132151e15cfd488fe897092c83fc810\nparent 555b51d2e73f1c535b9c60cc6d56ec7530ad3712\nauthor John Newbery <john@johnnewbery.com> 1499957622 -0400\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1500018807 +0200\n\n[tests] [wallet] Add wallet endpoint support to authproxy\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9710df955dbfc6687600e34263e57d903776bd31",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9710df955dbfc6687600e34263e57d903776bd31",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9710df955dbfc6687600e34263e57d903776bd31/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "555b51d2e73f1c535b9c60cc6d56ec7530ad3712",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/555b51d2e73f1c535b9c60cc6d56ec7530ad3712",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/555b51d2e73f1c535b9c60cc6d56ec7530ad3712"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b3671cbdc51ed3ed272c9c84d0119060b6e62d98",
        "filename": "test/functional/test_framework/authproxy.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9710df955dbfc6687600e34263e57d903776bd31/test/functional/test_framework/authproxy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9710df955dbfc6687600e34263e57d903776bd31/test/functional/test_framework/authproxy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/authproxy.py?ref=9710df955dbfc6687600e34263e57d903776bd31",
        "patch": "@@ -191,3 +191,6 @@ def _get_response(self):\n         else:\n             log.debug(\"<-- [%.6f] %s\"%(elapsed,responsedata))\n         return response\n+\n+    def __truediv__(self, relative_uri):\n+        return AuthServiceProxy(\"{}/{}\".format(self.__service_url, relative_uri), self._service_name, connection=self.__conn)"
      },
      {
        "sha": "227b1a17afbea0dee0ffef49ef5c84adb1e06133",
        "filename": "test/functional/test_framework/coverage.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9710df955dbfc6687600e34263e57d903776bd31/test/functional/test_framework/coverage.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9710df955dbfc6687600e34263e57d903776bd31/test/functional/test_framework/coverage.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/coverage.py?ref=9710df955dbfc6687600e34263e57d903776bd31",
        "patch": "@@ -56,6 +56,8 @@ def __call__(self, *args, **kwargs):\n     def url(self):\n         return self.auth_service_proxy_instance.url\n \n+    def __truediv__(self, relative_uri):\n+        return AuthServiceProxyWrapper(self.auth_service_proxy_instance / relative_uri)\n \n def get_filename(dirname, n_node):\n     \"\"\""
      }
    ]
  },
  {
    "sha": "759dc37f3de53f660c73650c0678f1ee6544490b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NTlkYzM3ZjNkZTUzZjY2MGM3MzY1MGMwNjc4ZjFlZTY1NDQ0OTBi",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-07-13T15:49:46Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-07-14T07:53:28Z"
      },
      "message": "[QA] add basic multiwallet test",
      "tree": {
        "sha": "148701a70fb504753020339baae52ed62faf71ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/148701a70fb504753020339baae52ed62faf71ee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/759dc37f3de53f660c73650c0678f1ee6544490b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlloeHgACgkQHrd2uwPH\nki2tdRAAvQSsLBMZTAFs/TtWr592fLzxtzN/fn9j9cPeCyLv98oP5xfuQ3gyo87i\n1mN/gwKJ4dwuKLEeRmysS08IIFdSXn+jVqKGsZeDyy4WwLf6EufN1eabFH/ofrnm\neaXYT9iKM+0GWaDdYL4IBWGkQZj2OPtAHPOn5vnp5Cb4osbiWgaFdvJQ2DOTnEyh\nqzReyO1KB2+7OXOliVZpFb4TiQlUtTUPrStgmcx3uz7zF/9NeT0b0qM6bpNJGvWb\nWHs2p4PWV/5CAwtP92nRQ3QUcnwNu49zRIoayatJpIoVEFfa8WKJJRb90dMW/mBZ\nTnSKfvGmZGewBg7kz3eRTT9g0MxbMLTOd/zPKTvS8nDSYkyIlRL4k5rhMBtcCMCi\ne3YB5P7Jxw725K2VVjaazst8w1H+V8Ai5kW3+fvCL3wzQZKMHxWaFzXaM6q4+ZxO\nUsy6g/2G1AXOIyT+hfCnUEZISwIsUYC3XyChkgxBF8lhcyRgX04ycwln+RoeHhmx\nGRnZeGWiZj3LTfR3xgS3Wq4xV0ndj4OTXb7T2SD+aymjIXujBOu8Gg+xLppQ7lY0\nqb7go1Jm0vc4HUK1KypiqP10L7PfRJoAmWTBdJQHq4NV9BrhcvXJV1eePbr34DgP\n9WTQIk/FHhT7J7FNvjC5EImHzgspFaUdt7vUeE+9udyQeKRO56k=\n=typC\n-----END PGP SIGNATURE-----",
        "payload": "tree 148701a70fb504753020339baae52ed62faf71ee\nparent 9710df955dbfc6687600e34263e57d903776bd31\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1499960986 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1500018808 +0200\n\n[QA] add basic multiwallet test\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/759dc37f3de53f660c73650c0678f1ee6544490b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/759dc37f3de53f660c73650c0678f1ee6544490b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/759dc37f3de53f660c73650c0678f1ee6544490b/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9710df955dbfc6687600e34263e57d903776bd31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9710df955dbfc6687600e34263e57d903776bd31",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9710df955dbfc6687600e34263e57d903776bd31"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 48,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6fcab4ce89d262a87fb9673aa85045630237209e",
        "filename": "test/functional/multiwallet.py",
        "status": "added",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/759dc37f3de53f660c73650c0678f1ee6544490b/test/functional/multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/759dc37f3de53f660c73650c0678f1ee6544490b/test/functional/multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/multiwallet.py?ref=759dc37f3de53f660c73650c0678f1ee6544490b",
        "patch": "@@ -0,0 +1,47 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test multiwallet.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class MultiWalletTest(BitcoinTestFramework):\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [['-wallet=w1', '-wallet=w2', '-wallet=w3']]\n+\n+    def run_test(self):\n+        w1 = self.nodes[0] / \"v1/wallet/w1\"\n+        w1.generate(1)\n+\n+        #accessing wallet RPC without using wallet endpoint fails\n+        assert_raises_jsonrpc(-32601, \"Method not found\", self.nodes[0].getwalletinfo)\n+\n+        #check w1 wallet balance\n+        walletinfo = w1.getwalletinfo()\n+        assert_equal(walletinfo['immature_balance'], 50)\n+\n+        #check w1 wallet balance\n+        w2 = self.nodes[0] / \"v1/wallet/w2\"\n+        walletinfo = w2.getwalletinfo()\n+        assert_equal(walletinfo['immature_balance'], 0)\n+\n+        w3 = self.nodes[0] / \"v1/wallet/w3\"\n+        \n+        w1.generate(101)\n+        assert_equal(w1.getbalance(), 100)\n+        assert_equal(w2.getbalance(), 0)\n+        assert_equal(w3.getbalance(), 0)\n+\n+        w1.sendtoaddress(w2.getnewaddress(), 1)\n+        w1.sendtoaddress(w3.getnewaddress(), 2)\n+        w1.generate(1)\n+        assert_equal(w2.getbalance(), 1)\n+        assert_equal(w3.getbalance(), 2)\n+\n+if __name__ == '__main__':\n+    MultiWalletTest().main()"
      },
      {
        "sha": "51577589fe0843fcd8ac5a94073aa697411a49a4",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/759dc37f3de53f660c73650c0678f1ee6544490b/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/759dc37f3de53f660c73650c0678f1ee6544490b/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=759dc37f3de53f660c73650c0678f1ee6544490b",
        "patch": "@@ -63,6 +63,7 @@\n     'segwit.py',\n     # vv Tests less than 2m vv\n     'wallet.py',\n+    'multiwallet.py',\n     'wallet-accounts.py',\n     'p2p-segwit.py',\n     'wallet-dump.py',"
      }
    ]
  }
]