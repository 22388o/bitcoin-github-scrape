laanwj,2020-04-13 13:02:15,ACK 88884ee8d8dcd5303b20e54801b03f9631959c76,https://github.com/bitcoin/bitcoin/pull/18621#issuecomment-612888515,612888515,
promag,2020-04-13 13:57:46,ACK 88884ee8d8dcd5303b20e54801b03f9631959c76.,https://github.com/bitcoin/bitcoin/pull/18621#issuecomment-612909540,612909540,
DrahtBot,2020-04-13 16:37:05,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18612 (script: Remove undocumented and unused operator+ by MarcoFalke)\n\nIf you consider this pull request important, pl",https://github.com/bitcoin/bitcoin/pull/18621#issuecomment-612978495,612978495,
practicalswift,2020-04-13 17:11:46,"ACK 88884ee8d8dcd5303b20e54801b03f9631959c76\n\n`explicit` is better than implicit.\n\nMore generally I think we should err on the safe side and only allow implicit conversions via explicit opt-in (instead of disallowing via explicit opt-out) :)",https://github.com/bitcoin/bitcoin/pull/18621#issuecomment-612994113,612994113,
MarcoFalke,2020-04-13 17:53:18,">  But might be worth verifying this PR doesn't change compiler output.\n\nI get the same bin with gcc/clang on O2",https://github.com/bitcoin/bitcoin/pull/18621#issuecomment-613013029,613013029,
sipa,2020-04-13 18:27:49,"@ryanofsky FWIW, that is not true in general.\n\nThe following code\n\n```c++\n#include <stdio.h>\n\nstruct A { };\nstruct B : public A { };\nstruct C {\n    C(const A&) {printf(""A\n"");}\n    C(const B&) {printf(""B\n"");}\n};\n\nint main(void) {\n    const B objb = B();\n    const C objc = objb;\n\n    return 0;\n}\n```\n\nwill print `B`. When the `C::C(const B&)` constructor ",https://github.com/bitcoin/bitcoin/pull/18621#issuecomment-613028667,613028667,
instagibbs,2020-04-14 17:22:04,utACK 88884ee8d8dcd5303b20e54801b03f9631959c76,https://github.com/bitcoin/bitcoin/pull/18621#issuecomment-613572417,613572417,
ryanofsky,2020-04-14 18:14:44,"> @ryanofsky FWIW, that is not true in general.\n\nThanks, makes sense! I was thinking implicit constructor conversions would be pretty low in precedence but it makes sense derived-to-base conversions are lower",https://github.com/bitcoin/bitcoin/pull/18621#issuecomment-613599039,613599039,
