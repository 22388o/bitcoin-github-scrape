[
  {
    "sha": "06e263a4e368671ebb4e4a77c1447ebd5104a488",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNmUyNjNhNGUzNjg2NzFlYmI0ZTRhNzdjMTQ0N2ViZDUxMDRhNDg4",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-07-06T18:32:17Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-07-22T15:55:15Z"
      },
      "message": "Call RecoverDatabaseFile directly from wallettool\n\nWhen using the salvage command, call RecoverDatabaseFile directly\ninstead of SalvageWallet. Also removes SalvageWallet as it is no longer\nneeded.\n\nSalvageWallet was doing an additional verify on the database which would\ncaause the salvage to sometimes fail. This is not needed.",
      "tree": {
        "sha": "12c2bf74941e2621907de512aa62140687f57157",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/12c2bf74941e2621907de512aa62140687f57157"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06e263a4e368671ebb4e4a77c1447ebd5104a488",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06e263a4e368671ebb4e4a77c1447ebd5104a488",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/06e263a4e368671ebb4e4a77c1447ebd5104a488",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06e263a4e368671ebb4e4a77c1447ebd5104a488/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7b4968552c704f1e2e9a046911e1207f5af5fe0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7b4968552c704f1e2e9a046911e1207f5af5fe0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7b4968552c704f1e2e9a046911e1207f5af5fe0"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 1,
      "deletions": 22
    },
    "files": [
      {
        "sha": "1e699658e4780f681cb74f33e5ff552aa4e2b98e",
        "filename": "src/wallet/wallettool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 22,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06e263a4e368671ebb4e4a77c1447ebd5104a488/src/wallet/wallettool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06e263a4e368671ebb4e4a77c1447ebd5104a488/src/wallet/wallettool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallettool.cpp?ref=06e263a4e368671ebb4e4a77c1447ebd5104a488",
        "patch": "@@ -104,27 +104,6 @@ static void WalletShowInfo(CWallet* wallet_instance)\n     tfm::format(std::cout, \"Address Book: %zu\\n\", wallet_instance->m_address_book.size());\n }\n \n-static bool SalvageWallet(const fs::path& path)\n-{\n-    // Create a Database handle to allow for the db to be initialized before recovery\n-    std::unique_ptr<WalletDatabase> database = CreateWalletDatabase(path);\n-\n-    // Initialize the environment before recovery\n-    bilingual_str error_string;\n-    try {\n-        database->Verify(error_string);\n-    } catch (const fs::filesystem_error& e) {\n-        error_string = Untranslated(strprintf(\"Error loading wallet. %s\", fsbridge::get_filesystem_error_message(e)));\n-    }\n-    if (!error_string.original.empty()) {\n-        tfm::format(std::cerr, \"Failed to open wallet for salvage :%s\\n\", error_string.original);\n-        return false;\n-    }\n-\n-    // Perform the recovery\n-    return RecoverDatabaseFile(path);\n-}\n-\n bool ExecuteWalletToolFunc(const std::string& command, const std::string& name)\n {\n     fs::path path = fs::absolute(name, GetWalletDir());\n@@ -147,7 +126,7 @@ bool ExecuteWalletToolFunc(const std::string& command, const std::string& name)\n             WalletShowInfo(wallet_instance.get());\n             wallet_instance->Flush(true);\n         } else if (command == \"salvage\") {\n-            return SalvageWallet(path);\n+            return RecoverDatabaseFile(path);\n         }\n     } else {\n         tfm::format(std::cerr, \"Invalid command: %s\\n\", command);"
      }
    ]
  },
  {
    "sha": "9f536d4fe949666f14a0bf5b814522cecde71f56",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZjUzNmQ0ZmU5NDk2NjZmMTRhMGJmNWI4MTQ1MjJjZWNkZTcxZjU2",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-07-06T18:34:49Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-07-27T00:22:45Z"
      },
      "message": "wallettool: Have RecoverDatabaseFile return errors and warnings\n\nInstead of logging or printing these errors and warnings, return them to\nthe caller.",
      "tree": {
        "sha": "8e9ad411b07c37a653ce4db46bad9df976a975fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e9ad411b07c37a653ce4db46bad9df976a975fa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9f536d4fe949666f14a0bf5b814522cecde71f56",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f536d4fe949666f14a0bf5b814522cecde71f56",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9f536d4fe949666f14a0bf5b814522cecde71f56",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f536d4fe949666f14a0bf5b814522cecde71f56/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "06e263a4e368671ebb4e4a77c1447ebd5104a488",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06e263a4e368671ebb4e4a77c1447ebd5104a488",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/06e263a4e368671ebb4e4a77c1447ebd5104a488"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 26,
      "deletions": 18
    },
    "files": [
      {
        "sha": "c0755db7518afc2a70cdc7b364114ae86a7971a5",
        "filename": "src/wallet/salvage.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 16,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f536d4fe949666f14a0bf5b814522cecde71f56/src/wallet/salvage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f536d4fe949666f14a0bf5b814522cecde71f56/src/wallet/salvage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/salvage.cpp?ref=9f536d4fe949666f14a0bf5b814522cecde71f56",
        "patch": "@@ -16,14 +16,12 @@ static const char *HEADER_END = \"HEADER=END\";\n static const char *DATA_END = \"DATA=END\";\n typedef std::pair<std::vector<unsigned char>, std::vector<unsigned char> > KeyValPair;\n \n-bool RecoverDatabaseFile(const fs::path& file_path)\n+bool RecoverDatabaseFile(const fs::path& file_path, bilingual_str& error, std::vector<bilingual_str>& warnings)\n {\n     std::string filename;\n     std::shared_ptr<BerkeleyEnvironment> env = GetWalletEnv(file_path, filename);\n \n-    bilingual_str open_err;\n-    if (!env->Open(open_err)) {\n-        tfm::format(std::cerr, \"%s\\n\", open_err.original);\n+    if (!env->Open(error)) {\n         return false;\n     }\n \n@@ -39,11 +37,9 @@ bool RecoverDatabaseFile(const fs::path& file_path)\n \n     int result = env->dbenv->dbrename(nullptr, filename.c_str(), nullptr,\n                                        newFilename.c_str(), DB_AUTO_COMMIT);\n-    if (result == 0)\n-        LogPrintf(\"Renamed %s to %s\\n\", filename, newFilename);\n-    else\n+    if (result != 0)\n     {\n-        LogPrintf(\"Failed to rename %s to %s\\n\", filename, newFilename);\n+        error = strprintf(Untranslated(\"Failed to rename %s to %s\"), filename, newFilename);\n         return false;\n     }\n \n@@ -60,10 +56,10 @@ bool RecoverDatabaseFile(const fs::path& file_path)\n     Db db(env->dbenv.get(), 0);\n     result = db.verify(newFilename.c_str(), nullptr, &strDump, DB_SALVAGE | DB_AGGRESSIVE);\n     if (result == DB_VERIFY_BAD) {\n-        LogPrintf(\"Salvage: Database salvage found errors, all data may not be recoverable.\\n\");\n+        warnings.push_back(Untranslated(\"Salvage: Database salvage found errors, all data may not be recoverable.\"));\n     }\n     if (result != 0 && result != DB_VERIFY_BAD) {\n-        LogPrintf(\"Salvage: Database salvage failed with result %d.\\n\", result);\n+        error = strprintf(Untranslated(\"Salvage: Database salvage failed with result %d.\"), result);\n         return false;\n     }\n \n@@ -87,7 +83,7 @@ bool RecoverDatabaseFile(const fs::path& file_path)\n                 break;\n             getline(strDump, valueHex);\n             if (valueHex == DATA_END) {\n-                LogPrintf(\"Salvage: WARNING: Number of keys in data does not match number of values.\\n\");\n+                warnings.push_back(Untranslated(\"Salvage: WARNING: Number of keys in data does not match number of values.\"));\n                 break;\n             }\n             salvagedData.push_back(make_pair(ParseHex(keyHex), ParseHex(valueHex)));\n@@ -96,18 +92,17 @@ bool RecoverDatabaseFile(const fs::path& file_path)\n \n     bool fSuccess;\n     if (keyHex != DATA_END) {\n-        LogPrintf(\"Salvage: WARNING: Unexpected end of file while reading salvage output.\\n\");\n+        warnings.push_back(Untranslated(\"Salvage: WARNING: Unexpected end of file while reading salvage output.\"));\n         fSuccess = false;\n     } else {\n         fSuccess = (result == 0);\n     }\n \n     if (salvagedData.empty())\n     {\n-        LogPrintf(\"Salvage(aggressive) found no records in %s.\\n\", newFilename);\n+        error = strprintf(Untranslated(\"Salvage(aggressive) found no records in %s.\"), newFilename);\n         return false;\n     }\n-    LogPrintf(\"Salvage(aggressive) found %u records\\n\", salvagedData.size());\n \n     std::unique_ptr<Db> pdbCopy = MakeUnique<Db>(env->dbenv.get(), 0);\n     int ret = pdbCopy->open(nullptr,               // Txn pointer\n@@ -117,7 +112,7 @@ bool RecoverDatabaseFile(const fs::path& file_path)\n                             DB_CREATE,          // Flags\n                             0);\n     if (ret > 0) {\n-        LogPrintf(\"Cannot create database file %s\\n\", filename);\n+        error = strprintf(Untranslated(\"Cannot create database file %s\"), filename);\n         pdbCopy->close(0);\n         return false;\n     }\n@@ -141,7 +136,7 @@ bool RecoverDatabaseFile(const fs::path& file_path)\n         }\n         if (!fReadOK)\n         {\n-            LogPrintf(\"WARNING: WalletBatch::Recover skipping %s: %s\\n\", strType, strErr);\n+            warnings.push_back(strprintf(Untranslated(\"WARNING: WalletBatch::Recover skipping %s: %s\"), strType, strErr));\n             continue;\n         }\n         Dbt datKey(&row.first[0], row.first.size());"
      },
      {
        "sha": "5a8538f94222cf96b6f3ff03af4e130e7ba21afa",
        "filename": "src/wallet/salvage.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f536d4fe949666f14a0bf5b814522cecde71f56/src/wallet/salvage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f536d4fe949666f14a0bf5b814522cecde71f56/src/wallet/salvage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/salvage.h?ref=9f536d4fe949666f14a0bf5b814522cecde71f56",
        "patch": "@@ -9,6 +9,8 @@\n #include <fs.h>\n #include <streams.h>\n \n-bool RecoverDatabaseFile(const fs::path& file_path);\n+struct bilingual_str;\n+\n+bool RecoverDatabaseFile(const fs::path& file_path, bilingual_str& error, std::vector<bilingual_str>& warnings);\n \n #endif // BITCOIN_WALLET_SALVAGE_H"
      },
      {
        "sha": "5cabefcbfc23d166277de21a92b6325e76d7dace",
        "filename": "src/wallet/wallettool.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f536d4fe949666f14a0bf5b814522cecde71f56/src/wallet/wallettool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f536d4fe949666f14a0bf5b814522cecde71f56/src/wallet/wallettool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallettool.cpp?ref=9f536d4fe949666f14a0bf5b814522cecde71f56",
        "patch": "@@ -126,7 +126,18 @@ bool ExecuteWalletToolFunc(const std::string& command, const std::string& name)\n             WalletShowInfo(wallet_instance.get());\n             wallet_instance->Flush(true);\n         } else if (command == \"salvage\") {\n-            return RecoverDatabaseFile(path);\n+            bilingual_str error;\n+            std::vector<bilingual_str> warnings;\n+            bool ret = RecoverDatabaseFile(path, error, warnings);\n+            if (!ret) {\n+                for (const auto warning : warnings) {\n+                    tfm::format(std::cerr, \"%s\\n\", warning.original);\n+                }\n+                if (!error.empty()) {\n+                    tfm::format(std::cerr, \"%s\\n\", error.original);\n+                }\n+            }\n+            return ret;\n         }\n     } else {\n         tfm::format(std::cerr, \"Invalid command: %s\\n\", command);"
      }
    ]
  },
  {
    "sha": "0e279fe4899beae8630264ef1fe420dd71f29d5d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZTI3OWZlNDg5OWJlYWU4NjMwMjY0ZWYxZmU0MjBkZDcxZjI5ZDVk",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-07-06T18:38:35Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-07-27T00:22:49Z"
      },
      "message": "walletdb: Remove unused static functions from walletdb.h\n\nVerifyEnvironment and VerifyDatabaseFile were removed, but their\ndeclarations weren't. Remove those.",
      "tree": {
        "sha": "0975073ac2a23aacb92555e48002b41d439142a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0975073ac2a23aacb92555e48002b41d439142a8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e279fe4899beae8630264ef1fe420dd71f29d5d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e279fe4899beae8630264ef1fe420dd71f29d5d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0e279fe4899beae8630264ef1fe420dd71f29d5d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e279fe4899beae8630264ef1fe420dd71f29d5d/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9f536d4fe949666f14a0bf5b814522cecde71f56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f536d4fe949666f14a0bf5b814522cecde71f56",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9f536d4fe949666f14a0bf5b814522cecde71f56"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 0,
      "deletions": 4
    },
    "files": [
      {
        "sha": "292f831ac39c601084a11e282a7d95b48900e0ce",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e279fe4899beae8630264ef1fe420dd71f29d5d/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e279fe4899beae8630264ef1fe420dd71f29d5d/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=0e279fe4899beae8630264ef1fe420dd71f29d5d",
        "patch": "@@ -264,10 +264,6 @@ class WalletBatch\n     DBErrors ZapSelectTx(std::vector<uint256>& vHashIn, std::vector<uint256>& vHashOut);\n     /* Function to determine if a certain KV/key-type is a key (cryptographical key) type */\n     static bool IsKeyType(const std::string& strType);\n-    /* verifies the database environment */\n-    static bool VerifyEnvironment(const fs::path& wallet_path, bilingual_str& errorStr);\n-    /* verifies the database file */\n-    static bool VerifyDatabaseFile(const fs::path& wallet_path, bilingual_str& errorStr);\n \n     //! write the hdchain model (external chain child index counter)\n     bool WriteHDChain(const CHDChain& chain);"
      }
    ]
  }
]