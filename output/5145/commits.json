[
  {
    "sha": "6395ba30366949b8631a7bf56c1898f1667284c8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2Mzk1YmEzMDM2Njk0OWI4NjMxYTdiZjU2YzE4OThmMTY2NzI4NGM4",
    "commit": {
      "author": {
        "name": "Michael Ford",
        "email": "fanquake@gmail.com",
        "date": "2014-10-26T06:32:29Z"
      },
      "committer": {
        "name": "Michael Ford",
        "email": "fanquake@gmail.com",
        "date": "2014-10-31T00:20:17Z"
      },
      "message": "Update comments in version to be doxygen compatible",
      "tree": {
        "sha": "4be226b0b5743d5710669a04660fb790172889f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4be226b0b5743d5710669a04660fb790172889f5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6395ba30366949b8631a7bf56c1898f1667284c8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6395ba30366949b8631a7bf56c1898f1667284c8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6395ba30366949b8631a7bf56c1898f1667284c8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6395ba30366949b8631a7bf56c1898f1667284c8/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8d2396c9c41cbd5b8746f48f41180697f58b0681",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d2396c9c41cbd5b8746f48f41180697f58b0681",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8d2396c9c41cbd5b8746f48f41180697f58b0681"
      }
    ],
    "stats": {
      "total": 80,
      "additions": 44,
      "deletions": 36
    },
    "files": [
      {
        "sha": "b3414fdb4b5d2df6e9e0975c47aeb4c3071d872e",
        "filename": "src/clientversion.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 23,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6395ba30366949b8631a7bf56c1898f1667284c8/src/clientversion.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6395ba30366949b8631a7bf56c1898f1667284c8/src/clientversion.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.cpp?ref=6395ba30366949b8631a7bf56c1898f1667284c8",
        "patch": "@@ -1,5 +1,5 @@\n-// Copyright (c) 2012 The Bitcoin developers\n-// Distributed under the MIT/X11 software license, see the accompanying\n+// Copyright (c) 2012-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"clientversion.h\"\n@@ -8,35 +8,41 @@\n \n #include <string>\n \n-// Name of client reported in the 'version' message. Report the same name\n-// for both bitcoind and bitcoin-qt, to make it harder for attackers to\n-// target servers or GUI users specifically.\n+/**\n+ * Name of client reported in the 'version' message. Report the same name\n+ * for both bitcoind and bitcoin-core, to make it harder for attackers to\n+ * target servers or GUI users specifically.\n+ */\n const std::string CLIENT_NAME(\"Satoshi\");\n \n-// Client version number\n+/**\n+ * Client version number\n+ */\n #define CLIENT_VERSION_SUFFIX \"\"\n \n \n-// The following part of the code determines the CLIENT_BUILD variable.\n-// Several mechanisms are used for this:\n-// * first, if HAVE_BUILD_INFO is defined, include build.h, a file that is\n-//   generated by the build environment, possibly containing the output\n-//   of git-describe in a macro called BUILD_DESC\n-// * secondly, if this is an exported version of the code, GIT_ARCHIVE will\n-//   be defined (automatically using the export-subst git attribute), and\n-//   GIT_COMMIT will contain the commit id.\n-// * then, three options exist for determining CLIENT_BUILD:\n-//   * if BUILD_DESC is defined, use that literally (output of git-describe)\n-//   * if not, but GIT_COMMIT is defined, use v[maj].[min].[rev].[build]-g[commit]\n-//   * otherwise, use v[maj].[min].[rev].[build]-unk\n-// finally CLIENT_VERSION_SUFFIX is added\n-\n-// First, include build.h if requested\n+/**\n+ * The following part of the code determines the CLIENT_BUILD variable.\n+ * Several mechanisms are used for this:\n+ * * first, if HAVE_BUILD_INFO is defined, include build.h, a file that is\n+ *   generated by the build environment, possibly containing the output\n+ *   of git-describe in a macro called BUILD_DESC\n+ * * secondly, if this is an exported version of the code, GIT_ARCHIVE will\n+ *   be defined (automatically using the export-subst git attribute), and\n+ *   GIT_COMMIT will contain the commit id.\n+ * * then, three options exist for determining CLIENT_BUILD:\n+ *   * if BUILD_DESC is defined, use that literally (output of git-describe)\n+ *   * if not, but GIT_COMMIT is defined, use v[maj].[min].[rev].[build]-g[commit]\n+ *   * otherwise, use v[maj].[min].[rev].[build]-unk\n+ * finally CLIENT_VERSION_SUFFIX is added\n+ */\n+\n+//! First, include build.h if requested\n #ifdef HAVE_BUILD_INFO\n #include \"build.h\"\n #endif\n \n-// git will put \"#define GIT_ARCHIVE 1\" on the next line inside archives. $Format:%n#define GIT_ARCHIVE 1$\n+//! git will put \"#define GIT_ARCHIVE 1\" on the next line inside archives. $Format:%n#define GIT_ARCHIVE 1$\n #ifdef GIT_ARCHIVE\n #define GIT_COMMIT_ID \"$Format:%h$\"\n #define GIT_COMMIT_DATE \"$Format:%cD$\"\n@@ -85,7 +91,9 @@ std::string FormatFullVersion()\n     return CLIENT_BUILD;\n }\n \n-// Format the subversion field according to BIP 14 spec (https://en.bitcoin.it/wiki/BIP_0014)\n+/** \n+ * Format the subversion field according to BIP 14 spec (https://github.com/bitcoin/bips/blob/master/bip-0014.mediawiki) \n+ */\n std::string FormatSubVersion(const std::string& name, int nClientVersion, const std::vector<std::string>& comments)\n {\n     std::ostringstream ss;"
      },
      {
        "sha": "a5a72c5467b34b434bc14025d7d600f830953c5a",
        "filename": "src/version.h",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6395ba30366949b8631a7bf56c1898f1667284c8/src/version.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6395ba30366949b8631a7bf56c1898f1667284c8/src/version.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.h?ref=6395ba30366949b8631a7bf56c1898f1667284c8",
        "patch": "@@ -1,37 +1,37 @@\n-// Copyright (c) 2012 The Bitcoin developers\n-// Distributed under the MIT/X11 software license, see the accompanying\n+// Copyright (c) 2012-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #ifndef BITCOIN_VERSION_H\n #define BITCOIN_VERSION_H\n \n-//\n-// network protocol versioning\n-//\n+/**\n+ * network protocol versioning\n+ */\n \n static const int PROTOCOL_VERSION = 70002;\n \n-// initial proto version, to be increased after version/verack negotiation\n+//! initial proto version, to be increased after version/verack negotiation\n static const int INIT_PROTO_VERSION = 209;\n \n-// In this version, 'getheaders' was introduced.\n+//! In this version, 'getheaders' was introduced.\n static const int GETHEADERS_VERSION = 31800;\n \n-// disconnect from peers older than this proto version\n+//! disconnect from peers older than this proto version\n static const int MIN_PEER_PROTO_VERSION = GETHEADERS_VERSION;\n \n-// nTime field added to CAddress, starting with this version;\n-// if possible, avoid requesting addresses nodes older than this\n+//! nTime field added to CAddress, starting with this version;\n+//! if possible, avoid requesting addresses nodes older than this\n static const int CADDR_TIME_VERSION = 31402;\n \n-// only request blocks from nodes outside this range of versions\n+//! only request blocks from nodes outside this range of versions\n static const int NOBLKS_VERSION_START = 32000;\n static const int NOBLKS_VERSION_END = 32400;\n \n-// BIP 0031, pong message, is enabled for all versions AFTER this one\n+//! BIP 0031, pong message, is enabled for all versions AFTER this one\n static const int BIP0031_VERSION = 60000;\n \n-// \"mempool\" command, enhanced \"getdata\" behavior starts with this version\n+//! \"mempool\" command, enhanced \"getdata\" behavior starts with this version\n static const int MEMPOOL_GD_VERSION = 60002;\n \n #endif // BITCOIN_VERSION_H"
      }
    ]
  },
  {
    "sha": "484e350f0428d3d0ad067238866b99b2780cb0cf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ODRlMzUwZjA0MjhkM2QwYWQwNjcyMzg4NjZiOTliMjc4MGNiMGNm",
    "commit": {
      "author": {
        "name": "Michael Ford",
        "email": "fanquake@gmail.com",
        "date": "2014-10-26T08:32:04Z"
      },
      "committer": {
        "name": "Michael Ford",
        "email": "fanquake@gmail.com",
        "date": "2014-10-31T00:27:27Z"
      },
      "message": "Update comments in client version to be doxygen compatible",
      "tree": {
        "sha": "0fcda907929d320de61d5cc3b6b9fa05042477e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0fcda907929d320de61d5cc3b6b9fa05042477e9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/484e350f0428d3d0ad067238866b99b2780cb0cf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/484e350f0428d3d0ad067238866b99b2780cb0cf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/484e350f0428d3d0ad067238866b99b2780cb0cf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/484e350f0428d3d0ad067238866b99b2780cb0cf/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6395ba30366949b8631a7bf56c1898f1667284c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6395ba30366949b8631a7bf56c1898f1667284c8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6395ba30366949b8631a7bf56c1898f1667284c8"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 21,
      "deletions": 16
    },
    "files": [
      {
        "sha": "a187e185c11df317dc2a9756bcd2512f28a3b2a8",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 21,
        "deletions": 16,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/484e350f0428d3d0ad067238866b99b2780cb0cf/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/484e350f0428d3d0ad067238866b99b2780cb0cf/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=484e350f0428d3d0ad067238866b99b2780cb0cf",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2014 The Bitcoin developers\n-// Distributed under the MIT/X11 software license, see the accompanying\n+// Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #ifndef CLIENTVERSION_H\n@@ -8,38 +8,43 @@\n #if defined(HAVE_CONFIG_H)\n #include \"config/bitcoin-config.h\"\n #else\n-//\n-// client versioning and copyright year\n-//\n \n-// These need to be macros, as version.cpp's and bitcoin*-res.rc's voodoo requires it\n+/**\n+ * client versioning and copyright year\n+ */\n+\n+//! These need to be macros, as clientversion.cpp's and bitcoin*-res.rc's voodoo requires it\n #define CLIENT_VERSION_MAJOR 0\n #define CLIENT_VERSION_MINOR 9\n #define CLIENT_VERSION_REVISION 99\n #define CLIENT_VERSION_BUILD 0\n \n-// Set to true for release, false for prerelease or test build\n+//! Set to true for release, false for prerelease or test build\n #define CLIENT_VERSION_IS_RELEASE false\n \n-// Copyright year (2009-this)\n-// Todo: update this when changing our copyright comments in the source\n+/**\n+ * Copyright year (2009-this)\n+ * Todo: update this when changing our copyright comments in the source\n+ */\n #define COPYRIGHT_YEAR 2014\n \n #endif //HAVE_CONFIG_H\n \n-// Converts the parameter X to a string after macro replacement on X has been performed.\n-// Don't merge these into one macro!\n+/**\n+ * Converts the parameter X to a string after macro replacement on X has been performed.\n+ * Don't merge these into one macro!\n+ */\n #define STRINGIZE(X) DO_STRINGIZE(X)\n #define DO_STRINGIZE(X) #X\n \n-// Copyright string used in Windows .rc files\n+//! Copyright string used in Windows .rc files\n #define COPYRIGHT_STR \"2009-\" STRINGIZE(COPYRIGHT_YEAR) \" The Bitcoin Core Developers\"\n \n-/*\n-  bitcoind-res.rc includes this file, but it cannot cope with real c++ code.\n-  WINDRES_PREPROC is defined to indicate that its pre-processor is running.\n-  Anything other than a define should be guarded below.\n-*/\n+/**\n+ * bitcoind-res.rc includes this file, but it cannot cope with real c++ code.\n+ * WINDRES_PREPROC is defined to indicate that its pre-processor is running.\n+ * Anything other than a define should be guarded below.\n+ */\n \n #if !defined(WINDRES_PREPROC)\n "
      }
    ]
  }
]