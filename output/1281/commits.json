[
  {
    "sha": "44095c1fa0258a0467ee476e1a448ac450f797e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NDA5NWMxZmEwMjU4YTA0NjdlZTQ3NmUxYTQ0OGFjNDUwZjc5N2U5",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@exmulti.com",
        "date": "2012-05-13T05:58:28Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@redhat.com",
        "date": "2012-05-13T05:58:28Z"
      },
      "message": "Prefer direct access to cached pathDataDir, rather than calling a function",
      "tree": {
        "sha": "3cbbdb22637ffd1a5b8869c5ad79e98509073c3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3cbbdb22637ffd1a5b8869c5ad79e98509073c3a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/44095c1fa0258a0467ee476e1a448ac450f797e9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44095c1fa0258a0467ee476e1a448ac450f797e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/44095c1fa0258a0467ee476e1a448ac450f797e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44095c1fa0258a0467ee476e1a448ac450f797e9/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "22db3f2c773a1277310e760e86b6f3ea7e60f522",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22db3f2c773a1277310e760e86b6f3ea7e60f522",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/22db3f2c773a1277310e760e86b6f3ea7e60f522"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 24,
      "deletions": 18
    },
    "files": [
      {
        "sha": "a226f8da0899c78882671f4d1ec7a65099b0fc68",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44095c1fa0258a0467ee476e1a448ac450f797e9/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44095c1fa0258a0467ee476e1a448ac450f797e9/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=44095c1fa0258a0467ee476e1a448ac450f797e9",
        "patch": "@@ -2680,12 +2680,12 @@ void ThreadRPCServer2(void* parg)\n         context.set_options(ssl::context::no_sslv2);\n \n         filesystem::path pathCertFile(GetArg(\"-rpcsslcertificatechainfile\", \"server.cert\"));\n-        if (!pathCertFile.is_complete()) pathCertFile = filesystem::path(GetDataDir()) / pathCertFile;\n+        if (!pathCertFile.is_complete()) pathCertFile = pathDataDir / pathCertFile;\n         if (filesystem::exists(pathCertFile)) context.use_certificate_chain_file(pathCertFile.string());\n         else printf(\"ThreadRPCServer ERROR: missing server certificate file %s\\n\", pathCertFile.string().c_str());\n \n         filesystem::path pathPKFile(GetArg(\"-rpcsslprivatekeyfile\", \"server.pem\"));\n-        if (!pathPKFile.is_complete()) pathPKFile = filesystem::path(GetDataDir()) / pathPKFile;\n+        if (!pathPKFile.is_complete()) pathPKFile = pathDataDir / pathPKFile;\n         if (filesystem::exists(pathPKFile)) context.use_private_key_file(pathPKFile.string(), ssl::context::pem);\n         else printf(\"ThreadRPCServer ERROR: missing server private key file %s\\n\", pathPKFile.string().c_str());\n "
      },
      {
        "sha": "f9bdac4c5e6942350fe437c79e11f73d59455692",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44095c1fa0258a0467ee476e1a448ac450f797e9/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44095c1fa0258a0467ee476e1a448ac450f797e9/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=44095c1fa0258a0467ee476e1a448ac450f797e9",
        "patch": "@@ -47,7 +47,7 @@ static void EnvShutdown()\n     {\n         printf(\"EnvShutdown exception: %s (%d)\\n\", e.what(), e.get_errno());\n     }\n-    DbEnv(0).remove(GetDataDir().string().c_str(), 0);\n+    DbEnv(0).remove(pathDataDir.string().c_str(), 0);\n }\n \n class CDBInit\n@@ -82,7 +82,6 @@ CDB::CDB(const char *pszFile, const char* pszMode) : pdb(NULL)\n         {\n             if (fShutdown)\n                 return;\n-            filesystem::path pathDataDir = GetDataDir();\n             filesystem::path pathLogDir = pathDataDir / \"database\";\n             filesystem::create_directory(pathLogDir);\n             filesystem::path pathErrorFile = pathDataDir / \"db.log\";"
      },
      {
        "sha": "9182ccb9ee8e74858277936177a3bdb9f0e60c6c",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44095c1fa0258a0467ee476e1a448ac450f797e9/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44095c1fa0258a0467ee476e1a448ac450f797e9/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=44095c1fa0258a0467ee476e1a448ac450f797e9",
        "patch": "@@ -162,12 +162,13 @@ bool AppInit2(int argc, char* argv[])\n     // If Qt is used, parameters/bitcoin.conf are parsed in qt/bitcoin.cpp's main()\n #if !defined(QT_GUI)\n     ParseParameters(argc, argv);\n-    if (!boost::filesystem::is_directory(GetDataDir(false)))\n+    if (!boost::filesystem::is_directory(GetPrepDataDir(false)))\n     {\n         fprintf(stderr, \"Error: Specified directory does not exist\\n\");\n         Shutdown(NULL);\n     }\n     ReadConfigFile(mapArgs, mapMultiArgs);\n+    pathDataDir = GetPrepDataDir(true);\n #endif\n \n     if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n@@ -347,13 +348,13 @@ bool AppInit2(int argc, char* argv[])\n     }\n \n     // Make sure only a single bitcoin process is using the data directory.\n-    boost::filesystem::path pathLockFile = GetDataDir() / \".lock\";\n+    boost::filesystem::path pathLockFile = pathDataDir / \".lock\";\n     FILE* file = fopen(pathLockFile.string().c_str(), \"a\"); // empty lock file; created if it doesn't exist.\n     if (file) fclose(file);\n     static boost::interprocess::file_lock lock(pathLockFile.string().c_str());\n     if (!lock.try_lock())\n     {\n-        ThreadSafeMessageBox(strprintf(_(\"Cannot obtain a lock on data directory %s.  Bitcoin is probably already running.\"), GetDataDir().string().c_str()), _(\"Bitcoin\"), wxOK|wxMODAL);\n+        ThreadSafeMessageBox(strprintf(_(\"Cannot obtain a lock on data directory %s.  Bitcoin is probably already running.\"), pathDataDir.string().c_str()), _(\"Bitcoin\"), wxOK|wxMODAL);\n         return false;\n     }\n "
      },
      {
        "sha": "54d2fdb58e145daca9a021384e91e3cf7e4564d5",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44095c1fa0258a0467ee476e1a448ac450f797e9/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44095c1fa0258a0467ee476e1a448ac450f797e9/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=44095c1fa0258a0467ee476e1a448ac450f797e9",
        "patch": "@@ -1843,7 +1843,7 @@ bool ProcessBlock(CNode* pfrom, CBlock* pblock)\n \n bool CheckDiskSpace(uint64 nAdditionalBytes)\n {\n-    uint64 nFreeBytesAvailable = filesystem::space(GetDataDir()).available;\n+    uint64 nFreeBytesAvailable = filesystem::space(pathDataDir).available;\n \n     // Check for 15MB because database could create another 10MB log file at any time\n     if (nFreeBytesAvailable < (uint64)15000000 + nAdditionalBytes)\n@@ -1863,7 +1863,7 @@ FILE* OpenBlockFile(unsigned int nFile, unsigned int nBlockPos, const char* pszM\n {\n     if ((nFile < 1) || (nFile == (unsigned int) -1))\n         return NULL;\n-    FILE* file = fopen((GetDataDir() / strprintf(\"blk%04d.dat\", nFile)).string().c_str(), pszMode);\n+    FILE* file = fopen((pathDataDir / strprintf(\"blk%04d.dat\", nFile)).string().c_str(), pszMode);\n     if (!file)\n         return NULL;\n     if (nBlockPos != 0 && !strchr(pszMode, 'a') && !strchr(pszMode, 'w'))"
      },
      {
        "sha": "4dd6ce9fc6693eab8145582737633256da7d2805",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44095c1fa0258a0467ee476e1a448ac450f797e9/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44095c1fa0258a0467ee476e1a448ac450f797e9/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=44095c1fa0258a0467ee476e1a448ac450f797e9",
        "patch": "@@ -172,12 +172,13 @@ int main(int argc, char *argv[])\n     ParseParameters(argc, argv);\n \n     // ... then bitcoin.conf:\n-    if (!boost::filesystem::is_directory(GetDataDir(false)))\n+    if (!boost::filesystem::is_directory(GetPrepDataDir(false)))\n     {\n         fprintf(stderr, \"Error: Specified directory does not exist\\n\");\n         return 1;\n     }\n     ReadConfigFile(mapArgs, mapMultiArgs);\n+    pathDataDir = GetPrepDataDir(true);\n \n     // Application identification (must be set before OptionsModel is initialized,\n     // as it is used to locate QSettings)"
      },
      {
        "sha": "409c81dd9a8c13c647e6b94894dd8f6a676b341e",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44095c1fa0258a0467ee476e1a448ac450f797e9/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44095c1fa0258a0467ee476e1a448ac450f797e9/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=44095c1fa0258a0467ee476e1a448ac450f797e9",
        "patch": "@@ -235,7 +235,7 @@ bool isObscured(QWidget *w)\n \n void openDebugLogfile()\n {\n-    boost::filesystem::path pathDebug = GetDataDir() / \"debug.log\";\n+    boost::filesystem::path pathDebug = pathDataDir / \"debug.log\";\n \n #ifdef WIN32\n     if (boost::filesystem::exists(pathDebug))"
      },
      {
        "sha": "f840c92393202fb99d0bf8b4c0a9a781dcd6c33d",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44095c1fa0258a0467ee476e1a448ac450f797e9/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44095c1fa0258a0467ee476e1a448ac450f797e9/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=44095c1fa0258a0467ee476e1a448ac450f797e9",
        "patch": "@@ -67,6 +67,7 @@ string strMiscWarning;\n bool fTestNet = false;\n bool fNoListen = false;\n bool fLogTimestamps = false;\n+boost::filesystem::path pathDataDir;\n CMedianFilter<int64> vTimeOffsets(200,0);\n \n // Init openssl library multithreading support\n@@ -201,7 +202,7 @@ inline int OutputDebugStringF(const char* pszFormat, ...)\n \n         if (!fileout)\n         {\n-            boost::filesystem::path pathDebug = GetDataDir() / \"debug.log\";\n+            boost::filesystem::path pathDebug = GetPrepDataDir(true) / \"debug.log\";\n             fileout = fopen(pathDebug.string().c_str(), \"a\");\n             if (fileout) setbuf(fileout, NULL); // unbuffered\n         }\n@@ -828,7 +829,7 @@ boost::filesystem::path GetDefaultDataDir()\n #endif\n }\n \n-const boost::filesystem::path &GetDataDir(bool fNetSpecific)\n+const boost::filesystem::path &GetPrepDataDir(bool fNetSpecific)\n {\n     namespace fs = boost::filesystem;\n \n@@ -859,14 +860,17 @@ const boost::filesystem::path &GetDataDir(bool fNetSpecific)\n \n     fs::create_directory(path);\n \n+    if (!fNetSpecific)\n+        pathDataDir = path;\n+\n     cachedPath[fNetSpecific]=true;\n     return path;\n }\n \n boost::filesystem::path GetConfigFile()\n {\n     boost::filesystem::path pathConfigFile(GetArg(\"-conf\", \"bitcoin.conf\"));\n-    if (!pathConfigFile.is_complete()) pathConfigFile = GetDataDir(false) / pathConfigFile;\n+    if (!pathConfigFile.is_complete()) pathConfigFile = GetPrepDataDir(false) / pathConfigFile;\n     return pathConfigFile;\n }\n \n@@ -897,7 +901,7 @@ void ReadConfigFile(map<string, string>& mapSettingsRet,\n boost::filesystem::path GetPidFile()\n {\n     boost::filesystem::path pathPidFile(GetArg(\"-pid\", \"bitcoind.pid\"));\n-    if (!pathPidFile.is_complete()) pathPidFile = GetDataDir() / pathPidFile;\n+    if (!pathPidFile.is_complete()) pathPidFile = pathDataDir / pathPidFile;\n     return pathPidFile;\n }\n \n@@ -924,7 +928,7 @@ int GetFilesize(FILE* file)\n void ShrinkDebugFile()\n {\n     // Scroll debug.log if it's getting too big\n-    boost::filesystem::path pathLog = GetDataDir() / \"debug.log\";\n+    boost::filesystem::path pathLog = pathDataDir / \"debug.log\";\n     FILE* file = fopen(pathLog.string().c_str(), \"r\");\n     if (file && GetFilesize(file) > 10 * 1000000)\n     {"
      },
      {
        "sha": "12885b16fd67e059bb5eb8f1547a572e3b8c345e",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44095c1fa0258a0467ee476e1a448ac450f797e9/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44095c1fa0258a0467ee476e1a448ac450f797e9/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=44095c1fa0258a0467ee476e1a448ac450f797e9",
        "patch": "@@ -121,6 +121,7 @@ extern std::string strMiscWarning;\n extern bool fTestNet;\n extern bool fNoListen;\n extern bool fLogTimestamps;\n+extern boost::filesystem::path pathDataDir;\n \n void RandAddSeed();\n void RandAddSeedPerfmon();\n@@ -154,7 +155,7 @@ bool WildcardMatch(const char* psz, const char* mask);\n bool WildcardMatch(const std::string& str, const std::string& mask);\n int GetFilesize(FILE* file);\n boost::filesystem::path GetDefaultDataDir();\n-const boost::filesystem::path &GetDataDir(bool fNetSpecific = true);\n+const boost::filesystem::path &GetPrepDataDir(bool fNetSpecific);\n boost::filesystem::path GetConfigFile();\n boost::filesystem::path GetPidFile();\n void CreatePidFile(const boost::filesystem::path &path, pid_t pid);"
      },
      {
        "sha": "e970bdd2ed972fc8573e6e88426f43fcdcc15189",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44095c1fa0258a0467ee476e1a448ac450f797e9/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44095c1fa0258a0467ee476e1a448ac450f797e9/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=44095c1fa0258a0467ee476e1a448ac450f797e9",
        "patch": "@@ -403,7 +403,7 @@ bool BackupWallet(const CWallet& wallet, const string& strDest)\n                 mapFileUseCount.erase(wallet.strWalletFile);\n \n                 // Copy wallet.dat\n-                filesystem::path pathSrc = GetDataDir() / wallet.strWalletFile;\n+                filesystem::path pathSrc = pathDataDir / wallet.strWalletFile;\n                 filesystem::path pathDest(strDest);\n                 if (filesystem::is_directory(pathDest))\n                     pathDest /= wallet.strWalletFile;"
      }
    ]
  }
]