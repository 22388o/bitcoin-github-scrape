[
  {
    "sha": "fae91a09c453a9a95c382df765bd71e54698d5b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWU5MWEwOWM0NTNhOWE5NWMzODJkZjc2NWJkNzFlNTQ2OThkNWIy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-09-04T17:17:22Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-09-04T17:10:37Z"
      },
      "message": "test: Remove incorrect and unused try-block in assert_debug_log",
      "tree": {
        "sha": "4af9c72fb0a0e7e6cc1aee448771a2212633c2b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4af9c72fb0a0e7e6cc1aee448771a2212633c2b3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fae91a09c453a9a95c382df765bd71e54698d5b2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiOUAwAnb0/Lqnfh9NhM2hMWhQ8m38CLmn8YkqlpKrGCxpIUtG3gNCMPK7R+cUh\nbsAINcZKz3l6WUdDK/M1MrvPQeeAZwd/W5jHMPAsyad2Koz9nT5W9xL/8fXjP+1s\nEUmHIgABuHTnqWVKcr4mH+6OZV+4UAx+2MLg29GvYyJfyyBeiqnOtZCuzXTJ6vma\nDG/9k3HiUIxS8NlONyoME3pIfXJ9tsu9wa0EVCRKm4lLEPiRbeqEkerNWgyDAdVy\nUFaeSuq8+7DuP6vxHtZj3/jrRv4attB/0B2v9vdjkn0VyFh1gb84xV4mr1wpjFyC\nXPDLeOe83xsTaJlqE4VBdPfo/yO9lsOpSxptfR9kvqoTnhkMOPoqnpjyJB1in2H8\nI6xi5qLXCRwGcZGJ6GT9dRCMl/D3XyXuIMDfP9Etz7dBb96QrHmrbaaNxbPhXRS2\n6GdBPRTtRLA6pBfQiKHdMKmK8qbiUg4c3wrTeqs/6CxQo0emuOcHN4AdMF6wQI4q\np4bQjd+S\n=/yNe\n-----END PGP SIGNATURE-----",
        "payload": "tree 4af9c72fb0a0e7e6cc1aee448771a2212633c2b3\nparent 6e431296daceee604f48e9e3e87fa84cfd44bef2\nauthor MarcoFalke <falke.marco@gmail.com> 1567617442 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1567617037 -0400\n\ntest: Remove incorrect and unused try-block in assert_debug_log\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae91a09c453a9a95c382df765bd71e54698d5b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fae91a09c453a9a95c382df765bd71e54698d5b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae91a09c453a9a95c382df765bd71e54698d5b2/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e431296daceee604f48e9e3e87fa84cfd44bef2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e431296daceee604f48e9e3e87fa84cfd44bef2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e431296daceee604f48e9e3e87fa84cfd44bef2"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 19,
      "deletions": 19
    },
    "files": [
      {
        "sha": "b1d2b6f431cda43321ad3d55bf2b0704b069b944",
        "filename": "test/functional/rpc_setban.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae91a09c453a9a95c382df765bd71e54698d5b2/test/functional/rpc_setban.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae91a09c453a9a95c382df765bd71e54698d5b2/test/functional/rpc_setban.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_setban.py?ref=fae91a09c453a9a95c382df765bd71e54698d5b2",
        "patch": "@@ -26,7 +26,7 @@ def run_test(self):\n         self.nodes[1].setban(\"127.0.0.1\", \"add\")\n \n         # Node 0 should not be able to reconnect\n-        with self.nodes[1].assert_debug_log(expected_msgs=['dropped (banned)\\n'],timeout=5):\n+        with self.nodes[1].assert_debug_log(expected_msgs=['dropped (banned)\\n'], timeout=5):\n             self.restart_node(1, [])\n             self.nodes[0].addnode(\"127.0.0.1:\" + str(p2p_port(1)), \"onetry\")\n "
      },
      {
        "sha": "55e6d4caa6aa64769d52bb2cf125160229b40a42",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 18,
        "deletions": 18,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae91a09c453a9a95c382df765bd71e54698d5b2/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae91a09c453a9a95c382df765bd71e54698d5b2/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=fae91a09c453a9a95c382df765bd71e54698d5b2",
        "patch": "@@ -313,24 +313,24 @@ def assert_debug_log(self, expected_msgs, timeout=2):\n         with open(debug_log, encoding='utf-8') as dl:\n             dl.seek(0, 2)\n             prev_size = dl.tell()\n-        try:\n-            yield\n-        finally:\n-            while True:\n-                found = True\n-                with open(debug_log, encoding='utf-8') as dl:\n-                    dl.seek(prev_size)\n-                    log = dl.read()\n-                print_log = \" - \" + \"\\n - \".join(log.splitlines())\n-                for expected_msg in expected_msgs:\n-                    if re.search(re.escape(expected_msg), log, flags=re.MULTILINE) is None:\n-                        found = False\n-                if found:\n-                    return\n-                if time.time() >= time_end:\n-                    break\n-                time.sleep(0.05)\n-            self._raise_assertion_error('Expected messages \"{}\" does not partially match log:\\n\\n{}\\n\\n'.format(str(expected_msgs), print_log))\n+\n+        yield\n+\n+        while True:\n+            found = True\n+            with open(debug_log, encoding='utf-8') as dl:\n+                dl.seek(prev_size)\n+                log = dl.read()\n+            print_log = \" - \" + \"\\n - \".join(log.splitlines())\n+            for expected_msg in expected_msgs:\n+                if re.search(re.escape(expected_msg), log, flags=re.MULTILINE) is None:\n+                    found = False\n+            if found:\n+                return\n+            if time.time() >= time_end:\n+                break\n+            time.sleep(0.05)\n+        self._raise_assertion_error('Expected messages \"{}\" does not partially match log:\\n\\n{}\\n\\n'.format(str(expected_msgs), print_log))\n \n     @contextlib.contextmanager\n     def assert_memory_usage_stable(self, *, increase_allowed=0.03):"
      }
    ]
  }
]