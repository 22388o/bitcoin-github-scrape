btcdrak,2016-02-20T21:45:38Z,Is this related to #7488 as well?\n,https://github.com/bitcoin/bitcoin/pull/7568#issuecomment-186685821,186685821,
sipa,2016-02-20T22:17:35Z,@btcdrak I believe so.\n,https://github.com/bitcoin/bitcoin/pull/7568#issuecomment-186691718,186691718,
dgenr8,2016-02-20T22:52:17Z,"Oh yes, that was actually what prompted me.  I've asked Meni Rosenfeld and another person who ran simulations to comment.\n",https://github.com/bitcoin/bitcoin/pull/7568#issuecomment-186696716,186696716,
dgenr8,2016-02-23T01:52:12Z,"We use an arbitrary threshold of a once-in-fifty-years event.  We don't need to use a second arbitrary parameter for the sample interval.\n\nUpdated to sample at 130-minute intervals, instead of 240 minutes.  This is the minimum interval required for an observation of zero blocks to happen spuriously less than once in fifty years.  The high-side check works out to 33 or more blocks in 130 minutes.",https://github.com/bitcoin/bitcoin/pull/7568#issuecomment-187473848,187473848,
bitcoinfees,2016-02-25T02:27:55Z,"The math is correct, i.e. the false positive rate is once every ~ 50 years assuming an average block time of 10 min. To be clear, this is the combined (two-sided) alert rate; the one-sided alerts (pHigh or pLow) have individual rates of every ~ 100 years.\n\nThis is in contrast to the original code, which from [simulation](https://gist.github.com/bitcoinfees/0f2203bdced119b98c30), gives an alert r",https://github.com/bitcoin/bitcoin/pull/7568#issuecomment-188570371,188570371,
laanwj,2016-03-07T19:31:59Z,Concept ACK\n,https://github.com/bitcoin/bitcoin/pull/7568#issuecomment-193412955,193412955,
MeniRosenfeld,2016-03-15T22:16:49Z,"In case it's still relevant, here's one issue that came up in my discussions with dgenr8:\n\nAs far as I understand, the test is conducted at 4 hour intervals after the node starts. With the computed threshold and assuming constant hashrate, the fail-high (>=33 blocks in 120 minutes) should trigger for this node every ~100 years.\n\nHowever, this is not the only node on the network; and different ",https://github.com/bitcoin/bitcoin/pull/7568#issuecomment-197049602,197049602,
dgenr8,2016-03-30T23:06:59Z,"@MeniRosenfeld What will happen is a more severe problem that lasts longer will get more nodes reporting it, while a shorter-lived problem will get fewer nodes reporting it.  It's similar to different nodes seeing different resolutions to block races, in proportion to the closeness of the race.\n\nSynchronizing the checks network-wide can't be a good idea.  Also, we must not check at startup becau",https://github.com/bitcoin/bitcoin/pull/7568#issuecomment-203676136,203676136,
morcos,2016-03-31T17:35:43Z,Do we know that the cause of false positives would be cured by the changes here?  It seems likely to me that the bigger culprit is the variability that can exist on block times which isn't representative of when they were actually found.\n,https://github.com/bitcoin/bitcoin/pull/7568#issuecomment-204043307,204043307,
MeniRosenfeld,2016-03-31T17:50:12Z,"@morcos : \n1. ""A"" cause would be cured. There might be other problems but it doesn't mean we shouldn't solve this one.\n2. According to a model that assumes that reported timestamps are accurate, the original code resulted in false positives being triggered x10 too frequently. The new code tests the time span for 33 blocks - if you tell me how much you expect the reported span to be off, I can sa",https://github.com/bitcoin/bitcoin/pull/7568#issuecomment-204049709,204049709,
sipa,2016-03-31T18:19:22Z,"So there are various issues, and it seems different people are arguing for\nfixing different ones.\n- The probabilities in the current code are wrong, they're using PDF\n  instead of CDF. This PR fixes it.\n- The current code samples overlapping periods, causing the false positive\n  rate to be too high. This PR fixes it.\n- We're not taking into account that the difficulty does not necessarily\n ",https://github.com/bitcoin/bitcoin/pull/7568#issuecomment-204063155,204063155,
gmaxwell,2016-03-31T18:32:46Z,"I think that it's better to have all the FPs happen at once, then communication can effectively address them.  If they happen at different times, there will be an increased general rate of FPs and no one will know if something is wrong but they were just the first to detect or whatever.\n\nWe still don't seem to completely understand all the causes of false positives here.\n",https://github.com/bitcoin/bitcoin/pull/7568#issuecomment-204067664,204067664,
arowser,2016-05-25T08:44:48Z,Can one of the admins verify this patch?\n,https://github.com/bitcoin/bitcoin/pull/7568#issuecomment-221510692,221510692,
dgenr8,2016-06-09T19:19:07Z,"@sipa This is regarding your last three points.  Sometimes (rarely) a factor of .9 would be better than a factor of 1.1, so maybe that's trying too hard.  It would be kind of nice to detect blocktime shenanigans.  And I feel coordinating alert times would be totally artificial because there's no globally correct sampling schedule.\n",https://github.com/bitcoin/bitcoin/pull/7568#issuecomment-224998510,224998510,
laanwj,2016-06-14T06:52:27Z,"I still don't think this has received enough review or testing.\nAlso there are lots of proposals but no further progress.\nThis has to be resolved before 0.13 release (but not necessarily the feature freeze, it's not a new feature) or the functionality will have to be disabled like was done for 0.12.\n",https://github.com/bitcoin/bitcoin/pull/7568#issuecomment-225794646,225794646,
laanwj,2016-08-03T09:55:24Z,"This functionality has been removed in #8275, closing.\n",https://github.com/bitcoin/bitcoin/pull/7568#issuecomment-237194987,237194987,
sipa,2016-03-07T22:07:22Z,"It took me a while to understand this, with PartitionCheck called once as the scheduled function, and once specially to determine the frequency.\n\nWouldn't it be easy to just schedule it once, and have each invocation schedule its own next call? That way the interval cal also be made dynamic more easily.\n",https://github.com/bitcoin/bitcoin/pull/7568#discussion_r55281283,55281283,src/init.cpp
dgenr8,2016-03-08T00:35:52Z,"I did this just to keep the constants out of global scope, which would probably be more readable.  A drawback of constant rescheduling would be some drift, probably not much.\n",https://github.com/bitcoin/bitcoin/pull/7568#discussion_r55298715,55298715,src/init.cpp
