dunxen,2021-06-16 20:12:18,"Concept ACK.\n\nI'm wondering if it would make sense to test this behaviour in `functional/mempool_unbroadcast.py`? If so, I wouldn't mind doing a follow-up PR :)",https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-862680790,862680790,
DrahtBot,2021-06-16 23:43:08,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-862804025,862804025,
jnewbery,2021-06-17 10:40:35,"@duncandean I agree a test would be very useful here. If you want to have a go at writing it, please go ahead and I can add it to this PR. If not, I'll try to write one next week.",https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-863131368,863131368,
dunxen,2021-06-17 12:33:50,"Cool! Working on it now. I've got `1` down, just busy with `2`.",https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-863200393,863200393,
naumenkogs,2021-06-18 09:41:16,"Concept ACK. Nice catch! Looking forward to a test :)\n",https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-863906917,863906917,
dunxen,2021-06-18 09:41:39,"> I was able to reproduce the bugs on [this branch](https://github.com/glozow/bitcoin/tree/test-22261) - I conveniently had a same-txid-different-wtxid test on hand that made it easy to write.\n\nHey @glozow, the first bug was straightforward enough to write a test for. I've been struggling a bit for the same-txid-different-wtxid bug. I was able to construct a new tx with same txid and different",https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-863907149,863907149,
jnewbery,2021-06-18 11:31:33,"Hi @duncandean. I think the following test should demonstrate the new functionality of _Allow rebroadcast for same-txid-different-wtxid transactions_:\n\n- submit tx A to node's mempool\n- Make new wtxidrelay P2PConnection to node\n- submit tx A' to node's mempool\n- wait for node to announce the wtxid from A to P2PConnection\n\nBefore the fix, the P2PConnection will never receive an announ",https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-863971587,863971587,
glozow,2021-06-18 12:52:13,@duncandean [this commit](https://github.com/glozow/bitcoin/commit/5069a834ed06f2df5f43c416dc5a501c3b010b33) implements the test jnewbery described - feel free to put that on top of the same-txid-diff-wtxid code you've written.,https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-864015702,864015702,
dunxen,2021-06-18 13:22:50,"> @duncandean [this commit](https://github.com/glozow/bitcoin/commit/5069a834ed06f2df5f43c416dc5a501c3b010b33) implements the test jnewbery described - feel free to put that on top of the same-txid-diff-wtxid code you've written.\n\n@glozow Ah, I actually got pretty close to that commit based on the previous work on your branch :D So would be good just to use your commit probably.\n\nFor `1` I",https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-864036125,864036125,
glozow,2021-06-18 17:33:41,ACK ba99f37a51a277284c060e38651071d39dd9b42b,https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-864183446,864183446,
michaelfolkson,2021-06-24 08:31:06,"Concept ACK, Approach ACK.\n\nTook me a while to understand the two problems that were being fixed but I got there eventually in the Bitcoin Core PR review [club](https://bitcoincore.reviews/22261). Essentially 1) is unnecessary relaying and 2) causes an increased number of relay failures. \n\nSkimmed code, test(s) sounds like they are on the way.",https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-867447558,867447558,
jnewbery,2021-07-07 09:37:56,"Thanks for the tests @duncandean and @glozow. I've added them as separate commits, and verified that they both fail without the fixes and pass with the fixes.\n\nAlso rebased on latest master.",https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-875453104,875453104,
jnewbery,2021-07-07 11:24:07,This has a small conflict in the tests with #22253. @theStack @duncandean @lsilva01 do you mind looking at that PR first? It's easy enough for me to rebase this on that PR once it's been merged.,https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-875523332,875523332,
naumenkogs,2021-07-07 11:28:33,"ACK b8a976f3945283c26d1e206eabf181305d407c8a\n\nI'm wondering if this is a good opportunity to document same-txid-different-witness somewhere in the codebase?\nI can totally imagine some wallet or L2 protocol attempt to submit these kinds of transactions in a non-malicious way? And at least what we could do is to clearly set up expectations.\nAt the same time, not even sure what's the best pla",https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-875526011,875526011,
glozow,2021-07-07 11:31:43,@naumenkogs see #22253?,https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-875527858,875527858,
jnewbery,2021-07-09 17:21:52,Rebased. This is now ready for review again!,https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-877339000,877339000,
dunxen,2021-07-10 20:34:44,reACK 5a77abd,https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-877700423,877700423,
naumenkogs,2021-07-20 11:41:19,"Not 100% sure I agree with all the thoughts from [this comment](https://github.com/bitcoin/bitcoin/pull/22261#discussion_r667786642), but this fix is indeed needed.\nACK 5a77abd4e657458852875a07692898982f4b1db5",https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-883324641,883324641,
glozow,2021-07-20 13:06:08,post merge ACK 5a77abd,https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-883377190,883377190,
glozow,2021-06-17 16:42:57,"Very smol suggestion for ease of review - This improvement in the naming is in the ""[mempol] Allow rebroadcast for same-txid-different-wtxid transactions"" commit 14cf5dec17af9cc57a85dfe4910f30d8e17581d8, but txid part would fit better in the subsequent [style] commit.",https://github.com/bitcoin/bitcoin/pull/22261#discussion_r653739094,653739094,src/node/transaction.cpp
jnewbery,2021-06-18 11:15:53,"I changed the name `hashTx` -> `txid` in the same commit as adding the `wtxid` variable. It seemed to make sense to me to have the variables named `txid`/`wtxid` from the start instead of `hashTx`/`wtxid`.\n\nNot sure the ordering matters that much. I'm inclined to leave it as it is right now, but will happily reorder/split commits if that's helpful for other reviewers.",https://github.com/bitcoin/bitcoin/pull/22261#discussion_r654348595,654348595,src/node/transaction.cpp
rajarshimaitra,2021-07-10 10:41:13,"Maybe I am confused and missing other details, but here's my doubt.\n\nIt seems here that if a new tx (with a same mempool-tx `txid` but diff `wtxid`) is passed into broadcast, then it will just check against the `txid`, see that it already exist in mempool, and then attempt to broadcast the existing `wtxid` instead of the new `wtxid`. It also wont try to add it to mempool or the unbroadcast lis",https://github.com/bitcoin/bitcoin/pull/22261#discussion_r667323286,667323286,src/node/transaction.cpp
dunxen,2021-07-10 20:33:41,"> But it should, as its a brand new transaction.\n\nIn terms of adding it to the mempool, it cannot since it'll be rejected as `TX_CONFLICT`. And if we cannot add it to our mempool, then we should not relay the new `wtxid` as this is not in our mempool.\n\nAFAIU with `same-txid-different-wtxid` the effect of the transaction (in terms of inputs and outputs) would be identical as it's just the w",https://github.com/bitcoin/bitcoin/pull/22261#discussion_r667382532,667382532,src/node/transaction.cpp
rajarshimaitra,2021-07-11 02:56:55,"Thanks @duncandean, that makes sense. So in the case of `same-txid-different-wtxid` transaction, we are really talking about the same transaction (input-output set) but for some reason with a different signature value.\n\nIn that case it would make sense to only handle one version of it, and yes its better to handle the version already in the mempool.  ",https://github.com/bitcoin/bitcoin/pull/22261#discussion_r667412711,667412711,src/node/transaction.cpp
naumenkogs,2021-07-12 08:44:50,"Previously, we would also best-effort rebroadcast (meaning not initial). After this change, best-effort applies only to the initial broadcast indeed (or the absent-from-mempool broadcast).\n\nIs this the expected rebroadcast behavior? Do we clearly communicate that software-triggered-rebroadcast (wallet or whatever) won't be assisted by the node if the node was offline at the time in the same wa",https://github.com/bitcoin/bitcoin/pull/22261#discussion_r667740703,667740703,src/node/transaction.cpp
jnewbery,2021-07-12 09:48:28,"> Previously, we would also best-effort rebroadcast (meaning not initial). After this change, best-effort applies only to the initial broadcast indeed (or the absent-from-mempool broadcast).\n>\n> Is this the expected rebroadcast behavior?\n\nYes, this is the intention, and was the original intention behind the unbroadcast set. Locally submitted transactions should be tracked to make sure that",https://github.com/bitcoin/bitcoin/pull/22261#discussion_r667786642,667786642,src/node/transaction.cpp
