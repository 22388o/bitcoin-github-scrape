[
  {
    "sha": "1ef28b4f7cfba410fef524def1dac24bbc4086ca",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZWYyOGI0ZjdjZmJhNDEwZmVmNTI0ZGVmMWRhYzI0YmJjNDA4NmNh",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-02-28T16:27:13Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-02-28T16:31:35Z"
      },
      "message": "Make AnalyzePSBT next role calculation simple, correct",
      "tree": {
        "sha": "3467a3be0f477bc29b5311f236accd569d28eb36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3467a3be0f477bc29b5311f236accd569d28eb36"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ef28b4f7cfba410fef524def1dac24bbc4086ca",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ef28b4f7cfba410fef524def1dac24bbc4086ca",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1ef28b4f7cfba410fef524def1dac24bbc4086ca",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ef28b4f7cfba410fef524def1dac24bbc4086ca/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4502ed7cd1b3f0478dd2fdf048ad36cd87a8e2df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4502ed7cd1b3f0478dd2fdf048ad36cd87a8e2df",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4502ed7cd1b3f0478dd2fdf048ad36cd87a8e2df"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 15,
      "deletions": 20
    },
    "files": [
      {
        "sha": "0fc19b7a115f27408417fc6f6a00dcc32c40eb21",
        "filename": "src/node/psbt.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 20,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ef28b4f7cfba410fef524def1dac24bbc4086ca/src/node/psbt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ef28b4f7cfba410fef524def1dac24bbc4086ca/src/node/psbt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/psbt.cpp?ref=1ef28b4f7cfba410fef524def1dac24bbc4086ca",
        "patch": "@@ -18,9 +18,7 @@ PSBTAnalysis AnalyzePSBT(PartiallySignedTransaction psbtx)\n     PSBTAnalysis result;\n \n     bool calc_fee = true;\n-    bool all_final = true;\n-    bool only_missing_sigs = true;\n-    bool only_missing_final = false;\n+\n     CAmount in_amt = 0;\n \n     result.inputs.resize(psbtx.tx->vin.size());\n@@ -29,6 +27,9 @@ PSBTAnalysis AnalyzePSBT(PartiallySignedTransaction psbtx)\n         PSBTInput& input = psbtx.inputs[i];\n         PSBTInputAnalysis& input_analysis = result.inputs[i];\n \n+        // We set next role here and ratchet backwards as required\n+        input_analysis.next = PSBTRole::EXTRACTOR;\n+\n         // Check for a UTXO\n         CTxOut utxo;\n         if (psbtx.GetInputUTXO(utxo, i)) {\n@@ -57,7 +58,6 @@ PSBTAnalysis AnalyzePSBT(PartiallySignedTransaction psbtx)\n         // Check if it is final\n         if (!utxo.IsNull() && !PSBTInputSigned(input)) {\n             input_analysis.is_final = false;\n-            all_final = false;\n \n             // Figure out what is missing\n             SignatureData outdata;\n@@ -74,22 +74,24 @@ PSBTAnalysis AnalyzePSBT(PartiallySignedTransaction psbtx)\n                 if (outdata.missing_pubkeys.empty() && outdata.missing_redeem_script.IsNull() && outdata.missing_witness_script.IsNull() && !outdata.missing_sigs.empty()) {\n                     input_analysis.next = PSBTRole::SIGNER;\n                 } else {\n-                    only_missing_sigs = false;\n                     input_analysis.next = PSBTRole::UPDATER;\n                 }\n             } else {\n-                only_missing_final = true;\n                 input_analysis.next = PSBTRole::FINALIZER;\n             }\n         } else if (!utxo.IsNull()){\n             input_analysis.is_final = true;\n         }\n     }\n \n-    if (all_final) {\n-        only_missing_sigs = false;\n-        result.next = PSBTRole::EXTRACTOR;\n+    // Calculate next role for PSBT by grabbing \"minumum\" PSBTInput next role\n+    result.next = PSBTRole::EXTRACTOR;\n+    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+        PSBTInputAnalysis& input_analysis = result.inputs[i];\n+        result.next = std::min(result.next, input_analysis.next);\n     }\n+    assert(result.next > PSBTRole::CREATOR);\n+\n     if (calc_fee) {\n         // Get the output amount\n         CAmount out_amt = std::accumulate(psbtx.tx->vout.begin(), psbtx.tx->vout.end(), CAmount(0),\n@@ -139,17 +141,6 @@ PSBTAnalysis AnalyzePSBT(PartiallySignedTransaction psbtx)\n             result.estimated_feerate = feerate;\n         }\n \n-        if (only_missing_sigs) {\n-            result.next = PSBTRole::SIGNER;\n-        } else if (only_missing_final) {\n-            result.next = PSBTRole::FINALIZER;\n-        } else if (all_final) {\n-            result.next = PSBTRole::EXTRACTOR;\n-        } else {\n-            result.next = PSBTRole::UPDATER;\n-        }\n-    } else {\n-        result.next = PSBTRole::UPDATER;\n     }\n \n     return result;"
      },
      {
        "sha": "3a6337754543ad96c8f75284fce9fe737e525f43",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ef28b4f7cfba410fef524def1dac24bbc4086ca/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ef28b4f7cfba410fef524def1dac24bbc4086ca/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=1ef28b4f7cfba410fef524def1dac24bbc4086ca",
        "patch": "@@ -437,6 +437,10 @@ def test_psbt_input_keys(psbt_input, keys):\n         assert_equal(analysis['next'], 'creator')\n         assert_equal(analysis['error'], 'PSBT is not valid. Input 0 has invalid value')\n \n+        self.log.info(\"PSBT with signed, but not finalized, inputs should have Finalizer as next\")\n+        analysis = self.nodes[0].analyzepsbt('cHNidP8BAHECAAAAAZYezcxdnbXoQCmrD79t/LzDgtUo9ERqixk8wgioAobrAAAAAAD9////AlDDAAAAAAAAFgAUy/UxxZuzZswcmFnN/E9DGSiHLUsuGPUFAAAAABYAFLsH5o0R38wXx+X2cCosTMCZnQ4baAAAAAABAR8A4fUFAAAAABYAFOBI2h5thf3+Lflb2LGCsVSZwsltIgIC/i4dtVARCRWtROG0HHoGcaVklzJUcwo5homgGkSNAnJHMEQCIGx7zKcMIGr7cEES9BR4Kdt/pzPTK3fKWcGyCJXb7MVnAiALOBgqlMH4GbC1HDh/HmylmO54fyEy4lKde7/BT/PWxwEBAwQBAAAAIgYC/i4dtVARCRWtROG0HHoGcaVklzJUcwo5homgGkSNAnIYDwVpQ1QAAIABAACAAAAAgAAAAAAAAAAAAAAiAgL+CIiB59NSCssOJRGiMYQK1chahgAaaJpIXE41Cyir+xgPBWlDVAAAgAEAAIAAAACAAQAAAAAAAAAA')\n+        assert_equal(analysis['next'], 'finalizer')\n+\n         analysis = self.nodes[0].analyzepsbt('cHNidP8BAHECAAAAAfA00BFgAm6tp86RowwH6BMImQNL5zXUcTT97XoLGz0BAAAAAAD/////AgCAgWrj0AcAFgAUKNw0x8HRctAgmvoevm4u1SbN7XL87QKVAAAAABYAFPck4gF7iL4NL4wtfRAKgQbghiTUAAAAAAABAR8A8gUqAQAAABYAFJUDtxf2PHo641HEOBOAIvFMNTr2AAAA')\n         assert_equal(analysis['next'], 'creator')\n         assert_equal(analysis['error'], 'PSBT is not valid. Output amount invalid')"
      }
    ]
  }
]