[
  {
    "sha": "5db506ba5943868cc2c845f717508739b7f05714",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZGI1MDZiYTU5NDM4NjhjYzJjODQ1ZjcxNzUwODczOWI3ZjA1NzE0",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-11-29T15:11:18Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-12-01T19:53:30Z"
      },
      "message": "tests: Add option --valgrind to run nodes under valgrind in the functional tests",
      "tree": {
        "sha": "e1b2aa6dc986024e4514adcc9419222f80d455c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e1b2aa6dc986024e4514adcc9419222f80d455c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5db506ba5943868cc2c845f717508739b7f05714",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5db506ba5943868cc2c845f717508739b7f05714",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5db506ba5943868cc2c845f717508739b7f05714",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5db506ba5943868cc2c845f717508739b7f05714/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 13,
      "deletions": 1
    },
    "files": [
      {
        "sha": "bc162fd7eb5940209b6d9aa5bd659ff8a0c5cc7b",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5db506ba5943868cc2c845f717508739b7f05714/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5db506ba5943868cc2c845f717508739b7f05714/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=5db506ba5943868cc2c845f717508739b7f05714",
        "patch": "@@ -157,6 +157,8 @@ def parse_args(self):\n                             help=\"use bitcoin-cli instead of RPC for all commands\")\n         parser.add_argument(\"--perf\", dest=\"perf\", default=False, action=\"store_true\",\n                             help=\"profile running nodes with perf for the duration of the test\")\n+        parser.add_argument(\"--valgrind\", dest=\"valgrind\", default=False, action=\"store_true\",\n+                            help=\"run nodes under the valgrind memory error detector: expect at least a ~10x slowdown, valgrind 3.14 or later required\")\n         parser.add_argument(\"--randomseed\", type=int,\n                             help=\"set a random seed for deterministically reproducing a previous test run\")\n         self.add_options(parser)\n@@ -394,6 +396,7 @@ def add_nodes(self, num_nodes, extra_args=None, *, rpchost=None, binary=None):\n                 extra_args=extra_args[i],\n                 use_cli=self.options.usecli,\n                 start_perf=self.options.perf,\n+                use_valgrind=self.options.valgrind,\n             ))\n \n     def start_node(self, i, *args, **kwargs):"
      },
      {
        "sha": "40681790b9cabb28c9ca7fceb7a14bac5e0b0636",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5db506ba5943868cc2c845f717508739b7f05714/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5db506ba5943868cc2c845f717508739b7f05714/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=5db506ba5943868cc2c845f717508739b7f05714",
        "patch": "@@ -59,7 +59,7 @@ class TestNode():\n     To make things easier for the test writer, any unrecognised messages will\n     be dispatched to the RPC connection.\"\"\"\n \n-    def __init__(self, i, datadir, *, chain, rpchost, timewait, bitcoind, bitcoin_cli, coverage_dir, cwd, extra_conf=None, extra_args=None, use_cli=False, start_perf=False):\n+    def __init__(self, i, datadir, *, chain, rpchost, timewait, bitcoind, bitcoin_cli, coverage_dir, cwd, extra_conf=None, extra_args=None, use_cli=False, start_perf=False, use_valgrind=False):\n         \"\"\"\n         Kwargs:\n             start_perf (bool): If True, begin profiling the node with `perf` as soon as\n@@ -96,6 +96,15 @@ def __init__(self, i, datadir, *, chain, rpchost, timewait, bitcoind, bitcoin_cl\n             \"-debugexclude=leveldb\",\n             \"-uacomment=testnode%d\" % i,\n         ]\n+        if use_valgrind:\n+            default_suppressions_file = os.path.join(\n+                os.path.dirname(os.path.realpath(__file__)),\n+                \"..\", \"..\", \"..\", \"contrib\", \"valgrind.supp\")\n+            suppressions_file = os.getenv(\"VALGRIND_SUPPRESSIONS_FILE\",\n+                                          default_suppressions_file)\n+            self.args = [\"valgrind\", \"--suppressions={}\".format(suppressions_file),\n+                         \"--gen-suppressions=all\", \"--exit-on-first-error=yes\",\n+                         \"--error-exitcode=1\", \"--quiet\"] + self.args\n \n         self.cli = TestNodeCLI(bitcoin_cli, self.datadir)\n         self.use_cli = use_cli"
      }
    ]
  }
]