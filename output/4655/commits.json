[
  {
    "sha": "216e9a4456207f5ae9cd85926521851e11a26d92",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMTZlOWE0NDU2MjA3ZjVhZTljZDg1OTI2NTIxODUxZTExYTI2ZDky",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-08-07T21:00:01Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-08-08T23:37:16Z"
      },
      "message": "Add a way to limit deserialized string lengths\n\nand use it for most strings being serialized.",
      "tree": {
        "sha": "b85c0cd6d085ca32de8122c286cfeb4c8544c19c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b85c0cd6d085ca32de8122c286cfeb4c8544c19c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/216e9a4456207f5ae9cd85926521851e11a26d92",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/216e9a4456207f5ae9cd85926521851e11a26d92",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/216e9a4456207f5ae9cd85926521851e11a26d92",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/216e9a4456207f5ae9cd85926521851e11a26d92/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "003bbd5f7672d7fd4f40478fd57cc4e03c30f933",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/003bbd5f7672d7fd4f40478fd57cc4e03c30f933",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/003bbd5f7672d7fd4f40478fd57cc4e03c30f933"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 46,
      "deletions": 14
    },
    "files": [
      {
        "sha": "296d48891af26b74a60450bd42b6198e8a998a4e",
        "filename": "src/alert.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/216e9a4456207f5ae9cd85926521851e11a26d92/src/alert.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/216e9a4456207f5ae9cd85926521851e11a26d92/src/alert.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.h?ref=216e9a4456207f5ae9cd85926521851e11a26d92",
        "patch": "@@ -60,9 +60,9 @@ class CUnsignedAlert\n         READWRITE(setSubVer);\n         READWRITE(nPriority);\n \n-        READWRITE(strComment);\n-        READWRITE(strStatusBar);\n-        READWRITE(strReserved);\n+        READWRITE(LIMITED_STRING(strComment, 65536));\n+        READWRITE(LIMITED_STRING(strStatusBar, 256));\n+        READWRITE(LIMITED_STRING(strReserved, 256));\n     )\n \n     void SetNull();"
      },
      {
        "sha": "dec5bb652473780378de2e6147bf4b6de9bc8168",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/216e9a4456207f5ae9cd85926521851e11a26d92/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/216e9a4456207f5ae9cd85926521851e11a26d92/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=216e9a4456207f5ae9cd85926521851e11a26d92",
        "patch": "@@ -3559,7 +3559,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         if (!vRecv.empty())\n             vRecv >> addrFrom >> nNonce;\n         if (!vRecv.empty()) {\n-            vRecv >> pfrom->strSubVer;\n+            vRecv >> LIMITED_STRING(pfrom->strSubVer, 256);\n             pfrom->cleanSubVer = SanitizeString(pfrom->strSubVer);\n         }\n         if (!vRecv.empty())\n@@ -4183,7 +4183,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         if (fDebug)\n         {\n             string strMsg; unsigned char ccode; string strReason;\n-            vRecv >> strMsg >> ccode >> strReason;\n+            vRecv >> LIMITED_STRING(strMsg, CMessageHeader::COMMAND_SIZE) >> ccode >> LIMITED_STRING(strReason, 111);\n \n             ostringstream ss;\n             ss << strMsg << \" code \" << itostr(ccode) << \": \" << strReason;\n@@ -4194,10 +4194,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                 vRecv >> hash;\n                 ss << \": hash \" << hash.ToString();\n             }\n-            // Truncate to reasonable length and sanitize before printing:\n-            string s = ss.str();\n-            if (s.size() > 111) s.erase(111, string::npos);\n-            LogPrint(\"net\", \"Reject %s\\n\", SanitizeString(s));\n+            LogPrint(\"net\", \"Reject %s\\n\", SanitizeString(ss.str()));\n         }\n     }\n "
      },
      {
        "sha": "2eb69b3ec00b8a1681d98f033ce3d6a44559cc99",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 37,
        "deletions": 2,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/216e9a4456207f5ae9cd85926521851e11a26d92/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/216e9a4456207f5ae9cd85926521851e11a26d92/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=216e9a4456207f5ae9cd85926521851e11a26d92",
        "patch": "@@ -334,8 +334,9 @@ I ReadVarInt(Stream& is)\n     }\n }\n \n-#define FLATDATA(obj)  REF(CFlatData((char*)&(obj), (char*)&(obj) + sizeof(obj)))\n-#define VARINT(obj)    REF(WrapVarInt(REF(obj)))\n+#define FLATDATA(obj) REF(CFlatData((char*)&(obj), (char*)&(obj) + sizeof(obj)))\n+#define VARINT(obj) REF(WrapVarInt(REF(obj)))\n+#define LIMITED_STRING(obj,n) REF(LimitedString< n >(REF(obj)))\n \n /** Wrapper for serializing arrays and POD.\n  */\n@@ -398,6 +399,40 @@ class CVarInt\n     }\n };\n \n+template<size_t Limit>\n+class LimitedString\n+{\n+protected:\n+    std::string& string;\n+public:\n+    LimitedString(std::string& string) : string(string) {}\n+\n+    template<typename Stream>\n+    void Unserialize(Stream& s, int, int=0)\n+    {\n+        size_t size = ReadCompactSize(s);\n+        if (size > Limit) {\n+            throw std::ios_base::failure(\"String length limit exceeded\");\n+        }\n+        string.resize(size);\n+        if (size != 0)\n+            s.read((char*)&string[0], size);\n+    }\n+\n+    template<typename Stream>\n+    void Serialize(Stream& s, int, int=0) const\n+    {\n+        WriteCompactSize(s, string.size());\n+        if (!string.empty())\n+            s.write((char*)&string[0], string.size());\n+    }\n+\n+    unsigned int GetSerializeSize(int, int=0) const\n+    {\n+        return GetSizeOfCompactSize(string.size()) + string.size();\n+    }\n+};\n+\n template<typename I>\n CVarInt<I> WrapVarInt(I& n) { return CVarInt<I>(n); }\n "
      },
      {
        "sha": "864a635ec7f8aafb8521ca6b7007c00cb6671818",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/216e9a4456207f5ae9cd85926521851e11a26d92/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/216e9a4456207f5ae9cd85926521851e11a26d92/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=216e9a4456207f5ae9cd85926521851e11a26d92",
        "patch": "@@ -858,7 +858,7 @@ class CWalletKey\n         READWRITE(vchPrivKey);\n         READWRITE(nTimeCreated);\n         READWRITE(nTimeExpires);\n-        READWRITE(strComment);\n+        READWRITE(LIMITED_STRING(strComment, 65536));\n     )\n };\n \n@@ -933,7 +933,7 @@ class CAccountingEntry\n         // Note: strAccount is serialized as part of the key, not here.\n         READWRITE(nCreditDebit);\n         READWRITE(nTime);\n-        READWRITE(strOtherAccount);\n+        READWRITE(LIMITED_STRING(strOtherAccount, 65536));\n \n         if (!fRead)\n         {\n@@ -949,7 +949,7 @@ class CAccountingEntry\n             }\n         }\n \n-        READWRITE(strComment);\n+        READWRITE(LIMITED_STRING(strComment, 65536));\n \n         size_t nSepPos = strComment.find(\"\\0\", 0, 1);\n         if (fRead)"
      }
    ]
  }
]