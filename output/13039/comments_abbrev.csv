practicalswift,2018-04-20T12:39:24Z,Strong concept ACK! Nice!,https://github.com/bitcoin/bitcoin/pull/13039#issuecomment-383082826,383082826,
jonasschnelli,2018-04-23T11:52:17Z,utACK 36424a4f09de38e1ab54381aa7844781688f5c75 (squash recommended).,https://github.com/bitcoin/bitcoin/pull/13039#issuecomment-383548455,383548455,
laanwj,2018-04-23T12:25:52Z,squashed 36424a4  â†’ cf0277928fa8d955d75f661021845789194dfff7,https://github.com/bitcoin/bitcoin/pull/13039#issuecomment-383556753,383556753,
theuni,2018-04-20T14:40:23Z,This value should probably be checked as well: https://msdn.microsoft.com/en-us/library/windows/desktop/aa364439(v=vs.85).aspx,https://github.com/bitcoin/bitcoin/pull/13039#discussion_r183072136,183072136,src/util.cpp
theuni,2018-04-20T14:46:48Z,"I can't come up with a specific reason other than ""gut feeling"", but potentially logging to the same disk that just failed to sync feels icky.",https://github.com/bitcoin/bitcoin/pull/13039#discussion_r183074012,183074012,src/util.cpp
theuni,2018-04-20T14:50:02Z,|=,https://github.com/bitcoin/bitcoin/pull/13039#discussion_r183075035,183075035,src/validation.cpp
theuni,2018-04-20T14:51:40Z,"Wouldn't hurt to check the return value here too, but I guess it's not crucial since any error would just propagate to the sync.",https://github.com/bitcoin/bitcoin/pull/13039#discussion_r183075554,183075554,src/validation.cpp
theuni,2018-04-20T14:58:50Z,"Should this attempt to close before returning? I assume we're in bad shape already if we get here, but I'm afraid that some one-off sync failure could lead to multiple copies open and weird fd behavior.",https://github.com/bitcoin/bitcoin/pull/13039#discussion_r183078031,183078031,src/addrdb.cpp
theuni,2018-04-20T14:59:47Z,See fclose comment above.,https://github.com/bitcoin/bitcoin/pull/13039#discussion_r183078393,183078393,src/validation.cpp
theuni,2018-04-20T15:00:14Z,~~aaand here~~ :),https://github.com/bitcoin/bitcoin/pull/13039#discussion_r183078606,183078606,src/validation.cpp
theuni,2018-04-20T15:07:47Z,"Whoops, and the logic for these is backwards. They should be:\n```c++\n flush_failed |= !FileCommit(fileOld);\n```",https://github.com/bitcoin/bitcoin/pull/13039#discussion_r183080978,183080978,src/validation.cpp
theuni,2018-04-20T15:32:51Z,"Interestingly, leveldb does not compare the result to EINVAL. Which makes sense for a database, as if writes can't be synchronized at any point, the db can't really ever be trusted.\n\nI think we might want to operate the same way. If a FlushBlockFile() fails due to a disk/filesystem that can't sync, do we really want to continue with updating the index db?",https://github.com/bitcoin/bitcoin/pull/13039#discussion_r183088864,183088864,src/util.cpp
laanwj,2018-04-20T15:35:25Z,"That's not *necessarily* the case, e.g. they might be logging to stdout, or piping the log to something else over the network. Logging the error is extremely important for troubleshooting in any case, even if it might fail.",https://github.com/bitcoin/bitcoin/pull/13039#discussion_r183089712,183089712,src/util.cpp
laanwj,2018-04-20T15:35:43Z,Ah yes this should be flush_ok,https://github.com/bitcoin/bitcoin/pull/13039#discussion_r183089814,183089814,src/validation.cpp
laanwj,2018-04-20T15:38:10Z,"leveldb does compare against EINVAL, we had this issue a long time ago where leveldb didn't work with certain filesystems (e.g. NTFS mounted from Linux). This was eventually fixed by adding the compare against EINVAL.\nWe certainly don't want to repeat this issue with the block files!\n```\n$ git grep fsync\nutil/env_posix.cc:        if (fsync(fd) < 0 && errno != EINVAL) {\n``",https://github.com/bitcoin/bitcoin/pull/13039#discussion_r183090593,183090593,src/util.cpp
laanwj,2018-04-20T15:41:21Z,Doesn't CAutofile destructor take care of this?,https://github.com/bitcoin/bitcoin/pull/13039#discussion_r183091501,183091501,src/addrdb.cpp
laanwj,2018-04-20T15:45:05Z,Will do,https://github.com/bitcoin/bitcoin/pull/13039#discussion_r183092652,183092652,src/validation.cpp
laanwj,2018-04-20T15:47:04Z,Ok,https://github.com/bitcoin/bitcoin/pull/13039#discussion_r183093281,183093281,src/util.cpp
theuni,2018-04-20T15:48:02Z,"Hmm. leveldb checks the fsync() in SyncDirIfManifest() against EINVAL, but not the fdatasync() in Sync().\n\nI have no knowledge of the past issue though, so I'll defer to you on that.",https://github.com/bitcoin/bitcoin/pull/13039#discussion_r183093591,183093591,src/util.cpp
theuni,2018-04-20T15:50:51Z,"yep, nevermind missed that this was a CAutofile.",https://github.com/bitcoin/bitcoin/pull/13039#discussion_r183094458,183094458,src/addrdb.cpp
laanwj,2018-04-20T15:51:37Z,"> as if writes can't be synchronized at any point, the db can't really ever be trusted.\n\nI don't agree. When shutting down bitcoind and the OS cleanly, `f(data)sync` is a no-op. It's only an issue if there are sudden crashes or power outages. In which case the user will just have to accept potential corruption on crashes when choosing to use a filesystem that doesn't support these things. Cert",https://github.com/bitcoin/bitcoin/pull/13039#discussion_r183094671,183094671,src/util.cpp
