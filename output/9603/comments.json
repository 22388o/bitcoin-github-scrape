[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274188404",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9603#issuecomment-274188404",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9603",
    "id": 274188404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDE4ODQwNA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-20T21:46:49Z",
    "updated_at": "2017-01-20T21:47:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "First, let's define an _cosmetic issue_ as an issue for which a fix wouldn't change the possible code paths taken at runtime (think unchanged binary). Cosmetic issues would then include things such as trailing whitespace, tabs instead of spaces, etc.\r\n\r\nSecond, \r\n* Why do we want to add a linter? Is the goal to catch cosmetic problems, non-cosmetic problems or both?\r\n* What would be the incremental gain of adding a C++ linter?\r\n* What would be the incremental gain of adding a Python linter?\r\n* Do we strive to achieve the same level of assurance from Travis CI regarding the code quality after a passed Travis CI build regardless of the language of the code changed in a newly submitted PR?\r\n\r\nIn C++ land we can assume that most non-cosmetic problems (\"real issues\") that would be uncovered by a good linter are likely already covered by the compiler's warnings/errors. The incremental gain of adding a C++ linter would likely be limited to improved style consistency of the code base.\r\n\r\nIn Python land the situation is quite different. Adding a Python linter to the Travis CI build process would help us uncover real non-cosmetic issues that otherwise could go unnoticed until runtime (`NameError`:s, logic errors due to inconsistent indentation, etc.).\r\n\r\nI think there is a really strong case for adding a Python linter that would be finely tuned to catch only real non-cosmetic issues and disregard all styling issues. That would increase the level of assurance given by a passed Travis CI build at a very low cost.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274188404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277060924",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9603#issuecomment-277060924",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9603",
    "id": 277060924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzA2MDkyNA==",
    "user": {
      "login": "isle2983",
      "id": 20916903,
      "node_id": "MDQ6VXNlcjIwOTE2OTAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/20916903?u=55afb982585071fd8243dfe7f71eac36c75948ea&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/isle2983",
      "html_url": "https://github.com/isle2983",
      "followers_url": "https://api.github.com/users/isle2983/followers",
      "following_url": "https://api.github.com/users/isle2983/following{/other_user}",
      "gists_url": "https://api.github.com/users/isle2983/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/isle2983/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/isle2983/subscriptions",
      "organizations_url": "https://api.github.com/users/isle2983/orgs",
      "repos_url": "https://api.github.com/users/isle2983/repos",
      "events_url": "https://api.github.com/users/isle2983/events{/privacy}",
      "received_events_url": "https://api.github.com/users/isle2983/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-02T19:42:30Z",
    "updated_at": "2017-02-02T19:42:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing.\r\n\r\nThe plan is to submit script likes this to https://github.com/bitcoin-core/bitcoin-maintainer-tools as that now seems to be the preferred location.\r\n\r\nI will be touching up this script to share some code with the others and submitting it all as a PR there.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277060924/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]