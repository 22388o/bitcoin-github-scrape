fanquake,2017-11-30T01:26:06Z,Needs a rebase.,https://github.com/bitcoin/bitcoin/pull/11771#issuecomment-348052948,348052948,
jnewbery,2017-11-30T03:33:40Z,rebased,https://github.com/bitcoin/bitcoin/pull/11771#issuecomment-348072720,348072720,
jnewbery,2017-12-02T16:23:33Z,Rebased and made slight improvements to the P2PStub class.,https://github.com/bitcoin/bitcoin/pull/11771#issuecomment-348702632,348702632,
jnewbery,2017-12-02T22:20:14Z,"Thanks for the review @jamesob . I've removed the errant comment, and improved comments for the P2PStub methods.",https://github.com/bitcoin/bitcoin/pull/11771#issuecomment-348724367,348724367,
jamesob,2017-12-03T05:30:09Z,utACK https://github.com/bitcoin/bitcoin/pull/11771/commits/e72c94cda663102c7e188b80e9cdb76026c0b6a7,https://github.com/bitcoin/bitcoin/pull/11771#issuecomment-348741681,348741681,
jamesob,2017-12-03T05:33:13Z,"...modulo the legitimate-looking test failure: \n```\n  File ""/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/test/functional/invalidtxrequest.py"", line 50, in run_test\n    node.p2p.send_txs_and_test([tx1], node, False, 16, b'mandatory-script-verify-flag-failed (Invalid OP_IF construction)')\n  File ""/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-lin",https://github.com/bitcoin/bitcoin/pull/11771#issuecomment-348741769,348741769,
jnewbery,2017-12-04T14:55:58Z,"Great. Travis caught a race condition. I wasn't able to reproduce it locally.\n\nShould be fixed in the final commit. @jamesob - let me know when you've taken a look and I'll squash into the *Add P2PStub class* commit.",https://github.com/bitcoin/bitcoin/pull/11771#issuecomment-348985760,348985760,
jnewbery,2017-12-11T14:32:07Z,squashed fix and rebased,https://github.com/bitcoin/bitcoin/pull/11771#issuecomment-350740471,350740471,
jnewbery,2017-12-14T18:49:27Z,"Fixed @MarcoFalke's comments, along with a few variable renamings. I've pushed as a fixup commit. Will squash once Marco confirms he's happy with the fixup.",https://github.com/bitcoin/bitcoin/pull/11771#issuecomment-351801429,351801429,
MarcoFalke,2017-12-14T23:13:00Z,"fixups look good, though a travis failure:\n\n```\n./test/functional/test_framework/mininode.py:26:1: F401 'test_framework.util.assert_equal' imported but unused\n\n^---- failure generated from contrib/devtools/lint-python.sh\n```\n\nFeel free to squash. I am going to review from scratch anyway.\n",https://github.com/bitcoin/bitcoin/pull/11771#issuecomment-351864741,351864741,
jnewbery,2017-12-15T22:35:49Z,squashed && rebased,https://github.com/bitcoin/bitcoin/pull/11771#issuecomment-352129111,352129111,
jnewbery,2018-01-18T21:05:20Z,Thanks for the review @ryanofsky - I think I've addressed all your comments,https://github.com/bitcoin/bitcoin/pull/11771#issuecomment-358781287,358781287,
jnewbery,2018-01-29T14:53:43Z,rebased to conform with new naming convention.,https://github.com/bitcoin/bitcoin/pull/11771#issuecomment-361269654,361269654,
jnewbery,2018-01-29T23:34:53Z,Thanks for the review @jamesob . I've added a fixup commit that adds logging as suggested. If you're happy with that I'll squash it into the P2PDataStore commit.,https://github.com/bitcoin/bitcoin/pull/11771#issuecomment-361424329,361424329,
jnewbery,2018-01-30T14:31:47Z,thanks. Fixup commit squashed,https://github.com/bitcoin/bitcoin/pull/11771#issuecomment-361610392,361610392,
jamesob,2018-01-30T21:20:07Z,utACK https://github.com/bitcoin/bitcoin/pull/11771/commits/359d06757249b34b36688eaef31e7626a46bd52a,https://github.com/bitcoin/bitcoin/pull/11771#issuecomment-361737826,361737826,
laanwj,2018-02-13T09:30:20Z,"Seems to be ready for merge. If you don't mind @conscott I'll leave your suggestions for a future PR, this is only the first in a series.",https://github.com/bitcoin/bitcoin/pull/11771#issuecomment-365204517,365204517,
jnewbery,2018-02-13T13:55:37Z,Thanks for the review @conscott . I'll address your points in #11772.,https://github.com/bitcoin/bitcoin/pull/11771#issuecomment-365273318,365273318,
jnewbery,2018-03-18T23:04:57Z,"Agree with all of @MarcoFalke's comments, which can be addressed in a future PR.",https://github.com/bitcoin/bitcoin/pull/11771#issuecomment-374063356,374063356,
jamesob,2017-12-02T20:50:45Z,Unnecessary comment?,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r154506637,154506637,test/functional/test_framework/mininode.py
jnewbery,2017-12-02T22:19:43Z,duh. Vestigial garbage. I'll remove.,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r154508628,154508628,test/functional/test_framework/mininode.py
MarcoFalke,2017-12-14T16:08:30Z,"Mind to simplify the nested ifs?\n\n```py\nelif inv.type & MSG_TX and inv.hash in self.block_store.keys():\n    self.send...",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r156986892,156986892,test/functional/test_framework/mininode.py
MarcoFalke,2017-12-14T16:14:41Z,nit: Add a comment why this would ever be true and not dead code?,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r156988773,156988773,test/functional/test_framework/mininode.py
MarcoFalke,2017-12-14T16:27:51Z,"Since `getdata_requests` is written to with the mininode lock, why is a `lock=mininode_lock` not required when reading?",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r156992833,156992833,test/functional/test_framework/mininode.py
MarcoFalke,2017-12-14T16:39:49Z,"The documentation states ""whether *they* are accepted"", but you only check one.",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r156996583,156996583,test/functional/test_framework/mininode.py
jnewbery,2017-12-14T17:01:45Z,"inv types are not bit flags in general, so `inv.type & MSG_TX` evaluates to true for MSG_FILTERED_BLOCK (and `inv.type & MSG_BLOCK` also evalutes to true for MSG_FILTERED_BLOCK).\n\nFlattening the nested ifs would give:\n\n```python\n            if (inv.type == 1 or inv.type == 1 | MSG_WITNESS_FLAG) and inv.hash in self.tx_store.keys():\n                self.send_message(msg_tx(self.tx_store",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157002945,157002945,test/functional/test_framework/mininode.py
MarcoFalke,2017-12-14T17:47:46Z,"Nope, fine to leave as is.",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157015179,157015179,test/functional/test_framework/mininode.py
jnewbery,2017-12-14T18:05:23Z,This isn't actually required. Removing.,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157019524,157019524,test/functional/test_framework/mininode.py
jnewbery,2017-12-14T18:06:10Z,You're right. This is required. Updating.,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157019699,157019699,test/functional/test_framework/mininode.py
jnewbery,2017-12-14T18:48:32Z,fixed,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157029429,157029429,test/functional/test_framework/mininode.py
ryanofsky,2017-12-19T19:00:25Z,"https://github.com/bitcoin/bitcoin/pull/11771#discussion_r156986892\n\nIn commit ""Add P2PStub class""\n\nI also think this is fine as is, but I would suggest taking constants from the c++ code and writing:\n\n```python3\nif (inv.type & MSG_TYPE_MASK) == MSG_TX and inv.hash in self.tx_store.keys():\n```",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157845293,157845293,test/functional/test_framework/mininode.py
ryanofsky,2017-12-19T19:05:38Z,"In commit ""Add P2PStub class""\n\nIf following PEP8 this should be `if not self.block_store:`",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157846565,157846565,test/functional/test_framework/mininode.py
ryanofsky,2017-12-19T19:06:09Z,"In commit ""Add P2PStub class""\n\nUnnecessary parentheses",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157846703,157846703,test/functional/test_framework/mininode.py
ryanofsky,2017-12-19T19:12:10Z,"In commit ""Add P2PStub class""\n\nUsually better to append to end of list than insert at beginning of list. You can get the last maxheaders in reverse order with `header_list[:-maxheaders-1:-1]",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157848246,157848246,test/functional/test_framework/mininode.py
ryanofsky,2017-12-19T19:17:56Z,"Maybe `assert block.sha256 not in block_store` because if this is not true, ordering assumption could be broken and next(reversed(block_store)) might not actually return the last block.",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157849606,157849606,test/functional/test_framework/mininode.py
ryanofsky,2017-12-19T19:23:56Z,"In commit ""Add P2PStub class""\n\nUsing OrderedDict for this seems fragile, and also seems like it requires storing unnecessary ordering information. The only place ordering seems to be used is in the `reversed(next(block_store))` call returning the most recent block hash. But it would seem more straightforward and efficient just to add a `last_block_hash` member variable to hold this instead of ",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157851175,157851175,test/functional/test_framework/mininode.py
ryanofsky,2017-12-19T19:25:42Z,"In commit ""Add P2PStub class""\n\nCould use a comment here like `# block hash -> CBlock` to indicate what the keys and values are.",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157851682,157851682,test/functional/test_framework/mininode.py
ryanofsky,2017-12-19T19:26:47Z,"In commit ""Add P2PStub class""\n\nCould use a comment here like `# tx hash -> CTransaction` to indicate what the keys and values are.",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157851969,157851969,test/functional/test_framework/mininode.py
ryanofsky,2017-12-19T19:33:25Z,"In commit ""Add P2PStub class""\n\nUnnecessary parentheses. Also it, seems like you could just check `headers_list[0].sha256 != hash_stop` in the while loop above and drop this extra truncation code.",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157853684,157853684,test/functional/test_framework/mininode.py
ryanofsky,2017-12-19T19:38:33Z,"In commit ""Add P2PStub class""\n\nNeed mininode_lock here?",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157854985,157854985,test/functional/test_framework/mininode.py
ryanofsky,2017-12-19T19:40:48Z,"In commit ""Add P2PStub class""\n\nNeed mininode_lock?",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157855530,157855530,test/functional/test_framework/mininode.py
ryanofsky,2017-12-19T19:51:23Z,"In commit `[tests] Fix flake8 warnings in invalidtxrequest`\n\nI see you are removing `self.tip` variable entirely in next commit, but it seems safer not to drop the `None` condition in this commit, which is supposed to only be fixing flake8 warnings.",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157858302,157858302,test/functional/invalidtxrequest.py
ryanofsky,2017-12-19T19:55:23Z,"In commit ""Add P2PStub class""\n\nName like `P2PDataStore` might more suggestive than `P2PStub`",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157859281,157859281,test/functional/test_framework/mininode.py
ryanofsky,2017-12-19T19:57:12Z,"In commit ""Change invalidtxrequest to use BitcoinTestFramework""\n\nCould do `int(self.nodes[0].getbestblockhash(), 16)` and drop ""0x"" prefix, I think.",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157859689,157859689,test/functional/invalidtxrequest.py
ryanofsky,2017-12-19T19:59:15Z,"In commit ""Change invalidtxrequest to use BitcoinTestFramework""\n\nMaybe drop `True` since that seems to be the default value, or write `success=True`. Plain `True` by itself doesn't convey anything and just seems suspicious.",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157860199,157860199,test/functional/invalidtxrequest.py
ryanofsky,2017-12-19T20:01:31Z,"In commit ""Change invalidtxrequest to use BitcoinTestFramework""\n\nMaybe add `success=`, `reject_code=`, keywords for future proofing and clarity.",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r157860702,157860702,test/functional/invalidtxrequest.py
ryanofsky,2017-12-20T20:07:43Z,"In commit ""Change invalidtxrequest to use BitcoinTestFramework""\n\nCould maybe switch from time.time() to best_block[""time""] to be consistent with invalidblockrequest change in #11172. It seems better in a test environment, to be using information from the environment instead of calling out to the OS.",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r158123643,158123643,test/functional/invalidtxrequest.py
jnewbery,2018-01-17T14:05:37Z,"`self.tip` is set to `None` in `run_test()` and then `run()` is called, which calls `get_tests()`, so `self.tip` has to be `None` at this point.\n\nSo yes, this isn't strictly fixing a flake8 warning, but it's a safe tidy-up which is removed in the next commit.",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r162058516,162058516,test/functional/invalidtxrequest.py
jnewbery,2018-01-18T18:01:46Z,agree. That's better,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r162422447,162422447,test/functional/invalidtxrequest.py
jnewbery,2018-01-18T18:03:02Z,yes,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r162422751,162422751,test/functional/invalidtxrequest.py
jnewbery,2018-01-18T18:07:55Z,yes,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r162424116,162424116,test/functional/invalidtxrequest.py
jnewbery,2018-01-18T18:08:04Z,"ok, changed to `P2PDataStore`",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r162424146,162424146,test/functional/test_framework/mininode.py
jnewbery,2018-01-18T20:21:36Z,yes - makes more sense.,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r162458575,162458575,test/functional/test_framework/mininode.py
jnewbery,2018-01-18T20:22:44Z,added,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r162458847,162458847,test/functional/test_framework/mininode.py
jnewbery,2018-01-18T20:22:49Z,added,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r162458865,162458865,test/functional/test_framework/mininode.py
jnewbery,2018-01-18T20:32:09Z,taken @ryanofsky's suggested change,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r162461080,162461080,test/functional/test_framework/mininode.py
jnewbery,2018-01-18T20:32:46Z,indeed,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r162461207,162461207,test/functional/test_framework/mininode.py
jnewbery,2018-01-18T20:33:01Z,removed,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r162461266,162461266,test/functional/test_framework/mininode.py
jnewbery,2018-01-18T20:34:44Z,changed,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r162461717,162461717,test/functional/test_framework/mininode.py
jnewbery,2018-01-18T20:51:34Z,yes. This code was copied from an blockstore.py. I've tidied up as you've suggested.,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r162465832,162465832,test/functional/test_framework/mininode.py
jnewbery,2018-01-18T20:58:10Z,added mininode_lock. I don't think the assert is necessary - we may wish to send the same block over the same P2P interface more than once.,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r162467440,162467440,test/functional/test_framework/mininode.py
jnewbery,2018-01-18T20:58:14Z,added,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r162467464,162467464,test/functional/test_framework/mininode.py
jnewbery,2018-01-18T21:04:51Z,"Yes, good idea",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r162469069,162469069,test/functional/invalidtxrequest.py
ryanofsky,2018-01-23T20:39:34Z,"[tests] Add P2PDataStore class\n\nTypo ""gthe""",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r163369999,163369999,test/functional/test_framework/mininode.py
jnewbery,2018-01-23T21:09:45Z,fixed,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r163377563,163377563,test/functional/test_framework/mininode.py
MarcoFalke,2018-01-24T16:24:33Z,"the type is already a hash (i.e. int)\n```\nAttributeError: 'int' object has no attribute 'sha256'",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r163599441,163599441,test/functional/test_framework/mininode.py
jnewbery,2018-01-24T16:38:51Z,"Thanks Marco. This was a bug introduced when changing from an orderedDict to just storing the last_block_hash in the P2PDataStore class. Only hit on travis because of a timing window.\n\nThis is now fixed.",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r163603978,163603978,test/functional/test_framework/mininode.py
MarcoFalke,2018-01-24T22:52:12Z,This will send the headers in the opposite order of what the protocol requires?,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r163703787,163703787,test/functional/test_framework/mininode.py
MarcoFalke,2018-01-24T22:53:08Z,I don't see how this could be None,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r163703992,163703992,test/functional/test_framework/mininode.py
MarcoFalke,2018-01-24T22:55:10Z,"Couldn't you use the existing blockstore code? I know that for the purpose of this test saving blocks to disk twice is overkill, but by reducing the code and diff, wouldn't that be preferable?",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r163704370,163704370,test/functional/test_framework/mininode.py
jnewbery,2018-01-25T00:08:53Z,"This is just ported directly from `on_getheaders()` in comptool.py (which calls into `headers_for()` in blockstore.py).\n\nYou're right that this could never be `None`. That was the case before in the original code. I could fix this here (which would make the logical diff from the existing code bigger), or fix it in a follow-up PR.",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r163717494,163717494,test/functional/test_framework/mininode.py
jnewbery,2018-01-25T00:12:04Z,"This is the same as the existing blockstore.py code. In that code, the headers were inserted at the front of the list and then a msg_headers was constructed. In this version we append the headers at the end of the list and then reverse the order before constructing the msg_headers.",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r163717972,163717972,test/functional/test_framework/mininode.py
jamesob,2018-01-29T22:34:05Z,Minor thought for debuggability: is it conceivable there's a case for which an `else:` clause that logs an unexpected message type might come in handy? ,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r164586641,164586641,test/functional/test_framework/mininode.py
jamesob,2018-01-29T22:34:56Z,Worth logging some indication of a miss?,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r164586814,164586814,test/functional/test_framework/mininode.py
jamesob,2018-01-29T22:48:16Z,I've found f strings convenient (`f'{tx.hash} not found in mempool'`) but that's personal preference.,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r164589777,164589777,test/functional/test_framework/mininode.py
jnewbery,2018-01-29T22:53:32Z,"I also like f strings, but they're new in v3.6, and we support older Python versions than that (back to v3.4 at least).",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r164590810,164590810,test/functional/test_framework/mininode.py
jamesob,2018-01-29T22:56:42Z,"Ah, makes sense.",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r164591418,164591418,test/functional/test_framework/mininode.py
jnewbery,2018-01-29T23:34:00Z,added logging,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r164599000,164599000,test/functional/test_framework/mininode.py
jnewbery,2018-01-29T23:34:07Z,added logging,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r164599019,164599019,test/functional/test_framework/mininode.py
conscott,2018-02-12T22:44:32Z,This line can be removed. `block_time` is never used again. ,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r167710791,167710791,test/functional/p2p_invalid_tx.py
conscott,2018-02-12T22:45:00Z,This line can also be removed. `height` is never used again. ,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r167710892,167710892,test/functional/p2p_invalid_tx.py
conscott,2018-02-12T23:24:47Z,"`send_txs_and_test` is created in this PR, but I do not see it being called with `sucess=True` in any PRs mentioned in #10603 \n\nDoes it make sense to also send a valid transaction in this code block as well, to verify that codepath? ",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r167718956,167718956,test/functional/p2p_invalid_tx.py
MarcoFalke,2018-03-13T20:14:28Z,Could be removed. This is already done by `P2PConnection._log_message`.,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r174269247,174269247,test/functional/test_framework/mininode.py
MarcoFalke,2018-03-13T20:14:50Z,Could be removed per my previous review.,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r174269362,174269362,test/functional/test_framework/mininode.py
MarcoFalke,2018-03-13T20:15:41Z,"nit: Replace ""tx is"" with ""txs are""",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r174269574,174269574,test/functional/test_framework/mininode.py
MarcoFalke,2018-03-29T20:57:25Z,"I can't find a reason why you are sending the full block in a headers message instead of just the header? If there is a reason, it should be documented, otherwise I'd suggest sending just the header.",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r178179559,178179559,test/functional/test_framework/mininode.py
jnewbery,2018-03-30T20:21:12Z,"Yes, I agree - this should be changed to just be the header.",https://github.com/bitcoin/bitcoin/pull/11771#discussion_r178370087,178370087,test/functional/test_framework/mininode.py
jnewbery,2018-04-02T19:45:03Z,Fixed in #12861,https://github.com/bitcoin/bitcoin/pull/11771#discussion_r178630570,178630570,test/functional/test_framework/mininode.py
