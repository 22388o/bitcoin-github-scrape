[
  {
    "sha": "2530bf27b72e53cc6ffec27de35f3b487984833d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNTMwYmYyN2I3MmU1M2NjNmZmZWMyN2RlMzVmM2I0ODc5ODQ4MzNk",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-10-30T13:28:19Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-10-30T19:00:17Z"
      },
      "message": "net: Add missing lock in ProcessHeadersMessage(...)\n\nReading the variable mapBlockIndex requires holding the mutex cs_main.\n\nThe new \"Disconnect outbound peers relaying invalid headers\" code\nadded in commit 37886d5e2f9992678dea4b1bd893f4f10d61d3ad and merged\nas part of #11568 two days ago did not lock cs_main prior to accessing\nmapBlockIndex.",
      "tree": {
        "sha": "1c58acb71c17cfafaed5f31f841ce46c915678bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1c58acb71c17cfafaed5f31f841ce46c915678bb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2530bf27b72e53cc6ffec27de35f3b487984833d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2530bf27b72e53cc6ffec27de35f3b487984833d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2530bf27b72e53cc6ffec27de35f3b487984833d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2530bf27b72e53cc6ffec27de35f3b487984833d/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb9ab0fccfbadd5c032a2cd0bb3135049cffa42b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb9ab0fccfbadd5c032a2cd0bb3135049cffa42b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb9ab0fccfbadd5c032a2cd0bb3135049cffa42b"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "92b7a75f736932964a524252ca8a95d8e047b9c0",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2530bf27b72e53cc6ffec27de35f3b487984833d/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2530bf27b72e53cc6ffec27de35f3b487984833d/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=2530bf27b72e53cc6ffec27de35f3b487984833d",
        "patch": "@@ -1262,8 +1262,8 @@ bool static ProcessHeadersMessage(CNode *pfrom, CConnman *connman, const std::ve\n     if (!ProcessNewBlockHeaders(headers, state, chainparams, &pindexLast, &first_invalid_header)) {\n         int nDoS;\n         if (state.IsInvalid(nDoS)) {\n+            LOCK(cs_main);\n             if (nDoS > 0) {\n-                LOCK(cs_main);\n                 Misbehaving(pfrom->GetId(), nDoS);\n             }\n             if (punish_duplicate_invalid && mapBlockIndex.find(first_invalid_header.GetHash()) != mapBlockIndex.end()) {"
      }
    ]
  }
]