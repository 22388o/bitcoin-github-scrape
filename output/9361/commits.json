[
  {
    "sha": "58df13bf3c9d5e279a0d7628e702e1de44e1e04f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OGRmMTNiZjNjOWQ1ZTI3OWEwZDc2MjhlNzAyZTFkZTQ0ZTFlMDRm",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-12-06T07:26:32Z"
      },
      "committer": {
        "name": "Kalle Alm",
        "email": "kalle.alm@gmail.com",
        "date": "2016-12-16T12:18:33Z"
      },
      "message": "Complain when unknown rpcserialversion is specified",
      "tree": {
        "sha": "ddd86c5b05f0783adb17a05cfcd20be47a2b9be4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ddd86c5b05f0783adb17a05cfcd20be47a2b9be4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58df13bf3c9d5e279a0d7628e702e1de44e1e04f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58df13bf3c9d5e279a0d7628e702e1de44e1e04f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/58df13bf3c9d5e279a0d7628e702e1de44e1e04f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58df13bf3c9d5e279a0d7628e702e1de44e1e04f/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "756374c522c46d884496a7c80626a65245db49c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/756374c522c46d884496a7c80626a65245db49c8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/756374c522c46d884496a7c80626a65245db49c8"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c5dc9578e78b8783d352443920db8e94968da86b",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58df13bf3c9d5e279a0d7628e702e1de44e1e04f/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58df13bf3c9d5e279a0d7628e702e1de44e1e04f/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=58df13bf3c9d5e279a0d7628e702e1de44e1e04f",
        "patch": "@@ -380,7 +380,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-port=<port>\", strprintf(_(\"Listen for connections on <port> (default: %u or testnet: %u)\"), Params(CBaseChainParams::MAIN).GetDefaultPort(), Params(CBaseChainParams::TESTNET).GetDefaultPort()));\n     strUsage += HelpMessageOpt(\"-proxy=<ip:port>\", _(\"Connect through SOCKS5 proxy\"));\n     strUsage += HelpMessageOpt(\"-proxyrandomize\", strprintf(_(\"Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)\"), DEFAULT_PROXYRANDOMIZE));\n-    strUsage += HelpMessageOpt(\"-rpcserialversion\", strprintf(_(\"Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(>0) (default: %d)\"), DEFAULT_RPC_SERIALIZE_VERSION));\n+    strUsage += HelpMessageOpt(\"-rpcserialversion\", strprintf(_(\"Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(1) (default: %d)\"), DEFAULT_RPC_SERIALIZE_VERSION));\n     strUsage += HelpMessageOpt(\"-seednode=<ip>\", _(\"Connect to a node to retrieve peer addresses, and disconnect\"));\n     strUsage += HelpMessageOpt(\"-timeout=<n>\", strprintf(_(\"Specify connection timeout in milliseconds (minimum: 1, default: %d)\"), DEFAULT_CONNECT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-torcontrol=<ip>:<port>\", strprintf(_(\"Tor control port to use if onion listening enabled (default: %s)\"), DEFAULT_TOR_CONTROL));\n@@ -988,6 +988,9 @@ bool AppInitParameterInteraction()\n     if (GetArg(\"-rpcserialversion\", DEFAULT_RPC_SERIALIZE_VERSION) < 0)\n         return InitError(\"rpcserialversion must be non-negative.\");\n \n+    if (GetArg(\"-rpcserialversion\", DEFAULT_RPC_SERIALIZE_VERSION) > 1)\n+        return InitError(\"unknown rpcserialversion requested.\");\n+\n     nMaxTipAge = GetArg(\"-maxtipage\", DEFAULT_MAX_TIP_AGE);\n \n     fEnableReplacement = GetBoolArg(\"-mempoolreplacement\", DEFAULT_ENABLE_REPLACEMENT);"
      }
    ]
  },
  {
    "sha": "a544aa0f12dd64eb52daa88c25e572fb3b83701c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNTQ0YWEwZjEyZGQ2NGViNTJkYWE4OGMyNWU1NzJmYjNiODM3MDFj",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-12-11T13:12:47Z"
      },
      "committer": {
        "name": "Kalle Alm",
        "email": "kalle.alm@gmail.com",
        "date": "2016-12-16T12:18:33Z"
      },
      "message": "[qa] Don't set unknown rpcserialversion",
      "tree": {
        "sha": "33b3f138b28115a9aff51037c3fd9f10eea8de0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33b3f138b28115a9aff51037c3fd9f10eea8de0d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a544aa0f12dd64eb52daa88c25e572fb3b83701c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a544aa0f12dd64eb52daa88c25e572fb3b83701c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a544aa0f12dd64eb52daa88c25e572fb3b83701c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a544aa0f12dd64eb52daa88c25e572fb3b83701c/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "58df13bf3c9d5e279a0d7628e702e1de44e1e04f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58df13bf3c9d5e279a0d7628e702e1de44e1e04f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/58df13bf3c9d5e279a0d7628e702e1de44e1e04f"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "be6fae5088963dce7a4586179b4f47ae1a8d0116",
        "filename": "qa/rpc-tests/segwit.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a544aa0f12dd64eb52daa88c25e572fb3b83701c/qa/rpc-tests/segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a544aa0f12dd64eb52daa88c25e572fb3b83701c/qa/rpc-tests/segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/segwit.py?ref=a544aa0f12dd64eb52daa88c25e572fb3b83701c",
        "patch": "@@ -86,7 +86,7 @@ def __init__(self):\n     def setup_network(self):\n         self.nodes = []\n         self.nodes.append(start_node(0, self.options.tmpdir, [\"-logtimemicros\", \"-debug\", \"-walletprematurewitness\", \"-rpcserialversion=0\"]))\n-        self.nodes.append(start_node(1, self.options.tmpdir, [\"-logtimemicros\", \"-debug\", \"-blockversion=4\", \"-promiscuousmempoolflags=517\", \"-prematurewitness\", \"-walletprematurewitness\", \"-rpcserialversion=2\"]))\n+        self.nodes.append(start_node(1, self.options.tmpdir, [\"-logtimemicros\", \"-debug\", \"-blockversion=4\", \"-promiscuousmempoolflags=517\", \"-prematurewitness\", \"-walletprematurewitness\", \"-rpcserialversion=1\"]))\n         self.nodes.append(start_node(2, self.options.tmpdir, [\"-logtimemicros\", \"-debug\", \"-blockversion=536870915\", \"-promiscuousmempoolflags=517\", \"-prematurewitness\", \"-walletprematurewitness\"]))\n         connect_nodes(self.nodes[1], 0)\n         connect_nodes(self.nodes[2], 1)\n@@ -216,7 +216,6 @@ def run_test(self):\n         assert_equal(len(segwit_tx_list), 5)\n \n         print(\"Verify block and transaction serialization rpcs return differing serializations depending on rpc serialization flag\")\n-        # Note: node1 has version 2, which is simply >0 and will catch future upgrades in tests\n         assert(self.nodes[2].getblock(block[0], False) !=  self.nodes[0].getblock(block[0], False))\n         assert(self.nodes[1].getblock(block[0], False) ==  self.nodes[2].getblock(block[0], False))\n         for i in range(len(segwit_tx_list)):"
      }
    ]
  },
  {
    "sha": "e83b11b792c5384e1e5b4d9f784e8c7e19ebdf6e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODNiMTFiNzkyYzUzODRlMWU1YjRkOWY3ODRlOGM3ZTE5ZWJkZjZl",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2016-12-16T07:52:35Z"
      },
      "committer": {
        "name": "Kalle Alm",
        "email": "kalle.alm@gmail.com",
        "date": "2016-12-16T12:19:54Z"
      },
      "message": "Uses built-in byte swap if available (Apple) and if bswap_XX is undefined.\n\nDefers to pre-defined version if found (e.g. protobuf). For protobuf case, the definitions are identical and thus include order should not affect results.",
      "tree": {
        "sha": "45393332d05fdc23f1f88fa21bb5bc0b27f29ed8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45393332d05fdc23f1f88fa21bb5bc0b27f29ed8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e83b11b792c5384e1e5b4d9f784e8c7e19ebdf6e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e83b11b792c5384e1e5b4d9f784e8c7e19ebdf6e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e83b11b792c5384e1e5b4d9f784e8c7e19ebdf6e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e83b11b792c5384e1e5b4d9f784e8c7e19ebdf6e/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a544aa0f12dd64eb52daa88c25e572fb3b83701c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a544aa0f12dd64eb52daa88c25e572fb3b83701c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a544aa0f12dd64eb52daa88c25e572fb3b83701c"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 76,
      "deletions": 0
    },
    "files": [
      {
        "sha": "bc6263cbf1bb1198fdc5124f8e4701492c9f9243",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e83b11b792c5384e1e5b4d9f784e8c7e19ebdf6e/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e83b11b792c5384e1e5b4d9f784e8c7e19ebdf6e/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=e83b11b792c5384e1e5b4d9f784e8c7e19ebdf6e",
        "patch": "@@ -52,6 +52,7 @@ BITCOIN_TESTS =\\\n   test/bip32_tests.cpp \\\n   test/blockencodings_tests.cpp \\\n   test/bloom_tests.cpp \\\n+  test/bswap_tests.cpp \\\n   test/coins_tests.cpp \\\n   test/compress_tests.cpp \\\n   test/crypto_tests.cpp \\\n@@ -107,6 +108,11 @@ BITCOIN_TESTS += \\\n   wallet/test/crypto_tests.cpp\n endif\n \n+if ENABLE_QT\n+BITCOIN_TESTS += \\\n+  test/bswap_protobuf_tests.cpp\n+endif\n+\n test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS)\n test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\"
      },
      {
        "sha": "f35e3833268a2c2c6cb546be3b49e65902733532",
        "filename": "src/compat/byteswap.h",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e83b11b792c5384e1e5b4d9f784e8c7e19ebdf6e/src/compat/byteswap.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e83b11b792c5384e1e5b4d9f784e8c7e19ebdf6e/src/compat/byteswap.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/byteswap.h?ref=e83b11b792c5384e1e5b4d9f784e8c7e19ebdf6e",
        "patch": "@@ -15,6 +15,23 @@\n #include <byteswap.h>\n #endif\n \n+#if defined(__APPLE__)\n+\n+#if !defined(bswap_16)\n+\n+// Mac OS X / Darwin features; we include a check for bswap_16 because if it is already defined, protobuf has \n+// defined these macros for us already; if it isn't, we do it ourselves. In either case, we get the exact same\n+// result regardless which path was taken\n+#include <libkern/OSByteOrder.h>\n+#define bswap_16(x) OSSwapInt16(x)\n+#define bswap_32(x) OSSwapInt32(x)\n+#define bswap_64(x) OSSwapInt64(x)\n+\n+#endif // !defined(bswap_16)\n+\n+#else\n+// Non-Mac OS X / non-Darwin\n+\n #if HAVE_DECL_BSWAP_16 == 0\n inline uint16_t bswap_16(uint16_t x)\n {\n@@ -44,4 +61,6 @@ inline uint64_t bswap_64(uint64_t x)\n }\n #endif // HAVE_DECL_BSWAP64\n \n+#endif // defined(__APPLE__)\n+\n #endif // BITCOIN_COMPAT_BYTESWAP_H"
      },
      {
        "sha": "6eec9b8dfb34b6bafb6f41aa80c319aff86c7d6c",
        "filename": "src/test/bswap_protobuf_tests.cpp",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e83b11b792c5384e1e5b4d9f784e8c7e19ebdf6e/src/test/bswap_protobuf_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e83b11b792c5384e1e5b4d9f784e8c7e19ebdf6e/src/test/bswap_protobuf_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bswap_protobuf_tests.cpp?ref=e83b11b792c5384e1e5b4d9f784e8c7e19ebdf6e",
        "patch": "@@ -0,0 +1,26 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <google/protobuf/stubs/port.h>\n+#include \"compat/byteswap.h\"\n+#include \"test/test_bitcoin.h\"\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(bswap_protobuf_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(bswap_protobuf_tests)\n+{\n+\tuint16_t u1 = 0x1234;\n+\tuint32_t u2 = 0x56789abc;\n+\tuint64_t u3 = 0xdef0123456789abc;\n+\tuint16_t e1 = 0x3412;\n+\tuint32_t e2 = 0xbc9a7856;\n+\tuint64_t e3 = 0xbc9a78563412f0de;\n+\tBOOST_CHECK(bswap_16(u1) == e1);\n+\tBOOST_CHECK(bswap_32(u2) == e2);\n+\tBOOST_CHECK(bswap_64(u3) == e3);\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "ea72124c316b03c600c64403c967c52e3ca63150",
        "filename": "src/test/bswap_tests.cpp",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e83b11b792c5384e1e5b4d9f784e8c7e19ebdf6e/src/test/bswap_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e83b11b792c5384e1e5b4d9f784e8c7e19ebdf6e/src/test/bswap_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bswap_tests.cpp?ref=e83b11b792c5384e1e5b4d9f784e8c7e19ebdf6e",
        "patch": "@@ -0,0 +1,25 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"compat/byteswap.h\"\n+#include \"test/test_bitcoin.h\"\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(bswap_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(bswap_tests)\n+{\n+\tuint16_t u1 = 0x1234;\n+\tuint32_t u2 = 0x56789abc;\n+\tuint64_t u3 = 0xdef0123456789abc;\n+\tuint16_t e1 = 0x3412;\n+\tuint32_t e2 = 0xbc9a7856;\n+\tuint64_t e3 = 0xbc9a78563412f0de;\n+\tBOOST_CHECK(bswap_16(u1) == e1);\n+\tBOOST_CHECK(bswap_32(u2) == e2);\n+\tBOOST_CHECK(bswap_64(u3) == e3);\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]