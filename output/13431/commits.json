[
  {
    "sha": "f618ebc4e40f32e5aa6a8afe3de76a47f811c562",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNjE4ZWJjNGU0MGYzMmU1YWE2YThhZmUzZGU3NmE0N2Y4MTFjNTYy",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-06-11T07:14:35Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-06-15T04:27:18Z"
      },
      "message": "validation: count blocks correctly for check level < 3",
      "tree": {
        "sha": "3dab835e148380517b641a9545232d6ac51c616c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3dab835e148380517b641a9545232d6ac51c616c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f618ebc4e40f32e5aa6a8afe3de76a47f811c562",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlsjQCYACgkQV692LbM1\nMyLS3A//W/0yvqq7M1fJwnKPHPqEpPh82MJI83Ffnu4ELBW4EzUWQlDN5pQ/rCIm\nSfXTU96F0Uqs3IgglcIlCUgz2oqFSAVw0DKBeCUDVAANisECC66QAa0mmcZEStGY\nVvpV7AOaeE/YjCtlWoGR/HdCAuzpMDSYujI29Hlc1Ci6zhlsTDU4mhCNSqV9d460\nC92YR+9oeP9R2toy9fXHPl+VThn6A1eT0veF2po8IpA75+p7GSeekfBV+WOhKqyJ\nXwa/3KQ2kVLm4LTzMLexlJGnDT2v7lJaXPliYzfkeGjryq2M36SBJYTyrCYNtj7n\nKOSeQz/ORFMRmp8a1mA+DIkR06TVS76+80tVHfdG4TldBFRDYcNsL52kB/hb/kU3\n5CiaZd+Yf3p/3gbh1lck2pqhoc17piZTHW+vgI83rJ65M3jZFLcIvUg2GQL1et71\n5y2SjEinG+2lFDCrzLN0PyJnr3+hMqpBnR69I7LoFIskbN8sooarCmtMaUTS68Dc\n60aMprF+bwFWhEkZJwzyHVP0ex5+2PA6C7WB0MAityzXvjhD6CndbE48lrxbf9jn\nOYwJbDr4zIVK+sOBYyaObLu/QvLTmB9tL+gnnxpWq+sPyn0XOhKzIch/PaXr0J7C\niOXesuQmToULXnwHJ+hoKGffa3zGR+uAqgeDqyEKfSe83zCs1oQ=\n=4d+p\n-----END PGP SIGNATURE-----",
        "payload": "tree 3dab835e148380517b641a9545232d6ac51c616c\nparent 2b770080a49f282e51b7e4d176b2d9fbe0f8f5db\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1528701275 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1529036838 +0900\n\nvalidation: count blocks correctly for check level < 3\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f618ebc4e40f32e5aa6a8afe3de76a47f811c562",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f618ebc4e40f32e5aa6a8afe3de76a47f811c562",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f618ebc4e40f32e5aa6a8afe3de76a47f811c562/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2b770080a49f282e51b7e4d176b2d9fbe0f8f5db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b770080a49f282e51b7e4d176b2d9fbe0f8f5db",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2b770080a49f282e51b7e4d176b2d9fbe0f8f5db"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "a96fa4d9f501e7812754c30bb89797c8886ba38e",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f618ebc4e40f32e5aa6a8afe3de76a47f811c562/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f618ebc4e40f32e5aa6a8afe3de76a47f811c562/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=f618ebc4e40f32e5aa6a8afe3de76a47f811c562",
        "patch": "@@ -3984,14 +3984,13 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview,\n     nCheckLevel = std::max(0, std::min(4, nCheckLevel));\n     LogPrintf(\"Verifying last %i blocks at level %i\\n\", nCheckDepth, nCheckLevel);\n     CCoinsViewCache coins(coinsview);\n-    CBlockIndex* pindexState = chainActive.Tip();\n+    CBlockIndex* pindex;\n     CBlockIndex* pindexFailure = nullptr;\n     int nGoodTransactions = 0;\n     CValidationState state;\n     int reportDone = 0;\n     LogPrintf(\"[0%%]...\"); /* Continued */\n-    for (CBlockIndex* pindex = chainActive.Tip(); pindex && pindex->pprev; pindex = pindex->pprev)\n-    {\n+    for (pindex = chainActive.Tip(); pindex && pindex->pprev; pindex = pindex->pprev) {\n         boost::this_thread::interruption_point();\n         int percentageDone = std::max(1, std::min(99, (int)(((double)(chainActive.Height() - pindex->nHeight)) / (double)nCheckDepth * (nCheckLevel >= 4 ? 50 : 100))));\n         if (reportDone < percentageDone/10) {\n@@ -4025,13 +4024,12 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview,\n             }\n         }\n         // check level 3: check for inconsistencies during memory-only disconnect of tip blocks\n-        if (nCheckLevel >= 3 && pindex == pindexState && (coins.DynamicMemoryUsage() + pcoinsTip->DynamicMemoryUsage()) <= nCoinCacheUsage) {\n+        if (nCheckLevel >= 3 && (coins.DynamicMemoryUsage() + pcoinsTip->DynamicMemoryUsage()) <= nCoinCacheUsage) {\n             assert(coins.GetBestBlock() == pindex->GetBlockHash());\n             DisconnectResult res = g_chainstate.DisconnectBlock(block, pindex, coins);\n             if (res == DISCONNECT_FAILED) {\n                 return error(\"VerifyDB(): *** irrecoverable inconsistency in block data at %d, hash=%s\", pindex->nHeight, pindex->GetBlockHash().ToString());\n             }\n-            pindexState = pindex->pprev;\n             if (res == DISCONNECT_UNCLEAN) {\n                 nGoodTransactions = 0;\n                 pindexFailure = pindex;\n@@ -4045,9 +4043,11 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview,\n     if (pindexFailure)\n         return error(\"VerifyDB(): *** coin database inconsistencies found (last %i blocks, %i good transactions before that)\\n\", chainActive.Height() - pindexFailure->nHeight + 1, nGoodTransactions);\n \n+    // store block count as we move pindex at check level >= 4\n+    int block_count = chainActive.Height() - pindex->nHeight;\n+\n     // check level 4: try reconnecting blocks\n     if (nCheckLevel >= 4) {\n-        CBlockIndex *pindex = pindexState;\n         while (pindex != chainActive.Tip()) {\n             boost::this_thread::interruption_point();\n             uiInterface.ShowProgress(_(\"Verifying blocks...\"), std::max(1, std::min(99, 100 - (int)(((double)(chainActive.Height() - pindex->nHeight)) / (double)nCheckDepth * 50))), false);\n@@ -4061,7 +4061,7 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview,\n     }\n \n     LogPrintf(\"[DONE].\\n\");\n-    LogPrintf(\"No coin database inconsistencies in last %i blocks (%i transactions)\\n\", chainActive.Height() - pindexState->nHeight, nGoodTransactions);\n+    LogPrintf(\"No coin database inconsistencies in last %i blocks (%i transactions)\\n\", block_count, nGoodTransactions);\n \n     return true;\n }"
      }
    ]
  }
]