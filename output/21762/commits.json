[
  {
    "sha": "fa1bedb4944b513a3c9184ad549f58bfbe69e20e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTFiZWRiNDk0NGI1MTNhM2M5MTg0YWQ1NDlmNThiZmJlNjllMjBl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-22T11:34:26Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-22T18:02:31Z"
      },
      "message": "test: Add MiniWallet.sendrawtransaction\n\nCan be reviewed with --ignore-all-space --color-moved=dimmed-zebra",
      "tree": {
        "sha": "78fa7e9288a3b7da2d026c34c3d991552e62c512",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/78fa7e9288a3b7da2d026c34c3d991552e62c512"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa1bedb4944b513a3c9184ad549f58bfbe69e20e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjSWgv8COzsF0Yf66FUVMOdRGHML80pn3efkd+pGa1XCpTCELmpz6xJrPG77PXb\n//otWzqxpCnNklOvB5i/lCy/AAePZdqkowUQ50yysatPZlw33bP7apTT4fA11o7e\nKjuTC+cw7Tn9b9H0pDa7omFv1eGHQRtZ/juX7JIRbQhTpxs4XIjYVB1sCutxeADK\n1Zsc1qKSUQs9PORO6WGsSlhZbCs0uUL9LXk66WYHXoeycVWaoavPdYecfoNvfcmz\nf/8xS5W1xF29mDOQVF6958GJYsRZrgutfwAeO1+TEBGjc67lFMfzyRJg12qBxFio\nkOz+l7SKmYZmHs++tAZvx0GIOMUxgStCLbeWBwoomoABaTEdufbaR0UvloAGdnbV\niPNwjAb+wyiXlNtM/E7lnhAzAc2MKrCpqXge410R1OKlyJLeNJjyCaDzYdTTn5mb\nO+goGBnAC76za9JK6qqCSyqkcBZV03ZFhsRplYh1cqIqpLqycPQaSv49vhRm+zJ7\njZXusxtm\n=2FCI\n-----END PGP SIGNATURE-----",
        "payload": "tree 78fa7e9288a3b7da2d026c34c3d991552e62c512\nparent 4b5659c6b115315c9fd2902b4edd4b960a5e066e\nauthor MarcoFalke <falke.marco@gmail.com> 1619091266 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1619114551 +0200\n\ntest: Add MiniWallet.sendrawtransaction\n\nCan be reviewed with --ignore-all-space --color-moved=dimmed-zebra\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1bedb4944b513a3c9184ad549f58bfbe69e20e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1bedb4944b513a3c9184ad549f58bfbe69e20e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1bedb4944b513a3c9184ad549f58bfbe69e20e/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4b5659c6b115315c9fd2902b4edd4b960a5e066e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b5659c6b115315c9fd2902b4edd4b960a5e066e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4b5659c6b115315c9fd2902b4edd4b960a5e066e"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 12,
      "deletions": 5
    },
    "files": [
      {
        "sha": "26294d6a9d1734bd0ad50cc5a5c2a7efb4fc9f65",
        "filename": "test/functional/test_framework/wallet.py",
        "status": "modified",
        "additions": 12,
        "deletions": 5,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1bedb4944b513a3c9184ad549f58bfbe69e20e/test/functional/test_framework/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1bedb4944b513a3c9184ad549f58bfbe69e20e/test/functional/test_framework/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/wallet.py?ref=fa1bedb4944b513a3c9184ad549f58bfbe69e20e",
        "patch": "@@ -37,9 +37,13 @@ def scan_blocks(self, *, start=1, num):\n         for i in range(start, start + num):\n             block = self._test_node.getblock(blockhash=self._test_node.getblockhash(i), verbosity=2)\n             for tx in block['tx']:\n-                for out in tx['vout']:\n-                    if out['scriptPubKey']['hex'] == self._scriptPubKey.hex():\n-                        self._utxos.append({'txid': tx['txid'], 'vout': out['n'], 'value': out['value']})\n+                self.scan_tx(tx)\n+\n+    def scan_tx(self, tx):\n+        \"\"\"Scan the tx for self._scriptPubKey outputs and add them to self._utxos\"\"\"\n+        for out in tx['vout']:\n+            if out['scriptPubKey']['hex'] == self._scriptPubKey.hex():\n+                self._utxos.append({'txid': tx['txid'], 'vout': out['n'], 'value': out['value']})\n \n     def generate(self, num_blocks):\n         \"\"\"Generate blocks with coinbase outputs to the internal address, and append the outputs to the internal list\"\"\"\n@@ -84,8 +88,11 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n         tx_hex = tx.serialize().hex()\n \n         tx_info = from_node.testmempoolaccept([tx_hex])[0]\n-        self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n-        from_node.sendrawtransaction(tx_hex)\n+        self.sendrawtransaction(from_node=from_node, tx_hex=tx_hex)\n         assert_equal(tx_info['vsize'], vsize)\n         assert_equal(tx_info['fees']['base'], fee)\n         return {'txid': tx_info['txid'], 'wtxid': tx_info['wtxid'], 'hex': tx_hex}\n+\n+    def sendrawtransaction(self, *, from_node, tx_hex):\n+        from_node.sendrawtransaction(tx_hex)\n+        self.scan_tx(from_node.decoderawtransaction(tx_hex))"
      }
    ]
  },
  {
    "sha": "fa085b470a9647f3b261f506b46f4e7ca2baf0b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTA4NWI0NzBhOTY0N2YzYjI2MWY1MDZiNDZmNGU3Y2EyYmFmMGIw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-22T11:44:05Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-23T07:39:21Z"
      },
      "message": "test: Create MiniWallet.create_self_transfer",
      "tree": {
        "sha": "12742857fda9411cc33166e520c64b46f2ce713b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/12742857fda9411cc33166e520c64b46f2ce713b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa085b470a9647f3b261f506b46f4e7ca2baf0b0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgVWQv9Go1KkM4Q9OGZDUJ/ZDWsJSA5EO7+Ojz74v7zFvY0f1fcKnieB7VBxFbF\n0bWZC2WkC6hLwuvP3WxUnz7H6xCj/WWGMlHsxoMUYUOeGutY104sP0JcJBVP0+8B\nHGIFKOkQI5CfO5uPoXFxydMYRLz5hmovGIdmtBpyl5D9/hkfnN4dyJcaBSiq7j0W\noiIHgKNt+AUrhlyRkgVbtOiS7ci+ui3/SRnEmBjfxOgWSZ979DClx/g5yFiv/z63\nwv11QgTd+983zxd2nJrG5aX1AjvqnFLZh2XcXjXAKhJuK6+mZUvAlnTbwfKEaZpw\neu2kLO0E8H8VsNRGTPzaZW+4JBYA3aMzXwA22aYg1d1QixFcOD+5SpuPxVKl0Xc/\nWGlWwXMx8sHXQ4wjp4Y6KCOK2anatYWDyp/p6SZRhkallUZIB0eJZHiq7uhILNSL\nxSAS6oNiwKsH88x1pWlOAKA1ulJq+RB0iSl2KKgV3sq6QdwqcQ0gCPz1uyUC5+aF\nA3+E4p4q\n=4osY\n-----END PGP SIGNATURE-----",
        "payload": "tree 12742857fda9411cc33166e520c64b46f2ce713b\nparent fa1bedb4944b513a3c9184ad549f58bfbe69e20e\nauthor MarcoFalke <falke.marco@gmail.com> 1619091845 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1619163561 +0200\n\ntest: Create MiniWallet.create_self_transfer\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa085b470a9647f3b261f506b46f4e7ca2baf0b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa085b470a9647f3b261f506b46f4e7ca2baf0b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa085b470a9647f3b261f506b46f4e7ca2baf0b0/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa1bedb4944b513a3c9184ad549f58bfbe69e20e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1bedb4944b513a3c9184ad549f58bfbe69e20e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1bedb4944b513a3c9184ad549f58bfbe69e20e"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 13,
      "deletions": 5
    },
    "files": [
      {
        "sha": "b662b7b3ada2045380b341b6d86aaff145b5c4c5",
        "filename": "test/functional/mempool_spend_coinbase.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa085b470a9647f3b261f506b46f4e7ca2baf0b0/test/functional/mempool_spend_coinbase.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa085b470a9647f3b261f506b46f4e7ca2baf0b0/test/functional/mempool_spend_coinbase.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_spend_coinbase.py?ref=fa085b470a9647f3b261f506b46f4e7ca2baf0b0",
        "patch": "@@ -40,9 +40,10 @@ def run_test(self):\n         spend_101_id = wallet.send_self_transfer(from_node=self.nodes[0], utxo_to_spend=utxo_101)[\"txid\"]\n \n         # coinbase at height 102 should be too immature to spend\n+        immature_tx = wallet.create_self_transfer(from_node=self.nodes[0], utxo_to_spend=utxo_102, mempool_valid=False)\n         assert_raises_rpc_error(-26,\n                                 \"bad-txns-premature-spend-of-coinbase\",\n-                                lambda: wallet.send_self_transfer(from_node=self.nodes[0], utxo_to_spend=utxo_102))\n+                                lambda: self.nodes[0].sendrawtransaction(immature_tx['hex']))\n \n         # mempool should have just spend_101:\n         assert_equal(self.nodes[0].getrawmempool(), [spend_101_id])\n@@ -52,7 +53,7 @@ def run_test(self):\n         assert_equal(set(self.nodes[0].getrawmempool()), set())\n \n         # ... and now height 102 can be spent:\n-        spend_102_id = wallet.send_self_transfer(from_node=self.nodes[0], utxo_to_spend=utxo_102)[\"txid\"]\n+        spend_102_id = self.nodes[0].sendrawtransaction(immature_tx['hex'])\n         assert_equal(self.nodes[0].getrawmempool(), [spend_102_id])\n \n "
      },
      {
        "sha": "59ef18635b4a2a2120db572fbccf32c736467e4d",
        "filename": "test/functional/test_framework/wallet.py",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa085b470a9647f3b261f506b46f4e7ca2baf0b0/test/functional/test_framework/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa085b470a9647f3b261f506b46f4e7ca2baf0b0/test/functional/test_framework/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/wallet.py?ref=fa085b470a9647f3b261f506b46f4e7ca2baf0b0",
        "patch": "@@ -73,6 +73,12 @@ def get_utxo(self, *, txid=''):\n \n     def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None):\n         \"\"\"Create and send a tx with the specified fee_rate. Fee may be exact or at most one satoshi higher than needed.\"\"\"\n+        tx = self.create_self_transfer(fee_rate=fee_rate, from_node=from_node, utxo_to_spend=utxo_to_spend)\n+        self.sendrawtransaction(from_node=from_node, tx_hex=tx['hex'])\n+        return tx\n+\n+    def create_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None, mempool_valid=True):\n+        \"\"\"Create and return a tx with the specified fee_rate. Fee may be exact or at most one satoshi higher than needed.\"\"\"\n         self._utxos = sorted(self._utxos, key=lambda k: k['value'])\n         utxo_to_spend = utxo_to_spend or self._utxos.pop()  # Pick the largest utxo (if none provided) and hope it covers the fee\n         vsize = Decimal(96)\n@@ -88,9 +94,10 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n         tx_hex = tx.serialize().hex()\n \n         tx_info = from_node.testmempoolaccept([tx_hex])[0]\n-        self.sendrawtransaction(from_node=from_node, tx_hex=tx_hex)\n-        assert_equal(tx_info['vsize'], vsize)\n-        assert_equal(tx_info['fees']['base'], fee)\n+        assert_equal(mempool_valid, tx_info['allowed'])\n+        if mempool_valid:\n+            assert_equal(tx_info['vsize'], vsize)\n+            assert_equal(tx_info['fees']['base'], fee)\n         return {'txid': tx_info['txid'], 'wtxid': tx_info['wtxid'], 'hex': tx_hex}\n \n     def sendrawtransaction(self, *, from_node, tx_hex):"
      }
    ]
  },
  {
    "sha": "fa29382ab23d52b86bfda8a267195b6c51b713c2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTI5MzgyYWIyM2Q1MmI4NmJmZGE4YTI2NzE5NWI2YzUxYjcxM2My",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-23T07:52:07Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-23T07:48:56Z"
      },
      "message": "test: Fix test cache issue\n\nThe documentation did not match the implementation, no coins\nwere mined to the OP_TRUE address.",
      "tree": {
        "sha": "3d2062622a7d9c04985793784f5389f83af2a3c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d2062622a7d9c04985793784f5389f83af2a3c4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa29382ab23d52b86bfda8a267195b6c51b713c2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiAbgv7BHdCTxiXYeIj9LH2KmYcVVWy8hNsRHLA6RWEKNHhdeKwm6hKdqV+lbRv\n2qnLege/xQwkmdUHHfJakUYyCxzkePF9F40Lrer5Z5TM7nd4w7FK6x6Us+6P9+KJ\nX35rcXC07oLLt/zTzMmMgzegQZ0najQ2e0mW4OdZtVxwczQKdyI1YcvTX1GB9wk0\n16EgEUIoem9qR0+jpJ/7UWkfEdsDNmwB+UJGn3Le1MoX8xgrWjDnD0iMIgNEDmwJ\nWNYMLKcv9Lq9RCyWYhaQardFj9LLbZRGWoMaSJmgCiAeeKTyGCbL86VDZ6ifEKyR\nzwbnqAGG9OuC80WZjJOGerfoTvVd0/m1HwuZ0yg/bjqIm6WutPzLH9rUvhg4CJer\nDUrkv3aXws89Jjs5LUuseTbdUjJSBjnzzDxDv8nIpxof8NCVN1EAHyejQQq51dmK\n+awXwLqIfZpAVnymuF26RLalVsWg+iVejI1Kcn9AkWzgXO1BJuIURPJ38vyZbl+V\nCu+65aRf\n=1EwG\n-----END PGP SIGNATURE-----",
        "payload": "tree 3d2062622a7d9c04985793784f5389f83af2a3c4\nparent fa085b470a9647f3b261f506b46f4e7ca2baf0b0\nauthor MarcoFalke <falke.marco@gmail.com> 1619164327 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1619164136 +0200\n\ntest: Fix test cache issue\n\nThe documentation did not match the implementation, no coins\nwere mined to the OP_TRUE address.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa29382ab23d52b86bfda8a267195b6c51b713c2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa29382ab23d52b86bfda8a267195b6c51b713c2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa29382ab23d52b86bfda8a267195b6c51b713c2/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa085b470a9647f3b261f506b46f4e7ca2baf0b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa085b470a9647f3b261f506b46f4e7ca2baf0b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa085b470a9647f3b261f506b46f4e7ca2baf0b0"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "bada791fba8feb7c1ffc0b4763b400c6a0ce3171",
        "filename": "test/functional/feature_blockfilterindex_prune.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa29382ab23d52b86bfda8a267195b6c51b713c2/test/functional/feature_blockfilterindex_prune.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa29382ab23d52b86bfda8a267195b6c51b713c2/test/functional/feature_blockfilterindex_prune.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_blockfilterindex_prune.py?ref=fa29382ab23d52b86bfda8a267195b6c51b713c2",
        "patch": "@@ -33,7 +33,7 @@ def run_test(self):\n \n         self.log.info(\"prune some blocks\")\n         pruneheight = self.nodes[0].pruneblockchain(400)\n-        assert_equal(pruneheight, 250)\n+        assert_equal(pruneheight, 248)\n \n         self.log.info(\"check if we can access the tips blockfilter when we have pruned some blocks\")\n         assert_greater_than(len(self.nodes[0].getblockfilter(self.nodes[0].getbestblockhash())['filter']), 0)"
      },
      {
        "sha": "0ff4ee0a6230bad80f1f4d684705fd928b557e42",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa29382ab23d52b86bfda8a267195b6c51b713c2/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa29382ab23d52b86bfda8a267195b6c51b713c2/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=fa29382ab23d52b86bfda8a267195b6c51b713c2",
        "patch": "@@ -739,11 +739,12 @@ def _initialize_chain(self):\n             # block in the cache does not age too much (have an old tip age).\n             # This is needed so that we are out of IBD when the test starts,\n             # see the tip age check in IsInitialBlockDownload().\n-            gen_addresses = [k.address for k in TestNode.PRIV_KEYS] + [ADDRESS_BCRT1_P2WSH_OP_TRUE]\n+            gen_addresses = [k.address for k in TestNode.PRIV_KEYS][:3] + [ADDRESS_BCRT1_P2WSH_OP_TRUE]\n+            assert_equal(len(gen_addresses), 4)\n             for i in range(8):\n                 cache_node.generatetoaddress(\n                     nblocks=25 if i != 7 else 24,\n-                    address=gen_addresses[i % 4],\n+                    address=gen_addresses[i % len(gen_addresses)],\n                 )\n \n             assert_equal(cache_node.getblockchaininfo()[\"blocks\"], 199)"
      }
    ]
  },
  {
    "sha": "fa40eb5b6bfd151912c58d61771f6a6528f44e67",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTQwZWI1YjZiZmQxNTE5MTJjNThkNjE3NzFmNmE2NTI4ZjQ0ZTY3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-23T07:47:19Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-23T07:56:02Z"
      },
      "message": "test: Speed up mempool_spend_coinbase.py",
      "tree": {
        "sha": "124b88a0c933ed55a2f8d27ace6da6247bbd0285",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/124b88a0c933ed55a2f8d27ace6da6247bbd0285"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa40eb5b6bfd151912c58d61771f6a6528f44e67",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgLNgv9GzMZ13gGzoIa7cLpaSsYJ9rV0Mkk795wpfJIP8mAK+6il5384c4F5HrX\nRC6lIku9WJ1Umq0ptFzQDbSBT3BzSB9F0TwEVeJ0WzybMXUy56jbRM/S4cLdwSlv\n+J/e8ayt8bYSDygU3KIel7jkfVb1VzO5IpUV9jbnO1MoTJE9bqRV6BWkJulVKbVJ\nwTDrokDDLmJcJZQowTkuUmFGjsMBxOd37l9r7EyCqiPSq8Rfk5CUgtn3V5JDKcNH\n2i515iiR1g9xFHkMZzjwSnoiI1PcQIeruhSDISCVhwC2whSBUUg7UhtHaQ8+lQUN\nyezCCN7tJb70NMXL1Ptq02EHoQuZkwdSuTMwrw9Kxpj08zZZytE1trE66FI7T1jD\nv9mAhcTniY8itlB2eQMN7fnfZXw5eUgxOUo5tL8rj/FBUHNyqBNsUVOUZ2qUBZoq\nGzJMj078saVAov9Rol7k6X87Zq+KdJ5RhpZaqw3rraTpHVqKqI4jscnQALjCTQ/i\nZe/otoLB\n=Q3D5\n-----END PGP SIGNATURE-----",
        "payload": "tree 124b88a0c933ed55a2f8d27ace6da6247bbd0285\nparent fa29382ab23d52b86bfda8a267195b6c51b713c2\nauthor MarcoFalke <falke.marco@gmail.com> 1619164039 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1619164562 +0200\n\ntest: Speed up mempool_spend_coinbase.py\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa40eb5b6bfd151912c58d61771f6a6528f44e67",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa40eb5b6bfd151912c58d61771f6a6528f44e67",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa40eb5b6bfd151912c58d61771f6a6528f44e67/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa29382ab23d52b86bfda8a267195b6c51b713c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa29382ab23d52b86bfda8a267195b6c51b713c2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa29382ab23d52b86bfda8a267195b6c51b713c2"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 17,
      "deletions": 17
    },
    "files": [
      {
        "sha": "b900aa0b9c14eafd507ae468690c51227d16c132",
        "filename": "test/functional/mempool_spend_coinbase.py",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa40eb5b6bfd151912c58d61771f6a6528f44e67/test/functional/mempool_spend_coinbase.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa40eb5b6bfd151912c58d61771f6a6528f44e67/test/functional/mempool_spend_coinbase.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_spend_coinbase.py?ref=fa40eb5b6bfd151912c58d61771f6a6528f44e67",
        "patch": "@@ -20,41 +20,41 @@\n class MempoolSpendCoinbaseTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-        self.setup_clean_chain = True\n \n     def run_test(self):\n         wallet = MiniWallet(self.nodes[0])\n \n-        wallet.generate(200)\n-        chain_height = self.nodes[0].getblockcount()\n-        assert_equal(chain_height, 200)\n+        # Invalidate two blocks, so that miniwallet has access to a coin that will mature in the next block\n+        chain_height = 198\n+        self.nodes[0].invalidateblock(self.nodes[0].getblockhash(chain_height + 1))\n+        assert_equal(chain_height, self.nodes[0].getblockcount())\n \n         # Coinbase at height chain_height-100+1 ok in mempool, should\n         # get mined. Coinbase at height chain_height-100+2 is\n         # too immature to spend.\n-        b = [self.nodes[0].getblockhash(n) for n in range(101, 103)]\n-        coinbase_txids = [self.nodes[0].getblock(h)['tx'][0] for h in b]\n-        utxo_101 = wallet.get_utxo(txid=coinbase_txids[0])\n-        utxo_102 = wallet.get_utxo(txid=coinbase_txids[1])\n+        wallet.scan_blocks(start=chain_height - 100 + 1, num=1)\n+        utxo_mature = wallet.get_utxo()\n+        wallet.scan_blocks(start=chain_height - 100 + 2, num=1)\n+        utxo_immature = wallet.get_utxo()\n \n-        spend_101_id = wallet.send_self_transfer(from_node=self.nodes[0], utxo_to_spend=utxo_101)[\"txid\"]\n+        spend_mature_id = wallet.send_self_transfer(from_node=self.nodes[0], utxo_to_spend=utxo_mature)[\"txid\"]\n \n-        # coinbase at height 102 should be too immature to spend\n-        immature_tx = wallet.create_self_transfer(from_node=self.nodes[0], utxo_to_spend=utxo_102, mempool_valid=False)\n+        # other coinbase should be too immature to spend\n+        immature_tx = wallet.create_self_transfer(from_node=self.nodes[0], utxo_to_spend=utxo_immature, mempool_valid=False)\n         assert_raises_rpc_error(-26,\n                                 \"bad-txns-premature-spend-of-coinbase\",\n                                 lambda: self.nodes[0].sendrawtransaction(immature_tx['hex']))\n \n-        # mempool should have just spend_101:\n-        assert_equal(self.nodes[0].getrawmempool(), [spend_101_id])\n+        # mempool should have just the mature one\n+        assert_equal(self.nodes[0].getrawmempool(), [spend_mature_id])\n \n-        # mine a block, spend_101 should get confirmed\n+        # mine a block, mature one should get confirmed\n         self.nodes[0].generate(1)\n         assert_equal(set(self.nodes[0].getrawmempool()), set())\n \n-        # ... and now height 102 can be spent:\n-        spend_102_id = self.nodes[0].sendrawtransaction(immature_tx['hex'])\n-        assert_equal(self.nodes[0].getrawmempool(), [spend_102_id])\n+        # ... and now previously immature can be spent:\n+        spend_new_id = self.nodes[0].sendrawtransaction(immature_tx['hex'])\n+        assert_equal(self.nodes[0].getrawmempool(), [spend_new_id])\n \n \n if __name__ == '__main__':"
      }
    ]
  }
]