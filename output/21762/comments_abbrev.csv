DrahtBot,2021-04-23 11:18:02,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21178 (test: run mempool_reorg.py even with wallet disabled by DariusParvin)\n* #21014 (test: Run mempool_accept.py even ",https://github.com/bitcoin/bitcoin/pull/21762#issuecomment-825588394,825588394,
mjdietzx,2021-04-28 17:02:12,"- I really like the implementation of `sendrawtransaction` in https://github.com/bitcoin/bitcoin/pull/21762/commits/fa1bedb4944b513a3c9184ad549f58bfbe69e20e. I can close https://github.com/bitcoin/bitcoin/pull/20889#discussion_r622339199 in favor of this, right?\n- Also like the implementation of `create_self_transfer` and how it's used 👍 in https://github.com/bitcoin/bitcoin/pull/21762/commits/f",https://github.com/bitcoin/bitcoin/pull/21762#issuecomment-828621492,828621492,
MarcoFalke,2021-04-28 17:10:21,"> But I don't really get why the assertion changes from 250 to 248 assuming it wasn't already failing. And I also don't understand why it fits into this PR. Any explanation here could help me get to an ACK quicker\n\nI don't know either why the assertion is there, but the value changes because the block size changes due to the scriptPubKey (size) change.\n\n> Am I correct that wallet.generate(",https://github.com/bitcoin/bitcoin/pull/21762#issuecomment-828627167,828627167,
mjdietzx,2021-04-28 17:22:51,crACK https://github.com/bitcoin/bitcoin/pull/21762/commits/fa40eb5b6bfd151912c58d61771f6a6528f44e67,https://github.com/bitcoin/bitcoin/pull/21762#issuecomment-828635867,828635867,
mjdietzx,2021-04-28 17:21:37,"I don't really like this pattern. The method name `sync_blocks` seems confusing because I wouldn't expect a state change (`self._utxos`) by this method. It seems this would have to be used very carefully, with knowledge of `MiniWallet`'s internals to avoid bugs. For example, if `scan_blocks` is called multiple times with any overlapping blocks, then we'll start to get duplicate utxos in `self._utx",https://github.com/bitcoin/bitcoin/pull/21762#discussion_r622387960,622387960,test/functional/mempool_spend_coinbase.py
MarcoFalke,2021-04-28 17:24:43,I agree. Do you have specific suggestions to improve that pass with all existing tests? Feel free to ping me for review.,https://github.com/bitcoin/bitcoin/pull/21762#discussion_r622390418,622390418,test/functional/mempool_spend_coinbase.py
