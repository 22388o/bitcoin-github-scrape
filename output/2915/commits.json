[
  {
    "sha": "4eecdcacafc7dc0a1fe38e64dddb8416baa07dde",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZWVjZGNhY2FmYzdkYzBhMWZlMzhlNjRkZGRiODQxNmJhYTA3ZGRl",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2013-08-20T11:30:39Z"
      },
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2013-08-20T11:30:39Z"
      },
      "message": "Add MurmurHash3() unit test\n\nUseful as a source of test vectors to anyone re-implementing bloom\nfilters.",
      "tree": {
        "sha": "a2824a261df5df53035be055fd0bf6bc4c183c75",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2824a261df5df53035be055fd0bf6bc4c183c75"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4eecdcacafc7dc0a1fe38e64dddb8416baa07dde",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCAAGBQJSE1NhAAoJECSBQD2l8JH72O8H/3TlSFfduSYRoba98OEG9XXq\nPvdDq6TlbpTUdJ2hIrr6ZEdZB0134aRjo58HIfwiES+UwFbNR5rIWxTksJY/EJ+d\nES8Elw5zixboI0rrHcs+ukvU1vPXRO9yOSMJNDPuMj9KrZVeZau0Cweq1CdIyI1f\nPrNLcvSix9qYlxyLwo1yHQnGiu7nz/gzwipuosV/nAwtHHpxaCAAytcnGth7OGcU\nXwzathPQfp0hAhzkrlu9QSStQy/ODwFin4Qmm7ZgdHrtUzknp+8kSsC9/zuE40vA\nkFE6gTLyMv2fg24u3sDQOJd7QVQUPbMmc32XrO+L0ZeVdKK2/gCroPTSZo0cASM=\n=YyKX\n-----END PGP SIGNATURE-----",
        "payload": "tree a2824a261df5df53035be055fd0bf6bc4c183c75\nparent af6a02a99bd767035f0096dc7c339a7b502319c3\nauthor Peter Todd <pete@petertodd.org> 1376998239 -0400\ncommitter Peter Todd <pete@petertodd.org> 1376998239 -0400\n\nAdd MurmurHash3() unit test\n\nUseful as a source of test vectors to anyone re-implementing bloom\nfilters.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4eecdcacafc7dc0a1fe38e64dddb8416baa07dde",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4eecdcacafc7dc0a1fe38e64dddb8416baa07dde",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4eecdcacafc7dc0a1fe38e64dddb8416baa07dde/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "af6a02a99bd767035f0096dc7c339a7b502319c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af6a02a99bd767035f0096dc7c339a7b502319c3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/af6a02a99bd767035f0096dc7c339a7b502319c3"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 44,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d69cfd706dfe51ad506f5d4988d8c8c66f06bfee",
        "filename": "src/test/hash_tests.cpp",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4eecdcacafc7dc0a1fe38e64dddb8416baa07dde/src/test/hash_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4eecdcacafc7dc0a1fe38e64dddb8416baa07dde/src/test/hash_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/hash_tests.cpp?ref=4eecdcacafc7dc0a1fe38e64dddb8416baa07dde",
        "patch": "@@ -0,0 +1,44 @@\n+#include <boost/test/unit_test.hpp>\n+#include <vector>\n+\n+#include \"util.h\"\n+#include \"hash.h\"\n+\n+using namespace std;\n+\n+BOOST_AUTO_TEST_SUITE(hash_tests)\n+\n+BOOST_AUTO_TEST_CASE(murmurhash3)\n+{\n+\n+#define T(expected, seed, data) BOOST_CHECK_EQUAL(MurmurHash3(seed, ParseHex(data)), expected)\n+\n+    // Test MurmurHash3 with various inputs. Of course this is retested in the\n+    // bloom filter tests - they would fail if MurmurHash3() had any problems -\n+    // but is useful for those trying to implement Bitcoin libraries as a\n+    // source of test data for their MurmurHash3() primitive during\n+    // development.\n+    //\n+    // The magic number 0xFBA4C795 comes from CBloomFilter::Hash()\n+\n+    T(0x00000000, 0x00000000, \"\");\n+    T(0x6a396f08, 0xFBA4C795, \"\");\n+    T(0x81f16f39, 0xffffffff, \"\");\n+\n+    T(0x514e28b7, 0x00000000, \"00\");\n+    T(0xea3f0b17, 0xFBA4C795, \"00\");\n+    T(0xfd6cf10d, 0x00000000, \"ff\");\n+\n+    T(0x16c6b7ab, 0x00000000, \"0011\");\n+    T(0x8eb51c3d, 0x00000000, \"001122\");\n+    T(0xb4471bf8, 0x00000000, \"00112233\");\n+    T(0xe2301fa8, 0x00000000, \"0011223344\");\n+    T(0xfc2e4a15, 0x00000000, \"001122334455\");\n+    T(0xb074502c, 0x00000000, \"00112233445566\");\n+    T(0x8034d2a0, 0x00000000, \"0011223344556677\");\n+    T(0xb4698def, 0x00000000, \"001122334455667788\");\n+\n+#undef T\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]