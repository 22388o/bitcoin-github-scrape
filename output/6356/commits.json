[
  {
    "sha": "f0cba6f8ebc2eb5a988f506b37e7113f724e63ff",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMGNiYTZmOGViYzJlYjVhOTg4ZjUwNmIzN2U3MTEzZjcyNGU2M2Zm",
    "commit": {
      "author": {
        "name": "Adam Weiss",
        "email": "adam@signal11.com",
        "date": "2015-06-30T17:22:48Z"
      },
      "committer": {
        "name": "Adam Weiss",
        "email": "adam@signal11.com",
        "date": "2015-07-29T18:00:25Z"
      },
      "message": "Delay initial pruning until after wallet init\n\nDon't prune until any wallet rescanning has taken place to avoid\npotentially pruning blocks that the wallet rescan may need.",
      "tree": {
        "sha": "ff9b8131c05be8aab0272d96005fd2348977df7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ff9b8131c05be8aab0272d96005fd2348977df7c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f0cba6f8ebc2eb5a988f506b37e7113f724e63ff",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0cba6f8ebc2eb5a988f506b37e7113f724e63ff",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f0cba6f8ebc2eb5a988f506b37e7113f724e63ff",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0cba6f8ebc2eb5a988f506b37e7113f724e63ff/comments",
    "author": {
      "login": "ajweiss",
      "id": 430315,
      "node_id": "MDQ6VXNlcjQzMDMxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/430315?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajweiss",
      "html_url": "https://github.com/ajweiss",
      "followers_url": "https://api.github.com/users/ajweiss/followers",
      "following_url": "https://api.github.com/users/ajweiss/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajweiss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajweiss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajweiss/subscriptions",
      "organizations_url": "https://api.github.com/users/ajweiss/orgs",
      "repos_url": "https://api.github.com/users/ajweiss/repos",
      "events_url": "https://api.github.com/users/ajweiss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajweiss/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajweiss",
      "id": 430315,
      "node_id": "MDQ6VXNlcjQzMDMxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/430315?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajweiss",
      "html_url": "https://github.com/ajweiss",
      "followers_url": "https://api.github.com/users/ajweiss/followers",
      "following_url": "https://api.github.com/users/ajweiss/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajweiss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajweiss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajweiss/subscriptions",
      "organizations_url": "https://api.github.com/users/ajweiss/orgs",
      "repos_url": "https://api.github.com/users/ajweiss/repos",
      "events_url": "https://api.github.com/users/ajweiss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajweiss/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da77a6f7611f71443914e1c71df1e52468cf507d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da77a6f7611f71443914e1c71df1e52468cf507d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da77a6f7611f71443914e1c71df1e52468cf507d"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 16,
      "deletions": 11
    },
    "files": [
      {
        "sha": "6c9c1214f0ae6fc2ee5b012766379d0b7a1396fc",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 11,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f0cba6f8ebc2eb5a988f506b37e7113f724e63ff/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f0cba6f8ebc2eb5a988f506b37e7113f724e63ff/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=f0cba6f8ebc2eb5a988f506b37e7113f724e63ff",
        "patch": "@@ -1226,15 +1226,6 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         mempool.ReadFeeEstimates(est_filein);\n     fFeeEstimatesInitialized = true;\n \n-    // if prune mode, unset NODE_NETWORK and prune block files\n-    if (fPruneMode) {\n-        LogPrintf(\"Unsetting NODE_NETWORK on prune mode\\n\");\n-        nLocalServices &= ~NODE_NETWORK;\n-        if (!fReindex) {\n-            PruneAndFlush();\n-        }\n-    }\n-\n     // ********************************************************* Step 8: load wallet\n #ifdef ENABLE_WALLET\n     if (fDisableWallet) {\n@@ -1388,7 +1379,21 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n #else // ENABLE_WALLET\n     LogPrintf(\"No wallet support compiled in!\\n\");\n #endif // !ENABLE_WALLET\n-    // ********************************************************* Step 9: import blocks\n+\n+    // ********************************************************* Step 9: data directory maintenance\n+\n+    // if pruning, unset the service bit and perform the initial blockstore prune\n+    // after any wallet rescanning has taken place.\n+    if (fPruneMode) {\n+        uiInterface.InitMessage(_(\"Pruning blockstore...\"));\n+        LogPrintf(\"Unsetting NODE_NETWORK on prune mode\\n\");\n+        nLocalServices &= ~NODE_NETWORK;\n+        if (!fReindex) {\n+            PruneAndFlush();\n+        }\n+    }\n+\n+    // ********************************************************* Step 10: import blocks\n \n     if (mapArgs.count(\"-blocknotify\"))\n         uiInterface.NotifyBlockTip.connect(BlockNotifyCallback);\n@@ -1412,7 +1417,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n             MilliSleep(10);\n     }\n \n-    // ********************************************************* Step 10: start node\n+    // ********************************************************* Step 11: start node\n \n     if (!CheckDiskSpace())\n         return false;"
      }
    ]
  }
]