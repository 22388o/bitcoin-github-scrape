[
  {
    "sha": "87d24e67bb8f6a01ff710df4f14cb7d1caf651ae",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4N2QyNGU2N2JiOGY2YTAxZmY3MTBkZjRmMTRjYjdkMWNhZjY1MWFl",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-24T14:21:36Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-24T16:48:28Z"
      },
      "message": "tests: Add integer serialization/deserialization fuzzing harness",
      "tree": {
        "sha": "4669542726d30f79e8a141d3a77009ae806aa5e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4669542726d30f79e8a141d3a77009ae806aa5e8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87d24e67bb8f6a01ff710df4f14cb7d1caf651ae",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87d24e67bb8f6a01ff710df4f14cb7d1caf651ae",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/87d24e67bb8f6a01ff710df4f14cb7d1caf651ae",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87d24e67bb8f6a01ff710df4f14cb7d1caf651ae/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5236b2e267a58870239673c7ec85e5df0cb8fc8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5236b2e267a58870239673c7ec85e5df0cb8fc8e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5236b2e267a58870239673c7ec85e5df0cb8fc8e"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 40,
      "deletions": 0
    },
    "files": [
      {
        "sha": "63b9296574c9bb654878d9fdb753aa79a580eaa8",
        "filename": "src/test/fuzz/integer.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87d24e67bb8f6a01ff710df4f14cb7d1caf651ae/src/test/fuzz/integer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87d24e67bb8f6a01ff710df4f14cb7d1caf651ae/src/test/fuzz/integer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/integer.cpp?ref=87d24e67bb8f6a01ff710df4f14cb7d1caf651ae",
        "patch": "@@ -227,4 +227,44 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         (void)HasAllDesirableServiceFlags(service_flags);\n         (void)MayHaveUsefulAddressDB(service_flags);\n     }\n+\n+    {\n+        CDataStream stream(SER_NETWORK, INIT_PROTO_VERSION);\n+\n+        ser_writedata64(stream, u64);\n+        const uint64_t deserialized_u64 = ser_readdata64(stream);\n+        assert(u64 == deserialized_u64 && stream.empty());\n+\n+        ser_writedata32(stream, u32);\n+        const uint32_t deserialized_u32 = ser_readdata32(stream);\n+        assert(u32 == deserialized_u32 && stream.empty());\n+\n+        ser_writedata32be(stream, u32);\n+        const uint32_t deserialized_u32be = ser_readdata32be(stream);\n+        assert(u32 == deserialized_u32be && stream.empty());\n+\n+        ser_writedata16(stream, u16);\n+        const uint16_t deserialized_u16 = ser_readdata16(stream);\n+        assert(u16 == deserialized_u16 && stream.empty());\n+\n+        ser_writedata16be(stream, u16);\n+        const uint16_t deserialized_u16be = ser_readdata16be(stream);\n+        assert(u16 == deserialized_u16be && stream.empty());\n+\n+        ser_writedata8(stream, u8);\n+        const uint8_t deserialized_u8 = ser_readdata8(stream);\n+        assert(u8 == deserialized_u8 && stream.empty());\n+    }\n+\n+    {\n+        CDataStream stream(SER_NETWORK, INIT_PROTO_VERSION);\n+\n+        WriteCompactSize(stream, u64);\n+        try {\n+            const uint64_t deserialized_u64 = ReadCompactSize(stream);\n+            assert(u64 == deserialized_u64 && stream.empty());\n+        }\n+        catch (const std::ios_base::failure&) {\n+        }\n+    }\n }"
      }
    ]
  },
  {
    "sha": "102f3267e9e7925a7ea42f1181303cf1da8ce643",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMDJmMzI2N2U5ZTc5MjVhN2VhNDJmMTE4MTMwM2NmMWRhOGNlNjQz",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-24T14:35:51Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-24T17:01:54Z"
      },
      "message": "tests: Add fuzzing harness for classes/functions in blockfilter.h",
      "tree": {
        "sha": "39e5ee7d9964cf0345679d35a3c166517defe22f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/39e5ee7d9964cf0345679d35a3c166517defe22f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/102f3267e9e7925a7ea42f1181303cf1da8ce643",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/102f3267e9e7925a7ea42f1181303cf1da8ce643",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/102f3267e9e7925a7ea42f1181303cf1da8ce643",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/102f3267e9e7925a7ea42f1181303cf1da8ce643/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "87d24e67bb8f6a01ff710df4f14cb7d1caf651ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87d24e67bb8f6a01ff710df4f14cb7d1caf651ae",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/87d24e67bb8f6a01ff710df4f14cb7d1caf651ae"
      }
    ],
    "stats": {
      "total": 61,
      "additions": 61,
      "deletions": 0
    },
    "files": [
      {
        "sha": "45077ccbd90afc66fb10e37bb25724a8c997adf8",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/102f3267e9e7925a7ea42f1181303cf1da8ce643/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/102f3267e9e7925a7ea42f1181303cf1da8ce643/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=102f3267e9e7925a7ea42f1181303cf1da8ce643",
        "patch": "@@ -17,6 +17,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/block_filter_deserialize \\\n   test/fuzz/block_header \\\n   test/fuzz/block_header_and_short_txids_deserialize \\\n+  test/fuzz/blockfilter \\\n   test/fuzz/blockheader_deserialize \\\n   test/fuzz/blocklocator_deserialize \\\n   test/fuzz/blockmerkleroot \\\n@@ -369,6 +370,12 @@ test_fuzz_block_header_and_short_txids_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMO\n test_fuzz_block_header_and_short_txids_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_block_header_and_short_txids_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n \n+test_fuzz_blockfilter_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_blockfilter_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_blockfilter_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_blockfilter_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_blockfilter_SOURCES = $(FUZZ_SUITE) test/fuzz/blockfilter.cpp\n+\n test_fuzz_blockheader_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCKHEADER_DESERIALIZE=1\n test_fuzz_blockheader_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_blockheader_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "be9320dcbf2d94afe7a48fb37aec801367b1541b",
        "filename": "src/test/fuzz/blockfilter.cpp",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/102f3267e9e7925a7ea42f1181303cf1da8ce643/src/test/fuzz/blockfilter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/102f3267e9e7925a7ea42f1181303cf1da8ce643/src/test/fuzz/blockfilter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/blockfilter.cpp?ref=102f3267e9e7925a7ea42f1181303cf1da8ce643",
        "patch": "@@ -0,0 +1,44 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <optional.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    const Optional<BlockFilter> block_filter = ConsumeDeserializable<BlockFilter>(fuzzed_data_provider);\n+    if (!block_filter) {\n+        return;\n+    }\n+    {\n+        (void)block_filter->ComputeHeader(ConsumeUInt256(fuzzed_data_provider));\n+        (void)block_filter->GetBlockHash();\n+        (void)block_filter->GetEncodedFilter();\n+        (void)block_filter->GetHash();\n+    }\n+    {\n+        const BlockFilterType block_filter_type = block_filter->GetFilterType();\n+        (void)BlockFilterTypeName(block_filter_type);\n+    }\n+    {\n+        const GCSFilter gcs_filter = block_filter->GetFilter();\n+        (void)gcs_filter.GetN();\n+        (void)gcs_filter.GetParams();\n+        (void)gcs_filter.GetEncoded();\n+        (void)gcs_filter.Match(ConsumeRandomLengthByteVector(fuzzed_data_provider));\n+        GCSFilter::ElementSet element_set;\n+        while (fuzzed_data_provider.ConsumeBool()) {\n+            element_set.insert(ConsumeRandomLengthByteVector(fuzzed_data_provider));\n+            gcs_filter.MatchAny(element_set);\n+        }\n+    }\n+}"
      },
      {
        "sha": "10be2ebaf7098c59f7520e00b3ad4fdc2bff98e3",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/102f3267e9e7925a7ea42f1181303cf1da8ce643/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/102f3267e9e7925a7ea42f1181303cf1da8ce643/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=102f3267e9e7925a7ea42f1181303cf1da8ce643",
        "patch": "@@ -13,6 +13,7 @@\n #include <streams.h>\n #include <test/fuzz/FuzzedDataProvider.h>\n #include <test/fuzz/fuzz.h>\n+#include <uint256.h>\n #include <version.h>\n \n #include <cstdint>\n@@ -70,6 +71,15 @@ NODISCARD inline CScriptNum ConsumeScriptNum(FuzzedDataProvider& fuzzed_data_pro\n     return CScriptNum{fuzzed_data_provider.ConsumeIntegral<int64_t>()};\n }\n \n+NODISCARD inline uint256 ConsumeUInt256(FuzzedDataProvider& fuzzed_data_provider) noexcept\n+{\n+    const std::vector<unsigned char> v256 = fuzzed_data_provider.ConsumeBytes<unsigned char>(sizeof(uint256));\n+    if (v256.size() != sizeof(uint256)) {\n+        return {};\n+    }\n+    return uint256{v256};\n+}\n+\n template <typename T>\n bool MultiplicationOverflow(T i, T j)\n {"
      }
    ]
  }
]