[
  {
    "sha": "ce14345a89dfa05992f8d2c7c9fe36315d4a67e6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZTE0MzQ1YTg5ZGZhMDU5OTJmOGQyYzdjOWZlMzYzMTVkNGE2N2U2",
    "commit": {
      "author": {
        "name": "Scott Ellis",
        "email": "sje397@gmail.com",
        "date": "2013-08-22T16:09:32Z"
      },
      "committer": {
        "name": "Scott Ellis",
        "email": "sje397@gmail.com",
        "date": "2013-10-14T08:02:03Z"
      },
      "message": "Add network traffic graph",
      "tree": {
        "sha": "997e08222a82558e8720fa0ce0ba82438f161664",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/997e08222a82558e8720fa0ce0ba82438f161664"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/comments",
    "author": {
      "login": "sje397",
      "id": 214252,
      "node_id": "MDQ6VXNlcjIxNDI1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/214252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sje397",
      "html_url": "https://github.com/sje397",
      "followers_url": "https://api.github.com/users/sje397/followers",
      "following_url": "https://api.github.com/users/sje397/following{/other_user}",
      "gists_url": "https://api.github.com/users/sje397/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sje397/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sje397/subscriptions",
      "organizations_url": "https://api.github.com/users/sje397/orgs",
      "repos_url": "https://api.github.com/users/sje397/repos",
      "events_url": "https://api.github.com/users/sje397/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sje397/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sje397",
      "id": 214252,
      "node_id": "MDQ6VXNlcjIxNDI1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/214252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sje397",
      "html_url": "https://github.com/sje397",
      "followers_url": "https://api.github.com/users/sje397/followers",
      "following_url": "https://api.github.com/users/sje397/following{/other_user}",
      "gists_url": "https://api.github.com/users/sje397/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sje397/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sje397/subscriptions",
      "organizations_url": "https://api.github.com/users/sje397/orgs",
      "repos_url": "https://api.github.com/users/sje397/repos",
      "events_url": "https://api.github.com/users/sje397/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sje397/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9269d0e96e621a6e02da8074785ac310ce64db73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9269d0e96e621a6e02da8074785ac310ce64db73",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9269d0e96e621a6e02da8074785ac310ce64db73"
      }
    ],
    "stats": {
      "total": 627,
      "additions": 618,
      "deletions": 9
    },
    "files": [
      {
        "sha": "2c8db7b53a22a954419184274e3518c10a13d8f6",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=ce14345a89dfa05992f8d2c7c9fe36315d4a67e6",
        "patch": "@@ -232,6 +232,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"ping\",                   &ping,                   true,      false,      false },\n     { \"addnode\",                &addnode,                true,      true,       false },\n     { \"getaddednodeinfo\",       &getaddednodeinfo,       true,      true,       false },\n+    { \"getnettotals\",           &getnettotals,           true,      true,       false },\n     { \"getdifficulty\",          &getdifficulty,          true,      false,      false },\n     { \"getnetworkhashps\",       &getnetworkhashps,       true,      false,      false },\n     { \"getgenerate\",            &getgenerate,            true,      false,      false },"
      },
      {
        "sha": "1cad12f14af30c72e98b166eb1db7119b007188e",
        "filename": "src/bitcoinrpc.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/bitcoinrpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/bitcoinrpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.h?ref=ce14345a89dfa05992f8d2c7c9fe36315d4a67e6",
        "patch": "@@ -156,6 +156,7 @@ extern json_spirit::Value getpeerinfo(const json_spirit::Array& params, bool fHe\n extern json_spirit::Value ping(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value addnode(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getaddednodeinfo(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value getnettotals(const json_spirit::Array& params, bool fHelp);\n \n extern json_spirit::Value dumpprivkey(const json_spirit::Array& params, bool fHelp); // in rpcdump.cpp\n extern json_spirit::Value importprivkey(const json_spirit::Array& params, bool fHelp);"
      },
      {
        "sha": "e22c56f006a813c0cd41e5b3cfd550e41c239a90",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 5,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=ce14345a89dfa05992f8d2c7c9fe36315d4a67e6",
        "patch": "@@ -426,8 +426,10 @@ void AddressCurrentlyConnected(const CService& addr)\n \n \n \n-\n-\n+uint64 CNode::nTotalBytesRecv = 0;\n+uint64 CNode::nTotalBytesSent = 0;\n+CCriticalSection CNode::cs_totalBytesRecv;\n+CCriticalSection CNode::cs_totalBytesSent;\n \n CNode* FindNode(const CNetAddr& ip)\n {\n@@ -731,6 +733,7 @@ void SocketSendData(CNode *pnode)\n             pnode->nLastSend = GetTime();\n             pnode->nSendBytes += nBytes;\n             pnode->nSendOffset += nBytes;\n+            pnode->RecordBytesSent(nBytes);\n             if (pnode->nSendOffset == data.size()) {\n                 pnode->nSendOffset = 0;\n                 pnode->nSendSize -= data.size();\n@@ -826,10 +829,9 @@ void ThreadSocketHandler()\n                 }\n             }\n         }\n-        if (vNodes.size() != nPrevNodeCount)\n-        {\n+        if(vNodes.size() != nPrevNodeCount) {\n             nPrevNodeCount = vNodes.size();\n-            uiInterface.NotifyNumConnectionsChanged(vNodes.size());\n+            uiInterface.NotifyNumConnectionsChanged(nPrevNodeCount);\n         }\n \n \n@@ -1008,6 +1010,7 @@ void ThreadSocketHandler()\n                                 pnode->CloseSocketDisconnect();\n                             pnode->nLastRecv = GetTime();\n                             pnode->nRecvBytes += nBytes;\n+                            pnode->RecordBytesRecv(nBytes);\n                         }\n                         else if (nBytes == 0)\n                         {\n@@ -1859,3 +1862,27 @@ void RelayTransaction(const CTransaction& tx, const uint256& hash, const CDataSt\n             pnode->PushInventory(inv);\n     }\n }\n+\n+void CNode::RecordBytesRecv(uint64 bytes)\n+{\n+    LOCK(cs_totalBytesRecv);\n+    nTotalBytesRecv += bytes;\n+}\n+\n+void CNode::RecordBytesSent(uint64 bytes)\n+{\n+    LOCK(cs_totalBytesSent);\n+    nTotalBytesSent += bytes;\n+}\n+\n+uint64 CNode::GetTotalBytesRecv()\n+{\n+    LOCK(cs_totalBytesRecv);\n+    return nTotalBytesRecv;\n+}\n+\n+uint64 CNode::GetTotalBytesSent()\n+{\n+    LOCK(cs_totalBytesSent);\n+    return nTotalBytesSent;\n+}"
      },
      {
        "sha": "ab1b69acb7a280823e607f7bd54cea8501e6f4c8",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=ce14345a89dfa05992f8d2c7c9fe36315d4a67e6",
        "patch": "@@ -298,8 +298,15 @@ class CNode\n     }\n \n private:\n+    // Network usage totals\n+    static CCriticalSection cs_totalBytesRecv;\n+    static CCriticalSection cs_totalBytesSent;\n+    static uint64 nTotalBytesRecv;\n+    static uint64 nTotalBytesSent;\n+\n     CNode(const CNode&);\n     void operator=(const CNode&);\n+\n public:\n \n \n@@ -646,6 +653,13 @@ class CNode\n     static bool IsBanned(CNetAddr ip);\n     bool Misbehaving(int howmuch); // 1 == a little, 100 == a lot\n     void copyStats(CNodeStats &stats);\n+\n+    // Network stats\n+    static void RecordBytesRecv(uint64 bytes);\n+    static void RecordBytesSent(uint64 bytes);\n+\n+    static uint64 GetTotalBytesRecv();\n+    static uint64 GetTotalBytesSent();\n };\n \n "
      },
      {
        "sha": "e7ae0a905fb3ba9fbc13e81a8b7910f992b1eff2",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=ce14345a89dfa05992f8d2c7c9fe36315d4a67e6",
        "patch": "@@ -48,7 +48,7 @@ QT_MOC_CPP = moc_aboutdialog.cpp moc_addressbookpage.cpp \\\n   moc_optionsmodel.cpp moc_overviewpage.cpp moc_paymentserver.cpp \\\n   moc_qrcodedialog.cpp moc_qvalidatedlineedit.cpp moc_qvaluecombobox.cpp \\\n   moc_rpcconsole.cpp moc_sendcoinsdialog.cpp moc_sendcoinsentry.cpp \\\n-  moc_signverifymessagedialog.cpp moc_splashscreen.cpp moc_transactiondesc.cpp \\\n+  moc_signverifymessagedialog.cpp moc_splashscreen.cpp moc_trafficgraphwidget.cpp moc_transactiondesc.cpp \\\n   moc_transactiondescdialog.cpp moc_transactionfilterproxy.cpp \\\n   moc_transactiontablemodel.cpp moc_transactionview.cpp moc_walletframe.cpp \\\n   moc_walletmodel.cpp moc_walletstack.cpp moc_walletview.cpp\n@@ -73,7 +73,7 @@ BITCOIN_QT_H  = aboutdialog.h addressbookpage.h addresstablemodel.h \\\n   optionsmodel.h overviewpage.h paymentrequestplus.h paymentserver.h \\\n   qrcodedialog.h qvalidatedlineedit.h qvaluecombobox.h rpcconsole.h \\\n   sendcoinsdialog.h sendcoinsentry.h signverifymessagedialog.h splashscreen.h \\\n-  transactiondescdialog.h transactiondesc.h transactionfilterproxy.h \\\n+  trafficgraphwidget.h transactiondescdialog.h transactiondesc.h transactionfilterproxy.h \\\n   transactionrecord.h transactiontablemodel.h transactionview.h walletframe.h \\\n   walletmodel.h walletmodeltransaction.h walletstack.h walletview.h\n \n@@ -102,7 +102,7 @@ BITCOIN_QT_CPP = aboutdialog.cpp addressbookpage.cpp \\\n   optionsdialog.cpp optionsmodel.cpp overviewpage.cpp paymentrequestplus.cpp \\\n   paymentserver.cpp qvalidatedlineedit.cpp qvaluecombobox.cpp \\\n   rpcconsole.cpp sendcoinsdialog.cpp sendcoinsentry.cpp \\\n-  signverifymessagedialog.cpp splashscreen.cpp transactiondesc.cpp \\\n+  signverifymessagedialog.cpp splashscreen.cpp trafficgraphwidget.cpp transactiondesc.cpp \\\n   transactiondescdialog.cpp transactionfilterproxy.cpp transactionrecord.cpp \\\n   transactiontablemodel.cpp transactionview.cpp walletframe.cpp \\\n   walletmodel.cpp walletmodeltransaction.cpp walletstack.cpp walletview.cpp"
      },
      {
        "sha": "f0cf229b36673d4645e965b10e496e75adb6e709",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=ce14345a89dfa05992f8d2c7c9fe36315d4a67e6",
        "patch": "@@ -51,6 +51,16 @@ int ClientModel::getNumBlocksAtStartup()\n     return numBlocksAtStartup;\n }\n \n+quint64 ClientModel::getTotalBytesRecv() const\n+{\n+    return CNode::GetTotalBytesRecv();\n+}\n+\n+quint64 ClientModel::getTotalBytesSent() const\n+{\n+    return CNode::GetTotalBytesSent();\n+}\n+\n QDateTime ClientModel::getLastBlockDate() const\n {\n     if (pindexBest)\n@@ -85,6 +95,8 @@ void ClientModel::updateTimer()\n         // ensure we return the maximum of newNumBlocksOfPeers and newNumBlocks to not create weird displays in the GUI\n         emit numBlocksChanged(newNumBlocks, std::max(newNumBlocksOfPeers, newNumBlocks));\n     }\n+\n+    emit bytesChanged(getTotalBytesRecv(), getTotalBytesSent());\n }\n \n void ClientModel::updateNumConnections(int numConnections)"
      },
      {
        "sha": "925f20acd96a4535c1a3112088723bc34bc32e34",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=ce14345a89dfa05992f8d2c7c9fe36315d4a67e6",
        "patch": "@@ -35,6 +35,9 @@ class ClientModel : public QObject\n     int getNumBlocks() const;\n     int getNumBlocksAtStartup();\n \n+    quint64 getTotalBytesRecv() const;\n+    quint64 getTotalBytesSent() const;\n+\n     double getVerificationProgress() const;\n     QDateTime getLastBlockDate() const;\n \n@@ -74,6 +77,7 @@ class ClientModel : public QObject\n     void numConnectionsChanged(int count);\n     void numBlocksChanged(int count, int countOfPeers);\n     void alertsChanged(const QString &warnings);\n+    void bytesChanged(quint64 totalBytesIn, quint64 totalBytesOut);\n \n     //! Asynchronous message notification\n     void message(const QString &title, const QString &message, unsigned int style);"
      },
      {
        "sha": "54c41ffb6767eb1154e80376b74fcace9918b858",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 261,
        "deletions": 0,
        "changes": 261,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=ce14345a89dfa05992f8d2c7c9fe36315d4a67e6",
        "patch": "@@ -445,10 +445,271 @@\n        </item>\n       </layout>\n      </widget>\n+     <widget class=\"QWidget\" name=\"tab\">\n+      <attribute name=\"title\">\n+       <string>&amp;Network Traffic</string>\n+      </attribute>\n+      <layout class=\"QHBoxLayout\" name=\"horizontalLayout_3\">\n+       <item>\n+        <layout class=\"QVBoxLayout\" name=\"verticalLayout_4\">\n+         <item>\n+          <widget class=\"TrafficGraphWidget\" name=\"trafficGraph\" native=\"true\">\n+           <property name=\"sizePolicy\">\n+            <sizepolicy hsizetype=\"Expanding\" vsizetype=\"Expanding\">\n+             <horstretch>0</horstretch>\n+             <verstretch>0</verstretch>\n+            </sizepolicy>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2\">\n+           <item>\n+            <widget class=\"QSlider\" name=\"sldGraphRange\">\n+             <property name=\"minimum\">\n+              <number>1</number>\n+             </property>\n+             <property name=\"maximum\">\n+              <number>288</number>\n+             </property>\n+             <property name=\"pageStep\">\n+              <number>12</number>\n+             </property>\n+             <property name=\"value\">\n+              <number>6</number>\n+             </property>\n+             <property name=\"orientation\">\n+              <enum>Qt::Horizontal</enum>\n+             </property>\n+            </widget>\n+           </item>\n+           <item>\n+            <widget class=\"QLabel\" name=\"lblGraphRange\">\n+             <property name=\"minimumSize\">\n+              <size>\n+               <width>100</width>\n+               <height>0</height>\n+              </size>\n+             </property>\n+             <property name=\"alignment\">\n+              <set>Qt::AlignCenter</set>\n+             </property>\n+            </widget>\n+           </item>\n+           <item>\n+            <widget class=\"QPushButton\" name=\"btnClearTrafficGraph\">\n+             <property name=\"text\">\n+              <string>&amp;Clear</string>\n+             </property>\n+            </widget>\n+           </item>\n+          </layout>\n+         </item>\n+        </layout>\n+       </item>\n+       <item>\n+        <layout class=\"QVBoxLayout\" name=\"verticalLayout\">\n+         <item>\n+          <widget class=\"QGroupBox\" name=\"groupBox\">\n+           <property name=\"title\">\n+            <string>Totals</string>\n+           </property>\n+           <layout class=\"QVBoxLayout\" name=\"verticalLayout_5\">\n+            <item>\n+             <layout class=\"QHBoxLayout\" name=\"horizontalLayout_4\">\n+              <item>\n+               <widget class=\"Line\" name=\"line\">\n+                <property name=\"sizePolicy\">\n+                 <sizepolicy hsizetype=\"Fixed\" vsizetype=\"Fixed\">\n+                  <horstretch>0</horstretch>\n+                  <verstretch>0</verstretch>\n+                 </sizepolicy>\n+                </property>\n+                <property name=\"minimumSize\">\n+                 <size>\n+                  <width>10</width>\n+                  <height>0</height>\n+                 </size>\n+                </property>\n+                <property name=\"palette\">\n+                 <palette>\n+                  <active>\n+                   <colorrole role=\"Light\">\n+                    <brush brushstyle=\"SolidPattern\">\n+                     <color alpha=\"255\">\n+                      <red>0</red>\n+                      <green>255</green>\n+                      <blue>0</blue>\n+                     </color>\n+                    </brush>\n+                   </colorrole>\n+                  </active>\n+                  <inactive>\n+                   <colorrole role=\"Light\">\n+                    <brush brushstyle=\"SolidPattern\">\n+                     <color alpha=\"255\">\n+                      <red>0</red>\n+                      <green>255</green>\n+                      <blue>0</blue>\n+                     </color>\n+                    </brush>\n+                   </colorrole>\n+                  </inactive>\n+                  <disabled>\n+                   <colorrole role=\"Light\">\n+                    <brush brushstyle=\"SolidPattern\">\n+                     <color alpha=\"255\">\n+                      <red>0</red>\n+                      <green>255</green>\n+                      <blue>0</blue>\n+                     </color>\n+                    </brush>\n+                   </colorrole>\n+                  </disabled>\n+                 </palette>\n+                </property>\n+                <property name=\"orientation\">\n+                 <enum>Qt::Horizontal</enum>\n+                </property>\n+               </widget>\n+              </item>\n+              <item>\n+               <widget class=\"QLabel\" name=\"label_16\">\n+                <property name=\"text\">\n+                 <string>In:</string>\n+                </property>\n+               </widget>\n+              </item>\n+              <item>\n+               <widget class=\"QLabel\" name=\"lblBytesIn\">\n+                <property name=\"minimumSize\">\n+                 <size>\n+                  <width>50</width>\n+                  <height>0</height>\n+                 </size>\n+                </property>\n+                <property name=\"alignment\">\n+                 <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n+                </property>\n+               </widget>\n+              </item>\n+             </layout>\n+            </item>\n+            <item>\n+             <layout class=\"QHBoxLayout\" name=\"horizontalLayout_5\">\n+              <item>\n+               <widget class=\"Line\" name=\"line_2\">\n+                <property name=\"sizePolicy\">\n+                 <sizepolicy hsizetype=\"Fixed\" vsizetype=\"Fixed\">\n+                  <horstretch>0</horstretch>\n+                  <verstretch>0</verstretch>\n+                 </sizepolicy>\n+                </property>\n+                <property name=\"minimumSize\">\n+                 <size>\n+                  <width>10</width>\n+                  <height>0</height>\n+                 </size>\n+                </property>\n+                <property name=\"palette\">\n+                 <palette>\n+                  <active>\n+                   <colorrole role=\"Light\">\n+                    <brush brushstyle=\"SolidPattern\">\n+                     <color alpha=\"255\">\n+                      <red>255</red>\n+                      <green>0</green>\n+                      <blue>0</blue>\n+                     </color>\n+                    </brush>\n+                   </colorrole>\n+                  </active>\n+                  <inactive>\n+                   <colorrole role=\"Light\">\n+                    <brush brushstyle=\"SolidPattern\">\n+                     <color alpha=\"255\">\n+                      <red>255</red>\n+                      <green>0</green>\n+                      <blue>0</blue>\n+                     </color>\n+                    </brush>\n+                   </colorrole>\n+                  </inactive>\n+                  <disabled>\n+                   <colorrole role=\"Light\">\n+                    <brush brushstyle=\"SolidPattern\">\n+                     <color alpha=\"255\">\n+                      <red>255</red>\n+                      <green>0</green>\n+                      <blue>0</blue>\n+                     </color>\n+                    </brush>\n+                   </colorrole>\n+                  </disabled>\n+                 </palette>\n+                </property>\n+                <property name=\"orientation\">\n+                 <enum>Qt::Horizontal</enum>\n+                </property>\n+               </widget>\n+              </item>\n+              <item>\n+               <widget class=\"QLabel\" name=\"label_17\">\n+                <property name=\"text\">\n+                 <string>Out:</string>\n+                </property>\n+               </widget>\n+              </item>\n+              <item>\n+               <widget class=\"QLabel\" name=\"lblBytesOut\">\n+                <property name=\"minimumSize\">\n+                 <size>\n+                  <width>50</width>\n+                  <height>0</height>\n+                 </size>\n+                </property>\n+                <property name=\"alignment\">\n+                 <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n+                </property>\n+               </widget>\n+              </item>\n+             </layout>\n+            </item>\n+            <item>\n+             <spacer name=\"verticalSpacer_4\">\n+              <property name=\"orientation\">\n+               <enum>Qt::Vertical</enum>\n+              </property>\n+              <property name=\"sizeHint\" stdset=\"0\">\n+               <size>\n+                <width>20</width>\n+                <height>407</height>\n+               </size>\n+              </property>\n+             </spacer>\n+            </item>\n+           </layout>\n+          </widget>\n+         </item>\n+        </layout>\n+       </item>\n+      </layout>\n+     </widget>\n     </widget>\n    </item>\n   </layout>\n  </widget>\n+ <customwidgets>\n+  <customwidget>\n+   <class>TrafficGraphWidget</class>\n+   <extends>QWidget</extends>\n+   <header>trafficgraphwidget.h</header>\n+   <container>1</container>\n+   <slots>\n+    <slot>clear()</slot>\n+   </slots>\n+  </customwidget>\n+ </customwidgets>\n  <resources>\n   <include location=\"../bitcoin.qrc\"/>\n  </resources>"
      },
      {
        "sha": "e7dcdf62a15c9e07c4dc44713da97db3848f960f",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 54,
        "deletions": 1,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=ce14345a89dfa05992f8d2c7c9fe36315d4a67e6",
        "patch": "@@ -22,6 +22,8 @@\n const int CONSOLE_HISTORY = 50;\n const QSize ICON_SIZE(24, 24);\n \n+const int INITIAL_TRAFFIC_GRAPH_MINS = 30;\n+\n const struct {\n     const char *url;\n     const char *source;\n@@ -204,6 +206,7 @@ RPCConsole::RPCConsole(QWidget *parent) :\n     ui->openSSLVersion->setText(SSLeay_version(SSLEAY_VERSION));\n \n     startExecutor();\n+    setTrafficGraphRange(INITIAL_TRAFFIC_GRAPH_MINS);\n \n     clear();\n }\n@@ -253,7 +256,8 @@ bool RPCConsole::eventFilter(QObject* obj, QEvent *event)\n \n void RPCConsole::setClientModel(ClientModel *model)\n {\n-    this->clientModel = model;\n+    clientModel = model;\n+    ui->trafficGraph->setClientModel(model);\n     if(model)\n     {\n         // Keep up to date with client\n@@ -263,6 +267,9 @@ void RPCConsole::setClientModel(ClientModel *model)\n         setNumBlocks(model->getNumBlocks(), model->getNumBlocksOfPeers());\n         connect(model, SIGNAL(numBlocksChanged(int,int)), this, SLOT(setNumBlocks(int,int)));\n \n+        updateTrafficStats(model->getTotalBytesRecv(), model->getTotalBytesSent());\n+        connect(model, SIGNAL(bytesChanged(quint64,quint64)), this, SLOT(updateTrafficStats(quint64, quint64)));\n+\n         // Provide initial values\n         ui->clientVersion->setText(model->formatFullVersion());\n         ui->clientName->setText(model->clientName());\n@@ -431,3 +438,49 @@ void RPCConsole::on_showCLOptionsButton_clicked()\n     GUIUtil::HelpMessageBox help;\n     help.exec();\n }\n+\n+void RPCConsole::on_sldGraphRange_valueChanged(int value)\n+{\n+    const int multiplier = 5; // each position on the slider represents 5 min\n+    int mins = value * multiplier;\n+    setTrafficGraphRange(mins);\n+}\n+\n+QString RPCConsole::FormatBytes(quint64 bytes)\n+{\n+    if(bytes < 1024)\n+        return QString(tr(\"%1 B\")).arg(bytes);\n+    if(bytes < 1024 * 1024)\n+        return QString(tr(\"%1 KB\")).arg(bytes / 1024);\n+    if(bytes < 1024 * 1024 * 1024)\n+        return QString(tr(\"%1 MB\")).arg(bytes / 1024 / 1024);\n+\n+    return QString(tr(\"%1 GB\")).arg(bytes / 1024 / 1024 / 1024);\n+}\n+\n+void RPCConsole::setTrafficGraphRange(int mins)\n+{\n+    ui->trafficGraph->setGraphRangeMins(mins);\n+    if(mins < 60) {\n+        ui->lblGraphRange->setText(QString(tr(\"%1 m\")).arg(mins));\n+    } else {\n+        int hours = mins / 60;\n+        int minsLeft = mins % 60;\n+        if(minsLeft == 0) {\n+            ui->lblGraphRange->setText(QString(tr(\"%1 h\")).arg(hours));\n+        } else {\n+            ui->lblGraphRange->setText(QString(tr(\"%1 h %2 m\")).arg(hours).arg(minsLeft));\n+        }\n+    }\n+}\n+\n+void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n+{\n+    ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n+    ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n+}\n+\n+void RPCConsole::on_btnClearTrafficGraph_clicked()\n+{\n+    ui->trafficGraph->clear();\n+}"
      },
      {
        "sha": "af92b55770fb762954d1d1405b4c98363122ea7b",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=ce14345a89dfa05992f8d2c7c9fe36315d4a67e6",
        "patch": "@@ -37,6 +37,12 @@ private slots:\n     void on_openDebugLogfileButton_clicked();\n     /** display messagebox with program parameters (same as bitcoin-qt --help) */\n     void on_showCLOptionsButton_clicked();\n+    /** change the time range of the network traffic graph */\n+    void on_sldGraphRange_valueChanged(int value);\n+    /** update traffic statistics */\n+    void updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut);\n+    /** clear traffic graph */\n+    void on_btnClearTrafficGraph_clicked();\n \n public slots:\n     void clear();\n@@ -55,6 +61,9 @@ public slots:\n     void cmdRequest(const QString &command);\n \n private:\n+    static QString FormatBytes(quint64 bytes);\n+    void setTrafficGraphRange(int mins);\n+\n     Ui::RPCConsole *ui;\n     ClientModel *clientModel;\n     QStringList history;"
      },
      {
        "sha": "d49bc31f3e53afa808b7e124aa8ac660ba3efb29",
        "filename": "src/qt/trafficgraphwidget.cpp",
        "status": "added",
        "additions": 169,
        "deletions": 0,
        "changes": 169,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/qt/trafficgraphwidget.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/qt/trafficgraphwidget.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/trafficgraphwidget.cpp?ref=ce14345a89dfa05992f8d2c7c9fe36315d4a67e6",
        "patch": "@@ -0,0 +1,169 @@\n+#include \"trafficgraphwidget.h\"\n+#include \"clientmodel.h\"\n+\n+#include <QPainter>\n+#include <QColor>\n+#include <QTimer>\n+\n+#include <cmath>\n+\n+#define DESIRED_SAMPLES         800\n+\n+#define XMARGIN                 10\n+#define YMARGIN                 10\n+\n+TrafficGraphWidget::TrafficGraphWidget(QWidget *parent) :\n+    QWidget(parent),\n+    timer(0),\n+    fMax(0.0f),\n+    nMins(0),\n+    vSamplesIn(),\n+    vSamplesOut(),\n+    nLastBytesIn(0),\n+    nLastBytesOut(0),\n+    clientModel(0)\n+{\n+    timer = new QTimer(this);\n+    connect(timer, SIGNAL(timeout()), SLOT(updateRates()));\n+}\n+\n+void TrafficGraphWidget::setClientModel(ClientModel *model)\n+{\n+    clientModel = model;\n+    if(model) {\n+        nLastBytesIn = model->getTotalBytesRecv();\n+        nLastBytesOut = model->getTotalBytesSent();\n+    }\n+}\n+\n+int TrafficGraphWidget::getGraphRangeMins() const\n+{\n+    return nMins;\n+}\n+\n+void TrafficGraphWidget::paintPath(QPainterPath &path, QQueue<float> &samples)\n+{\n+    int h = height() - YMARGIN * 2, w = width() - XMARGIN * 2;\n+    int sampleCount = samples.size(), x = XMARGIN + w, y;\n+    if(sampleCount > 0) {\n+        path.moveTo(x, YMARGIN + h);\n+        for(int i = 0; i < sampleCount; ++i) {\n+            x = XMARGIN + w - w * i / DESIRED_SAMPLES;\n+            y = YMARGIN + h - (int)(h * samples.at(i) / fMax);\n+            path.lineTo(x, y);\n+        }\n+        path.lineTo(x, YMARGIN + h);\n+    }\n+}\n+\n+void TrafficGraphWidget::paintEvent(QPaintEvent *)\n+{\n+    QPainter painter(this);\n+    painter.fillRect(rect(), Qt::black);\n+\n+    if(fMax <= 0.0f) return;\n+\n+    QColor axisCol(Qt::gray);\n+    int h = height() - YMARGIN * 2;\n+    painter.setPen(axisCol);\n+    painter.drawLine(XMARGIN, YMARGIN + h, width() - XMARGIN, YMARGIN + h);\n+\n+    // decide what order of magnitude we are\n+    int base = floor(log10(fMax));\n+    float val = pow(10.0f, base);\n+\n+    const QString units = tr(\"KB/s\");\n+    // draw lines\n+    painter.setPen(axisCol);\n+    painter.drawText(XMARGIN, YMARGIN + h - h * val / fMax, QString(\"%1 %2\").arg(val).arg(units));\n+    for(float y = val; y < fMax; y += val) {\n+        int yy = YMARGIN + h - h * y / fMax;\n+        painter.drawLine(XMARGIN, yy, width() - XMARGIN, yy);\n+    }\n+    // if we drew 3 or fewer lines, break them up at the next lower order of magnitude\n+    if(fMax / val <= 3.0f) {\n+        axisCol = axisCol.darker();\n+        val = pow(10.0f, base - 1);\n+        painter.setPen(axisCol);\n+        painter.drawText(XMARGIN, YMARGIN + h - h * val / fMax, QString(\"%1 %2\").arg(val).arg(units));\n+        int count = 1;\n+        for(float y = val; y < fMax; y += val, count++) {\n+            // don't overwrite lines drawn above\n+            if(count % 10 == 0)\n+                continue;\n+            int yy = YMARGIN + h - h * y / fMax;\n+            painter.drawLine(XMARGIN, yy, width() - XMARGIN, yy);\n+        }\n+    }\n+\n+    if(!vSamplesIn.empty()) {\n+        QPainterPath p;\n+        paintPath(p, vSamplesIn);\n+        painter.fillPath(p, QColor(0, 255, 0, 128));\n+        painter.setPen(Qt::green);\n+        painter.drawPath(p);\n+    }\n+    if(!vSamplesOut.empty()) {\n+        QPainterPath p;\n+        paintPath(p, vSamplesOut);\n+        painter.fillPath(p, QColor(255, 0, 0, 128));\n+        painter.setPen(Qt::red);\n+        painter.drawPath(p);\n+    }\n+}\n+\n+void TrafficGraphWidget::updateRates()\n+{\n+    if(!clientModel) return;\n+\n+    quint64 bytesIn = clientModel->getTotalBytesRecv(),\n+            bytesOut = clientModel->getTotalBytesSent();\n+    float inRate = (bytesIn - nLastBytesIn) / 1024.0f * 1000 / timer->interval();\n+    float outRate = (bytesOut - nLastBytesOut) / 1024.0f * 1000 / timer->interval();\n+    vSamplesIn.push_front(inRate);\n+    vSamplesOut.push_front(outRate);\n+    nLastBytesIn = bytesIn;\n+    nLastBytesOut = bytesOut;\n+\n+    while(vSamplesIn.size() > DESIRED_SAMPLES) {\n+        vSamplesIn.pop_back();\n+    }\n+    while(vSamplesOut.size() > DESIRED_SAMPLES) {\n+        vSamplesOut.pop_back();\n+    }\n+\n+    float tmax = 0.0f;\n+    foreach(float f, vSamplesIn) {\n+        if(f > tmax) tmax = f;\n+    }\n+    foreach(float f, vSamplesOut) {\n+        if(f > tmax) tmax = f;\n+    }\n+    fMax = tmax;\n+    update();\n+}\n+\n+void TrafficGraphWidget::setGraphRangeMins(int mins)\n+{\n+    nMins = mins;\n+    int msecsPerSample = nMins * 60 * 1000 / DESIRED_SAMPLES;\n+    timer->stop();\n+    timer->setInterval(msecsPerSample);\n+\n+    clear();\n+}\n+\n+void TrafficGraphWidget::clear()\n+{\n+    timer->stop();\n+\n+    vSamplesOut.clear();\n+    vSamplesIn.clear();\n+    fMax = 0.0f;\n+\n+    if(clientModel) {\n+        nLastBytesIn = clientModel->getTotalBytesRecv();\n+        nLastBytesOut = clientModel->getTotalBytesSent();\n+    }\n+    timer->start();\n+}"
      },
      {
        "sha": "b31d1d5b0a3d41a3c6736263e1a07cd0bdce2bab",
        "filename": "src/qt/trafficgraphwidget.h",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/qt/trafficgraphwidget.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/qt/trafficgraphwidget.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/trafficgraphwidget.h?ref=ce14345a89dfa05992f8d2c7c9fe36315d4a67e6",
        "patch": "@@ -0,0 +1,44 @@\n+#ifndef TRAFFICGRAPHWIDGET_H\n+#define TRAFFICGRAPHWIDGET_H\n+\n+#include <QWidget>\n+#include <QQueue>\n+\n+class ClientModel;\n+\n+QT_BEGIN_NAMESPACE\n+class QPaintEvent;\n+class QTimer;\n+QT_END_NAMESPACE\n+\n+class TrafficGraphWidget : public QWidget\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit TrafficGraphWidget(QWidget *parent = 0);\n+    void setClientModel(ClientModel *model);\n+    int getGraphRangeMins() const;\n+\n+protected:\n+    void paintEvent(QPaintEvent *);\n+\n+public slots:\n+    void updateRates();\n+    void setGraphRangeMins(int mins);\n+    void clear();\n+\n+private:\n+    void paintPath(QPainterPath &path, QQueue<float> &samples);\n+\n+    QTimer *timer;\n+    float fMax;\n+    int nMins;\n+    QQueue<float> vSamplesIn;\n+    QQueue<float> vSamplesOut;\n+    quint64 nLastBytesIn;\n+    quint64 nLastBytesOut;\n+    ClientModel *clientModel;\n+};\n+\n+#endif // TRAFFICGRAPHWIDGET_H"
      },
      {
        "sha": "f78f034e32a54cc183d1cab7685d443f4f1efd43",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce14345a89dfa05992f8d2c7c9fe36315d4a67e6/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=ce14345a89dfa05992f8d2c7c9fe36315d4a67e6",
        "patch": "@@ -223,3 +223,17 @@ Value getaddednodeinfo(const Array& params, bool fHelp)\n     return ret;\n }\n \n+Value getnettotals(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() > 0)\n+        throw runtime_error(\n+            \"getnettotals\\n\"\n+            \"Returns information about network traffic, including bytes in, bytes out,\\n\"\n+            \"and current time.\");\n+\n+    Object obj;\n+    obj.push_back(Pair(\"totalbytesrecv\", static_cast< boost::uint64_t>(CNode::GetTotalBytesRecv())));\n+    obj.push_back(Pair(\"totalbytessent\", static_cast<boost::uint64_t>(CNode::GetTotalBytesSent())));\n+    obj.push_back(Pair(\"timemillis\", static_cast<boost::int64_t>(GetTimeMillis())));\n+    return obj;\n+}"
      }
    ]
  }
]