[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657373448",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-657373448",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 657373448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzM3MzQ0OA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-13T05:51:54Z",
    "updated_at": "2020-07-31T17:48:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19065 (tests: Add fuzzing harness for CAddrMan. Fill some fuzzing coverage gaps. by practicalswift)\n* #14053 (Add address-based index (attempt 4?) by marcinja)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657373448/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657400171",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-657400171",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 657400171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzQwMDE3MQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-13T08:17:04Z",
    "updated_at": "2020-07-13T08:17:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK\r\n\r\nGetting rid of `GetVersion`/`GetType` and replacing them with a compile-time checked approach would be very nice.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657400171/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657759825",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-657759825",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 657759825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Nzc1OTgyNQ==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-13T19:56:18Z",
    "updated_at": "2020-07-13T19:56:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK as it will allow for a previously hacky solution to be neater. See https://github.com/bitcoin/bitcoin/issues/19477 for more details\r\n\r\nPerhaps a worthwhile followup: Completing the example documentations of our serialization \"helpers\" (seems like there's already a few examples, but not all of them are documented)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657759825/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657769998",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-657769998",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 657769998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Nzc2OTk5OA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-13T20:18:47Z",
    "updated_at": "2020-07-13T20:18:47Z",
    "author_association": "MEMBER",
    "body": "Rebased after #19486 merge. Addressed comments.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657769998/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658018845",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-658018845",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 658018845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODAxODg0NQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-14T07:28:04Z",
    "updated_at": "2020-07-14T07:28:04Z",
    "author_association": "MEMBER",
    "body": "Looks like the fuzzers don't compile on some of the commits",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658018845/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658030795",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-658030795",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 658030795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODAzMDc5NQ==",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?u=06eb9ae4f9b3f954056098860decccbf1340e40f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-14T07:55:03Z",
    "updated_at": "2020-07-14T07:55:03Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658030795/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658312761",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-658312761",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 658312761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODMxMjc2MQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-14T17:32:46Z",
    "updated_at": "2020-07-14T17:32:46Z",
    "author_association": "MEMBER",
    "body": "@dongcarl Agree - I've added more comments to explain the feature for now, but a more comprehensive overview of all the things the serialization framework supports would be a nice further improvement.\r\n\r\n@MarcoFalke Hopefully fixed. I also added all variants of deserialization to the fuzzers.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658312761/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658661474",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-658661474",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 658661474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODY2MTQ3NA==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-15T09:35:36Z",
    "updated_at": "2020-07-15T09:35:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Code coverage report for this PR from unit + functional tests (lines not modified by this PR are dimmed and files not modified by this PR are omitted from the report):\r\n* [report](https://people.freebsd.org/~vd/pr19503_3d3b09543_coverage/)\r\n* [links to modified and not covered lines](https://people.freebsd.org/~vd/pr19503_3d3b09543_coverage/modified_and_not_covered.html)\r\n* just [net_processing.cpp:3942](https://people.freebsd.org/~vd/pr19503_3d3b09543_coverage/src/net_processing.cpp.gcov.html#3942) is \"interesting\" (it is modified by this PR and not covered by tests).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658661474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658668027",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-658668027",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 658668027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODY2ODAyNw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-15T09:48:08Z",
    "updated_at": "2020-07-15T09:48:19Z",
    "author_association": "MEMBER",
    "body": "> just net_processing.cpp:3942 is \"interesting\" (it is modified by this PR and not covered by tests).\r\n\r\nThat line is pretty much a no-op and could be removed. It's ensuring that we never send more than 1000 CAddress records in a single ADDR message. However, the ADDR message is populated from vAddrToSend, which itself is limited to 1000 entries (see the PushAddress() function). So we could just remove that entire if block (and potentially replace it with an `assert(vAddr.size() <= 1000)` after the for loop).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658668027/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658836544",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-658836544",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 658836544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODgzNjU0NA==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-15T15:30:25Z",
    "updated_at": "2020-07-15T15:30:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "In order to check that this works as intended and to understand it better I wrote some unit tests that exercise it.\r\n\r\nSome observations, correct me if I am wrong:\r\n\r\n* I think it is impossible to use two separate methods `Serialize()` and `Unserialize()` with this mechanism and one has to use:\r\n```cpp\r\nSERIALIZE_METHODS_PARAMS(...)\r\n{\r\n    if (ser_action.ForRead()) {\r\n        ... all unserialize goes here ...\r\n    } else {\r\n        ... all serialize goes here ...\r\n    }\r\n}\r\n```\r\n\r\n* If there are two classes `Base` and `Derived` (the second one derived from the first), both using this mechanism, then for the derived class one has to create a formatter config that specifies how to format both `Base` and `Derived`:\r\n```cpp\r\nDerived derived;\r\nBaseAndDerivedFormat fmt;\r\n\r\nfmt.m_base_format = ...\r\nfmt.m_derived_format = ...\r\n\r\nstream << WithParams(fmt, derived);\r\n\r\n// and then in `Derived`:\r\n\r\nSERIALIZE_METHODS_PARAMS(Derived, obj, DerivedAndBaseFormat, fmt)\r\n{\r\n    READWRITE(WithParams(fmt.m_base_format, AsBase<Base>(obj)));\r\n\r\n    ... ser/unser this Derived object according to fmt.m_derived_format ...\r\n}\r\n```\r\n\r\n<details>\r\n<summary>unit tests, added to src/test/serialize_tests.cpp</summary>\r\n\r\n```cpp\r\n#include <util/strencodings.h>\r\n\r\n#include <algorithm>\r\n#include <ios>\r\n#include <string>\r\n\r\nenum class BaseFormat {\r\n    DEC,\r\n    HEX,\r\n};\r\n\r\n/// (Un)serialize a number as a string either from/to decimal or hexadecimal.\r\nclass Base\r\n{\r\npublic:\r\n    uint8_t m_base_data;\r\n\r\n    Base() : m_base_data(17) {}\r\n    explicit Base(uint8_t data) : m_base_data(data) {}\r\n\r\n    SERIALIZE_METHODS_PARAMS(Base, obj, BaseFormat, fmt)\r\n    {\r\n        if (ser_action.ForRead()) {\r\n            std::string str;\r\n            s >> str;\r\n            const uint8_t data = (uint8_t)std::stoul(str, 0, fmt == BaseFormat::DEC ? 10 : 16);\r\n            SER_READ(obj, obj.m_base_data = data);\r\n        } else {\r\n            s << strprintf(fmt == BaseFormat::DEC ? \"%02hhu\" : \"%02hhX\", obj.m_base_data);\r\n        }\r\n    }\r\n};\r\n\r\nclass DerivedAndBaseFormat\r\n{\r\npublic:\r\n    BaseFormat m_base_format;\r\n\r\n    enum class DerivedFormat {\r\n        LOWER,\r\n        UPPER,\r\n    } m_derived_format;\r\n};\r\n\r\nclass Derived : public Base\r\n{\r\npublic:\r\n    std::string m_derived_data;\r\n\r\n    SERIALIZE_METHODS_PARAMS(Derived, obj, DerivedAndBaseFormat, fmt)\r\n    {\r\n        READWRITE(WithParams(fmt.m_base_format, AsBase<Base>(obj)));\r\n\r\n        if (ser_action.ForRead()) {\r\n            std::string str;\r\n            s >> str;\r\n            SER_READ(obj, obj.m_derived_data = str);\r\n        } else {\r\n            s << (fmt.m_derived_format == DerivedAndBaseFormat::DerivedFormat::LOWER ?\r\n                      ToLower(obj.m_derived_data) :\r\n                      ToUpper(obj.m_derived_data));\r\n        }\r\n    }\r\n};\r\n\r\nBOOST_AUTO_TEST_CASE(with_params_base)\r\n{\r\n    Base b{15};\r\n\r\n    CDataStream stream(SER_DISK, PROTOCOL_VERSION);\r\n\r\n    stream << WithParams(BaseFormat::DEC, b);\r\n    BOOST_CHECK_EQUAL(stream.str(), \"\\2\" \"15\");\r\n\r\n    b.m_base_data = 0;\r\n    stream >> WithParams(BaseFormat::DEC, b);\r\n    BOOST_CHECK_EQUAL(b.m_base_data, 15);\r\n\r\n    stream.clear();\r\n\r\n    stream << WithParams(BaseFormat::HEX, b);\r\n    BOOST_CHECK_EQUAL(stream.str(), \"\\2\" \"0F\");\r\n\r\n    b.m_base_data = 0;\r\n    stream >> WithParams(BaseFormat::HEX, b);\r\n    BOOST_CHECK_EQUAL(b.m_base_data, 0x0F);\r\n}\r\n\r\nBOOST_AUTO_TEST_CASE(with_params_vector_of_base)\r\n{\r\n    std::vector<Base> v{Base{15}, Base{255}};\r\n\r\n    CDataStream stream(SER_DISK, PROTOCOL_VERSION);\r\n\r\n    stream << WithParams(BaseFormat::DEC, v);\r\n    BOOST_CHECK_EQUAL(stream.str(), \"\\2\\2\" \"15\" \"\\3\" \"255\");\r\n\r\n    v[0].m_base_data = 0;\r\n    v[1].m_base_data = 0;\r\n    stream >> WithParams(BaseFormat::DEC, v);\r\n    BOOST_CHECK_EQUAL(v[0].m_base_data, 15);\r\n    BOOST_CHECK_EQUAL(v[1].m_base_data, 255);\r\n\r\n    stream.clear();\r\n\r\n    stream << WithParams(BaseFormat::HEX, v);\r\n    BOOST_CHECK_EQUAL(stream.str(), \"\\2\\2\" \"0F\" \"\\2\" \"FF\");\r\n\r\n    v[0].m_base_data = 0;\r\n    v[1].m_base_data = 0;\r\n    stream >> WithParams(BaseFormat::HEX, v);\r\n    BOOST_CHECK_EQUAL(v[0].m_base_data, 0x0F);\r\n    BOOST_CHECK_EQUAL(v[1].m_base_data, 0xFF);\r\n}\r\n\r\nBOOST_AUTO_TEST_CASE(with_params_derived)\r\n{\r\n    Derived d;\r\n    d.m_base_data = 15;\r\n    d.m_derived_data = \"xY\";\r\n\r\n    DerivedAndBaseFormat fmt;\r\n\r\n    CDataStream stream(SER_DISK, PROTOCOL_VERSION);\r\n\r\n    fmt.m_base_format = BaseFormat::DEC;\r\n    fmt.m_derived_format = DerivedAndBaseFormat::DerivedFormat::LOWER;\r\n    stream << WithParams(fmt, d);\r\n\r\n    fmt.m_base_format = BaseFormat::HEX;\r\n    fmt.m_derived_format = DerivedAndBaseFormat::DerivedFormat::UPPER;\r\n    stream << WithParams(fmt, d);\r\n\r\n    BOOST_CHECK_EQUAL(stream.str(), \"\\2\" \"15\" \"\\2\" \"xy\" \"\\2\" \"0F\" \"\\2\" \"XY\");\r\n}\r\n```\r\n</details>\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658836544/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658868509",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-658868509",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 658868509,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODg2ODUwOQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-15T16:34:03Z",
    "updated_at": "2020-07-15T16:34:03Z",
    "author_association": "MEMBER",
    "body": "@vasild:\r\n\r\n* It should be possible to use separate `Serialize` and `Unserialize` member functions. Do you have a specific example that does not work?\r\n\r\n* This should *not* work in general:\r\n\r\n```c++\r\nSERIALIZE_METHODS_PARAMS(...)\r\n{\r\n    if (ser_action.ForRead()) {\r\n        ... all unserialize goes here ...\r\n    } else {\r\n        ... all serialize goes here ...\r\n    }\r\n}\r\n```\r\n\r\nbecause `*this` will be const during serialization, which means that the \"ForRead\" branch would not compile in the Serialize version. You can use `SER_READ` or `SER_WRITE` though, to specify statements that are only executed during reading or writing (in a type-safe way).\r\n\r\n* For Base/Derived classes, an alternative is having DerivedParams inherit from BaseParams (it can't be an enum in that case, though), or otherwise have a conversion operator from one to the other. In that case you don't need WithParams to transmute the parameters.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658868509/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658875099",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-658875099",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 658875099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODg3NTA5OQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-15T16:45:42Z",
    "updated_at": "2020-07-15T16:45:42Z",
    "author_association": "MEMBER",
    "body": "Will review when travis is green",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658875099/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658882692",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-658882692",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 658882692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODg4MjY5Mg==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-15T16:58:53Z",
    "updated_at": "2020-07-15T16:58:53Z",
    "author_association": "MEMBER",
    "body": "@MarcoFalke I've been pushing fixes, and GitHub's UI doesn't seem to be picking them up...",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658882692/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658883070",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-658883070",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 658883070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODg4MzA3MA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-15T16:59:33Z",
    "updated_at": "2020-07-15T16:59:33Z",
    "author_association": "MEMBER",
    "body": "https://github.com/sipa/bitcoin/tree/202007_ser_options has commits that aren't here.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658883070/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658885841",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-658885841",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 658885841,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODg4NTg0MQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-15T17:04:00Z",
    "updated_at": "2020-07-15T17:04:00Z",
    "author_association": "MEMBER",
    "body": "No idea what's going on. Since this has no reviews, you could try rebasing once more on master and force push? :man_shrugging: ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658885841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658898647",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-658898647",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 658898647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODg5ODY0Nw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-15T17:26:00Z",
    "updated_at": "2020-07-15T17:26:00Z",
    "author_association": "MEMBER",
    "body": "Ah it was just behind; it picked them up now.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658898647/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658971768",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-658971768",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 658971768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODk3MTc2OA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-15T19:47:40Z",
    "updated_at": "2020-07-15T19:47:40Z",
    "author_association": "MEMBER",
    "body": "Travis still failing in the fuzzer. Also, needs rebase after https://github.com/bitcoin/bitcoin/pull/19360#discussion_r455193993",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658971768/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/659018638",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-659018638",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 659018638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTAxODYzOA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-15T21:22:10Z",
    "updated_at": "2020-07-15T21:22:10Z",
    "author_association": "MEMBER",
    "body": "I think this requires a change to netaddress.h now that #19360 has been merged: https://github.com/bitcoin/bitcoin/pull/19360/files#diff-76d15e11a95be7a4aee1eb89de6098caR165",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/659018638/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/659216460",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-659216460",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 659216460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTIxNjQ2MA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-16T07:31:23Z",
    "updated_at": "2020-07-16T07:31:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n\ud83d\udc19 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/659216460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/659398102",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-659398102",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 659398102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTM5ODEwMg==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-16T13:06:09Z",
    "updated_at": "2020-07-16T13:06:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Alright, so this:\r\n\r\n```cpp\r\n    SERIALIZE_METHODS_PARAMS(Base, obj, BaseFormat, fmt)\r\n    {\r\n        if (ser_action.ForRead()) {\r\n            std::string str;\r\n            s >> str;\r\n            const int base = fmt == BaseFormat::DEC ? 10 : 16;\r\n            const uint8_t data = (uint8_t)std::stoul(str, 0, base);\r\n            SER_READ(obj, obj.m_base_data = data);\r\n        } else {\r\n            s << strprintf(fmt == BaseFormat::DEC ? \"%02hhu\" : \"%02hhX\", obj.m_base_data);\r\n        }\r\n    }\r\n```\r\n\r\nis equivalent to this:\r\n\r\n```cpp\r\n    template <typename Stream>\r\n    void Serialize(Stream& s) const\r\n    {\r\n        s << strprintf(s.GetParams() == BaseFormat::DEC ? \"%02hhu\" : \"%02hhX\", m_base_data);\r\n    }\r\n\r\n    template <typename Stream>\r\n    void Unserialize(Stream& s)\r\n    {\r\n        std::string str;\r\n        s >> str;\r\n        const int base = s.GetParams() == BaseFormat::DEC ? 10 : 16;\r\n        m_base_data = (uint8_t)std::stoul(str, 0, base);\r\n    }\r\n```\r\n\r\nI pushed the unit tests that exercise this feature at https://github.com/vasild/bitcoin/commit/8d89c1d43, feel free to pick (some of) them into this PR if you find them interesting, or if they may serve as an example of how to use this.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/659398102/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/659731403",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-659731403",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 659731403,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTczMTQwMw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-16T23:25:33Z",
    "updated_at": "2020-07-16T23:25:33Z",
    "author_association": "MEMBER",
    "body": "Rebased, added a few more comments, renamed `AddrSerialization` to `CAddress::Format`, and included @vasild's unit test.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/659731403/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/662752171",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-662752171",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 662752171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2Mjc1MjE3MQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-22T23:45:07Z",
    "updated_at": "2020-07-22T23:45:51Z",
    "author_association": "MEMBER",
    "body": "@ryanofsky That approach works and is a lot simpler, but I think it misses the \"automatic recursion\" property I was hoping for, that you could e.g. serialize a CBlock with specified CTransaction parameters, and it would transparently pass those parameters down. Or a block could define its own type that can be converted to the CTransaction parameters type, but not need to anything beyond that.\r\n\r\nWhether that's a desirable depends how much you treat a higher-level structure as openly containing the lower-level structure, but I think in general most of our complex serializable data structures are like that.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/662752171/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668585203",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-668585203",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 668585203,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODU4NTIwMw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-04T13:07:26Z",
    "updated_at": "2020-08-04T13:07:26Z",
    "author_association": "MEMBER",
    "body": "re-ACK 483ed457411d164ad71115dbfe1d2b4ff8b2e5f3, though I did not review the serialize.h changes \ud83d\udea4\r\n\r\nChanges since last review:\r\n* Rebase\r\n* Added comments/doc\r\n* Fix \"off-by-one\" issue/typo bug in commit \"12a5a3c032 Disentangle disk address version from client version\"\r\n* Properly deserialize addrFrom without time (Bugfix in commit \"21446c5b5d Use serialization parameters for CAddress serialization\")\r\n* Fix and extend fuzzers\r\n* Add tests from vasild\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nre-ACK 483ed457411d164ad71115dbfe1d2b4ff8b2e5f3, though I did not review the serialize.h changes \ud83d\udea4\r\n\r\nChanges since last review:\r\n* Rebase\r\n* Added comments/doc\r\n* Fix \"off-by-one\" issue/typo bug in commit \"12a5a3c032 Disentangle disk address version from client version\"\r\n* Properly deserialize addrFrom without time (Bugfix in commit \"21446c5b5d Use serialization parameters for CAddress serialization\")\r\n* Fix and extend fuzzers\r\n* Add tests from vasild\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUiZTQwAoa37uqI1WTtHnkBHX/T8VKa36Ba6GzwdKgCSLVl7uMr0qw5jL/UrHuG+\r\ntHm4W6GH6fuxYSblm+r7ujigrAkD4/3gPsbOG5mHaYTDOtiL9/ZTHT4HT/nbyZBL\r\nKmaVaLHihfZy8NS05IG8y4sB97ZWXmiAak4An6NdfmjtB5ahWVH5HuLxLERIM7nb\r\nyLjW/5GVbnnMvhirK/nyMcAAXSlTY5twmjT2LYWQ0TnJnNF0djY0VMkvNF8RrvgZ\r\nk3zVnE0J+MW5mv2KcKRCYouGXc+WK777s5gc7bVOfP0J0So9i20LP1pFGqdR+FhV\r\n0WF0aO27EJVePxev36zdaF4CuEFadP99NN5fKnY6rUwpd7+3hIRWZOH2958bbaSH\r\n3oE+M5tLKd+qsAIZ+Lz7W3XU/oK9DE3v8YRasuLzgAFXoiZVkYnISWp/N+FZv+/6\r\nrhAFSyF45HGFkEAa40KdzPV/aT+LWi9UnZe+wa1RtOoiM25jDMTbyLBJiJNz3EoT\r\nvjuegm6r\r\n=lpi2\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `c6299c40a36d62d1a32997018080b37d4feeef88382e17059f749fec43043e26  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e892940108c6299c40a36d62d1a32997018080b37d4feeef88382e17059f749fec43043e26f010f238cb3992877e848944f76a0343dd0908fff0102aa566b34d009b04762788277f6ac9d608f1045f295cb2f008e11f8e3009ba9b280083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff0103ddf7cadfbd958de14b17793de8b175d08f1045f295caef0081101c1afe0c3fc390083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6df010b20b5d0687ab4e4e734568c9f9f70e6a08f1045f295caff008b48263468e1d50b10083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6d)\r\n\r\n</details>\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668585203/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668585730",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-668585730",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 668585730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODU4NTczMA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-04T13:08:33Z",
    "updated_at": "2020-08-04T13:08:33Z",
    "author_association": "MEMBER",
    "body": "Note to myself, if this gets merged: It would be good to remove the now unused protocol version includes. I.e.\r\n\r\n\r\n```diff\r\ncommit 7ffff5b3237fa418637d30ddb59534ab47d3f610 (HEAD)\r\nAuthor: MarcoFalke <falke.marco@gmail.com>\r\nDate:   Tue Aug 4 14:58:25 2020 +0200\r\n\r\n    Remove unused protocol version header from protocol.h\r\n\r\ndiff --git a/src/bench/rpc_blockchain.cpp b/src/bench/rpc_blockchain.cpp\r\nindex 4b45264a3c..09bfcb60a5 100644\r\n--- a/src/bench/rpc_blockchain.cpp\r\n+++ b/src/bench/rpc_blockchain.cpp\r\n@@ -8,6 +8,7 @@\r\n #include <rpc/blockchain.h>\r\n #include <streams.h>\r\n #include <validation.h>\r\n+#include <version.h> // For PROTOCOL_VERSION\r\n \r\n #include <univalue.h>\r\n \r\ndiff --git a/src/protocol.h b/src/protocol.h\r\nindex a564508f89..58669e20b5 100644\r\n--- a/src/protocol.h\r\n+++ b/src/protocol.h\r\n@@ -14,7 +14,6 @@\r\n #include <primitives/transaction.h>\r\n #include <serialize.h>\r\n #include <uint256.h>\r\n-#include <version.h>\r\n \r\n #include <stdint.h>\r\n #include <string>\r\n```\r\n\r\nand\r\n\r\n```diff\r\ncommit 4550d37e268e7ffe34b3f5ea11d6b3f231d9065a\r\nAuthor: MarcoFalke <falke.marco@gmail.com>\r\nDate:   Tue Aug 4 12:56:55 2020 +0200\r\n\r\n    Remove unused protocol version header from undo.h\r\n\r\ndiff --git a/src/undo.h b/src/undo.h\r\nindex a98f046735..1fb9ac0688 100644\r\n--- a/src/undo.h\r\n+++ b/src/undo.h\r\n@@ -11,7 +11,6 @@\r\n #include <consensus/consensus.h>\r\n #include <primitives/transaction.h>\r\n #include <serialize.h>\r\n-#include <version.h>\r\n \r\n /** Formatter for undo information for a CTxIn\r\n  *\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668585730/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674837070",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-674837070",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 674837070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDgzNzA3MA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-17T11:55:18Z",
    "updated_at": "2020-08-17T11:55:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n\ud83d\udc19 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674837070/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/690998864",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-690998864",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 690998864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MDk5ODg2NA==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-11T10:03:22Z",
    "updated_at": "2020-09-11T10:03:22Z",
    "author_association": "MEMBER",
    "body": "Needs rebase.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/690998864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/714326849",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-714326849",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 714326849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDMyNjg0OQ==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-22T08:30:59Z",
    "updated_at": "2020-10-22T08:30:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "This would resolve https://github.com/bitcoin/bitcoin/issues/19477.\r\n\r\nAlso, `ADDRV2_FORMAT` could be replaced with the technique introduced in this PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/714326849/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/733736072",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-733736072",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19503",
    "id": 733736072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMzczNjA3Mg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-25T14:21:18Z",
    "updated_at": "2020-11-25T14:21:18Z",
    "author_association": "MEMBER",
    "body": "Could also use `LIFETIMEBOUND` as per https://github.com/bitcoin/bitcoin/pull/19387#issuecomment-658372256?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/733736072/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453556220",
    "pull_request_review_id": 447132141,
    "id": 453556220,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU1NjIyMA==",
    "diff_hunk": "@@ -354,28 +354,43 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+enum class AddrSerialization {\n+    DISK,\n+\n+    // The only time we serialize a CAddress object without nTime is in\n+    // the initial VERSION messages which contain two CAddress records.\n+    // At that point, the serialization version is INIT_PROTO_VERSION.",
    "path": "src/protocol.h",
    "position": null,
    "original_position": 9,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "2149a5f52835bb4bd33f7b2ec974f91fde4c9f91",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This sentence can be removed now. It's meaningless without a serialization version.",
    "created_at": "2020-07-13T10:35:05Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453556220",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453556220"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453556220"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453556220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 362,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453789310",
    "pull_request_review_id": 447426942,
    "id": 453789310,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc4OTMxMA==",
    "diff_hunk": "@@ -359,26 +359,32 @@ class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** The disk serialization for CAddress includes a version number.\n+     *  Traditionally the number CLIENT_VERSION was used, but it has since\n+     *  been disentangled from it. */\n+    static constexpr uint32_t DISK_VERSION{210000};\n+\n public:\n     CAddress() : CService{} {};\n     explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n     SERIALIZE_METHODS(CAddress, obj)\n     {\n         SER_READ(obj, obj.nTime = TIME_INIT);\n-        int nVersion = s.GetVersion();\n         if (s.GetType() & SER_DISK) {\n-            READWRITE(nVersion);\n-        }\n-        if ((s.GetType() & SER_DISK) ||\n-            (nVersion != INIT_PROTO_VERSION && !(s.GetType() & SER_GETHASH))) {\n+            uint32_t disk_version = DISK_VERSION;\n+            READWRITE(disk_version);\n+            READWRITE(obj.nTime);\n+        } else if (s.GetType() & SER_NETWORK) {\n             // The only time we serialize a CAddress object without nTime is in\n             // the initial VERSION messages which contain two CAddress records.\n             // At that point, the serialization version is INIT_PROTO_VERSION.\n             // After the version handshake, serialization version is >=\n             // MIN_PEER_PROTO_VERSION and all ADDR messages are serialized with\n             // nTime.\n-            READWRITE(obj.nTime);\n+            if (s.GetVersion() >= INIT_PROTO_VERSION) {\n+                READWRITE(obj.nTime);\n+            }\n         }",
    "path": "src/protocol.h",
    "position": 47,
    "original_position": 36,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "908c6feb3673479579467afab69c42a7f535e39b",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit \"distentangle ...\":\r\n\r\nThis is not compatible with the live network. When testing I get:\r\n\r\n```\r\n2020-07-13T16:36:11Z [opencon] trying connection 188.42.33.44:18333 lastseen=1702.0hrs\r\n2020-07-13T16:36:11Z [opencon] Added connection peer=7\r\n2020-07-13T16:36:11Z [opencon] sending version (111 bytes) peer=7\r\n2020-07-13T16:36:11Z [opencon] send version message: version 70015, blocks=1746853, us=[::]:0, peer=7\r\n2020-07-13T16:36:11Z [msghand] received: reject (31 bytes) peer=7\r\n2020-07-13T16:36:11Z [msghand] Misbehaving: 188.42.33.44:18333 peer=7 (0 -> 1)\r\n2020-07-13T16:36:11Z [net] socket closed for peer=7\r\n2020-07-13T16:36:11Z [net] disconnecting peer=7\r\n2020-07-13T16:36:11Z [net] Cleared nodestate for peer=7\r\n",
    "created_at": "2020-07-13T16:50:43Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453789310",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453789310"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453789310"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453789310/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 387,
    "original_line": 387,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453805326",
    "pull_request_review_id": 447426942,
    "id": 453805326,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgwNTMyNg==",
    "diff_hunk": "@@ -368,23 +380,15 @@ class CAddress : public CService\n     CAddress() : CService{} {};\n     explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n-    SERIALIZE_METHODS(CAddress, obj)\n+    SERIALIZE_METHODS_PARAMS(CAddress, obj, AddrSerialization, fmt)\n     {\n         SER_READ(obj, obj.nTime = TIME_INIT);\n-        if (s.GetType() & SER_DISK) {\n+        if (fmt == AddrSerialization::DISK) {\n             uint32_t disk_version = DISK_VERSION;\n             READWRITE(disk_version);\n             READWRITE(obj.nTime);\n-        } else if (s.GetType() & SER_NETWORK) {\n-            // The only time we serialize a CAddress object without nTime is in\n-            // the initial VERSION messages which contain two CAddress records.\n-            // At that point, the serialization version is INIT_PROTO_VERSION.\n-            // After the version handshake, serialization version is >=\n-            // MIN_PEER_PROTO_VERSION and all ADDR messages are serialized with\n-            // nTime.\n-            if (s.GetVersion() >= INIT_PROTO_VERSION) {\n-                READWRITE(obj.nTime);\n-            }\n+        } else if (fmt == AddrSerialization::NETWORK_WITHTIME) {\n+            READWRITE(obj.nTime);\n         }",
    "path": "src/protocol.h",
    "position": null,
    "original_position": 44,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "2149a5f52835bb4bd33f7b2ec974f91fde4c9f91",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit \"user serialization ...\":\r\n\r\n\r\nStill not compatible. Now I get:\r\n\r\n```\r\n2020-07-13T17:01:39Z [opencon] trying connection 95.183.48.89:18333 lastseen=2468.3hrs\r\n2020-07-13T17:01:39Z [opencon] Added connection peer=2\r\n2020-07-13T17:01:39Z [opencon] sending version (103 bytes) peer=2\r\n2020-07-13T17:01:39Z [opencon] send version message: version 70015, blocks=1746969, us=[::]:0, peer=2\r\n2020-07-13T17:01:39Z [msghand] received: version (102 bytes) peer=2\r\n2020-07-13T17:01:39Z [msghand] ProcessMessages(version, 102 bytes): Exception 'CDataStream::read(): end of data: iostream error' (NSt8ios_base7failureB5cxx11E) caught\r\n2020-07-13T17:01:39Z [msghand] received: verack (0 bytes) peer=2\r\n2020-07-13T17:01:39Z [msghand] Misbehaving: 95.183.48.89:18333 peer=2 (0 -> 1)\r\n",
    "created_at": "2020-07-13T17:17:27Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453805326",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453805326"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453805326"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453805326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 386,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453808173",
    "pull_request_review_id": 447426942,
    "id": 453808173,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgwODE3Mw==",
    "diff_hunk": "@@ -354,28 +354,43 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+enum class AddrSerialization {\n+    DISK,\n+\n+    // The only time we serialize a CAddress object without nTime is in\n+    // the initial VERSION messages which contain two CAddress records.\n+    // At that point, the serialization version is INIT_PROTO_VERSION.\n+    // After the version handshake, all ADDR messages are serialized with\n+    // nTime.\n+    NETWORK_NOTIME,\n+    NETWORK_WITHTIME",
    "path": "src/protocol.h",
    "position": null,
    "original_position": 13,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "2149a5f52835bb4bd33f7b2ec974f91fde4c9f91",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in the last commit:\r\n\r\nCould add a trailing semicolon? I've prepared a suggested diff for you that also switches to a switch-case so that the compiler can check all cases are covered, feel free to take or reject:\r\n\r\n\r\n```diff\r\ndiff --git a/src/protocol.h b/src/protocol.h\r\nindex 500cf346e9..0f5786a1a9 100644\r\n--- a/src/protocol.h\r\n+++ b/src/protocol.h\r\n@@ -356,14 +356,8 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\r\n \r\n enum class AddrSerialization {\r\n     DISK,\r\n-\r\n-    // The only time we serialize a CAddress object without nTime is in\r\n-    // the initial VERSION messages which contain two CAddress records.\r\n-    // At that point, the serialization version is INIT_PROTO_VERSION.\r\n-    // After the version handshake, all ADDR messages are serialized with\r\n-    // nTime.\r\n     NETWORK_NOTIME,\r\n-    NETWORK_WITHTIME\r\n+    NETWORK_WITHTIME,\r\n };\r\n \r\n /** A CService with information about it as peer */\r\n@@ -383,13 +377,23 @@ public:\r\n     SERIALIZE_METHODS_PARAMS(CAddress, obj, AddrSerialization, fmt)\r\n     {\r\n         SER_READ(obj, obj.nTime = TIME_INIT);\r\n-        if (fmt == AddrSerialization::DISK) {\r\n+        switch (fmt) {\r\n+        case AddrSerialization::DISK: {\r\n             uint32_t disk_version = DISK_VERSION;\r\n             READWRITE(disk_version);\r\n             READWRITE(obj.nTime);\r\n-        } else if (fmt == AddrSerialization::NETWORK_WITHTIME) {\r\n+            break;\r\n+        }\r\n+        case AddrSerialization::NETWORK_WITHTIME: {\r\n             READWRITE(obj.nTime);\r\n+            break;\r\n+        }\r\n+        case AddrSerialization::NETWORK_NOTIME: {\r\n+            // The only time we serialize a CAddress object without nTime is in\r\n+            // the initial VERSION messages which contain two CAddress records.\r\n+            break;\r\n         }\r\n+        } // no default case, so the compiler can warn about missing cases\r\n         READWRITE(Using<CustomUintFormatter<8>>(obj.nServices), AsBase<CService>(obj));\r\n     }\r\n \r\n",
    "created_at": "2020-07-13T17:22:00Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453808173",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453808173"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453808173"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453808173/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 366,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453872482",
    "pull_request_review_id": 447527591,
    "id": 453872482,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3MjQ4Mg==",
    "diff_hunk": "@@ -165,11 +165,10 @@ enum\n };\n \n //! Convert the reference base type to X, without changing constness or reference type.\n-template<typename X> X& ReadWriteAsHelper(X& x) { return x; }\n-template<typename X> const X& ReadWriteAsHelper(const X& x) { return x; }\n+template<typename X> X& AsBase(X& x) { return x; }",
    "path": "src/serialize.h",
    "position": 26,
    "original_position": 6,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "2149a5f52835bb4bd33f7b2ec974f91fde4c9f91",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why not use `static_cast` instead of `AsBase`?",
    "created_at": "2020-07-13T19:12:56Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453872482",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453872482"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453872482"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453872482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 186,
    "original_line": 186,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453877989",
    "pull_request_review_id": 447527591,
    "id": 453877989,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3Nzk4OQ==",
    "diff_hunk": "@@ -1114,4 +1129,71 @@ size_t GetSerializeSizeMany(int nVersion, const T&... t)\n     return sc.size();\n }\n \n+/** Wrapper that overrides thet GetParams() function of a stream. */",
    "path": "src/serialize.h",
    "position": null,
    "original_position": 68,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "2149a5f52835bb4bd33f7b2ec974f91fde4c9f91",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: `s/thet/the/`",
    "created_at": "2020-07-13T19:23:02Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453877989",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453877989"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453877989"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453877989/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1132,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453904401",
    "pull_request_review_id": 447567007,
    "id": 453904401,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkwNDQwMQ==",
    "diff_hunk": "@@ -354,28 +354,43 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+enum class AddrSerialization {\n+    DISK,\n+\n+    // The only time we serialize a CAddress object without nTime is in\n+    // the initial VERSION messages which contain two CAddress records.\n+    // At that point, the serialization version is INIT_PROTO_VERSION.",
    "path": "src/protocol.h",
    "position": null,
    "original_position": 9,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "2149a5f52835bb4bd33f7b2ec974f91fde4c9f91",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Arguably there still is a serialization version, but the link between that and CAddress serialization is purely historical. Removed by incorporating @MarcoFalke's changes below.",
    "created_at": "2020-07-13T20:13:24Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453904401",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453904401"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453904401"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453904401/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 362,
    "side": "RIGHT",
    "in_reply_to_id": 453556220
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453904737",
    "pull_request_review_id": 447567443,
    "id": 453904737,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkwNDczNw==",
    "diff_hunk": "@@ -359,26 +359,32 @@ class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** The disk serialization for CAddress includes a version number.\n+     *  Traditionally the number CLIENT_VERSION was used, but it has since\n+     *  been disentangled from it. */\n+    static constexpr uint32_t DISK_VERSION{210000};\n+\n public:\n     CAddress() : CService{} {};\n     explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n     SERIALIZE_METHODS(CAddress, obj)\n     {\n         SER_READ(obj, obj.nTime = TIME_INIT);\n-        int nVersion = s.GetVersion();\n         if (s.GetType() & SER_DISK) {\n-            READWRITE(nVersion);\n-        }\n-        if ((s.GetType() & SER_DISK) ||\n-            (nVersion != INIT_PROTO_VERSION && !(s.GetType() & SER_GETHASH))) {\n+            uint32_t disk_version = DISK_VERSION;\n+            READWRITE(disk_version);\n+            READWRITE(obj.nTime);\n+        } else if (s.GetType() & SER_NETWORK) {\n             // The only time we serialize a CAddress object without nTime is in\n             // the initial VERSION messages which contain two CAddress records.\n             // At that point, the serialization version is INIT_PROTO_VERSION.\n             // After the version handshake, serialization version is >=\n             // MIN_PEER_PROTO_VERSION and all ADDR messages are serialized with\n             // nTime.\n-            READWRITE(obj.nTime);\n+            if (s.GetVersion() >= INIT_PROTO_VERSION) {\n+                READWRITE(obj.nTime);\n+            }\n         }",
    "path": "src/protocol.h",
    "position": 47,
    "original_position": 36,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "908c6feb3673479579467afab69c42a7f535e39b",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "There was a bug (`>= INIT_PROTO_VERSION` instead of `!= INIT_PROTO_VERSION`), fixed.",
    "created_at": "2020-07-13T20:14:02Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453904737",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453904737"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453904737"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453904737/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 387,
    "original_line": 387,
    "side": "RIGHT",
    "in_reply_to_id": 453789310
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453905123",
    "pull_request_review_id": 447567907,
    "id": 453905123,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkwNTEyMw==",
    "diff_hunk": "@@ -368,23 +380,15 @@ class CAddress : public CService\n     CAddress() : CService{} {};\n     explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n-    SERIALIZE_METHODS(CAddress, obj)\n+    SERIALIZE_METHODS_PARAMS(CAddress, obj, AddrSerialization, fmt)\n     {\n         SER_READ(obj, obj.nTime = TIME_INIT);\n-        if (s.GetType() & SER_DISK) {\n+        if (fmt == AddrSerialization::DISK) {\n             uint32_t disk_version = DISK_VERSION;\n             READWRITE(disk_version);\n             READWRITE(obj.nTime);\n-        } else if (s.GetType() & SER_NETWORK) {\n-            // The only time we serialize a CAddress object without nTime is in\n-            // the initial VERSION messages which contain two CAddress records.\n-            // At that point, the serialization version is INIT_PROTO_VERSION.\n-            // After the version handshake, serialization version is >=\n-            // MIN_PEER_PROTO_VERSION and all ADDR messages are serialized with\n-            // nTime.\n-            if (s.GetVersion() >= INIT_PROTO_VERSION) {\n-                READWRITE(obj.nTime);\n-            }\n+        } else if (fmt == AddrSerialization::NETWORK_WITHTIME) {\n+            READWRITE(obj.nTime);\n         }",
    "path": "src/protocol.h",
    "position": null,
    "original_position": 44,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "2149a5f52835bb4bd33f7b2ec974f91fde4c9f91",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "There was an unrelated bug to the previous one in this commit, with the same effect: `addrFrom` in the VERSION message was parsed with `NETWORK_WITHTIME`.",
    "created_at": "2020-07-13T20:14:45Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453905123",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453905123"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453905123"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453905123/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 386,
    "side": "RIGHT",
    "in_reply_to_id": 453805326
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453905248",
    "pull_request_review_id": 447568043,
    "id": 453905248,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkwNTI0OA==",
    "diff_hunk": "@@ -354,28 +354,43 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+enum class AddrSerialization {\n+    DISK,\n+\n+    // The only time we serialize a CAddress object without nTime is in\n+    // the initial VERSION messages which contain two CAddress records.\n+    // At that point, the serialization version is INIT_PROTO_VERSION.\n+    // After the version handshake, all ADDR messages are serialized with\n+    // nTime.\n+    NETWORK_NOTIME,\n+    NETWORK_WITHTIME",
    "path": "src/protocol.h",
    "position": null,
    "original_position": 13,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "2149a5f52835bb4bd33f7b2ec974f91fde4c9f91",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Included.",
    "created_at": "2020-07-13T20:14:57Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453905248",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453905248"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453905248"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453905248/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 366,
    "side": "RIGHT",
    "in_reply_to_id": 453808173
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453917160",
    "pull_request_review_id": 447582680,
    "id": 453917160,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxNzE2MA==",
    "diff_hunk": "@@ -165,11 +165,10 @@ enum\n };\n \n //! Convert the reference base type to X, without changing constness or reference type.\n-template<typename X> X& ReadWriteAsHelper(X& x) { return x; }\n-template<typename X> const X& ReadWriteAsHelper(const X& x) { return x; }\n+template<typename X> X& AsBase(X& x) { return x; }",
    "path": "src/serialize.h",
    "position": 26,
    "original_position": 6,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "2149a5f52835bb4bd33f7b2ec974f91fde4c9f91",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It needs to maintain constness. During serialization, the object may be `const T`, while during deserialization it cannot be `const`. This function is effectively a static cast, but one that passes through constness.",
    "created_at": "2020-07-13T20:36:45Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453917160",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453917160"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r453917160"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453917160/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 186,
    "original_line": 186,
    "side": "RIGHT",
    "in_reply_to_id": 453872482
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454523459",
    "pull_request_review_id": 448317003,
    "id": 454523459,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUyMzQ1OQ==",
    "diff_hunk": "@@ -1114,4 +1129,71 @@ size_t GetSerializeSizeMany(int nVersion, const T&... t)\n     return sc.size();\n }\n \n+/** Wrapper that overrides thet GetParams() function of a stream. */",
    "path": "src/serialize.h",
    "position": null,
    "original_position": 68,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "2149a5f52835bb4bd33f7b2ec974f91fde4c9f91",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed.",
    "created_at": "2020-07-14T17:30:04Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r454523459",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454523459"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r454523459"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454523459/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1132,
    "side": "RIGHT",
    "in_reply_to_id": 453877989
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454523579",
    "pull_request_review_id": 448317143,
    "id": 454523579,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUyMzU3OQ==",
    "diff_hunk": "@@ -165,11 +165,10 @@ enum\n };\n \n //! Convert the reference base type to X, without changing constness or reference type.\n-template<typename X> X& ReadWriteAsHelper(X& x) { return x; }\n-template<typename X> const X& ReadWriteAsHelper(const X& x) { return x; }\n+template<typename X> X& AsBase(X& x) { return x; }",
    "path": "src/serialize.h",
    "position": 26,
    "original_position": 6,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "2149a5f52835bb4bd33f7b2ec974f91fde4c9f91",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Added more comments to clarify this.",
    "created_at": "2020-07-14T17:30:16Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r454523579",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454523579"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r454523579"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454523579/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 186,
    "original_line": 186,
    "side": "RIGHT",
    "in_reply_to_id": 453872482
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454847580",
    "pull_request_review_id": 448695700,
    "id": 454847580,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg0NzU4MA==",
    "diff_hunk": "@@ -165,11 +165,10 @@ enum\n };\n \n //! Convert the reference base type to X, without changing constness or reference type.\n-template<typename X> X& ReadWriteAsHelper(X& x) { return x; }\n-template<typename X> const X& ReadWriteAsHelper(const X& x) { return x; }\n+template<typename X> X& AsBase(X& x) { return x; }",
    "path": "src/serialize.h",
    "position": 26,
    "original_position": 6,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "2149a5f52835bb4bd33f7b2ec974f91fde4c9f91",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I checked that replacing `s/AsBase/static_cast/` all over the place compiles and the few tests I ran pass.",
    "created_at": "2020-07-15T07:27:44Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r454847580",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454847580"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r454847580"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454847580/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 186,
    "original_line": 186,
    "side": "RIGHT",
    "in_reply_to_id": 453872482
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454942622",
    "pull_request_review_id": 448815397,
    "id": 454942622,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk0MjYyMg==",
    "diff_hunk": "@@ -197,14 +214,43 @@ template<typename X> const X& ReadWriteAsHelper(const X& x) { return x; }\n     template<typename Stream, typename Type, typename Operation> \\\n     static inline void SerializationOps(Type& obj, Stream& s, Operation ser_action) \\\n \n-/**\n- * Implement the Serialize and Unserialize methods by delegating to a single templated\n- * static method that takes the to-be-(de)serialized object as a parameter. This approach\n- * has the advantage that the constness of the object becomes a template parameter, and\n- * thus allows a single implementation that sees the object as const for serializing\n- * and non-const for deserializing, without casts.\n+/** Variant of FORMATTER_METHODS that supports a declared parameter type.\n+ *\n+ * With a formatter has a declared parameter type, it must be invoked directly or",
    "path": "src/serialize.h",
    "position": null,
    "original_position": 46,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "3d3b095434def5f038cdccb2514d00e78ea376ca",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "s/With/When ?",
    "created_at": "2020-07-15T10:11:16Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r454942622",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454942622"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r454942622"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454942622/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 219,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455050442",
    "pull_request_review_id": 448815397,
    "id": 455050442,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA1MDQ0Mg==",
    "diff_hunk": "@@ -354,34 +354,45 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+enum class AddrSerialization {\n+    DISK,\n+    NETWORK_NOTIME,\n+    NETWORK_WITHTIME,\n+};\n+\n /** A CService with information about it as peer */\n class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** The disk serialization for CAddress includes a version number.\n+     *  Traditionally the number CLIENT_VERSION was used, but it has since\n+     *  been disentangled from it. */\n+    static constexpr uint32_t DISK_VERSION{210000};\n+\n public:\n     CAddress() : CService{} {};\n     explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n-    SERIALIZE_METHODS(CAddress, obj)\n+    SERIALIZE_METHODS_PARAMS(CAddress, obj, AddrSerialization, fmt)\n     {\n         SER_READ(obj, obj.nTime = TIME_INIT);",
    "path": "src/protocol.h",
    "position": 28,
    "original_position": 27,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "3d3b095434def5f038cdccb2514d00e78ea376ca",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this line can be removed. `nTime` is already initialized on construction so this is a no-op.",
    "created_at": "2020-07-15T13:27:44Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455050442",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455050442"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455050442"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455050442/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 380,
    "original_line": 380,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455082159",
    "pull_request_review_id": 448815397,
    "id": 455082159,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA4MjE1OQ==",
    "diff_hunk": "@@ -354,34 +354,45 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+enum class AddrSerialization {\n+    DISK,\n+    NETWORK_NOTIME,\n+    NETWORK_WITHTIME,\n+};\n+\n /** A CService with information about it as peer */\n class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** The disk serialization for CAddress includes a version number.\n+     *  Traditionally the number CLIENT_VERSION was used, but it has since\n+     *  been disentangled from it. */\n+    static constexpr uint32_t DISK_VERSION{210000};",
    "path": "src/protocol.h",
    "position": 13,
    "original_position": 18,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "3d3b095434def5f038cdccb2514d00e78ea376ca",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Any reason for this magic number other than blocks-per-epoch? Wouldn't it be better to set this at 0 initially so we have maximum flexibility for this field?",
    "created_at": "2020-07-15T14:11:01Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455082159",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455082159"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455082159"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455082159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 366,
    "original_line": 366,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455088324",
    "pull_request_review_id": 448815397,
    "id": 455088324,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA4ODMyNA==",
    "diff_hunk": "@@ -354,34 +354,45 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+enum class AddrSerialization {\n+    DISK,\n+    NETWORK_NOTIME,\n+    NETWORK_WITHTIME,\n+};\n+\n /** A CService with information about it as peer */\n class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** The disk serialization for CAddress includes a version number.\n+     *  Traditionally the number CLIENT_VERSION was used, but it has since\n+     *  been disentangled from it. */\n+    static constexpr uint32_t DISK_VERSION{210000};\n+\n public:\n     CAddress() : CService{} {};\n     explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n-    SERIALIZE_METHODS(CAddress, obj)\n+    SERIALIZE_METHODS_PARAMS(CAddress, obj, AddrSerialization, fmt)\n     {\n         SER_READ(obj, obj.nTime = TIME_INIT);\n-        int nVersion = s.GetVersion();\n-        if (s.GetType() & SER_DISK) {\n-            READWRITE(nVersion);\n+        switch (fmt) {",
    "path": "src/protocol.h",
    "position": null,
    "original_position": 31,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "3d3b095434def5f038cdccb2514d00e78ea376ca",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I actually preferred this as a series of if/else if blocks. A switch statement seems appropriate when the different cases are disjoint, which might not always be the case here. There could be some future param that adds a field to the end of the serialization, which would need to be included in this switch statement, but would also require an if statement at the end.\r\n\r\nBoth are fine, but making this a switch seems needlessly verbose.",
    "created_at": "2020-07-15T14:19:24Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455088324",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455088324"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455088324"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455088324/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 380,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455147534",
    "pull_request_review_id": 449080441,
    "id": 455147534,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0NzUzNA==",
    "diff_hunk": "@@ -1114,4 +1178,74 @@ size_t GetSerializeSizeMany(int nVersion, const T&... t)\n     return sc.size();\n }\n \n+/** Wrapper that overrides the GetParams() function of a stream. */\n+template<typename Params, typename Stream>\n+class ParamsStream\n+{\n+    const Params& m_params;\n+    Stream& m_substream;\n+public:\n+    ParamsStream(const Params& params, Stream& substream) : m_params(params), m_substream(substream) {}\n+    template<typename U> inline ParamsStream& operator<<(const U& obj) { ::Serialize(*this, obj); return *this; }\n+    template<typename U> inline ParamsStream& operator>>(U&& obj) { ::Unserialize(*this, obj); return *this; }\n+    inline void write(const char* ptr, size_t size) { m_substream.write(ptr, size); }\n+    inline void read(char* ptr, size_t size) { m_substream.read(ptr, size); }\n+    inline size_t size() const { return m_substream.size(); }\n+    inline const Params& GetParams() { return m_params; }\n+    inline int GetVersion() const { return m_substream.GetVersion(); }\n+    inline int GetType() const { return m_substream.GetType(); }\n+    inline Stream& GetSubStream() const { return m_substream; }\n+};\n+\n+/** Wrapper that serializes objects with the specified parameters. */\n+template<typename Params, typename T>\n+class ParamsWrapper\n+{\n+    static_assert(std::is_lvalue_reference<T>::value, \"ParamsWrapper needs an lvalue reference type T\");\n+    const Params& m_params;\n+    T m_object;\n+\n+public:\n+    explicit ParamsWrapper(const Params& params, T obj) : m_params(params), m_object(obj) {}\n+\n+    //! Serialize to another ParamsStream: optimize by skipping it.",
    "path": "src/serialize.h",
    "position": 152,
    "original_position": 148,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "3d3b095434def5f038cdccb2514d00e78ea376ca",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This may be because I don't have a good understanding of serialize.h in general so perhaps you can just ignore this, but I don't understand what's being skipped here.",
    "created_at": "2020-07-15T15:38:16Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455147534",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455147534"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455147534"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455147534/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1215,
    "original_line": 1215,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455151430",
    "pull_request_review_id": 449085264,
    "id": 455151430,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1MTQzMA==",
    "diff_hunk": "@@ -354,34 +354,45 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+enum class AddrSerialization {\n+    DISK,\n+    NETWORK_NOTIME,\n+    NETWORK_WITHTIME,\n+};\n+\n /** A CService with information about it as peer */\n class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** The disk serialization for CAddress includes a version number.\n+     *  Traditionally the number CLIENT_VERSION was used, but it has since\n+     *  been disentangled from it. */\n+    static constexpr uint32_t DISK_VERSION{210000};\n+\n public:\n     CAddress() : CService{} {};\n     explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n-    SERIALIZE_METHODS(CAddress, obj)\n+    SERIALIZE_METHODS_PARAMS(CAddress, obj, AddrSerialization, fmt)\n     {\n         SER_READ(obj, obj.nTime = TIME_INIT);\n-        int nVersion = s.GetVersion();\n-        if (s.GetType() & SER_DISK) {\n-            READWRITE(nVersion);\n+        switch (fmt) {\n+        case AddrSerialization::DISK: {\n+            uint32_t disk_version = DISK_VERSION;\n+            READWRITE(disk_version);\n+            READWRITE(obj.nTime);\n+            break;\n         }\n-        if ((s.GetType() & SER_DISK) ||\n-            (nVersion != INIT_PROTO_VERSION && !(s.GetType() & SER_GETHASH))) {\n+        case AddrSerialization::NETWORK_WITHTIME:\n+            READWRITE(obj.nTime);\n+            break;\n+        case AddrSerialization::NETWORK_NOTIME:\n             // The only time we serialize a CAddress object without nTime is in",
    "path": "src/protocol.h",
    "position": null,
    "original_position": 44,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "3d3b095434def5f038cdccb2514d00e78ea376ca",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thinking about it a bit more, I actually think this whole comment can be removed. It made sense when the serialization was based on a protocol version that we don't support anywhere else (and was added to document something that caused confusion for reviewers: https://github.com/bitcoin/bitcoin/pull/14033#issuecomment-652456443), but when the serialization is based on a parameter that we pass in explicitly, it's easy enough to grep for that parameter to see where it's used.",
    "created_at": "2020-07-15T15:44:22Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455151430",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455151430"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455151430"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455151430/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 391,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455177400",
    "pull_request_review_id": 449118222,
    "id": 455177400,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE3NzQwMA==",
    "diff_hunk": "@@ -165,11 +165,10 @@ enum\n };\n \n //! Convert the reference base type to X, without changing constness or reference type.\n-template<typename X> X& ReadWriteAsHelper(X& x) { return x; }\n-template<typename X> const X& ReadWriteAsHelper(const X& x) { return x; }\n+template<typename X> X& AsBase(X& x) { return x; }",
    "path": "src/serialize.h",
    "position": 26,
    "original_position": 6,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "2149a5f52835bb4bd33f7b2ec974f91fde4c9f91",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, that's expected - but it may lead to UB. `static_cast` may cast away the constness of a reference, in a place where it is illegal to do so. So `AsBase` is just a more restrictive, safer, version of `static_cast`.",
    "created_at": "2020-07-15T16:28:05Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455177400",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455177400"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455177400"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455177400/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 186,
    "original_line": 186,
    "side": "RIGHT",
    "in_reply_to_id": 453872482
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455185404",
    "pull_request_review_id": 449128105,
    "id": 455185404,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4NTQwNA==",
    "diff_hunk": "@@ -354,34 +354,45 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+enum class AddrSerialization {\n+    DISK,\n+    NETWORK_NOTIME,\n+    NETWORK_WITHTIME,\n+};\n+\n /** A CService with information about it as peer */\n class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** The disk serialization for CAddress includes a version number.\n+     *  Traditionally the number CLIENT_VERSION was used, but it has since\n+     *  been disentangled from it. */\n+    static constexpr uint32_t DISK_VERSION{210000};\n+\n public:\n     CAddress() : CService{} {};\n     explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n-    SERIALIZE_METHODS(CAddress, obj)\n+    SERIALIZE_METHODS_PARAMS(CAddress, obj, AddrSerialization, fmt)\n     {\n         SER_READ(obj, obj.nTime = TIME_INIT);",
    "path": "src/protocol.h",
    "position": 28,
    "original_position": 27,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "3d3b095434def5f038cdccb2514d00e78ea376ca",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This has been added here on purpose: https://github.com/bitcoin/bitcoin/pull/19020#discussion_r427620111",
    "created_at": "2020-07-15T16:41:05Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455185404",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455185404"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455185404"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455185404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 380,
    "original_line": 380,
    "side": "RIGHT",
    "in_reply_to_id": 455050442
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455186066",
    "pull_request_review_id": 449128937,
    "id": 455186066,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4NjA2Ng==",
    "diff_hunk": "@@ -354,34 +354,45 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+enum class AddrSerialization {\n+    DISK,\n+    NETWORK_NOTIME,\n+    NETWORK_WITHTIME,\n+};\n+\n /** A CService with information about it as peer */\n class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** The disk serialization for CAddress includes a version number.\n+     *  Traditionally the number CLIENT_VERSION was used, but it has since\n+     *  been disentangled from it. */\n+    static constexpr uint32_t DISK_VERSION{210000};",
    "path": "src/protocol.h",
    "position": 13,
    "original_position": 18,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "3d3b095434def5f038cdccb2514d00e78ea376ca",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It is the CLIENT_VERSION of the next major release. The number should be equal to or greater than the largest CLIENT_VERSION of any previously released version.",
    "created_at": "2020-07-15T16:42:11Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455186066",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455186066"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455186066"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455186066/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 366,
    "original_line": 366,
    "side": "RIGHT",
    "in_reply_to_id": 455082159
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455189108",
    "pull_request_review_id": 449132686,
    "id": 455189108,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4OTEwOA==",
    "diff_hunk": "@@ -1114,4 +1178,74 @@ size_t GetSerializeSizeMany(int nVersion, const T&... t)\n     return sc.size();\n }\n \n+/** Wrapper that overrides the GetParams() function of a stream. */\n+template<typename Params, typename Stream>\n+class ParamsStream\n+{\n+    const Params& m_params;\n+    Stream& m_substream;\n+public:\n+    ParamsStream(const Params& params, Stream& substream) : m_params(params), m_substream(substream) {}\n+    template<typename U> inline ParamsStream& operator<<(const U& obj) { ::Serialize(*this, obj); return *this; }\n+    template<typename U> inline ParamsStream& operator>>(U&& obj) { ::Unserialize(*this, obj); return *this; }\n+    inline void write(const char* ptr, size_t size) { m_substream.write(ptr, size); }\n+    inline void read(char* ptr, size_t size) { m_substream.read(ptr, size); }\n+    inline size_t size() const { return m_substream.size(); }\n+    inline const Params& GetParams() { return m_params; }\n+    inline int GetVersion() const { return m_substream.GetVersion(); }\n+    inline int GetType() const { return m_substream.GetType(); }\n+    inline Stream& GetSubStream() const { return m_substream; }\n+};\n+\n+/** Wrapper that serializes objects with the specified parameters. */\n+template<typename Params, typename T>\n+class ParamsWrapper\n+{\n+    static_assert(std::is_lvalue_reference<T>::value, \"ParamsWrapper needs an lvalue reference type T\");\n+    const Params& m_params;\n+    T m_object;\n+\n+public:\n+    explicit ParamsWrapper(const Params& params, T obj) : m_params(params), m_object(obj) {}\n+\n+    //! Serialize to another ParamsStream: optimize by skipping it.",
    "path": "src/serialize.h",
    "position": 152,
    "original_position": 148,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "3d3b095434def5f038cdccb2514d00e78ea376ca",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's an attempt at avoiding crazy template expansion in the compiler when multiple levels of serializers each use `WithParams` (the Stream object that would hit the bottom would be ParamsStream<ParamsInner, ParamsStream<ParamsMid, ParamsStream<ParamsOuter, BaseStream>>>, and all its methods need instantiating). This optimization will just result in `ParamsStream<ParamsInner, BaseStream>`.",
    "created_at": "2020-07-15T16:47:00Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455189108",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455189108"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455189108"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455189108/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1215,
    "original_line": 1215,
    "side": "RIGHT",
    "in_reply_to_id": 455147534
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455240534",
    "pull_request_review_id": 449204456,
    "id": 455240534,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI0MDUzNA==",
    "diff_hunk": "@@ -1249,3 +1249,4 @@ template<typename Params, typename T>\n static inline ParamsWrapper<Params, T&> WithParams(const Params& params, T&& t) { return ParamsWrapper<Params, T&>(params, t); }\n \n #endif // BITCOIN_SERIALIZE_H\n+",
    "path": "src/serialize.h",
    "position": null,
    "original_position": 4,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "f69c79636ed14dce6fa9ebbc07f4cd3710d9eb22",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can be removed now",
    "created_at": "2020-07-15T18:02:36Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455240534",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455240534"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455240534"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455240534/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1252,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455446617",
    "pull_request_review_id": 449436159,
    "id": 455446617,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ0NjYxNw==",
    "diff_hunk": "@@ -1249,3 +1249,4 @@ template<typename Params, typename T>\n static inline ParamsWrapper<Params, T&> WithParams(const Params& params, T&& t) { return ParamsWrapper<Params, T&>(params, t); }\n \n #endif // BITCOIN_SERIALIZE_H\n+",
    "path": "src/serialize.h",
    "position": null,
    "original_position": 4,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "f69c79636ed14dce6fa9ebbc07f4cd3710d9eb22",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2020-07-16T00:51:42Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455446617",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455446617"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455446617"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455446617/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1252,
    "side": "RIGHT",
    "in_reply_to_id": 455240534
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455777851",
    "pull_request_review_id": 449836849,
    "id": 455777851,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc3Nzg1MQ==",
    "diff_hunk": "@@ -197,14 +214,43 @@ template<typename X> const X& ReadWriteAsHelper(const X& x) { return x; }\n     template<typename Stream, typename Type, typename Operation> \\\n     static inline void SerializationOps(Type& obj, Stream& s, Operation ser_action) \\\n \n-/**\n- * Implement the Serialize and Unserialize methods by delegating to a single templated\n- * static method that takes the to-be-(de)serialized object as a parameter. This approach\n- * has the advantage that the constness of the object becomes a template parameter, and\n- * thus allows a single implementation that sees the object as const for serializing\n- * and non-const for deserializing, without casts.\n+/** Variant of FORMATTER_METHODS that supports a declared parameter type.\n+ *\n+ * With a formatter has a declared parameter type, it must be invoked directly or\n+ * indirectly with a parameter of that type. This permits making serialization\n+ * depend on run-time context in a type-safe way.\n+ *\n+ * Example use:\n+ *   struct BarParameter { bool fancy; ... };\n+ *   struct Bar { ... };\n+ *   struct FooFormatter {\n+ *     FORMATTER_METHODS(Bar, obj, BarParameter, param) {\n+ *       if (param.fancy) {\n+ *         READWRITE(VARINT(obj.value));\n+ *       } else {\n+ *         READWRITE(obj.value);\n+ *       }\n+ *     }\n+ *   };\n+ * which would then be invoked as\n+ *   READWRITE(WithParams(BarParameter{...}, Using<FooFormatter>(obj.foo)))\n+ *\n+ * Note that WithParams(parameter, obj) can be invoked anywhere in the call\n+ * stack; it is passed down recursively into all serialization code, until\n+ * another WithParams overrides it.\n+ *\n+ * Compilation will fail in any context where serialization is invoke but",
    "path": "src/serialize.h",
    "position": null,
    "original_position": 69,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "fdf66d3258972dd7c46c5a5ca6cfd00c61808015",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`s/is invoke/is invoked/`",
    "created_at": "2020-07-16T13:17:44Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455777851",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455777851"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455777851"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455777851/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 242,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455788599",
    "pull_request_review_id": 449836849,
    "id": 455788599,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc4ODU5OQ==",
    "diff_hunk": "@@ -477,7 +477,7 @@ static void PushNodeVersion(CNode& pnode, CConnman* connman, int64_t nTime)\n     CAddress addrYou = (addr.IsRoutable() && !IsProxy(addr) ? addr : CAddress(CService(), addr.nServices));\n     CAddress addrMe = CAddress(CService(), nLocalNodeServices);\n \n-    connman->PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, (uint64_t)nLocalNodeServices, nTime, addrYou, addrMe,\n+    connman->PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, (uint64_t)nLocalNodeServices, nTime, WithParams(AddrSerialization::NETWORK_NOTIME, addrYou), WithParams(AddrSerialization::NETWORK_NOTIME, addrMe),",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "fdf66d3258972dd7c46c5a5ca6cfd00c61808015",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: this line is 257 columns and then it continues on the next line for another 103 columns. Could it be made more readable somehow?\r\n\r\nIt does not need to pass `INIT_PROTO_VERSION` anymore to skip serializing the time, but I guess it cannot be simplified.",
    "created_at": "2020-07-16T13:33:01Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455788599",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455788599"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455788599"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455788599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 480,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455904073",
    "pull_request_review_id": 450001571,
    "id": 455904073,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkwNDA3Mw==",
    "diff_hunk": "@@ -354,34 +354,45 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+enum class AddrSerialization {\n+    DISK,\n+    NETWORK_NOTIME,\n+    NETWORK_WITHTIME,\n+};\n+\n /** A CService with information about it as peer */\n class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** The disk serialization for CAddress includes a version number.\n+     *  Traditionally the number CLIENT_VERSION was used, but it has since\n+     *  been disentangled from it. */\n+    static constexpr uint32_t DISK_VERSION{210000};\n+\n public:\n     CAddress() : CService{} {};\n     explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n-    SERIALIZE_METHODS(CAddress, obj)\n+    SERIALIZE_METHODS_PARAMS(CAddress, obj, AddrSerialization, fmt)\n     {\n         SER_READ(obj, obj.nTime = TIME_INIT);",
    "path": "src/protocol.h",
    "position": 28,
    "original_position": 27,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "3d3b095434def5f038cdccb2514d00e78ea376ca",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The linked comment doesn't make much sense to me. There are plenty of examples where member fields aren't [de]serialized, eg:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/0f6900e780afb9c176cf7d1da4a1fc0ca6c9118a/src/addrman.h#L48-L55\r\nhttps://github.com/bitcoin/bitcoin/blob/0f6900e780afb9c176cf7d1da4a1fc0ca6c9118a/src/primitives/block.h#L68-L69\r\nhttps://github.com/bitcoin/bitcoin/blob/0f6900e780afb9c176cf7d1da4a1fc0ca6c9118a/src/wallet/walletutil.h#L99\r\n\r\nor only [de]serialized conditionally:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/0f6900e780afb9c176cf7d1da4a1fc0ca6c9118a/src/wallet/walletdb.h#L106-L108",
    "created_at": "2020-07-16T16:10:43Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455904073",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455904073"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455904073"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455904073/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 380,
    "original_line": 380,
    "side": "RIGHT",
    "in_reply_to_id": 455050442
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455975870",
    "pull_request_review_id": 449836849,
    "id": 455975870,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk3NTg3MA==",
    "diff_hunk": "@@ -354,34 +354,45 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+enum class AddrSerialization {",
    "path": "src/protocol.h",
    "position": null,
    "original_position": 4,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "fdf66d3258972dd7c46c5a5ca6cfd00c61808015",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, feel free to ignore: since this is also used in **un**serialization, the name could be misleading. `AddrFormat`?",
    "created_at": "2020-07-16T18:07:25Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455975870",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455975870"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455975870"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455975870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 357,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455989882",
    "pull_request_review_id": 450108898,
    "id": 455989882,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk4OTg4Mg==",
    "diff_hunk": "@@ -354,34 +354,45 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+enum class AddrSerialization {\n+    DISK,\n+    NETWORK_NOTIME,\n+    NETWORK_WITHTIME,\n+};\n+\n /** A CService with information about it as peer */\n class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** The disk serialization for CAddress includes a version number.\n+     *  Traditionally the number CLIENT_VERSION was used, but it has since\n+     *  been disentangled from it. */\n+    static constexpr uint32_t DISK_VERSION{210000};\n+\n public:\n     CAddress() : CService{} {};\n     explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n-    SERIALIZE_METHODS(CAddress, obj)\n+    SERIALIZE_METHODS_PARAMS(CAddress, obj, AddrSerialization, fmt)\n     {\n         SER_READ(obj, obj.nTime = TIME_INIT);",
    "path": "src/protocol.h",
    "position": 28,
    "original_position": 27,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "3d3b095434def5f038cdccb2514d00e78ea376ca",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could it happen that we unserialize into the same object twice? E.g.\r\n```\r\ns >> addr;\r\n... do something with addr, possibly change nTime ...\r\ns >> addr;\r\n// if we don't explicitly set nTime during unserialization,\r\n// then here we may end up with some leftover nTime?\r\n```",
    "created_at": "2020-07-16T18:31:10Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455989882",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455989882"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455989882"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455989882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 380,
    "original_line": 380,
    "side": "RIGHT",
    "in_reply_to_id": 455050442
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455991781",
    "pull_request_review_id": 450111213,
    "id": 455991781,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5MTc4MQ==",
    "diff_hunk": "@@ -354,34 +354,45 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+enum class AddrSerialization {\n+    DISK,\n+    NETWORK_NOTIME,\n+    NETWORK_WITHTIME,\n+};\n+\n /** A CService with information about it as peer */\n class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** The disk serialization for CAddress includes a version number.\n+     *  Traditionally the number CLIENT_VERSION was used, but it has since\n+     *  been disentangled from it. */\n+    static constexpr uint32_t DISK_VERSION{210000};\n+\n public:\n     CAddress() : CService{} {};\n     explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n-    SERIALIZE_METHODS(CAddress, obj)\n+    SERIALIZE_METHODS_PARAMS(CAddress, obj, AddrSerialization, fmt)\n     {\n         SER_READ(obj, obj.nTime = TIME_INIT);",
    "path": "src/protocol.h",
    "position": 28,
    "original_position": 27,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "3d3b095434def5f038cdccb2514d00e78ea376ca",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, that's the reason to prefer fully initializing all fields when deserializing (or at least, all fields that are subject to serialization in the first place).",
    "created_at": "2020-07-16T18:34:29Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455991781",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455991781"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r455991781"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/455991781/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 380,
    "original_line": 380,
    "side": "RIGHT",
    "in_reply_to_id": 455050442
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456124358",
    "pull_request_review_id": 450271411,
    "id": 456124358,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEyNDM1OA==",
    "diff_hunk": "@@ -354,34 +354,45 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+enum class AddrSerialization {\n+    DISK,\n+    NETWORK_NOTIME,\n+    NETWORK_WITHTIME,\n+};\n+\n /** A CService with information about it as peer */\n class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** The disk serialization for CAddress includes a version number.\n+     *  Traditionally the number CLIENT_VERSION was used, but it has since\n+     *  been disentangled from it. */\n+    static constexpr uint32_t DISK_VERSION{210000};\n+\n public:\n     CAddress() : CService{} {};\n     explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n-    SERIALIZE_METHODS(CAddress, obj)\n+    SERIALIZE_METHODS_PARAMS(CAddress, obj, AddrSerialization, fmt)\n     {\n         SER_READ(obj, obj.nTime = TIME_INIT);",
    "path": "src/protocol.h",
    "position": 28,
    "original_position": 27,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "3d3b095434def5f038cdccb2514d00e78ea376ca",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@jnewbery I think in general we should aim to support deserializing into an already existing (and not just default-initialized) objects, as it's hard to enforce the opposite.\r\n\r\n`CAddrInfo` is a bit of a special case, as its memory-only fields are \"managed\" by CAddrMan more than being a standalone object. In the other cases, I think it makes sense to make deserialization reset those fields.",
    "created_at": "2020-07-16T22:59:50Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r456124358",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456124358"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r456124358"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456124358/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 380,
    "original_line": 380,
    "side": "RIGHT",
    "in_reply_to_id": 455050442
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456130818",
    "pull_request_review_id": 450278877,
    "id": 456130818,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzMDgxOA==",
    "diff_hunk": "@@ -354,34 +354,45 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+enum class AddrSerialization {",
    "path": "src/protocol.h",
    "position": null,
    "original_position": 4,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "fdf66d3258972dd7c46c5a5ca6cfd00c61808015",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I've changed it to `CAddress::Format`.",
    "created_at": "2020-07-16T23:20:24Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r456130818",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456130818"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r456130818"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456130818/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 357,
    "side": "RIGHT",
    "in_reply_to_id": 455975870
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456131065",
    "pull_request_review_id": 450279161,
    "id": 456131065,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzMTA2NQ==",
    "diff_hunk": "@@ -477,7 +477,7 @@ static void PushNodeVersion(CNode& pnode, CConnman* connman, int64_t nTime)\n     CAddress addrYou = (addr.IsRoutable() && !IsProxy(addr) ? addr : CAddress(CService(), addr.nServices));\n     CAddress addrMe = CAddress(CService(), nLocalNodeServices);\n \n-    connman->PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, (uint64_t)nLocalNodeServices, nTime, addrYou, addrMe,\n+    connman->PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, (uint64_t)nLocalNodeServices, nTime, WithParams(AddrSerialization::NETWORK_NOTIME, addrYou), WithParams(AddrSerialization::NETWORK_NOTIME, addrMe),",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "fdf66d3258972dd7c46c5a5ca6cfd00c61808015",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah, it was ridiculously long. I've split it up.\r\n\r\nIndeed, `INIT_PROTO_VERSION` is no longer needed here, but I think it's better to just get rid of all of these version numbers once everything has been updated to not using them anymore.",
    "created_at": "2020-07-16T23:21:16Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r456131065",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456131065"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r456131065"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456131065/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 480,
    "side": "RIGHT",
    "in_reply_to_id": 455788599
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456131095",
    "pull_request_review_id": 450279198,
    "id": 456131095,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzMTA5NQ==",
    "diff_hunk": "@@ -197,14 +214,43 @@ template<typename X> const X& ReadWriteAsHelper(const X& x) { return x; }\n     template<typename Stream, typename Type, typename Operation> \\\n     static inline void SerializationOps(Type& obj, Stream& s, Operation ser_action) \\\n \n-/**\n- * Implement the Serialize and Unserialize methods by delegating to a single templated\n- * static method that takes the to-be-(de)serialized object as a parameter. This approach\n- * has the advantage that the constness of the object becomes a template parameter, and\n- * thus allows a single implementation that sees the object as const for serializing\n- * and non-const for deserializing, without casts.\n+/** Variant of FORMATTER_METHODS that supports a declared parameter type.\n+ *\n+ * With a formatter has a declared parameter type, it must be invoked directly or\n+ * indirectly with a parameter of that type. This permits making serialization\n+ * depend on run-time context in a type-safe way.\n+ *\n+ * Example use:\n+ *   struct BarParameter { bool fancy; ... };\n+ *   struct Bar { ... };\n+ *   struct FooFormatter {\n+ *     FORMATTER_METHODS(Bar, obj, BarParameter, param) {\n+ *       if (param.fancy) {\n+ *         READWRITE(VARINT(obj.value));\n+ *       } else {\n+ *         READWRITE(obj.value);\n+ *       }\n+ *     }\n+ *   };\n+ * which would then be invoked as\n+ *   READWRITE(WithParams(BarParameter{...}, Using<FooFormatter>(obj.foo)))\n+ *\n+ * Note that WithParams(parameter, obj) can be invoked anywhere in the call\n+ * stack; it is passed down recursively into all serialization code, until\n+ * another WithParams overrides it.\n+ *\n+ * Compilation will fail in any context where serialization is invoke but",
    "path": "src/serialize.h",
    "position": null,
    "original_position": 69,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "fdf66d3258972dd7c46c5a5ca6cfd00c61808015",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2020-07-16T23:21:25Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r456131095",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456131095"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r456131095"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456131095/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 242,
    "side": "RIGHT",
    "in_reply_to_id": 455777851
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456132586",
    "pull_request_review_id": 450280781,
    "id": 456132586,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzMjU4Ng==",
    "diff_hunk": "@@ -354,34 +354,45 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+enum class AddrSerialization {\n+    DISK,\n+    NETWORK_NOTIME,\n+    NETWORK_WITHTIME,\n+};\n+\n /** A CService with information about it as peer */\n class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** The disk serialization for CAddress includes a version number.\n+     *  Traditionally the number CLIENT_VERSION was used, but it has since\n+     *  been disentangled from it. */\n+    static constexpr uint32_t DISK_VERSION{210000};\n+\n public:\n     CAddress() : CService{} {};\n     explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n-    SERIALIZE_METHODS(CAddress, obj)\n+    SERIALIZE_METHODS_PARAMS(CAddress, obj, AddrSerialization, fmt)\n     {\n         SER_READ(obj, obj.nTime = TIME_INIT);\n-        int nVersion = s.GetVersion();\n-        if (s.GetType() & SER_DISK) {\n-            READWRITE(nVersion);\n+        switch (fmt) {\n+        case AddrSerialization::DISK: {\n+            uint32_t disk_version = DISK_VERSION;\n+            READWRITE(disk_version);\n+            READWRITE(obj.nTime);\n+            break;\n         }\n-        if ((s.GetType() & SER_DISK) ||\n-            (nVersion != INIT_PROTO_VERSION && !(s.GetType() & SER_GETHASH))) {\n+        case AddrSerialization::NETWORK_WITHTIME:\n+            READWRITE(obj.nTime);\n+            break;\n+        case AddrSerialization::NETWORK_NOTIME:\n             // The only time we serialize a CAddress object without nTime is in",
    "path": "src/protocol.h",
    "position": null,
    "original_position": 44,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "3d3b095434def5f038cdccb2514d00e78ea376ca",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2020-07-16T23:25:57Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r456132586",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456132586"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r456132586"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456132586/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 391,
    "side": "RIGHT",
    "in_reply_to_id": 455151430
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456132770",
    "pull_request_review_id": 450280959,
    "id": 456132770,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzMjc3MA==",
    "diff_hunk": "@@ -354,34 +354,45 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+enum class AddrSerialization {\n+    DISK,\n+    NETWORK_NOTIME,\n+    NETWORK_WITHTIME,\n+};\n+\n /** A CService with information about it as peer */\n class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** The disk serialization for CAddress includes a version number.\n+     *  Traditionally the number CLIENT_VERSION was used, but it has since\n+     *  been disentangled from it. */\n+    static constexpr uint32_t DISK_VERSION{210000};\n+\n public:\n     CAddress() : CService{} {};\n     explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n-    SERIALIZE_METHODS(CAddress, obj)\n+    SERIALIZE_METHODS_PARAMS(CAddress, obj, AddrSerialization, fmt)\n     {\n         SER_READ(obj, obj.nTime = TIME_INIT);\n-        int nVersion = s.GetVersion();\n-        if (s.GetType() & SER_DISK) {\n-            READWRITE(nVersion);\n+        switch (fmt) {",
    "path": "src/protocol.h",
    "position": null,
    "original_position": 31,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "3d3b095434def5f038cdccb2514d00e78ea376ca",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I agree. I've reverted it to the if/then/else style.",
    "created_at": "2020-07-16T23:26:26Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r456132770",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456132770"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r456132770"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456132770/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 380,
    "side": "RIGHT",
    "in_reply_to_id": 455088324
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456132927",
    "pull_request_review_id": 450281135,
    "id": 456132927,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzMjkyNw==",
    "diff_hunk": "@@ -197,14 +214,43 @@ template<typename X> const X& ReadWriteAsHelper(const X& x) { return x; }\n     template<typename Stream, typename Type, typename Operation> \\\n     static inline void SerializationOps(Type& obj, Stream& s, Operation ser_action) \\\n \n-/**\n- * Implement the Serialize and Unserialize methods by delegating to a single templated\n- * static method that takes the to-be-(de)serialized object as a parameter. This approach\n- * has the advantage that the constness of the object becomes a template parameter, and\n- * thus allows a single implementation that sees the object as const for serializing\n- * and non-const for deserializing, without casts.\n+/** Variant of FORMATTER_METHODS that supports a declared parameter type.\n+ *\n+ * With a formatter has a declared parameter type, it must be invoked directly or",
    "path": "src/serialize.h",
    "position": null,
    "original_position": 46,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "3d3b095434def5f038cdccb2514d00e78ea376ca",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "\"If\" is even better, I think? Done.",
    "created_at": "2020-07-16T23:26:53Z",
    "updated_at": "2020-07-17T00:16:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r456132927",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456132927"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r456132927"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456132927/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 219,
    "side": "RIGHT",
    "in_reply_to_id": 454942622
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456305810",
    "pull_request_review_id": 450479752,
    "id": 456305810,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwNTgxMA==",
    "diff_hunk": "@@ -354,34 +354,45 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+enum class AddrSerialization {\n+    DISK,\n+    NETWORK_NOTIME,\n+    NETWORK_WITHTIME,\n+};\n+\n /** A CService with information about it as peer */\n class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** The disk serialization for CAddress includes a version number.\n+     *  Traditionally the number CLIENT_VERSION was used, but it has since\n+     *  been disentangled from it. */\n+    static constexpr uint32_t DISK_VERSION{210000};\n+\n public:\n     CAddress() : CService{} {};\n     explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n-    SERIALIZE_METHODS(CAddress, obj)\n+    SERIALIZE_METHODS_PARAMS(CAddress, obj, AddrSerialization, fmt)\n     {\n         SER_READ(obj, obj.nTime = TIME_INIT);",
    "path": "src/protocol.h",
    "position": 28,
    "original_position": 27,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "3d3b095434def5f038cdccb2514d00e78ea376ca",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks for the additional background. My immediate reaction is that it seems dangerous to re-deserialize into an existing object and that it could lead to subtle, confusing bugs. However, we've definitely wondered off-topic for this PR, so I'm going to mark this conversation as resolved. If the expectation really is that the deserialization methods overwrite all fields, a future PR could update the documentation for `SERIALIZE_METHODS` to explicitly state that.",
    "created_at": "2020-07-17T08:42:57Z",
    "updated_at": "2020-07-17T08:42:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r456305810",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456305810"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r456305810"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456305810/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 380,
    "original_line": 380,
    "side": "RIGHT",
    "in_reply_to_id": 455050442
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459123691",
    "pull_request_review_id": 453733691,
    "id": 459123691,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTEyMzY5MQ==",
    "diff_hunk": "@@ -354,34 +354,45 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+enum class AddrSerialization {\n+    DISK,\n+    NETWORK_NOTIME,\n+    NETWORK_WITHTIME,\n+};\n+\n /** A CService with information about it as peer */\n class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** The disk serialization for CAddress includes a version number.\n+     *  Traditionally the number CLIENT_VERSION was used, but it has since\n+     *  been disentangled from it. */\n+    static constexpr uint32_t DISK_VERSION{210000};\n+\n public:\n     CAddress() : CService{} {};\n     explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n-    SERIALIZE_METHODS(CAddress, obj)\n+    SERIALIZE_METHODS_PARAMS(CAddress, obj, AddrSerialization, fmt)\n     {\n         SER_READ(obj, obj.nTime = TIME_INIT);",
    "path": "src/protocol.h",
    "position": 28,
    "original_position": 27,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "3d3b095434def5f038cdccb2514d00e78ea376ca",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/19503#discussion_r456305810\r\n\r\n> Thanks for the additional background. My immediate reaction is that it seems dangerous to re-deserialize into an existing object and that it could lead to subtle, confusing bugs.\r\n\r\nFWIW, this is my opinion too. I think it would be nice to figure out some SERIALIZE_METHODS alternative for new code that adds a serialize method and a `deserialize_type` constructor, instead of serialize and unserialize methods.",
    "created_at": "2020-07-22T22:40:06Z",
    "updated_at": "2020-07-22T23:04:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r459123691",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459123691"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r459123691"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459123691/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 380,
    "original_line": 380,
    "side": "RIGHT",
    "in_reply_to_id": 455050442
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459131462",
    "pull_request_review_id": 453733691,
    "id": 459131462,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTEzMTQ2Mg==",
    "diff_hunk": "@@ -376,4 +377,175 @@ BOOST_AUTO_TEST_CASE(class_methods)\n     BOOST_CHECK(methodtest3 == methodtest4);\n }\n \n+enum class BaseFormat {\n+    DEC,\n+    HEX,\n+};\n+\n+/// (Un)serialize a number as a string either from/to decimal or hexadecimal.\n+class Base\n+{\n+public:\n+    uint8_t m_base_data;\n+\n+    Base() : m_base_data(17) {}\n+    explicit Base(uint8_t data) : m_base_data(data) {}\n+\n+#if 0 // the following two are equivalent\n+    SERIALIZE_METHODS_PARAMS(Base, obj, BaseFormat, fmt)\n+    {\n+        if (ser_action.ForRead()) {\n+            std::string str;\n+            s >> str;\n+            assert(str.size() == 2 || (fmt == BaseFormat::DEC && str.size() == 3));\n+            uint32_t data;\n+            bool ok;\n+            if (fmt == BaseFormat::DEC) {\n+                ok = ParseUint32(str, &data);",
    "path": "src/test/serialize_tests.cpp",
    "position": 36,
    "original_position": 36,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"test: add tests that exercise WithParams()\" (483ed457411d164ad71115dbfe1d2b4ff8b2e5f3)\r\n\r\nThink this needs to capitalize Int: `ParseUInt32`",
    "created_at": "2020-07-22T23:02:12Z",
    "updated_at": "2020-07-22T23:04:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r459131462",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459131462"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r459131462"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459131462/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 404,
    "original_line": 404,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478526343",
    "pull_request_review_id": 476863744,
    "id": 478526343,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODUyNjM0Mw==",
    "diff_hunk": "@@ -354,34 +354,38 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n     return (services & NODE_NETWORK) || (services & NODE_NETWORK_LIMITED);\n }\n \n+\n /** A CService with information about it as peer */\n class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** The disk serialization for CAddress includes a version number.\n+     *  Traditionally the number CLIENT_VERSION was used, but it has since\n+     *  been disentangled from it. */\n+    static constexpr uint32_t DISK_VERSION{210000};\n+\n public:\n     CAddress() : CService{} {};\n     explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n-    SERIALIZE_METHODS(CAddress, obj)\n+    enum class Format {\n+        DISK,\n+        NETWORK_NOTIME,\n+        NETWORK_WITHTIME,\n+    };\n+\n+    SERIALIZE_METHODS_PARAMS(CAddress, obj, Format, fmt)\n     {\n         SER_READ(obj, obj.nTime = TIME_INIT);\n-        int nVersion = s.GetVersion();",
    "path": "src/protocol.h",
    "position": 29,
    "original_position": 29,
    "commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "original_commit_id": "483ed457411d164ad71115dbfe1d2b4ff8b2e5f3",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "One include can now be removed, see https://github.com/bitcoin/bitcoin/pull/19503#issuecomment-668585730",
    "created_at": "2020-08-27T15:57:21Z",
    "updated_at": "2020-08-27T15:58:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r478526343",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478526343"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19503#discussion_r478526343"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19503"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478526343/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 369,
    "original_line": 369,
    "side": "LEFT"
  }
]