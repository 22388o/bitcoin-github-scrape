DrahtBot,2019-12-16 15:31:20,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17602](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17602.html) (net: Limit # of IPs learned from a DNS seed",https://github.com/bitcoin/bitcoin/pull/17754#issuecomment-566110765,566110765,
elichai,2019-12-16 17:14:35,"Concept ACK. It's best to not use C style Strings whenever it's possible, and if and when it's required we should add sanity checks.",https://github.com/bitcoin/bitcoin/pull/17754#issuecomment-566154964,566154964,
instagibbs,2019-12-16 19:03:11,"utACK a32d3ccefe008f098f435a0b01284d5711ee8768\n\nI always learn something new about implicit conversion in C++",https://github.com/bitcoin/bitcoin/pull/17754#issuecomment-566196764,566196764,
laanwj,2019-12-17 08:50:55,"Concept ACK\nAlso gets rid of a lot of the remaining (unnecessary) `c_str()`.\nThis is something I've been wanting to do for a long time but never dared.",https://github.com/bitcoin/bitcoin/pull/17754#issuecomment-566444677,566444677,
fanquake,2019-12-29 16:22:01,cc @EthanHeilman ,https://github.com/bitcoin/bitcoin/pull/17754#issuecomment-569520201,569520201,
practicalswift,2020-01-08 12:37:00,"Rebased to get rid of non-related Travis macOS failure!\n\n@promag @EthanHeilman Please re-review :)",https://github.com/bitcoin/bitcoin/pull/17754#issuecomment-572029658,572029658,
EthanHeilman,2020-01-08 20:01:25,"ACK 7a046cdc1423963bdcbcf9bb98560af61fa90b37\nI did not run any tests. I read through the code carefully, looking up behavior I didn't understand. I don't see any reasons not to merge.",https://github.com/bitcoin/bitcoin/pull/17754#issuecomment-572232715,572232715,
laanwj,2020-01-22 19:20:35,"ACK 7a046cdc1423963bdcbcf9bb98560af61fa90b37\n\n> It should be noted that the ConnectThroughProxy change (from bool *outProxyConnectionFailed to bool& outProxyConnectionFailed) has nothing to do with NUL handling but I thought it was worth doing when touching this file :)\n\nFWIW I think such unrelated changes should generally be avoided (especially as part of the same commit). But I don't min",https://github.com/bitcoin/bitcoin/pull/17754#issuecomment-577343267,577343267,
promag,2019-12-22 12:32:18,Could also test with embedded nul char at end.,https://github.com/bitcoin/bitcoin/pull/17754#discussion_r360702616,360702616,src/test/netbase_tests.cpp
practicalswift,2019-12-29 15:57:36,Good idea! Added such a case. Please re-review :),https://github.com/bitcoin/bitcoin/pull/17754#discussion_r361858325,361858325,src/test/netbase_tests.cpp
promag,2019-12-29 22:41:02,"nit, could drop the middle nul.",https://github.com/bitcoin/bitcoin/pull/17754#discussion_r361876535,361876535,src/test/netbase_tests.cpp
EthanHeilman,2020-01-02 19:39:09,To me the middle `\0` seems like a useful case to check. Whats the benefit in dropping it?,https://github.com/bitcoin/bitcoin/pull/17754#discussion_r362601923,362601923,src/test/netbase_tests.cpp
promag,2020-01-02 19:40:07,already checked above.,https://github.com/bitcoin/bitcoin/pull/17754#discussion_r362602256,362602256,src/test/netbase_tests.cpp
EthanHeilman,2020-01-02 20:00:55,"You mean that the test for  `BOOST_CHECK(!LookupHost(std::string(""127.0.0.1\0"", 10), addr, false));` is the same as the test for `BOOST_CHECK(!LookupHost(std::string(""127.0.0.1\0example.com"", 21), addr, false));`?",https://github.com/bitcoin/bitcoin/pull/17754#discussion_r362609660,362609660,src/test/netbase_tests.cpp
EthanHeilman,2020-01-08 19:39:35,It doesn't especially relevant to this PR so this should block this PR but I noticed that `proxyConnectionFailed` is not checked in this call Does it make sense to create a ConnectThroughProxy method without the `outProxyConnectionFailed` parameter or should this call check `proxyConnectionFailed` like the prior call does?,https://github.com/bitcoin/bitcoin/pull/17754#discussion_r364408470,364408470,src/net.cpp
practicalswift,2020-01-08 22:19:18,Good point! Let's we tackle that in a separate follow-up PR to keep this one focused :),https://github.com/bitcoin/bitcoin/pull/17754#discussion_r364471687,364471687,src/net.cpp
EthanHeilman,2020-01-08 22:20:44,"Agreed, I just wanted to make a note here so I didn't forget.",https://github.com/bitcoin/bitcoin/pull/17754#discussion_r364472221,364472221,src/net.cpp
