laanwj,2013-11-19T14:24:22Z,Code changes look good\n,https://github.com/bitcoin/bitcoin/pull/3276#issuecomment-28793347,28793347,
sipa,2013-11-20T23:34:36Z,Rebased to trigger pulltester evaluation.\n,https://github.com/bitcoin/bitcoin/pull/3276#issuecomment-28943815,28943815,
sipa,2013-11-21T00:53:25Z,"I missed the should-not-disconnect-localhost behaviour, thanks pulltester!\n",https://github.com/bitcoin/bitcoin/pull/3276#issuecomment-28948690,28948690,
sipa,2013-11-22T12:32:02Z,@gavinandresen @gmaxwell Some ACKs?\n,https://github.com/bitcoin/bitcoin/pull/3276#issuecomment-29069119,29069119,
mikehearn,2013-11-27T10:51:29Z,"A lock assertion in State() would be nice, it's hard to see from the diff that it truly is always called with cs_main held. \n\nBut unfortunately it seems that boost locks don't support that :( Perhaps the LOCK macros could be extended to support it.\n",https://github.com/bitcoin/bitcoin/pull/3276#issuecomment-29375427,29375427,
gavinandresen,2013-11-29T07:23:17Z,"I'm getting core dumps on shutdown with this, because the cs_main CCriticalSection is being globally-destructed on my machine before instance_of_cnetcleanup.\n\nOrder of events at shutdown:\ncs_main deleted\ninstance_of_cnetcleanup deleted:\n  foreach CNode\* pnode: delete pnode\n  CNode::~CNode : GetNodeSignals().FinalizeNode(this);\n  Signal calls FinalizeNode slot, which tries to LOCK(cs_main) ",https://github.com/bitcoin/bitcoin/pull/3276#issuecomment-29499984,29499984,
sipa,2013-12-07T16:16:05Z,"It seems there was no UnregisterNodeSignals() called anywhere, which should prevent signals being delivered at global-destruct time. I added one in Shutdown().\n",https://github.com/bitcoin/bitcoin/pull/3276#issuecomment-30058228,30058228,
sipa,2013-12-08T13:56:56Z,"Rebased and modified NodeId to be a simple sequentially-assigned integer, instead of an encapsulated const CNode*. Reason: simpler, and doesn't risk confusing an old disconnected node with a new one, if they get allocated in the same memory area.\n",https://github.com/bitcoin/bitcoin/pull/3276#issuecomment-30082063,30082063,
BitcoinPullTester,2013-12-08T14:15:58Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b2864d2fb35fa85e32c76e111f8900598e0bb69d for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3276#issuecomment-30082391,30082391,
gavinandresen,2013-12-09T03:05:43Z,"ACK.\n\nI found another crash-at-shutdown bug, but it has nothing to do with this code.\n",https://github.com/bitcoin/bitcoin/pull/3276#issuecomment-30102873,30102873,
Diapolo,2013-11-21T16:00:30Z,Seems like a dup `}`?\n,https://github.com/bitcoin/bitcoin/pull/3276#discussion_r7827803,7827803,src/main.cpp
sipa,2013-11-21T16:56:34Z,"No, it's the end of the anonymous namespace.\n",https://github.com/bitcoin/bitcoin/pull/3276#discussion_r7830012,7830012,src/main.cpp
gavinandresen,2013-11-29T05:27:21Z,"Merge conflict fix: replace bitcoinrpc.h include with:\n#include ""rpcserver.h""\n",https://github.com/bitcoin/bitcoin/pull/3276#discussion_r7995095,7995095,src/rpcnet.cpp
gavinandresen,2013-11-29T05:59:42Z,"If it is just used as an identifier, use void\* instead of CNode\* ...\n",https://github.com/bitcoin/bitcoin/pull/3276#discussion_r7995336,7995336,src/main.cpp
rebroad,2014-05-09T04:38:56Z,Why pfrom->GetId() and not just pfrom->id ?\n,https://github.com/bitcoin/bitcoin/pull/3276#discussion_r12464124,12464124,src/main.cpp
rebroad,2014-05-09T04:39:50Z,@sipa Why is this function needed please?\n,https://github.com/bitcoin/bitcoin/pull/3276#discussion_r12464129,12464129,src/net.h
sipa,2014-05-09T09:57:46Z,"In sane software design, you don't expose internal state, and use accessor methods like these to query it from the outside. I know the code currently violates it almost everywhere, but that doesn't mean we need to continue that practice.\n",https://github.com/bitcoin/bitcoin/pull/3276#discussion_r12469792,12469792,src/main.cpp
