[
  {
    "sha": "330bb5a456a5f9c26703fa742e4c80691e1455ab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMzBiYjVhNDU2YTVmOWMyNjcwM2ZhNzQyZTRjODA2OTFlMTQ1NWFi",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-10-14T15:49:05Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-05-03T15:55:52Z"
      },
      "message": "Consensus: Minimal way to move dust out of consensus",
      "tree": {
        "sha": "2677b80c8f6b61eceb24a07fa40a644b469b95ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2677b80c8f6b61eceb24a07fa40a644b469b95ec"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/330bb5a456a5f9c26703fa742e4c80691e1455ab",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJZCf2IAAoJEIhmwY6hyUSiVn8P/3wZlIk9UM8GbCpNiiJUa2pS\n3n5p+WLN73hY6XHrk10K+tE5gUB+J8TrFohVkkTIL1jU19Ib9n8ENs6HwEXtHt/m\nHGjb57pFQdFvfWEdP9VwQQqC30cA7MD/2XNXjC3Bs8SDAfZmaI6s0Tf2Ocm/cTlH\nEnqnWexLV+KhKR90civdR08G541MwPJkBYAo+wC6aclz1qNWvn4Gvwxn5XnJ8oOY\nTYh/CRlaw4v52jG0qD+QcZur169ItrYlO8BCSro5wTEpBGA38tX5Tfkyf0w7e2Va\nLzO2ixPV0oRgGNqMpFWDocXYbR5onixJH26Pknbvr3fZ0M/X1R2E15XzLTtqM2PR\nbMwixDlvMe2lKp38TJB53KkaNGoYgPKK6J4ifbvUYmtz/EncRB9AdknwjSPyxAW5\n+Keyr5IpGkGu6y3Z9CAnOvlA04u8XNRlrEV2gx5lE3aW85U1JsnPVyWRrVuNIp9g\nlJOM/pf2yWBKw/RU15YVmmCWKrArbMflHNbi9kaHh9+6xBEmMAx+6q9W3JN3mFmu\n2w3wCPKYwv6tvO45JIfm26cuiXc4R+hEGsfLU6askc3+kXI/xwolIs44sXXfRl1h\nr2X25uTBbg0ClmBSq+VJNzwurRiux5dcJs1KFFZ+FcgtjtwAdGe+OQCTA9X6/TN+\nqQSZYysn08f7jOmQa6MI\n=pc6C\n-----END PGP SIGNATURE-----",
        "payload": "tree 2677b80c8f6b61eceb24a07fa40a644b469b95ec\nparent 35da2aeed7d4000dde93957c3b6e048ab83c4f2b\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1476460145 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1493826952 +0200\n\nConsensus: Minimal way to move dust out of consensus\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/330bb5a456a5f9c26703fa742e4c80691e1455ab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/330bb5a456a5f9c26703fa742e4c80691e1455ab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/330bb5a456a5f9c26703fa742e4c80691e1455ab/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "35da2aeed7d4000dde93957c3b6e048ab83c4f2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35da2aeed7d4000dde93957c3b6e048ab83c4f2b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/35da2aeed7d4000dde93957c3b6e048ab83c4f2b"
      }
    ],
    "stats": {
      "total": 104,
      "additions": 54,
      "deletions": 50
    },
    "files": [
      {
        "sha": "2b19a6714b428016fa3f363fdb95cbfb41ab94b3",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 38,
        "deletions": 1,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/330bb5a456a5f9c26703fa742e4c80691e1455ab/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/330bb5a456a5f9c26703fa742e4c80691e1455ab/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=330bb5a456a5f9c26703fa742e4c80691e1455ab",
        "patch": "@@ -15,6 +15,43 @@\n \n #include <boost/foreach.hpp>\n \n+CAmount GetDustThreshold(const CTxOut& txout, const CFeeRate& dustRelayFee)\n+{\n+    // \"Dust\" is defined in terms of dustRelayFee,\n+    // which has units satoshis-per-kilobyte.\n+    // If you'd pay more than 1/3 in fees\n+    // to spend something, then we consider it dust.\n+    // A typical spendable non-segwit txout is 34 bytes big, and will\n+    // need a CTxIn of at least 148 bytes to spend:\n+    // so dust is a spendable txout less than\n+    // 546*dustRelayFee/1000 (in satoshis).\n+    // A typical spendable segwit txout is 31 bytes big, and will\n+    // need a CTxIn of at least 67 bytes to spend:\n+    // so dust is a spendable txout less than\n+    // 294*dustRelayFee/1000 (in satoshis).\n+    if (txout.scriptPubKey.IsUnspendable())\n+        return 0;\n+\n+    size_t nSize = GetSerializeSize(txout, SER_DISK, 0);\n+    int witnessversion = 0;\n+    std::vector<unsigned char> witnessprogram;\n+\n+    if (txout.scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram)) {\n+        // sum the sizes of the parts of a transaction input\n+        // with 75% segwit discount applied to the script size.\n+        nSize += (32 + 4 + 1 + (107 / WITNESS_SCALE_FACTOR) + 4);\n+    } else {\n+        nSize += (32 + 4 + 1 + 107 + 4); // the 148 mentioned above\n+    }\n+\n+    return 3 * dustRelayFee.GetFee(nSize);\n+}\n+\n+bool IsDust(const CTxOut& txout, const CFeeRate& dustRelayFee)\n+{\n+    return (txout.nValue < GetDustThreshold(txout, dustRelayFee));\n+}\n+\n     /**\n      * Check transaction inputs to mitigate two\n      * potential denial-of-service attacks:\n@@ -106,7 +143,7 @@ bool IsStandardTx(const CTransaction& tx, std::string& reason, const bool witnes\n         else if ((whichType == TX_MULTISIG) && (!fIsBareMultisigStd)) {\n             reason = \"bare-multisig\";\n             return false;\n-        } else if (txout.IsDust(dustRelayFee)) {\n+        } else if (IsDust(txout, ::dustRelayFee)) {\n             reason = \"dust\";\n             return false;\n         }"
      },
      {
        "sha": "24bf3fa5d7dcca83c71a8f5dfbbfb962c508d83e",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/330bb5a456a5f9c26703fa742e4c80691e1455ab/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/330bb5a456a5f9c26703fa742e4c80691e1455ab/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=330bb5a456a5f9c26703fa742e4c80691e1455ab",
        "patch": "@@ -13,6 +13,7 @@\n #include <string>\n \n class CCoinsViewCache;\n+class CTxOut;\n \n /** Default for -blockmaxsize, which controls the maximum size of block the mining code will create **/\n static const unsigned int DEFAULT_BLOCK_MAX_SIZE = 750000;\n@@ -72,6 +73,10 @@ static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_\n static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS = LOCKTIME_VERIFY_SEQUENCE |\n                                                            LOCKTIME_MEDIAN_TIME_PAST;\n \n+CAmount GetDustThreshold(const CTxOut& txout, const CFeeRate& dustRelayFee);\n+\n+bool IsDust(const CTxOut& txout, const CFeeRate& dustRelayFee);\n+\n bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType, const bool witnessEnabled = false);\n     /**\n      * Check for standard transaction types"
      },
      {
        "sha": "00ac0b92b54da5e9ff41b3e37945f4f00a0a6c2f",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/330bb5a456a5f9c26703fa742e4c80691e1455ab/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/330bb5a456a5f9c26703fa742e4c80691e1455ab/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=330bb5a456a5f9c26703fa742e4c80691e1455ab",
        "patch": "@@ -161,43 +161,6 @@ class CTxOut\n         return (nValue == -1);\n     }\n \n-    CAmount GetDustThreshold(const CFeeRate &minRelayTxFee) const\n-    {\n-        // \"Dust\" is defined in terms of CTransaction::minRelayTxFee,\n-        // which has units satoshis-per-kilobyte.\n-        // If you'd pay more than 1/3 in fees\n-        // to spend something, then we consider it dust.\n-        // A typical spendable non-segwit txout is 34 bytes big, and will\n-        // need a CTxIn of at least 148 bytes to spend:\n-        // so dust is a spendable txout less than\n-        // 546*minRelayTxFee/1000 (in satoshis).\n-        // A typical spendable segwit txout is 31 bytes big, and will\n-        // need a CTxIn of at least 67 bytes to spend:\n-        // so dust is a spendable txout less than\n-        // 294*minRelayTxFee/1000 (in satoshis).\n-        if (scriptPubKey.IsUnspendable())\n-            return 0;\n-\n-        size_t nSize = GetSerializeSize(*this, SER_DISK, 0);\n-        int witnessversion = 0;\n-        std::vector<unsigned char> witnessprogram;\n-\n-        if (scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram)) {\n-            // sum the sizes of the parts of a transaction input\n-            // with 75% segwit discount applied to the script size.\n-            nSize += (32 + 4 + 1 + (107 / WITNESS_SCALE_FACTOR) + 4);\n-        } else {\n-            nSize += (32 + 4 + 1 + 107 + 4); // the 148 mentioned above\n-        }\n-\n-        return 3 * minRelayTxFee.GetFee(nSize);\n-    }\n-\n-    bool IsDust(const CFeeRate &minRelayTxFee) const\n-    {\n-        return (nValue < GetDustThreshold(minRelayTxFee));\n-    }\n-\n     friend bool operator==(const CTxOut& a, const CTxOut& b)\n     {\n         return (a.nValue       == b.nValue &&"
      },
      {
        "sha": "2a331d4fae6b26c502f41297a046099b9da36208",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/330bb5a456a5f9c26703fa742e4c80691e1455ab/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/330bb5a456a5f9c26703fa742e4c80691e1455ab/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=330bb5a456a5f9c26703fa742e4c80691e1455ab",
        "patch": "@@ -434,8 +434,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         {\n             CTxOut txout(amount, (CScript)std::vector<unsigned char>(24, 0));\n             txDummy.vout.push_back(txout);\n-            if (txout.IsDust(dustRelayFee))\n-               fDust = true;\n+            fDust |= IsDust(txout, ::dustRelayFee);\n         }\n     }\n \n@@ -527,10 +526,10 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n             if (nChange > 0 && nChange < MIN_CHANGE)\n             {\n                 CTxOut txout(nChange, (CScript)std::vector<unsigned char>(24, 0));\n-                if (txout.IsDust(dustRelayFee))\n+                if (IsDust(txout, ::dustRelayFee))\n                 {\n                     if (CoinControlDialog::fSubtractFeeFromAmount) // dust-change will be raised until no dust\n-                        nChange = txout.GetDustThreshold(dustRelayFee);\n+                        nChange = GetDustThreshold(txout, ::dustRelayFee);\n                     else\n                     {\n                         nPayFee += nChange;"
      },
      {
        "sha": "bffa81137b230c5e2fb5292b53d41b776e1494c1",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/330bb5a456a5f9c26703fa742e4c80691e1455ab/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/330bb5a456a5f9c26703fa742e4c80691e1455ab/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=330bb5a456a5f9c26703fa742e4c80691e1455ab",
        "patch": "@@ -251,7 +251,7 @@ bool isDust(const QString& address, const CAmount& amount)\n     CTxDestination dest = CBitcoinAddress(address.toStdString()).Get();\n     CScript script = GetScriptForDestination(dest);\n     CTxOut txOut(amount, script);\n-    return txOut.IsDust(dustRelayFee);\n+    return IsDust(txOut, ::dustRelayFee);\n }\n \n QString HtmlEscape(const QString& str, bool fMultiLine)"
      },
      {
        "sha": "77fa6b2f3b2b195d7f98cb00187174119a7dc01b",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/330bb5a456a5f9c26703fa742e4c80691e1455ab/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/330bb5a456a5f9c26703fa742e4c80691e1455ab/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=330bb5a456a5f9c26703fa742e4c80691e1455ab",
        "patch": "@@ -580,7 +580,7 @@ bool PaymentServer::processPaymentRequest(const PaymentRequestPlus& request, Sen\n \n         // Extract and check amounts\n         CTxOut txOut(sendingTo.second, sendingTo.first);\n-        if (txOut.IsDust(dustRelayFee)) {\n+        if (IsDust(txOut, ::dustRelayFee)) {\n             Q_EMIT message(tr(\"Payment request error\"), tr(\"Requested payment amount of %1 is too small (considered dust).\")\n                 .arg(BitcoinUnits::formatWithUnit(optionsModel->getDisplayUnit(), sendingTo.second)),\n                 CClientUIInterface::MSG_ERROR);"
      },
      {
        "sha": "b3cb6a718cf2fd0edccc952dfd69bbb8e19a3b88",
        "filename": "src/wallet/feebumper.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/330bb5a456a5f9c26703fa742e4c80691e1455ab/src/wallet/feebumper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/330bb5a456a5f9c26703fa742e4c80691e1455ab/src/wallet/feebumper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/feebumper.cpp?ref=330bb5a456a5f9c26703fa742e4c80691e1455ab",
        "patch": "@@ -214,7 +214,7 @@ CFeeBumper::CFeeBumper(const CWallet *pWallet, const uint256 txidIn, int newConf\n \n     // If the output would become dust, discard it (converting the dust to fee)\n     poutput->nValue -= nDelta;\n-    if (poutput->nValue <= poutput->GetDustThreshold(::dustRelayFee)) {\n+    if (poutput->nValue <= GetDustThreshold(*poutput, ::dustRelayFee)) {\n         LogPrint(BCLog::RPC, \"Bumping fee and discarding dust output\\n\");\n         nNewFee += poutput->nValue;\n         mtx.vout.erase(mtx.vout.begin() + nOutput);"
      },
      {
        "sha": "ea329d6ebeaf68b7fd6e46db9cb6e7c7fc503e63",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/330bb5a456a5f9c26703fa742e4c80691e1455ab/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/330bb5a456a5f9c26703fa742e4c80691e1455ab/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=330bb5a456a5f9c26703fa742e4c80691e1455ab",
        "patch": "@@ -2449,7 +2449,7 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletT\n                         }\n                     }\n \n-                    if (txout.IsDust(dustRelayFee))\n+                    if (IsDust(txout, ::dustRelayFee))\n                     {\n                         if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n                         {\n@@ -2514,16 +2514,16 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletT\n                     // We do not move dust-change to fees, because the sender would end up paying more than requested.\n                     // This would be against the purpose of the all-inclusive feature.\n                     // So instead we raise the change and deduct from the recipient.\n-                    if (nSubtractFeeFromAmount > 0 && newTxOut.IsDust(dustRelayFee))\n+                    if (nSubtractFeeFromAmount > 0 && IsDust(newTxOut, ::dustRelayFee))\n                     {\n-                        CAmount nDust = newTxOut.GetDustThreshold(dustRelayFee) - newTxOut.nValue;\n+                        CAmount nDust = GetDustThreshold(newTxOut, ::dustRelayFee) - newTxOut.nValue;\n                         newTxOut.nValue += nDust; // raise change until no more dust\n                         for (unsigned int i = 0; i < vecSend.size(); i++) // subtract from first recipient\n                         {\n                             if (vecSend[i].fSubtractFeeFromAmount)\n                             {\n                                 txNew.vout[i].nValue -= nDust;\n-                                if (txNew.vout[i].IsDust(dustRelayFee))\n+                                if (IsDust(txNew.vout[i], ::dustRelayFee))\n                                 {\n                                     strFailReason = _(\"The transaction amount is too small to send after the fee has been deducted\");\n                                     return false;\n@@ -2535,7 +2535,7 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletT\n \n                     // Never create dust outputs; if we would, just\n                     // add the dust to the fee.\n-                    if (newTxOut.IsDust(dustRelayFee))\n+                    if (IsDust(newTxOut, ::dustRelayFee))\n                     {\n                         nChangePosInOut = -1;\n                         nFeeRet += nChange;"
      }
    ]
  },
  {
    "sha": "381a46e38fa9262c868e5fee9ed0d1f71af4059e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODFhNDZlMzhmYTkyNjJjODY4ZTVmZWU5ZWQwZDFmNzFhZjQwNTll",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-03-31T21:30:17Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-05-03T16:00:13Z"
      },
      "message": "Consensus: Policy: MOVEONLY: Move CFeeRate out of the consensus module\n\n...from amount.o to policy/feerate.o\n\nPolicy, because it moves policy code to the policy directory (common module)",
      "tree": {
        "sha": "115cf75503d30e8a3f1a976a39bef76bd6e37034",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/115cf75503d30e8a3f1a976a39bef76bd6e37034"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/381a46e38fa9262c868e5fee9ed0d1f71af4059e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJZCf6RAAoJEIhmwY6hyUSiVpwQAIyv/bf2EuJZ+xPDryuEGmRo\nVIKQhQ+sChAm6RjuzOFlQoB9fn0qqmA9P0jfUlcs36vJveJAJvTv9GL9eQKCq1Dk\nnO8V9G29I1p8ti5WBoOvpx/dInIuqvS6oyn5rX6CUvuJMy34qseuOYrSF1ekXEqR\n8YNOUU7oxE/+/5ZB6zbk3EVF6NAqNPlY8Prv0LibYqsHiX+CNno1XbvNTNMbZQyS\nqUUBHNwtraIa3pCfr8nry20cBJxgVFWpRCWZujlZy05PnjSh9EtZ1Hv9+xxdT8/E\n411AHVTYTDbagLrPz9wUj/gzlOilc1RxMQpLzAFOwoq01YrShuFsvC2rRsbO0gJ1\nuomvLBWE+OFXq/aatIupscPCrkTO2UzAQ7iC6OEXoNem2+tBIX/vjPSt4mbc0U7V\nGkpZJCzC1lQP24YOt154kW/yEmSVI2frzDtEnGTrJ5Q16RG5U7boEQO/DSjES5ki\nGoyKUG5qCky8TRXTZn5qnAB8lwigtuyXZQsm2TqH17dX9qGaxvZ4ddxTYZhxJbVG\nYGU+J7GjqVFx4klQzEPMyx/mrjnewDOVC/IgHbxGVKHN3mGRWfEvnL+tcLIaI7DB\nimDboz40/PotQGWGa1AONn+hnHUhZuXPRQeOdlx9tyz0kDoaNJxh8IgfvQC40Tij\nzZBrhbX/Z8uZzpNP7jil\n=7UvK\n-----END PGP SIGNATURE-----",
        "payload": "tree 115cf75503d30e8a3f1a976a39bef76bd6e37034\nparent 330bb5a456a5f9c26703fa742e4c80691e1455ab\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1459459817 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1493827213 +0200\n\nConsensus: Policy: MOVEONLY: Move CFeeRate out of the consensus module\n\n...from amount.o to policy/feerate.o\n\nPolicy, because it moves policy code to the policy directory (common module)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/381a46e38fa9262c868e5fee9ed0d1f71af4059e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/381a46e38fa9262c868e5fee9ed0d1f71af4059e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/381a46e38fa9262c868e5fee9ed0d1f71af4059e/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "330bb5a456a5f9c26703fa742e4c80691e1455ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/330bb5a456a5f9c26703fa742e4c80691e1455ab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/330bb5a456a5f9c26703fa742e4c80691e1455ab"
      }
    ],
    "stats": {
      "total": 116,
      "additions": 70,
      "deletions": 46
    },
    "files": [
      {
        "sha": "14d55a944fcda0aa7f13f20c78bddc150fa769b8",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=381a46e38fa9262c868e5fee9ed0d1f71af4059e",
        "patch": "@@ -116,6 +116,7 @@ BITCOIN_CORE_H = \\\n   netbase.h \\\n   netmessagemaker.h \\\n   noui.h \\\n+  policy/feerate.h \\\n   policy/fees.h \\\n   policy/policy.h \\\n   policy/rbf.h \\\n@@ -301,7 +302,6 @@ libbitcoin_consensus_a_SOURCES = \\\n libbitcoin_common_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n libbitcoin_common_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_common_a_SOURCES = \\\n-  amount.cpp \\\n   base58.cpp \\\n   chainparams.cpp \\\n   coins.cpp \\\n@@ -312,6 +312,7 @@ libbitcoin_common_a_SOURCES = \\\n   keystore.cpp \\\n   netaddress.cpp \\\n   netbase.cpp \\\n+  policy/feerate.cpp \\\n   protocol.cpp \\\n   scheduler.cpp \\\n   script/sign.cpp \\"
      },
      {
        "sha": "2bd367cba29fa5e802635786607272b8c718a553",
        "filename": "src/amount.h",
        "status": "modified",
        "additions": 1,
        "deletions": 44,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/amount.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/amount.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.h?ref=381a46e38fa9262c868e5fee9ed0d1f71af4059e",
        "patch": "@@ -6,19 +6,14 @@\n #ifndef BITCOIN_AMOUNT_H\n #define BITCOIN_AMOUNT_H\n \n-#include \"serialize.h\"\n-\n-#include <stdlib.h>\n-#include <string>\n+#include <stdint.h>\n \n /** Amount in satoshis (Can be negative) */\n typedef int64_t CAmount;\n \n static const CAmount COIN = 100000000;\n static const CAmount CENT = 1000000;\n \n-extern const std::string CURRENCY_UNIT;\n-\n /** No amount larger than this (in satoshi) is valid.\n  *\n  * Note that this constant is *not* the total money supply, which in Bitcoin\n@@ -31,42 +26,4 @@ extern const std::string CURRENCY_UNIT;\n static const CAmount MAX_MONEY = 21000000 * COIN;\n inline bool MoneyRange(const CAmount& nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }\n \n-/**\n- * Fee rate in satoshis per kilobyte: CAmount / kB\n- */\n-class CFeeRate\n-{\n-private:\n-    CAmount nSatoshisPerK; // unit is satoshis-per-1,000-bytes\n-public:\n-    /** Fee rate of 0 satoshis per kB */\n-    CFeeRate() : nSatoshisPerK(0) { }\n-    explicit CFeeRate(const CAmount& _nSatoshisPerK): nSatoshisPerK(_nSatoshisPerK) { }\n-    /** Constructor for a fee rate in satoshis per kB. The size in bytes must not exceed (2^63 - 1)*/\n-    CFeeRate(const CAmount& nFeePaid, size_t nBytes);\n-    CFeeRate(const CFeeRate& other) { nSatoshisPerK = other.nSatoshisPerK; }\n-    /**\n-     * Return the fee in satoshis for the given size in bytes.\n-     */\n-    CAmount GetFee(size_t nBytes) const;\n-    /**\n-     * Return the fee in satoshis for a size of 1000 bytes\n-     */\n-    CAmount GetFeePerK() const { return GetFee(1000); }\n-    friend bool operator<(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK < b.nSatoshisPerK; }\n-    friend bool operator>(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK > b.nSatoshisPerK; }\n-    friend bool operator==(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK == b.nSatoshisPerK; }\n-    friend bool operator<=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK <= b.nSatoshisPerK; }\n-    friend bool operator>=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK >= b.nSatoshisPerK; }\n-    CFeeRate& operator+=(const CFeeRate& a) { nSatoshisPerK += a.nSatoshisPerK; return *this; }\n-    std::string ToString() const;\n-\n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(nSatoshisPerK);\n-    }\n-};\n-\n #endif //  BITCOIN_AMOUNT_H"
      },
      {
        "sha": "2b6048fa98ee272e5c06da21c1baebc71505a98a",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=381a46e38fa9262c868e5fee9ed0d1f71af4059e",
        "patch": "@@ -25,6 +25,7 @@\n #include \"netbase.h\"\n #include \"net.h\"\n #include \"net_processing.h\"\n+#include \"policy/feerate.h\"\n #include \"policy/fees.h\"\n #include \"policy/policy.h\"\n #include \"rpc/server.h\""
      },
      {
        "sha": "9d2959723a27b3e995f2ae838a8dfc7443406903",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=381a46e38fa9262c868e5fee9ed0d1f71af4059e",
        "patch": "@@ -15,6 +15,7 @@\n #include \"hash.h\"\n #include \"validation.h\"\n #include \"net.h\"\n+#include \"policy/feerate.h\"\n #include \"policy/policy.h\"\n #include \"pow.h\"\n #include \"primitives/transaction.h\""
      },
      {
        "sha": "60abb386e0764c0deaa0decfb1ff2d34641713bc",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=381a46e38fa9262c868e5fee9ed0d1f71af4059e",
        "patch": "@@ -14,6 +14,7 @@\n #include \"hash.h\"\n #include \"limitedmap.h\"\n #include \"netaddress.h\"\n+#include \"policy/feerate.h\"\n #include \"protocol.h\"\n #include \"random.h\"\n #include \"streams.h\""
      },
      {
        "sha": "a089c02284f047ed68c791cddeedb8d978c91736",
        "filename": "src/policy/feerate.cpp",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/policy/feerate.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/policy/feerate.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/feerate.cpp?ref=381a46e38fa9262c868e5fee9ed0d1f71af4059e",
        "patch": "@@ -3,7 +3,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include \"amount.h\"\n+#include \"feerate.h\"\n \n #include \"tinyformat.h\"\n ",
        "previous_filename": "src/amount.cpp"
      },
      {
        "sha": "e82268b095a3196b16007ac58cf3967a40196ed2",
        "filename": "src/policy/feerate.h",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/policy/feerate.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/policy/feerate.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/feerate.h?ref=381a46e38fa9262c868e5fee9ed0d1f71af4059e",
        "patch": "@@ -0,0 +1,54 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_FEERATE_H\n+#define BITCOIN_POLICY_FEERATE_H\n+\n+#include \"amount.h\"\n+#include \"serialize.h\"\n+\n+#include <string>\n+\n+extern const std::string CURRENCY_UNIT;\n+\n+/**\n+ * Fee rate in satoshis per kilobyte: CAmount / kB\n+ */\n+class CFeeRate\n+{\n+private:\n+    CAmount nSatoshisPerK; // unit is satoshis-per-1,000-bytes\n+public:\n+    /** Fee rate of 0 satoshis per kB */\n+    CFeeRate() : nSatoshisPerK(0) { }\n+    explicit CFeeRate(const CAmount& _nSatoshisPerK): nSatoshisPerK(_nSatoshisPerK) { }\n+    /** Constructor for a fee rate in satoshis per kB. The size in bytes must not exceed (2^63 - 1)*/\n+    CFeeRate(const CAmount& nFeePaid, size_t nBytes);\n+    CFeeRate(const CFeeRate& other) { nSatoshisPerK = other.nSatoshisPerK; }\n+    /**\n+     * Return the fee in satoshis for the given size in bytes.\n+     */\n+    CAmount GetFee(size_t nBytes) const;\n+    /**\n+     * Return the fee in satoshis for a size of 1000 bytes\n+     */\n+    CAmount GetFeePerK() const { return GetFee(1000); }\n+    friend bool operator<(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK < b.nSatoshisPerK; }\n+    friend bool operator>(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK > b.nSatoshisPerK; }\n+    friend bool operator==(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK == b.nSatoshisPerK; }\n+    friend bool operator<=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK <= b.nSatoshisPerK; }\n+    friend bool operator>=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK >= b.nSatoshisPerK; }\n+    CFeeRate& operator+=(const CFeeRate& a) { nSatoshisPerK += a.nSatoshisPerK; return *this; }\n+    std::string ToString() const;\n+\n+    ADD_SERIALIZE_METHODS;\n+\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action) {\n+        READWRITE(nSatoshisPerK);\n+    }\n+};\n+\n+#endif //  BITCOIN_POLICY_FEERATE_H"
      },
      {
        "sha": "15876574d20fe8a94ceb8eac9b3a501d3b90e3cd",
        "filename": "src/policy/fees.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/policy/fees.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/policy/fees.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.h?ref=381a46e38fa9262c868e5fee9ed0d1f71af4059e",
        "patch": "@@ -6,6 +6,7 @@\n #define BITCOIN_POLICYESTIMATOR_H\n \n #include \"amount.h\"\n+#include \"feerate.h\"\n #include \"uint256.h\"\n #include \"random.h\"\n #include \"sync.h\""
      },
      {
        "sha": "2c2ea9d5b85a6011523ca2d9275806834cc93b37",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=381a46e38fa9262c868e5fee9ed0d1f71af4059e",
        "patch": "@@ -7,6 +7,7 @@\n #define BITCOIN_POLICY_POLICY_H\n \n #include \"consensus/consensus.h\"\n+#include \"feerate.h\"\n #include \"script/interpreter.h\"\n #include \"script/standard.h\"\n "
      },
      {
        "sha": "3015a751c6d06b703fdf900ff4136eee1268222c",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=381a46e38fa9262c868e5fee9ed0d1f71af4059e",
        "patch": "@@ -13,6 +13,7 @@\n #include \"consensus/validation.h\"\n #include \"validation.h\"\n #include \"core_io.h\"\n+#include \"policy/feerate.h\"\n #include \"policy/policy.h\"\n #include \"primitives/transaction.h\"\n #include \"rpc/server.h\""
      },
      {
        "sha": "952cf901f02bd3f5c3dfc9e7cf7f9acc7d25f9ba",
        "filename": "src/test/amount_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/test/amount_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/test/amount_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/amount_tests.cpp?ref=381a46e38fa9262c868e5fee9ed0d1f71af4059e",
        "patch": "@@ -3,6 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"amount.h\"\n+#include \"policy/feerate.h\"\n #include \"test/test_bitcoin.h\"\n \n #include <boost/test/unit_test.hpp>"
      },
      {
        "sha": "94987ef4d183ffe7f74cff3ed40e7cf108ebc5de",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=381a46e38fa9262c868e5fee9ed0d1f71af4059e",
        "patch": "@@ -16,6 +16,7 @@\n #include \"amount.h\"\n #include \"coins.h\"\n #include \"indirectmap.h\"\n+#include \"policy/feerate.h\"\n #include \"primitives/transaction.h\"\n #include \"sync.h\"\n #include \"random.h\""
      },
      {
        "sha": "8ddceb23065c4f76412afc69b48bd738b4cdf64e",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=381a46e38fa9262c868e5fee9ed0d1f71af4059e",
        "patch": "@@ -14,6 +14,7 @@\n #include \"coins.h\"\n #include \"fs.h\"\n #include \"protocol.h\" // For CMessageHeader::MessageStartChars\n+#include \"policy/feerate.h\"\n #include \"script/script_error.h\"\n #include \"sync.h\"\n #include \"versionbits.h\""
      },
      {
        "sha": "2aa26fb00a29331681d402d88028e55b2cf5b86d",
        "filename": "src/wallet/coincontrol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/wallet/coincontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/wallet/coincontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coincontrol.h?ref=381a46e38fa9262c868e5fee9ed0d1f71af4059e",
        "patch": "@@ -5,6 +5,7 @@\n #ifndef BITCOIN_WALLET_COINCONTROL_H\n #define BITCOIN_WALLET_COINCONTROL_H\n \n+#include \"policy/feerate.h\"\n #include \"primitives/transaction.h\"\n #include \"wallet/wallet.h\"\n "
      },
      {
        "sha": "5c73ed7391d30ede7e9c4715b47be26f5836741a",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=381a46e38fa9262c868e5fee9ed0d1f71af4059e",
        "patch": "@@ -12,6 +12,7 @@\n #include \"wallet/coincontrol.h\"\n #include \"validation.h\"\n #include \"net.h\"\n+#include \"policy/feerate.h\"\n #include \"policy/fees.h\"\n #include \"policy/policy.h\"\n #include \"policy/rbf.h\""
      },
      {
        "sha": "179ea1b7adc3521a721604fe1852645565c37099",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/381a46e38fa9262c868e5fee9ed0d1f71af4059e/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=381a46e38fa9262c868e5fee9ed0d1f71af4059e",
        "patch": "@@ -7,6 +7,7 @@\n #define BITCOIN_WALLET_WALLET_H\n \n #include \"amount.h\"\n+#include \"policy/feerate.h\"\n #include \"streams.h\"\n #include \"tinyformat.h\"\n #include \"ui_interface.h\""
      }
    ]
  }
]