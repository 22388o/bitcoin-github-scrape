[
  {
    "sha": "e953dd6d44daa63571c9cb57f096814d079ec5da",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOTUzZGQ2ZDQ0ZGFhNjM1NzFjOWNiNTdmMDk2ODE0ZDA3OWVjNWRh",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-08-11T07:02:14Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-10-31T08:57:29Z"
      },
      "message": "[Trivial] remove unneeded spaces from init.cpp",
      "tree": {
        "sha": "47b314d0a7f82c00a62b2b57441c7cd35142dee7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/47b314d0a7f82c00a62b2b57441c7cd35142dee7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e953dd6d44daa63571c9cb57f096814d079ec5da",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e953dd6d44daa63571c9cb57f096814d079ec5da",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e953dd6d44daa63571c9cb57f096814d079ec5da",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e953dd6d44daa63571c9cb57f096814d079ec5da/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "48b5b84ee511d5ccd0d47bb0018c1b3c9ddebeff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48b5b84ee511d5ccd0d47bb0018c1b3c9ddebeff",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/48b5b84ee511d5ccd0d47bb0018c1b3c9ddebeff"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "1f939a3c6b2943fcd2c4c069cf5803b18d6107ea",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e953dd6d44daa63571c9cb57f096814d079ec5da/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e953dd6d44daa63571c9cb57f096814d079ec5da/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e953dd6d44daa63571c9cb57f096814d079ec5da",
        "patch": "@@ -529,9 +529,9 @@ struct CImportingNow\n \n \n // If we're using -prune with -reindex, then delete block files that will be ignored by the\n-// reindex.  Since reindexing works by starting at block file 0 and looping until a blockfile\n-// is missing, do the same here to delete any later block files after a gap.  Also delete all\n-// rev files since they'll be rewritten by the reindex anyway.  This ensures that vinfoBlockFile\n+// reindex. Since reindexing works by starting at block file 0 and looping until a blockfile\n+// is missing, do the same here to delete any later block files after a gap. Also delete all\n+// rev files since they'll be rewritten by the reindex anyway. This ensures that vinfoBlockFile\n // is in sync with what's actually on disk by the time we start downloading, so that pruning\n // works correctly.\n void CleanupBlockRevFiles()\n@@ -558,7 +558,7 @@ void CleanupBlockRevFiles()\n \n     // Remove all block files that aren't part of a contiguous set starting at\n     // zero by walking the ordered map (keys are block file indices) by\n-    // keeping a separate counter.  Once we hit a gap (or if 0 doesn't exist)\n+    // keeping a separate counter. Once we hit a gap (or if 0 doesn't exist)\n     // start removing block files.\n     int nContigCounter = 0;\n     BOOST_FOREACH(const PAIRTYPE(string, path)& item, mapBlockFiles) {\n@@ -873,7 +873,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     nPruneTarget = (uint64_t) nSignedPruneTarget;\n     if (nPruneTarget) {\n         if (nPruneTarget < MIN_DISK_SPACE_FOR_BLOCK_FILES) {\n-            return InitError(strprintf(_(\"Prune configured below the minimum of %d MiB.  Please use a higher number.\"), MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024));\n+            return InitError(strprintf(_(\"Prune configured below the minimum of %d MiB. Please use a higher number.\"), MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024));\n         }\n         LogPrintf(\"Prune configured to target %uMiB on disk for block and undo files.\\n\", nPruneTarget / 1024 / 1024);\n         fPruneMode = true;\n@@ -1020,9 +1020,9 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     CScheduler::Function serviceLoop = boost::bind(&CScheduler::serviceQueue, &scheduler);\n     threadGroup.create_thread(boost::bind(&TraceThread<CScheduler::Function>, \"scheduler\", serviceLoop));\n \n-    /* Start the RPC server already.  It will be started in \"warmup\" mode\n+    /* Start the RPC server already. It will be started in \"warmup\" mode\n      * and not really process calls already (but it will signify connections\n-     * that the server is there and will be ready later).  Warmup mode will\n+     * that the server is there and will be ready later). Warmup mode will\n      * be disabled when initialisation is finished.\n      */\n     if (fServer)\n@@ -1281,10 +1281,10 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n                     break;\n                 }\n \n-                // Check for changed -prune state.  What we are concerned about is a user who has pruned blocks\n+                // Check for changed -prune state. What we are concerned about is a user who has pruned blocks\n                 // in the past, but is now trying to run unpruned.\n                 if (fHavePruned && !fPruneMode) {\n-                    strLoadError = _(\"You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain\");\n+                    strLoadError = _(\"You need to rebuild the database using -reindex to go back to unpruned mode. This will redownload the entire blockchain\");\n                     break;\n                 }\n "
      }
    ]
  }
]