[
  {
    "sha": "19e8d7be42039724b4893515ec6457d0187024a9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOWU4ZDdiZTQyMDM5NzI0YjQ4OTM1MTVlYzY0NTdkMDE4NzAyNGE5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-05-26T06:59:13Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-05-26T06:59:13Z"
      },
      "message": "Simplify code for CSubnet\n\nSimplify the code by using CAddress.ip directly, instead of the reversed\nGetByte() semantics.",
      "tree": {
        "sha": "a9d73d5e397b1f7bd8db9f7533231e98656f78c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9d73d5e397b1f7bd8db9f7533231e98656f78c8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/19e8d7be42039724b4893515ec6457d0187024a9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19e8d7be42039724b4893515ec6457d0187024a9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/19e8d7be42039724b4893515ec6457d0187024a9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19e8d7be42039724b4893515ec6457d0187024a9/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e1412d3e96ff11d05d727bebedcc42698853cccc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1412d3e96ff11d05d727bebedcc42698853cccc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e1412d3e96ff11d05d727bebedcc42698853cccc"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "b765b35eec2644457b7389ea36edfb3d1bf139c3",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 8,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19e8d7be42039724b4893515ec6457d0187024a9/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19e8d7be42039724b4893515ec6457d0187024a9/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=19e8d7be42039724b4893515ec6457d0187024a9",
        "patch": "@@ -1252,12 +1252,12 @@ CSubNet::CSubNet(const std::string &strSubnet, bool fAllowLookup)\n             std::string strNetmask = strSubnet.substr(slash + 1);\n             int32_t n;\n             // IPv4 addresses start at offset 12, and first 12 bytes must match, so just offset n\n-            int noffset = network.IsIPv4() ? (12 * 8) : 0;\n+            const int astartofs = network.IsIPv4() ? 12 : 0;\n             if (ParseInt32(strNetmask, &n)) // If valid number, assume /24 symtex\n             {\n-                if(n >= 0 && n <= (128 - noffset)) // Only valid if in range of bits of address\n+                if(n >= 0 && n <= (128 - astartofs*8)) // Only valid if in range of bits of address\n                 {\n-                    n += noffset;\n+                    n += astartofs*8;\n                     // Clear bits [n..127]\n                     for (; n < 128; ++n)\n                         netmask[n>>3] &= ~(1<<(n&7));\n@@ -1271,12 +1271,10 @@ CSubNet::CSubNet(const std::string &strSubnet, bool fAllowLookup)\n             {\n                 if (LookupHost(strNetmask.c_str(), vIP, 1, false)) // Never allow lookup for netmask\n                 {\n-                    // Remember: GetByte returns bytes in reversed order\n                     // Copy only the *last* four bytes in case of IPv4, the rest of the mask should stay 1's as\n                     // we don't want pchIPv4 to be part of the mask.\n-                    int asize = network.IsIPv4() ? 4 : 16;\n-                    for(int x=0; x<asize; ++x)\n-                        netmask[15-x] = vIP[0].GetByte(x);\n+                    for(int x=astartofs; x<16; ++x)\n+                        netmask[x] = vIP[0].ip[x];\n                 }\n                 else\n                 {\n@@ -1296,7 +1294,7 @@ bool CSubNet::Match(const CNetAddr &addr) const\n     if (!valid || !addr.IsValid())\n         return false;\n     for(int x=0; x<16; ++x)\n-        if ((addr.GetByte(x) & netmask[15-x]) != network.GetByte(x))\n+        if ((addr.ip[x] & netmask[x]) != network.ip[x])\n             return false;\n     return true;\n }"
      },
      {
        "sha": "1f2957116e3ed561cc420f879a2df1ab780357c0",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19e8d7be42039724b4893515ec6457d0187024a9/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19e8d7be42039724b4893515ec6457d0187024a9/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=19e8d7be42039724b4893515ec6457d0187024a9",
        "patch": "@@ -100,6 +100,8 @@ class CNetAddr\n         inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n             READWRITE(FLATDATA(ip));\n         }\n+\n+        friend class CSubNet;\n };\n \n class CSubNet"
      }
    ]
  },
  {
    "sha": "b45c50ce511dbf541ea086ae40a3ad16ff06de0c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNDVjNTBjZTUxMWRiZjU0MWVhMDg2YWU0MGEzYWQxNmZmMDZkZTBj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-05-26T06:59:20Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-05-26T06:59:59Z"
      },
      "message": "Fix two problems in CSubNet parsing\n\nFix two CSubNet constructor problems:\n\n- The use of `/x` where 8 does not divide x was broken, due to a\n  bit-order issue\n\n- The use of e.g. `1.2.3.4/24` where the netmasked bits in the network\n  are not 0 was broken. Fix this by explicitly normalizing the netwok\n  according to the bitmask.\n\nAlso add tests for these cases.\n\nFixes #6179. Thanks to @jonasschnelli for reporting and initial fix.",
      "tree": {
        "sha": "8164631756d441bb812db9ff0f84022c197f4fa4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8164631756d441bb812db9ff0f84022c197f4fa4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b45c50ce511dbf541ea086ae40a3ad16ff06de0c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b45c50ce511dbf541ea086ae40a3ad16ff06de0c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b45c50ce511dbf541ea086ae40a3ad16ff06de0c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b45c50ce511dbf541ea086ae40a3ad16ff06de0c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "19e8d7be42039724b4893515ec6457d0187024a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19e8d7be42039724b4893515ec6457d0187024a9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/19e8d7be42039724b4893515ec6457d0187024a9"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 10,
      "deletions": 1
    },
    "files": [
      {
        "sha": "41cc18d3cd80c10e126cceb0c501644088537763",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b45c50ce511dbf541ea086ae40a3ad16ff06de0c/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b45c50ce511dbf541ea086ae40a3ad16ff06de0c/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=b45c50ce511dbf541ea086ae40a3ad16ff06de0c",
        "patch": "@@ -1260,7 +1260,7 @@ CSubNet::CSubNet(const std::string &strSubnet, bool fAllowLookup)\n                     n += astartofs*8;\n                     // Clear bits [n..127]\n                     for (; n < 128; ++n)\n-                        netmask[n>>3] &= ~(1<<(n&7));\n+                        netmask[n>>3] &= ~(1<<(7-(n&7)));\n                 }\n                 else\n                 {\n@@ -1287,6 +1287,10 @@ CSubNet::CSubNet(const std::string &strSubnet, bool fAllowLookup)\n     {\n         valid = false;\n     }\n+\n+    // Normalize network according to netmask\n+    for(int x=0; x<16; ++x)\n+        network.ip[x] &= netmask[x];\n }\n \n bool CSubNet::Match(const CNetAddr &addr) const"
      },
      {
        "sha": "0f5e1615c63359f2452fc182502e877bea0955fb",
        "filename": "src/test/netbase_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b45c50ce511dbf541ea086ae40a3ad16ff06de0c/src/test/netbase_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b45c50ce511dbf541ea086ae40a3ad16ff06de0c/src/test/netbase_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/netbase_tests.cpp?ref=b45c50ce511dbf541ea086ae40a3ad16ff06de0c",
        "patch": "@@ -117,6 +117,11 @@ BOOST_AUTO_TEST_CASE(subnet_test)\n     BOOST_CHECK(CSubNet(\"1:2:3:4:5:6:7:8\").Match(CNetAddr(\"1:2:3:4:5:6:7:8\")));\n     BOOST_CHECK(!CSubNet(\"1:2:3:4:5:6:7:8\").Match(CNetAddr(\"1:2:3:4:5:6:7:9\")));\n     BOOST_CHECK(CSubNet(\"1:2:3:4:5:6:7:0/112\").Match(CNetAddr(\"1:2:3:4:5:6:7:1234\")));\n+    BOOST_CHECK(CSubNet(\"192.168.0.1/24\").Match(CNetAddr(\"192.168.0.2\")));\n+    BOOST_CHECK(CSubNet(\"192.168.0.20/29\").Match(CNetAddr(\"192.168.0.18\")));\n+    BOOST_CHECK(CSubNet(\"1.2.2.1/24\").Match(CNetAddr(\"1.2.2.4\")));\n+    BOOST_CHECK(CSubNet(\"1.2.2.110/31\").Match(CNetAddr(\"1.2.2.111\")));\n+    BOOST_CHECK(CSubNet(\"1.2.2.20/26\").Match(CNetAddr(\"1.2.2.63\")));\n     // All-Matching IPv6 Matches arbitrary IPv4 and IPv6\n     BOOST_CHECK(CSubNet(\"::/0\").Match(CNetAddr(\"1:2:3:4:5:6:7:1234\")));\n     BOOST_CHECK(CSubNet(\"::/0\").Match(CNetAddr(\"1.2.3.4\")));"
      }
    ]
  }
]