promag,2018-04-10T00:22:58Z,@practicalswift you may find this useful for #11634.,https://github.com/bitcoin/bitcoin/pull/12929#issuecomment-379934660,379934660,
instagibbs,2018-04-10T00:53:26Z,concept ACK!,https://github.com/bitcoin/bitcoin/pull/12929#issuecomment-379939196,379939196,
practicalswift,2018-04-10T06:42:26Z,"Concept ACK\n\nThanks!",https://github.com/bitcoin/bitcoin/pull/12929#issuecomment-379991392,379991392,
promag,2018-04-11T23:53:16Z,"Thanks @ryanofsky for the review!\n\n> It seems especially awkward to now have CWallet methods that take const CWalletTx& references and then change their mutable members.\n\nFor instance, should this \n```cpp\nCAmount CWallet::GetDebit(const CTxIn &txin, const isminefilter& filter) const;\nCAmount CWallet::GetDebit(const CWalletTx& wtx, const isminefilter& filter) const;\n```\nbe this (w",https://github.com/bitcoin/bitcoin/pull/12929#issuecomment-380631042,380631042,
promag,2018-04-12T09:39:24Z,@ryanofsky updated b2f5def...721f499.,https://github.com/bitcoin/bitcoin/pull/12929#issuecomment-380741817,380741817,
fanquake,2018-04-18T06:16:26Z,This needs a rebase.,https://github.com/bitcoin/bitcoin/pull/12929#issuecomment-382274817,382274817,
Empact,2018-04-18T15:34:18Z,utACK 721f499,https://github.com/bitcoin/bitcoin/pull/12929#issuecomment-382429823,382429823,
promag,2018-04-18T17:47:33Z,"@Empact @ryanofsky if you don't mind I'd prefer to keep this as ""move only"" as possible. The idea here is to remove wallet pointer from `CWalletTx`. I can follow up those suggestions though.",https://github.com/bitcoin/bitcoin/pull/12929#issuecomment-382471772,382471772,
ryanofsky,2018-04-18T18:21:00Z,"> @ryanofsky if you don't mind I'd prefer to keep this as ""move only"" as possible\n\nI'm actually still not sure what was wrong with my suggestion to pass wallet references where needed and not move code around out all all: https://github.com/bitcoin/bitcoin/pull/12929#pullrequestreview-111389750. In your last comment you only wrote that this ""sounded very lame"" and ""feels wrong,"" which is fine,",https://github.com/bitcoin/bitcoin/pull/12929#issuecomment-382482002,382482002,
promag,2018-04-18T20:57:42Z,"Between `wtx.GetDebit(pwallet, filter)` or `pwallet->GetDebit(wtx, filter)` I prefer the second because the call is made to the ""parent"" asking for ""child"" details. But that is my preference and your suggestion patch is for sure smaller.\n\nI was thinking removing all cache members from `CWalletTx` and have the wallet manage that cache as a whole and I think this change would simplify that.\n\",https://github.com/bitcoin/bitcoin/pull/12929#issuecomment-382527005,382527005,
jnewbery,2018-04-23T22:15:00Z,"Concept ACK, though I prefer @ryanofsky's suggestion to just pass wallet references where needed.",https://github.com/bitcoin/bitcoin/pull/12929#issuecomment-383740238,383740238,
promag,2018-10-24T15:56:53Z,Closing due to refactoring guidelines.,https://github.com/bitcoin/bitcoin/pull/12929#issuecomment-432717731,432717731,
promag,2018-04-10T01:15:30Z,Why would `GetConflicts(hash)` include the hash?,https://github.com/bitcoin/bitcoin/pull/12929#discussion_r180273668,180273668,src/wallet/wallet.cpp
ryanofsky,2018-04-11T20:27:45Z,"In commit ""refactor: Add COutput factory CWallet::MakeOutput""\n\nThis should just be a constructor. Make functions like this only make sense when they are needed for template deduction.",https://github.com/bitcoin/bitcoin/pull/12929#discussion_r180887380,180887380,src/wallet/wallet.cpp
ryanofsky,2018-04-11T20:41:53Z,"In commit ""Move CWalletTx::GetConflicts to CWallet""\n\nWould be better to inline this the one place where it is called, because having two GetConflicts overloads where one overload includes the original transaction and one overloads excludes it is pretty confusing.",https://github.com/bitcoin/bitcoin/pull/12929#discussion_r180891452,180891452,src/wallet/wallet.cpp
ryanofsky,2018-04-11T20:43:49Z,"In commit ""refactor: Remove CWallet pointer from CWalletTx\n\nThink this constructor should be marked explicit now to prevent implicit conversion.",https://github.com/bitcoin/bitcoin/pull/12929#discussion_r180891957,180891957,src/wallet/wallet.h
ryanofsky,2018-04-11T20:54:14Z,"In commit ""refactor: Remove CWallet pointer from CWalletTx\n\nIt would be really nice to drop these init methods (which are only called from constructors). Also would be nice to initialize members where they are defined https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#c-data-structures and maybe drop the code inside the init methods too.",https://github.com/bitcoin/bitcoin/pull/12929#discussion_r180894919,180894919,src/wallet/wallet.h
ryanofsky,2018-04-11T20:57:33Z,"In commit ""refactor: Move CWalletTx::GetSpendSize to CWallet""\n\nMaybe inline GetSpendSize since it is only called this one place and is one line long. (Would be good to keep the ""Get the marginal bytes..."" comment though.)",https://github.com/bitcoin/bitcoin/pull/12929#discussion_r180895862,180895862,src/wallet/wallet.cpp
promag,2018-04-11T23:36:37Z,"Agree, and I thought doing that, but decided to just move the code until someone also suggested it.",https://github.com/bitcoin/bitcoin/pull/12929#discussion_r180928823,180928823,src/wallet/wallet.cpp
promag,2018-04-11T23:39:09Z,"Made it like this because of `GetSpendSize()`, otherwise I have to pass the wallet instance to the constructor.",https://github.com/bitcoin/bitcoin/pull/12929#discussion_r180929210,180929210,src/wallet/wallet.cpp
promag,2018-04-11T23:39:32Z,Sure.,https://github.com/bitcoin/bitcoin/pull/12929#discussion_r180929274,180929274,src/wallet/wallet.h
promag,2018-04-11T23:40:26Z,"> which are only called from constructors\n\nIt's also called from `Unserialize()`, although I can check if it's necessary.\n\nEdit: IMO should be done in a follow up PR?\n\n",https://github.com/bitcoin/bitcoin/pull/12929#discussion_r180929422,180929422,src/wallet/wallet.h
Empact,2018-04-18T15:29:15Z,"How about dropping `GetSpendSize` in favor of `CalculateMaximumSignedInputSize`? This is the only call. Previously `GetSpendSize` had fewer args but now they're basically equivalent. Or dropping `CalculateMaximumSignedInputSize` for some version of `GetSpendSize`, given the former is only called in `CWallet` contexts after this change. Could also wait for later. :P",https://github.com/bitcoin/bitcoin/pull/12929#discussion_r182470265,182470265,src/wallet/wallet.cpp
