[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297141513",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-297141513",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 297141513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzE0MTUxMw==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-25T19:37:42Z",
    "updated_at": "2017-04-25T19:37:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nice feature!\r\nI agree with @laanwj about the string parsing. The `<block>:<txid>` schematics looks good at first sight, but we are using JSON and should stay with JSON and don't add another form or key/value encoding.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297141513/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297234272",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-297234272",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 297234272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzIzNDI3Mg==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T04:24:29Z",
    "updated_at": "2017-04-26T04:24:29Z",
    "author_association": "MEMBER",
    "body": "Fair enough, I'll add a blockhash argument instead. I was kind of toying with the idea of a new standard for referencing transactions which included the block height (not hash) so everyone could always find a tx presuming they had the block in question, and that thought sort of seeped in here.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297234272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297239855",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-297239855",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 297239855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzIzOTg1NQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T05:12:44Z",
    "updated_at": "2017-04-26T06:14:56Z",
    "author_association": "MEMBER",
    "body": "@gmaxwell \r\n> Allowing it work on orphan blocks is an interesting idea. I'm a little less sure about that-- I think it could allow it to return transactions that have never been validated, which would be somewhat surprising.\r\n\r\nI just realized my logic was flawed on this. I am passing the block height only to the GetTransaction method, which means it will always pick the active chain at the given height. Either I throw when the block is not in the main chain (i.e. no support for orphaned blocks) or I move the height determine logic over to validation.cpp. I am leaning towards the latter, but feedback welcome.\r\n\r\nEdit: passing  CBlockIndex to GetTransaction seems like a great way to do this. Going with that.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297239855/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297243978",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-297243978",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 297243978,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzI0Mzk3OA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T05:44:27Z",
    "updated_at": "2017-05-01T06:31:38Z",
    "author_association": "MEMBER",
    "body": "The code now works as advertised (see updated OP).\r\n\r\n[History](https://github.com/kallewoof/bitcoin/commits/gettx-with-blockhash-unsquashed):\r\n* 2017-04-25: [1 (block hash support in getrawtx)](https://github.com/kallewoof/bitcoin/commit/7f3042b2c4d4e5d9457365e4a6c8d4a57a3ec35b)\r\n* 2017-04-26: \u2192 [2\u22b11 (bh:txid to 2 params)](https://github.com/kallewoof/bitcoin/commit/e269ecd404268e68e05b632331e21eef07646b1f) \u2192 [3 (fix fVerbose parsing)](https://github.com/kallewoof/bitcoin/commit/228882777eaf04792cacd9bad3a206263f54aaba) \u2192 [4\u22b11 (switch to block index in GetTx)](https://github.com/kallewoof/bitcoin/commit/fb92653ff10c24344ff46d7ee686b32091983d90)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297243978/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298766522",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-298766522",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 298766522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODc2NjUyMg==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-02T21:27:19Z",
    "updated_at": "2017-05-02T21:27:19Z",
    "author_association": "MEMBER",
    "body": "utACK, but I think this deserves a new functional test case.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298766522/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/299185551",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-299185551",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 299185551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTE4NTU1MQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T13:31:16Z",
    "updated_at": "2017-05-04T13:31:16Z",
    "author_association": "MEMBER",
    "body": "@jnewbery I agree. Will get to work on that.\r\n\r\n[[...]](https://github.com/kallewoof/bitcoin/commits/gettx-with-blockhash-unsquashed):\r\n* 2017-05-04: [5\u22b12 (improve fVerbose)](https://github.com/kallewoof/bitcoin/commit/2a921bf5585ac72e2154b41492ab70ecd3e46241)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/299185551/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/299770203",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-299770203",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 299770203,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTc3MDIwMw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T04:28:06Z",
    "updated_at": "2017-05-08T04:28:47Z",
    "author_association": "MEMBER",
    "body": "@jnewbery Added some tests to `rawtransactions.py` for the included blockhash variant (a6b8461).\r\n\r\n[[...]](https://github.com/kallewoof/bitcoin/commits/gettx-with-blockhash-unsquashed):\r\n* 2017-05-08: [6 (tests)](https://github.com/kallewoof/bitcoin/commit/99f115cc5a0d3dc8b93b5107ed2fe933488c85e6)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/299770203/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/301623888",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-301623888",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 301623888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTYyMzg4OA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-15T22:32:21Z",
    "updated_at": "2017-05-15T22:32:21Z",
    "author_association": "MEMBER",
    "body": "Is this still needed after #8704?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/301623888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/301659483",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-301659483",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 301659483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTY1OTQ4Mw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-16T02:41:35Z",
    "updated_at": "2017-05-16T02:41:35Z",
    "author_association": "MEMBER",
    "body": "@sipa The use cases are quite different I think. #8704 lets you see all transactions in a given block. This lets you grab a transaction directly from a block without indexing.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/301659483/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/301659552",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-301659552",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 301659552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTY1OTU1Mg==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-16T02:42:06Z",
    "updated_at": "2017-05-16T02:42:06Z",
    "author_association": "MEMBER",
    "body": "@kallewoof #8704 does not require indexing either",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/301659552/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/301661539",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-301661539",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 301661539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTY2MTUzOQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-16T02:56:41Z",
    "updated_at": "2017-05-16T02:56:41Z",
    "author_association": "MEMBER",
    "body": "Yeah, sorry, I meant that this is a way to get a specific transaction if you know the block hash, whereas #8704 shows you all transactions in the entire block. You get the info, but you have to wade through stuff to get it.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/301661539/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/301678856",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-301678856",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 301678856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTY3ODg1Ng==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-16T05:25:08Z",
    "updated_at": "2017-05-16T05:25:08Z",
    "author_association": "MEMBER",
    "body": "In both cases the whole block has to be loaded from disk, and parsed, and searched linearly. The difference is whether the linear search step happens on the server or client.\r\n\r\nI think both #8704 and this can be useful, but have to agree there's only superficial difference.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/301678856/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/301713146",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-301713146",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 301713146,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTcxMzE0Ng==",
    "user": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?u=359bcbd9d9fb266369158782b3d04c7d4cf47cb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-16T08:32:10Z",
    "updated_at": "2017-05-16T08:32:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "The difference between the two is the serialization and transmission and parsing of ~5MB of JSON data vs a few hundred bytes of hex encoded data. That's a 1,000x difference on the client side, and the same absolute improvement on the server -- although as a multiplier it'd be less since as you note the server still has to parse the block from disk. That's a nontrivial performance difference.\r\n\r\n(Also, this would have greatly helped me in the past so another +1 from me.)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/301713146/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/301782636",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-301782636",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 301782636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTc4MjYzNg==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-16T13:31:07Z",
    "updated_at": "2017-05-16T13:31:07Z",
    "author_association": "MEMBER",
    "body": "Agree with @maaku - simply encoding the data into 5MB of json could be time-consuming, during which time the cs_main lock is held. Having a command to return just a single transaction from a block seems very useful.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/301782636/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306005152",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-306005152",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 306005152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjAwNTE1Mg==",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-03T22:28:15Z",
    "updated_at": "2017-06-03T22:28:15Z",
    "author_association": "MEMBER",
    "body": "Suggested message fix on my `gettx-with-blockhash-0.14` branch (cherry-pick).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306005152/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306058851",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-306058851",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 306058851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjA1ODg1MQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-04T18:44:27Z",
    "updated_at": "2017-06-04T18:44:27Z",
    "author_association": "MEMBER",
    "body": "Needs rebase.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306058851/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306077485",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-306077485",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 306077485,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjA3NzQ4NQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-05T00:19:03Z",
    "updated_at": "2017-06-05T00:19:03Z",
    "author_association": "MEMBER",
    "body": "@luke-jr Thanks for the review! I cherry-picked your commit. \r\n\r\n[[...]](https://github.com/kallewoof/bitcoin/commits/gettx-with-blockhash-unsquashed):\r\n* 2017-06-05: [7 (nits (luke-jr))](https://github.com/kallewoof/bitcoin/commit/974e4ef131c79aa78b7f7eeb759b1d729823c33e)\r\n\r\n@sipa Rebased.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306077485/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306996708",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-306996708",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 306996708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjk5NjcwOA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-08T04:43:38Z",
    "updated_at": "2017-06-08T05:10:39Z",
    "author_association": "MEMBER",
    "body": "@TheBlueMatt Thanks for the review!\r\n\r\n> Generally we try to make sure that after each individual commit, at least it builds and all tests pass.\r\n\r\nWe try to keep tests as separate commits though, so that would assume tests and code changes come in pairs (tests will fail before test commit or after test commit and before change commit, obv). That was my intention with the split here. I may have screwed up. I'll double check and/or squash as appropriate.\r\n\r\nEdit: I noticed the order was off (two fixes then two tests). Rearranged them. The commit/test pairs now pass make check individually (i.e. a43ec61 and 8f2ce52).\r\n\r\nEdit 2: [[...]](https://github.com/kallewoof/bitcoin/commits/gettx-with-blockhash-unsquashed):\r\n* 2017-06-08: [8 (nits)](https://github.com/kallewoof/bitcoin/commit/65d77eaf656547f0ee1539b01eb180968c1fee79)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306996708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/310504749",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-310504749",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 310504749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDUwNDc0OQ==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-22T21:15:38Z",
    "updated_at": "2017-06-22T21:15:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK 8f2ce52c9257392d7e6523b39a26e9697a30ca76",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/310504749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/315299193",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-315299193",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 315299193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTI5OTE5Mw==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T08:09:35Z",
    "updated_at": "2017-07-14T08:09:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Needs rebase.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/315299193/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/315319217",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-315319217",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 315319217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTMxOTIxNw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T09:48:06Z",
    "updated_at": "2017-07-14T09:48:06Z",
    "author_association": "MEMBER",
    "body": "Rebased.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/315319217/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/315320364",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-315320364",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 315320364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTMyMDM2NA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T09:53:25Z",
    "updated_at": "2017-07-14T09:53:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "a) Is there a reason why mainchain height is not supported as alternative for the blockhash? Eventually with a security of only accepting heights of a hundred blocks below the tip as a reorganisation protection (but I'd prefer to not add this protection).\r\n\r\nb) @kallewoof the idea about the standard for a transaction reference has already been worked into a BIP: https://github.com/bitcoin/bips/pull/555 (maybe we can support this \u2013 if we agree on that BIP to be worth implementing \u2013\u00a0also via `getrawtransaction`).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/315320364/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/315325449",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-315325449",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 315325449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTMyNTQ0OQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T10:18:08Z",
    "updated_at": "2017-07-14T10:18:48Z",
    "author_association": "MEMBER",
    "body": "@jonasschnelli Regarding height, I chose not to include it as it could potentially cause unexpected results when a reorg happens, but if people don't think that's an issue it should be fairly straightforward to allow for both.\r\n\r\nEdit: as for the standard, that looks exciting for sure. If it matures enough and this PR isn't merged already I may take a stab at it.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/315325449/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/315877808",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-315877808",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 315877808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTg3NzgwOA==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-17T20:45:44Z",
    "updated_at": "2017-07-17T20:45:44Z",
    "author_association": "MEMBER",
    "body": "utACK 3ec2d287e24c9cc573ead2898546499abf49db9d besides small nits.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/315877808/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/315950004",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-315950004",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 315950004,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTk1MDAwNA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-18T03:45:56Z",
    "updated_at": "2017-07-18T03:45:56Z",
    "author_association": "MEMBER",
    "body": "Addressed @jtimon nits.\r\n@jonasschnelli I added support for supplying block height instead of block hash.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/315950004/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316210666",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-316210666",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 316210666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjIxMDY2Ng==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-18T21:59:17Z",
    "updated_at": "2017-07-18T21:59:17Z",
    "author_association": "MEMBER",
    "body": "I'm not sure about allowing the height.\r\nOne can always call getblockhash if he knows the txid and block height without knowing the block hash somehow.\r\nThat's not the case for the BIP proposal @jonasschnelli refers to, since they don't know the txid anyway (only block height and tx position). I suggest we leave the BIP discussion out of this PR, which in my opinion makes sense on its own. And also leave the height option for later (or never).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316210666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316252594",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-316252594",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 316252594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjI1MjU5NA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-19T02:15:21Z",
    "updated_at": "2017-07-19T02:15:21Z",
    "author_association": "MEMBER",
    "body": "@jtimon It feels like a convenience thing that, IMO, getblock should have as well (i.e. allow both height number and block hash). I don't have a strong opinion on the subject though, and will drop the last 2 commits (height support) whenever this is ready for merging unless someone argues for block height support.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316252594/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316810151",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-316810151",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 316810151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjgxMDE1MQ==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T19:46:38Z",
    "updated_at": "2017-07-20T19:46:38Z",
    "author_association": "MEMBER",
    "body": "Well, don't have a strong opinion on adding the block height either, if more people like it, let's keep it.\r\nOr perhaps it can be proposed after this for both getrawtransaction and getblock at the same time?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316810151/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324367771",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-324367771",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 324367771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDM2Nzc3MQ==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-23T15:12:56Z",
    "updated_at": "2017-08-23T15:12:56Z",
    "author_association": "MEMBER",
    "body": "concept ACK, needs rebase/squash, would review",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324367771/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324555587",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-324555587",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 324555587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDU1NTU4Nw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-24T07:25:00Z",
    "updated_at": "2017-08-24T07:25:00Z",
    "author_association": "MEMBER",
    "body": "@instagibbs Rebased & squashed; also removed block height option for now. Will push as separate PR if desirable.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324555587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324800051",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-324800051",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 324800051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDgwMDA1MQ==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-25T01:29:08Z",
    "updated_at": "2017-08-25T01:29:08Z",
    "author_association": "MEMBER",
    "body": "I fail at counting brackets.\r\n\r\nutACK https://github.com/bitcoin/bitcoin/pull/10275/commits/440123fb8c7196a7ee209495f02b2f7c0deaa0bb",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324800051/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326853357",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-326853357",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 326853357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjg1MzM1Nw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-04T02:37:36Z",
    "updated_at": "2017-09-04T05:42:47Z",
    "author_association": "MEMBER",
    "body": "@jnewbery Thanks for the review! I think I've addressed all your comments.\r\n\r\nEdit: Actually I forgot about the commit merge. I try to keep tests and code changes as separate commits. Why would you want it to succeed between the test update? (Or am I confused about what you're asking?)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326853357/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327003388",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-327003388",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 327003388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzAwMzM4OA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-04T17:07:38Z",
    "updated_at": "2017-09-04T17:07:38Z",
    "author_association": "MEMBER",
    "body": "> I try to keep tests and code changes as separate commits. Why would you want it to succeed between the test update? (Or am I confused about what you're asking?)\r\n\r\nI think the principal is that each individual commit should be at least internally consistent (should build and pass its own tests). Your first commit updates the product code so the returned error changes, and your second commit updates the test code to pass with the new error string. That means that if I run the tests after the first commit they'll fail.\r\n\r\nI understand the desire to structure the commits in a way that tells a story, but this breaks tools like git bisect that rely on commits to be internally consistent.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327003388/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327048248",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-327048248",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 327048248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzA0ODI0OA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-05T01:27:29Z",
    "updated_at": "2017-09-05T01:27:29Z",
    "author_association": "MEMBER",
    "body": "@jnewbery You can `git bisect skip` if you land on a commit squeezed in between tests. I don't really agree with squashing test updates and code changes together, personally. That's how I've always done it, anyway.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327048248/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327091375",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-327091375",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 327091375,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzA5MTM3NQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-05T07:14:16Z",
    "updated_at": "2017-09-05T07:14:16Z",
    "author_association": "MEMBER",
    "body": "I agree with @jnewbery, one commit should not break the code, tests including. If you revert that commit, codes stays green. IMO makes reviewing easier.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327091375/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327321920",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-327321920",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 327321920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzMyMTkyMA==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-05T22:30:26Z",
    "updated_at": "2017-09-05T22:30:26Z",
    "author_association": "MEMBER",
    "body": "I agree individual commits should never break the tests ideally. That doesn't mean that you can't introduce new functionality and its new tests in separated commits when that's not the case.\r\nNeeds rebase again.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327321920/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327330124",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-327330124",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 327330124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzMzMDEyNA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-05T23:20:35Z",
    "updated_at": "2017-09-05T23:20:35Z",
    "author_association": "MEMBER",
    "body": "Last two commits look good. For the pruning error, I think you can error out earlier by re-using the pruned test from `getblock`:\r\n\r\n```\r\n     if (fHavePruned && !(pblockindex->nStatus & BLOCK_HAVE_DATA) && pblockindex->nTx > 0)\r\n        throw JSONRPCError(RPC_MISC_ERROR, \"Block not available (pruned data)\");\r\n```\r\n\r\n> I don't really agree with squashing test updates and code changes together, personally.\r\n\r\nok. I think both ways are valid, and I've come across both before. I'm not sure if this project has a preferred style.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327330124/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327359781",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-327359781",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 327359781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzM1OTc4MQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-06T02:52:48Z",
    "updated_at": "2017-09-06T02:52:48Z",
    "author_association": "MEMBER",
    "body": "I'm merging those commits as it's not new functionality but just a fix that changes an error message.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327359781/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327359819",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-327359819",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 327359819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzM1OTgxOQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-06T02:53:12Z",
    "updated_at": "2017-09-06T02:53:12Z",
    "author_association": "MEMBER",
    "body": "@luke-jr Nice!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327359819/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331624208",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-331624208",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 331624208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTYyNDIwOA==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-23T10:05:06Z",
    "updated_at": "2017-09-23T10:05:06Z",
    "author_association": "MEMBER",
    "body": "re-utACK 300a5f15d54484691d47eb5ec23acde6d82bfda1\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331624208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349160332",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-349160332",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 349160332,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTE2MDMzMg==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T01:02:43Z",
    "updated_at": "2017-12-05T01:03:17Z",
    "author_association": "MEMBER",
    "body": "I realize I'm very late with this, so this is just for consideration and not an objection to this PR.\r\n\r\nI believe `getrawtransaction` is already a weird mixed bag of semantics (it works when a transaction is confirmed but at least one output is not yet spent by a confirmed transaction, or if the transaction is unconfirmed, or if txindex is available for everything but the genesis block). Adding yet another combination that works in some cases will only further the difficulty of explaining it.\r\n\r\nIdeally, I think this RPC should be replaced with a `lookuprawtransaction` (or so) which only works when `-txindex` is enabled. In case you only know a transaction is unconfirmed, use `getmempoolentry` which already exists. This functionality provided here should IMHO just be a separate RPC.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349160332/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349162918",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-349162918",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 349162918,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTE2MjkxOA==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T01:17:39Z",
    "updated_at": "2017-12-05T01:17:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Dear God, this PR is 7 months old. The behavior changes are all well-documented and it's a very useful feature, there's gotta be a statue of limitations on concept objections.\n\nOn December 4, 2017 8:02:52 PM EST, Pieter Wuille <notifications@github.com> wrote:\n>I realize I'm very late with this, so this is just for consideration\n>and not an objection to this PR.\n>\n>I believe `getrawtransaction` is already a weird mixed bag of semantics\n>(it works when a transaction is confirmed but at least one output is\n>not yet spent by a confirmed transaction, or if the transaction is\n>unconfirmed, or if txindex is available for everything but the genesis\n>block). Adding yet another combination that works will only further the\n>difficulty of explaining it.\n>\n>Ideally, I think this RPC should be replaced with a\n>`lookuprawtransaction` (or so) which only works when `-txindex` is\n>enabled. In case you only know a transaction is unconfirmed, use\n>`getmempoolentry` which already exists. This functionality provided\n>here should IMHO just be a separate RPC.\n>\n>-- \n>You are receiving this because you were mentioned.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-349160332\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349162918/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349164909",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-349164909",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 349164909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTE2NDkwOQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T01:28:24Z",
    "updated_at": "2017-12-05T01:29:54Z",
    "author_association": "MEMBER",
    "body": "I'm explicitly not objecting in any way, just offering a view to consider.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349164909/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349165468",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-349165468",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 349165468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTE2NTQ2OA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T01:31:22Z",
    "updated_at": "2017-12-05T01:32:07Z",
    "author_association": "MEMBER",
    "body": "I agree `getrawtransaction` is very confusing until you understand its limitations. I'll gladly work on streamlining it into potentially two or more RPC calls post-merge. Biggest concern is backwards compatibility and (alternatively) bloat.\r\n\r\nEdit: I do think the confusion will be decreased when users are given the option of providing a block hash, as there was *no way* to get the tx before this PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349165468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349171439",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-349171439",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 349171439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTE3MTQzOQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T02:05:45Z",
    "updated_at": "2017-12-05T02:05:45Z",
    "author_association": "MEMBER",
    "body": "@promag Thanks for the review! I think I addressed all your comments.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349171439/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349184096",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-349184096",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 349184096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTE4NDA5Ng==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T03:28:27Z",
    "updated_at": "2017-12-05T03:28:27Z",
    "author_association": "MEMBER",
    "body": "@promag Added test for unset `in_active_chain`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349184096/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349396767",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-349396767",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 349396767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTM5Njc2Nw==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T18:29:53Z",
    "updated_at": "2017-12-05T18:29:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK 434526aba680cb73208e018a02827d51a71cfff6",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349396767/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349509602",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-349509602",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 349509602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTUwOTYwMg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T02:22:20Z",
    "updated_at": "2017-12-06T02:22:20Z",
    "author_association": "MEMBER",
    "body": "Sorry for the sloppy review. I messed up the parameter order when testing. Also gcc complains about my nit-fix.\r\n\r\nTested ACK now:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nTested ACK 434526aba680cb73208e018a02827d51a71cfff6\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQIcBAEBCgAGBQJaJ1PQAAoJENLqSFDnUoslonMQAJz8bVoePuyYUgOHkbGIGemj\r\n4yUyywvp34A4BocYrczH9Im6q+/VBoLrxd+7BqcrhWclHC2G7tvVircgXS/O/RHE\r\nSrEjox5dpLnQ5vW2Ik1hZkdlWvJvn6KBPRqLxZ8qLVFE2ym9BapDhZy33kePh4If\r\nBPBalz7U/1rMz2p2a7yKLo26+MArSwt9kiGebuzgUeaUREjn3gQhaouo4mGSVN59\r\n3Fc1zw3TS1zRuXek/EGL6uuRNQsZZkS08maHtZcsigtwS9drrekrPgx2LswvqGoN\r\nHNkF3AkVK2RZ96cvyG1DbGPG8PkY+EQxO97de2Jlq8/8qQ7wu/BrwJvhjGpdoqGI\r\nSL2pA9KgPfWDTDr13Tcavm+iGk+SbI99Hk+MgsyRArplPJYUtTi43WID/uRaydyE\r\nmCykCPFHkDehVIb8FL/MxSCyBzqJxn4IGXL/Q4A+BbbEYgu1Yi8xtE1o/sCqHyvD\r\nqoKlj1ns9JhNOIpdZNhaWvVb30VuugcZh1/I7CE4NJINdaP7oYKLS0JCiBjwxLKN\r\n6lvBYfoJmNLOvEOiB5DGeQEtnU/mBeGrDgoRddNpnKWRQMOIKi53aKvmeJ4XNw0T\r\nUcIAxaj6c+lZNKYeedePcuRKapqIW9fEQ9IAI8+duRisl6TBcn7/0bJHjWLgy062\r\nNtvMJ3zBCmEhX3Vs4km5\r\n=6+iY\r\n-----END PGP SIGNATURE-----\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349509602/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349521253",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-349521253",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 349521253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTUyMTI1Mw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T03:30:38Z",
    "updated_at": "2017-12-06T03:30:38Z",
    "author_association": "MEMBER",
    "body": "@jtimon @jnewbery \r\nMind to re-ACK?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349521253/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349554584",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-349554584",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 349554584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTU1NDU4NA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T07:09:43Z",
    "updated_at": "2017-12-06T07:09:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK 434526aba680cb73208e018a02827d51a71cfff6",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349554584/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/367536021",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-367536021",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 367536021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzUzNjAyMQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-22T01:24:47Z",
    "updated_at": "2018-02-22T01:24:47Z",
    "author_association": "MEMBER",
    "body": "For reference, This was proposed (and closed) in #2421.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/367536021/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/367563299",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-367563299",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
    "id": 367563299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzU2MzI5OQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-22T04:23:09Z",
    "updated_at": "2018-02-22T04:23:09Z",
    "author_association": "MEMBER",
    "body": "@promag I believe the concerns raised in #2421 are not relevant anymore / in this implementation.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/367563299/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113172602",
    "pull_request_review_id": 34538670,
    "id": 113172602,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMzE3MjYwMg==",
    "diff_hunk": "@@ -192,11 +195,34 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"myblockhash:mytxid\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"myblockhash:mytxid\\\", true\")\n         );\n \n     LOCK(cs_main);\n \n-    uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    uint256 hash;\n+    int64_t blockHeight = -1;\n+    bool inMainChain = true;\n+    auto p = request.params[0].get_str().find(':');",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 42,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "221e725814b9bba82c3f0f37ba3c4efea06038ea",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This functionality could come in useful.\r\n\r\nAs for the API I prefer to not do any string combining/parsing here, this makes the API less clean to work with at least in my experience. I'd prefer to add an optional (can be null or missing) `fromblock` argument.",
    "created_at": "2017-04-25T11:47:12Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r113172602",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113172602"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r113172602"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113172602/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 207,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114429566",
    "pull_request_review_id": 35895271,
    "id": 114429566,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDQyOTU2Ng==",
    "diff_hunk": "@@ -192,34 +195,44 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool inMainChain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockIndex = NULL;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (request.params.size() > 1) {\n         if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n+            fVerbose = (request.params[1].get_int() != 0);\n+        } else if (request.params[1].isBool()) {",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 54,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "23be83e143b29fc6f478b37218cc4e20ebe2c35a",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: You can replace this and the next three lines with:\r\n\r\n```c++\r\n} else {\r\n    fVerbose = (request.params[1].get_bool());\r\n}\r\n```\r\n\r\nsince `get_bool()` does the type testing for you and throws the JSONRPCError if the type isn't a VBOOL.\r\n\r\nUp to you whether you think that's clearer.",
    "created_at": "2017-05-02T21:26:44Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r114429566",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114429566"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r114429566"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114429566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 213,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114771044",
    "pull_request_review_id": 36265827,
    "id": 114771044,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDc3MTA0NA==",
    "diff_hunk": "@@ -192,34 +195,44 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool inMainChain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockIndex = NULL;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (request.params.size() > 1) {\n         if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n+            fVerbose = (request.params[1].get_int() != 0);\n+        } else if (request.params[1].isBool()) {",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 54,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "23be83e143b29fc6f478b37218cc4e20ebe2c35a",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ohh, good point! Thanks.\r\nEdit: I don't want it to throw for `null` values though. ",
    "created_at": "2017-05-04T13:23:22Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r114771044",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114771044"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r114771044"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114771044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 213,
    "side": "RIGHT",
    "in_reply_to_id": 114429566
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114771638",
    "pull_request_review_id": 36266506,
    "id": 114771638,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDc3MTYzOA==",
    "diff_hunk": "@@ -192,34 +195,44 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool inMainChain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockIndex = NULL;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (request.params.size() > 1) {\n         if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n+            fVerbose = (request.params[1].get_int() != 0);\n+        } else if (request.params[1].isBool()) {",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 54,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "23be83e143b29fc6f478b37218cc4e20ebe2c35a",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "So I end up with\r\n```C++\r\n        if (request.params[1].isNum()) {\r\n            fVerbose = (request.params[1].get_int() != 0);\r\n        } else if (!request.params[1].isNull()) {\r\n            fVerbose = (request.params[1].get_bool());\r\n        }\r\n```",
    "created_at": "2017-05-04T13:26:05Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r114771638",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114771638"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r114771638"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114771638/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 213,
    "side": "RIGHT",
    "in_reply_to_id": 114429566
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/116580150",
    "pull_request_review_id": 38211445,
    "id": 116580150,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNjU4MDE1MA==",
    "diff_hunk": "@@ -64,6 +64,20 @@ def run_test(self):\n         # This will raise an exception since there are missing inputs\n         assert_raises_jsonrpc(-25, \"Missing inputs\", self.nodes[2].sendrawtransaction, rawtx['hex'])\n \n+        ############################\n+        # getrawtx with block hash #\n+        ############################\n+\n+        # make a tx by sending then generate 2 blocks; block1 has the tx in it,\n+        # presumably\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        [ block1, block2 ] = self.nodes[2].generate(2)",
    "path": "test/functional/rawtransactions.py",
    "position": null,
    "original_position": 11,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "a6b84618ad04dccc628aa4905fced4784a62895a",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: no need for brackets here. The following should do:\r\n\r\n`block1, block2 = self.nodes[2].generate(2)`",
    "created_at": "2017-05-15T19:28:59Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r116580150",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/116580150"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r116580150"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/116580150/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 74,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/116580435",
    "pull_request_review_id": 38211445,
    "id": 116580435,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNjU4MDQzNQ==",
    "diff_hunk": "@@ -64,6 +64,20 @@ def run_test(self):\n         # This will raise an exception since there are missing inputs\n         assert_raises_jsonrpc(-25, \"Missing inputs\", self.nodes[2].sendrawtransaction, rawtx['hex'])\n \n+        ############################\n+        # getrawtx with block hash #\n+        ############################\n+\n+        # make a tx by sending then generate 2 blocks; block1 has the tx in it,\n+        # presumably\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        [ block1, block2 ] = self.nodes[2].generate(2)\n+        self.sync_all()\n+        # We should be able to get the raw transaction by providing the correct block\n+        assert self.nodes[0].getrawtransaction(tx, True, block1)",
    "path": "test/functional/rawtransactions.py",
    "position": null,
    "original_position": 14,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "a6b84618ad04dccc628aa4905fced4784a62895a",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: I think it's better to assert on the actual value here (ie verify that the getrawtransaction returned the correct transaction rather than returned anything). The following should do that:\r\n\r\n`assert_equal(self.nodes[0].getrawtransaction(tx, True, block1)['txid'], tx)`",
    "created_at": "2017-05-15T19:30:21Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r116580435",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/116580435"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r116580435"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/116580435/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 77,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/116656164",
    "pull_request_review_id": 38292688,
    "id": 116656164,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNjY1NjE2NA==",
    "diff_hunk": "@@ -64,6 +64,20 @@ def run_test(self):\n         # This will raise an exception since there are missing inputs\n         assert_raises_jsonrpc(-25, \"Missing inputs\", self.nodes[2].sendrawtransaction, rawtx['hex'])\n \n+        ############################\n+        # getrawtx with block hash #\n+        ############################\n+\n+        # make a tx by sending then generate 2 blocks; block1 has the tx in it,\n+        # presumably\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        [ block1, block2 ] = self.nodes[2].generate(2)\n+        self.sync_all()\n+        # We should be able to get the raw transaction by providing the correct block\n+        assert self.nodes[0].getrawtransaction(tx, True, block1)",
    "path": "test/functional/rawtransactions.py",
    "position": null,
    "original_position": 14,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "a6b84618ad04dccc628aa4905fced4784a62895a",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@jnewbery Good points, thanks. Addressed!",
    "created_at": "2017-05-16T05:12:43Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r116656164",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/116656164"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r116656164"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/116656164/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 77,
    "side": "RIGHT",
    "in_reply_to_id": 116580435
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119996123",
    "pull_request_review_id": 41928927,
    "id": 119996123,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTk5NjEyMw==",
    "diff_hunk": "@@ -124,12 +124,13 @@ void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry)\n \n UniValue getrawtransaction(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n         throw std::runtime_error(\n-            \"getrawtransaction \\\"txid\\\" ( verbose )\\n\"\n+            \"getrawtransaction \\\"txid\\\" ( verbose \\\"blockhash\\\" )\\n\"\n \n             \"\\nNOTE: By default this function only works for mempool transactions. If the -txindex option is\\n\"\n-            \"enabled, it also works for blockchain transactions.\\n\"\n+            \"enabled, it also works for blockchain transactions. If the block hash is known, it can be provided\\n\"\n+            \"for nodes without -txindex.\\n\"",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "8f84e8c6e1e1b357c7080ac1830d24d057b07dc0",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should probably mention that it MUST be in that block in this case...",
    "created_at": "2017-06-03T22:11:33Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r119996123",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119996123"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r119996123"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119996123/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 133,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119996146",
    "pull_request_review_id": 41928927,
    "id": 119996146,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTk5NjE0Ng==",
    "diff_hunk": "@@ -192,34 +195,42 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool inMainChain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockIndex = NULL;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (request.params.size() > 1) {\n         if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n+            fVerbose = (request.params[1].get_int() != 0);\n+        } else if (!request.params[1].isNull()) {\n+            fVerbose = (request.params[1].get_bool());\n         }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+    }\n+\n+    if (request.params.size() > 2 && !request.params[2].isNull()) {\n+        uint256 blockHash = ParseHashV(request.params[2], \"parameter 3\");\n+        if (!blockHash.IsNull()) {\n+            BlockMap::iterator it = mapBlockIndex.find(blockHash);\n+            if (it == mapBlockIndex.end()) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block hash not found in chain\");",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 67,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "8f84e8c6e1e1b357c7080ac1830d24d057b07dc0",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Remove \"in chain\". Maybe \"in database\"?",
    "created_at": "2017-06-03T22:13:56Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r119996146",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119996146"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r119996146"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119996146/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 223,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119996169",
    "pull_request_review_id": 41928927,
    "id": 119996169,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTk5NjE2OQ==",
    "diff_hunk": "@@ -139,12 +140,14 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"      (string, required) The transaction id\\n\"\n             \"2. verbose       (bool, optional, default=false) If false, return a string, otherwise return a json object\\n\"\n+            \"3. \\\"blockhash\\\" (string, optional) The block in which to look for the transaction\\n\"\n \n             \"\\nResult (if verbose is not set or set to false):\\n\"\n             \"\\\"data\\\"      (string) The serialized, hex-encoded data for 'txid'\\n\"\n \n             \"\\nResult (if verbose is set to true):\\n\"\n             \"{\\n\"\n+            \"  \\\"inMainChain\\\": b,       (bool) Whether transaction is in the main chain or not. Only visible when specifying block hash\\n\"",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 28,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "8f84e8c6e1e1b357c7080ac1830d24d057b07dc0",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Whether *the block specified* is in the main chain or not... This could be false with the tx being still in the main chain!",
    "created_at": "2017-06-03T22:14:43Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r119996169",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119996169"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r119996169"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119996169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 150,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120715589",
    "pull_request_review_id": 42702171,
    "id": 120715589,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMDcxNTU4OQ==",
    "diff_hunk": "@@ -130,34 +134,42 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool inMainChain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockIndex = NULL;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (request.params.size() > 1) {\n         if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n+            fVerbose = (request.params[1].get_int() != 0);\n+        } else if (!request.params[1].isNull()) {\n+            fVerbose = (request.params[1].get_bool());\n         }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+    }\n+\n+    if (request.params.size() > 2 && !request.params[2].isNull()) {\n+        uint256 blockHash = ParseHashV(request.params[2], \"parameter 3\");",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 64,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "caa27c1d5d9491f4e0e51ae88874dbcf0f4d6be4",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Hmm? Shouldn't we use the parameter's name here instead of \"parameter 3\"?",
    "created_at": "2017-06-07T18:57:08Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r120715589",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120715589"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r120715589"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120715589/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 154,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120717627",
    "pull_request_review_id": 42702171,
    "id": 120717627,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMDcxNzYyNw==",
    "diff_hunk": "@@ -77,12 +79,14 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"      (string, required) The transaction id\\n\"\n             \"2. verbose       (bool, optional, default=false) If false, return a string, otherwise return a json object\\n\"\n+            \"3. \\\"blockhash\\\" (string, optional) The block in which to look for the transaction\\n\"\n \n             \"\\nResult (if verbose is not set or set to false):\\n\"\n             \"\\\"data\\\"      (string) The serialized, hex-encoded data for 'txid'\\n\"\n \n             \"\\nResult (if verbose is set to true):\\n\"\n             \"{\\n\"\n+            \"  \\\"inMainChain\\\": b,       (bool) Whether specified block is in the main chain or not\\n\"",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "caa27c1d5d9491f4e0e51ae88874dbcf0f4d6be4",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Hmm, maybe say \"if blockhash is specified\" or otherwise mention this wont appear unless a blockhash is provided. Even better, fill it out if GetTransaction returns the blockhash cause it found it via UTXO/txindex.",
    "created_at": "2017-06-07T19:06:07Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r120717627",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120717627"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r120717627"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120717627/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 89,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120718991",
    "pull_request_review_id": 42702171,
    "id": 120718991,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMDcxODk5MQ==",
    "diff_hunk": "@@ -62,12 +62,14 @@ void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry)\n \n UniValue getrawtransaction(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n         throw std::runtime_error(\n-            \"getrawtransaction \\\"txid\\\" ( verbose )\\n\"\n+            \"getrawtransaction \\\"txid\\\" ( verbose \\\"blockhash\\\" )\\n\"\n \n             \"\\nNOTE: By default this function only works for mempool transactions. If the -txindex option is\\n\"\n-            \"enabled, it also works for blockchain transactions.\\n\"\n+            \"enabled, it also works for blockchain transactions. If the block hash is known, it can be provided\\n\"\n+            \"for nodes without -txindex, in which case the transaction will only be found if it is in that\\n\"",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "caa27c1d5d9491f4e0e51ae88874dbcf0f4d6be4",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "grammar nit: this reads funny to me, and could be a bit more explicit. Maybe:\r\n\r\n\"If the block which contains the transaction is known, its hash can be provided even for nodes without -txindex.\"\r\n\"Note that if a blockhash is provided, only it will be searched and if the transaction is in mempool, other blocks, or if this node does not have the given block available, the transaction will not be found.\"",
    "created_at": "2017-06-07T19:12:31Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r120718991",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120718991"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r120718991"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120718991/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 71,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120719169",
    "pull_request_review_id": 42702171,
    "id": 120719169,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMDcxOTE2OQ==",
    "diff_hunk": "@@ -130,34 +134,42 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool inMainChain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockIndex = NULL;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (request.params.size() > 1) {\n         if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n+            fVerbose = (request.params[1].get_int() != 0);\n+        } else if (!request.params[1].isNull()) {\n+            fVerbose = (request.params[1].get_bool());\n         }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+    }\n+\n+    if (request.params.size() > 2 && !request.params[2].isNull()) {\n+        uint256 blockHash = ParseHashV(request.params[2], \"parameter 3\");\n+        if (!blockHash.IsNull()) {\n+            BlockMap::iterator it = mapBlockIndex.find(blockHash);\n+            if (it == mapBlockIndex.end()) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block hash not found\");\n             }\n-        }\n-        else {\n-            throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid type provided. Verbose parameter must be a boolean.\");\n+            blockIndex = it->second;\n+            inMainChain = (chainActive[blockIndex->nHeight] == blockIndex);\n         }\n     }\n \n     CTransactionRef tx;\n     uint256 hashBlock;\n-    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(fTxIndex ? \"No such mempool or blockchain transaction\"\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true, blockIndex))\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(fTxIndex || blockIndex ? \"No such mempool or blockchain transaction\"",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 83,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "caa27c1d5d9491f4e0e51ae88874dbcf0f4d6be4",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe further update this error message, eg if (blockIndex) \"No such transaction found in the provided block\".",
    "created_at": "2017-06-07T19:13:25Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r120719169",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120719169"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r120719169"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120719169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 172,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120798213",
    "pull_request_review_id": 42790097,
    "id": 120798213,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMDc5ODIxMw==",
    "diff_hunk": "@@ -62,12 +62,14 @@ void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry)\n \n UniValue getrawtransaction(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n         throw std::runtime_error(\n-            \"getrawtransaction \\\"txid\\\" ( verbose )\\n\"\n+            \"getrawtransaction \\\"txid\\\" ( verbose \\\"blockhash\\\" )\\n\"\n \n             \"\\nNOTE: By default this function only works for mempool transactions. If the -txindex option is\\n\"\n-            \"enabled, it also works for blockchain transactions.\\n\"\n+            \"enabled, it also works for blockchain transactions. If the block hash is known, it can be provided\\n\"\n+            \"for nodes without -txindex, in which case the transaction will only be found if it is in that\\n\"",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "caa27c1d5d9491f4e0e51ae88874dbcf0f4d6be4",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, that looks better yeah. Adding with minor tweaks.\r\n```C++\r\n            \"\\nNOTE: By default this function only works for mempool transactions. If the -txindex option is\\n\"\r\n            \"enabled, it also works for blockchain transactions. If the block which contains the transaction\\n\"\r\n            \"is known, its hash can be provided even for nodes without -txindex. Note that if a blockhash is\\n\"\r\n            \"provided, only that block will be searched and if the transaction is in the mempool or other\\n\"\r\n            \"blocks, or if this node does not have the given block available, the transaction will not be found.\\n\"\r\n```\r\n",
    "created_at": "2017-06-08T04:34:31Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r120798213",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120798213"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r120798213"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120798213/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 71,
    "side": "RIGHT",
    "in_reply_to_id": 120718991
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120798376",
    "pull_request_review_id": 42790266,
    "id": 120798376,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMDc5ODM3Ng==",
    "diff_hunk": "@@ -77,12 +79,14 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"      (string, required) The transaction id\\n\"\n             \"2. verbose       (bool, optional, default=false) If false, return a string, otherwise return a json object\\n\"\n+            \"3. \\\"blockhash\\\" (string, optional) The block in which to look for the transaction\\n\"\n \n             \"\\nResult (if verbose is not set or set to false):\\n\"\n             \"\\\"data\\\"      (string) The serialized, hex-encoded data for 'txid'\\n\"\n \n             \"\\nResult (if verbose is set to true):\\n\"\n             \"{\\n\"\n+            \"  \\\"inMainChain\\\": b,       (bool) Whether specified block is in the main chain or not\\n\"",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "caa27c1d5d9491f4e0e51ae88874dbcf0f4d6be4",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I was sure I did, but guess not:\r\n```C++\r\n            \"  \\\"inMainChain\\\": b,     (bool) Whether specified block is in the main chain or not (only present with explicit \\\"blockhash\\\" argument)\\n\"\r\n```\r\nI like the idea of including when able but will keep it out of this PR for now.",
    "created_at": "2017-06-08T04:36:44Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r120798376",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120798376"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r120798376"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120798376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 89,
    "side": "RIGHT",
    "in_reply_to_id": 120717627
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120798462",
    "pull_request_review_id": 42790352,
    "id": 120798462,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMDc5ODQ2Mg==",
    "diff_hunk": "@@ -130,34 +134,42 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool inMainChain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockIndex = NULL;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (request.params.size() > 1) {\n         if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n+            fVerbose = (request.params[1].get_int() != 0);\n+        } else if (!request.params[1].isNull()) {\n+            fVerbose = (request.params[1].get_bool());\n         }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+    }\n+\n+    if (request.params.size() > 2 && !request.params[2].isNull()) {\n+        uint256 blockHash = ParseHashV(request.params[2], \"parameter 3\");",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 64,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "caa27c1d5d9491f4e0e51ae88874dbcf0f4d6be4",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The general tendency seems to be to identify the parameter index so I stuck with that. I agree it may be better to be more descriptive though...",
    "created_at": "2017-06-08T04:37:52Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r120798462",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120798462"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r120798462"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120798462/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 154,
    "side": "RIGHT",
    "in_reply_to_id": 120715589
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120798796",
    "pull_request_review_id": 42790704,
    "id": 120798796,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMDc5ODc5Ng==",
    "diff_hunk": "@@ -130,34 +134,42 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool inMainChain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockIndex = NULL;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (request.params.size() > 1) {\n         if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n+            fVerbose = (request.params[1].get_int() != 0);\n+        } else if (!request.params[1].isNull()) {\n+            fVerbose = (request.params[1].get_bool());\n         }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+    }\n+\n+    if (request.params.size() > 2 && !request.params[2].isNull()) {\n+        uint256 blockHash = ParseHashV(request.params[2], \"parameter 3\");\n+        if (!blockHash.IsNull()) {\n+            BlockMap::iterator it = mapBlockIndex.find(blockHash);\n+            if (it == mapBlockIndex.end()) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block hash not found\");\n             }\n-        }\n-        else {\n-            throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid type provided. Verbose parameter must be a boolean.\");\n+            blockIndex = it->second;\n+            inMainChain = (chainActive[blockIndex->nHeight] == blockIndex);\n         }\n     }\n \n     CTransactionRef tx;\n     uint256 hashBlock;\n-    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(fTxIndex ? \"No such mempool or blockchain transaction\"\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true, blockIndex))\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(fTxIndex || blockIndex ? \"No such mempool or blockchain transaction\"",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 83,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "caa27c1d5d9491f4e0e51ae88874dbcf0f4d6be4",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah, I wanted to avoid `?:?:`. Rewritten as:\r\n```C++\r\n    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true, blockIndex)) {\r\n        std::string errmsg;\r\n        if (blockIndex) {\r\n            errmsg = \"No such transaction found in the provided block\";\r\n        } else {\r\n            errmsg = fTxIndex\r\n              ? \"No such mempool or blockchain transaction\"\r\n              : \"No such mempool transaction. Use -txindex to enable blockchain transaction queries\";\r\n        }\r\n        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, errmsg + \". Use gettransaction for wallet transactions.\");\r\n    }\r\n```\r\n",
    "created_at": "2017-06-08T04:41:33Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r120798796",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120798796"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r120798796"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120798796/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 172,
    "side": "RIGHT",
    "in_reply_to_id": 120719169
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/127816715",
    "pull_request_review_id": 50438104,
    "id": 127816715,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzgxNjcxNQ==",
    "diff_hunk": "@@ -76,12 +79,14 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"      (string, required) The transaction id\\n\"\n             \"2. verbose       (bool, optional, default=false) If false, return a string, otherwise return a json object\\n\"\n+            \"3. \\\"blockhash\\\" (string, optional) The block in which to look for the transaction\\n\"\n \n             \"\\nResult (if verbose is not set or set to false):\\n\"\n             \"\\\"data\\\"      (string) The serialized, hex-encoded data for 'txid'\\n\"\n \n             \"\\nResult (if verbose is set to true):\\n\"\n             \"{\\n\"\n+            \"  \\\"inMainChain\\\": b,     (bool) Whether specified block is in the main chain or not (only present with explicit \\\"blockhash\\\" argument)\\n\"",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 30,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "3ec2d287e24c9cc573ead2898546499abf49db9d",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This may be confused with Params().NetworkIDString() == \"main\" (kind of like we do with \"testnet\" in getinfo).\r\nCan we rename to \"inActiveChain\" or something of the sort?",
    "created_at": "2017-07-17T20:30:31Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r127816715",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/127816715"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r127816715"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/127816715/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 89,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/127818832",
    "pull_request_review_id": 50440382,
    "id": 127818832,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzgxODgzMg==",
    "diff_hunk": "@@ -900,43 +900,44 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n }\n \n /** Return transaction in txOut, and if it was found inside a block, its hash is placed in hashBlock */\n-bool GetTransaction(const uint256 &hash, CTransactionRef &txOut, const Consensus::Params& consensusParams, uint256 &hashBlock, bool fAllowSlow)\n+bool GetTransaction(const uint256 &hash, CTransactionRef &txOut, const Consensus::Params& consensusParams, uint256 &hashBlock, bool fAllowSlow, CBlockIndex* blockIndex)\n {\n-    CBlockIndex *pindexSlow = NULL;\n+    CBlockIndex* pindexSlow = blockIndex;\n \n     LOCK(cs_main);\n \n-    CTransactionRef ptx = mempool.get(hash);\n-    if (ptx)\n-    {\n-        txOut = ptx;\n-        return true;\n-    }\n+    if (!blockIndex) {",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "3ec2d287e24c9cc573ead2898546499abf49db9d",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Perhaps the diff can be less disruptive by moving everything inside ```if (!blockIndex) {...}``` to a new static function defined right above instead of indenting all of it?",
    "created_at": "2017-07-17T20:38:45Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r127818832",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/127818832"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r127818832"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/127818832/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 939,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/127875966",
    "pull_request_review_id": 50501504,
    "id": 127875966,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzg3NTk2Ng==",
    "diff_hunk": "@@ -900,43 +900,44 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n }\n \n /** Return transaction in txOut, and if it was found inside a block, its hash is placed in hashBlock */\n-bool GetTransaction(const uint256 &hash, CTransactionRef &txOut, const Consensus::Params& consensusParams, uint256 &hashBlock, bool fAllowSlow)\n+bool GetTransaction(const uint256 &hash, CTransactionRef &txOut, const Consensus::Params& consensusParams, uint256 &hashBlock, bool fAllowSlow, CBlockIndex* blockIndex)\n {\n-    CBlockIndex *pindexSlow = NULL;\n+    CBlockIndex* pindexSlow = blockIndex;\n \n     LOCK(cs_main);\n \n-    CTransactionRef ptx = mempool.get(hash);\n-    if (ptx)\n-    {\n-        txOut = ptx;\n-        return true;\n-    }\n+    if (!blockIndex) {",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "3ec2d287e24c9cc573ead2898546499abf49db9d",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm not a huge fan of changing code just to make diffs smaller, and as I mention above, you can put `?w=1` to get diff without indentation changes.",
    "created_at": "2017-07-18T03:32:33Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r127875966",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/127875966"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r127875966"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/127875966/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 939,
    "side": "RIGHT",
    "in_reply_to_id": 127818832
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135016562",
    "pull_request_review_id": 58379205,
    "id": 135016562,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTAxNjU2Mg==",
    "diff_hunk": "@@ -76,12 +79,14 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"      (string, required) The transaction id\\n\"\n             \"2. verbose       (bool, optional, default=false) If false, return a string, otherwise return a json object\\n\"\n+            \"3. \\\"blockhash\\\" (string, optional) The block in which to look for the transaction\\n\"\n \n             \"\\nResult (if verbose is not set or set to false):\\n\"\n             \"\\\"data\\\"      (string) The serialized, hex-encoded data for 'txid'\\n\"\n \n             \"\\nResult (if verbose is set to true):\\n\"\n             \"{\\n\"\n+            \"  \\\"inActiveChain\\\": b,   (bool) Whether specified block is in the active chain or not (only present with explicit \\\"blockhash\\\" argument)\\n\"",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 30,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "cc75dab930d5fb340e8cf9948e3caf3284320d3c",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "maybe `in_active_chain`? I'm parsing this as \"inactive chain\"",
    "created_at": "2017-08-24T13:38:59Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r135016562",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135016562"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r135016562"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135016562/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 89,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135016993",
    "pull_request_review_id": 58379205,
    "id": 135016993,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTAxNjk5Mw==",
    "diff_hunk": "@@ -129,41 +134,53 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool inActiveChain = true;",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 44,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "cc75dab930d5fb340e8cf9948e3caf3284320d3c",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`in_active_chain` to conform to new style guide and make easier to read.",
    "created_at": "2017-08-24T13:40:38Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r135016993",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135016993"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r135016993"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135016993/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 143,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135018818",
    "pull_request_review_id": 58379205,
    "id": 135018818,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTAxODgxOA==",
    "diff_hunk": "@@ -897,43 +897,44 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n }\n \n /** Return transaction in txOut, and if it was found inside a block, its hash is placed in hashBlock */\n-bool GetTransaction(const uint256 &hash, CTransactionRef &txOut, const Consensus::Params& consensusParams, uint256 &hashBlock, bool fAllowSlow)\n+bool GetTransaction(const uint256& hash, CTransactionRef& txOut, const Consensus::Params& consensusParams, uint256& hashBlock, bool fAllowSlow, CBlockIndex* blockIndex)\n {\n-    CBlockIndex *pindexSlow = nullptr;\n+    CBlockIndex* pindexSlow = blockIndex;\n \n     LOCK(cs_main);\n \n-    CTransactionRef ptx = mempool.get(hash);\n-    if (ptx)\n-    {\n-        txOut = ptx;\n-        return true;\n-    }\n+    if (!blockIndex) {\n+        CTransactionRef ptx = mempool.get(hash);\n+        if (ptx) {\n+            txOut = ptx;\n+            return true;\n+        }\n \n-    if (fTxIndex) {\n-        CDiskTxPos postx;\n-        if (pblocktree->ReadTxIndex(hash, postx)) {\n-            CAutoFile file(OpenBlockFile(postx, true), SER_DISK, CLIENT_VERSION);\n-            if (file.IsNull())\n-                return error(\"%s: OpenBlockFile failed\", __func__);\n-            CBlockHeader header;\n-            try {\n-                file >> header;\n-                fseek(file.Get(), postx.nTxOffset, SEEK_CUR);\n-                file >> txOut;\n-            } catch (const std::exception& e) {\n-                return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n+        if (fTxIndex) {\n+            CDiskTxPos postx;\n+            if (pblocktree->ReadTxIndex(hash, postx)) {\n+                CAutoFile file(OpenBlockFile(postx, true), SER_DISK, CLIENT_VERSION);\n+                if (file.IsNull())\n+                    return error(\"%s: OpenBlockFile failed\", __func__);\n+                CBlockHeader header;\n+                try {\n+                    file >> header;\n+                    fseek(file.Get(), postx.nTxOffset, SEEK_CUR);\n+                    file >> txOut;\n+                } catch (const std::exception& e) {\n+                    return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n+                }\n+                hashBlock = header.GetHash();\n+                if (txOut->GetHash() != hash)\n+                    return error(\"%s: txid mismatch\", __func__);\n+                return true;\n             }\n-            hashBlock = header.GetHash();\n-            if (txOut->GetHash() != hash)\n-                return error(\"%s: txid mismatch\", __func__);\n-            return true;\n         }\n-    }\n \n-    if (fAllowSlow) { // use coin database to locate block that contains transaction, and scan it\n-        const Coin& coin = AccessByTxid(*pcoinsTip, hash);\n-        if (!coin.IsSpent()) pindexSlow = chainActive[coin.nHeight];\n+        if (fAllowSlow) { // use coin database to locate block that contains transaction, and scan it",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 67,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "cc75dab930d5fb340e8cf9948e3caf3284320d3c",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "should skip this logic if user has provided the blockhash?",
    "created_at": "2017-08-24T13:47:24Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r135018818",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135018818"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r135018818"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135018818/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 970,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135165744",
    "pull_request_review_id": 58549203,
    "id": 135165744,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTE2NTc0NA==",
    "diff_hunk": "@@ -897,43 +897,44 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n }\n \n /** Return transaction in txOut, and if it was found inside a block, its hash is placed in hashBlock */\n-bool GetTransaction(const uint256 &hash, CTransactionRef &txOut, const Consensus::Params& consensusParams, uint256 &hashBlock, bool fAllowSlow)\n+bool GetTransaction(const uint256& hash, CTransactionRef& txOut, const Consensus::Params& consensusParams, uint256& hashBlock, bool fAllowSlow, CBlockIndex* blockIndex)\n {\n-    CBlockIndex *pindexSlow = nullptr;\n+    CBlockIndex* pindexSlow = blockIndex;\n \n     LOCK(cs_main);\n \n-    CTransactionRef ptx = mempool.get(hash);\n-    if (ptx)\n-    {\n-        txOut = ptx;\n-        return true;\n-    }\n+    if (!blockIndex) {\n+        CTransactionRef ptx = mempool.get(hash);\n+        if (ptx) {\n+            txOut = ptx;\n+            return true;\n+        }\n \n-    if (fTxIndex) {\n-        CDiskTxPos postx;\n-        if (pblocktree->ReadTxIndex(hash, postx)) {\n-            CAutoFile file(OpenBlockFile(postx, true), SER_DISK, CLIENT_VERSION);\n-            if (file.IsNull())\n-                return error(\"%s: OpenBlockFile failed\", __func__);\n-            CBlockHeader header;\n-            try {\n-                file >> header;\n-                fseek(file.Get(), postx.nTxOffset, SEEK_CUR);\n-                file >> txOut;\n-            } catch (const std::exception& e) {\n-                return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n+        if (fTxIndex) {\n+            CDiskTxPos postx;\n+            if (pblocktree->ReadTxIndex(hash, postx)) {\n+                CAutoFile file(OpenBlockFile(postx, true), SER_DISK, CLIENT_VERSION);\n+                if (file.IsNull())\n+                    return error(\"%s: OpenBlockFile failed\", __func__);\n+                CBlockHeader header;\n+                try {\n+                    file >> header;\n+                    fseek(file.Get(), postx.nTxOffset, SEEK_CUR);\n+                    file >> txOut;\n+                } catch (const std::exception& e) {\n+                    return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n+                }\n+                hashBlock = header.GetHash();\n+                if (txOut->GetHash() != hash)\n+                    return error(\"%s: txid mismatch\", __func__);\n+                return true;\n             }\n-            hashBlock = header.GetHash();\n-            if (txOut->GetHash() != hash)\n-                return error(\"%s: txid mismatch\", __func__);\n-            return true;\n         }\n-    }\n \n-    if (fAllowSlow) { // use coin database to locate block that contains transaction, and scan it\n-        const Coin& coin = AccessByTxid(*pcoinsTip, hash);\n-        if (!coin.IsSpent()) pindexSlow = chainActive[coin.nHeight];\n+        if (fAllowSlow) { // use coin database to locate block that contains transaction, and scan it",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 67,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "cc75dab930d5fb340e8cf9948e3caf3284320d3c",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is inside the `if (!blockIndex)` block so it should never execute if a block hash was provided, no?",
    "created_at": "2017-08-25T01:09:01Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r135165744",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135165744"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r135165744"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135165744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 970,
    "side": "RIGHT",
    "in_reply_to_id": 135018818
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135167500",
    "pull_request_review_id": 58551051,
    "id": 135167500,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTE2NzUwMA==",
    "diff_hunk": "@@ -897,43 +897,44 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n }\n \n /** Return transaction in txOut, and if it was found inside a block, its hash is placed in hashBlock */\n-bool GetTransaction(const uint256 &hash, CTransactionRef &txOut, const Consensus::Params& consensusParams, uint256 &hashBlock, bool fAllowSlow)\n+bool GetTransaction(const uint256& hash, CTransactionRef& txOut, const Consensus::Params& consensusParams, uint256& hashBlock, bool fAllowSlow, CBlockIndex* blockIndex)\n {\n-    CBlockIndex *pindexSlow = nullptr;\n+    CBlockIndex* pindexSlow = blockIndex;\n \n     LOCK(cs_main);\n \n-    CTransactionRef ptx = mempool.get(hash);\n-    if (ptx)\n-    {\n-        txOut = ptx;\n-        return true;\n-    }\n+    if (!blockIndex) {\n+        CTransactionRef ptx = mempool.get(hash);\n+        if (ptx) {\n+            txOut = ptx;\n+            return true;\n+        }\n \n-    if (fTxIndex) {\n-        CDiskTxPos postx;\n-        if (pblocktree->ReadTxIndex(hash, postx)) {\n-            CAutoFile file(OpenBlockFile(postx, true), SER_DISK, CLIENT_VERSION);\n-            if (file.IsNull())\n-                return error(\"%s: OpenBlockFile failed\", __func__);\n-            CBlockHeader header;\n-            try {\n-                file >> header;\n-                fseek(file.Get(), postx.nTxOffset, SEEK_CUR);\n-                file >> txOut;\n-            } catch (const std::exception& e) {\n-                return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n+        if (fTxIndex) {\n+            CDiskTxPos postx;\n+            if (pblocktree->ReadTxIndex(hash, postx)) {\n+                CAutoFile file(OpenBlockFile(postx, true), SER_DISK, CLIENT_VERSION);\n+                if (file.IsNull())\n+                    return error(\"%s: OpenBlockFile failed\", __func__);\n+                CBlockHeader header;\n+                try {\n+                    file >> header;\n+                    fseek(file.Get(), postx.nTxOffset, SEEK_CUR);\n+                    file >> txOut;\n+                } catch (const std::exception& e) {\n+                    return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n+                }\n+                hashBlock = header.GetHash();\n+                if (txOut->GetHash() != hash)\n+                    return error(\"%s: txid mismatch\", __func__);\n+                return true;\n             }\n-            hashBlock = header.GetHash();\n-            if (txOut->GetHash() != hash)\n-                return error(\"%s: txid mismatch\", __func__);\n-            return true;\n         }\n-    }\n \n-    if (fAllowSlow) { // use coin database to locate block that contains transaction, and scan it\n-        const Coin& coin = AccessByTxid(*pcoinsTip, hash);\n-        if (!coin.IsSpent()) pindexSlow = chainActive[coin.nHeight];\n+        if (fAllowSlow) { // use coin database to locate block that contains transaction, and scan it",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 67,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "cc75dab930d5fb340e8cf9948e3caf3284320d3c",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oops! Not good at counting brackets.",
    "created_at": "2017-08-25T01:27:18Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r135167500",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135167500"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r135167500"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135167500/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 970,
    "side": "RIGHT",
    "in_reply_to_id": 135018818
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136588539",
    "pull_request_review_id": 60152203,
    "id": 136588539,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjU4ODUzOQ==",
    "diff_hunk": "@@ -76,12 +79,14 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"      (string, required) The transaction id\\n\"\n             \"2. verbose       (bool, optional, default=false) If false, return a string, otherwise return a json object\\n\"\n+            \"3. \\\"blockhash\\\" (string, optional) The block in which to look for the transaction\\n\"\n \n             \"\\nResult (if verbose is not set or set to false):\\n\"\n             \"\\\"data\\\"      (string) The serialized, hex-encoded data for 'txid'\\n\"\n \n             \"\\nResult (if verbose is set to true):\\n\"\n             \"{\\n\"\n+            \"  \\\"in_active_chain\\\": b, (bool) Whether specified block is in the active chain or not (only present with explicit \\\"blockhash\\\" argument)\\n\"",
    "path": "src/rpc/rawtransaction.cpp",
    "position": 32,
    "original_position": 30,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "440123fb8c7196a7ee209495f02b2f7c0deaa0bb",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: alignment",
    "created_at": "2017-09-01T14:32:33Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r136588539",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136588539"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r136588539"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136588539/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 92,
    "original_line": 92,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136589098",
    "pull_request_review_id": 60152203,
    "id": 136589098,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjU4OTA5OA==",
    "diff_hunk": "@@ -129,42 +134,55 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockindex = nullptr;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n-        if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n-        }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+        fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    if (!request.params[2].isNull()) {\n+        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");\n+        if (!blockhash.IsNull()) {\n+            BlockMap::iterator it = mapBlockIndex.find(blockhash);\n+            if (it == mapBlockIndex.end()) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block hash not found\");\n             }\n-        }\n-        else {\n-            throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid type provided. Verbose parameter must be a boolean.\");\n+            blockindex = it->second;\n+            in_active_chain = (chainActive[blockindex->nHeight] == blockindex);\n         }\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(fTxIndex ? \"No such mempool or blockchain transaction\"\n-            : \"No such mempool transaction. Use -txindex to enable blockchain transaction queries\") +\n-            \". Use gettransaction for wallet transactions.\");\n+    uint256 hash_block;\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hash_block, true, blockindex)) {\n+        std::string errmsg;\n+        if (blockindex) {\n+            errmsg = \"No such transaction found in the provided block\";",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 87,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "440123fb8c7196a7ee209495f02b2f7c0deaa0bb",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think we would also hit this error if the block had been pruned. In that case, this error is misleading.\r\n\r\nIs there any way to test above for whether the block has been pruned and error out before doing the transaction lookup?",
    "created_at": "2017-09-01T14:34:57Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r136589098",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136589098"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r136589098"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136589098/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 176,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136591227",
    "pull_request_review_id": 60152203,
    "id": 136591227,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjU5MTIyNw==",
    "diff_hunk": "@@ -52,6 +52,20 @@ def run_test(self):\n         # This will raise an exception since there are missing inputs\n         assert_raises_jsonrpc(-25, \"Missing inputs\", self.nodes[2].sendrawtransaction, rawtx['hex'])\n \n+        ############################\n+        # getrawtx with block hash #\n+        ############################\n+\n+        # make a tx by sending then generate 2 blocks; block1 has the tx in it,\n+        # presumably",
    "path": "test/functional/rawtransactions.py",
    "position": null,
    "original_position": 9,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "440123fb8c7196a7ee209495f02b2f7c0deaa0bb",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Lose the `presumably` :)",
    "created_at": "2017-09-01T14:43:38Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r136591227",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136591227"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r136591227"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136591227/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 58,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136591446",
    "pull_request_review_id": 60152203,
    "id": 136591446,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjU5MTQ0Ng==",
    "diff_hunk": "@@ -52,6 +52,20 @@ def run_test(self):\n         # This will raise an exception since there are missing inputs\n         assert_raises_jsonrpc(-25, \"Missing inputs\", self.nodes[2].sendrawtransaction, rawtx['hex'])\n \n+        ############################\n+        # getrawtx with block hash #\n+        ############################\n+\n+        # make a tx by sending then generate 2 blocks; block1 has the tx in it,\n+        # presumably\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        block1, block2 = self.nodes[2].generate(2)\n+        self.sync_all()\n+        # We should be able to get the raw transaction by providing the correct block\n+        assert_equal(self.nodes[0].getrawtransaction(tx, True, block1)['txid'], tx)\n+        # We should not get the tx if we provide an unrelated block\n+        assert_raises_jsonrpc(-5, \"No such\", self.nodes[0].getrawtransaction, tx, True, block2)",
    "path": "test/functional/rawtransactions.py",
    "position": null,
    "original_position": 16,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "440123fb8c7196a7ee209495f02b2f7c0deaa0bb",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You need to make the matching error text longer to be non-ambiguous. This test will still pass if the node returns the error `No such mempool or blockchain transaction` (which would be incorrect behaviour)",
    "created_at": "2017-09-01T14:44:37Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r136591446",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136591446"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r136591446"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136591446/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 65,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136735089",
    "pull_request_review_id": 60313988,
    "id": 136735089,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjczNTA4OQ==",
    "diff_hunk": "@@ -76,12 +79,14 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"      (string, required) The transaction id\\n\"\n             \"2. verbose       (bool, optional, default=false) If false, return a string, otherwise return a json object\\n\"\n+            \"3. \\\"blockhash\\\" (string, optional) The block in which to look for the transaction\\n\"\n \n             \"\\nResult (if verbose is not set or set to false):\\n\"\n             \"\\\"data\\\"      (string) The serialized, hex-encoded data for 'txid'\\n\"\n \n             \"\\nResult (if verbose is set to true):\\n\"\n             \"{\\n\"\n+            \"  \\\"in_active_chain\\\": b, (bool) Whether specified block is in the active chain or not (only present with explicit \\\"blockhash\\\" argument)\\n\"",
    "path": "src/rpc/rawtransaction.cpp",
    "position": 32,
    "original_position": 30,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "440123fb8c7196a7ee209495f02b2f7c0deaa0bb",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```C++\r\n            \"  \\\"in_active_chain\\\": b, (bool) Whether specified block is in the active chain or not (only present with explicit \\\"blockhash\\\" argument)\\n\"\r\n            \"  \\\"hex\\\" : \\\"data\\\",       (string) The serialized, hex-encoded data for 'txid'\\n\"\r\n```\r\nbecomes\r\n```\r\n  \"in_active_chain\": b, (bool) Whether specified block is in the active chain or not (only present with explicit \"blockhash\" argument)\r\n  \"hex\" : \"data\",       (string) The serialized, hex-encoded data for 'txid'\r\n```\r\n(two \\ vs four \\ means indentation diff in code)",
    "created_at": "2017-09-04T02:15:07Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r136735089",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136735089"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r136735089"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136735089/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 92,
    "original_line": 92,
    "side": "RIGHT",
    "in_reply_to_id": 136588539
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136736030",
    "pull_request_review_id": 60314972,
    "id": 136736030,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjczNjAzMA==",
    "diff_hunk": "@@ -129,42 +134,55 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockindex = nullptr;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n-        if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n-        }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+        fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    if (!request.params[2].isNull()) {\n+        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");\n+        if (!blockhash.IsNull()) {\n+            BlockMap::iterator it = mapBlockIndex.find(blockhash);\n+            if (it == mapBlockIndex.end()) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block hash not found\");\n             }\n-        }\n-        else {\n-            throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid type provided. Verbose parameter must be a boolean.\");\n+            blockindex = it->second;\n+            in_active_chain = (chainActive[blockindex->nHeight] == blockindex);\n         }\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(fTxIndex ? \"No such mempool or blockchain transaction\"\n-            : \"No such mempool transaction. Use -txindex to enable blockchain transaction queries\") +\n-            \". Use gettransaction for wallet transactions.\");\n+    uint256 hash_block;\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hash_block, true, blockindex)) {\n+        std::string errmsg;\n+        if (blockindex) {\n+            errmsg = \"No such transaction found in the provided block\";",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 87,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "440123fb8c7196a7ee209495f02b2f7c0deaa0bb",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good point!\r\n\r\nI added code (https://github.com/bitcoin/bitcoin/pull/10275/commits/3c0cb434bde411d2daf8e4a440c85e80b1eb1f62) that checks if pruning is enabled, and if it is, checks if the block is actually available by reading it from disk and setting the error message based on the results of that.",
    "created_at": "2017-09-04T02:31:17Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r136736030",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136736030"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r136736030"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136736030/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 176,
    "side": "RIGHT",
    "in_reply_to_id": 136589098
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136736199",
    "pull_request_review_id": 60315156,
    "id": 136736199,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjczNjE5OQ==",
    "diff_hunk": "@@ -52,6 +52,20 @@ def run_test(self):\n         # This will raise an exception since there are missing inputs\n         assert_raises_jsonrpc(-25, \"Missing inputs\", self.nodes[2].sendrawtransaction, rawtx['hex'])\n \n+        ############################\n+        # getrawtx with block hash #\n+        ############################\n+\n+        # make a tx by sending then generate 2 blocks; block1 has the tx in it,\n+        # presumably\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        block1, block2 = self.nodes[2].generate(2)\n+        self.sync_all()\n+        # We should be able to get the raw transaction by providing the correct block\n+        assert_equal(self.nodes[0].getrawtransaction(tx, True, block1)['txid'], tx)\n+        # We should not get the tx if we provide an unrelated block\n+        assert_raises_jsonrpc(-5, \"No such\", self.nodes[0].getrawtransaction, tx, True, block2)",
    "path": "test/functional/rawtransactions.py",
    "position": null,
    "original_position": 16,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "440123fb8c7196a7ee209495f02b2f7c0deaa0bb",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oops. Fixed, thanks.",
    "created_at": "2017-09-04T02:34:34Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r136736199",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136736199"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r136736199"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136736199/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 65,
    "side": "RIGHT",
    "in_reply_to_id": 136591446
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136855111",
    "pull_request_review_id": 60452204,
    "id": 136855111,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjg1NTExMQ==",
    "diff_hunk": "@@ -76,12 +79,14 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"      (string, required) The transaction id\\n\"\n             \"2. verbose       (bool, optional, default=false) If false, return a string, otherwise return a json object\\n\"\n+            \"3. \\\"blockhash\\\" (string, optional) The block in which to look for the transaction\\n\"\n \n             \"\\nResult (if verbose is not set or set to false):\\n\"\n             \"\\\"data\\\"      (string) The serialized, hex-encoded data for 'txid'\\n\"\n \n             \"\\nResult (if verbose is set to true):\\n\"\n             \"{\\n\"\n+            \"  \\\"in_active_chain\\\": b, (bool) Whether specified block is in the active chain or not (only present with explicit \\\"blockhash\\\" argument)\\n\"",
    "path": "src/rpc/rawtransaction.cpp",
    "position": 32,
    "original_position": 30,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "440123fb8c7196a7ee209495f02b2f7c0deaa0bb",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, of course you're correct. The `size`, `vsize`, `version`, ... fields below aren't aligned by the same logic, but that's beyond the scope of this PR. Please disregard my previous comment.",
    "created_at": "2017-09-04T17:03:26Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r136855111",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136855111"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r136855111"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136855111/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 92,
    "original_line": 92,
    "side": "RIGHT",
    "in_reply_to_id": 136588539
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137105079",
    "pull_request_review_id": 60729925,
    "id": 137105079,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzEwNTA3OQ==",
    "diff_hunk": "@@ -129,42 +134,63 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockindex = nullptr;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n-        if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n-        }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+        fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    if (!request.params[2].isNull()) {\n+        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");\n+        if (!blockhash.IsNull()) {\n+            BlockMap::iterator it = mapBlockIndex.find(blockhash);\n+            if (it == mapBlockIndex.end()) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block hash not found\");\n             }\n-        }\n-        else {\n-            throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid type provided. Verbose parameter must be a boolean.\");\n+            blockindex = it->second;\n+            in_active_chain = (chainActive[blockindex->nHeight] == blockindex);\n         }\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(fTxIndex ? \"No such mempool or blockchain transaction\"\n-            : \"No such mempool transaction. Use -txindex to enable blockchain transaction queries\") +\n-            \". Use gettransaction for wallet transactions.\");\n+    uint256 hash_block;\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hash_block, true, blockindex)) {\n+        std::string errmsg;\n+        if (blockindex) {\n+            bool block_available = true;\n+            if (gArgs.GetArg(\"-prune\", 0)) {",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 88,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "67caecc0ae342ca7350b8a96753083d6fb03df72",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Use `fHavePruned`",
    "created_at": "2017-09-05T20:28:50Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r137105079",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137105079"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r137105079"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137105079/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 171,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137105749",
    "pull_request_review_id": 60729925,
    "id": 137105749,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzEwNTc0OQ==",
    "diff_hunk": "@@ -129,42 +134,63 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockindex = nullptr;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n-        if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n-        }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+        fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    if (!request.params[2].isNull()) {\n+        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");\n+        if (!blockhash.IsNull()) {\n+            BlockMap::iterator it = mapBlockIndex.find(blockhash);\n+            if (it == mapBlockIndex.end()) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block hash not found\");\n             }\n-        }\n-        else {\n-            throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid type provided. Verbose parameter must be a boolean.\");\n+            blockindex = it->second;\n+            in_active_chain = (chainActive[blockindex->nHeight] == blockindex);\n         }\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(fTxIndex ? \"No such mempool or blockchain transaction\"\n-            : \"No such mempool transaction. Use -txindex to enable blockchain transaction queries\") +\n-            \". Use gettransaction for wallet transactions.\");\n+    uint256 hash_block;\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hash_block, true, blockindex)) {\n+        std::string errmsg;\n+        if (blockindex) {\n+            bool block_available = true;\n+            if (gArgs.GetArg(\"-prune\", 0)) {\n+                // we are pruning; see if block is available at all\n+                CBlock block;\n+                block_available = ReadBlockFromDisk(block, blockindex, Params().GetConsensus());",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 91,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "67caecc0ae342ca7350b8a96753083d6fb03df72",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Use `!(pblockindex->nStatus & BLOCK_HAVE_DATA) && pblockindex->nTx > 0` (see `getblock`)",
    "created_at": "2017-09-05T20:31:22Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r137105749",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137105749"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r137105749"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137105749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 174,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137375529",
    "pull_request_review_id": 61034671,
    "id": 137375529,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzM3NTUyOQ==",
    "diff_hunk": "@@ -130,42 +135,58 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockindex = nullptr;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n-        if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n-        }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+        fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    if (!request.params[2].isNull()) {\n+        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");\n+        if (!blockhash.IsNull()) {\n+            BlockMap::iterator it = mapBlockIndex.find(blockhash);\n+            if (it == mapBlockIndex.end()) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block hash not found\");\n             }\n-        }\n-        else {\n-            throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid type provided. Verbose parameter must be a boolean.\");\n+            blockindex = it->second;\n+            in_active_chain = (chainActive[blockindex->nHeight] == blockindex);\n         }\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(fTxIndex ? \"No such mempool or blockchain transaction\"\n-            : \"No such mempool transaction. Use -txindex to enable blockchain transaction queries\") +\n-            \". Use gettransaction for wallet transactions.\");\n+    uint256 hash_block;\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hash_block, true, blockindex)) {\n+        std::string errmsg;\n+        if (blockindex) {\n+            bool block_pruned = fHavePruned && !(blockindex->nStatus & BLOCK_HAVE_DATA) && blockindex->nTx > 0;\n+            errmsg = block_pruned\n+              ? \"Block not available (pruned data)\"",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 89,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "3ff7a5707184da1f1f872af6e29448fddb2ecc41",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "supernit: Not finding a block because it's been pruned is not a `RPC_INVALID_ADDRESS_OR_KEY` error. It would more accurately be a `RPC_MISC_ERROR`.\r\n\r\nMy suggestion would be to do the pruned check above, immediately after the `throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block hash not found\");` line",
    "created_at": "2017-09-06T20:06:15Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r137375529",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137375529"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r137375529"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137375529/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 173,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137433560",
    "pull_request_review_id": 61099094,
    "id": 137433560,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzQzMzU2MA==",
    "diff_hunk": "@@ -130,42 +135,58 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockindex = nullptr;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n-        if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n-        }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+        fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    if (!request.params[2].isNull()) {\n+        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");\n+        if (!blockhash.IsNull()) {\n+            BlockMap::iterator it = mapBlockIndex.find(blockhash);\n+            if (it == mapBlockIndex.end()) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block hash not found\");\n             }\n-        }\n-        else {\n-            throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid type provided. Verbose parameter must be a boolean.\");\n+            blockindex = it->second;\n+            in_active_chain = (chainActive[blockindex->nHeight] == blockindex);\n         }\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(fTxIndex ? \"No such mempool or blockchain transaction\"\n-            : \"No such mempool transaction. Use -txindex to enable blockchain transaction queries\") +\n-            \". Use gettransaction for wallet transactions.\");\n+    uint256 hash_block;\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hash_block, true, blockindex)) {\n+        std::string errmsg;\n+        if (blockindex) {\n+            bool block_pruned = fHavePruned && !(blockindex->nStatus & BLOCK_HAVE_DATA) && blockindex->nTx > 0;\n+            errmsg = block_pruned\n+              ? \"Block not available (pruned data)\"",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 89,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "3ff7a5707184da1f1f872af6e29448fddb2ecc41",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah, I was thinking about that too. Fixing.",
    "created_at": "2017-09-07T02:17:32Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r137433560",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137433560"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r137433560"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137433560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 173,
    "side": "RIGHT",
    "in_reply_to_id": 137375529
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153341394",
    "pull_request_review_id": 79332601,
    "id": 153341394,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzM0MTM5NA==",
    "diff_hunk": "@@ -130,42 +135,58 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockindex = nullptr;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n-        if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n-        }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+        fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    if (!request.params[2].isNull()) {\n+        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");\n+        if (!blockhash.IsNull()) {\n+            BlockMap::iterator it = mapBlockIndex.find(blockhash);\n+            if (it == mapBlockIndex.end()) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block hash not found\");\n             }\n-        }\n-        else {\n-            throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid type provided. Verbose parameter must be a boolean.\");\n+            blockindex = it->second;\n+            in_active_chain = (chainActive[blockindex->nHeight] == blockindex);\n         }\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(fTxIndex ? \"No such mempool or blockchain transaction\"\n-            : \"No such mempool transaction. Use -txindex to enable blockchain transaction queries\") +\n-            \". Use gettransaction for wallet transactions.\");\n+    uint256 hash_block;\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hash_block, true, blockindex)) {\n+        std::string errmsg;\n+        if (blockindex) {\n+            if (fHavePruned && !(blockindex->nStatus & BLOCK_HAVE_DATA) && blockindex->nTx > 0) {",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 87,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "4d15dce560d43028067ae9581bf30fc3d3cfc5f7",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why check nTx here? Its just as useful to provide an error of \"Block not available\" if it has been pruned as if it has not yet been received in full.",
    "created_at": "2017-11-27T22:20:16Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r153341394",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153341394"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r153341394"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153341394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 173,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153367497",
    "pull_request_review_id": 79362014,
    "id": 153367497,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzM2NzQ5Nw==",
    "diff_hunk": "@@ -130,42 +135,58 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockindex = nullptr;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n-        if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n-        }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+        fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    if (!request.params[2].isNull()) {\n+        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");\n+        if (!blockhash.IsNull()) {\n+            BlockMap::iterator it = mapBlockIndex.find(blockhash);\n+            if (it == mapBlockIndex.end()) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block hash not found\");\n             }\n-        }\n-        else {\n-            throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid type provided. Verbose parameter must be a boolean.\");\n+            blockindex = it->second;\n+            in_active_chain = (chainActive[blockindex->nHeight] == blockindex);\n         }\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(fTxIndex ? \"No such mempool or blockchain transaction\"\n-            : \"No such mempool transaction. Use -txindex to enable blockchain transaction queries\") +\n-            \". Use gettransaction for wallet transactions.\");\n+    uint256 hash_block;\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hash_block, true, blockindex)) {\n+        std::string errmsg;\n+        if (blockindex) {\n+            if (fHavePruned && !(blockindex->nStatus & BLOCK_HAVE_DATA) && blockindex->nTx > 0) {",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 87,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "4d15dce560d43028067ae9581bf30fc3d3cfc5f7",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is how the check is done in a lot of places. E.g. \r\nhttps://github.com/kallewoof/bitcoin/blame/gettx-with-blockhash/src/rest.cpp#L219\r\n\r\nI'm not sure why an additional nTx check is needed, to be honest.",
    "created_at": "2017-11-28T00:51:32Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r153367497",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153367497"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r153367497"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153367497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 173,
    "side": "RIGHT",
    "in_reply_to_id": 153341394
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153368118",
    "pull_request_review_id": 79362654,
    "id": 153368118,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzM2ODExOA==",
    "diff_hunk": "@@ -130,42 +135,58 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockindex = nullptr;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n-        if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n-        }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+        fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    if (!request.params[2].isNull()) {\n+        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");\n+        if (!blockhash.IsNull()) {\n+            BlockMap::iterator it = mapBlockIndex.find(blockhash);\n+            if (it == mapBlockIndex.end()) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block hash not found\");\n             }\n-        }\n-        else {\n-            throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid type provided. Verbose parameter must be a boolean.\");\n+            blockindex = it->second;\n+            in_active_chain = (chainActive[blockindex->nHeight] == blockindex);\n         }\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(fTxIndex ? \"No such mempool or blockchain transaction\"\n-            : \"No such mempool transaction. Use -txindex to enable blockchain transaction queries\") +\n-            \". Use gettransaction for wallet transactions.\");\n+    uint256 hash_block;\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hash_block, true, blockindex)) {\n+        std::string errmsg;\n+        if (blockindex) {\n+            if (fHavePruned && !(blockindex->nStatus & BLOCK_HAVE_DATA) && blockindex->nTx > 0) {",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 87,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "4d15dce560d43028067ae9581bf30fc3d3cfc5f7",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "\"nTx > 0\" means we had the block's contents at some point.",
    "created_at": "2017-11-28T00:55:28Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r153368118",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153368118"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r153368118"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153368118/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 173,
    "side": "RIGHT",
    "in_reply_to_id": 153341394
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153374816",
    "pull_request_review_id": 79369897,
    "id": 153374816,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzM3NDgxNg==",
    "diff_hunk": "@@ -130,42 +135,58 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockindex = nullptr;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n-        if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n-        }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+        fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    if (!request.params[2].isNull()) {\n+        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");\n+        if (!blockhash.IsNull()) {\n+            BlockMap::iterator it = mapBlockIndex.find(blockhash);\n+            if (it == mapBlockIndex.end()) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block hash not found\");\n             }\n-        }\n-        else {\n-            throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid type provided. Verbose parameter must be a boolean.\");\n+            blockindex = it->second;\n+            in_active_chain = (chainActive[blockindex->nHeight] == blockindex);\n         }\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(fTxIndex ? \"No such mempool or blockchain transaction\"\n-            : \"No such mempool transaction. Use -txindex to enable blockchain transaction queries\") +\n-            \". Use gettransaction for wallet transactions.\");\n+    uint256 hash_block;\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hash_block, true, blockindex)) {\n+        std::string errmsg;\n+        if (blockindex) {\n+            if (fHavePruned && !(blockindex->nStatus & BLOCK_HAVE_DATA) && blockindex->nTx > 0) {",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 87,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "4d15dce560d43028067ae9581bf30fc3d3cfc5f7",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, I'm saying remove the fHavePruned and nTx check here - if we have a block's header but not its body, then we'll throw a \"No such transaction found in the provided block\" error, which is nonsense. Easier to just make this error generic.",
    "created_at": "2017-11-28T01:42:38Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r153374816",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153374816"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r153374816"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153374816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 173,
    "side": "RIGHT",
    "in_reply_to_id": 153341394
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153375434",
    "pull_request_review_id": 79370613,
    "id": 153375434,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzM3NTQzNA==",
    "diff_hunk": "@@ -130,42 +135,58 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockindex = nullptr;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n-        if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n-        }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+        fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    if (!request.params[2].isNull()) {\n+        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");\n+        if (!blockhash.IsNull()) {\n+            BlockMap::iterator it = mapBlockIndex.find(blockhash);\n+            if (it == mapBlockIndex.end()) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block hash not found\");\n             }\n-        }\n-        else {\n-            throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid type provided. Verbose parameter must be a boolean.\");\n+            blockindex = it->second;\n+            in_active_chain = (chainActive[blockindex->nHeight] == blockindex);\n         }\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(fTxIndex ? \"No such mempool or blockchain transaction\"\n-            : \"No such mempool transaction. Use -txindex to enable blockchain transaction queries\") +\n-            \". Use gettransaction for wallet transactions.\");\n+    uint256 hash_block;\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hash_block, true, blockindex)) {\n+        std::string errmsg;\n+        if (blockindex) {\n+            if (fHavePruned && !(blockindex->nStatus & BLOCK_HAVE_DATA) && blockindex->nTx > 0) {",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 87,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "4d15dce560d43028067ae9581bf30fc3d3cfc5f7",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ahh, OK.",
    "created_at": "2017-11-28T01:47:52Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r153375434",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153375434"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r153375434"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153375434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 173,
    "side": "RIGHT",
    "in_reply_to_id": 153341394
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154700602",
    "pull_request_review_id": 80902505,
    "id": 154700602,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDcwMDYwMg==",
    "diff_hunk": "@@ -132,42 +137,58 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockindex = nullptr;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n-        if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n-        }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+        fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    if (!request.params[2].isNull()) {\n+        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");\n+        if (!blockhash.IsNull()) {\n+            BlockMap::iterator it = mapBlockIndex.find(blockhash);\n+            if (it == mapBlockIndex.end()) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block hash not found\");\n             }\n-        }\n-        else {\n-            throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid type provided. Verbose parameter must be a boolean.\");\n+            blockindex = it->second;\n+            in_active_chain = (chainActive[blockindex->nHeight] == blockindex);\n         }\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(fTxIndex ? \"No such mempool or blockchain transaction\"\n-            : \"No such mempool transaction. Use -txindex to enable blockchain transaction queries\") +\n-            \". Use gettransaction for wallet transactions.\");\n+    uint256 hash_block;\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hash_block, true, blockindex)) {\n+        std::string errmsg;\n+        if (blockindex) {\n+            if (!(blockindex->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Block not available (pruned data)\");",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 88,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "9cdcd16253b5727623eedf3b565680431b2e9f16",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Now the error message is wrong :/. You should drop the \"(pruned data)\" note, as this can happen if you've received the header but not (yet) the block.",
    "created_at": "2017-12-04T16:31:53Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154700602",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154700602"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154700602"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154700602/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 174,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154701948",
    "pull_request_review_id": 80902505,
    "id": 154701948,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDcwMTk0OA==",
    "diff_hunk": "@@ -927,46 +927,44 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n }\n \n /** Return transaction in txOut, and if it was found inside a block, its hash is placed in hashBlock */\n-bool GetTransaction(const uint256 &hash, CTransactionRef &txOut, const Consensus::Params& consensusParams, uint256 &hashBlock, bool fAllowSlow)\n+bool GetTransaction(const uint256& hash, CTransactionRef& txOut, const Consensus::Params& consensusParams, uint256& hashBlock, bool fAllowSlow, CBlockIndex* blockIndex)\n {\n-    CBlockIndex *pindexSlow = nullptr;\n+    CBlockIndex* pindexSlow = blockIndex;\n \n     LOCK(cs_main);\n \n-    CTransactionRef ptx = mempool.get(hash);\n-    if (ptx)\n-    {\n-        txOut = ptx;\n-        return true;\n-    }\n-\n-    if (fTxIndex) {\n-        CDiskTxPos postx;\n-        if (pblocktree->ReadTxIndex(hash, postx)) {\n-            CAutoFile file(OpenBlockFile(postx, true), SER_DISK, CLIENT_VERSION);\n-            if (file.IsNull())\n-                return error(\"%s: OpenBlockFile failed\", __func__);\n-            CBlockHeader header;\n-            try {\n-                file >> header;\n-                fseek(file.Get(), postx.nTxOffset, SEEK_CUR);\n-                file >> txOut;\n-            } catch (const std::exception& e) {\n-                return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n-            }\n-            hashBlock = header.GetHash();\n-            if (txOut->GetHash() != hash)\n-                return error(\"%s: txid mismatch\", __func__);\n+    if (!blockIndex) {\n+        CTransactionRef ptx = mempool.get(hash);\n+        if (ptx) {\n+            txOut = ptx;\n             return true;\n         }\n \n-        // transaction not found in index, nothing more can be done",
    "path": "src/validation.cpp",
    "position": 48,
    "original_position": 43,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "9cdcd16253b5727623eedf3b565680431b2e9f16",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Looks like this line was lost in a rebase? Shouldn't remove it.",
    "created_at": "2017-12-04T16:36:19Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154701948",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154701948"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154701948"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154701948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 963,
    "original_line": 963,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154806602",
    "pull_request_review_id": 81025357,
    "id": 154806602,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDgwNjYwMg==",
    "diff_hunk": "@@ -132,42 +137,58 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockindex = nullptr;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n-        if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n-        }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+        fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    if (!request.params[2].isNull()) {\n+        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");\n+        if (!blockhash.IsNull()) {\n+            BlockMap::iterator it = mapBlockIndex.find(blockhash);\n+            if (it == mapBlockIndex.end()) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block hash not found\");\n             }\n-        }\n-        else {\n-            throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid type provided. Verbose parameter must be a boolean.\");\n+            blockindex = it->second;\n+            in_active_chain = (chainActive[blockindex->nHeight] == blockindex);\n         }\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(fTxIndex ? \"No such mempool or blockchain transaction\"\n-            : \"No such mempool transaction. Use -txindex to enable blockchain transaction queries\") +\n-            \". Use gettransaction for wallet transactions.\");\n+    uint256 hash_block;\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hash_block, true, blockindex)) {\n+        std::string errmsg;\n+        if (blockindex) {\n+            if (!(blockindex->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Block not available (pruned data)\");",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 88,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "9cdcd16253b5727623eedf3b565680431b2e9f16",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oh, damn. Sorry about that. Fixed.",
    "created_at": "2017-12-04T23:26:31Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154806602",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154806602"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154806602"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154806602/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 174,
    "side": "RIGHT",
    "in_reply_to_id": 154700602
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154806796",
    "pull_request_review_id": 81025595,
    "id": 154806796,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDgwNjc5Ng==",
    "diff_hunk": "@@ -927,46 +927,44 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n }\n \n /** Return transaction in txOut, and if it was found inside a block, its hash is placed in hashBlock */\n-bool GetTransaction(const uint256 &hash, CTransactionRef &txOut, const Consensus::Params& consensusParams, uint256 &hashBlock, bool fAllowSlow)\n+bool GetTransaction(const uint256& hash, CTransactionRef& txOut, const Consensus::Params& consensusParams, uint256& hashBlock, bool fAllowSlow, CBlockIndex* blockIndex)\n {\n-    CBlockIndex *pindexSlow = nullptr;\n+    CBlockIndex* pindexSlow = blockIndex;\n \n     LOCK(cs_main);\n \n-    CTransactionRef ptx = mempool.get(hash);\n-    if (ptx)\n-    {\n-        txOut = ptx;\n-        return true;\n-    }\n-\n-    if (fTxIndex) {\n-        CDiskTxPos postx;\n-        if (pblocktree->ReadTxIndex(hash, postx)) {\n-            CAutoFile file(OpenBlockFile(postx, true), SER_DISK, CLIENT_VERSION);\n-            if (file.IsNull())\n-                return error(\"%s: OpenBlockFile failed\", __func__);\n-            CBlockHeader header;\n-            try {\n-                file >> header;\n-                fseek(file.Get(), postx.nTxOffset, SEEK_CUR);\n-                file >> txOut;\n-            } catch (const std::exception& e) {\n-                return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n-            }\n-            hashBlock = header.GetHash();\n-            if (txOut->GetHash() != hash)\n-                return error(\"%s: txid mismatch\", __func__);\n+    if (!blockIndex) {\n+        CTransactionRef ptx = mempool.get(hash);\n+        if (ptx) {\n+            txOut = ptx;\n             return true;\n         }\n \n-        // transaction not found in index, nothing more can be done",
    "path": "src/validation.cpp",
    "position": 48,
    "original_position": 43,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "9cdcd16253b5727623eedf3b565680431b2e9f16",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed!",
    "created_at": "2017-12-04T23:27:37Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154806796",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154806796"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154806796"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154806796/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 963,
    "original_line": 963,
    "side": "LEFT",
    "in_reply_to_id": 154701948
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154823055",
    "pull_request_review_id": 81044009,
    "id": 154823055,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDgyMzA1NQ==",
    "diff_hunk": "@@ -132,42 +137,58 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockindex = nullptr;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n-        if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n-        }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+        fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    if (!request.params[2].isNull()) {\n+        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");\n+        if (!blockhash.IsNull()) {\n+            BlockMap::iterator it = mapBlockIndex.find(blockhash);\n+            if (it == mapBlockIndex.end()) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block hash not found\");\n             }\n-        }\n-        else {\n-            throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid type provided. Verbose parameter must be a boolean.\");\n+            blockindex = it->second;\n+            in_active_chain = (chainActive[blockindex->nHeight] == blockindex);",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 73,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "def73636a075ca36ed412284944c9e3e01ea38d8",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Use `chainActive.Contains()`?",
    "created_at": "2017-12-05T01:14:03Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154823055",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154823055"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154823055"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154823055/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 164,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154823677",
    "pull_request_review_id": 81044009,
    "id": 154823677,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDgyMzY3Nw==",
    "diff_hunk": "@@ -132,42 +137,58 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockindex = nullptr;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n-        if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n-        }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+        fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    if (!request.params[2].isNull()) {\n+        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");",
    "path": "src/rpc/rawtransaction.cpp",
    "position": 65,
    "original_position": 63,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "def73636a075ca36ed412284944c9e3e01ea38d8",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "~~Add tests for invalid hash?~~\r\n - ~~must be string;~~\r\n - ~~must be hexadecimal string;~~\r\n - ~~must be of length.~~",
    "created_at": "2017-12-05T01:18:28Z",
    "updated_at": "2017-12-05T14:18:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154823677",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154823677"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154823677"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154823677/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 157,
    "original_line": 157,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154824227",
    "pull_request_review_id": 81044009,
    "id": 154824227,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDgyNDIyNw==",
    "diff_hunk": "@@ -132,42 +137,58 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockindex = nullptr;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n-        if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n-        }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+        fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    if (!request.params[2].isNull()) {\n+        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");\n+        if (!blockhash.IsNull()) {\n+            BlockMap::iterator it = mapBlockIndex.find(blockhash);\n+            if (it == mapBlockIndex.end()) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block hash not found\");\n             }\n-        }\n-        else {\n-            throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid type provided. Verbose parameter must be a boolean.\");\n+            blockindex = it->second;\n+            in_active_chain = (chainActive[blockindex->nHeight] == blockindex);\n         }\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(fTxIndex ? \"No such mempool or blockchain transaction\"\n-            : \"No such mempool transaction. Use -txindex to enable blockchain transaction queries\") +\n-            \". Use gettransaction for wallet transactions.\");\n+    uint256 hash_block;\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hash_block, true, blockindex)) {\n+        std::string errmsg;\n+        if (blockindex) {\n+            if (!(blockindex->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Block not available\");\n+            }\n+            errmsg = \"No such transaction found in the provided block\";\n+        } else {\n+            errmsg = fTxIndex\n+              ? \"No such mempool or blockchain transaction\"\n+              : \"No such mempool transaction. Use -txindex to enable blockchain transaction queries\";\n+        }\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, errmsg + \". Use gettransaction for wallet transactions.\");\n+    }\n \n-    if (!fVerbose)\n+    if (!fVerbose) {\n         return EncodeHexTx(*tx, RPCSerializationFlags());\n+    }\n \n     UniValue result(UniValue::VOBJ);\n-    TxToJSON(*tx, hashBlock, result);\n+    if (blockindex) result.push_back(Pair(\"in_active_chain\", in_active_chain));",
    "path": "src/rpc/rawtransaction.cpp",
    "position": 108,
    "original_position": 106,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "def73636a075ca36ed412284944c9e3e01ea38d8",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "~~Missing test for `in_active_chain`.~~",
    "created_at": "2017-12-05T01:22:41Z",
    "updated_at": "2017-12-05T14:18:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154824227",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154824227"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154824227"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154824227/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 190,
    "original_line": 190,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154825370",
    "pull_request_review_id": 81044009,
    "id": 154825370,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDgyNTM3MA==",
    "diff_hunk": "@@ -50,6 +50,19 @@ def run_test(self):\n         # This will raise an exception since there are missing inputs\n         assert_raises_rpc_error(-25, \"Missing inputs\", self.nodes[2].sendrawtransaction, rawtx['hex'])\n \n+        ############################\n+        # getrawtx with block hash #",
    "path": "test/functional/rawtransactions.py",
    "position": null,
    "original_position": 5,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "def73636a075ca36ed412284944c9e3e01ea38d8",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`# getrawtransaction with block hash #`?",
    "created_at": "2017-12-05T01:31:33Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154825370",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154825370"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154825370"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154825370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 54,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154825428",
    "pull_request_review_id": 81044009,
    "id": 154825428,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDgyNTQyOA==",
    "diff_hunk": "@@ -927,46 +927,47 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n }\n \n /** Return transaction in txOut, and if it was found inside a block, its hash is placed in hashBlock */",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 3,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "def73636a075ca36ed412284944c9e3e01ea38d8",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Care to explain the new argument?",
    "created_at": "2017-12-05T01:31:56Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154825428",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154825428"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154825428"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154825428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 929,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154825935",
    "pull_request_review_id": 81044009,
    "id": 154825935,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDgyNTkzNQ==",
    "diff_hunk": "@@ -79,12 +82,14 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"      (string, required) The transaction id\\n\"\n             \"2. verbose       (bool, optional, default=false) If false, return a string, otherwise return a json object\\n\"",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 22,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "def73636a075ca36ed412284944c9e3e01ea38d8",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit, mind to fix `verbose` alignment?",
    "created_at": "2017-12-05T01:35:41Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154825935",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154825935"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154825935"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154825935/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 84,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154831307",
    "pull_request_review_id": 81053127,
    "id": 154831307,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDgzMTMwNw==",
    "diff_hunk": "@@ -50,6 +50,26 @@ def run_test(self):\n         # This will raise an exception since there are missing inputs\n         assert_raises_rpc_error(-25, \"Missing inputs\", self.nodes[2].sendrawtransaction, rawtx['hex'])\n \n+        #####################################\n+        # getrawtransaction with block hash #\n+        #####################################\n+\n+        # make a tx by sending then generate 2 blocks; block1 has the tx in it\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        block1, block2 = self.nodes[2].generate(2)\n+        self.sync_all()\n+        # We should be able to get the raw transaction by providing the correct block\n+        gottx = self.nodes[0].getrawtransaction(tx, True, block1)\n+        assert_equal(gottx['txid'], tx)\n+        assert_equal(gottx['in_active_chain'], True)\n+        # We should not get the tx if we provide an unrelated block\n+        assert_raises_rpc_error(-5, \"No such transaction found\", self.nodes[0].getrawtransaction, tx, True, block2)\n+        # An invalid block hash should raise the correct errors\n+        assert_raises_rpc_error(-8, \"parameter 3 must be hexadecimal\", self.nodes[0].getrawtransaction, tx, True, True)\n+        assert_raises_rpc_error(-8, \"parameter 3 must be hexadecimal\", self.nodes[0].getrawtransaction, tx, True, \"foobar\")",
    "path": "test/functional/rawtransactions.py",
    "position": 24,
    "original_position": 20,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "650e4eee922d689a5d5d5a4c62fb6d9cf0e71529",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can remove this.",
    "created_at": "2017-12-05T02:18:15Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154831307",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154831307"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154831307"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154831307/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 73,
    "original_line": 73,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154838762",
    "pull_request_review_id": 81061337,
    "id": 154838762,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDgzODc2Mg==",
    "diff_hunk": "@@ -50,6 +50,26 @@ def run_test(self):\n         # This will raise an exception since there are missing inputs\n         assert_raises_rpc_error(-25, \"Missing inputs\", self.nodes[2].sendrawtransaction, rawtx['hex'])\n \n+        #####################################\n+        # getrawtransaction with block hash #\n+        #####################################\n+\n+        # make a tx by sending then generate 2 blocks; block1 has the tx in it\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        block1, block2 = self.nodes[2].generate(2)\n+        self.sync_all()\n+        # We should be able to get the raw transaction by providing the correct block\n+        gottx = self.nodes[0].getrawtransaction(tx, True, block1)\n+        assert_equal(gottx['txid'], tx)\n+        assert_equal(gottx['in_active_chain'], True)\n+        # We should not get the tx if we provide an unrelated block\n+        assert_raises_rpc_error(-5, \"No such transaction found\", self.nodes[0].getrawtransaction, tx, True, block2)\n+        # An invalid block hash should raise the correct errors\n+        assert_raises_rpc_error(-8, \"parameter 3 must be hexadecimal\", self.nodes[0].getrawtransaction, tx, True, True)\n+        assert_raises_rpc_error(-8, \"parameter 3 must be hexadecimal\", self.nodes[0].getrawtransaction, tx, True, \"foobar\")",
    "path": "test/functional/rawtransactions.py",
    "position": 24,
    "original_position": 20,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "650e4eee922d689a5d5d5a4c62fb6d9cf0e71529",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "First test checks for non-string, this one for non-hexadecimal string. May be redundant but they check different things.",
    "created_at": "2017-12-05T03:26:06Z",
    "updated_at": "2017-12-05T03:28:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154838762",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154838762"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154838762"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154838762/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 73,
    "original_line": 73,
    "side": "RIGHT",
    "in_reply_to_id": 154831307
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154956174",
    "pull_request_review_id": 81195223,
    "id": 154956174,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDk1NjE3NA==",
    "diff_hunk": "@@ -188,13 +212,13 @@ def run_test(self):\n         assert_equal(self.nodes[0].getrawtransaction(txHash, True)[\"hex\"], rawTxSigned['hex'])\n \n         # 6. invalid parameters - supply txid and string \"Flase\"\n-        assert_raises_rpc_error(-3,\"Invalid type\", self.nodes[0].getrawtransaction, txHash, \"Flase\")\n+        assert_raises_rpc_error(-1,\"not a boolean\", self.nodes[0].getrawtransaction, txHash, \"Flase\")",
    "path": "test/functional/rawtransactions.py",
    "position": 36,
    "original_position": 36,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit, add space after `,`. Same below.",
    "created_at": "2017-12-05T14:15:34Z",
    "updated_at": "2017-12-05T14:21:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154956174",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154956174"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154956174"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154956174/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 215,
    "original_line": 215,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154956472",
    "pull_request_review_id": 81195223,
    "id": 154956472,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDk1NjQ3Mg==",
    "diff_hunk": "@@ -50,6 +50,30 @@ def run_test(self):\n         # This will raise an exception since there are missing inputs\n         assert_raises_rpc_error(-25, \"Missing inputs\", self.nodes[2].sendrawtransaction, rawtx['hex'])\n \n+        #####################################\n+        # getrawtransaction with block hash #\n+        #####################################\n+\n+        # make a tx by sending then generate 2 blocks; block1 has the tx in it\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        block1, block2 = self.nodes[2].generate(2)\n+        self.sync_all()\n+        # We should be able to get the raw transaction by providing the correct block",
    "path": "test/functional/rawtransactions.py",
    "position": 12,
    "original_position": 12,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit, remaining comments are lowercase. Same below.",
    "created_at": "2017-12-05T14:16:31Z",
    "updated_at": "2017-12-05T14:21:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154956472",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154956472"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154956472"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154956472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 61,
    "original_line": 61,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154956832",
    "pull_request_review_id": 81195223,
    "id": 154956832,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDk1NjgzMg==",
    "diff_hunk": "@@ -50,6 +50,30 @@ def run_test(self):\n         # This will raise an exception since there are missing inputs\n         assert_raises_rpc_error(-25, \"Missing inputs\", self.nodes[2].sendrawtransaction, rawtx['hex'])\n \n+        #####################################\n+        # getrawtransaction with block hash #\n+        #####################################\n+\n+        # make a tx by sending then generate 2 blocks; block1 has the tx in it\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        block1, block2 = self.nodes[2].generate(2)\n+        self.sync_all()\n+        # We should be able to get the raw transaction by providing the correct block\n+        gottx = self.nodes[0].getrawtransaction(tx, True, block1)\n+        assert_equal(gottx['txid'], tx)\n+        assert_equal(gottx['in_active_chain'], True)\n+        # We should not have the 'in_active_chain' flag when we don't provide a block\n+        gottx = self.nodes[0].getrawtransaction(tx, True)",
    "path": "test/functional/rawtransactions.py",
    "position": 17,
    "original_position": 17,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Calling without blockhash in a *section* where the RPC is tested with a block hash :trollface: maybe move this elsewhere?",
    "created_at": "2017-12-05T14:17:43Z",
    "updated_at": "2017-12-05T14:21:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154956832",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154956832"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154956832"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154956832/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 66,
    "original_line": 66,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154957937",
    "pull_request_review_id": 81195223,
    "id": 154957937,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDk1NzkzNw==",
    "diff_hunk": "@@ -132,42 +137,58 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockindex = nullptr;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n-        if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n-        }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+        fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    if (!request.params[2].isNull()) {\n+        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");",
    "path": "src/rpc/rawtransaction.cpp",
    "position": 65,
    "original_position": 65,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could use parameter name instead of `parameter 3`? This is ugly for named args. (fix others in a new commit or in a follow up PR, whatever).",
    "created_at": "2017-12-05T14:21:25Z",
    "updated_at": "2017-12-05T14:21:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154957937",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154957937"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r154957937"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154957937/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 157,
    "original_line": 157,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155110399",
    "pull_request_review_id": 81375709,
    "id": 155110399,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTExMDM5OQ==",
    "diff_hunk": "@@ -132,30 +137,58 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;",
    "path": "src/rpc/rawtransaction.cpp",
    "position": 46,
    "original_position": 46,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "b16795167704687d908f881dacf04d388db28cb3",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "<strike> nit: Should not be initialized, to aid static analysers. </strike>\r\n\r\nStrike that. gcc would throw a warning.",
    "created_at": "2017-12-05T23:44:53Z",
    "updated_at": "2017-12-06T01:43:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r155110399",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155110399"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r155110399"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155110399/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 146,
    "original_line": 146,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155138708",
    "pull_request_review_id": 81407544,
    "id": 155138708,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTEzODcwOA==",
    "diff_hunk": "@@ -50,6 +50,30 @@ def run_test(self):\n         # This will raise an exception since there are missing inputs\n         assert_raises_rpc_error(-25, \"Missing inputs\", self.nodes[2].sendrawtransaction, rawtx['hex'])\n \n+        #####################################\n+        # getrawtransaction with block hash #\n+        #####################################\n+\n+        # make a tx by sending then generate 2 blocks; block1 has the tx in it\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        block1, block2 = self.nodes[2].generate(2)\n+        self.sync_all()\n+        # We should be able to get the raw transaction by providing the correct block\n+        gottx = self.nodes[0].getrawtransaction(tx, True, block1)\n+        assert_equal(gottx['txid'], tx)\n+        assert_equal(gottx['in_active_chain'], True)\n+        # We should not have the 'in_active_chain' flag when we don't provide a block\n+        gottx = self.nodes[0].getrawtransaction(tx, True)",
    "path": "test/functional/rawtransactions.py",
    "position": 17,
    "original_position": 17,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`in_active_chain` is a part of the blockhash stuff, though, so it sort of makes sense to keep the test together with the others.",
    "created_at": "2017-12-06T03:27:08Z",
    "updated_at": "2017-12-06T03:27:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r155138708",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155138708"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r155138708"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155138708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 66,
    "original_line": 66,
    "side": "RIGHT",
    "in_reply_to_id": 154956832
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155138788",
    "pull_request_review_id": 81407634,
    "id": 155138788,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTEzODc4OA==",
    "diff_hunk": "@@ -132,42 +137,58 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockindex = nullptr;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n-        if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n-        }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+        fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    if (!request.params[2].isNull()) {\n+        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");",
    "path": "src/rpc/rawtransaction.cpp",
    "position": 65,
    "original_position": 65,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is used in a ton of places. I never saw consensus on what exactly to do and chose to stick with it for now. As you said, different PR.",
    "created_at": "2017-12-06T03:27:57Z",
    "updated_at": "2017-12-06T03:27:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r155138788",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155138788"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r155138788"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155138788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 157,
    "original_line": 157,
    "side": "RIGHT",
    "in_reply_to_id": 154957937
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155379281",
    "pull_request_review_id": 81689365,
    "id": 155379281,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTM3OTI4MQ==",
    "diff_hunk": "@@ -132,42 +137,58 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockindex = nullptr;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n-        if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n-        }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n+        fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n+    }\n+\n+    if (!request.params[2].isNull()) {\n+        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");",
    "path": "src/rpc/rawtransaction.cpp",
    "position": 65,
    "original_position": 65,
    "commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "original_commit_id": "434526aba680cb73208e018a02827d51a71cfff6",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: these lines are confusing for me:\r\n\r\n```\r\n        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");\r\n        if (!blockhash.IsNull()) {\r\n```\r\n\r\n`ParseHashV()` can either throw or return a uint256. The only way it'll return a null uint256 is if the input is a 64 length string of `0`s. That can't be a valid block (if someone finds a block that hashes to zero then they win Bitcoin The Game and we can all stop playing), so I think that this if condition is unnecessary - if parameter 3 is all zeroes, we should throw with the error that 0x0 is an invalid block.\r\n\r\nI don't think this is a huge problem - if all zeroes is supplied as the block hash, we'll just drop through and search for the transaction in the {mempool , blockchain (if fTxIndex) , UTXO set} as if no block hash had been provided. However, it's a bit confusing for the code reader since it implies to me that we're expecting `ParseHashV()` to return a null value if it fails to parse the hash.",
    "created_at": "2017-12-06T22:22:18Z",
    "updated_at": "2017-12-06T22:22:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r155379281",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155379281"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r155379281"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155379281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 157,
    "original_line": 157,
    "side": "RIGHT"
  }
]