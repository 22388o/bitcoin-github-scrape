[
  {
    "sha": "6da625ac08d744a8e36ff8f7d67dc945fae9b365",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZGE2MjVhYzA4ZDc0NGE4ZTM2ZmY4ZjdkNjdkYzk0NWZhZTliMzY1",
    "commit": {
      "author": {
        "name": "Dan Raviv",
        "email": "dan@soundradix.com",
        "date": "2017-09-16T18:13:23Z"
      },
      "committer": {
        "name": "Dan Raviv",
        "email": "dan@soundradix.com",
        "date": "2017-09-16T18:13:23Z"
      },
      "message": "Improve handling of FRESH child with non-DIRTY parent in CCoinsViewCache::BatchWrite()\n\nIn case the child is FRESH and the parent is non-DIRTY, that is its state has been communicated to the grandparent (if exists), the FRESH status can be copied to the parent.",
      "tree": {
        "sha": "9bfd83c6ec90b2b9b1e4d107979c6441c1b7eb09",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9bfd83c6ec90b2b9b1e4d107979c6441c1b7eb09"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6da625ac08d744a8e36ff8f7d67dc945fae9b365",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6da625ac08d744a8e36ff8f7d67dc945fae9b365",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6da625ac08d744a8e36ff8f7d67dc945fae9b365",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6da625ac08d744a8e36ff8f7d67dc945fae9b365/comments",
    "author": {
      "login": "danra",
      "id": 84245,
      "node_id": "MDQ6VXNlcjg0MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/84245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danra",
      "html_url": "https://github.com/danra",
      "followers_url": "https://api.github.com/users/danra/followers",
      "following_url": "https://api.github.com/users/danra/following{/other_user}",
      "gists_url": "https://api.github.com/users/danra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danra/subscriptions",
      "organizations_url": "https://api.github.com/users/danra/orgs",
      "repos_url": "https://api.github.com/users/danra/repos",
      "events_url": "https://api.github.com/users/danra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danra/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "danra",
      "id": 84245,
      "node_id": "MDQ6VXNlcjg0MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/84245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danra",
      "html_url": "https://github.com/danra",
      "followers_url": "https://api.github.com/users/danra/followers",
      "following_url": "https://api.github.com/users/danra/following{/other_user}",
      "gists_url": "https://api.github.com/users/danra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danra/subscriptions",
      "organizations_url": "https://api.github.com/users/danra/orgs",
      "repos_url": "https://api.github.com/users/danra/repos",
      "events_url": "https://api.github.com/users/danra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danra/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e278f86c536921032e8288625dc5f3af610f2ec8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e278f86c536921032e8288625dc5f3af610f2ec8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e278f86c536921032e8288625dc5f3af610f2ec8"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 7,
      "deletions": 8
    },
    "files": [
      {
        "sha": "099315358f31457ddc4bec7b70c1a2fb9049de7a",
        "filename": "src/coins.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6da625ac08d744a8e36ff8f7d67dc945fae9b365/src/coins.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6da625ac08d744a8e36ff8f7d67dc945fae9b365/src/coins.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.cpp?ref=6da625ac08d744a8e36ff8f7d67dc945fae9b365",
        "patch": "@@ -182,15 +182,14 @@ bool CCoinsViewCache::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlockIn\n                     cacheCoins.erase(itUs);\n                 } else {\n                     // A normal modification.\n+                    // In case the child is FRESH, apply it to the parent only\n+                    // if it assured to have communicated its state to the\n+                    // grandparent, that is if the parent isn't DIRTY.\n+                    const bool fresh = (it->second.flags & CCoinsCacheEntry::FRESH) && (!(itUs->second.flags & CCoinsCacheEntry::DIRTY));\n                     cachedCoinsUsage -= itUs->second.coin.DynamicMemoryUsage();\n                     itUs->second.coin = std::move(it->second.coin);\n                     cachedCoinsUsage += itUs->second.coin.DynamicMemoryUsage();\n-                    itUs->second.flags |= CCoinsCacheEntry::DIRTY;\n-                    // NOTE: It is possible the child has a FRESH flag here in\n-                    // the event the entry we found in the parent is pruned. But\n-                    // we must not copy that FRESH flag to the parent as that\n-                    // pruned state likely still needs to be communicated to the\n-                    // grandparent.\n+                    itUs->second.flags |= CCoinsCacheEntry::DIRTY | (fresh ? CCoinsCacheEntry::FRESH : 0);\n                 }\n             }\n         }"
      },
      {
        "sha": "bc652765552ad868d2d2f170a9d23e64e7c116f5",
        "filename": "src/test/coins_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6da625ac08d744a8e36ff8f7d67dc945fae9b365/src/test/coins_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6da625ac08d744a8e36ff8f7d67dc945fae9b365/src/test/coins_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/coins_tests.cpp?ref=6da625ac08d744a8e36ff8f7d67dc945fae9b365",
        "patch": "@@ -808,15 +808,15 @@ BOOST_AUTO_TEST_CASE(ccoins_write)\n     CheckWriteCoins(PRUNED, ABSENT, PRUNED, DIRTY      , NO_ENTRY   , DIRTY      );\n     CheckWriteCoins(PRUNED, ABSENT, PRUNED, DIRTY|FRESH, NO_ENTRY   , DIRTY|FRESH);\n     CheckWriteCoins(PRUNED, PRUNED, PRUNED, 0          , DIRTY      , DIRTY      );\n-    CheckWriteCoins(PRUNED, PRUNED, PRUNED, 0          , DIRTY|FRESH, DIRTY      );\n+    CheckWriteCoins(PRUNED, PRUNED, PRUNED, 0          , DIRTY|FRESH, DIRTY|FRESH);\n     CheckWriteCoins(PRUNED, PRUNED, ABSENT, FRESH      , DIRTY      , NO_ENTRY   );\n     CheckWriteCoins(PRUNED, PRUNED, ABSENT, FRESH      , DIRTY|FRESH, NO_ENTRY   );\n     CheckWriteCoins(PRUNED, PRUNED, PRUNED, DIRTY      , DIRTY      , DIRTY      );\n     CheckWriteCoins(PRUNED, PRUNED, PRUNED, DIRTY      , DIRTY|FRESH, DIRTY      );\n     CheckWriteCoins(PRUNED, PRUNED, ABSENT, DIRTY|FRESH, DIRTY      , NO_ENTRY   );\n     CheckWriteCoins(PRUNED, PRUNED, ABSENT, DIRTY|FRESH, DIRTY|FRESH, NO_ENTRY   );\n     CheckWriteCoins(PRUNED, VALUE2, VALUE2, 0          , DIRTY      , DIRTY      );\n-    CheckWriteCoins(PRUNED, VALUE2, VALUE2, 0          , DIRTY|FRESH, DIRTY      );\n+    CheckWriteCoins(PRUNED, VALUE2, VALUE2, 0          , DIRTY|FRESH, DIRTY|FRESH);\n     CheckWriteCoins(PRUNED, VALUE2, VALUE2, FRESH      , DIRTY      , DIRTY|FRESH);\n     CheckWriteCoins(PRUNED, VALUE2, VALUE2, FRESH      , DIRTY|FRESH, DIRTY|FRESH);\n     CheckWriteCoins(PRUNED, VALUE2, VALUE2, DIRTY      , DIRTY      , DIRTY      );"
      }
    ]
  }
]