[
  {
    "sha": "7e24a90ff08d57cd51c04bf296faf2bfb422a146",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZTI0YTkwZmYwOGQ1N2NkNTFjMDRiZjI5NmZhZjJiZmI0MjJhMTQ2",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-06-13T19:13:33Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2021-04-13T04:07:04Z"
      },
      "message": "Drop nType argument from SerializeHash\n\nAll callers either relied on the default value of SER_GETHASH or provided\nSER_GETHASH.",
      "tree": {
        "sha": "59b04d464b684266d1e097fbc7eaea859a3a621e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/59b04d464b684266d1e097fbc7eaea859a3a621e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e24a90ff08d57cd51c04bf296faf2bfb422a146",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+XLHXoy4Dim7e8hvTYykuhgECQYFAmB1GOgACgkQTYykuhgE\nCQbMFg//ZemucAeQzEKvP+nKWZuvMpHPbCih285i2a11DqzKsaYvi1p/0XsDTfDP\nm4tA2R9ZER3Wf3V8dJ4/WPxRm9iaMl0/LLw80WOD/n0C6Uj/381radAsp4XFPnf/\nGPvE8RF0kQsK39ucMf53qsPPMaeXn4kH/BNg9FNrdhX8+igM6ogAOv1dzUK1uOCN\ntC0dxifm+ZbT4MqG2kuk4Cmo019VZj5HQXYUl0LkJFA3LLqPflf9psGaFuUjq4FN\nfT9Oj9WFbIloDjQfKrr+bzGRpdn67t89/6MlRl70WLnFzLiTxgfBQXQu0NG2t38Y\nz53iSZRT4SWd/mO9RAJ/53yEMroh0N6P5mWa4F2di3wnTCF95G+jgm13L/LS9+ds\nJNTR3PXAdXdZ+sQAz9ukzUi2UhrTNgQtgYlcDHxpq1WB05/tX6Hlb0WVJgCZ6MUL\npTeaQ+2wy5EbFOLCJDsT0JgACTVHSC3+h5FsGGVP6Cs1bNMF38n+P2kL8jcGgayG\nTdwYBGX6acEV+pDnDt2n7O1/wzKmOb77uuE5fDHGxg1bsC1/4Y4Uj0j4DmLDUDXq\nQDbK0VNFLqAX2deR0d5iTtqpXfTwkrQJeLCfCHHYvfCkl+dFkORZCiCNE/UWIoIn\nbtCuE8AxuLsLSBFFANr49u+2AQgWvvnToDtcpmRQox7jBPQ61Fs=\n=QM/F\n-----END PGP SIGNATURE-----",
        "payload": "tree 59b04d464b684266d1e097fbc7eaea859a3a621e\nparent bd65a76b9d97d7fe36a7cceb23cc44cbec955c21\nauthor Ben Woosley <ben.woosley@gmail.com> 1528917213 -0500\ncommitter Ben Woosley <ben.woosley@gmail.com> 1618286824 -0700\n\nDrop nType argument from SerializeHash\n\nAll callers either relied on the default value of SER_GETHASH or provided\nSER_GETHASH.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e24a90ff08d57cd51c04bf296faf2bfb422a146",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7e24a90ff08d57cd51c04bf296faf2bfb422a146",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e24a90ff08d57cd51c04bf296faf2bfb422a146/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bd65a76b9d97d7fe36a7cceb23cc44cbec955c21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd65a76b9d97d7fe36a7cceb23cc44cbec955c21",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bd65a76b9d97d7fe36a7cceb23cc44cbec955c21"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "786a89a0b69a7dbf7bd10e077ce081105ac3be72",
        "filename": "src/hash.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e24a90ff08d57cd51c04bf296faf2bfb422a146/src/hash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e24a90ff08d57cd51c04bf296faf2bfb422a146/src/hash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.h?ref=7e24a90ff08d57cd51c04bf296faf2bfb422a146",
        "patch": "@@ -189,9 +189,9 @@ class CHashVerifier : public CHashWriter\n \n /** Compute the 256-bit hash of an object's serialization. */\n template<typename T>\n-uint256 SerializeHash(const T& obj, int nType=SER_GETHASH, int nVersion=PROTOCOL_VERSION)\n+uint256 SerializeHash(const T& obj, int nVersion=PROTOCOL_VERSION)\n {\n-    CHashWriter ss(nType, nVersion);\n+    CHashWriter ss(SER_GETHASH, nVersion);\n     ss << obj;\n     return ss.GetHash();\n }"
      },
      {
        "sha": "b5bd539def3072ed8b4b40e098e4042e60aaae22",
        "filename": "src/primitives/transaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e24a90ff08d57cd51c04bf296faf2bfb422a146/src/primitives/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e24a90ff08d57cd51c04bf296faf2bfb422a146/src/primitives/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.cpp?ref=7e24a90ff08d57cd51c04bf296faf2bfb422a146",
        "patch": "@@ -61,20 +61,20 @@ CMutableTransaction::CMutableTransaction(const CTransaction& tx) : vin(tx.vin),\n \n uint256 CMutableTransaction::GetHash() const\n {\n-    return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n+    return SerializeHash(*this, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n uint256 CTransaction::ComputeHash() const\n {\n-    return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n+    return SerializeHash(*this, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n uint256 CTransaction::ComputeWitnessHash() const\n {\n     if (!HasWitness()) {\n         return hash;\n     }\n-    return SerializeHash(*this, SER_GETHASH, 0);\n+    return SerializeHash(*this, 0);\n }\n \n CTransaction::CTransaction(const CMutableTransaction& tx) : vin(tx.vin), vout(tx.vout), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash{ComputeHash()}, m_witness_hash{ComputeWitnessHash()} {}"
      }
    ]
  },
  {
    "sha": "ed4f4f52c5a6a8a1dd0f23368bd57e405e706524",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZDRmNGY1MmM1YTZhOGExZGQwZjIzMzY4YmQ1N2U0MDVlNzA2NTI0",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-06-13T20:03:43Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2021-04-13T04:07:04Z"
      },
      "message": "Add convenience constructors for CHashWriter",
      "tree": {
        "sha": "02b7199283341a4a15c028252bf3f1bfdb8b80c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/02b7199283341a4a15c028252bf3f1bfdb8b80c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed4f4f52c5a6a8a1dd0f23368bd57e405e706524",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+XLHXoy4Dim7e8hvTYykuhgECQYFAmB1GOgACgkQTYykuhgE\nCQZjtg//fx02Tzbjbqspyq7mkYl+ZjMTQqrEjybgakNFinU6XTsWl9cnGwW2QStD\nH2fe0UkHSjA+LbfVvCtf7gZ2c/2oLPj3AVlKzovZgban+W36H8+xsSMpjYRsNb/C\nV+iVZSdugtSHDcyHqBMQxKhFl5096HXpThHEVC6U9cIGmzcPbxIF9FtvRD94hyQa\niyosN9rBMKY2lhALQvoDqcYAr4pGrs2QxOofhdeRB4mfIoCn4jP7hs2JxdTzudva\nYAgnxY25sQlBoHRL7LRAaQmLdaasxmASJvnYGBjDT+z1F+kCmHDVu2751DLIMTq2\niVTTPDWJiYBCejwpCCs3cxu9orwVS3uVEvztTgFp7p53Cd6kthg1HGAmCJ1rFteW\npgmkEZZ20/FqhLvUeUeC3g32FGXMekjvYCVlo0BT+JeAclLhYu+Tr3QcMk/BBYhx\n+6GvcGPBeWv3NkUKOt139iq66oxbdjM2ReLiIkwikxNvvenmiVDXy4DdlB0wcOzI\n+8pbido9fMt38QUx3gKGRpTTOb69vMDgAtmiFV9Xwc5KuA86MfxKDlKIaM8ZSCNe\nWmafY6bP2ZGMJqgNxjiebSUgghGf3pbgKeLux12UiLrg1Tt+I7qtLsj0J+dvViao\nMCKJL/TAbvtGUVDD45fMT0uWz75hK0NTEzUGdN+idkVDVMDTGCs=\n=c2oG\n-----END PGP SIGNATURE-----",
        "payload": "tree 02b7199283341a4a15c028252bf3f1bfdb8b80c1\nparent 7e24a90ff08d57cd51c04bf296faf2bfb422a146\nauthor Ben Woosley <ben.woosley@gmail.com> 1528920223 -0500\ncommitter Ben Woosley <ben.woosley@gmail.com> 1618286824 -0700\n\nAdd convenience constructors for CHashWriter\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed4f4f52c5a6a8a1dd0f23368bd57e405e706524",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ed4f4f52c5a6a8a1dd0f23368bd57e405e706524",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed4f4f52c5a6a8a1dd0f23368bd57e405e706524/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7e24a90ff08d57cd51c04bf296faf2bfb422a146",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e24a90ff08d57cd51c04bf296faf2bfb422a146",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7e24a90ff08d57cd51c04bf296faf2bfb422a146"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c19314999a1135a4a57b0a4dc24d04780b273628",
        "filename": "src/hash.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed4f4f52c5a6a8a1dd0f23368bd57e405e706524/src/hash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed4f4f52c5a6a8a1dd0f23368bd57e405e706524/src/hash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.h?ref=ed4f4f52c5a6a8a1dd0f23368bd57e405e706524",
        "patch": "@@ -106,6 +106,8 @@ class CHashWriter\n     const int nVersion;\n public:\n \n+    CHashWriter() : CHashWriter(SER_GETHASH, 0) {}\n+    CHashWriter(int nVersionIn) : CHashWriter(SER_GETHASH, nVersionIn) {}\n     CHashWriter(int nTypeIn, int nVersionIn) : nType(nTypeIn), nVersion(nVersionIn) {}\n \n     int GetType() const { return nType; }"
      }
    ]
  },
  {
    "sha": "8940a68d77778bcf5429f12a0eff8a430806f81f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OTQwYTY4ZDc3Nzc4YmNmNTQyOWYxMmEwZWZmOGE0MzA4MDZmODFm",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-02-28T22:26:19Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2021-04-13T05:16:27Z"
      },
      "message": "scripted-diff: Use new CHashWriter constructors\n\n-BEGIN VERIFY SCRIPT-\nsed -i -E \"s/CHashWriter\\(SER_GETHASH, 0\\)(.[^{])/CHashWriter()\\1/\" $(git grep -l 'CHashWriter')\nsed -i -E \"s/CHashWriter (.+)\\(SER_GETHASH, 0\\)/CHashWriter \\1/\" $(git grep -l 'CHashWriter')\nsed -i -E \"s/CHashWriter (.+)\\(SER_GETHASH, /CHashWriter \\1(/\" $(git grep -l 'CHashWriter')\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "7830a1bf7f07d854dc74093627ca8e36f165bf62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7830a1bf7f07d854dc74093627ca8e36f165bf62"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8940a68d77778bcf5429f12a0eff8a430806f81f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+XLHXoy4Dim7e8hvTYykuhgECQYFAmB1KSwACgkQTYykuhgE\nCQZYKBAAjHmIpsAOCWns/BUaTwd68AiMynB4CcACnao1R1GQavb00xvRlSWvCTLr\nXh1Ff6RhkM9q8R2CwQUn5fSvJsNLw1eSvz82bvzhCv87DmCwUfSETh5pDgp95wC7\nniA+rGerFkNbLtvI63ntolvM4cLsoTNTuyxvp5Knq1M9853eYyDyhFcP2CQbfiDy\nyRBLJLSYsp5wLMHC73vReEI2VAldVCm7lbWwGk4iSCz+a6CfcjEjVHivsFbYuIc1\nF3oxflB9pAubzP/in4ibrukIOwk621vDXi7ucB5Q/n/BMLAX7m+kDQk47tSQGdfh\noCHz1lECe42ndtWouQJ2l+QOLnXULanWdJd/byOnMjSAzWs57o948FyCSo4c+X64\ni7ekYXwlhbyBBTWdn5AKkOkPefwDmL5yJkl3FQzYWUZdVnvhUWDaXoRMh2sXXoCt\nO8+OtE0LtTkBJpZ+VoIxOou4bSWMjbjXD4huiFOPQ+I2P7cSW3eMVr5Te+Pm6GyB\nZDYD2tInaWLpad8GBg3TeJ2oEBCcn0FDcpKkMQ4YwoZ9nz5WsVrGF3vKUtpypYDp\nsZKqZmfxFtyvTIYCNEwuSutor4Xj6OwRizlisMO8RPvWC7e6nz9Qol56XnzPrsJa\nPC6RUXEbEYEMHLs+r7+GDkwn0fgfA0oAQ95beiKD1wuWymc9qhU=\n=8XU4\n-----END PGP SIGNATURE-----",
        "payload": "tree 7830a1bf7f07d854dc74093627ca8e36f165bf62\nparent ed4f4f52c5a6a8a1dd0f23368bd57e405e706524\nauthor Ben Woosley <ben.woosley@gmail.com> 1582928779 -0800\ncommitter Ben Woosley <ben.woosley@gmail.com> 1618290987 -0700\n\nscripted-diff: Use new CHashWriter constructors\n\n-BEGIN VERIFY SCRIPT-\nsed -i -E \"s/CHashWriter\\(SER_GETHASH, 0\\)(.[^{])/CHashWriter()\\1/\" $(git grep -l 'CHashWriter')\nsed -i -E \"s/CHashWriter (.+)\\(SER_GETHASH, 0\\)/CHashWriter \\1/\" $(git grep -l 'CHashWriter')\nsed -i -E \"s/CHashWriter (.+)\\(SER_GETHASH, /CHashWriter \\1(/\" $(git grep -l 'CHashWriter')\n-END VERIFY SCRIPT-\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8940a68d77778bcf5429f12a0eff8a430806f81f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8940a68d77778bcf5429f12a0eff8a430806f81f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8940a68d77778bcf5429f12a0eff8a430806f81f/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ed4f4f52c5a6a8a1dd0f23368bd57e405e706524",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed4f4f52c5a6a8a1dd0f23368bd57e405e706524",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ed4f4f52c5a6a8a1dd0f23368bd57e405e706524"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 29,
      "deletions": 29
    },
    "files": [
      {
        "sha": "842888e5c7b0a5563a35a777f697e10a46c3faf5",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8940a68d77778bcf5429f12a0eff8a430806f81f/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8940a68d77778bcf5429f12a0eff8a430806f81f/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=8940a68d77778bcf5429f12a0eff8a430806f81f",
        "patch": "@@ -13,8 +13,8 @@\n \n int CAddrInfo::GetTriedBucket(const uint256& nKey, const std::vector<bool> &asmap) const\n {\n-    uint64_t hash1 = (CHashWriter(SER_GETHASH, 0) << nKey << GetKey()).GetCheapHash();\n-    uint64_t hash2 = (CHashWriter(SER_GETHASH, 0) << nKey << GetGroup(asmap) << (hash1 % ADDRMAN_TRIED_BUCKETS_PER_GROUP)).GetCheapHash();\n+    uint64_t hash1 = (CHashWriter() << nKey << GetKey()).GetCheapHash();\n+    uint64_t hash2 = (CHashWriter() << nKey << GetGroup(asmap) << (hash1 % ADDRMAN_TRIED_BUCKETS_PER_GROUP)).GetCheapHash();\n     int tried_bucket = hash2 % ADDRMAN_TRIED_BUCKET_COUNT;\n     uint32_t mapped_as = GetMappedAS(asmap);\n     LogPrint(BCLog::NET, \"IP %s mapped to AS%i belongs to tried bucket %i\\n\", ToStringIP(), mapped_as, tried_bucket);\n@@ -24,8 +24,8 @@ int CAddrInfo::GetTriedBucket(const uint256& nKey, const std::vector<bool> &asma\n int CAddrInfo::GetNewBucket(const uint256& nKey, const CNetAddr& src, const std::vector<bool> &asmap) const\n {\n     std::vector<unsigned char> vchSourceGroupKey = src.GetGroup(asmap);\n-    uint64_t hash1 = (CHashWriter(SER_GETHASH, 0) << nKey << GetGroup(asmap) << vchSourceGroupKey).GetCheapHash();\n-    uint64_t hash2 = (CHashWriter(SER_GETHASH, 0) << nKey << vchSourceGroupKey << (hash1 % ADDRMAN_NEW_BUCKETS_PER_SOURCE_GROUP)).GetCheapHash();\n+    uint64_t hash1 = (CHashWriter() << nKey << GetGroup(asmap) << vchSourceGroupKey).GetCheapHash();\n+    uint64_t hash2 = (CHashWriter() << nKey << vchSourceGroupKey << (hash1 % ADDRMAN_NEW_BUCKETS_PER_SOURCE_GROUP)).GetCheapHash();\n     int new_bucket = hash2 % ADDRMAN_NEW_BUCKET_COUNT;\n     uint32_t mapped_as = GetMappedAS(asmap);\n     LogPrint(BCLog::NET, \"IP %s mapped to AS%i belongs to new bucket %i\\n\", ToStringIP(), mapped_as, new_bucket);\n@@ -34,7 +34,7 @@ int CAddrInfo::GetNewBucket(const uint256& nKey, const CNetAddr& src, const std:\n \n int CAddrInfo::GetBucketPosition(const uint256 &nKey, bool fNew, int nBucket) const\n {\n-    uint64_t hash1 = (CHashWriter(SER_GETHASH, 0) << nKey << (fNew ? 'N' : 'K') << nBucket << GetKey()).GetCheapHash();\n+    uint64_t hash1 = (CHashWriter() << nKey << (fNew ? 'N' : 'K') << nBucket << GetKey()).GetCheapHash();\n     return hash1 % ADDRMAN_BUCKET_SIZE;\n }\n "
      },
      {
        "sha": "713cec569787f076838a46b126f61487c5feee3c",
        "filename": "src/hash.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8940a68d77778bcf5429f12a0eff8a430806f81f/src/hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8940a68d77778bcf5429f12a0eff8a430806f81f/src/hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.cpp?ref=8940a68d77778bcf5429f12a0eff8a430806f81f",
        "patch": "@@ -88,7 +88,7 @@ uint256 SHA256Uint256(const uint256& input)\n \n CHashWriter TaggedHash(const std::string& tag)\n {\n-    CHashWriter writer(SER_GETHASH, 0);\n+    CHashWriter writer;\n     uint256 taghash;\n     CSHA256().Write((const unsigned char*)tag.data(), tag.size()).Finalize(taghash.begin());\n     writer << taghash << taghash;"
      },
      {
        "sha": "7f0dfa6a128234321eacdb315fef848fff42934b",
        "filename": "src/hash.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8940a68d77778bcf5429f12a0eff8a430806f81f/src/hash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8940a68d77778bcf5429f12a0eff8a430806f81f/src/hash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.h?ref=8940a68d77778bcf5429f12a0eff8a430806f81f",
        "patch": "@@ -193,7 +193,7 @@ class CHashVerifier : public CHashWriter\n template<typename T>\n uint256 SerializeHash(const T& obj, int nVersion=PROTOCOL_VERSION)\n {\n-    CHashWriter ss(SER_GETHASH, nVersion);\n+    CHashWriter ss(nVersion);\n     ss << obj;\n     return ss.GetHash();\n }"
      },
      {
        "sha": "7e92b38f57bcff4014188e9795938151fc8d8cac",
        "filename": "src/node/coinstats.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8940a68d77778bcf5429f12a0eff8a430806f81f/src/node/coinstats.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8940a68d77778bcf5429f12a0eff8a430806f81f/src/node/coinstats.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/coinstats.cpp?ref=8940a68d77778bcf5429f12a0eff8a430806f81f",
        "patch": "@@ -133,7 +133,7 @@ bool GetUTXOStats(CCoinsView* view, BlockManager& blockman, CCoinsStats& stats,\n {\n     switch (hash_type) {\n     case(CoinStatsHashType::HASH_SERIALIZED): {\n-        CHashWriter ss(SER_GETHASH, PROTOCOL_VERSION);\n+        CHashWriter ss(PROTOCOL_VERSION);\n         return GetUTXOStats(view, blockman, stats, ss, interruption_point);\n     }\n     case(CoinStatsHashType::MUHASH): {"
      },
      {
        "sha": "834ae17e6f269f75a7ccce009db2bfaa65355683",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8940a68d77778bcf5429f12a0eff8a430806f81f/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8940a68d77778bcf5429f12a0eff8a430806f81f/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=8940a68d77778bcf5429f12a0eff8a430806f81f",
        "patch": "@@ -1367,7 +1367,7 @@ class CTransactionSignatureSerializer\n template <class T>\n uint256 GetPrevoutsSHA256(const T& txTo)\n {\n-    CHashWriter ss(SER_GETHASH, 0);\n+    CHashWriter ss;\n     for (const auto& txin : txTo.vin) {\n         ss << txin.prevout;\n     }\n@@ -1378,7 +1378,7 @@ uint256 GetPrevoutsSHA256(const T& txTo)\n template <class T>\n uint256 GetSequencesSHA256(const T& txTo)\n {\n-    CHashWriter ss(SER_GETHASH, 0);\n+    CHashWriter ss;\n     for (const auto& txin : txTo.vin) {\n         ss << txin.nSequence;\n     }\n@@ -1389,7 +1389,7 @@ uint256 GetSequencesSHA256(const T& txTo)\n template <class T>\n uint256 GetOutputsSHA256(const T& txTo)\n {\n-    CHashWriter ss(SER_GETHASH, 0);\n+    CHashWriter ss;\n     for (const auto& txout : txTo.vout) {\n         ss << txout;\n     }\n@@ -1399,7 +1399,7 @@ uint256 GetOutputsSHA256(const T& txTo)\n /** Compute the (single) SHA256 of the concatenation of all amounts spent by a tx. */\n uint256 GetSpentAmountsSHA256(const std::vector<CTxOut>& outputs_spent)\n {\n-    CHashWriter ss(SER_GETHASH, 0);\n+    CHashWriter ss;\n     for (const auto& txout : outputs_spent) {\n         ss << txout.nValue;\n     }\n@@ -1409,7 +1409,7 @@ uint256 GetSpentAmountsSHA256(const std::vector<CTxOut>& outputs_spent)\n /** Compute the (single) SHA256 of the concatenation of all scriptPubKeys spent by a tx. */\n uint256 GetSpentScriptsSHA256(const std::vector<CTxOut>& outputs_spent)\n {\n-    CHashWriter ss(SER_GETHASH, 0);\n+    CHashWriter ss;\n     for (const auto& txout : outputs_spent) {\n         ss << txout.scriptPubKey;\n     }\n@@ -1569,7 +1569,7 @@ bool SignatureHashSchnorr(uint256& hash_out, const ScriptExecutionData& execdata\n     // Data about the output (if only one).\n     if (output_type == SIGHASH_SINGLE) {\n         if (in_pos >= tx_to.vout.size()) return false;\n-        CHashWriter sha_single_output(SER_GETHASH, 0);\n+        CHashWriter sha_single_output;\n         sha_single_output << tx_to.vout[in_pos];\n         ss << sha_single_output.GetSHA256();\n     }\n@@ -1610,12 +1610,12 @@ uint256 SignatureHash(const CScript& scriptCode, const T& txTo, unsigned int nIn\n         if ((nHashType & 0x1f) != SIGHASH_SINGLE && (nHashType & 0x1f) != SIGHASH_NONE) {\n             hashOutputs = cacheready ? cache->hashOutputs : SHA256Uint256(GetOutputsSHA256(txTo));\n         } else if ((nHashType & 0x1f) == SIGHASH_SINGLE && nIn < txTo.vout.size()) {\n-            CHashWriter ss(SER_GETHASH, 0);\n+            CHashWriter ss;\n             ss << txTo.vout[nIn];\n             hashOutputs = ss.GetHash();\n         }\n \n-        CHashWriter ss(SER_GETHASH, 0);\n+        CHashWriter ss;\n         // Version\n         ss << txTo.nVersion;\n         // Input prevouts/nSequence (none/all, depending on flags)\n@@ -1650,7 +1650,7 @@ uint256 SignatureHash(const CScript& scriptCode, const T& txTo, unsigned int nIn\n     CTransactionSignatureSerializer<T> txTmp(txTo, scriptCode, nIn, nHashType);\n \n     // Serialize and hash\n-    CHashWriter ss(SER_GETHASH, 0);\n+    CHashWriter ss;\n     ss << txTmp << nHashType;\n     return ss.GetHash();\n }\n@@ -1912,7 +1912,7 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n         if (stack.size() >= 2 && !stack.back().empty() && stack.back()[0] == ANNEX_TAG) {\n             // Drop annex (this is non-standard; see IsWitnessStandard)\n             const valtype& annex = SpanPopBack(stack);\n-            execdata.m_annex_hash = (CHashWriter(SER_GETHASH, 0) << annex).GetSHA256();\n+            execdata.m_annex_hash = (CHashWriter() << annex).GetSHA256();\n             execdata.m_annex_present = true;\n         } else {\n             execdata.m_annex_present = false;"
      },
      {
        "sha": "3c8c40eaef32f30e53f2113b3e407b8fa8847cbd",
        "filename": "src/test/addrman_tests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8940a68d77778bcf5429f12a0eff8a430806f81f/src/test/addrman_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8940a68d77778bcf5429f12a0eff8a430806f81f/src/test/addrman_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/addrman_tests.cpp?ref=8940a68d77778bcf5429f12a0eff8a430806f81f",
        "patch": "@@ -460,8 +460,8 @@ BOOST_AUTO_TEST_CASE(caddrinfo_get_tried_bucket_legacy)\n \n     CAddrInfo info1 = CAddrInfo(addr1, source1);\n \n-    uint256 nKey1 = (uint256)(CHashWriter(SER_GETHASH, 0) << 1).GetHash();\n-    uint256 nKey2 = (uint256)(CHashWriter(SER_GETHASH, 0) << 2).GetHash();\n+    uint256 nKey1 = (uint256)(CHashWriter() << 1).GetHash();\n+    uint256 nKey2 = (uint256)(CHashWriter() << 2).GetHash();\n \n     std::vector<bool> asmap; // use /16\n \n@@ -514,8 +514,8 @@ BOOST_AUTO_TEST_CASE(caddrinfo_get_new_bucket_legacy)\n \n     CAddrInfo info1 = CAddrInfo(addr1, source1);\n \n-    uint256 nKey1 = (uint256)(CHashWriter(SER_GETHASH, 0) << 1).GetHash();\n-    uint256 nKey2 = (uint256)(CHashWriter(SER_GETHASH, 0) << 2).GetHash();\n+    uint256 nKey1 = (uint256)(CHashWriter() << 1).GetHash();\n+    uint256 nKey2 = (uint256)(CHashWriter() << 2).GetHash();\n \n     std::vector<bool> asmap; // use /16\n \n@@ -593,8 +593,8 @@ BOOST_AUTO_TEST_CASE(caddrinfo_get_tried_bucket)\n \n     CAddrInfo info1 = CAddrInfo(addr1, source1);\n \n-    uint256 nKey1 = (uint256)(CHashWriter(SER_GETHASH, 0) << 1).GetHash();\n-    uint256 nKey2 = (uint256)(CHashWriter(SER_GETHASH, 0) << 2).GetHash();\n+    uint256 nKey1 = (uint256)(CHashWriter() << 1).GetHash();\n+    uint256 nKey2 = (uint256)(CHashWriter() << 2).GetHash();\n \n     std::vector<bool> asmap = FromBytes(asmap_raw, sizeof(asmap_raw) * 8);\n \n@@ -647,8 +647,8 @@ BOOST_AUTO_TEST_CASE(caddrinfo_get_new_bucket)\n \n     CAddrInfo info1 = CAddrInfo(addr1, source1);\n \n-    uint256 nKey1 = (uint256)(CHashWriter(SER_GETHASH, 0) << 1).GetHash();\n-    uint256 nKey2 = (uint256)(CHashWriter(SER_GETHASH, 0) << 2).GetHash();\n+    uint256 nKey1 = (uint256)(CHashWriter() << 1).GetHash();\n+    uint256 nKey2 = (uint256)(CHashWriter() << 2).GetHash();\n \n     std::vector<bool> asmap = FromBytes(asmap_raw, sizeof(asmap_raw) * 8);\n "
      },
      {
        "sha": "b17ed16ffa6a34370b1dc3df5d2abee45506e1ba",
        "filename": "src/test/sighash_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8940a68d77778bcf5429f12a0eff8a430806f81f/src/test/sighash_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8940a68d77778bcf5429f12a0eff8a430806f81f/src/test/sighash_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/sighash_tests.cpp?ref=8940a68d77778bcf5429f12a0eff8a430806f81f",
        "patch": "@@ -78,7 +78,7 @@ uint256 static SignatureHashOld(CScript scriptCode, const CTransaction& txTo, un\n     }\n \n     // Serialize and hash\n-    CHashWriter ss(SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n+    CHashWriter ss(SERIALIZE_TRANSACTION_NO_WITNESS);\n     ss << txTmp << nHashType;\n     return ss.GetHash();\n }"
      },
      {
        "sha": "4f0fc7222b057f6926d6b34575462f8eed4407ea",
        "filename": "src/util/message.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8940a68d77778bcf5429f12a0eff8a430806f81f/src/util/message.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8940a68d77778bcf5429f12a0eff8a430806f81f/src/util/message.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/message.cpp?ref=8940a68d77778bcf5429f12a0eff8a430806f81f",
        "patch": "@@ -71,7 +71,7 @@ bool MessageSign(\n \n uint256 MessageHash(const std::string& message)\n {\n-    CHashWriter hasher(SER_GETHASH, 0);\n+    CHashWriter hasher;\n     hasher << MESSAGE_MAGIC << message;\n \n     return hasher.GetHash();"
      },
      {
        "sha": "c33f8a40c194c5c465f1c25241cbe2542e6ea0a0",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8940a68d77778bcf5429f12a0eff8a430806f81f/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8940a68d77778bcf5429f12a0eff8a430806f81f/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=8940a68d77778bcf5429f12a0eff8a430806f81f",
        "patch": "@@ -1597,7 +1597,7 @@ static bool UndoWriteToDisk(const CBlockUndo& blockundo, FlatFilePos& pos, const\n     fileout << blockundo;\n \n     // calculate & write checksum\n-    CHashWriter hasher(SER_GETHASH, PROTOCOL_VERSION);\n+    CHashWriter hasher(PROTOCOL_VERSION);\n     hasher << hashBlock;\n     hasher << blockundo;\n     fileout << hasher.GetHash();"
      }
    ]
  },
  {
    "sha": "58ff4def894dfce7cbb5588e653ef110cee08b34",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OGZmNGRlZjg5NGRmY2U3Y2JiNTU4OGU2NTNlZjExMGNlZTA4YjM0",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2021-04-14T17:19:36Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2021-04-14T17:36:47Z"
      },
      "message": "Include serialize.h wherever SER_GETHASH is referenced",
      "tree": {
        "sha": "dbcdb41f1b48f2a7d755dbd96f82a356e0d1039a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dbcdb41f1b48f2a7d755dbd96f82a356e0d1039a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58ff4def894dfce7cbb5588e653ef110cee08b34",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+XLHXoy4Dim7e8hvTYykuhgECQYFAmB3KC8ACgkQTYykuhgE\nCQZh3Q//fZOdPyuhrnI15p78J/s4wPikKUz3WARgp5XE/FuE4Op+l2oXXMO35nsm\ndnOwwUqH+y0xD7fZTx2C9YAMsRWUj91Q+602Ail745MwGtZF/bUkDfHmydIqfuxA\n8U5ZaBW+dWmHA1ga4fJJmQ3/RKe/7r0f1MyxkwSf7wNF4QuWWxK0S872E8mnnsyh\n1poyGRY/iP01EXQHJQFqvxHThWpuvfmPcMREkUoYClyVU8L8oRvhyDi0KwjWdxKG\nvkRFzmrZsylvj6tbMIai+VTCtPE4V41YHGMXk4YtmpD/RBZcGxPVcfcVoxZS/5/w\nXRU7Rq+1yn5svzvYj6rW7jPHZnZeHj8orqKRTbGMYqAHRwVn6lCmLv3t9y9e9GPj\nuMxTxNIAeg0xe2uJXcmWLs+cN15ykx42EmsE+FWrztTyRb6ZytLZxBsuW3zAvWxj\nevglSnR9hLE29wI+1TbuUY9FQbp4UWCnxOs7vigURvYqEquc1F41oSVXDaf+B9Mp\ntCsHPOnUYgLjV9w68ZhkUdDQ2LVVPB3iyIcee4mWrx63e2QNyUJBRWBpdoLmIX5T\nbZjm1Xr9ZPOCux5QOguoLEeGXgZYoeFrYkDhokyieRptwh5sxcvTCVU5PFunnko7\naFlJUgZ8I5hGEJrC5xvQfTsJpcKLms0VskKzfvAyeQet55RuC+c=\n=ef4i\n-----END PGP SIGNATURE-----",
        "payload": "tree dbcdb41f1b48f2a7d755dbd96f82a356e0d1039a\nparent 8940a68d77778bcf5429f12a0eff8a430806f81f\nauthor Ben Woosley <ben.woosley@gmail.com> 1618420776 -0700\ncommitter Ben Woosley <ben.woosley@gmail.com> 1618421807 -0700\n\nInclude serialize.h wherever SER_GETHASH is referenced\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58ff4def894dfce7cbb5588e653ef110cee08b34",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/58ff4def894dfce7cbb5588e653ef110cee08b34",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58ff4def894dfce7cbb5588e653ef110cee08b34/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8940a68d77778bcf5429f12a0eff8a430806f81f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8940a68d77778bcf5429f12a0eff8a430806f81f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8940a68d77778bcf5429f12a0eff8a430806f81f"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 5,
      "deletions": 4
    },
    "files": [
      {
        "sha": "e1de1d2e2551e07e36c2720f05588398c36f05f5",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58ff4def894dfce7cbb5588e653ef110cee08b34/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58ff4def894dfce7cbb5588e653ef110cee08b34/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=58ff4def894dfce7cbb5588e653ef110cee08b34",
        "patch": "@@ -10,6 +10,7 @@\n #include <consensus/params.h>\n #include <flatfile.h>\n #include <primitives/block.h>\n+#include <serialize.h> // For SER_GETHASH\n #include <tinyformat.h>\n #include <uint256.h>\n "
      },
      {
        "sha": "1ed3e7f4d6bc9cddfaf193b38df783845d448053",
        "filename": "src/hash.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58ff4def894dfce7cbb5588e653ef110cee08b34/src/hash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58ff4def894dfce7cbb5588e653ef110cee08b34/src/hash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.h?ref=58ff4def894dfce7cbb5588e653ef110cee08b34",
        "patch": "@@ -11,7 +11,7 @@\n #include <crypto/ripemd160.h>\n #include <crypto/sha256.h>\n #include <prevector.h>\n-#include <serialize.h>\n+#include <serialize.h> // For Serialize, Unserialize, SER_GETHASH\n #include <uint256.h>\n #include <version.h>\n "
      },
      {
        "sha": "66c55279554c27e61c2b039af28e2f2d7dee6bb4",
        "filename": "src/primitives/block.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58ff4def894dfce7cbb5588e653ef110cee08b34/src/primitives/block.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58ff4def894dfce7cbb5588e653ef110cee08b34/src/primitives/block.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.h?ref=58ff4def894dfce7cbb5588e653ef110cee08b34",
        "patch": "@@ -7,7 +7,7 @@\n #define BITCOIN_PRIMITIVES_BLOCK_H\n \n #include <primitives/transaction.h>\n-#include <serialize.h>\n+#include <serialize.h> // For SER_GETHASH\n #include <uint256.h>\n \n /** Nodes collect new transactions into a block, hash them into a hash tree,"
      },
      {
        "sha": "62d4bfb4130fad083af6306447fcd86cd12addd6",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58ff4def894dfce7cbb5588e653ef110cee08b34/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58ff4def894dfce7cbb5588e653ef110cee08b34/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=58ff4def894dfce7cbb5588e653ef110cee08b34",
        "patch": "@@ -12,7 +12,7 @@\n \n #include <netaddress.h>\n #include <primitives/transaction.h>\n-#include <serialize.h>\n+#include <serialize.h> // For SER_GETHASH\n #include <uint256.h>\n #include <version.h>\n "
      },
      {
        "sha": "a706d0bafda379ccc9a47e0fd36f71af3215ac86",
        "filename": "src/util/message.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58ff4def894dfce7cbb5588e653ef110cee08b34/src/util/message.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58ff4def894dfce7cbb5588e653ef110cee08b34/src/util/message.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/message.cpp?ref=58ff4def894dfce7cbb5588e653ef110cee08b34",
        "patch": "@@ -8,7 +8,6 @@\n #include <key_io.h>          // For DecodeDestination()\n #include <pubkey.h>          // For CPubKey\n #include <script/standard.h> // For CTxDestination, IsValidDestination(), PKHash\n-#include <serialize.h>       // For SER_GETHASH\n #include <util/message.h>\n #include <util/strencodings.h> // For DecodeBase64()\n "
      },
      {
        "sha": "2c4cbc3d117c7b116a9ac4f1641271d8d50634d2",
        "filename": "src/wallet/scriptpubkeyman.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58ff4def894dfce7cbb5588e653ef110cee08b34/src/wallet/scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58ff4def894dfce7cbb5588e653ef110cee08b34/src/wallet/scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.h?ref=58ff4def894dfce7cbb5588e653ef110cee08b34",
        "patch": "@@ -9,6 +9,7 @@\n #include <script/descriptor.h>\n #include <script/signingprovider.h>\n #include <script/standard.h>\n+#include <serialize.h> // For SER_GETHASH\n #include <util/error.h>\n #include <util/message.h>\n #include <util/time.h>"
      }
    ]
  }
]