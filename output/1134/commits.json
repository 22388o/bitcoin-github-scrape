[
  {
    "sha": "3e468840bd65db734b903b0311202fc58a6dd8eb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZTQ2ODg0MGJkNjVkYjczNGI5MDNiMDMxMTIwMmZjNThhNmRkOGVi",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-04-22T14:22:45Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-05-09T10:22:58Z"
      },
      "message": "util.h/.ccp: modifiy some comments / rename MyGetSpecialFolderPath() -> GetSpecialFolderPath(), set fCreate default to true and remove the fallback (not Win >= Vista compatible anyway) / remove namespace fs stuff where only used once / misc small changes'",
      "tree": {
        "sha": "f738fe1eda1062ec6cb4f9a9dc225da962d9c6b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f738fe1eda1062ec6cb4f9a9dc225da962d9c6b0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3e468840bd65db734b903b0311202fc58a6dd8eb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e468840bd65db734b903b0311202fc58a6dd8eb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3e468840bd65db734b903b0311202fc58a6dd8eb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e468840bd65db734b903b0311202fc58a6dd8eb/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "e17018adcd1a24e603d9d3bd4240a32165aa22b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e17018adcd1a24e603d9d3bd4240a32165aa22b4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e17018adcd1a24e603d9d3bd4240a32165aa22b4"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 32,
      "deletions": 44
    },
    "files": [
      {
        "sha": "156493cd8b0b3b1488a51d8c64f26982b53b35d6",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 44,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e468840bd65db734b903b0311202fc58a6dd8eb/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e468840bd65db734b903b0311202fc58a6dd8eb/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=3e468840bd65db734b903b0311202fc58a6dd8eb",
        "patch": "@@ -53,7 +53,6 @@ namespace boost {\n #endif\n \n using namespace std;\n-using namespace boost;\n \n map<string, string> mapArgs;\n map<string, vector<string> > mapMultiArgs;\n@@ -328,7 +327,7 @@ bool error(const char *format, ...)\n     va_end(arg_ptr);\n     if (ret < 0 || ret >= limit)\n     {\n-        buffer[limit-1] = 0;\n+        buffer[limit - 1] = 0;\n     }\n     printf(\"ERROR: %s\\n\", buffer);\n     return false;\n@@ -494,7 +493,7 @@ static void InterpretNegativeSetting(string name, map<string, string>& mapSettin\n     }\n }\n \n-void ParseParameters(int argc, const char*const argv[])\n+void ParseParameters(int argc, const char* const argv[])\n {\n     mapArgs.clear();\n     mapMultiArgs.clear();\n@@ -761,8 +760,7 @@ bool WildcardMatch(const string& str, const string& mask)\n void FormatException(char* pszMessage, std::exception* pex, const char* pszThread)\n {\n #ifdef WIN32\n-    char pszModule[MAX_PATH];\n-    pszModule[0] = '\\0';\n+    char pszModule[MAX_PATH] = \"\";\n     GetModuleFileNameA(NULL, pszModule, sizeof(pszModule));\n #else\n     const char* pszModule = \"bitcoin\";\n@@ -801,38 +799,16 @@ void PrintExceptionContinue(std::exception* pex, const char* pszThread)\n     strMiscWarning = pszMessage;\n }\n \n-#ifdef WIN32\n-boost::filesystem::path MyGetSpecialFolderPath(int nFolder, bool fCreate)\n-{\n-    namespace fs = boost::filesystem;\n-\n-    char pszPath[MAX_PATH] = \"\";\n-    if(SHGetSpecialFolderPathA(NULL, pszPath, nFolder, fCreate))\n-    {\n-        return fs::path(pszPath);\n-    }\n-    else if (nFolder == CSIDL_STARTUP)\n-    {\n-        return fs::path(getenv(\"USERPROFILE\")) / \"Start Menu\" / \"Programs\" / \"Startup\";\n-    }\n-    else if (nFolder == CSIDL_APPDATA)\n-    {\n-        return fs::path(getenv(\"APPDATA\"));\n-    }\n-    return fs::path(\"\");\n-}\n-#endif\n-\n boost::filesystem::path GetDefaultDataDir()\n {\n     namespace fs = boost::filesystem;\n-\n-    // Windows: C:\\Documents and Settings\\username\\Application Data\\Bitcoin\n+    // Windows < Vista: C:\\Documents and Settings\\Username\\Application Data\\Bitcoin\n+    // Windows >= Vista: C:\\Users\\Username\\AppData\\Roaming\\Bitcoin\n     // Mac: ~/Library/Application Support/Bitcoin\n     // Unix: ~/.bitcoin\n #ifdef WIN32\n     // Windows\n-    return MyGetSpecialFolderPath(CSIDL_APPDATA, true) / \"Bitcoin\";\n+    return GetSpecialFolderPath(CSIDL_APPDATA) / \"Bitcoin\";\n #else\n     fs::path pathRet;\n     char* pszHome = getenv(\"HOME\");\n@@ -889,34 +865,29 @@ const boost::filesystem::path &GetDataDir(bool fNetSpecific)\n \n boost::filesystem::path GetConfigFile()\n {\n-    namespace fs = boost::filesystem;\n-\n-    fs::path pathConfigFile(GetArg(\"-conf\", \"bitcoin.conf\"));\n+    boost::filesystem::path pathConfigFile(GetArg(\"-conf\", \"bitcoin.conf\"));\n     if (!pathConfigFile.is_complete()) pathConfigFile = GetDataDir(false) / pathConfigFile;\n     return pathConfigFile;\n }\n \n void ReadConfigFile(map<string, string>& mapSettingsRet,\n                     map<string, vector<string> >& mapMultiSettingsRet)\n {\n-    namespace fs = boost::filesystem;\n-    namespace pod = boost::program_options::detail;\n-\n-    fs::ifstream streamConfig(GetConfigFile());\n+    boost::filesystem::ifstream streamConfig(GetConfigFile());\n     if (!streamConfig.good())\n         return; // No bitcoin.conf file is OK\n \n     set<string> setOptions;\n     setOptions.insert(\"*\");\n \n-    for (pod::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it)\n+    for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it)\n     {\n         // Don't overwrite existing settings so command line settings override bitcoin.conf\n         string strKey = string(\"-\") + it->string_key;\n         if (mapSettingsRet.count(strKey) == 0)\n         {\n             mapSettingsRet[strKey] = it->value[0];\n-            //  interpret nofoo=1 as foo=0 (and nofoo=0 as foo=1) as long as foo not set)\n+            // interpret nofoo=1 as foo=0 (and nofoo=0 as foo=1) as long as foo not set)\n             InterpretNegativeSetting(strKey, mapSettingsRet);\n         }\n         mapMultiSettingsRet[strKey].push_back(it->value[0]);\n@@ -925,9 +896,7 @@ void ReadConfigFile(map<string, string>& mapSettingsRet,\n \n boost::filesystem::path GetPidFile()\n {\n-    namespace fs = boost::filesystem;\n-\n-    fs::path pathPidFile(GetArg(\"-pid\", \"bitcoind.pid\"));\n+    boost::filesystem::path pathPidFile(GetArg(\"-pid\", \"bitcoind.pid\"));\n     if (!pathPidFile.is_complete()) pathPidFile = GetDataDir() / pathPidFile;\n     return pathPidFile;\n }\n@@ -1095,14 +1064,30 @@ std::string FormatSubVersion(const std::string& name, int nClientVersion, const\n }\n \n #ifdef WIN32\n+boost::filesystem::path GetSpecialFolderPath(int nFolder, bool fCreate)\n+{\n+    namespace fs = boost::filesystem;\n+\n+    char pszPath[MAX_PATH] = \"\";\n+\n+    if(SHGetSpecialFolderPathA(NULL, pszPath, nFolder, fCreate))\n+    {\n+        return fs::path(pszPath);\n+    }\n+\n+    printf(\"SHGetSpecialFolderPathA() failed, could not obtain requested path.\\n\");\n+    return fs::path(\"\");\n+}\n+\n boost::filesystem::path static StartupShortcutPath()\n {\n-    return MyGetSpecialFolderPath(CSIDL_STARTUP, true) / \"Bitcoin.lnk\";\n+    return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin.lnk\";\n }\n \n bool GetStartOnSystemStartup()\n {\n-    return filesystem::exists(StartupShortcutPath());\n+    // check for Bitcoin.lnk\n+    return boost::filesystem::exists(StartupShortcutPath());\n }\n \n bool SetStartOnSystemStartup(bool fAutoStart)"
      },
      {
        "sha": "319664cac1cf7b8fff7da7047666b84afaf34985",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e468840bd65db734b903b0311202fc58a6dd8eb/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e468840bd65db734b903b0311202fc58a6dd8eb/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=3e468840bd65db734b903b0311202fc58a6dd8eb",
        "patch": "@@ -163,6 +163,9 @@ boost::filesystem::path GetConfigFile();\n boost::filesystem::path GetPidFile();\n void CreatePidFile(const boost::filesystem::path &path, pid_t pid);\n void ReadConfigFile(std::map<std::string, std::string>& mapSettingsRet, std::map<std::string, std::vector<std::string> >& mapMultiSettingsRet);\n+#ifdef WIN32\n+boost::filesystem::path GetSpecialFolderPath(int nFolder, bool fCreate = true);\n+#endif\n bool GetStartOnSystemStartup();\n bool SetStartOnSystemStartup(bool fAutoStart);\n void ShrinkDebugFile();"
      }
    ]
  }
]