[
  {
    "sha": "facb416ad5ba47b01ee52c273a5c5e3709f06f07",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWNiNDE2YWQ1YmE0N2IwMWVlNTJjMjczYTVjNWUzNzA5ZjA2ZjA3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-15T16:38:27Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-11T00:37:37Z"
      },
      "message": "ci: Add valgrind run",
      "tree": {
        "sha": "66ef08295860af9be2eb1ed5a597cafab95ee5ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/66ef08295860af9be2eb1ed5a597cafab95ee5ce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/facb416ad5ba47b01ee52c273a5c5e3709f06f07",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUi33Av/TT77HSdr8eHR3yytZcDWIt4ccNwkCt1nMxSuABumLuoMlrKvvtEjszwa\n2CdnT5RckN7C29QkQRJc9u2Ld060zLaWC3jfmlDdCixsyMvos6CsItfNerrAXiiV\nMmZQmfxXLU9V8BAi0vB6Lc9L+ET6yOw1sg+VExGFSfx0RbhzuihGmFB6Zqo8blwC\nZQNxzTP8cvDUCwH60/XOwrY94kSdBryNs6bXBtqLyW2+V84fwZyz8KYWvTOPyDkx\nw84ta7RDSAONmsAxDuixORvrjw+qhtlkmONoZuJKJDrjpCBUZ3WLxpby1YCiFZNR\non8DlZxAwvWTpgakTRMjdXq4/RmefwnE+1MQ14xzJBTLR4KS4dqGXCxUSbOi79aM\n5krw2dTdhX7nRfcjMGS9HqfO1AeVbt0b4MOJmLKPGWKdH0DPN8WIhFy+F0Ax0Qb1\n4KXRlxwO6zteleF2l94qr9Ou+6jaSTlGXXnt6iBk8F37ahfpnjT6X1EIewbit4c6\ngJLeTjhY\n=xaPU\n-----END PGP SIGNATURE-----",
        "payload": "tree 66ef08295860af9be2eb1ed5a597cafab95ee5ce\nparent 3d6752779f0504e6435fe682f0c06c60b5c4c33b\nauthor MarcoFalke <falke.marco@gmail.com> 1573835907 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1576024657 -0500\n\nci: Add valgrind run\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/facb416ad5ba47b01ee52c273a5c5e3709f06f07",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/facb416ad5ba47b01ee52c273a5c5e3709f06f07",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/facb416ad5ba47b01ee52c273a5c5e3709f06f07/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3d6752779f0504e6435fe682f0c06c60b5c4c33b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d6752779f0504e6435fe682f0c06c60b5c4c33b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3d6752779f0504e6435fe682f0c06c60b5c4c33b"
      }
    ],
    "stats": {
      "total": 129,
      "additions": 123,
      "deletions": 6
    },
    "files": [
      {
        "sha": "c328a538f60620ebd1bea3afc77ff50a7c8bd66d",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/facb416ad5ba47b01ee52c273a5c5e3709f06f07/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/facb416ad5ba47b01ee52c273a5c5e3709f06f07/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=facb416ad5ba47b01ee52c273a5c5e3709f06f07",
        "patch": "@@ -110,7 +110,7 @@ jobs:\n         FILE_ENV=\"./ci/test/00_setup_env_native_centos.sh\"\n \n     - stage: test\n-      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [uses qt5 dev package instead of depends Qt to speed up build and avoid timeout] [unsigned char]'\n+      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [uses qt5 dev package and some depends packages] [unsigned char]'\n       env: >-\n         FILE_ENV=\"./ci/test/00_setup_env_native_qt5.sh\"\n \n@@ -125,6 +125,11 @@ jobs:\n       env: >-\n         FILE_ENV=\"./ci/test/00_setup_env_native_asan.sh\"\n \n+    - stage: test\n+      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no depends, only system libs, valgrind]'\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_native_valgrind.sh\"\n+\n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no depends, only system libs, sanitizers: fuzzer,address,undefined]'\n       env: >-"
      },
      {
        "sha": "906ffd7d7966bf40087db07bfdc05b971c30d737",
        "filename": "ci/test/00_setup_env_native_valgrind.sh",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/facb416ad5ba47b01ee52c273a5c5e3709f06f07/ci/test/00_setup_env_native_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/facb416ad5ba47b01ee52c273a5c5e3709f06f07/ci/test/00_setup_env_native_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_valgrind.sh?ref=facb416ad5ba47b01ee52c273a5c5e3709f06f07",
        "patch": "@@ -0,0 +1,15 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export PACKAGES=\"valgrind clang llvm python3-zmq libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev\"\n+export USE_VALGRIND=1\n+export NO_DEPENDS=1\n+export TEST_RUNNER_EXTRA=\"p2p_segwit.py\"  # Only run one test for now. TODO enable all and bump timeouts\n+export RUN_FUNCTIONAL_TESTS=true\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=no CC=clang CXX=clang++\"  # TODO enable GUI"
      },
      {
        "sha": "62f30535cbb4106729e92700c9eb541461616331",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/facb416ad5ba47b01ee52c273a5c5e3709f06f07/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/facb416ad5ba47b01ee52c273a5c5e3709f06f07/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=facb416ad5ba47b01ee52c273a5c5e3709f06f07",
        "patch": "@@ -41,7 +41,7 @@ export ASAN_OPTIONS=\"detect_stack_use_after_return=1:check_initialization_order=\n export LSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/lsan\"\n export TSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/tsan:log_path=${BASE_SCRATCH_DIR}/sanitizer-output/tsan\"\n export UBSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1:report_error_type=1\"\n-env | grep -E '^(BITCOIN_CONFIG|CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS)' | tee /tmp/env\n+env | grep -E '^(BITCOIN_CONFIG|BASE_|CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS)' | tee /tmp/env\n if [[ $HOST = *-mingw32 ]]; then\n   DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"\n elif [[ $BITCOIN_CONFIG = *--with-sanitizers=*address* ]]; then # If ran with (ASan + LSan), Docker needs access to ptrace (https://github.com/google/sanitizers/issues/764)"
      },
      {
        "sha": "e641cef279e3c8f21930df1c2cf6cc99e3cdc185",
        "filename": "ci/test/06_script_b.sh",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/facb416ad5ba47b01ee52c273a5c5e3709f06f07/ci/test/06_script_b.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/facb416ad5ba47b01ee52c273a5c5e3709f06f07/ci/test/06_script_b.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_b.sh?ref=facb416ad5ba47b01ee52c273a5c5e3709f06f07",
        "patch": "@@ -8,7 +8,6 @@ export LC_ALL=C.UTF-8\n \n if [ -n \"$QEMU_USER_CMD\" ]; then\n   BEGIN_FOLD wrap-qemu\n-  echo \"Prepare to run functional tests for HOST=$HOST\"\n   # Generate all binaries, so that they can be wrapped\n   DOCKER_EXEC make $MAKEJOBS -C src/secp256k1 VERBOSE=1\n   DOCKER_EXEC make $MAKEJOBS -C src/univalue VERBOSE=1\n@@ -25,6 +24,12 @@ if [ -n \"$QEMU_USER_CMD\" ]; then\n   END_FOLD\n fi\n \n+if [ -n \"$USE_VALGRIND\" ]; then\n+  BEGIN_FOLD wrap-valgrind\n+  DOCKER_EXEC \"${BASE_ROOT_DIR}/ci/test/wrap-valgrind.sh\"\n+  END_FOLD\n+fi\n+\n if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n   BEGIN_FOLD unit-tests\n   bash -c \"${CI_WAIT}\" &  # Print dots in case the unit tests take a long time to run"
      },
      {
        "sha": "d2192061dbc90bd17f6b8c716bf31015c2af2707",
        "filename": "ci/test/wrap-valgrind.sh",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/facb416ad5ba47b01ee52c273a5c5e3709f06f07/ci/test/wrap-valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/facb416ad5ba47b01ee52c273a5c5e3709f06f07/ci/test/wrap-valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/wrap-valgrind.sh?ref=facb416ad5ba47b01ee52c273a5c5e3709f06f07",
        "patch": "@@ -0,0 +1,18 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+for b_name in \"${BASE_OUTDIR}/bin\"/*; do\n+    # shellcheck disable=SC2044\n+    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename $b_name)); do\n+      echo \"Wrap $b ...\"\n+      mv \"$b\" \"${b}_orig\"\n+      echo '#!/usr/bin/env bash' > \"$b\"\n+      echo \"valgrind --gen-suppressions=all --quiet --error-exitcode=1 --suppressions=${BASE_ROOT_DIR}/contrib/valgrind.supp \\\"${b}_orig\\\" \\\"\\$@\\\"\" >> \"$b\"\n+      chmod +x \"$b\"\n+    done\n+done"
      },
      {
        "sha": "f232bb62c2c391e6cd056002951703c24b2dbac6",
        "filename": "contrib/valgrind.supp",
        "status": "modified",
        "additions": 77,
        "deletions": 3,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/facb416ad5ba47b01ee52c273a5c5e3709f06f07/contrib/valgrind.supp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/facb416ad5ba47b01ee52c273a5c5e3709f06f07/contrib/valgrind.supp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/valgrind.supp?ref=facb416ad5ba47b01ee52c273a5c5e3709f06f07",
        "patch": "@@ -30,17 +30,58 @@\n    Memcheck:Cond\n    obj:*/libdb_cxx-*.so\n    fun:__log_put\n-   obj:*/libdb_cxx-*.so\n-   fun:__log_put_record\n }\n {\n    Suppress libdb warning\n    Memcheck:Param\n    pwrite64(buf)\n    fun:pwrite\n    fun:__os_io\n+}\n+{\n+   Suppress libdb warning\n+   Memcheck:Cond\n+   fun:__log_putr.isra.1\n+}\n+{\n+   Suppress libdb warning\n+   Memcheck:Param\n+   pwrite64(buf)\n+   fun:pwrite\n+   fun:__os_io\n+   obj:*/libdb_cxx-*.so\n+}\n+{\n+   Suppress uninitialized bytes warning in compat code\n+   Memcheck:Param\n+   ioctl(TCSET{S,SW,SF})\n+   fun:tcsetattr\n+}\n+{\n+   Suppress libdb warning\n+   Memcheck:Leak\n+   fun:malloc\n+   ...\n    obj:*/libdb_cxx-*.so\n }\n+{\n+   Suppress leaks on init\n+   Memcheck:Leak\n+   ...\n+   fun:_Z11AppInitMainR11NodeContext\n+}\n+{\n+   Suppress leaks on shutdown\n+   Memcheck:Leak\n+   ...\n+   fun:_Z8ShutdownR11NodeContext\n+}\n+{\n+   Ignore GUI warning\n+   Memcheck:Leak\n+   ...\n+   obj:/usr/lib64/libgdk-3.so.0.2404.7\n+}\n {\n    Suppress leveldb warning (leveldb::InitModule()) - https://github.com/google/leveldb/issues/113\n    Memcheck:Leak\n@@ -56,24 +97,57 @@\n    ...\n    fun:_ZN7leveldbL14InitDefaultEnvEv\n }\n+{\n+   Suppress leveldb leak\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:_Znwm\n+   ...\n+   fun:_ZN7leveldb6DBImpl14BackgroundCallEv\n+}\n+{\n+   Suppress leveldb leak\n+   Memcheck:Leak\n+   fun:_Znwm\n+   ...\n+   fun:GetCoin\n+}\n {\n    Suppress wcsnrtombs glibc SSE4 warning (could be related: https://stroika.atlassian.net/browse/STK-626)\n    Memcheck:Addr16\n    fun:__wcsnlen_sse4_1\n    fun:wcsnrtombs\n }\n+{\n+   Suppress wcsnrtombs warning (remove after removing boost::fs)\n+   Memcheck:Cond\n+   ...\n+   fun:_ZN5boost10filesystem6detail11unique_pathERKNS0_4pathEPNS_6system10error_codeE\n+   fun:unique_path\n+}\n+{\n+   Suppress boost warning\n+   Memcheck:Leak\n+   fun:_Znwm\n+   ...\n+   fun:_ZN5boost9unit_test9framework5state17execute_test_treeEmjPKNS2_23random_generator_helperE\n+   fun:_ZN5boost9unit_test9framework3runEmb\n+   fun:_ZN5boost9unit_test14unit_test_mainEPFbvEiPPc\n+   fun:main\n+}\n {\n    Suppress boost::filesystem warning (fixed in boost 1.70: https://github.com/boostorg/filesystem/commit/bbe9d1771e5d679b3f10c42a58fc81f7e8c024a9)\n    Memcheck:Cond\n    fun:_ZN5boost10filesystem6detail28directory_iterator_incrementERNS0_18directory_iteratorEPNS_6system10error_codeE\n-   fun:_ZN5boost10filesystem6detail28directory_iterator_constructERNS0_18directory_iteratorERKNS0_4pathEPNS_6system10error_codeE\n+   ...\n    obj:*/libboost_filesystem.so.*\n }\n {\n    Suppress boost::filesystem warning (could be related: https://stackoverflow.com/questions/9830182/function-boostfilesystemcomplete-being-reported-as-possible-memory-leak-by-v)\n    Memcheck:Leak\n    match-leak-kinds: reachable\n    fun:_Znwm\n+   ...\n    fun:_ZN5boost10filesystem8absoluteERKNS0_4pathES3_\n }\n {"
      }
    ]
  }
]