[
  {
    "sha": "abd2678ac1af10f55b8b29507407c9e286e06f09",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYmQyNjc4YWMxYWYxMGY1NWI4YjI5NTA3NDA3YzllMjg2ZTA2ZjA5",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-06-08T11:12:36Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-06-08T17:53:38Z"
      },
      "message": "Drop ParseHashUV in favor of calling ParseHashStr\n\nThe one existing call already validates get_str will\npass via checkObject.",
      "tree": {
        "sha": "69d7ed1a50106d82cb30095a8d5cdfb89e708d25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/69d7ed1a50106d82cb30095a8d5cdfb89e708d25"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/abd2678ac1af10f55b8b29507407c9e286e06f09",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+XLHXoy4Dim7e8hvTYykuhgECQYFAlsawrcACgkQTYykuhgE\nCQb1Xg/9HSar2IEelojcviQzGOgXrCnZZ8iyGrUPVxLKlP/m8Qas9FS59x3dvWx/\n2y/IdrUACLGxMw4OjUsP+v5P0cvWTWbYyADP6yfatvS31+/A5VO1LuL4B8eIQie+\nv5vuFFCAVVYlGSoRoWLScbNDB6ip+rMnNW7R1KFo6MtZRsQp9p1jO+6QcG5jiWCq\n7NZ4OXH5SX7J8Mgrxl+ZAibT26/o7NXUwjxceIAAqGOxVO/6BjxFuGC/QItHWPZv\nF+eK5R9OXlBq+Q94lPIEcOklAlFhuV2E7bPFJjFKpwUE4Zz0NG6ssmXF2PH4j1kU\ndwaWoDa/YZiSttDWTOjM20xeGGPYO/pJunnnW6B/Psv0hyHgIDMBbWJihRWPlaya\nIAS/N0BWlFKKN3V5XPupJtq+IAlFeKuX0JZt0fwalqUPgMLcKhP5jwtNYKlyZg2g\nw5DafChDQ6hIDyQP0laiWOedrsWQ2J020NXjlCBDtEyRnvgBxyLHGB5HUjrBmwgQ\n/s9YZpQ9oQt5hfxlIvL1fbanou53OK8UmHAhVWqwJRoOvMA++4WvYbruJY7NqG86\nLnOa5dzi1kculSnq4Bu2B/qFqOXg/9gaE+NnaT9q1+I2WwfB/eRjLkYMm6ju7bt5\naP/X2ov+CUQ0RUVGO+ePp+JnBkvC0fnHHsiPx8dY96LJukteCkw=\n=VK6s\n-----END PGP SIGNATURE-----",
        "payload": "tree 69d7ed1a50106d82cb30095a8d5cdfb89e708d25\nparent 56f69360dc98bd68704f19646a84d045788d199e\nauthor Ben Woosley <ben.woosley@gmail.com> 1528456356 -0700\ncommitter Ben Woosley <ben.woosley@gmail.com> 1528480418 -0700\n\nDrop ParseHashUV in favor of calling ParseHashStr\n\nThe one existing call already validates get_str will\npass via checkObject.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abd2678ac1af10f55b8b29507407c9e286e06f09",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/abd2678ac1af10f55b8b29507407c9e286e06f09",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abd2678ac1af10f55b8b29507407c9e286e06f09/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "56f69360dc98bd68704f19646a84d045788d199e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56f69360dc98bd68704f19646a84d045788d199e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/56f69360dc98bd68704f19646a84d045788d199e"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 1,
      "deletions": 10
    },
    "files": [
      {
        "sha": "e6eb723cf4aa1555850d01002a0e73e85d9a4f26",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abd2678ac1af10f55b8b29507407c9e286e06f09/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abd2678ac1af10f55b8b29507407c9e286e06f09/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=abd2678ac1af10f55b8b29507407c9e286e06f09",
        "patch": "@@ -591,7 +591,7 @@ static void MutateTxSign(CMutableTransaction& tx, const std::string& flagStr)\n             if (!prevOut.checkObject(types))\n                 throw std::runtime_error(\"prevtxs internal object typecheck fail\");\n \n-            uint256 txid = ParseHashUV(prevOut[\"txid\"], \"txid\");\n+            uint256 txid = ParseHashStr(prevOut[\"txid\"].get_str(), \"txid\");\n \n             int nOut = atoi(prevOut[\"vout\"].getValStr());\n             if (nOut < 0)"
      },
      {
        "sha": "1d87d21d4087ee82b48ad587a81c3741845cc1a6",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abd2678ac1af10f55b8b29507407c9e286e06f09/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abd2678ac1af10f55b8b29507407c9e286e06f09/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=abd2678ac1af10f55b8b29507407c9e286e06f09",
        "patch": "@@ -22,7 +22,6 @@ CScript ParseScript(const std::string& s);\n std::string ScriptToAsmStr(const CScript& script, const bool fAttemptSighashDecode = false);\n bool DecodeHexTx(CMutableTransaction& tx, const std::string& hex_tx, bool try_no_witness = false, bool try_witness = true);\n bool DecodeHexBlk(CBlock&, const std::string& strHexBlk);\n-uint256 ParseHashUV(const UniValue& v, const std::string& strName);\n uint256 ParseHashStr(const std::string&, const std::string& strName);\n std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n "
      },
      {
        "sha": "4d851610efb46e65110c94355dbf599b2024617b",
        "filename": "src/core_read.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abd2678ac1af10f55b8b29507407c9e286e06f09/src/core_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abd2678ac1af10f55b8b29507407c9e286e06f09/src/core_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_read.cpp?ref=abd2678ac1af10f55b8b29507407c9e286e06f09",
        "patch": "@@ -160,14 +160,6 @@ bool DecodeHexBlk(CBlock& block, const std::string& strHexBlk)\n     return true;\n }\n \n-uint256 ParseHashUV(const UniValue& v, const std::string& strName)\n-{\n-    std::string strHex;\n-    if (v.isStr())\n-        strHex = v.getValStr();\n-    return ParseHashStr(strHex, strName);  // Note: ParseHashStr(\"\") throws a runtime_error\n-}\n-\n uint256 ParseHashStr(const std::string& strHex, const std::string& strName)\n {\n     if (!IsHex(strHex)) // Note: IsHex(\"\") is false"
      }
    ]
  }
]