[
  {
    "sha": "e74f75e5ff127ddccbff342fc349cc84f81c384e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNzRmNzVlNWZmMTI3ZGRjY2JmZjM0MmZjMzQ5Y2M4NGY4MWMzODRl",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2016-12-24T06:55:34Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2016-12-24T06:59:52Z"
      },
      "message": "Exit if deciding not to direct fetch",
      "tree": {
        "sha": "795b59ffd21bff3392b6cbaf952921fb5d6b96d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/795b59ffd21bff3392b6cbaf952921fb5d6b96d7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e74f75e5ff127ddccbff342fc349cc84f81c384e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYXhztAAoJEJYWlWnKgEH5SIwP/2yVMdE4BpmRe2gQHafR/5GL\nvsSu3hr5f/3D8XwatrjkdQk/dz3r3QxHkxu3BajQ6eq3KRDQE6eRVLuzJVrp8W42\nKR0wwYU3qk7v7gnc6aaRegZTxTjpVTH/N8hYlAYgKTt2Jesrc8cEHe+CZmg4+PyS\nopAlOXwxFT7XiW5iLQUD8+O/q4ZsUC3mqiTt87h9Mx3wnL28qo5SPVnL+TXZz8Hi\np7N/QRu+DuyaMU+EfNkHHFVe2IVeW/bj3EarlY+34qnCfQwjaEMyWwQ1lCqMrwSw\nrRW8Nq+Ih5UgLFVQGBhB+wnm8T0aAtnvZWf3ZntSQNjS8FEKbNVIwAJe/a6d5nss\nYoqLZFYhvxVhLs+Tgp0/mK9lD4SQ+/PYvqB4YfTmgJmK21CtyNLxJ7gzTH2s9zeS\n/v/Q45lAR73k8HyjW4Bz8Zt12//xfyLCwanszAZN6cixCqkhXc+x281KDSm6JRAN\n1DelW/7cCrjVAYmlUQQovAgkRhMwuuCWqqTISZ4nVPsnNT8Z/T8MSQhMerZHuxuV\nh7PZ2EHD4ARRHBe4wVdGqshgK5oBewCfWqa6fN3my1rIsYw7el7/imMEMdlFmw+R\nhh0FXEThXVm6R9zRLJGxpyUKk/Cb1jDXl7x8rd4IWVh4klVVMRnmgnYuS+KLr1TK\nbdIVzkdbIa/9yF6spA/B\n=wk6H\n-----END PGP SIGNATURE-----",
        "payload": "tree 795b59ffd21bff3392b6cbaf952921fb5d6b96d7\nparent 0f921e6a0492c4e9f037a9ed91f474885032d68c\nauthor R E Broadley <rebroad+github@gmail.com> 1482562534 +0700\ncommitter R E Broadley <rebroad+github@gmail.com> 1482562792 +0700\n\nExit if deciding not to direct fetch\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e74f75e5ff127ddccbff342fc349cc84f81c384e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e74f75e5ff127ddccbff342fc349cc84f81c384e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e74f75e5ff127ddccbff342fc349cc84f81c384e/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0f921e6a0492c4e9f037a9ed91f474885032d68c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f921e6a0492c4e9f037a9ed91f474885032d68c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0f921e6a0492c4e9f037a9ed91f474885032d68c"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "dd277bf8679dc91de1cdf2149acc67f22ef6c1dd",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e74f75e5ff127ddccbff342fc349cc84f81c384e/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e74f75e5ff127ddccbff342fc349cc84f81c384e/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=e74f75e5ff127ddccbff342fc349cc84f81c384e",
        "patch": "@@ -2123,7 +2123,8 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                 LogPrint(\"net\", \"Large reorg, won't direct fetch to %s (%d)\\n\",\n                         pindexLast->GetBlockHash().ToString(),\n                         pindexLast->nHeight);\n-            } else {\n+                return true;\n+            }\n                 vector<CInv> vGetData;\n                 // Download as much as possible, from earliest to latest.\n                 BOOST_REVERSE_FOREACH(CBlockIndex *pindex, vToFetch) {\n@@ -2151,7 +2152,6 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                     }\n                     connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n                 }\n-            }\n         }\n         }\n     }"
      }
    ]
  },
  {
    "sha": "21f6333b61f24a9383073929b3178eb484f1917f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMWY2MzMzYjYxZjI0YTkzODMwNzM5MjliMzE3OGViNDg0ZjE5MTdm",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2016-12-24T06:56:25Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2016-12-24T07:00:02Z"
      },
      "message": "Reduce indentation for previous conditional section",
      "tree": {
        "sha": "8a3bdd21f4573bb6c8f96ced60cc2011fae6914e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a3bdd21f4573bb6c8f96ced60cc2011fae6914e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/21f6333b61f24a9383073929b3178eb484f1917f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYXhz0AAoJEJYWlWnKgEH54YsP/02liM7ARX7vrIIRSUXB2ucW\nLV0kOgOi4DRsXn8WuI3uM2d0UJ81IWqTwwmqp7B2NFleW850ece5TKsBa2+d5rj6\nKDjwk61X2n2j9j8mvb0wCC+L2Ejkbg0ke0Gdc/VeU/j34g0PlfldP2u+zmJiuARs\nAj1PYgO32cJHW0HweD0H5iFtOBXqq+lgeXEuj/dOUxkHD5KDS/b1vLoxe/OLj/Jl\nSsRwgbZj2l0occf8gBbZb8CAr7ew2wpmQY2+YDS7tOGhfb+EntazBuJK4fd2hxHS\nYqk3BUH9SYNTYKD330u0ccF2xV4+aUN1qavopHc24GRNQlIYY+SyiISWSvFWrKWz\nNJCcMlg3U8XqMTqZhk8y+Nyk4viA44CkIvDHGtgh8+TXSYFWuc9VPIkNoYFnPdAr\nTEFAUbNEg37mCdILeGuxleWvhLS5IGXn7kK5caKSN6VwB9KQ1xfP0jNsbw70zIzH\nZkTQ6uc6i8ZeVzC/BZK9Ab7RK1CG5tqnxMt5kmEqw6T6yxkqomgzgnotdlMOiId6\nMRPFD4iiikCS3yte+Su3FV7AUr0jQZqYH3y9Ht27/JDHv6Y6Vt3nd81PkxKbVcQT\n7QUHkiBvfWHF0ujZCUojjL2tHnz/XVYRhqH7xIjifsJajzDi+PjWRUF/LAhw7aFi\noMcesPLg108qTp/s0o5E\n=Ci6f\n-----END PGP SIGNATURE-----",
        "payload": "tree 8a3bdd21f4573bb6c8f96ced60cc2011fae6914e\nparent e74f75e5ff127ddccbff342fc349cc84f81c384e\nauthor R E Broadley <rebroad+github@gmail.com> 1482562585 +0700\ncommitter R E Broadley <rebroad+github@gmail.com> 1482562802 +0700\n\nReduce indentation for previous conditional section\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/21f6333b61f24a9383073929b3178eb484f1917f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/21f6333b61f24a9383073929b3178eb484f1917f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/21f6333b61f24a9383073929b3178eb484f1917f/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e74f75e5ff127ddccbff342fc349cc84f81c384e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e74f75e5ff127ddccbff342fc349cc84f81c384e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e74f75e5ff127ddccbff342fc349cc84f81c384e"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 25,
      "deletions": 25
    },
    "files": [
      {
        "sha": "55e16a1011987ba931783343249537afb89c0f08",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 25,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/21f6333b61f24a9383073929b3178eb484f1917f/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/21f6333b61f24a9383073929b3178eb484f1917f/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=21f6333b61f24a9383073929b3178eb484f1917f",
        "patch": "@@ -2125,33 +2125,33 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                         pindexLast->nHeight);\n                 return true;\n             }\n-                vector<CInv> vGetData;\n-                // Download as much as possible, from earliest to latest.\n-                BOOST_REVERSE_FOREACH(CBlockIndex *pindex, vToFetch) {\n-                    if (nodestate->nBlocksInFlight >= MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n-                        // Can't download any more from this peer\n-                        break;\n-                    }\n-                    uint32_t nFetchFlags = GetFetchFlags(pfrom, pindex->pprev, chainparams.GetConsensus());\n-                    vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                    MarkBlockAsInFlight(pfrom->GetId(), pindex->GetBlockHash(), chainparams.GetConsensus(), pindex);\n-                    LogPrint(\"net\", \"Requesting block %s from  peer=%d\\n\",\n-                            pindex->GetBlockHash().ToString(), pfrom->id);\n-                }\n-                if (vGetData.size() > 1) {\n-                    LogPrint(\"net\", \"Downloading blocks toward %s (%d) via headers direct fetch\\n\",\n-                            pindexLast->GetBlockHash().ToString(), pindexLast->nHeight);\n+            vector<CInv> vGetData;\n+            // Download as much as possible, from earliest to latest.\n+            BOOST_REVERSE_FOREACH(CBlockIndex *pindex, vToFetch) {\n+                if (nodestate->nBlocksInFlight >= MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n+                    // Can't download any more from this peer\n+                    break;\n                 }\n-                if (vGetData.size() > 0) {\n-                    if (nodestate->fSupportsDesiredCmpctVersion && vGetData.size() == 1 && mapBlocksInFlight.size() == 1 && pindexLast->pprev->IsValid(BLOCK_VALID_CHAIN)) {\n-                        // We seem to be rather well-synced, so it appears pfrom was the first to provide us\n-                        // with this block! Let's get them to announce using compact blocks in the future.\n-                        MaybeSetPeerAsAnnouncingHeaderAndIDs(nodestate, pfrom, connman);\n-                        // In any case, we want to download using a compact block, not a regular one\n-                        vGetData[0] = CInv(MSG_CMPCT_BLOCK, vGetData[0].hash);\n-                    }\n-                    connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n+                uint32_t nFetchFlags = GetFetchFlags(pfrom, pindex->pprev, chainparams.GetConsensus());\n+                vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n+                MarkBlockAsInFlight(pfrom->GetId(), pindex->GetBlockHash(), chainparams.GetConsensus(), pindex);\n+                LogPrint(\"net\", \"Requesting block %s from  peer=%d\\n\",\n+                        pindex->GetBlockHash().ToString(), pfrom->id);\n+            }\n+            if (vGetData.size() > 1) {\n+                LogPrint(\"net\", \"Downloading blocks toward %s (%d) via headers direct fetch\\n\",\n+                        pindexLast->GetBlockHash().ToString(), pindexLast->nHeight);\n+            }\n+            if (vGetData.size() > 0) {\n+                if (nodestate->fSupportsDesiredCmpctVersion && vGetData.size() == 1 && mapBlocksInFlight.size() == 1 && pindexLast->pprev->IsValid(BLOCK_VALID_CHAIN)) {\n+                    // We seem to be rather well-synced, so it appears pfrom was the first to provide us\n+                    // with this block! Let's get them to announce using compact blocks in the future.\n+                    MaybeSetPeerAsAnnouncingHeaderAndIDs(nodestate, pfrom, connman);\n+                    // In any case, we want to download using a compact block, not a regular one\n+                    vGetData[0] = CInv(MSG_CMPCT_BLOCK, vGetData[0].hash);\n                 }\n+                connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n+            }\n         }\n         }\n     }"
      }
    ]
  }
]