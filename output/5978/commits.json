[
  {
    "sha": "cffa25bc34e5a4e0fd8e7f923e8eef62a5443da3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZmZhMjViYzM0ZTVhNGUwZmQ4ZTdmOTIzZThlZWY2MmE1NDQzZGEz",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao@bitreserve.org",
        "date": "2015-04-07T00:34:31Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao@bitreserve.org",
        "date": "2015-04-07T00:51:05Z"
      },
      "message": "moved consts to consts.h",
      "tree": {
        "sha": "a7f8145690e6d700fb51c82f3c36a0a74a78ad38",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a7f8145690e6d700fb51c82f3c36a0a74a78ad38"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cffa25bc34e5a4e0fd8e7f923e8eef62a5443da3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cffa25bc34e5a4e0fd8e7f923e8eef62a5443da3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cffa25bc34e5a4e0fd8e7f923e8eef62a5443da3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cffa25bc34e5a4e0fd8e7f923e8eef62a5443da3/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "27e8d224e9d7577a2c25a26eb5e40ed0b25a6280",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27e8d224e9d7577a2c25a26eb5e40ed0b25a6280",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/27e8d224e9d7577a2c25a26eb5e40ed0b25a6280"
      }
    ],
    "stats": {
      "total": 124,
      "additions": 68,
      "deletions": 56
    },
    "files": [
      {
        "sha": "8323990f5327b83312f41c7dfe89be8c54fda1e1",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cffa25bc34e5a4e0fd8e7f923e8eef62a5443da3/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cffa25bc34e5a4e0fd8e7f923e8eef62a5443da3/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=cffa25bc34e5a4e0fd8e7f923e8eef62a5443da3",
        "patch": "@@ -88,6 +88,7 @@ BITCOIN_CORE_H = \\\n   compat.h \\\n   compressor.h \\\n   consensus/params.h \\\n+  consts.h \\\n   core_io.h \\\n   wallet/db.h \\\n   eccryptoverify.h \\"
      },
      {
        "sha": "ff98d22c76f130c7b67a789f2b7af01865d59124",
        "filename": "src/consts.h",
        "status": "added",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cffa25bc34e5a4e0fd8e7f923e8eef62a5443da3/src/consts.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cffa25bc34e5a4e0fd8e7f923e8eef62a5443da3/src/consts.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consts.h?ref=cffa25bc34e5a4e0fd8e7f923e8eef62a5443da3",
        "patch": "@@ -0,0 +1,66 @@\n+\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CONSTS_H\n+#define BITCOIN_CONSTS_H\n+\n+/** Default for -blockmaxsize and -blockminsize, which control the range of sizes the mining code will create **/\n+static const unsigned int DEFAULT_BLOCK_MAX_SIZE = 750000;\n+static const unsigned int DEFAULT_BLOCK_MIN_SIZE = 0;\n+/** Default for -blockprioritysize, maximum space for zero/low-fee transactions **/\n+static const unsigned int DEFAULT_BLOCK_PRIORITY_SIZE = 50000;\n+/** The maximum size for transactions we're willing to relay/mine */\n+static const unsigned int MAX_STANDARD_TX_SIZE = 100000;\n+/** The maximum allowed number of signature check operations in a block (network rule) */\n+static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n+/** Maximum number of signature check operations in an IsStandard() P2SH script */\n+static const unsigned int MAX_P2SH_SIGOPS = 15;\n+/** The maximum number of sigops we're willing to relay/mine in a single tx */\n+static const unsigned int MAX_STANDARD_TX_SIGOPS = MAX_BLOCK_SIGOPS/5;\n+/** Default for -maxorphantx, maximum number of orphan transactions kept in memory */\n+static const unsigned int DEFAULT_MAX_ORPHAN_TRANSACTIONS = 100;\n+/** The maximum size of a blk?????.dat file (since 0.8) */\n+static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n+/** The pre-allocation chunk size for blk?????.dat files (since 0.8) */\n+static const unsigned int BLOCKFILE_CHUNK_SIZE = 0x1000000; // 16 MiB\n+/** The pre-allocation chunk size for rev?????.dat files (since 0.8) */\n+static const unsigned int UNDOFILE_CHUNK_SIZE = 0x100000; // 1 MiB\n+/** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n+static const int COINBASE_MATURITY = 100;\n+/** Threshold for nLockTime: below this value it is interpreted as block number, otherwise as UNIX timestamp. */\n+static const unsigned int LOCKTIME_THRESHOLD = 500000000; // Tue Nov  5 00:53:20 1985 UTC\n+/** Maximum number of script-checking threads allowed */\n+static const int MAX_SCRIPTCHECK_THREADS = 16;\n+/** -par default (number of script-checking threads, 0 = auto) */\n+static const int DEFAULT_SCRIPTCHECK_THREADS = 0;\n+/** Number of blocks that can be requested at any given time from a single peer. */\n+static const int MAX_BLOCKS_IN_TRANSIT_PER_PEER = 16;\n+/** Timeout in seconds during which a peer must stall block download progress before being disconnected. */\n+static const unsigned int BLOCK_STALLING_TIMEOUT = 2;\n+/** Number of headers sent in one getheaders result. We rely on the assumption that if a peer sends\n+ *  less than this number, we reached their tip. Changing this value is a protocol upgrade. */\n+static const unsigned int MAX_HEADERS_RESULTS = 2000;\n+/** Size of the \"block download window\": how far ahead of our current height do we fetch?\n+ *  Larger windows tolerate larger download speed differences between peer, but increase the potential\n+ *  degree of disordering of blocks on disk (which make reindexing and in the future perhaps pruning\n+ *  harder). We'll probably want to make this a per-peer adaptive value at some point. */\n+static const unsigned int BLOCK_DOWNLOAD_WINDOW = 1024;\n+/** Time to wait (in seconds) between writing blockchain state to disk. */\n+static const unsigned int DATABASE_WRITE_INTERVAL = 3600;\n+/** Maximum length of reject messages. */\n+static const unsigned int MAX_REJECT_MESSAGE_LENGTH = 111;\n+\n+/** \"reject\" message codes */\n+static const unsigned char REJECT_MALFORMED = 0x01;\n+static const unsigned char REJECT_INVALID = 0x10;\n+static const unsigned char REJECT_OBSOLETE = 0x11;\n+static const unsigned char REJECT_DUPLICATE = 0x12;\n+static const unsigned char REJECT_NONSTANDARD = 0x40;\n+static const unsigned char REJECT_DUST = 0x41;\n+static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n+static const unsigned char REJECT_CHECKPOINT = 0x43;\n+\n+#endif // BITCOIN_CONSTS_H"
      },
      {
        "sha": "32444b90c4c065285ef46118c1cda0d5cace65af",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 56,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cffa25bc34e5a4e0fd8e7f923e8eef62a5443da3/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cffa25bc34e5a4e0fd8e7f923e8eef62a5443da3/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=cffa25bc34e5a4e0fd8e7f923e8eef62a5443da3",
        "patch": "@@ -10,6 +10,7 @@\n #include \"config/bitcoin-config.h\"\n #endif\n \n+#include \"consts.h\"\n #include \"amount.h\"\n #include \"chain.h\"\n #include \"chainparams.h\"\n@@ -46,62 +47,6 @@ class CValidationState;\n \n struct CNodeStateStats;\n \n-/** Default for -blockmaxsize and -blockminsize, which control the range of sizes the mining code will create **/\n-static const unsigned int DEFAULT_BLOCK_MAX_SIZE = 750000;\n-static const unsigned int DEFAULT_BLOCK_MIN_SIZE = 0;\n-/** Default for -blockprioritysize, maximum space for zero/low-fee transactions **/\n-static const unsigned int DEFAULT_BLOCK_PRIORITY_SIZE = 50000;\n-/** The maximum size for transactions we're willing to relay/mine */\n-static const unsigned int MAX_STANDARD_TX_SIZE = 100000;\n-/** The maximum allowed number of signature check operations in a block (network rule) */\n-static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n-/** Maximum number of signature check operations in an IsStandard() P2SH script */\n-static const unsigned int MAX_P2SH_SIGOPS = 15;\n-/** The maximum number of sigops we're willing to relay/mine in a single tx */\n-static const unsigned int MAX_STANDARD_TX_SIGOPS = MAX_BLOCK_SIGOPS/5;\n-/** Default for -maxorphantx, maximum number of orphan transactions kept in memory */\n-static const unsigned int DEFAULT_MAX_ORPHAN_TRANSACTIONS = 100;\n-/** The maximum size of a blk?????.dat file (since 0.8) */\n-static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n-/** The pre-allocation chunk size for blk?????.dat files (since 0.8) */\n-static const unsigned int BLOCKFILE_CHUNK_SIZE = 0x1000000; // 16 MiB\n-/** The pre-allocation chunk size for rev?????.dat files (since 0.8) */\n-static const unsigned int UNDOFILE_CHUNK_SIZE = 0x100000; // 1 MiB\n-/** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n-static const int COINBASE_MATURITY = 100;\n-/** Threshold for nLockTime: below this value it is interpreted as block number, otherwise as UNIX timestamp. */\n-static const unsigned int LOCKTIME_THRESHOLD = 500000000; // Tue Nov  5 00:53:20 1985 UTC\n-/** Maximum number of script-checking threads allowed */\n-static const int MAX_SCRIPTCHECK_THREADS = 16;\n-/** -par default (number of script-checking threads, 0 = auto) */\n-static const int DEFAULT_SCRIPTCHECK_THREADS = 0;\n-/** Number of blocks that can be requested at any given time from a single peer. */\n-static const int MAX_BLOCKS_IN_TRANSIT_PER_PEER = 16;\n-/** Timeout in seconds during which a peer must stall block download progress before being disconnected. */\n-static const unsigned int BLOCK_STALLING_TIMEOUT = 2;\n-/** Number of headers sent in one getheaders result. We rely on the assumption that if a peer sends\n- *  less than this number, we reached their tip. Changing this value is a protocol upgrade. */\n-static const unsigned int MAX_HEADERS_RESULTS = 2000;\n-/** Size of the \"block download window\": how far ahead of our current height do we fetch?\n- *  Larger windows tolerate larger download speed differences between peer, but increase the potential\n- *  degree of disordering of blocks on disk (which make reindexing and in the future perhaps pruning\n- *  harder). We'll probably want to make this a per-peer adaptive value at some point. */\n-static const unsigned int BLOCK_DOWNLOAD_WINDOW = 1024;\n-/** Time to wait (in seconds) between writing blockchain state to disk. */\n-static const unsigned int DATABASE_WRITE_INTERVAL = 3600;\n-/** Maximum length of reject messages. */\n-static const unsigned int MAX_REJECT_MESSAGE_LENGTH = 111;\n-\n-/** \"reject\" message codes */\n-static const unsigned char REJECT_MALFORMED = 0x01;\n-static const unsigned char REJECT_INVALID = 0x10;\n-static const unsigned char REJECT_OBSOLETE = 0x11;\n-static const unsigned char REJECT_DUPLICATE = 0x12;\n-static const unsigned char REJECT_NONSTANDARD = 0x40;\n-static const unsigned char REJECT_DUST = 0x41;\n-static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n-static const unsigned char REJECT_CHECKPOINT = 0x43;\n-\n struct BlockHasher\n {\n     size_t operator()(const uint256& hash) const { return hash.GetCheapHash(); }"
      }
    ]
  }
]