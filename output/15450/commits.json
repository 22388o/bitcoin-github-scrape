[
  {
    "sha": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYzZkOGEzNjYyZjBmYjk5MjA3M2U1ZTgwMjY5YTkwYTcyMmQ3NmUw",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-06-21T14:13:15Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-09-05T23:05:07Z"
      },
      "message": "gui: Refactor OpenWalletActivity",
      "tree": {
        "sha": "0bfeca9ff841898a7ef45636ae8796b91c080d7b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0bfeca9ff841898a7ef45636ae8796b91c080d7b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc6d8a3662f0fb992073e5e80269a90a722d76e0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc6d8a3662f0fb992073e5e80269a90a722d76e0/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e202382a987351a59d5cda98ea9f2aee99f61a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e202382a987351a59d5cda98ea9f2aee99f61a5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e202382a987351a59d5cda98ea9f2aee99f61a5"
      }
    ],
    "stats": {
      "total": 160,
      "additions": 101,
      "deletions": 59
    },
    "files": [
      {
        "sha": "4c520c00dfdeffc5c21c23e7ade051c13eef11d5",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 23,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc6d8a3662f0fb992073e5e80269a90a722d76e0/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc6d8a3662f0fb992073e5e80269a90a722d76e0/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=bc6d8a3662f0fb992073e5e80269a90a722d76e0",
        "patch": "@@ -379,31 +379,11 @@ void BitcoinGUI::createActions()\n                     continue;\n                 }\n \n-                connect(action, &QAction::triggered, [this, name, path] {\n-                    OpenWalletActivity* activity = m_wallet_controller->openWallet(path);\n-\n-                    QProgressDialog* dialog = new QProgressDialog(this);\n-                    dialog->setLabelText(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n-                    dialog->setRange(0, 0);\n-                    dialog->setCancelButton(nullptr);\n-                    dialog->setWindowModality(Qt::ApplicationModal);\n-                    dialog->show();\n-\n-                    connect(activity, &OpenWalletActivity::message, this, [this] (QMessageBox::Icon icon, QString text) {\n-                        QMessageBox box;\n-                        box.setIcon(icon);\n-                        box.setText(tr(\"Open Wallet Failed\"));\n-                        box.setInformativeText(text);\n-                        box.setStandardButtons(QMessageBox::Ok);\n-                        box.setDefaultButton(QMessageBox::Ok);\n-                        connect(this, &QObject::destroyed, &box, &QDialog::accept);\n-                        box.exec();\n-                    });\n+                connect(action, &QAction::triggered, [this, path] {\n+                    auto activity = new OpenWalletActivity(m_wallet_controller, this);\n                     connect(activity, &OpenWalletActivity::opened, this, &BitcoinGUI::setCurrentWallet);\n                     connect(activity, &OpenWalletActivity::finished, activity, &QObject::deleteLater);\n-                    connect(activity, &OpenWalletActivity::finished, dialog, &QObject::deleteLater);\n-                    bool invoked = QMetaObject::invokeMethod(activity, \"open\");\n-                    assert(invoked);\n+                    activity->open(path);\n                 });\n             }\n             if (m_open_wallet_menu->isEmpty()) {"
      },
      {
        "sha": "88ccc8c2d6a36da3a62f4e59a3df26ede7bfd5be",
        "filename": "src/qt/walletcontroller.cpp",
        "status": "modified",
        "additions": 60,
        "deletions": 24,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc6d8a3662f0fb992073e5e80269a90a722d76e0/src/qt/walletcontroller.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc6d8a3662f0fb992073e5e80269a90a722d76e0/src/qt/walletcontroller.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.cpp?ref=bc6d8a3662f0fb992073e5e80269a90a722d76e0",
        "patch": "@@ -2,6 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <qt/guiutil.h>\n #include <qt/walletcontroller.h>\n \n #include <interfaces/handler.h>\n@@ -13,10 +14,13 @@\n #include <QMessageBox>\n #include <QMutexLocker>\n #include <QThread>\n+#include <QTimer>\n #include <QWindow>\n \n WalletController::WalletController(interfaces::Node& node, const PlatformStyle* platform_style, OptionsModel* options_model, QObject* parent)\n     : QObject(parent)\n+    , m_activity_thread(new QThread(this))\n+    , m_activity_worker(new QObject)\n     , m_node(node)\n     , m_platform_style(platform_style)\n     , m_options_model(options_model)\n@@ -29,15 +33,17 @@ WalletController::WalletController(interfaces::Node& node, const PlatformStyle*\n         getOrCreateWallet(std::move(wallet));\n     }\n \n-    m_activity_thread.start();\n+    m_activity_worker->moveToThread(m_activity_thread);\n+    m_activity_thread->start();\n }\n \n // Not using the default destructor because not all member types definitions are\n // available in the header, just forward declared.\n WalletController::~WalletController()\n {\n-    m_activity_thread.quit();\n-    m_activity_thread.wait();\n+    m_activity_thread->quit();\n+    m_activity_thread->wait();\n+    delete m_activity_worker;\n }\n \n std::vector<WalletModel*> WalletController::getOpenWallets() const\n@@ -60,13 +66,6 @@ std::map<std::string, bool> WalletController::listWalletDir() const\n     return wallets;\n }\n \n-OpenWalletActivity* WalletController::openWallet(const std::string& name, QWidget* parent)\n-{\n-    OpenWalletActivity* activity = new OpenWalletActivity(this, name);\n-    activity->moveToThread(&m_activity_thread);\n-    return activity;\n-}\n-\n void WalletController::closeWallet(WalletModel* wallet_model, QWidget* parent)\n {\n     QMessageBox box(parent);\n@@ -140,23 +139,60 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+}\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+void OpenWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(m_warning_message));\n     }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n     Q_EMIT finished();\n }\n+\n+void OpenWalletActivity::open(const std::string& path)\n+{\n+    QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+\n+    QTimer::singleShot(0, worker(), [this, path] {\n+        std::unique_ptr<interfaces::Wallet> wallet = node().loadWallet(path, m_error_message, m_warning_message);\n+\n+        if (wallet) m_wallet_model = m_wallet_controller->getOrCreateWallet(std::move(wallet));\n+\n+        QTimer::singleShot(0, this, &OpenWalletActivity::finish);\n+    });\n+}"
      },
      {
        "sha": "dada9cfa63dcfa6b37a24fed818ace3580e6f3c1",
        "filename": "src/qt/walletcontroller.h",
        "status": "modified",
        "additions": 38,
        "deletions": 12,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc6d8a3662f0fb992073e5e80269a90a722d76e0/src/qt/walletcontroller.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc6d8a3662f0fb992073e5e80269a90a722d76e0/src/qt/walletcontroller.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.h?ref=bc6d8a3662f0fb992073e5e80269a90a722d76e0",
        "patch": "@@ -10,10 +10,13 @@\n \n #include <map>\n #include <memory>\n+#include <string>\n #include <vector>\n \n #include <QMessageBox>\n #include <QMutex>\n+#include <QProgressDialog>\n+#include <QString>\n #include <QThread>\n \n class OptionsModel;\n@@ -25,6 +28,7 @@ class Node;\n } // namespace interfaces\n \n class OpenWalletActivity;\n+class WalletControllerActivity;\n \n /**\n  * Controller between interfaces::Node, WalletModel instances and the GUI.\n@@ -33,7 +37,6 @@ class WalletController : public QObject\n {\n     Q_OBJECT\n \n-    WalletModel* getOrCreateWallet(std::unique_ptr<interfaces::Wallet> wallet);\n     void removeAndDeleteWallet(WalletModel* wallet_model);\n \n public:\n@@ -43,11 +46,12 @@ class WalletController : public QObject\n     //! Returns wallet models currently open.\n     std::vector<WalletModel*> getOpenWallets() const;\n \n+    WalletModel* getOrCreateWallet(std::unique_ptr<interfaces::Wallet> wallet);\n+\n     //! Returns all wallet names in the wallet dir mapped to whether the wallet\n     //! is loaded.\n     std::map<std::string, bool> listWalletDir() const;\n \n-    OpenWalletActivity* openWallet(const std::string& name, QWidget* parent = nullptr);\n     void closeWallet(WalletModel* wallet_model, QWidget* parent = nullptr);\n \n Q_SIGNALS:\n@@ -57,35 +61,57 @@ class WalletController : public QObject\n     void coinsSent(WalletModel* wallet_model, SendCoinsRecipient recipient, QByteArray transaction);\n \n private:\n-    QThread m_activity_thread;\n+    QThread* const m_activity_thread;\n+    QObject* const m_activity_worker;\n     interfaces::Node& m_node;\n     const PlatformStyle* const m_platform_style;\n     OptionsModel* const m_options_model;\n     mutable QMutex m_mutex;\n     std::vector<WalletModel*> m_wallets;\n     std::unique_ptr<interfaces::Handler> m_handler_load_wallet;\n \n-    friend class OpenWalletActivity;\n+    friend class WalletControllerActivity;\n };\n \n-class OpenWalletActivity : public QObject\n+class WalletControllerActivity : public QObject\n {\n     Q_OBJECT\n \n public:\n-    OpenWalletActivity(WalletController* wallet_controller, const std::string& name);\n-\n-public Q_SLOTS:\n-    void open();\n+    WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget);\n+    virtual ~WalletControllerActivity();\n \n Q_SIGNALS:\n-    void message(QMessageBox::Icon icon, const QString text);\n     void finished();\n+\n+protected:\n+    interfaces::Node& node() const { return m_wallet_controller->m_node; }\n+    QObject* worker() const { return m_wallet_controller->m_activity_worker; }\n+\n+    void showProgressDialog(const QString& label_text);\n+\n+    WalletController* const m_wallet_controller;\n+    QWidget* const m_parent_widget;\n+    QProgressDialog* m_progress_dialog{nullptr};\n+    WalletModel* m_wallet_model{nullptr};\n+    std::string m_error_message;\n+    std::string m_warning_message;\n+};\n+\n+class OpenWalletActivity : public WalletControllerActivity\n+{\n+    Q_OBJECT\n+\n+public:\n+    OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget);\n+\n+    void open(const std::string& path);\n+\n+Q_SIGNALS:\n     void opened(WalletModel* wallet_model);\n \n private:\n-    WalletController* const m_wallet_controller;\n-    std::string const m_name;\n+    void finish();\n };\n \n #endif // BITCOIN_QT_WALLETCONTROLLER_H"
      }
    ]
  },
  {
    "sha": "60adb21c7affb41ec475a62a53fb0a36bea35dfb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MGFkYjIxYzdhZmZiNDFlYzQ3NWE2MmE1M2ZiMGEzNmJlYTM1ZGZi",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-05-24T19:14:54Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-09-06T00:36:57Z"
      },
      "message": "Optionally allow AskPassphraseDialog to output the passphrase",
      "tree": {
        "sha": "ee9e01cc00438824458e125785fd652bd43a7674",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee9e01cc00438824458e125785fd652bd43a7674"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60adb21c7affb41ec475a62a53fb0a36bea35dfb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60adb21c7affb41ec475a62a53fb0a36bea35dfb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/60adb21c7affb41ec475a62a53fb0a36bea35dfb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60adb21c7affb41ec475a62a53fb0a36bea35dfb/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc6d8a3662f0fb992073e5e80269a90a722d76e0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bc6d8a3662f0fb992073e5e80269a90a722d76e0"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 33,
      "deletions": 20
    },
    "files": [
      {
        "sha": "c9f17d12ec9b5bf3074b19a0827297631e797a6a",
        "filename": "src/qt/askpassphrasedialog.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 19,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60adb21c7affb41ec475a62a53fb0a36bea35dfb/src/qt/askpassphrasedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60adb21c7affb41ec475a62a53fb0a36bea35dfb/src/qt/askpassphrasedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.cpp?ref=60adb21c7affb41ec475a62a53fb0a36bea35dfb",
        "patch": "@@ -18,12 +18,13 @@\n #include <QMessageBox>\n #include <QPushButton>\n \n-AskPassphraseDialog::AskPassphraseDialog(Mode _mode, QWidget *parent) :\n+AskPassphraseDialog::AskPassphraseDialog(Mode _mode, QWidget *parent, SecureString* passphrase_out) :\n     QDialog(parent),\n     ui(new Ui::AskPassphraseDialog),\n     mode(_mode),\n     model(nullptr),\n-    fCapsLock(false)\n+    fCapsLock(false),\n+    m_passphrase_out(passphrase_out)\n {\n     ui->setupUi(this);\n \n@@ -90,7 +91,7 @@ void AskPassphraseDialog::setModel(WalletModel *_model)\n void AskPassphraseDialog::accept()\n {\n     SecureString oldpass, newpass1, newpass2;\n-    if(!model)\n+    if (!model && mode != Encrypt)\n         return;\n     oldpass.reserve(MAX_PASSPHRASE_SIZE);\n     newpass1.reserve(MAX_PASSPHRASE_SIZE);\n@@ -119,24 +120,33 @@ void AskPassphraseDialog::accept()\n         {\n             if(newpass1 == newpass2)\n             {\n-                if(model->setWalletEncrypted(true, newpass1))\n-                {\n-                    QMessageBox::warning(this, tr(\"Wallet encrypted\"),\n+                QString encryption_reminder = tr(\"Remember that encrypting your wallet cannot fully protect \"\n+                \"your bitcoins from being stolen by malware infecting your computer.\");\n+                if (m_passphrase_out) {\n+                    m_passphrase_out->assign(newpass1);\n+                    QMessageBox::warning(this, tr(\"Wallet to be encrypted\"),\n                                          \"<qt>\" +\n-                                         tr(\"Your wallet is now encrypted. \"\n-                                         \"Remember that encrypting your wallet cannot fully protect \"\n-                                         \"your bitcoins from being stolen by malware infecting your computer.\") +\n-                                         \"<br><br><b>\" +\n-                                         tr(\"IMPORTANT: Any previous backups you have made of your wallet file \"\n-                                         \"should be replaced with the newly generated, encrypted wallet file. \"\n-                                         \"For security reasons, previous backups of the unencrypted wallet file \"\n-                                         \"will become useless as soon as you start using the new, encrypted wallet.\") +\n+                                         tr(\"Your wallet is about to be encrypted. \") + encryption_reminder +\n                                          \"</b></qt>\");\n-                }\n-                else\n-                {\n-                    QMessageBox::critical(this, tr(\"Wallet encryption failed\"),\n-                                         tr(\"Wallet encryption failed due to an internal error. Your wallet was not encrypted.\"));\n+                } else {\n+                    assert(model != nullptr);\n+                    if(model->setWalletEncrypted(true, newpass1))\n+                    {\n+                        QMessageBox::warning(this, tr(\"Wallet encrypted\"),\n+                                             \"<qt>\" +\n+                                             tr(\"Your wallet is now encrypted. \") + encryption_reminder +\n+                                             \"<br><br><b>\" +\n+                                             tr(\"IMPORTANT: Any previous backups you have made of your wallet file \"\n+                                             \"should be replaced with the newly generated, encrypted wallet file. \"\n+                                             \"For security reasons, previous backups of the unencrypted wallet file \"\n+                                             \"will become useless as soon as you start using the new, encrypted wallet.\") +\n+                                             \"</b></qt>\");\n+                    }\n+                    else\n+                    {\n+                        QMessageBox::critical(this, tr(\"Wallet encryption failed\"),\n+                                             tr(\"Wallet encryption failed due to an internal error. Your wallet was not encrypted.\"));\n+                    }\n                 }\n                 QDialog::accept(); // Success\n             }"
      },
      {
        "sha": "bdfd3fb9a0695971df52c9cccbcb93f70c903929",
        "filename": "src/qt/askpassphrasedialog.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60adb21c7affb41ec475a62a53fb0a36bea35dfb/src/qt/askpassphrasedialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60adb21c7affb41ec475a62a53fb0a36bea35dfb/src/qt/askpassphrasedialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.h?ref=60adb21c7affb41ec475a62a53fb0a36bea35dfb",
        "patch": "@@ -7,6 +7,8 @@\n \n #include <QDialog>\n \n+#include <support/allocators/secure.h>\n+\n class WalletModel;\n \n namespace Ui {\n@@ -27,7 +29,7 @@ class AskPassphraseDialog : public QDialog\n         Decrypt     /**< Ask passphrase and decrypt wallet */\n     };\n \n-    explicit AskPassphraseDialog(Mode mode, QWidget *parent);\n+    explicit AskPassphraseDialog(Mode mode, QWidget *parent, SecureString* passphrase_out = nullptr);\n     ~AskPassphraseDialog();\n \n     void accept();\n@@ -39,6 +41,7 @@ class AskPassphraseDialog : public QDialog\n     Mode mode;\n     WalletModel *model;\n     bool fCapsLock;\n+    SecureString* m_passphrase_out;\n \n private Q_SLOTS:\n     void textChanged();"
      }
    ]
  },
  {
    "sha": "78863e290006e61060622dbdbecc5b58c0fefa05",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ODg2M2UyOTAwMDZlNjEwNjA2MjJkYmRiZWNjNWI1OGMwZmVmYTA1",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-02-20T17:22:07Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-09-06T00:36:57Z"
      },
      "message": "Add CreateWalletDialog to create wallets from the GUI\n\nCo-authored-by: Jo\u00e3o Barbosa <joao.paulo.barbosa@gmail.com>",
      "tree": {
        "sha": "63370880baf94c3a2576c3fa2e0b6d3fce4b683c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/63370880baf94c3a2576c3fa2e0b6d3fce4b683c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78863e290006e61060622dbdbecc5b58c0fefa05",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78863e290006e61060622dbdbecc5b58c0fefa05",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/78863e290006e61060622dbdbecc5b58c0fefa05",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78863e290006e61060622dbdbecc5b58c0fefa05/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "60adb21c7affb41ec475a62a53fb0a36bea35dfb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60adb21c7affb41ec475a62a53fb0a36bea35dfb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/60adb21c7affb41ec475a62a53fb0a36bea35dfb"
      }
    ],
    "stats": {
      "total": 252,
      "additions": 252,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0e4eeee0a7ad9ebc49c30d30c285ccd41a752771",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78863e290006e61060622dbdbecc5b58c0fefa05/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78863e290006e61060622dbdbecc5b58c0fefa05/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=78863e290006e61060622dbdbecc5b58c0fefa05",
        "patch": "@@ -16,6 +16,7 @@ FORMS += \\\n     ../src/qt/forms/sendcoinsentry.ui \\\n     ../src/qt/forms/signverifymessagedialog.ui \\\n     ../src/qt/forms/transactiondescdialog.ui \\\n+    ../src/qt/forms/createwalletdialog.ui\n \n RESOURCES += \\\n     ../src/qt/bitcoin.qrc"
      },
      {
        "sha": "754012241874128661ffa2a1a8ed130107bd90e2",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78863e290006e61060622dbdbecc5b58c0fefa05/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78863e290006e61060622dbdbecc5b58c0fefa05/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=78863e290006e61060622dbdbecc5b58c0fefa05",
        "patch": "@@ -98,6 +98,7 @@ QT_FORMS_UI = \\\n   qt/forms/addressbookpage.ui \\\n   qt/forms/askpassphrasedialog.ui \\\n   qt/forms/coincontroldialog.ui \\\n+  qt/forms/createwalletdialog.ui \\\n   qt/forms/editaddressdialog.ui \\\n   qt/forms/helpmessagedialog.ui \\\n   qt/forms/intro.ui \\\n@@ -117,6 +118,7 @@ QT_MOC_CPP = \\\n   qt/moc_addressbookpage.cpp \\\n   qt/moc_addresstablemodel.cpp \\\n   qt/moc_askpassphrasedialog.cpp \\\n+  qt/moc_createwalletdialog.cpp \\\n   qt/moc_bantablemodel.cpp \\\n   qt/moc_bitcoinaddressvalidator.cpp \\\n   qt/moc_bitcoinamountfield.cpp \\\n@@ -202,6 +204,7 @@ BITCOIN_QT_H = \\\n   qt/clientmodel.h \\\n   qt/coincontroldialog.h \\\n   qt/coincontroltreewidget.h \\\n+  qt/createwalletdialog.h \\\n   qt/csvmodelwriter.h \\\n   qt/editaddressdialog.h \\\n   qt/guiconstants.h \\\n@@ -328,6 +331,7 @@ BITCOIN_QT_WALLET_CPP = \\\n   qt/askpassphrasedialog.cpp \\\n   qt/coincontroldialog.cpp \\\n   qt/coincontroltreewidget.cpp \\\n+  qt/createwalletdialog.cpp \\\n   qt/editaddressdialog.cpp \\\n   qt/openuridialog.cpp \\\n   qt/overviewpage.cpp \\"
      },
      {
        "sha": "449dcc70a096618d81b8d278e9d685b88fccc620",
        "filename": "src/qt/createwalletdialog.cpp",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78863e290006e61060622dbdbecc5b58c0fefa05/src/qt/createwalletdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78863e290006e61060622dbdbecc5b58c0fefa05/src/qt/createwalletdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/createwalletdialog.cpp?ref=78863e290006e61060622dbdbecc5b58c0fefa05",
        "patch": "@@ -0,0 +1,61 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <qt/createwalletdialog.h>\n+#include <qt/forms/ui_createwalletdialog.h>\n+\n+#include <QPushButton>\n+\n+CreateWalletDialog::CreateWalletDialog(QWidget* parent) :\n+    QDialog(parent),\n+    ui(new Ui::CreateWalletDialog)\n+{\n+    ui->setupUi(this);\n+    ui->buttonBox->button(QDialogButtonBox::Ok)->setText(\"Create\");\n+    ui->buttonBox->button(QDialogButtonBox::Ok)->setEnabled(false);\n+    ui->wallet_name_line_edit->setFocus(Qt::ActiveWindowFocusReason);\n+\n+    connect(ui->wallet_name_line_edit, &QLineEdit::textEdited, [this](const QString& text) {\n+        ui->buttonBox->button(QDialogButtonBox::Ok)->setEnabled(!text.isEmpty());\n+    });\n+\n+    connect(ui->encrypt_wallet_checkbox, &QCheckBox::toggled, [this](bool checked) {\n+        // Disable disable_privkeys_checkbox when encrypt is set to true, enable it when encrypt is false\n+        ui->disable_privkeys_checkbox->setEnabled(!checked);\n+\n+        // When the disable_privkeys_checkbox is disabled, uncheck it.\n+        if (!ui->disable_privkeys_checkbox->isEnabled()) {\n+            ui->disable_privkeys_checkbox->setChecked(false);\n+        }\n+    });\n+}\n+\n+CreateWalletDialog::~CreateWalletDialog()\n+{\n+    delete ui;\n+}\n+\n+QString CreateWalletDialog::walletName() const\n+{\n+    return ui->wallet_name_line_edit->text();\n+}\n+\n+bool CreateWalletDialog::encrypt() const\n+{\n+    return ui->encrypt_wallet_checkbox->isChecked();\n+}\n+\n+bool CreateWalletDialog::disablePrivateKeys() const\n+{\n+    return ui->disable_privkeys_checkbox->isChecked();\n+}\n+\n+bool CreateWalletDialog::blank() const\n+{\n+    return ui->blank_wallet_checkbox->isChecked();\n+}"
      },
      {
        "sha": "a1365b59694e9c7bec1722f58fa02d8e3b8fb6f5",
        "filename": "src/qt/createwalletdialog.h",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78863e290006e61060622dbdbecc5b58c0fefa05/src/qt/createwalletdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78863e290006e61060622dbdbecc5b58c0fefa05/src/qt/createwalletdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/createwalletdialog.h?ref=78863e290006e61060622dbdbecc5b58c0fefa05",
        "patch": "@@ -0,0 +1,35 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_QT_CREATEWALLETDIALOG_H\n+#define BITCOIN_QT_CREATEWALLETDIALOG_H\n+\n+#include <QDialog>\n+\n+class WalletModel;\n+\n+namespace Ui {\n+    class CreateWalletDialog;\n+}\n+\n+/** Dialog for creating wallets\n+ */\n+class CreateWalletDialog : public QDialog\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit CreateWalletDialog(QWidget* parent);\n+    virtual ~CreateWalletDialog();\n+\n+    QString walletName() const;\n+    bool encrypt() const;\n+    bool disablePrivateKeys() const;\n+    bool blank() const;\n+\n+private:\n+    Ui::CreateWalletDialog *ui;\n+};\n+\n+#endif // BITCOIN_QT_CREATEWALLETDIALOG_H"
      },
      {
        "sha": "1fbaeeaaab3d73271cd0944556de471aedc5f2d9",
        "filename": "src/qt/forms/createwalletdialog.ui",
        "status": "added",
        "additions": 151,
        "deletions": 0,
        "changes": 151,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78863e290006e61060622dbdbecc5b58c0fefa05/src/qt/forms/createwalletdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78863e290006e61060622dbdbecc5b58c0fefa05/src/qt/forms/createwalletdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/createwalletdialog.ui?ref=78863e290006e61060622dbdbecc5b58c0fefa05",
        "patch": "@@ -0,0 +1,151 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<ui version=\"4.0\">\n+ <class>CreateWalletDialog</class>\n+ <widget class=\"QDialog\" name=\"CreateWalletDialog\">\n+  <property name=\"geometry\">\n+   <rect>\n+    <x>0</x>\n+    <y>0</y>\n+    <width>364</width>\n+    <height>185</height>\n+   </rect>\n+  </property>\n+  <property name=\"windowTitle\">\n+   <string>Create Wallet</string>\n+  </property>\n+  <widget class=\"QDialogButtonBox\" name=\"buttonBox\">\n+   <property name=\"geometry\">\n+    <rect>\n+     <x>10</x>\n+     <y>140</y>\n+     <width>341</width>\n+     <height>32</height>\n+    </rect>\n+   </property>\n+   <property name=\"orientation\">\n+    <enum>Qt::Horizontal</enum>\n+   </property>\n+   <property name=\"standardButtons\">\n+    <set>QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>\n+   </property>\n+  </widget>\n+  <widget class=\"QLineEdit\" name=\"wallet_name_line_edit\">\n+   <property name=\"geometry\">\n+    <rect>\n+     <x>120</x>\n+     <y>20</y>\n+     <width>231</width>\n+     <height>24</height>\n+    </rect>\n+   </property>\n+  </widget>\n+  <widget class=\"QLabel\" name=\"label\">\n+   <property name=\"geometry\">\n+    <rect>\n+     <x>20</x>\n+     <y>20</y>\n+     <width>101</width>\n+     <height>21</height>\n+    </rect>\n+   </property>\n+   <property name=\"text\">\n+    <string>Wallet Name</string>\n+   </property>\n+  </widget>\n+  <widget class=\"QCheckBox\" name=\"encrypt_wallet_checkbox\">\n+   <property name=\"geometry\">\n+    <rect>\n+     <x>20</x>\n+     <y>50</y>\n+     <width>171</width>\n+     <height>22</height>\n+    </rect>\n+   </property>\n+   <property name=\"toolTip\">\n+    <string>Encrypt the wallet. The wallet will be encrypted with a password of your choice.</string>\n+   </property>\n+   <property name=\"text\">\n+    <string>Encrypt Wallet</string>\n+   </property>\n+   <property name=\"checked\">\n+    <bool>true</bool>\n+   </property>\n+  </widget>\n+  <widget class=\"QCheckBox\" name=\"disable_privkeys_checkbox\">\n+   <property name=\"enabled\">\n+    <bool>false</bool>\n+   </property>\n+   <property name=\"geometry\">\n+    <rect>\n+     <x>20</x>\n+     <y>80</y>\n+     <width>171</width>\n+     <height>22</height>\n+    </rect>\n+   </property>\n+   <property name=\"toolTip\">\n+    <string>Disable private keys for this wallet. Wallets with private keys disabled will have no private keys and cannot have an HD seed or imported private keys. This is ideal for watch-only wallets.</string>\n+   </property>\n+   <property name=\"text\">\n+    <string>Disable Private Keys</string>\n+   </property>\n+  </widget>\n+  <widget class=\"QCheckBox\" name=\"blank_wallet_checkbox\">\n+   <property name=\"geometry\">\n+    <rect>\n+     <x>20</x>\n+     <y>110</y>\n+     <width>171</width>\n+     <height>22</height>\n+    </rect>\n+   </property>\n+   <property name=\"toolTip\">\n+    <string>Make a blank wallet. Blank wallets do not initially have private keys or scripts. Private keys and addresses can be imported, or an HD seed can be set, at a later time.</string>\n+   </property>\n+   <property name=\"text\">\n+    <string>Make Blank Wallet</string>\n+   </property>\n+  </widget>\n+ </widget>\n+ <tabstops>\n+  <tabstop>wallet_name_line_edit</tabstop>\n+  <tabstop>encrypt_wallet_checkbox</tabstop>\n+  <tabstop>disable_privkeys_checkbox</tabstop>\n+  <tabstop>blank_wallet_checkbox</tabstop>\n+ </tabstops>\n+ <resources/>\n+ <connections>\n+  <connection>\n+   <sender>buttonBox</sender>\n+   <signal>accepted()</signal>\n+   <receiver>CreateWalletDialog</receiver>\n+   <slot>accept()</slot>\n+   <hints>\n+    <hint type=\"sourcelabel\">\n+     <x>248</x>\n+     <y>254</y>\n+    </hint>\n+    <hint type=\"destinationlabel\">\n+     <x>157</x>\n+     <y>274</y>\n+    </hint>\n+   </hints>\n+  </connection>\n+  <connection>\n+   <sender>buttonBox</sender>\n+   <signal>rejected()</signal>\n+   <receiver>CreateWalletDialog</receiver>\n+   <slot>reject()</slot>\n+   <hints>\n+    <hint type=\"sourcelabel\">\n+     <x>316</x>\n+     <y>260</y>\n+    </hint>\n+    <hint type=\"destinationlabel\">\n+     <x>286</x>\n+     <y>274</y>\n+    </hint>\n+   </hints>\n+  </connection>\n+ </connections>\n+</ui>"
      }
    ]
  },
  {
    "sha": "9b41cbb28f603f4f71f5854d6ae2527932bba3cb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YjQxY2JiMjhmNjAzZjRmNzFmNTg1NGQ2YWUyNTI3OTMyYmJhM2Ni",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-05-24T21:14:16Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-09-06T00:36:57Z"
      },
      "message": "Expose wallet creation to the GUI via WalletController\n\nCo-authored-by: Jo\u00e3o Barbosa <joao.paulo.barbosa@gmail.com>",
      "tree": {
        "sha": "2b88b292c10566b75c0df9128ffc8ad913e2635e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2b88b292c10566b75c0df9128ffc8ad913e2635e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b41cbb28f603f4f71f5854d6ae2527932bba3cb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b41cbb28f603f4f71f5854d6ae2527932bba3cb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9b41cbb28f603f4f71f5854d6ae2527932bba3cb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b41cbb28f603f4f71f5854d6ae2527932bba3cb/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "78863e290006e61060622dbdbecc5b58c0fefa05",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78863e290006e61060622dbdbecc5b58c0fefa05",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/78863e290006e61060622dbdbecc5b58c0fefa05"
      }
    ],
    "stats": {
      "total": 148,
      "additions": 146,
      "deletions": 2
    },
    "files": [
      {
        "sha": "126e3479f37c6963b4aea1d1b6cb1dd0099c4e0c",
        "filename": "src/dummywallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b41cbb28f603f4f71f5854d6ae2527932bba3cb/src/dummywallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b41cbb28f603f4f71f5854d6ae2527932bba3cb/src/dummywallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dummywallet.cpp?ref=9b41cbb28f603f4f71f5854d6ae2527932bba3cb",
        "patch": "@@ -5,8 +5,10 @@\n #include <stdio.h>\n #include <util/system.h>\n #include <walletinitinterface.h>\n+#include <support/allocators/secure.h>\n \n class CWallet;\n+enum class WalletCreationStatus;\n \n namespace interfaces {\n class Chain;\n@@ -74,6 +76,11 @@ std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const std::string&\n     throw std::logic_error(\"Wallet function called in non-wallet build.\");\n }\n \n+WalletCreationStatus CreateWallet(interfaces::Chain& chain, const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::string& warning, std::shared_ptr<CWallet>& result)\n+{\n+    throw std::logic_error(\"Wallet function called in non-wallet build.\");\n+}\n+\n namespace interfaces {\n \n class Wallet;"
      },
      {
        "sha": "ccafc3ac8ce413e3db026186080ba72196ff5aeb",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b41cbb28f603f4f71f5854d6ae2527932bba3cb/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b41cbb28f603f4f71f5854d6ae2527932bba3cb/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=9b41cbb28f603f4f71f5854d6ae2527932bba3cb",
        "patch": "@@ -24,6 +24,7 @@\n #include <primitives/block.h>\n #include <rpc/server.h>\n #include <shutdown.h>\n+#include <support/allocators/secure.h>\n #include <sync.h>\n #include <txmempool.h>\n #include <ui_interface.h>\n@@ -43,6 +44,7 @@ fs::path GetWalletDir();\n std::vector<fs::path> ListWalletDir();\n std::vector<std::shared_ptr<CWallet>> GetWallets();\n std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const std::string& name, std::string& error, std::string& warning);\n+WalletCreationStatus CreateWallet(interfaces::Chain& chain, const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::string& warning, std::shared_ptr<CWallet>& result);\n \n namespace interfaces {\n \n@@ -258,6 +260,13 @@ class NodeImpl : public Node\n     {\n         return MakeWallet(LoadWallet(*m_interfaces.chain, name, error, warning));\n     }\n+    WalletCreationStatus createWallet(const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::string& warning, std::unique_ptr<Wallet>& result) override\n+    {\n+        std::shared_ptr<CWallet> wallet;\n+        WalletCreationStatus status = CreateWallet(*m_interfaces.chain, passphrase, wallet_creation_flags, name, error, warning, wallet);\n+        result = MakeWallet(wallet);\n+        return status;\n+    }\n     std::unique_ptr<Handler> handleInitMessage(InitMessageFn fn) override\n     {\n         return MakeHandler(::uiInterface.InitMessage_connect(fn));"
      },
      {
        "sha": "e8c3d0b72128b4a0340a34785099face18617bd1",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b41cbb28f603f4f71f5854d6ae2527932bba3cb/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b41cbb28f603f4f71f5854d6ae2527932bba3cb/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=9b41cbb28f603f4f71f5854d6ae2527932bba3cb",
        "patch": "@@ -9,6 +9,7 @@\n #include <amount.h>     // For CAmount\n #include <net.h>        // For CConnman::NumConnections\n #include <netaddress.h> // For Network\n+#include <support/allocators/secure.h> // For SecureString\n \n #include <functional>\n #include <memory>\n@@ -27,6 +28,7 @@ class RPCTimerInterface;\n class UniValue;\n class proxyType;\n struct CNodeStateStats;\n+enum class WalletCreationStatus;\n \n namespace interfaces {\n class Handler;\n@@ -200,6 +202,9 @@ class Node\n     //! with handleLoadWallet.\n     virtual std::unique_ptr<Wallet> loadWallet(const std::string& name, std::string& error, std::string& warning) = 0;\n \n+    //! Create a wallet from file\n+    virtual WalletCreationStatus createWallet(const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::string& warning, std::unique_ptr<Wallet>& result) = 0;\n+\n     //! Register handler for init messages.\n     using InitMessageFn = std::function<void(const std::string& message)>;\n     virtual std::unique_ptr<Handler> handleInitMessage(InitMessageFn fn) = 0;"
      },
      {
        "sha": "10262c37c3572ae3062761ddc0f2e8fdcb02ba15",
        "filename": "src/qt/createwalletdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b41cbb28f603f4f71f5854d6ae2527932bba3cb/src/qt/createwalletdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b41cbb28f603f4f71f5854d6ae2527932bba3cb/src/qt/createwalletdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/createwalletdialog.cpp?ref=9b41cbb28f603f4f71f5854d6ae2527932bba3cb",
        "patch": "@@ -16,7 +16,7 @@ CreateWalletDialog::CreateWalletDialog(QWidget* parent) :\n     ui(new Ui::CreateWalletDialog)\n {\n     ui->setupUi(this);\n-    ui->buttonBox->button(QDialogButtonBox::Ok)->setText(\"Create\");\n+    ui->buttonBox->button(QDialogButtonBox::Ok)->setText(tr(\"Create\"));\n     ui->buttonBox->button(QDialogButtonBox::Ok)->setEnabled(false);\n     ui->wallet_name_line_edit->setFocus(Qt::ActiveWindowFocusReason);\n "
      },
      {
        "sha": "dcdb2479770f875ccbf09c287a845f1d8ef60683",
        "filename": "src/qt/guiconstants.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b41cbb28f603f4f71f5854d6ae2527932bba3cb/src/qt/guiconstants.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b41cbb28f603f4f71f5854d6ae2527932bba3cb/src/qt/guiconstants.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiconstants.h?ref=9b41cbb28f603f4f71f5854d6ae2527932bba3cb",
        "patch": "@@ -5,6 +5,8 @@\n #ifndef BITCOIN_QT_GUICONSTANTS_H\n #define BITCOIN_QT_GUICONSTANTS_H\n \n+#include <cstdint>\n+\n /* Milliseconds between model updates */\n static const int MODEL_UPDATE_DELAY = 250;\n "
      },
      {
        "sha": "1a4f51c066d4c5bd7545828bce2ea7f779684c9d",
        "filename": "src/qt/walletcontroller.cpp",
        "status": "modified",
        "additions": 92,
        "deletions": 0,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b41cbb28f603f4f71f5854d6ae2527932bba3cb/src/qt/walletcontroller.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b41cbb28f603f4f71f5854d6ae2527932bba3cb/src/qt/walletcontroller.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.cpp?ref=9b41cbb28f603f4f71f5854d6ae2527932bba3cb",
        "patch": "@@ -2,9 +2,14 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <qt/askpassphrasedialog.h>\n+#include <qt/createwalletdialog.h>\n+#include <qt/guiconstants.h>\n #include <qt/guiutil.h>\n #include <qt/walletcontroller.h>\n \n+#include <wallet/wallet.h>\n+\n #include <interfaces/handler.h>\n #include <interfaces/node.h>\n \n@@ -162,6 +167,93 @@ void WalletControllerActivity::showProgressDialog(const QString& label_text)\n     GUIUtil::PolishProgressDialog(m_progress_dialog);\n }\n \n+CreateWalletActivity::CreateWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+    m_passphrase.reserve(MAX_PASSPHRASE_SIZE);\n+}\n+\n+CreateWalletActivity::~CreateWalletActivity()\n+{\n+    delete m_create_wallet_dialog;\n+    delete m_passphrase_dialog;\n+}\n+\n+void CreateWalletActivity::askPasshprase()\n+{\n+    m_passphrase_dialog = new AskPassphraseDialog(AskPassphraseDialog::Encrypt, m_parent_widget, &m_passphrase);\n+    m_passphrase_dialog->show();\n+\n+    connect(m_passphrase_dialog, &QObject::destroyed, [this] {\n+        m_passphrase_dialog = nullptr;\n+    });\n+    connect(m_passphrase_dialog, &QDialog::accepted, [this] {\n+        createWallet();\n+    });\n+    connect(m_passphrase_dialog, &QDialog::rejected, [this] {\n+        Q_EMIT finished();\n+    });\n+}\n+\n+void CreateWalletActivity::createWallet()\n+{\n+    showProgressDialog(tr(\"Creating Wallet <b>%1</b>...\").arg(m_create_wallet_dialog->walletName().toHtmlEscaped()));\n+\n+    std::string name = m_create_wallet_dialog->walletName().toStdString();\n+    uint64_t flags = 0;\n+    if (m_create_wallet_dialog->disablePrivateKeys()) {\n+        flags |= WALLET_FLAG_DISABLE_PRIVATE_KEYS;\n+    }\n+    if (m_create_wallet_dialog->blank()) {\n+        flags |= WALLET_FLAG_BLANK_WALLET;\n+    }\n+\n+    QTimer::singleShot(500, worker(), [this, name, flags] {\n+        std::unique_ptr<interfaces::Wallet> wallet;\n+        WalletCreationStatus status = node().createWallet(m_passphrase, flags, name, m_error_message, m_warning_message, wallet);\n+\n+        if (status == WalletCreationStatus::SUCCESS) m_wallet_model = m_wallet_controller->getOrCreateWallet(std::move(wallet));\n+\n+        QTimer::singleShot(500, this, &CreateWalletActivity::finish);\n+    });\n+}\n+\n+void CreateWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Create wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Create wallet warning\"), QString::fromStdString(m_warning_message));\n+    }\n+\n+    if (m_wallet_model) Q_EMIT created(m_wallet_model);\n+\n+    Q_EMIT finished();\n+}\n+\n+void CreateWalletActivity::create()\n+{\n+    m_create_wallet_dialog = new CreateWalletDialog(m_parent_widget);\n+    m_create_wallet_dialog->setWindowModality(Qt::ApplicationModal);\n+    m_create_wallet_dialog->show();\n+\n+    connect(m_create_wallet_dialog, &QObject::destroyed, [this] {\n+        m_create_wallet_dialog = nullptr;\n+    });\n+    connect(m_create_wallet_dialog, &QDialog::rejected, [this] {\n+        Q_EMIT finished();\n+    });\n+    connect(m_create_wallet_dialog, &QDialog::accepted, [this] {\n+        if (m_create_wallet_dialog->encrypt()) {\n+            askPasshprase();\n+        } else {\n+            createWallet();\n+        }\n+    });\n+}\n+\n OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n     : WalletControllerActivity(wallet_controller, parent_widget)\n {"
      },
      {
        "sha": "4e1a772f3ade310b398de4454032f64dbfb6cfd3",
        "filename": "src/qt/walletcontroller.h",
        "status": "modified",
        "additions": 30,
        "deletions": 1,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b41cbb28f603f4f71f5854d6ae2527932bba3cb/src/qt/walletcontroller.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b41cbb28f603f4f71f5854d6ae2527932bba3cb/src/qt/walletcontroller.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.h?ref=9b41cbb28f603f4f71f5854d6ae2527932bba3cb",
        "patch": "@@ -6,6 +6,7 @@\n #define BITCOIN_QT_WALLETCONTROLLER_H\n \n #include <qt/walletmodel.h>\n+#include <support/allocators/secure.h>\n #include <sync.h>\n \n #include <map>\n@@ -16,8 +17,9 @@\n #include <QMessageBox>\n #include <QMutex>\n #include <QProgressDialog>\n-#include <QString>\n #include <QThread>\n+#include <QTimer>\n+#include <QString>\n \n class OptionsModel;\n class PlatformStyle;\n@@ -27,6 +29,9 @@ class Handler;\n class Node;\n } // namespace interfaces\n \n+class AskPassphraseDialog;\n+class CreateWalletActivity;\n+class CreateWalletDialog;\n class OpenWalletActivity;\n class WalletControllerActivity;\n \n@@ -98,6 +103,30 @@ class WalletControllerActivity : public QObject\n     std::string m_warning_message;\n };\n \n+\n+class CreateWalletActivity : public WalletControllerActivity\n+{\n+    Q_OBJECT\n+\n+public:\n+    CreateWalletActivity(WalletController* wallet_controller, QWidget* parent_widget);\n+    virtual ~CreateWalletActivity();\n+\n+    void create();\n+\n+Q_SIGNALS:\n+    void created(WalletModel* wallet_model);\n+\n+private:\n+    void askPasshprase();\n+    void createWallet();\n+    void finish();\n+\n+    SecureString m_passphrase;\n+    CreateWalletDialog* m_create_wallet_dialog{nullptr};\n+    AskPassphraseDialog* m_passphrase_dialog{nullptr};\n+};\n+\n class OpenWalletActivity : public WalletControllerActivity\n {\n     Q_OBJECT"
      }
    ]
  },
  {
    "sha": "613de61a04c210a51af9997e69f66439a17a632a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTNkZTYxYTA0YzIxMGE1MWFmOTk5N2U2OWY2NjQzOWExN2E2MzJh",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-02-20T17:22:08Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-09-06T00:36:57Z"
      },
      "message": "Add Create Wallet menu action\n\nCo-authored-by: Jo\u00e3o Barbosa <joao.paulo.barbosa@gmail.com>",
      "tree": {
        "sha": "be28a90cd454334e5bd56d4d4626a4559c18a110",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/be28a90cd454334e5bd56d4d4626a4559c18a110"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/613de61a04c210a51af9997e69f66439a17a632a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/613de61a04c210a51af9997e69f66439a17a632a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/613de61a04c210a51af9997e69f66439a17a632a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/613de61a04c210a51af9997e69f66439a17a632a/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9b41cbb28f603f4f71f5854d6ae2527932bba3cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b41cbb28f603f4f71f5854d6ae2527932bba3cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9b41cbb28f603f4f71f5854d6ae2527932bba3cb"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 12,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c4960b38d7cf9b7639208a95a29439472128b687",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/613de61a04c210a51af9997e69f66439a17a632a/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/613de61a04c210a51af9997e69f66439a17a632a/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=613de61a04c210a51af9997e69f66439a17a632a",
        "patch": "@@ -6,6 +6,7 @@\n \n #include <qt/bitcoinunits.h>\n #include <qt/clientmodel.h>\n+#include <qt/createwalletdialog.h>\n #include <qt/guiconstants.h>\n #include <qt/guiutil.h>\n #include <qt/modaloverlay.h>\n@@ -339,6 +340,9 @@ void BitcoinGUI::createActions()\n     m_close_wallet_action = new QAction(tr(\"Close Wallet...\"), this);\n     m_close_wallet_action->setStatusTip(tr(\"Close wallet\"));\n \n+    m_create_wallet_action = new QAction(tr(\"Create Wallet...\"), this);\n+    m_create_wallet_action->setStatusTip(tr(\"Create a new wallet\"));\n+\n     showHelpMessageAction = new QAction(tr(\"&Command-line options\"), this);\n     showHelpMessageAction->setMenuRole(QAction::NoRole);\n     showHelpMessageAction->setStatusTip(tr(\"Show the %1 help message to get a list with possible Bitcoin command-line options\").arg(PACKAGE_NAME));\n@@ -394,6 +398,12 @@ void BitcoinGUI::createActions()\n         connect(m_close_wallet_action, &QAction::triggered, [this] {\n             m_wallet_controller->closeWallet(walletFrame->currentWalletModel(), this);\n         });\n+        connect(m_create_wallet_action, &QAction::triggered, [this] {\n+            auto activity = new CreateWalletActivity(m_wallet_controller, this);\n+            connect(activity, &CreateWalletActivity::created, this, &BitcoinGUI::setCurrentWallet);\n+            connect(activity, &CreateWalletActivity::finished, activity, &QObject::deleteLater);\n+            activity->create();\n+        });\n     }\n #endif // ENABLE_WALLET\n \n@@ -415,6 +425,7 @@ void BitcoinGUI::createMenuBar()\n     QMenu *file = appMenuBar->addMenu(tr(\"&File\"));\n     if(walletFrame)\n     {\n+        file->addAction(m_create_wallet_action);\n         file->addAction(m_open_wallet_action);\n         file->addAction(m_close_wallet_action);\n         file->addSeparator();"
      },
      {
        "sha": "809cf8b4edf00f1486ea1d54af5b3b920c9b9811",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/613de61a04c210a51af9997e69f66439a17a632a/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/613de61a04c210a51af9997e69f66439a17a632a/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=613de61a04c210a51af9997e69f66439a17a632a",
        "patch": "@@ -147,6 +147,7 @@ class BitcoinGUI : public QMainWindow\n     QAction* openRPCConsoleAction = nullptr;\n     QAction* openAction = nullptr;\n     QAction* showHelpMessageAction = nullptr;\n+    QAction* m_create_wallet_action{nullptr};\n     QAction* m_open_wallet_action{nullptr};\n     QMenu* m_open_wallet_menu{nullptr};\n     QAction* m_close_wallet_action{nullptr};"
      }
    ]
  }
]