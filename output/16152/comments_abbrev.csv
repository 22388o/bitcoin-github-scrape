kallewoof,2019-06-05 15:13:45,Concept ACK,https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-499126716,499126716,
MarcoFalke,2019-06-05 18:30:32,Also needs release notes and a post to the mailing list,https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-499202044,499202044,
laanwj,2019-06-06 10:18:21,"concept and code-review ACK, only point of discussion is what release to set as milestone here",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-499437042,499437042,
TheBlueMatt,2019-06-06 10:52:30,"I'd presume next-major. No need to rush it into a backport, let alone to ensure there is always gonna be reasonable coverage of NODE_BLOOM nodes available.",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-499446803,499446803,
jtimon,2019-06-07 11:02:07,utACK f27309f55c4fa2b115525d72abb280757a568709,https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-499844581,499844581,
TheBlueMatt,2019-06-08 13:20:06,"> Also needs release notes and a post to the mailing list\n\nThis is not a protocol change, only a default argument change. No need to do a mailing list post. I added a release notes entry.",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-500123676,500123676,
luke-jr,2019-06-08 14:10:33,"utACK, without affirmation of future plans mentioned in PR description.",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-500127090,500127090,
jnewbery,2019-06-09 08:18:29,"ACK 048e0dcaea555e11bbdc8c56de0b9a523e42d351\n\nI've read the code and it seems reasonable to me. It's surprising that bloom filters aren't tested by the functional tests.\n\nThis line could be removed: https://github.com/bitcoin/bitcoin/blob/8a503a6c6dd419921373f45d7aa6f1787c9b8884/test/functional/p2p_mempool.py#L20 since `-peerbloomfilters` now defaults to false, but no harm in leaving it.",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-500194762,500194762,
NicolasDorier,2019-06-09 11:47:07,"~NACK~, @TheBlueMatt bloom filter should always be enabled for white listed peers, as this is the most effective way to sync a lightweight client from your own full node without the need of additional middleware like electrum. (regardless of the value of the flag)\n\nEven BIP157 come short for this usecase as it needlessly waste bandwidth. (and I think BIP157, as implemented now does not work in",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-500205875,500205875,
TheBlueMatt,2019-06-09 11:50:41,"@NicolasDorier That seems like an orthogonal issue. There is currently no code which enables it by default for whitelisted peers, so feel free to open a separate PR that does that.",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-500206072,500206072,
NicolasDorier,2019-06-09 11:53:18,"I don't believe it is completely orthogonal.\n\nChanging this default will break existing software which rely on the old default, at least we can limit damage to non-whitelisted peers only.\n\nBut yeh, anyway Concept ACK, not worth wasting ink on this, would just prefer if it was done here as well.",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-500206202,500206202,
TheBlueMatt,2019-06-09 12:09:14,"0.19 is a ways off, no big deal either way :p",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-500207195,500207195,
TheBlueMatt,2019-06-09 15:47:31,"Exactly, if you don't comment that line the linters decide that you've added a Clear Bug and must be shot.\n\n> On Jun 9, 2019, at 14:55, John Newbery <notifications@github.com> wrote:\n> \n> @jnewbery commented on this pull request.\n> \n> In test/functional/test_framework/messages.py:\n> \n> > @@ -44,7 +44,7 @@\n>  \n>  NODE_NETWORK = (1 << 0)\n>  # NODE_GETUTXO = (1 << 1)\n> -NODE_BLOOM = (1 <<",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-500223122,500223122,
Empact,2019-06-10 02:00:52,Concept ACK,https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-500267669,500267669,
ajtowns,2019-06-12 09:22:17,"ACK 048e0dcaea555e11bbdc8c56de0b9a523e42d351 ; light code review, checked it compiled.\n\n> NODE_BLOOM is, at this point, well-established and, as long as\n> there exist 0.18 nodes with default config (which I'd anticipate\n> will be true for many years), will be available from some peers.\n\nI don't think this necessarily holds up -- if percentage `p` of nodes disable bloom filters (by upgr",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-501192240,501192240,
jonasschnelli,2019-06-12 09:26:32,Concept ACK,https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-501193838,501193838,
practicalswift,2019-06-12 11:00:18,Concept ACK,https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-501223998,501223998,
laanwj,2019-06-13 13:10:22,"> so that bloom filters degrade to being only offered by some small quasi-centralised set of servers, likely run by the providers of wallets that use bloom filters.\n\nâ€¦ after which they might as well switch to a protocol that is efficient for that use such as electrum (which doesn't really have any worse privacy expectations), and everyone, including users of that wallet software will be better",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-501695811,501695811,
DrahtBot,2019-07-12 21:38:22,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15437](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15437.html) (p2p: Remove BIP61 reject messages by MarcoF",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-511041829,511041829,
jnewbery,2019-07-15 15:11:55,"Release notes fixed here: https://github.com/jnewbery/bitcoin/tree/pr16152_release_notes\n\n@TheBlueMatt - I think if you reset to that branch, this should be mergeable, since the code changes have already been ACKed by @ajtowns , @jnewbery , @MarcoFalke, @luke-jr, @jtimon and @laanwj, and the release notes will be re-reviewed at release time.",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-511443303,511443303,
MarcoFalke,2019-07-15 17:17:10,"As mentioned earlier (https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-499202044), this probably requires a very brief post to the mailing list, that explains the change in p2p network behavior and mentions how long wallet developers have until their software breaks.",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-511490762,511490762,
luke-jr,2019-07-15 18:59:29,"It won't break. People will continue to use old versions for years into the future. Some might turn NODE_BLOOM back on, too.",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-511527647,511527647,
MarcoFalke,2019-07-15 21:03:14,"Running versions of Bitcoin Core that are EOL is not supported. So if there was a DOS vector against them, it wouldn't be fixed and the nodes could be shut down remotely. After those are shut down, the ones that have it turned on explicitly might also die off because they are flooded with filters at that point. So effectively after 0.18 is EOL, this p2p feature should be considered dead. Implying ",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-511569067,511569067,
jnewbery,2019-07-15 22:07:04,"> I'd rather put a clear date on its expiry to give 3rd party developers a timescale to fix things.\n\nI agree. Much better to overcommunicate to the ecosystem through the mailing list than undercommunicate.",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-511588194,511588194,
luke-jr,2019-07-15 22:10:50,"Sure, no harm notifying people. My point was simply that 0.19 isn't suddenly a cut off. It will disappear gradually at most. And this only disables it by default - it's still there if someone wants to enable it (eg, for their own usage). It would even make sense to enable it for trusted peers by default, until a better solution exists. So it's not really dead at all yet.",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-511589213,511589213,
ajtowns,2019-07-16 07:18:17,"ACK 2518c0643ba99f7da80bfe24aaad0921184ead78 ; just changes the release notes which now look good to me. Unsurprisingly, code still looks good, still compiles and tests pass for me.",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-511697177,511697177,
TheBlueMatt,2019-07-18 21:31:17,"Tweaked the release notes to use the ""P2P"" header (thanks @jnewbery for answering my question of what the proper header is, happy to credit you in the commit if you want!), and rewrote the text to indicate that we don't anticipate it being a fast process (if anything, I'm happy to run a few of these, they aren't *that* bad if you have a super beefy machine). Happy to send a mail to the ML with the",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-512995938,512995938,
jnewbery,2019-07-18 22:58:33,"ACK bead32e31e399090af30b2ee3539995d4105a66d\n\nThe only difference from previous branch is updated release notes, which look good to me.\n\nPlease also consider this an ongoing ACK for _any_ release notes on top of f27309f55c4fa2b115525d72abb280757a568709 (which are the code changes)\n\n> happy to credit you in the commit if you want\n\nNo need",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-513024080,513024080,
NicolasDorier,2019-07-19 08:02:24,ACK,https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-513134456,513134456,
MarcoFalke,2019-07-19 15:25:00,"> Happy to send a mail to the ML with the release notes text if this gets merged.\n\nYes, please",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-513271590,513271590,
ShadowOfHarbringer,2019-07-22 13:29:06,ACK,https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-513791485,513791485,
SmartArray,2019-07-22 14:31:25,"I fully understand the purpose of having bloom filters disabled by default.\nAre we trying to serve an alternative? Like this one: https://github.com/bitcoin/bips/blob/master/bip-0157.mediawiki",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-513816685,513816685,
runvnc,2019-07-22 19:21:53,"Bloom filters are the way that lightweight wallets operate without centralized servers.\n\nThere is no evidence of a significant DoS issue.\n\nThis is a clear effort to sabotage Bitcoin.  ",https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-513918921,513918921,
cculianu,2019-07-22 23:45:08,What's the matter? Liquid network is not the smash hit Blockstream hoped it would be and you need to do this to cripple SPV wallets? Or what?,https://github.com/bitcoin/bitcoin/pull/16152#issuecomment-513995895,513995895,
MarcoFalke,2019-06-05 15:27:36,"This has nothing to do with validation, please move it to net or something.",https://github.com/bitcoin/bitcoin/pull/16152#discussion_r290800265,290800265,src/validation.h
JosuGZ,2019-06-05 16:13:13,Wouldn't that be something for a different pull request?,https://github.com/bitcoin/bitcoin/pull/16152#discussion_r290821455,290821455,src/validation.h
PastaPastaPasta,2019-06-06 02:37:59,agree on that probably being better in different pr,https://github.com/bitcoin/bitcoin/pull/16152#discussion_r291002193,291002193,src/validation.h
TheBlueMatt,2019-06-06 09:43:46,"No, we already have more than enough volume of useless ""move code around"" PRs. This is precisely the kind of thing that should be in the same PR in a separate commit.",https://github.com/bitcoin/bitcoin/pull/16152#discussion_r291101552,291101552,src/validation.h
laanwj,2019-06-06 10:15:17,let's not shedpaint this but imo it's fine to ombine this small code structure improvement with the change,https://github.com/bitcoin/bitcoin/pull/16152#discussion_r291114308,291114308,src/validation.h
NicolasDorier,2019-06-09 12:38:06,"Do not disable this, I will make a test later for allowing NODE_BLOOM services to whitelisted peers.",https://github.com/bitcoin/bitcoin/pull/16152#discussion_r291836112,291836112,test/functional/test_framework/messages.py
jnewbery,2019-06-09 12:54:01,No need to invalidate reviews. Just uncomment it in your PR.,https://github.com/bitcoin/bitcoin/pull/16152#discussion_r291836435,291836435,test/functional/test_framework/messages.py
jnewbery,2019-06-09 12:55:04,(also linting tools like vulture may flag an error if this constant is defined but not used),https://github.com/bitcoin/bitcoin/pull/16152#discussion_r291836456,291836456,test/functional/test_framework/messages.py
luke-jr,2019-06-10 04:48:54,That sounds like a bug in the linting tool IMO.,https://github.com/bitcoin/bitcoin/pull/16152#discussion_r291878617,291878617,test/functional/test_framework/messages.py
MarcoFalke,2019-06-11 11:42:47,"This is not a CLI change, but a change of default p2p behavior. (You remove the `NODE_BLOOM` service bit by default)",https://github.com/bitcoin/bitcoin/pull/16152#discussion_r292411469,292411469,doc/release-notes/release-notes-16152.md
TheBlueMatt,2019-07-12 17:43:17,"I dont know what the list of categories are, but I think a default parameter change is a CLI change. Happy to change to whatever.",https://github.com/bitcoin/bitcoin/pull/16152#discussion_r303082935,303082935,doc/release-notes/release-notes-16152.md
luke-jr,2019-07-21 12:15:31,No such alternative exists...,https://github.com/bitcoin/bitcoin/pull/16152#discussion_r305615139,305615139,doc/release-notes/release-notes-16152.md
