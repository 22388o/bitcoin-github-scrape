[
  {
    "sha": "4d94916f0dda535cb69b538ee4e3fffb5b033c87",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZDk0OTE2ZjBkZGE1MzVjYjY5YjUzOGVlNGUzZmZmYjViMDMzYzg3",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2019-07-18T16:06:23Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2019-07-18T16:06:23Z"
      },
      "message": "Get rid of PendingWalletTx class.\n\nNo reason for this class to exist if it doesn't have any code to run in the\ndestructor. e10e1e8db043e9b7c113e07faf408f337c1b732d from\nhttps://github.com/bitcoin/bitcoin/pull/16208 recently removed code destructor\ncode that would return an unused key if the transaction wasn't committed.",
      "tree": {
        "sha": "6999cb335efe0785b6635105c6649fa69031ad08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6999cb335efe0785b6635105c6649fa69031ad08"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d94916f0dda535cb69b538ee4e3fffb5b033c87",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d94916f0dda535cb69b538ee4e3fffb5b033c87",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4d94916f0dda535cb69b538ee4e3fffb5b033c87",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d94916f0dda535cb69b538ee4e3fffb5b033c87/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e5abb59a9a66723dd1d9a01f65e467636eb24f2d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5abb59a9a66723dd1d9a01f65e467636eb24f2d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e5abb59a9a66723dd1d9a01f65e467636eb24f2d"
      }
    ],
    "stats": {
      "total": 88,
      "additions": 33,
      "deletions": 55
    },
    "files": [
      {
        "sha": "077dc1ab4d2a750492dcd9322f72d0282f230fc6",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 29,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d94916f0dda535cb69b538ee4e3fffb5b033c87/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d94916f0dda535cb69b538ee4e3fffb5b033c87/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=4d94916f0dda535cb69b538ee4e3fffb5b033c87",
        "patch": "@@ -33,31 +33,6 @@\n namespace interfaces {\n namespace {\n \n-class PendingWalletTxImpl : public PendingWalletTx\n-{\n-public:\n-    explicit PendingWalletTxImpl(CWallet& wallet) : m_wallet(wallet) {}\n-\n-    const CTransaction& get() override { return *m_tx; }\n-\n-    bool commit(WalletValueMap value_map,\n-        WalletOrderForm order_form,\n-        std::string& reject_reason) override\n-    {\n-        auto locked_chain = m_wallet.chain().lock();\n-        LOCK(m_wallet.cs_wallet);\n-        CValidationState state;\n-        if (!m_wallet.CommitTransaction(m_tx, std::move(value_map), std::move(order_form), state)) {\n-            reject_reason = state.GetRejectReason();\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    CTransactionRef m_tx;\n-    CWallet& m_wallet;\n-};\n-\n //! Construct wallet tx struct.\n WalletTx MakeWalletTx(interfaces::Chain::Lock& locked_chain, CWallet& wallet, const CWalletTx& wtx)\n {\n@@ -227,7 +202,7 @@ class WalletImpl : public Wallet\n         LOCK(m_wallet->cs_wallet);\n         return m_wallet->ListLockedCoins(outputs);\n     }\n-    std::unique_ptr<PendingWalletTx> createTransaction(const std::vector<CRecipient>& recipients,\n+    CTransactionRef createTransaction(const std::vector<CRecipient>& recipients,\n         const CCoinControl& coin_control,\n         bool sign,\n         int& change_pos,\n@@ -236,12 +211,26 @@ class WalletImpl : public Wallet\n     {\n         auto locked_chain = m_wallet->chain().lock();\n         LOCK(m_wallet->cs_wallet);\n-        auto pending = MakeUnique<PendingWalletTxImpl>(*m_wallet);\n-        if (!m_wallet->CreateTransaction(*locked_chain, recipients, pending->m_tx, fee, change_pos,\n+        CTransactionRef tx;\n+        if (!m_wallet->CreateTransaction(*locked_chain, recipients, tx, fee, change_pos,\n                 fail_reason, coin_control, sign)) {\n             return {};\n         }\n-        return std::move(pending);\n+        return tx;\n+    }\n+    bool commitTransaction(CTransactionRef tx,\n+        WalletValueMap value_map,\n+        WalletOrderForm order_form,\n+        std::string& reject_reason) override\n+    {\n+        auto locked_chain = m_wallet->chain().lock();\n+        LOCK(m_wallet->cs_wallet);\n+        CValidationState state;\n+        if (!m_wallet->CommitTransaction(std::move(tx), std::move(value_map), std::move(order_form), state)) {\n+            reject_reason = state.GetRejectReason();\n+            return false;\n+        }\n+        return true;\n     }\n     bool transactionCanBeAbandoned(const uint256& txid) override { return m_wallet->TransactionCanBeAbandoned(txid); }\n     bool abandonTransaction(const uint256& txid) override"
      },
      {
        "sha": "89e056b18b8fec3b644972f6c648552b46bcb16d",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 7,
        "deletions": 17,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d94916f0dda535cb69b538ee4e3fffb5b033c87/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d94916f0dda535cb69b538ee4e3fffb5b033c87/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=4d94916f0dda535cb69b538ee4e3fffb5b033c87",
        "patch": "@@ -34,7 +34,6 @@ struct CRecipient;\n namespace interfaces {\n \n class Handler;\n-class PendingWalletTx;\n struct WalletAddress;\n struct WalletBalances;\n struct WalletTx;\n@@ -134,13 +133,19 @@ class Wallet\n     virtual void listLockedCoins(std::vector<COutPoint>& outputs) = 0;\n \n     //! Create transaction.\n-    virtual std::unique_ptr<PendingWalletTx> createTransaction(const std::vector<CRecipient>& recipients,\n+    virtual CTransactionRef createTransaction(const std::vector<CRecipient>& recipients,\n         const CCoinControl& coin_control,\n         bool sign,\n         int& change_pos,\n         CAmount& fee,\n         std::string& fail_reason) = 0;\n \n+    //! Commit transaction.\n+    virtual bool commitTransaction(CTransactionRef tx,\n+        WalletValueMap value_map,\n+        WalletOrderForm order_form,\n+        std::string& reject_reason) = 0;\n+\n     //! Return whether transaction can be abandoned.\n     virtual bool transactionCanBeAbandoned(const uint256& txid) = 0;\n \n@@ -288,21 +293,6 @@ class Wallet\n     virtual std::unique_ptr<Handler> handleCanGetAddressesChanged(CanGetAddressesChangedFn fn) = 0;\n };\n \n-//! Tracking object returned by CreateTransaction and passed to CommitTransaction.\n-class PendingWalletTx\n-{\n-public:\n-    virtual ~PendingWalletTx() {}\n-\n-    //! Get transaction data.\n-    virtual const CTransaction& get() = 0;\n-\n-    //! Send pending transaction and commit to wallet.\n-    virtual bool commit(WalletValueMap value_map,\n-        WalletOrderForm order_form,\n-        std::string& reject_reason) = 0;\n-};\n-\n //! Information about one wallet address.\n struct WalletAddress\n {"
      },
      {
        "sha": "193fba78b19297eedf60ea3e93c06b9e188e5ae3",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d94916f0dda535cb69b538ee4e3fffb5b033c87/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d94916f0dda535cb69b538ee4e3fffb5b033c87/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=4d94916f0dda535cb69b538ee4e3fffb5b033c87",
        "patch": "@@ -392,7 +392,7 @@ void SendCoinsDialog::on_sendButton_clicked()\n         accept();\n         CoinControlDialog::coinControl()->UnSelectAll();\n         coinControlUpdateLabels();\n-        Q_EMIT coinsSent(currentTransaction.getWtx()->get().GetHash());\n+        Q_EMIT coinsSent(currentTransaction.getWtx()->GetHash());\n     }\n     fNewRecipientAllowed = true;\n }"
      },
      {
        "sha": "49a13330ec098e9d4fa7d6d3db236b6a868fa16f",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d94916f0dda535cb69b538ee4e3fffb5b033c87/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d94916f0dda535cb69b538ee4e3fffb5b033c87/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=4d94916f0dda535cb69b538ee4e3fffb5b033c87",
        "patch": "@@ -261,11 +261,11 @@ WalletModel::SendCoinsReturn WalletModel::sendCoins(WalletModelTransaction &tran\n \n         auto& newTx = transaction.getWtx();\n         std::string rejectReason;\n-        if (!newTx->commit({} /* mapValue */, std::move(vOrderForm), rejectReason))\n+        if (!wallet().commitTransaction(newTx, {} /* mapValue */, std::move(vOrderForm), rejectReason))\n             return SendCoinsReturn(TransactionCommitFailed, QString::fromStdString(rejectReason));\n \n         CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n-        ssTx << newTx->get();\n+        ssTx << *newTx;\n         transaction_array.append(&(ssTx[0]), ssTx.size());\n     }\n "
      },
      {
        "sha": "d00ccf70d91ec3e0189e150e208c8f6b41f33656",
        "filename": "src/qt/walletmodeltransaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d94916f0dda535cb69b538ee4e3fffb5b033c87/src/qt/walletmodeltransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d94916f0dda535cb69b538ee4e3fffb5b033c87/src/qt/walletmodeltransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.cpp?ref=4d94916f0dda535cb69b538ee4e3fffb5b033c87",
        "patch": "@@ -21,14 +21,14 @@ QList<SendCoinsRecipient> WalletModelTransaction::getRecipients() const\n     return recipients;\n }\n \n-std::unique_ptr<interfaces::PendingWalletTx>& WalletModelTransaction::getWtx()\n+CTransactionRef& WalletModelTransaction::getWtx()\n {\n     return wtx;\n }\n \n unsigned int WalletModelTransaction::getTransactionSize()\n {\n-    return wtx ? GetVirtualTransactionSize(wtx->get()) : 0;\n+    return wtx ? GetVirtualTransactionSize(*wtx) : 0;\n }\n \n CAmount WalletModelTransaction::getTransactionFee() const\n@@ -43,7 +43,7 @@ void WalletModelTransaction::setTransactionFee(const CAmount& newFee)\n \n void WalletModelTransaction::reassignAmounts(int nChangePosRet)\n {\n-    const CTransaction* walletTransaction = &wtx->get();\n+    const CTransaction* walletTransaction = wtx.get();\n     int i = 0;\n     for (QList<SendCoinsRecipient>::iterator it = recipients.begin(); it != recipients.end(); ++it)\n     {"
      },
      {
        "sha": "a41d8f245716b4612899f4a5e8a362698b22a843",
        "filename": "src/qt/walletmodeltransaction.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d94916f0dda535cb69b538ee4e3fffb5b033c87/src/qt/walletmodeltransaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d94916f0dda535cb69b538ee4e3fffb5b033c87/src/qt/walletmodeltransaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.h?ref=4d94916f0dda535cb69b538ee4e3fffb5b033c87",
        "patch": "@@ -16,7 +16,6 @@ class SendCoinsRecipient;\n \n namespace interfaces {\n class Node;\n-class PendingWalletTx;\n }\n \n /** Data model for a walletmodel transaction. */\n@@ -27,7 +26,7 @@ class WalletModelTransaction\n \n     QList<SendCoinsRecipient> getRecipients() const;\n \n-    std::unique_ptr<interfaces::PendingWalletTx>& getWtx();\n+    CTransactionRef& getWtx();\n     unsigned int getTransactionSize();\n \n     void setTransactionFee(const CAmount& newFee);\n@@ -39,7 +38,7 @@ class WalletModelTransaction\n \n private:\n     QList<SendCoinsRecipient> recipients;\n-    std::unique_ptr<interfaces::PendingWalletTx> wtx;\n+    CTransactionRef wtx;\n     CAmount fee;\n };\n "
      }
    ]
  }
]