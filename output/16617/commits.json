[
  {
    "sha": "1cc06a1b6753362e690dc18f79ad177d5f8a87c2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxY2MwNmExYjY3NTMzNjJlNjkwZGMxOGY3OWFkMTc3ZDVmOGE4N2My",
    "commit": {
      "author": {
        "name": "Chuf",
        "email": "42591821+gapeman@users.noreply.github.com",
        "date": "2019-08-14T17:28:26Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-09-23T23:53:27Z"
      },
      "message": "doc: Fix typos in COPYRIGHT\n\nFixed a couple of typos\n\nGithub-Pull: #16615\nRebased-From: 36f7697cf6c129cabff2a698a52115829cd0d1fb",
      "tree": {
        "sha": "a167e77ffd2e9623a0a0bb8ea5ce9a33068de309",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a167e77ffd2e9623a0a0bb8ea5ce9a33068de309"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1cc06a1b6753362e690dc18f79ad177d5f8a87c2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl2JWvcACgkQLuufXMCV\nJsFVbxAAs2yZ75JFYiLZjgJd37Uf+r2M303js+44VMHOxW7lz/HxvzPZJKQXLdM4\nrsH3LnbfzQyhtXGAHyoDikfR9qM9h9EIE9Z33VJIOMPn1osGvf3mW7cGy0ymQycH\nPdXass0U626ZC7RRkqshypw4QdhvxDNRprgF/OtxFu9EkVH178F5CmK0s6JTbku3\nuR6f1v/dvpyqbKi8p6IC6zCAMqInnrwtnd4P1vCkd/298NYZyg+AfOmcHKijTn3U\n6e8LZTar3g0NSkpmbdiHGAAUUCaAU6OXdiOCCZQIn10+/F/ONRSJTbWligA1MfRW\nbpbrgm9ATcaqzckBITH+8DUuc7FwnWMfshho17UcYBBRbgn72Sho3DxjOKDZQrd6\nxoGra5s4Wcs2NXcHDOfRKsawFKVqZMVIlK34Df6vBJafBxp4Spg/nmeudIrjTRtD\nNHejkBIz8YcTkIrY5gBxGIPmGlQ/cXVXlFK0eo1q5Co4HBmk2XID+sAQban14W/b\n4K4QSCFHKW6w7JWtREEy020vfrB6VRxkvy4qYEDugezeMqzG2Vcpxeukh/G+65Vg\nFAj653e0YyizeEjKAG/GYRN1dLgkDJUB9lb/zV1yTpLSjZc2PCehnXggfzV8Z7js\ngwbbreJ/DxJlwHWwiC+SXNMeHJnJNjJEvnZVSh5i+rE6AtGPeQc=\n=ftMz\n-----END PGP SIGNATURE-----",
        "payload": "tree a167e77ffd2e9623a0a0bb8ea5ce9a33068de309\nparent 3b0422118368a22f9eccb0103c15cd4010ac8d85\nauthor Chuf <42591821+gapeman@users.noreply.github.com> 1565803706 +0000\ncommitter fanquake <fanquake@gmail.com> 1569282807 +0800\n\ndoc: Fix typos in COPYRIGHT\n\nFixed a couple of typos\n\nGithub-Pull: #16615\nRebased-From: 36f7697cf6c129cabff2a698a52115829cd0d1fb\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cc06a1b6753362e690dc18f79ad177d5f8a87c2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1cc06a1b6753362e690dc18f79ad177d5f8a87c2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cc06a1b6753362e690dc18f79ad177d5f8a87c2/comments",
    "author": {
      "login": "GChuf",
      "id": 42591821,
      "node_id": "MDQ6VXNlcjQyNTkxODIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/42591821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GChuf",
      "html_url": "https://github.com/GChuf",
      "followers_url": "https://api.github.com/users/GChuf/followers",
      "following_url": "https://api.github.com/users/GChuf/following{/other_user}",
      "gists_url": "https://api.github.com/users/GChuf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GChuf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GChuf/subscriptions",
      "organizations_url": "https://api.github.com/users/GChuf/orgs",
      "repos_url": "https://api.github.com/users/GChuf/repos",
      "events_url": "https://api.github.com/users/GChuf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GChuf/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3b0422118368a22f9eccb0103c15cd4010ac8d85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b0422118368a22f9eccb0103c15cd4010ac8d85",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3b0422118368a22f9eccb0103c15cd4010ac8d85"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 3,
      "deletions": 4
    },
    "files": [
      {
        "sha": "8fb9df9e6c4493fce468e10dd4b0b828657d2377",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cc06a1b6753362e690dc18f79ad177d5f8a87c2/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cc06a1b6753362e690dc18f79ad177d5f8a87c2/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=1cc06a1b6753362e690dc18f79ad177d5f8a87c2",
        "patch": "@@ -60,7 +60,7 @@ Files: src/qt/res/icons/connect*.png\n Copyright: Marco Falke\n            Luke Dashjr\n License: Expat\n-Comment: Inspired by Stephan Hutchings Typicons\n+Comment: Inspired by Stephen Hutchings' Typicons\n \n Files: src/qt/res/icons/tx_mined.png\n        src/qt/res/src/mine.svg\n@@ -72,7 +72,6 @@ Files: src/qt/res/icons/tx_mined.png\n        src/qt/res/src/hd_enabled.svg\n Copyright: Jonas Schnelli\n License: Expat\n-Comment:\n \n Files: src/qt/res/icons/clock*.png\n        src/qt/res/icons/eye_*.png\n@@ -81,9 +80,9 @@ Files: src/qt/res/icons/clock*.png\n        src/qt/res/src/clock_*.svg\n        src/qt/res/src/tx_*.svg\n        src/qt/res/src/verify.svg\n-Copyright: Stephan Hutching, Jonas Schnelli\n+Copyright: Stephen Hutchings, Jonas Schnelli\n License: Expat\n-Comment: Modifications of Stephan Hutchings Typicons\n+Comment: Modifications of Stephen Hutchings' Typicons\n \n Files: src/qt/res/icons/about.png\n        src/qt/res/icons/bitcoin.*"
      }
    ]
  },
  {
    "sha": "7bd8f4e4321b73a9d55926778655310de0166bac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YmQ4ZjRlNDMyMWI3M2E5ZDU1OTI2Nzc4NjU1MzEwZGUwMTY2YmFj",
    "commit": {
      "author": {
        "name": "Emil Engler",
        "email": "me@emilengler.com",
        "date": "2019-08-13T16:25:58Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-09-23T23:53:28Z"
      },
      "message": "rpc: Fix getblocktemplate CLI example (#16594)\n\nGithub-Pull: #16596\nRebased-From: 14f7eec3bdb15a9a75f8686c0a3e879aa8ceef47",
      "tree": {
        "sha": "165bdc41eb24576cd0f4f90e201b8b4197009f81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/165bdc41eb24576cd0f4f90e201b8b4197009f81"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7bd8f4e4321b73a9d55926778655310de0166bac",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl2JWvgACgkQLuufXMCV\nJsG/KxAAhRF3MvwfQ8ccjHHVesmEY1vQpm5n2/g8BHYvlTmVAgvcdcBxLAXE435B\ngZxWKx8Ru+zsxil/XyzItZi5MzHpEXDP0hB4bqG5eh5JHipTUTir1AgkHy7R1aUO\njAphWCt8qwGZM02Dv0PyEMUQyIdEzJRh2AmcAqlQZBY4GZMCiF6ZZSduriTIwjub\nuWwUXBnQOh48T1Qa41qolwnnC+9GguzVKbbDRT7HmqY19Dolp+jIA38J+4/sM66u\nhXYvsm9LcL/8ZNCDdhQPYfeaI0ztWDEfpJkXmYB0n+6Fjce5j/BadINbO1hrD3Nu\n3CZ6/CGr5zgM1InboJx5vH2Xr3uop0x8OCVCwi4i2L4EfAdFp+bmKY1q6QW4nyJ5\nhOW8a9ImoiJI5oJBJO3FRYtmWlkOa1C6Ssn4+J/3fXOppl2ZnhuzziFYhre+69o5\na1Il/TXfciLfeSm6QFCqEZW8sX23PSo8JOZQKsYohlj7kG7eyeBv1/XTSTbsxTiG\nrUtrFzIQZLl4MXF3Z0/lpsCpCrUztlqjLtcIxtvp9v7f5oQfgjFUZL5VAFtRx9JY\nOnYoRTJJ3aS4txjleCQWmJPxusXKYLQheAU+p2Fj/VZg4T7FN8d1b/Hbm9cW2Pni\nbV1cikf6DEsuwHe1GzTDT2G26Xwe/jVoj3/lxz5e+uwIxcv1Bug=\n=HVwH\n-----END PGP SIGNATURE-----",
        "payload": "tree 165bdc41eb24576cd0f4f90e201b8b4197009f81\nparent 1cc06a1b6753362e690dc18f79ad177d5f8a87c2\nauthor Emil Engler <me@emilengler.com> 1565713558 +0200\ncommitter fanquake <fanquake@gmail.com> 1569282808 +0800\n\nrpc: Fix getblocktemplate CLI example (#16594)\n\nGithub-Pull: #16596\nRebased-From: 14f7eec3bdb15a9a75f8686c0a3e879aa8ceef47\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bd8f4e4321b73a9d55926778655310de0166bac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7bd8f4e4321b73a9d55926778655310de0166bac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bd8f4e4321b73a9d55926778655310de0166bac/comments",
    "author": {
      "login": "emilengler",
      "id": 12272949,
      "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emilengler",
      "html_url": "https://github.com/emilengler",
      "followers_url": "https://api.github.com/users/emilengler/followers",
      "following_url": "https://api.github.com/users/emilengler/following{/other_user}",
      "gists_url": "https://api.github.com/users/emilengler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
      "organizations_url": "https://api.github.com/users/emilengler/orgs",
      "repos_url": "https://api.github.com/users/emilengler/repos",
      "events_url": "https://api.github.com/users/emilengler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emilengler/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1cc06a1b6753362e690dc18f79ad177d5f8a87c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cc06a1b6753362e690dc18f79ad177d5f8a87c2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1cc06a1b6753362e690dc18f79ad177d5f8a87c2"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b149bab8975acdaac7676f1ef163c0a9083dcda5",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bd8f4e4321b73a9d55926778655310de0166bac/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bd8f4e4321b73a9d55926778655310de0166bac/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=7bd8f4e4321b73a9d55926778655310de0166bac",
        "patch": "@@ -368,7 +368,7 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n             \"}\\n\"\n                 },\n                 RPCExamples{\n-                    HelpExampleCli(\"getblocktemplate\", \"{\\\"rules\\\": [\\\"segwit\\\"]}\")\n+                    HelpExampleCli(\"getblocktemplate\", \"'{\\\"rules\\\": [\\\"segwit\\\"]}'\")\n             + HelpExampleRpc(\"getblocktemplate\", \"{\\\"rules\\\": [\\\"segwit\\\"]}\")\n                 },\n             }.ToString());"
      }
    ]
  },
  {
    "sha": "a44e18f20b720ec9d3bef3640ef1c1d3730e2292",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNDRlMThmMjBiNzIwZWM5ZDNiZWYzNjQwZWYxYzFkMzczMGUyMjky",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-06-26T14:24:48Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-09-23T23:53:28Z"
      },
      "message": "build: Stop translating PACKAGE_NAME\n\nGithub-Pull: #16291\nRebased-From: fa5e9f157e568b7fbbea1482b393181f0733f2ba",
      "tree": {
        "sha": "8860ea3a541ce1186347f18ffaa2bba4d5682478",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8860ea3a541ce1186347f18ffaa2bba4d5682478"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a44e18f20b720ec9d3bef3640ef1c1d3730e2292",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl2JWvgACgkQLuufXMCV\nJsFxPxAAjVeDWKby25pfxMciXCmpE3BLwqzn2ilaBs88SMTIR9jvKMR9m4ZtGgWT\nrDVOktbCfnfSW5k1jkLIe3qgxpZkztxbWoo6DNoEIPpVpk+iKfQV//nTwsGdryVa\nL5wecUZi113Sv4Iq01i2kZTEbqPxXLkn0+Wx0YJk3u6+RKyEcifKI2oSOKK4dnKy\n39LcImGccKhZ14mbuBfy8xCxyNziuArnfFhKb9uyQFaWWjDip6JmMhPaWEdVQda2\nWz0P0IjjUTtFZ72o9lSYOxyEYJW0OFndORCiPuSiNYJQ+n1ZV7cdR7mWWwdUXuWi\nUJEUNyBpmX+f+5CNwb/bvsuvD3wg69MW35GQtUPaMwiSwbpy/BkBmKYCIysD5CP5\n1SAGKeFaECmSP4kbC+Ua1W/rgjlIz8E+1lEO2nsQTte/F/vXSPWB5w3awwq8ObXx\nESCNsRtBBBt7lDSuZWBe5fuzD2LJh7KDQISa6y2rTeV/9CCC9Anmc3HtitmKSXz0\nWoAeb3pPcDeAE7LS5QgLa1YPhsRBnh2meOBGl/69iSO9SaOve82GuN+PDXSJH49N\nLFNU7nLgzN5f4Bd1ymdio5WOFufI9AEe81sjvtxA+bSVNh9PHXOnPT/l06ASCwfc\nREGXtH24aYix4MeoXTbQmxOuO3jIQsqTYApfVfqVjVD18z0H6yU=\n=K/Fn\n-----END PGP SIGNATURE-----",
        "payload": "tree 8860ea3a541ce1186347f18ffaa2bba4d5682478\nparent 7bd8f4e4321b73a9d55926778655310de0166bac\nauthor MarcoFalke <falke.marco@gmail.com> 1561559088 -0400\ncommitter fanquake <fanquake@gmail.com> 1569282808 +0800\n\nbuild: Stop translating PACKAGE_NAME\n\nGithub-Pull: #16291\nRebased-From: fa5e9f157e568b7fbbea1482b393181f0733f2ba\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a44e18f20b720ec9d3bef3640ef1c1d3730e2292",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a44e18f20b720ec9d3bef3640ef1c1d3730e2292",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a44e18f20b720ec9d3bef3640ef1c1d3730e2292/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7bd8f4e4321b73a9d55926778655310de0166bac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bd8f4e4321b73a9d55926778655310de0166bac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7bd8f4e4321b73a9d55926778655310de0166bac"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 2,
      "deletions": 5
    },
    "files": [
      {
        "sha": "3cc0fa1b1dda1adb2253b6fbcc36abea400f1bdf",
        "filename": "share/qt/extract_strings_qt.py",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a44e18f20b720ec9d3bef3640ef1c1d3730e2292/share/qt/extract_strings_qt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a44e18f20b720ec9d3bef3640ef1c1d3730e2292/share/qt/extract_strings_qt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/extract_strings_qt.py?ref=a44e18f20b720ec9d3bef3640ef1c1d3730e2292",
        "patch": "@@ -76,10 +76,7 @@ def parse_po(text):\n #endif\n \"\"\")\n f.write('static const char UNUSED *bitcoin_strings[] = {\\n')\n-f.write('QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%s\"),\\n' % (os.getenv('PACKAGE_NAME'),))\n f.write('QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%s\"),\\n' % (os.getenv('COPYRIGHT_HOLDERS'),))\n-if os.getenv('COPYRIGHT_HOLDERS_SUBSTITUTION') != os.getenv('PACKAGE_NAME'):\n-    f.write('QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%s\"),\\n' % (os.getenv('COPYRIGHT_HOLDERS_SUBSTITUTION'),))\n messages.sort(key=operator.itemgetter(0))\n for (msgid, msgstr) in messages:\n     if msgid != EMPTY:"
      },
      {
        "sha": "a6f642c098a5686d5b33a3de2152bb5a88d14a3c",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a44e18f20b720ec9d3bef3640ef1c1d3730e2292/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a44e18f20b720ec9d3bef3640ef1c1d3730e2292/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=a44e18f20b720ec9d3bef3640ef1c1d3730e2292",
        "patch": "@@ -477,7 +477,7 @@ SECONDARY: $(QT_QM)\n \n $(srcdir)/qt/bitcoinstrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_wallet_a_SOURCES) $(libbitcoin_common_a_SOURCES) $(libbitcoin_zmq_a_SOURCES) $(libbitcoin_consensus_a_SOURCES) $(libbitcoin_util_a_SOURCES)\n \t@test -n $(XGETTEXT) || echo \"xgettext is required for updating translations\"\n-\t$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) PACKAGE_NAME=\"$(PACKAGE_NAME)\" COPYRIGHT_HOLDERS=\"$(COPYRIGHT_HOLDERS)\" COPYRIGHT_HOLDERS_SUBSTITUTION=\"$(COPYRIGHT_HOLDERS_SUBSTITUTION)\" $(PYTHON) ../share/qt/extract_strings_qt.py $^\n+\t$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) COPYRIGHT_HOLDERS=\"$(COPYRIGHT_HOLDERS)\" $(PYTHON) ../share/qt/extract_strings_qt.py $^\n \n translate: $(srcdir)/qt/bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_BASE_CPP) qt/bitcoin.cpp $(BITCOIN_QT_WINDOWS_CPP) $(BITCOIN_QT_WALLET_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)\n \t@test -n $(LUPDATE) || echo \"lupdate is required for updating translations\""
      },
      {
        "sha": "745f021f6b31ff76ee7bc38bb0fba27342fc2d1b",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a44e18f20b720ec9d3bef3640ef1c1d3730e2292/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a44e18f20b720ec9d3bef3640ef1c1d3730e2292/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=a44e18f20b720ec9d3bef3640ef1c1d3730e2292",
        "patch": "@@ -41,7 +41,7 @@ HelpMessageDialog::HelpMessageDialog(interfaces::Node& node, QWidget *parent, bo\n {\n     ui->setupUi(this);\n \n-    QString version = tr(PACKAGE_NAME) + \" \" + tr(\"version\") + \" \" + QString::fromStdString(FormatFullVersion());\n+    QString version = QString{PACKAGE_NAME} + \" \" + tr(\"version\") + \" \" + QString::fromStdString(FormatFullVersion());\n     /* On x86 add a bit specifier to the version so that users can distinguish between\n      * 32 and 64 bit builds. On other architectures, 32/64 bit may be more ambiguous.\n      */"
      }
    ]
  },
  {
    "sha": "87908e9c98f2bc6975d70d8f427a9be965effc3b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NzkwOGU5Yzk4ZjJiYzY5NzVkNzBkOGY0MjdhOWJlOTY1ZWZmYzNi",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-06-26T14:28:13Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-09-23T23:53:28Z"
      },
      "message": "scripted-diff: Avoid passing PACKAGE_NAME for translation\n\n-BEGIN VERIFY SCRIPT-\nsed -i --regexp-extended -e 's/\\<\\w+(::\\w+)?\\(PACKAGE_NAME\\)/PACKAGE_NAME/g' $(git grep -l --extended-regexp '\\<\\w+(::\\w+)?\\(PACKAGE_NAME\\)' src)\n-END VERIFY SCRIPT-\n\nGithub-Pull: #16291\nRebased-From: fabe87d2c923ab3a70b8cde2666a4d1cda8b22fb",
      "tree": {
        "sha": "754a3d528171431446d26202252dc2387fccd934",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/754a3d528171431446d26202252dc2387fccd934"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87908e9c98f2bc6975d70d8f427a9be965effc3b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl2JWvgACgkQLuufXMCV\nJsHTLBAAvSHT+M/hEHOYPc81o1ZqV4+oI4h0AwcisrTJT83gcPIRxhVjuDKoLvex\nG3cYMrsUdOvL19axO6951s6wL8ILHGdsE0W/DBEZoLwjkprlQS/uTRE5u4JbFn0Q\nGwuBbWWLiG9RLgIyjRwrdCemh1Ndt6MuCr5BVfcuvFfXjQgpqAT4w1I4FVBGJAhO\nJ8YnNHkfpdfXvXbcXIGtX0YXj4X6ECXqb1nFBaqlLgvyNblizlAYJ9rPUS00mQM+\nTgRHJDcZYHLu9wKkO4Y9Jb0eDd6DSXSFaOHGyAWkt01KlAqsB67YDQeKu8ACXlli\nvjNyZP5rUJb4Vb1JuRrxPWoTl4saApH+JHXW3rhNDmanVn0s+WS4sqncnKas6SQk\n+tZ3yLrOrovryJCA9IQ0ThpvShM0ah5p/TY1oof12Ui9iF3ENX0U9bZylPAbEVL4\na/JVKatqJCJ8BTprlo29/qAXaIuf+GrT1GH7KOYEoiBllrfaPxiUKQJy9GhwEUlr\nGVgxctl7N+KINCcq65igdCbSU5Z4QxRYXO44F7hL7XZpjGeEDWEYa7aDXgmfxD9Y\n7lJfOIubtDJhDbM8rs8k60qojW/gYlClmlGapGYeKjp0Wq37VDiQc3C9LQLblusT\n0vMoO2SaEodaDX3nhm0efucf3gqgf/2/eeYGZoonYU89L+ETvU4=\n=BZ53\n-----END PGP SIGNATURE-----",
        "payload": "tree 754a3d528171431446d26202252dc2387fccd934\nparent a44e18f20b720ec9d3bef3640ef1c1d3730e2292\nauthor MarcoFalke <falke.marco@gmail.com> 1561559293 -0400\ncommitter fanquake <fanquake@gmail.com> 1569282808 +0800\n\nscripted-diff: Avoid passing PACKAGE_NAME for translation\n\n-BEGIN VERIFY SCRIPT-\nsed -i --regexp-extended -e 's/\\<\\w+(::\\w+)?\\(PACKAGE_NAME\\)/PACKAGE_NAME/g' $(git grep -l --extended-regexp '\\<\\w+(::\\w+)?\\(PACKAGE_NAME\\)' src)\n-END VERIFY SCRIPT-\n\nGithub-Pull: #16291\nRebased-From: fabe87d2c923ab3a70b8cde2666a4d1cda8b22fb\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87908e9c98f2bc6975d70d8f427a9be965effc3b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/87908e9c98f2bc6975d70d8f427a9be965effc3b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87908e9c98f2bc6975d70d8f427a9be965effc3b/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a44e18f20b720ec9d3bef3640ef1c1d3730e2292",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a44e18f20b720ec9d3bef3640ef1c1d3730e2292",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a44e18f20b720ec9d3bef3640ef1c1d3730e2292"
      }
    ],
    "stats": {
      "total": 64,
      "additions": 32,
      "deletions": 32
    },
    "files": [
      {
        "sha": "ce9ff25c429b838d1d72ead121b6ed99344a6c70",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=87908e9c98f2bc6975d70d8f427a9be965effc3b",
        "patch": "@@ -1181,7 +1181,7 @@ static bool LockDataDirectory(bool probeOnly)\n         return InitError(strprintf(_(\"Cannot write to data directory '%s'; check permissions.\"), datadir.string()));\n     }\n     if (!LockDirectory(datadir, \".lock\", probeOnly)) {\n-        return InitError(strprintf(_(\"Cannot obtain a lock on data directory %s. %s is probably already running.\"), datadir.string(), _(PACKAGE_NAME)));\n+        return InitError(strprintf(_(\"Cannot obtain a lock on data directory %s. %s is probably already running.\"), datadir.string(), PACKAGE_NAME));\n     }\n     return true;\n }\n@@ -1199,7 +1199,7 @@ bool AppInitSanityChecks()\n \n     // Sanity check\n     if (!InitSanityCheck())\n-        return InitError(strprintf(_(\"Initialization sanity check failed. %s is shutting down.\"), _(PACKAGE_NAME)));\n+        return InitError(strprintf(_(\"Initialization sanity check failed. %s is shutting down.\"), PACKAGE_NAME));\n \n     // Probe the data directory lock to give an early error message, if possible\n     // We cannot hold the data directory lock here, as the forking for daemon() hasn't yet happened,"
      },
      {
        "sha": "4d59ddce845b6a8220c976b4aec40efdc433b2d4",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=87908e9c98f2bc6975d70d8f427a9be965effc3b",
        "patch": "@@ -2041,7 +2041,7 @@ bool CConnman::BindListenPort(const CService &addrBind, std::string& strError, b\n     {\n         int nErr = WSAGetLastError();\n         if (nErr == WSAEADDRINUSE)\n-            strError = strprintf(_(\"Unable to bind to %s on this computer. %s is probably already running.\"), addrBind.ToString(), _(PACKAGE_NAME));\n+            strError = strprintf(_(\"Unable to bind to %s on this computer. %s is probably already running.\"), addrBind.ToString(), PACKAGE_NAME);\n         else\n             strError = strprintf(_(\"Unable to bind to %s on this computer (bind returned error %s)\"), addrBind.ToString(), NetworkErrorString(nErr));\n         LogPrintf(\"%s\\n\", strError);"
      },
      {
        "sha": "0ed0407699142eaad2056f386ea6f2f2f54b68a7",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=87908e9c98f2bc6975d70d8f427a9be965effc3b",
        "patch": "@@ -464,7 +464,7 @@ int GuiMain(int argc, char* argv[])\n     SetupUIArgs();\n     std::string error;\n     if (!node->parseParameters(argc, argv, error)) {\n-        QMessageBox::critical(nullptr, QObject::tr(PACKAGE_NAME),\n+        QMessageBox::critical(nullptr, PACKAGE_NAME,\n             QObject::tr(\"Error parsing command line arguments: %1.\").arg(QString::fromStdString(error)));\n         return EXIT_FAILURE;\n     }\n@@ -501,12 +501,12 @@ int GuiMain(int argc, char* argv[])\n     /// - Do not call GetDataDir(true) before this step finishes\n     if (!fs::is_directory(GetDataDir(false)))\n     {\n-        QMessageBox::critical(nullptr, QObject::tr(PACKAGE_NAME),\n+        QMessageBox::critical(nullptr, PACKAGE_NAME,\n             QObject::tr(\"Error: Specified data directory \\\"%1\\\" does not exist.\").arg(QString::fromStdString(gArgs.GetArg(\"-datadir\", \"\"))));\n         return EXIT_FAILURE;\n     }\n     if (!node->readConfigFiles(error)) {\n-        QMessageBox::critical(nullptr, QObject::tr(PACKAGE_NAME),\n+        QMessageBox::critical(nullptr, PACKAGE_NAME,\n             QObject::tr(\"Error: Cannot parse configuration file: %1.\").arg(QString::fromStdString(error)));\n         return EXIT_FAILURE;\n     }\n@@ -521,7 +521,7 @@ int GuiMain(int argc, char* argv[])\n     try {\n         node->selectParams(gArgs.GetChainName());\n     } catch(std::exception &e) {\n-        QMessageBox::critical(nullptr, QObject::tr(PACKAGE_NAME), QObject::tr(\"Error: %1\").arg(e.what()));\n+        QMessageBox::critical(nullptr, PACKAGE_NAME, QObject::tr(\"Error: %1\").arg(e.what()));\n         return EXIT_FAILURE;\n     }\n #ifdef ENABLE_WALLET\n@@ -578,7 +578,7 @@ int GuiMain(int argc, char* argv[])\n         if (app.baseInitialize()) {\n             app.requestInitialize();\n #if defined(Q_OS_WIN)\n-            WinShutdownMonitor::registerShutdownBlockReason(QObject::tr(\"%1 didn't yet exit safely...\").arg(QObject::tr(PACKAGE_NAME)), (HWND)app.getMainWinId());\n+            WinShutdownMonitor::registerShutdownBlockReason(QObject::tr(\"%1 didn't yet exit safely...\").arg(PACKAGE_NAME), (HWND)app.getMainWinId());\n #endif\n             app.exec();\n             app.requestShutdown();"
      },
      {
        "sha": "2bbd69a0f26130f09ff1e41110c2780267f852cf",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=87908e9c98f2bc6975d70d8f427a9be965effc3b",
        "patch": "@@ -294,15 +294,15 @@ void BitcoinGUI::createActions()\n     quitAction->setStatusTip(tr(\"Quit application\"));\n     quitAction->setShortcut(QKeySequence(Qt::CTRL + Qt::Key_Q));\n     quitAction->setMenuRole(QAction::QuitRole);\n-    aboutAction = new QAction(platformStyle->TextColorIcon(\":/icons/about\"), tr(\"&About %1\").arg(tr(PACKAGE_NAME)), this);\n-    aboutAction->setStatusTip(tr(\"Show information about %1\").arg(tr(PACKAGE_NAME)));\n+    aboutAction = new QAction(platformStyle->TextColorIcon(\":/icons/about\"), tr(\"&About %1\").arg(PACKAGE_NAME), this);\n+    aboutAction->setStatusTip(tr(\"Show information about %1\").arg(PACKAGE_NAME));\n     aboutAction->setMenuRole(QAction::AboutRole);\n     aboutAction->setEnabled(false);\n     aboutQtAction = new QAction(platformStyle->TextColorIcon(\":/icons/about_qt\"), tr(\"About &Qt\"), this);\n     aboutQtAction->setStatusTip(tr(\"Show information about Qt\"));\n     aboutQtAction->setMenuRole(QAction::AboutQtRole);\n     optionsAction = new QAction(platformStyle->TextColorIcon(\":/icons/options\"), tr(\"&Options...\"), this);\n-    optionsAction->setStatusTip(tr(\"Modify configuration options for %1\").arg(tr(PACKAGE_NAME)));\n+    optionsAction->setStatusTip(tr(\"Modify configuration options for %1\").arg(PACKAGE_NAME));\n     optionsAction->setMenuRole(QAction::PreferencesRole);\n     optionsAction->setEnabled(false);\n     toggleHideAction = new QAction(platformStyle->TextColorIcon(\":/icons/about\"), tr(\"&Show / Hide\"), this);\n@@ -344,7 +344,7 @@ void BitcoinGUI::createActions()\n \n     showHelpMessageAction = new QAction(platformStyle->TextColorIcon(\":/icons/info\"), tr(\"&Command-line options\"), this);\n     showHelpMessageAction->setMenuRole(QAction::NoRole);\n-    showHelpMessageAction->setStatusTip(tr(\"Show the %1 help message to get a list with possible Bitcoin command-line options\").arg(tr(PACKAGE_NAME)));\n+    showHelpMessageAction->setStatusTip(tr(\"Show the %1 help message to get a list with possible Bitcoin command-line options\").arg(PACKAGE_NAME));\n \n     connect(quitAction, &QAction::triggered, qApp, QApplication::quit);\n     connect(aboutAction, &QAction::triggered, this, &BitcoinGUI::aboutClicked);\n@@ -729,7 +729,7 @@ void BitcoinGUI::createTrayIcon()\n #ifndef Q_OS_MAC\n     if (QSystemTrayIcon::isSystemTrayAvailable()) {\n         trayIcon = new QSystemTrayIcon(m_network_style->getTrayAndWindowIcon(), this);\n-        QString toolTip = tr(\"%1 client\").arg(tr(PACKAGE_NAME)) + \" \" + m_network_style->getTitleAddText();\n+        QString toolTip = tr(\"%1 client\").arg(PACKAGE_NAME) + \" \" + m_network_style->getTitleAddText();\n         trayIcon->setToolTip(toolTip);\n     }\n #endif\n@@ -1290,7 +1290,7 @@ void BitcoinGUI::updateProxyIcon()\n \n void BitcoinGUI::updateWindowTitle()\n {\n-    QString window_title = tr(PACKAGE_NAME);\n+    QString window_title = PACKAGE_NAME;\n #ifdef ENABLE_WALLET\n     if (walletFrame) {\n         WalletModel* const wallet_model = walletFrame->currentWalletModel();"
      },
      {
        "sha": "36139022fbfbbda8d1ccaeeaaffbb1ea0d876809",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=87908e9c98f2bc6975d70d8f427a9be965effc3b",
        "patch": "@@ -119,16 +119,16 @@ Intro::Intro(QWidget *parent, uint64_t blockchain_size, uint64_t chain_state_siz\n     m_chain_state_size(chain_state_size)\n {\n     ui->setupUi(this);\n-    ui->welcomeLabel->setText(ui->welcomeLabel->text().arg(tr(PACKAGE_NAME)));\n-    ui->storageLabel->setText(ui->storageLabel->text().arg(tr(PACKAGE_NAME)));\n+    ui->welcomeLabel->setText(ui->welcomeLabel->text().arg(PACKAGE_NAME));\n+    ui->storageLabel->setText(ui->storageLabel->text().arg(PACKAGE_NAME));\n \n     ui->lblExplanation1->setText(ui->lblExplanation1->text()\n-        .arg(tr(PACKAGE_NAME))\n+        .arg(PACKAGE_NAME)\n         .arg(m_blockchain_size)\n         .arg(2009)\n         .arg(tr(\"Bitcoin\"))\n     );\n-    ui->lblExplanation2->setText(ui->lblExplanation2->text().arg(tr(PACKAGE_NAME)));\n+    ui->lblExplanation2->setText(ui->lblExplanation2->text().arg(PACKAGE_NAME));\n \n     uint64_t pruneTarget = std::max<int64_t>(0, gArgs.GetArg(\"-prune\", 0));\n     requiredSpace = m_blockchain_size;\n@@ -145,7 +145,7 @@ Intro::Intro(QWidget *parent, uint64_t blockchain_size, uint64_t chain_state_siz\n     }\n     requiredSpace += m_chain_state_size;\n     ui->sizeWarningLabel->setText(\n-        tr(\"%1 will download and store a copy of the Bitcoin block chain.\").arg(tr(PACKAGE_NAME)) + \" \" +\n+        tr(\"%1 will download and store a copy of the Bitcoin block chain.\").arg(PACKAGE_NAME) + \" \" +\n         storageRequiresMsg.arg(requiredSpace) + \" \" +\n         tr(\"The wallet will also be stored in this directory.\")\n     );\n@@ -226,7 +226,7 @@ bool Intro::pickDataDirectory(interfaces::Node& node)\n                 }\n                 break;\n             } catch (const fs::filesystem_error&) {\n-                QMessageBox::critical(nullptr, tr(PACKAGE_NAME),\n+                QMessageBox::critical(nullptr, PACKAGE_NAME,\n                     tr(\"Error: Specified data directory \\\"%1\\\" cannot be created.\").arg(dataDir));\n                 /* fall through, back to choosing screen */\n             }"
      },
      {
        "sha": "57cafaaac0b97a9ed616453b02b815aadce04ca0",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=87908e9c98f2bc6975d70d8f427a9be965effc3b",
        "patch": "@@ -87,12 +87,12 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n     /* Display elements init */\n     QDir translations(\":translations\");\n \n-    ui->bitcoinAtStartup->setToolTip(ui->bitcoinAtStartup->toolTip().arg(tr(PACKAGE_NAME)));\n-    ui->bitcoinAtStartup->setText(ui->bitcoinAtStartup->text().arg(tr(PACKAGE_NAME)));\n+    ui->bitcoinAtStartup->setToolTip(ui->bitcoinAtStartup->toolTip().arg(PACKAGE_NAME));\n+    ui->bitcoinAtStartup->setText(ui->bitcoinAtStartup->text().arg(PACKAGE_NAME));\n \n-    ui->openBitcoinConfButton->setToolTip(ui->openBitcoinConfButton->toolTip().arg(tr(PACKAGE_NAME)));\n+    ui->openBitcoinConfButton->setToolTip(ui->openBitcoinConfButton->toolTip().arg(PACKAGE_NAME));\n \n-    ui->lang->setToolTip(ui->lang->toolTip().arg(tr(PACKAGE_NAME)));\n+    ui->lang->setToolTip(ui->lang->toolTip().arg(PACKAGE_NAME));\n     ui->lang->addItem(QString(\"(\") + tr(\"default\") + QString(\")\"), QVariant(\"\"));\n     for (const QString &langStr : translations.entryList())\n     {"
      },
      {
        "sha": "60d3083d6add340d82b70bb90cd0a65e9fd59026",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=87908e9c98f2bc6975d70d8f427a9be965effc3b",
        "patch": "@@ -460,7 +460,7 @@ RPCConsole::RPCConsole(interfaces::Node& node, const PlatformStyle *_platformSty\n     QChar nonbreaking_hyphen(8209);\n     ui->dataDir->setToolTip(ui->dataDir->toolTip().arg(QString(nonbreaking_hyphen) + \"datadir\"));\n     ui->blocksDir->setToolTip(ui->blocksDir->toolTip().arg(QString(nonbreaking_hyphen) + \"blocksdir\"));\n-    ui->openDebugLogfileButton->setToolTip(ui->openDebugLogfileButton->toolTip().arg(tr(PACKAGE_NAME)));\n+    ui->openDebugLogfileButton->setToolTip(ui->openDebugLogfileButton->toolTip().arg(PACKAGE_NAME));\n \n     if (platformStyle->getImagesOnButtons()) {\n         ui->openDebugLogfileButton->setIcon(platformStyle->SingleColorIcon(\":/icons/export\"));\n@@ -807,7 +807,7 @@ void RPCConsole::clear(bool clearHistory)\n     QString clsKey = \"Ctrl-L\";\n #endif\n \n-    message(CMD_REPLY, (tr(\"Welcome to the %1 RPC console.\").arg(tr(PACKAGE_NAME)) + \"<br>\" +\n+    message(CMD_REPLY, (tr(\"Welcome to the %1 RPC console.\").arg(PACKAGE_NAME) + \"<br>\" +\n                         tr(\"Use up and down arrows to navigate history, and %1 to clear screen.\").arg(\"<b>\"+clsKey+\"</b>\") + \"<br>\" +\n                         tr(\"Type %1 for an overview of available commands.\").arg(\"<b>help</b>\") + \"<br>\" +\n                         tr(\"For more information on using this console type %1.\").arg(\"<b>help-console</b>\") +"
      },
      {
        "sha": "98eeee1a47579dcc9ef99ea3bcb9f96bbf0a2a3e",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=87908e9c98f2bc6975d70d8f427a9be965effc3b",
        "patch": "@@ -39,7 +39,7 @@ SplashScreen::SplashScreen(interfaces::Node& node, Qt::WindowFlags f, const Netw\n     devicePixelRatio = static_cast<QGuiApplication*>(QCoreApplication::instance())->devicePixelRatio();\n \n     // define text to place\n-    QString titleText       = tr(PACKAGE_NAME);\n+    QString titleText       = PACKAGE_NAME;\n     QString versionText     = QString(\"Version %1\").arg(QString::fromStdString(FormatFullVersion()));\n     QString copyrightText   = QString::fromUtf8(CopyrightHolders(strprintf(\"\\xc2\\xA9 %u-%u \", 2009, COPYRIGHT_YEAR)).c_str());\n     QString titleAddText    = networkStyle->getTitleAddText();"
      },
      {
        "sha": "343df6b56217ebcbf329f620cd2272d3153a5de1",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=87908e9c98f2bc6975d70d8f427a9be965effc3b",
        "patch": "@@ -53,7 +53,7 @@ HelpMessageDialog::HelpMessageDialog(interfaces::Node& node, QWidget *parent, bo\n \n     if (about)\n     {\n-        setWindowTitle(tr(\"About %1\").arg(tr(PACKAGE_NAME)));\n+        setWindowTitle(tr(\"About %1\").arg(PACKAGE_NAME));\n \n         std::string licenseInfo = LicenseInfo();\n         /// HTML-format the license message from the core\n@@ -155,7 +155,7 @@ ShutdownWindow::ShutdownWindow(QWidget *parent, Qt::WindowFlags f):\n {\n     QVBoxLayout *layout = new QVBoxLayout();\n     layout->addWidget(new QLabel(\n-        tr(\"%1 is shutting down...\").arg(tr(PACKAGE_NAME)) + \"<br /><br />\" +\n+        tr(\"%1 is shutting down...\").arg(PACKAGE_NAME) + \"<br /><br />\" +\n         tr(\"Do not shut down the computer until this window disappears.\")));\n     setLayout(layout);\n }"
      },
      {
        "sha": "19fdc6d8e607fa86fee66539138c174330be97bc",
        "filename": "src/timedata.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/timedata.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/timedata.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/timedata.cpp?ref=87908e9c98f2bc6975d70d8f427a9be965effc3b",
        "patch": "@@ -101,7 +101,7 @@ void AddTimeData(const CNetAddr& ip, int64_t nOffsetSample)\n                 if (!fMatch)\n                 {\n                     fDone = true;\n-                    std::string strMessage = strprintf(_(\"Please check that your computer's date and time are correct! If your clock is wrong, %s will not work properly.\"), _(PACKAGE_NAME));\n+                    std::string strMessage = strprintf(_(\"Please check that your computer's date and time are correct! If your clock is wrong, %s will not work properly.\"), PACKAGE_NAME);\n                     SetMiscWarning(strMessage);\n                     uiInterface.ThreadSafeMessageBox(strMessage, \"\", CClientUIInterface::MSG_WARNING);\n                 }"
      },
      {
        "sha": "2ece9c084fe0f087a24da96ac7fd0ba7063c9588",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87908e9c98f2bc6975d70d8f427a9be965effc3b/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=87908e9c98f2bc6975d70d8f427a9be965effc3b",
        "patch": "@@ -4137,12 +4137,12 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n                 walletFile));\n         }\n         else if (nLoadWalletRet == DBErrors::TOO_NEW) {\n-            InitError(strprintf(_(\"Error loading %s: Wallet requires newer version of %s\"), walletFile, _(PACKAGE_NAME)));\n+            InitError(strprintf(_(\"Error loading %s: Wallet requires newer version of %s\"), walletFile, PACKAGE_NAME));\n             return nullptr;\n         }\n         else if (nLoadWalletRet == DBErrors::NEED_REWRITE)\n         {\n-            InitError(strprintf(_(\"Wallet needed to be rewritten: restart %s to complete\"), _(PACKAGE_NAME)));\n+            InitError(strprintf(_(\"Wallet needed to be rewritten: restart %s to complete\"), PACKAGE_NAME));\n             return nullptr;\n         }\n         else {"
      }
    ]
  },
  {
    "sha": "9d389d09ed5db1a2dda00ba999b02d38186b6af4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDM4OWQwOWVkNWRiMWEyZGRhMDBiYTk5OWIwMmQzODE4NmI2YWY0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-06-27T19:07:17Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-09-23T23:53:28Z"
      },
      "message": "util: No translation of `Bitcoin Core` in the copyright\n\nGithub-Pull: #16291\nRebased-From: fa64b947bb3075ff8737656706b941af691908ab",
      "tree": {
        "sha": "46db7e67782823fe1c1b2e8515eaf3a73899c3d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/46db7e67782823fe1c1b2e8515eaf3a73899c3d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d389d09ed5db1a2dda00ba999b02d38186b6af4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl2JWvgACgkQLuufXMCV\nJsFJZA//WzbWVLZl4yKA3O0rr9Kqr6DAn0RIcjGtlAqwHGnZEnb4yiAHWrxiitcF\n2wMl5c6w1eDMc3gEks0xVm2a7lyf/PqYKqRcGQj1ZYP5xtv67vz+QCizSokNbgvh\nVqj8xC0hTkOT1qymkKcy30ocB4DI65x5wxVeOUoFl7QH7rftRMNb005dT5YkYAjM\nzY9B1qErjU85mDt5dXQzw3F1VP+nFn6xMFV8Q5ADBmiGTMXWC3iNNmU2T5sExrxf\np9/ztQJGEYtzXj3zl5KLv/lQMgBhFLjgUxPqW5ZI2nZiXv3IynyCR4sIW+mnyHif\nNH3DJCtnytlpZ+Th9gOsC06L1UMThdxwEsA8CfmM9UDyoZkHBOMTq4KIVB8zzht8\nlhgH4qORIGefzZ/2wPy2HQBYJx56dGvXIIU6mfcojGnyXF4VIEb8qnIGEcYsMXPN\nOkhdvN+/nyr+S4Bdaei+xVP7IRzHKZF2FX3Im6o8jy/66ANOdK8WiHslVR1EPxN2\nwskSCVubdCbxXyAr3LvH6YiG73NXx0ZMa+zSIHxErVVmIQFufE3slg31Gki7Mga3\nmYPEq5gZZjRBqXA5636NYO0W1AA7Ty8bGS+NBCaVHIetlAg/cpNU6qQ6w7kRN6l0\n0g88i9DHJfT0tXioFlphcBlpXlrXX2PMRT3mFI1DxFecZcGbvqw=\n=QwkG\n-----END PGP SIGNATURE-----",
        "payload": "tree 46db7e67782823fe1c1b2e8515eaf3a73899c3d8\nparent 87908e9c98f2bc6975d70d8f427a9be965effc3b\nauthor MarcoFalke <falke.marco@gmail.com> 1561662437 -0400\ncommitter fanquake <fanquake@gmail.com> 1569282808 +0800\n\nutil: No translation of `Bitcoin Core` in the copyright\n\nGithub-Pull: #16291\nRebased-From: fa64b947bb3075ff8737656706b941af691908ab\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d389d09ed5db1a2dda00ba999b02d38186b6af4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d389d09ed5db1a2dda00ba999b02d38186b6af4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d389d09ed5db1a2dda00ba999b02d38186b6af4/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "87908e9c98f2bc6975d70d8f427a9be965effc3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87908e9c98f2bc6975d70d8f427a9be965effc3b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/87908e9c98f2bc6975d70d8f427a9be965effc3b"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "caa65f59ef2bfdba44040362a297ca45b2a98322",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d389d09ed5db1a2dda00ba999b02d38186b6af4/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d389d09ed5db1a2dda00ba999b02d38186b6af4/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=9d389d09ed5db1a2dda00ba999b02d38186b6af4",
        "patch": "@@ -1205,10 +1205,11 @@ int GetNumCores()\n \n std::string CopyrightHolders(const std::string& strPrefix)\n {\n-    std::string strCopyrightHolders = strPrefix + strprintf(_(COPYRIGHT_HOLDERS), _(COPYRIGHT_HOLDERS_SUBSTITUTION));\n+    const auto copyright_devs = strprintf(_(COPYRIGHT_HOLDERS), COPYRIGHT_HOLDERS_SUBSTITUTION);\n+    std::string strCopyrightHolders = strPrefix + copyright_devs;\n \n-    // Check for untranslated substitution to make sure Bitcoin Core copyright is not removed by accident\n-    if (strprintf(COPYRIGHT_HOLDERS, COPYRIGHT_HOLDERS_SUBSTITUTION).find(\"Bitcoin Core\") == std::string::npos) {\n+    // Make sure Bitcoin Core copyright is not removed by accident\n+    if (copyright_devs.find(\"Bitcoin Core\") == std::string::npos) {\n         strCopyrightHolders += \"\\n\" + strPrefix + \"The Bitcoin Core developers\";\n     }\n     return strCopyrightHolders;"
      },
      {
        "sha": "21246b687e5b143bda04d9b2586b207759d42203",
        "filename": "test/lint/lint-format-strings.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d389d09ed5db1a2dda00ba999b02d38186b6af4/test/lint/lint-format-strings.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d389d09ed5db1a2dda00ba999b02d38186b6af4/test/lint/lint-format-strings.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-format-strings.py?ref=9d389d09ed5db1a2dda00ba999b02d38186b6af4",
        "patch": "@@ -16,8 +16,7 @@\n     (\"src/dbwrapper.cpp\", \"vsnprintf(p, limit - p, format, backup_ap)\"),\n     (\"src/index/base.cpp\", \"FatalError(const char* fmt, const Args&... args)\"),\n     (\"src/netbase.cpp\", \"LogConnectFailure(bool manual_connection, const char* fmt, const Args&... args)\"),\n-    (\"src/util/system.cpp\", \"strprintf(_(COPYRIGHT_HOLDERS), _(COPYRIGHT_HOLDERS_SUBSTITUTION))\"),\n-    (\"src/util/system.cpp\", \"strprintf(COPYRIGHT_HOLDERS, COPYRIGHT_HOLDERS_SUBSTITUTION)\"),\n+    (\"src/util/system.cpp\", \"strprintf(_(COPYRIGHT_HOLDERS), COPYRIGHT_HOLDERS_SUBSTITUTION)\"),\n     (\"src/wallet/wallet.h\",  \"WalletLogPrintf(std::string fmt, Params... parameters)\"),\n     (\"src/wallet/wallet.h\", \"LogPrintf((\\\"%s \\\" + fmt).c_str(), GetDisplayName(), parameters...)\"),\n     (\"src/logging.h\", \"LogPrintf(const char* fmt, const Args&... args)\"),"
      }
    ]
  },
  {
    "sha": "56815e9e12cb90eae160634e3c9c3515cf145dd1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NjgxNWU5ZTEyY2I5MGVhZTE2MDYzNGUzYzljMzUxNWNmMTQ1ZGQx",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-08-09T19:39:30Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-09-23T23:53:28Z"
      },
      "message": "Give QApplication dummy arguments\n\nQApplication takes the command line arguments and parses them itself\nfor some built in command line arguments that it has. We don't want\nany of those built in arguments, so instead give it dummy arguments.\n\nGithub-Pull: #16578\nRebased-From: a2714a5c69f0b0506689af04c3e785f71ee0915d",
      "tree": {
        "sha": "6c6408a5158fd025d2ca982a4cfdfaf668563c67",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c6408a5158fd025d2ca982a4cfdfaf668563c67"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56815e9e12cb90eae160634e3c9c3515cf145dd1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl2JWvgACgkQLuufXMCV\nJsHj7A//cX2aZG7hpsiHNyqY67gNGIq49BONAHEpsBV9WBmP0JfwwaGkyVXZadQI\nYgMs1JhyRl59iQRznScC7GFxf5V3inL68fY2d7Zvc1SXlztqDJDOFB1E32z0C7oc\nC7dKTfrnWPEWw6+ZJn266J99suZzKAxn2d+Mu+JHikuqAlbtOLj4P9NDRwjObaJO\nDt/pLhqm+mMbgLrUQkcNNt5gweFzFvO69YLG3KAKjhkdwPIcShk2znXNQFVFKWz/\ntZ6Ubc3MZxjf/8X2o/wZGCfK68xZ9KmgzOKyUqrhXzOdqfMhfQGcOzYNLyt3WPm6\nB/LYZ/Ic8sjT5QCPezsMUZcFqJppjMseoccokz0sD8SOpxkvHUC+QZbid9CSzqPm\nB+JE6YBkByJhiA9P1edsw9VMesHQfz3vynj9XisSkw+l1RPiC4ErxykOzhJJ9vkY\nC7Kd4/BvjbFA+bzPzr1kN1dDzBvL+fPqXdPIOLnMnYv75IlynyFOT+PXG2baxPG8\n3LqeMLMfxtoSosD6GnuLzFGQOZQxJ0z89EbIR6qmg62qYPkCOwMx79/n1bYK0k+P\n2I+4ElH2bf/4DywFj3g7/6oWzyWR2I6Ai8/aSjvhs31kApY91Wm/f9deWjz6CWII\njSGBQOji0gGMbo8YVez6uKPxyNrLb9soYK18K/Rzz6GzJnB8YGA=\n=gnEO\n-----END PGP SIGNATURE-----",
        "payload": "tree 6c6408a5158fd025d2ca982a4cfdfaf668563c67\nparent 9d389d09ed5db1a2dda00ba999b02d38186b6af4\nauthor Andrew Chow <achow101-github@achow101.com> 1565379570 -0400\ncommitter fanquake <fanquake@gmail.com> 1569282808 +0800\n\nGive QApplication dummy arguments\n\nQApplication takes the command line arguments and parses them itself\nfor some built in command line arguments that it has. We don't want\nany of those built in arguments, so instead give it dummy arguments.\n\nGithub-Pull: #16578\nRebased-From: a2714a5c69f0b0506689af04c3e785f71ee0915d\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56815e9e12cb90eae160634e3c9c3515cf145dd1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/56815e9e12cb90eae160634e3c9c3515cf145dd1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56815e9e12cb90eae160634e3c9c3515cf145dd1/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d389d09ed5db1a2dda00ba999b02d38186b6af4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d389d09ed5db1a2dda00ba999b02d38186b6af4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d389d09ed5db1a2dda00ba999b02d38186b6af4"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 8,
      "deletions": 5
    },
    "files": [
      {
        "sha": "8396fc4a2ebdca1a6340dc5dd8a52dbad98ea00a",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56815e9e12cb90eae160634e3c9c3515cf145dd1/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56815e9e12cb90eae160634e3c9c3515cf145dd1/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=56815e9e12cb90eae160634e3c9c3515cf145dd1",
        "patch": "@@ -173,8 +173,11 @@ void BitcoinCore::shutdown()\n     }\n }\n \n-BitcoinApplication::BitcoinApplication(interfaces::Node& node, int &argc, char **argv):\n-    QApplication(argc, argv),\n+static int qt_argc = 1;\n+static const char* qt_argv = \"bitcoin-qt\";\n+\n+BitcoinApplication::BitcoinApplication(interfaces::Node& node):\n+    QApplication(qt_argc, const_cast<char **>(&qt_argv)),\n     coreThread(nullptr),\n     m_node(node),\n     optionsModel(nullptr),\n@@ -446,7 +449,7 @@ int GuiMain(int argc, char* argv[])\n     QApplication::setAttribute(Qt::AA_DontShowIconsInMenus);\n #endif\n \n-    BitcoinApplication app(*node, argc, argv);\n+    BitcoinApplication app(*node);\n \n     // Register meta types used for QMetaObject::invokeMethod\n     qRegisterMetaType< bool* >();"
      },
      {
        "sha": "51bb3e77e9c02679c5bf26efc0102158ac1e8ad9",
        "filename": "src/qt/bitcoin.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56815e9e12cb90eae160634e3c9c3515cf145dd1/src/qt/bitcoin.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56815e9e12cb90eae160634e3c9c3515cf145dd1/src/qt/bitcoin.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.h?ref=56815e9e12cb90eae160634e3c9c3515cf145dd1",
        "patch": "@@ -57,7 +57,7 @@ class BitcoinApplication: public QApplication\n {\n     Q_OBJECT\n public:\n-    explicit BitcoinApplication(interfaces::Node& node, int &argc, char **argv);\n+    explicit BitcoinApplication(interfaces::Node& node);\n     ~BitcoinApplication();\n \n #ifdef ENABLE_WALLET"
      },
      {
        "sha": "a4c81d95642d20c61ccf3f99dbb390b5e1916b47",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56815e9e12cb90eae160634e3c9c3515cf145dd1/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56815e9e12cb90eae160634e3c9c3515cf145dd1/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=56815e9e12cb90eae160634e3c9c3515cf145dd1",
        "patch": "@@ -71,7 +71,7 @@ int main(int argc, char *argv[])\n \n     // Don't remove this, it's needed to access\n     // QApplication:: and QCoreApplication:: in the tests\n-    BitcoinApplication app(*node, argc, argv);\n+    BitcoinApplication app(*node);\n     app.setApplicationName(\"Bitcoin-Qt-test\");\n \n     SSL_library_init();"
      }
    ]
  },
  {
    "sha": "d764141b01d8a4827b366f6264b3c87a114a710b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNzY0MTQxYjAxZDhhNDgyN2IzNjZmNjI2NGIzYzg3YTExNGE3MTBi",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-05-20T04:01:17Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-09-23T23:53:28Z"
      },
      "message": "depends: add patch to common dependencies\n\nGithub-Pull: #16051\nRebased-From: 4de3c15671fea211c22b14c64ec9ac2524fcfca9",
      "tree": {
        "sha": "c28729e822adf8de63d2c17a30beedcdb0d14a7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c28729e822adf8de63d2c17a30beedcdb0d14a7a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d764141b01d8a4827b366f6264b3c87a114a710b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl2JWvgACgkQLuufXMCV\nJsHzXg/+N0nnar3WnptupCX+6asTVcXuaex61xTGcqO0ESgS0Moix3nFYjGcmzFJ\nIHZOYyh4iu4x0CQKfWQfSMzBb65AvDNr/PBl6wucRZLA+129MyxJwBkniwo/UnWS\nzK/QMal/Rzo7pt5czH7g0ZsgZNxxObfoj2H806I1ZAgy8eRtGGT2oPKPrpkwZPwO\nk2tVYX/ymDWn94jUqxBDaJ6qTcQughZMq601BlCxi+lvjhGSdhyzPBN31LHculuA\nFF9CXF0un2Hzr5Z4EEqEoMDTSMLSVHV5P9zHquImzQUBkEgwHcSiZbbJY/7Wcc8u\nGTLvA4b4JZzYN7BDrJV4jNSVTgLYabxdE+IVHtpJcGlA/ZmmH9tzhfnE7AljYVdg\n6oelz6XA9XkX3u4eGM8vdOX+Xlo49bkwJqyiGUoRxzWRUilSWpUsq4t+96SJQfoH\nDBnvMdxtMXn3d8TnXNC/+wtbeCXgwI+VcpYLMzLqkRmqzUksZbbvoZyAIXX1BSEK\nlza8aKYgJptYgcBrYYmJab5QPLmrTxIzuTGugJQTrmEzfxPYVNE49JD/k83czLFl\nGDQniHAXM3Altnlszzo7lnfkRDyIkkFC9fvNqVKjVtYDKQZTEYVraxhTzxdL8iWI\nxpUz0rt/rqtKBvk9+IAn/aSrb8yvQ/RZZJrIf8BeX/hIZzpjQKM=\n=48PP\n-----END PGP SIGNATURE-----",
        "payload": "tree c28729e822adf8de63d2c17a30beedcdb0d14a7a\nparent 56815e9e12cb90eae160634e3c9c3515cf145dd1\nauthor fanquake <fanquake@gmail.com> 1558324877 +0800\ncommitter fanquake <fanquake@gmail.com> 1569282808 +0800\n\ndepends: add patch to common dependencies\n\nGithub-Pull: #16051\nRebased-From: 4de3c15671fea211c22b14c64ec9ac2524fcfca9\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d764141b01d8a4827b366f6264b3c87a114a710b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d764141b01d8a4827b366f6264b3c87a114a710b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d764141b01d8a4827b366f6264b3c87a114a710b/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "56815e9e12cb90eae160634e3c9c3515cf145dd1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56815e9e12cb90eae160634e3c9c3515cf145dd1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/56815e9e12cb90eae160634e3c9c3515cf145dd1"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "763b27c2ce517c174d9e933b57c309188140011a",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d764141b01d8a4827b366f6264b3c87a114a710b/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d764141b01d8a4827b366f6264b3c87a114a710b/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=d764141b01d8a4827b366f6264b3c87a114a710b",
        "patch": "@@ -44,7 +44,7 @@ No other options are needed, the paths are automatically configured.\n \n Common linux dependencies:\n \n-    sudo apt-get install make automake cmake curl g++-multilib libtool binutils-gold bsdmainutils pkg-config python3\n+    sudo apt-get install make automake cmake curl g++-multilib libtool binutils-gold bsdmainutils pkg-config python3 patch\n \n For linux ARM cross compilation:\n "
      }
    ]
  },
  {
    "sha": "1d12e52db0f325f7d5239c117e3662db7a8966ad",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDEyZTUyZGIwZjMyNWY3ZDUyMzljMTE3ZTM2NjJkYjdhODk2NmFk",
    "commit": {
      "author": {
        "name": "Josu Go\u00f1i",
        "email": "josu_z@hotmail.com",
        "date": "2019-05-25T22:00:46Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-09-23T23:53:29Z"
      },
      "message": "Add vertical spacer\n\nGithub-Pull: #16090\nRebased-From: 36b0a2f2a6b49008c4f37866a9e3ab702eb34eda",
      "tree": {
        "sha": "533ed243a1f79a44f229a7b801005cfc32294937",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/533ed243a1f79a44f229a7b801005cfc32294937"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d12e52db0f325f7d5239c117e3662db7a8966ad",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl2JWvkACgkQLuufXMCV\nJsFacA//UWvLzy+eedMg2U+tT0HrtxIVDwJ+QUq0bmO1gx4Gx6YQfJnOS5wMPdtS\nhs0RXzIVWAlUj7bWhSA/uqUAXtVy9Cib+OpYBn/tliA6PcgOVPaFh1Hm7s4wYtbK\n/Vh7TRKzLXN2DfYdCB1L7K3WMjPqHwVuAqVwxbaEdFfuzX+koA/teS50c1Ll5mP1\nRkSPPZfWMEQoTNppWogGVfMSVvgFBwhYEHL1YbBUPvCBi3bQslyiRoT0aPkclmKx\nVWO/oV2dy4k5V4ozNaXYMhNX/byPNNB6BcMKCaEeke9GYIzRHjW947tnUzXeoqlO\n6/xAkwyCj4zFWxbBoxws/lfpg80ssCOWpEbKEOAiFripZ+cg40nKTK76439IgEeV\ne+5G/VvkY0e7Hn0IuAsFo9hhbW6YqEKTKGe6SRr21phndhuSwiWc/qupr2D9cL07\nzTMEKvB+CI+u13AWKxSDp+rkRzDJR3a99QB5vMec59UxTiO1lYhkDO+ISLZtAm3E\n/jyFXk4NTdS+XF4PnSpyPqRwKw/1banJLcfkAZtZ65JRdcknt5arbJMqG3nseiha\n5KComkB1jADb6x+6onJb25YGI0Crz0FzgfXGZ8UOjnVa71NR2S+cqgKAS9wK/HLh\nOTqJbysCIq0TlSogNt1wJbzUHCxb5i2j3wkyGS1Z4PlKPv+hy/4=\n=Hvki\n-----END PGP SIGNATURE-----",
        "payload": "tree 533ed243a1f79a44f229a7b801005cfc32294937\nparent d764141b01d8a4827b366f6264b3c87a114a710b\nauthor Josu Go\u00f1i <josu_z@hotmail.com> 1558821646 +0200\ncommitter fanquake <fanquake@gmail.com> 1569282809 +0800\n\nAdd vertical spacer\n\nGithub-Pull: #16090\nRebased-From: 36b0a2f2a6b49008c4f37866a9e3ab702eb34eda\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d12e52db0f325f7d5239c117e3662db7a8966ad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d12e52db0f325f7d5239c117e3662db7a8966ad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d12e52db0f325f7d5239c117e3662db7a8966ad/comments",
    "author": {
      "login": "JosuGZ",
      "id": 25986871,
      "node_id": "MDQ6VXNlcjI1OTg2ODcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25986871?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JosuGZ",
      "html_url": "https://github.com/JosuGZ",
      "followers_url": "https://api.github.com/users/JosuGZ/followers",
      "following_url": "https://api.github.com/users/JosuGZ/following{/other_user}",
      "gists_url": "https://api.github.com/users/JosuGZ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JosuGZ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JosuGZ/subscriptions",
      "organizations_url": "https://api.github.com/users/JosuGZ/orgs",
      "repos_url": "https://api.github.com/users/JosuGZ/repos",
      "events_url": "https://api.github.com/users/JosuGZ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JosuGZ/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d764141b01d8a4827b366f6264b3c87a114a710b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d764141b01d8a4827b366f6264b3c87a114a710b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d764141b01d8a4827b366f6264b3c87a114a710b"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 13,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6e52c5e477173aa8ebdea1590a95942a5e9c7713",
        "filename": "src/qt/forms/debugwindow.ui",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d12e52db0f325f7d5239c117e3662db7a8966ad/src/qt/forms/debugwindow.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d12e52db0f325f7d5239c117e3662db7a8966ad/src/qt/forms/debugwindow.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/debugwindow.ui?ref=1d12e52db0f325f7d5239c117e3662db7a8966ad",
        "patch": "@@ -1483,6 +1483,19 @@\n                  </property>\n                 </widget>\n                </item>\n+               <item row=\"18\" column=\"0\">\n+                <spacer name=\"verticalSpacer_3\">\n+                 <property name=\"orientation\">\n+                  <enum>Qt::Vertical</enum>\n+                 </property>\n+                 <property name=\"sizeHint\" stdset=\"0\">\n+                  <size>\n+                   <width>20</width>\n+                   <height>40</height>\n+                  </size>\n+                 </property>\n+                </spacer>\n+               </item>\n               </layout>\n              </widget>\n             </widget>"
      }
    ]
  },
  {
    "sha": "9fe8d283e01ed3d721591fbc7f8326ceb6d706ff",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZmU4ZDI4M2UwMWVkM2Q3MjE1OTFmYmM3ZjgzMjZjZWI2ZDcwNmZm",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-08-06T23:16:35Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-09-23T23:53:29Z"
      },
      "message": "Bugfix: QA: Run tests with UPnP disabled\n\nNeeded for builds configured with --enable-upnp-default\n\nGithub-Pull: #16646\nRebased-From: b168dd30cf71ac176e271bc610b0b1a79ceaf075",
      "tree": {
        "sha": "3eb2a0e9401e48e25facea38d0a34daeaf5fd429",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3eb2a0e9401e48e25facea38d0a34daeaf5fd429"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9fe8d283e01ed3d721591fbc7f8326ceb6d706ff",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl2JWvkACgkQLuufXMCV\nJsGAJg//XULzPbdx21PEympFIhBu0RsCwV2clBnOo0gPR2qhlZ2CyR/ZMRx7PkF/\nO7zetL72Jwt2rf1Ppldcc6DhjeVhI5mX3EEHfM8z3bAEZqi1jy2nRF6GVl3PCUWu\nTHtukRT9d/YI7LA6Int4hJ1QPKNyMcXaPJrFSs3ZMHsPU/9wySK9/bkeguOrszU5\nih/psoqMpK37GnR1Ow5ZaXtPGl5UbzTxpv8Yp0/cyp36e08/pV+3d2GEXJGK/zRE\nX/a9MUO6fcCh/SwzbA1AO8vE2hLszK/97zUpphKg3FM+KheMXhup4pc2+AsoQHdZ\nFDeN7zVHvvAPPq6S1rQO8lDLC6joLkSE5yZayh5LQ/sAERI0j3ZLC49VKevoi0sz\nX5U84eP4lk91ZVqRw0h/9r208PLICEvzlTo3mtEbUdGNdFicgztwT6CHk4ge8Rxi\njxj7cbsYZU70Nog9T4rRymVrkwKGZJ4zJWImbx2VKPbiS4MRwgNPo7YCXYyWj0yC\n4Q/b6WSxy9wUeP7iAqOv2KK263WQVCTWXti/HfPbEEg5ZLp6t6hJ6XMPzKw+lYwN\n0gwc17apf7vY218nbU4FkKzkjf9x7kGp7clXI7X91R/2HO/x1IHVk3xfjEG89TW1\nLO+DcnkedI57GM4YiB6sI8tVkMMXu4ZWajtk2JRjr1NnrpISzf0=\n=y8q3\n-----END PGP SIGNATURE-----",
        "payload": "tree 3eb2a0e9401e48e25facea38d0a34daeaf5fd429\nparent 1d12e52db0f325f7d5239c117e3662db7a8966ad\nauthor Luke Dashjr <luke-jr+git@utopios.org> 1565133395 +0000\ncommitter fanquake <fanquake@gmail.com> 1569282809 +0800\n\nBugfix: QA: Run tests with UPnP disabled\n\nNeeded for builds configured with --enable-upnp-default\n\nGithub-Pull: #16646\nRebased-From: b168dd30cf71ac176e271bc610b0b1a79ceaf075\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fe8d283e01ed3d721591fbc7f8326ceb6d706ff",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9fe8d283e01ed3d721591fbc7f8326ceb6d706ff",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fe8d283e01ed3d721591fbc7f8326ceb6d706ff/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d12e52db0f325f7d5239c117e3662db7a8966ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d12e52db0f325f7d5239c117e3662db7a8966ad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d12e52db0f325f7d5239c117e3662db7a8966ad"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c27829183c8041a415466dc18a44501e69a65e73",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fe8d283e01ed3d721591fbc7f8326ceb6d706ff/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fe8d283e01ed3d721591fbc7f8326ceb6d706ff/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=9fe8d283e01ed3d721591fbc7f8326ceb6d706ff",
        "patch": "@@ -302,6 +302,7 @@ def initialize_datadir(dirname, n):\n         f.write(\"discover=0\\n\")\n         f.write(\"listenonion=0\\n\")\n         f.write(\"printtoconsole=0\\n\")\n+        f.write(\"upnp=0\\n\")\n         os.makedirs(os.path.join(datadir, 'stderr'), exist_ok=True)\n         os.makedirs(os.path.join(datadir, 'stdout'), exist_ok=True)\n     return datadir"
      }
    ]
  },
  {
    "sha": "f792b25d1487efdfab4d78c96755a73d978abcc4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNzkyYjI1ZDE0ODdlZmRmYWI0ZDc4Yzk2NzU1YTczZDk3OGFiY2M0",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-03-23T05:43:49Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-09-23T23:53:29Z"
      },
      "message": "torcontrol: Use the default/standard network port for Tor hidden services, even if the internal port is set differently\n\nCurrently, the hidden service is published on the same port as the public listening port.\nBut if a non-standard port is configured, this can be used to guess (pretty reliably) that the public IP and the hidden service are the same node.\n\nGithub-Pull: #15651\nRebased-From: 8a2656702b4b5d53d1b8343c3215302e4305a038",
      "tree": {
        "sha": "de7213f967d2d153fca9b269a76832bf2a18683c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/de7213f967d2d153fca9b269a76832bf2a18683c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f792b25d1487efdfab4d78c96755a73d978abcc4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl2JWvkACgkQLuufXMCV\nJsGINBAAlEF21Fp1h0Wej+XFgD86EAsIanpo30JckVMu3N22NqBTe/C+x0V414Ug\ntRC+utMjVMrfsciCY/aa1Po/kPGa2trDjcek7+LZeeYqa+1QJ6hqPJETa+HZ+lXm\nq3ClwClk1ZngiIqBevRz+T6aKWohpOVVitJTgTTSsZYPsSygryj6dafXGMqDaR8/\nO5l630rE9wVw7Uqh9h/b9ekUUvZFAjzFWR0UOAFGnzhsG6Sx48Wms8z8lM4+sE7p\nj4SQjZzyZDvkm2JBCoWoIxUZhHGts/C0d1GASL3AVCauNq/K2SqRnm/MFScO4yDd\n1kBJbfB5dxwFvFZgB39JQeEdCuxjLewcPi0QdmCQ82xmywh/kLjX5kv4yIWSkQvV\n6trUhKnOkzWnL23zH7CU7vejq94N93qeAuKVBL4K1wJf7pYNM+ZaYKsF+473Idrk\nZ8roxoxJCMDI641pT3wuO3x7bPHLYeIBIsNMVPct2/DZyI6kIFIdPpt0Q6n3nfHw\nWM7n6w6pahJqoKk86g3EHyBE5obSvxc7FgtcLT7V03P9FIo/rcsrywtcU1dpIRqA\nswDkdeDmRV2vPYV4s0SXfC+br1F8sDlIN2dI5a4kXN/HQJTuZySvkoRzcj7to86W\nGJeTkU0uq61OD4PGQSjIjwAtXe5hbFvsuoh4BLDN0zu8pk8P/3o=\n=R7Bn\n-----END PGP SIGNATURE-----",
        "payload": "tree de7213f967d2d153fca9b269a76832bf2a18683c\nparent 9fe8d283e01ed3d721591fbc7f8326ceb6d706ff\nauthor Luke Dashjr <luke-jr+git@utopios.org> 1553319829 +0000\ncommitter fanquake <fanquake@gmail.com> 1569282809 +0800\n\ntorcontrol: Use the default/standard network port for Tor hidden services, even if the internal port is set differently\n\nCurrently, the hidden service is published on the same port as the public listening port.\nBut if a non-standard port is configured, this can be used to guess (pretty reliably) that the public IP and the hidden service are the same node.\n\nGithub-Pull: #15651\nRebased-From: 8a2656702b4b5d53d1b8343c3215302e4305a038\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f792b25d1487efdfab4d78c96755a73d978abcc4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f792b25d1487efdfab4d78c96755a73d978abcc4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f792b25d1487efdfab4d78c96755a73d978abcc4/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9fe8d283e01ed3d721591fbc7f8326ceb6d706ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fe8d283e01ed3d721591fbc7f8326ceb6d706ff",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9fe8d283e01ed3d721591fbc7f8326ceb6d706ff"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "ed135b3198b7d0c95105b17d30dca829cf612209",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f792b25d1487efdfab4d78c96755a73d978abcc4/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f792b25d1487efdfab4d78c96755a73d978abcc4/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=f792b25d1487efdfab4d78c96755a73d978abcc4",
        "patch": "@@ -3,6 +3,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <chainparams.h>\n #include <torcontrol.h>\n #include <util/strencodings.h>\n #include <netbase.h>\n@@ -500,7 +501,7 @@ void TorController::add_onion_cb(TorControlConnection& _conn, const TorControlRe\n             }\n             return;\n         }\n-        service = LookupNumeric(std::string(service_id+\".onion\").c_str(), GetListenPort());\n+        service = LookupNumeric(std::string(service_id+\".onion\").c_str(), Params().GetDefaultPort());\n         LogPrintf(\"tor: Got service ID %s, advertising service %s\\n\", service_id, service.ToString());\n         if (WriteBinaryFile(GetPrivateKeyFile(), private_key)) {\n             LogPrint(BCLog::TOR, \"tor: Cached service private key to %s\\n\", GetPrivateKeyFile().string());\n@@ -534,9 +535,8 @@ void TorController::auth_cb(TorControlConnection& _conn, const TorControlReply&\n         if (private_key.empty()) // No private key, generate one\n             private_key = \"NEW:RSA1024\"; // Explicitly request RSA1024 - see issue #9214\n         // Request hidden service, redirect port.\n-        // Note that the 'virtual' port doesn't have to be the same as our internal port, but this is just a convenient\n-        // choice.  TODO; refactor the shutdown sequence some day.\n-        _conn.Command(strprintf(\"ADD_ONION %s Port=%i,127.0.0.1:%i\", private_key, GetListenPort(), GetListenPort()),\n+        // Note that the 'virtual' port is always the default port to avoid decloaking nodes using other ports.\n+        _conn.Command(strprintf(\"ADD_ONION %s Port=%i,127.0.0.1:%i\", private_key, Params().GetDefaultPort(), GetListenPort()),\n             std::bind(&TorController::add_onion_cb, this, std::placeholders::_1, std::placeholders::_2));\n     } else {\n         LogPrintf(\"tor: Authentication failed\\n\");"
      }
    ]
  },
  {
    "sha": "c52dd120fd6498ee73b7652e3b0e5380124a5502",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNTJkZDEyMGZkNjQ5OGVlNzNiNzY1MmUzYjBlNTM4MDEyNGE1NTAy",
    "commit": {
      "author": {
        "name": "Luca Venturini",
        "email": "luca@yepa.com",
        "date": "2019-03-23T04:20:40Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-09-23T23:53:29Z"
      },
      "message": "Handle the result of posix_fallocate system call\n\nGithub-Pull: #15650\nRebased-From: 5d35ae3326624da3fe5dcb4047c9a7cec6665cab",
      "tree": {
        "sha": "a8b7857f3b90e397e070bb5d782680df656b7493",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a8b7857f3b90e397e070bb5d782680df656b7493"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c52dd120fd6498ee73b7652e3b0e5380124a5502",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl2JWvkACgkQLuufXMCV\nJsHstw/9FzOGXUa4DWzI9AiVCCWva3w7NzCJLV85qHP15vTlkFHkBAAIX+CKlEXd\n6ai2JujS3ec9MqjzxyfW0Jo5RqW/EcWjkqH8DhblbMTznTwHmyC4t/5kVOgKTzKO\nQCi5P7IDtneIE1qpB9yaeXhct4nQ7uZM+JvPAnO/4frqtkkdqH42NcnIGvFLxC74\n271qWCzBt6LtMhiZt+GNfP5Upmx8CMWU8HwRXmBwj6E6XCePK3rK4l6h5qL2R7I3\n/2Dhyn1220TvU4kPp7R9/CFoN36WAiPEnWq0/KLHqT5x3dz9B+elA5Ct/tjqn5bx\nAFRme+lSzEnYUa+D816BBNLaFYiXZWrB5wNLDPjikgW1uEWAcsuyFqLPaDH/D26N\n5ocUpL64PuJUfhMeyhrt0t3Ft4XlDPKKW+QuZ1r8setrfFdty/P59kGbazdHNQs6\nZGXTx+h3kCftE6Z5zAgZxO+472sVn7u6dOLscqFynpO/O/RSyoyjGRU2YRolqrYj\nNNU48Md4IXuwnqvdGio3HyhU9wLPZfVS9znPjWESgg+WvlvN/G2S+4vJyZhe6bGn\nt9mvgYoovVK4grXwmPO84hgC9VUhRTCUFpJjNYLUdccWqvVPuz+YX6BwjBZ/bOXF\nkSe3stg9I5h+N+wKEvTymkzq5wu9S0TLk1NZNZp/WHr8KoTCJMA=\n=fy3O\n-----END PGP SIGNATURE-----",
        "payload": "tree a8b7857f3b90e397e070bb5d782680df656b7493\nparent f792b25d1487efdfab4d78c96755a73d978abcc4\nauthor Luca Venturini <luca@yepa.com> 1553314840 +0000\ncommitter fanquake <fanquake@gmail.com> 1569282809 +0800\n\nHandle the result of posix_fallocate system call\n\nGithub-Pull: #15650\nRebased-From: 5d35ae3326624da3fe5dcb4047c9a7cec6665cab\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c52dd120fd6498ee73b7652e3b0e5380124a5502",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c52dd120fd6498ee73b7652e3b0e5380124a5502",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c52dd120fd6498ee73b7652e3b0e5380124a5502/comments",
    "author": {
      "login": "lucayepa",
      "id": 697159,
      "node_id": "MDQ6VXNlcjY5NzE1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/697159?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucayepa",
      "html_url": "https://github.com/lucayepa",
      "followers_url": "https://api.github.com/users/lucayepa/followers",
      "following_url": "https://api.github.com/users/lucayepa/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucayepa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucayepa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucayepa/subscriptions",
      "organizations_url": "https://api.github.com/users/lucayepa/orgs",
      "repos_url": "https://api.github.com/users/lucayepa/repos",
      "events_url": "https://api.github.com/users/lucayepa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucayepa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f792b25d1487efdfab4d78c96755a73d978abcc4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f792b25d1487efdfab4d78c96755a73d978abcc4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f792b25d1487efdfab4d78c96755a73d978abcc4"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "9765a18df103fca87d91b3c1da1c7a0713c530b4",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c52dd120fd6498ee73b7652e3b0e5380124a5502/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c52dd120fd6498ee73b7652e3b0e5380124a5502/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=c52dd120fd6498ee73b7652e3b0e5380124a5502",
        "patch": "@@ -1085,11 +1085,12 @@ void AllocateFileRange(FILE *file, unsigned int offset, unsigned int length) {\n         fcntl(fileno(file), F_PREALLOCATE, &fst);\n     }\n     ftruncate(fileno(file), fst.fst_length);\n-#elif defined(__linux__)\n+#else\n+    #if defined(__linux__)\n     // Version using posix_fallocate\n     off_t nEndPos = (off_t)offset + length;\n-    posix_fallocate(fileno(file), 0, nEndPos);\n-#else\n+    if (0 == posix_fallocate(fileno(file), 0, nEndPos)) return;\n+    #endif\n     // Fallback version\n     // TODO: just write one byte per block\n     static const char buf[65536] = {};"
      }
    ]
  },
  {
    "sha": "1175410be5959f783f0a5276451b775dc340e420",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMTc1NDEwYmU1OTU5Zjc4M2YwYTUyNzY0NTFiNzc1ZGMzNDBlNDIw",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-06-14T06:30:43Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-09-23T23:53:29Z"
      },
      "message": "addrdb: Remove temporary files created in SerializeFileDB. Fixes non-determinism in unit tests.\n\nGithub-Pull: #16212\nRebased-From: d9753383b9e1b61d19d98bcd1d66607f398c7e9f",
      "tree": {
        "sha": "3f9e9cf10eff8b09da886ee45c419186ccca82e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f9e9cf10eff8b09da886ee45c419186ccca82e9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1175410be5959f783f0a5276451b775dc340e420",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl2JWvkACgkQLuufXMCV\nJsGi+Q//Xqo92aEJA+Jl574huM9XxsfRFyhkj9x3SN1MEpUD9Egv8ZVi2anD28JF\nUQ2Qs+J8gM/EBjbKwH75O+czOyJI0luQ/NA2duhIu21yM85n1b/9md2rgEyZ0Yuv\nRHyPmCntwXyLVGteFI4PUl9IsJwfJbGCpeA3zEp/kKMRWR9IZvKVUPKvJs0Gkyjg\n8bLZFE5WOIPcC02CcEQaKiaLnQ5PrPekTPUb5+Bc92oE3WiBoOfpHQmfDbA3+uCO\nwdcZk/51sOd3Fo6Khb2lLkdSBUCa7v0Lwj7GUD2r7vBXxujQIH6Dqu8HhOA97Mgd\nL5d3qPoLWDlX6RW1z45ngEWKzHpeBiIodcXHvQMfzxveZ/vm5T3rt4cLp0439o4r\n9CZ/vqIKbsEvULXH5Ow6SFglKiHEH01Bq9fl6maCIm6ti4dvWFWOUFnLHk27Ryzz\nk0UYpGFFs8VkteVfmrHuEBfkXvJIwcTJ9wcW3z2PQm5adCLLipQyGXSGMMmRo/qP\nkQLFegczI04MWIZpvS95eaEtjSFx0wIJ2bCH3HK4z90RHgTjK80+mK2VE75q1v6x\n/p7oetJYLD9jun2lb19VBVz4vI8812+cxCZnl6OJnepJcZMIGfJQORs4XAZ6L6NV\nAHSO1Fd+llb21VkLzZESsK7ljyuQama2Rypr3qk4AqZVRWb/l+w=\n=xo6t\n-----END PGP SIGNATURE-----",
        "payload": "tree 3f9e9cf10eff8b09da886ee45c419186ccca82e9\nparent c52dd120fd6498ee73b7652e3b0e5380124a5502\nauthor practicalswift <practicalswift@users.noreply.github.com> 1560493843 +0200\ncommitter fanquake <fanquake@gmail.com> 1569282809 +0800\n\naddrdb: Remove temporary files created in SerializeFileDB. Fixes non-determinism in unit tests.\n\nGithub-Pull: #16212\nRebased-From: d9753383b9e1b61d19d98bcd1d66607f398c7e9f\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1175410be5959f783f0a5276451b775dc340e420",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1175410be5959f783f0a5276451b775dc340e420",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1175410be5959f783f0a5276451b775dc340e420/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c52dd120fd6498ee73b7652e3b0e5380124a5502",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c52dd120fd6498ee73b7652e3b0e5380124a5502",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c52dd120fd6498ee73b7652e3b0e5380124a5502"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 16,
      "deletions": 4
    },
    "files": [
      {
        "sha": "db936486b64f219302ece6b0b35c96b0966718ce",
        "filename": "src/addrdb.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 4,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1175410be5959f783f0a5276451b775dc340e420/src/addrdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1175410be5959f783f0a5276451b775dc340e420/src/addrdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrdb.cpp?ref=1175410be5959f783f0a5276451b775dc340e420",
        "patch": "@@ -44,18 +44,30 @@ bool SerializeFileDB(const std::string& prefix, const fs::path& path, const Data\n     fs::path pathTmp = GetDataDir() / tmpfn;\n     FILE *file = fsbridge::fopen(pathTmp, \"wb\");\n     CAutoFile fileout(file, SER_DISK, CLIENT_VERSION);\n-    if (fileout.IsNull())\n+    if (fileout.IsNull()) {\n+        fileout.fclose();\n+        remove(pathTmp);\n         return error(\"%s: Failed to open file %s\", __func__, pathTmp.string());\n+    }\n \n     // Serialize\n-    if (!SerializeDB(fileout, data)) return false;\n-    if (!FileCommit(fileout.Get()))\n+    if (!SerializeDB(fileout, data)) {\n+        fileout.fclose();\n+        remove(pathTmp);\n+        return false;\n+    }\n+    if (!FileCommit(fileout.Get())) {\n+        fileout.fclose();\n+        remove(pathTmp);\n         return error(\"%s: Failed to flush file %s\", __func__, pathTmp.string());\n+    }\n     fileout.fclose();\n \n     // replace existing file, if any, with new file\n-    if (!RenameOver(pathTmp, path))\n+    if (!RenameOver(pathTmp, path)) {\n+        remove(pathTmp);\n         return error(\"%s: Rename-into-place failed\", __func__);\n+    }\n \n     return true;\n }"
      }
    ]
  },
  {
    "sha": "eb07d22b2d3ec70203412a7746b0ec73217cc974",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYjA3ZDIyYjJkM2VjNzAyMDM0MTJhNzc0NmIwZWM3MzIxN2NjOTc0",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-07-31T22:02:24Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-09-23T23:53:29Z"
      },
      "message": "Shuffle inputs and outputs after joining psbts\n\nGithub-Pull: #16512\nRebased-From: 6f405a1d3b38395e35571b68aae55cae50e0762a",
      "tree": {
        "sha": "ba26e3261fbc8689038ab1f8d214eaed529e3943",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba26e3261fbc8689038ab1f8d214eaed529e3943"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eb07d22b2d3ec70203412a7746b0ec73217cc974",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl2JWvkACgkQLuufXMCV\nJsExMxAAtFzx7wmKAZhu90Edi/TOcpksyQMfYeQb2cZOnuHFwkm/VXYVTOEUTZv/\n2pFM2+2RSv6zky1ienzRDteOd6iKyKDkV1NuKaCo2Wz5j+6DIOieopPlTRh2AWdc\nNP/JyucFzNml8Tpo0ZWlRFhSJ0pQEs8R+qVbnsPb19r0DhF5480wRClzi52eCCdD\n2804NCjz0zfnB/ry8uNIUgmfgE7mYBjBbZ/dMhJL99J7bMQen1tipTph9azGDmSp\nV4LZFl0PS7slytrmtrrmNwA+Aq/qBJ/9PtrZxnRiXym4CkgkIlVOJ8W1UDxmRnP3\nyy3iuDk9/2khzKced7kKfaoAUZOI6TJYCKoAHi1SaMnG3I009y6uxCJLJYHKL4tc\naSonNQAZwVq+abxYMeYD0q6J/khHUe+iPD0psNLBYxBdobPjV6WMpPXjJltJjQwZ\nWU4VVd3+2EaE747zCtpS9y3WlWxWj6pZH5Hx83sGDZvP/7P+hOVjiD6kje+9d2ka\nnrdA4zIWBQTl75E3fNOb+7xHYxGNeLJy0h6h6sTtqmp8rMNxF9yluIN51PXn3tim\nIMk5FbF6LdVj88e30sUw0i4UArQlwq8nBGC/bvRGR+Pz3g6gV7CfqptZXgBro+3T\n4QpAsMViy9ycdeYXN/JM2syUhm1wEWb8SBVqrkWcWptWBrHXOrw=\n=7t/H\n-----END PGP SIGNATURE-----",
        "payload": "tree ba26e3261fbc8689038ab1f8d214eaed529e3943\nparent 1175410be5959f783f0a5276451b775dc340e420\nauthor Andrew Chow <achow101-github@achow101.com> 1564610544 -0400\ncommitter fanquake <fanquake@gmail.com> 1569282809 +0800\n\nShuffle inputs and outputs after joining psbts\n\nGithub-Pull: #16512\nRebased-From: 6f405a1d3b38395e35571b68aae55cae50e0762a\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb07d22b2d3ec70203412a7746b0ec73217cc974",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eb07d22b2d3ec70203412a7746b0ec73217cc974",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb07d22b2d3ec70203412a7746b0ec73217cc974/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1175410be5959f783f0a5276451b775dc340e420",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1175410be5959f783f0a5276451b775dc340e420",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1175410be5959f783f0a5276451b775dc340e420"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 28,
      "deletions": 1
    },
    "files": [
      {
        "sha": "9aa9cf36f92b842a0322c90add450f3cee615b9d",
        "filename": "doc/release-notes-16512.md",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb07d22b2d3ec70203412a7746b0ec73217cc974/doc/release-notes-16512.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb07d22b2d3ec70203412a7746b0ec73217cc974/doc/release-notes-16512.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-16512.md?ref=eb07d22b2d3ec70203412a7746b0ec73217cc974",
        "patch": "@@ -0,0 +1,4 @@\n+RPC changes\n+-----------\n+The RPC `joinpsbts` will shuffle the order of the inputs and outputs of the resulting joined psbt.\n+Previously inputs and outputs were added in the order that the PSBTs were provided which makes correlating inputs to outputs extremely easy."
      },
      {
        "sha": "c4b7bec052ba89c36aac9c34393760f4167b910a",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 1,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb07d22b2d3ec70203412a7746b0ec73217cc974/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb07d22b2d3ec70203412a7746b0ec73217cc974/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=eb07d22b2d3ec70203412a7746b0ec73217cc974",
        "patch": "@@ -19,6 +19,7 @@\n #include <policy/rbf.h>\n #include <primitives/transaction.h>\n #include <psbt.h>\n+#include <random.h>\n #include <rpc/rawtransaction.h>\n #include <rpc/server.h>\n #include <rpc/util.h>\n@@ -1861,8 +1862,30 @@ UniValue joinpsbts(const JSONRPCRequest& request)\n         merged_psbt.unknown.insert(psbt.unknown.begin(), psbt.unknown.end());\n     }\n \n+    // Generate list of shuffled indices for shuffling inputs and outputs of the merged PSBT\n+    std::vector<int> input_indices(merged_psbt.inputs.size());\n+    std::iota(input_indices.begin(), input_indices.end(), 0);\n+    std::vector<int> output_indices(merged_psbt.outputs.size());\n+    std::iota(output_indices.begin(), output_indices.end(), 0);\n+\n+    // Shuffle input and output indicies lists\n+    Shuffle(input_indices.begin(), input_indices.end(), FastRandomContext());\n+    Shuffle(output_indices.begin(), output_indices.end(), FastRandomContext());\n+\n+    PartiallySignedTransaction shuffled_psbt;\n+    shuffled_psbt.tx = CMutableTransaction();\n+    shuffled_psbt.tx->nVersion = merged_psbt.tx->nVersion;\n+    shuffled_psbt.tx->nLockTime = merged_psbt.tx->nLockTime;\n+    for (int i : input_indices) {\n+        shuffled_psbt.AddInput(merged_psbt.tx->vin[i], merged_psbt.inputs[i]);\n+    }\n+    for (int i : output_indices) {\n+        shuffled_psbt.AddOutput(merged_psbt.tx->vout[i], merged_psbt.outputs[i]);\n+    }\n+    shuffled_psbt.unknown.insert(merged_psbt.unknown.begin(), merged_psbt.unknown.end());\n+\n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n-    ssTx << merged_psbt;\n+    ssTx << shuffled_psbt;\n     return EncodeBase64((unsigned char*)ssTx.data(), ssTx.size());\n }\n "
      }
    ]
  },
  {
    "sha": "b12defc3bc7ba68a86c053138d29d942b81af805",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTJkZWZjM2JjN2JhNjhhODZjMDUzMTM4ZDI5ZDk0MmI4MWFmODA1",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-08-14T18:29:55Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-09-23T23:53:29Z"
      },
      "message": "Test that joinpsbts randomly shuffles the inputs\n\nGithub-Pull: #16512\nRebased-From: c0b5d9710322a614a50ab5da081558cf6a38ad2a",
      "tree": {
        "sha": "9a95e1bb21ee26df0c760a60e5e558b740e860ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9a95e1bb21ee26df0c760a60e5e558b740e860ed"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b12defc3bc7ba68a86c053138d29d942b81af805",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl2JWvkACgkQLuufXMCV\nJsHBohAAq/4dRmQQ6dItFiYPllxIciupHSRsJChU4+tlVb4O8Nwes7ldj4ZdwWV5\nljF9VGE1XzQLc3FkdI2/0MsFC3miq256TABSMVP6jJOHqneSQfIjAYAQL2n9a4gu\n3nJM2Wbf2nzOj9mNZNGrzdkF6bGZf4LT6MFXhmnTm8KjBx6GYYUORfQ9k1E890Vt\ncmuQJX9mD15p2HCsM8meeFae1iwiSJCR2ZoG+6p3ai5gaDuyiBl/lVqe+h6/1SWH\nxRyxBn5OsdED3JAZe23+5NOMebsdB59bbxjEnAJ8KgIQabvFcOdzuNnH1zTfOT17\nTUBiD6HE6XPtEQoYpWN4XeimJnk+UTit/83W4TO3g+kYPQpJxXkwxTS1eo7CIgfs\nwL3hwn4m7CTWIIfJ9R/ManbWUE6sUt3nkoYHM91wQsp7T2sj6Y75AqGSDTjaZ/MN\nqaCxX7woOLAwpvjp5IqF17z2GiOQ2dxyxFU0CHfkvNXxqj1EjluG3+X6fHy3AKW8\nGD/KaIL/P3DSBX7d2TQCExKVy/ptqPcFqJ7geTxWSYPcZDwrtTH6hr2I5rPl0NEQ\nnT5pKu/lvAPGBRqkUChkf+tJLJGOp6QE+yRkj1lLu6YBHWddh6V173rGNTutxrUp\n9H4akXH72eI8PkZzWgDk9BYOhv4lP2+AwLS8AXg+OqQXOuqxX1s=\n=9UB1\n-----END PGP SIGNATURE-----",
        "payload": "tree 9a95e1bb21ee26df0c760a60e5e558b740e860ed\nparent eb07d22b2d3ec70203412a7746b0ec73217cc974\nauthor Andrew Chow <achow101-github@achow101.com> 1565807395 -0400\ncommitter fanquake <fanquake@gmail.com> 1569282809 +0800\n\nTest that joinpsbts randomly shuffles the inputs\n\nGithub-Pull: #16512\nRebased-From: c0b5d9710322a614a50ab5da081558cf6a38ad2a\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b12defc3bc7ba68a86c053138d29d942b81af805",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b12defc3bc7ba68a86c053138d29d942b81af805",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b12defc3bc7ba68a86c053138d29d942b81af805/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eb07d22b2d3ec70203412a7746b0ec73217cc974",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb07d22b2d3ec70203412a7746b0ec73217cc974",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eb07d22b2d3ec70203412a7746b0ec73217cc974"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ed91c40405aef23f7f138b4c60f2e6b682adc866",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b12defc3bc7ba68a86c053138d29d942b81af805/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b12defc3bc7ba68a86c053138d29d942b81af805/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=b12defc3bc7ba68a86c053138d29d942b81af805",
        "patch": "@@ -361,6 +361,16 @@ def run_test(self):\n         joined_decoded = self.nodes[0].decodepsbt(joined)\n         assert len(joined_decoded['inputs']) == 4 and len(joined_decoded['outputs']) == 2 and \"final_scriptwitness\" not in joined_decoded['inputs'][3] and \"final_scriptSig\" not in joined_decoded['inputs'][3]\n \n+        # Check that joining shuffles the inputs and outputs\n+        # 10 attempts should be enough to get a shuffled join\n+        shuffled = False\n+        for i in range(0, 10):\n+            shuffled_joined = self.nodes[0].joinpsbts([psbt, psbt2])\n+            shuffled |= joined != shuffled_joined\n+            if shuffled:\n+                break\n+        assert shuffled\n+\n         # Newly created PSBT needs UTXOs and updating\n         addr = self.nodes[1].getnewaddress(\"\", \"p2sh-segwit\")\n         txid = self.nodes[0].sendtoaddress(addr, 7)"
      }
    ]
  },
  {
    "sha": "3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYjhhZjVmMzgzOGJiMTI0ZjVmNTlkYmFhNGM1NTNhNmFkOGU3Yzk4",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-09-13T23:32:16Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-10-01T03:29:30Z"
      },
      "message": "build: update boost macros to latest upstream\n\nFixes: #16803\n\nI opened an [upstream PR](https://github.com/autoconf-archive/autoconf-archive/pull/197) to improve the Boost error reporting, so pull the latest macros.\n\nGithub-Pull: #16870\nRebased-From: bb99c4e684bbd3053ecf7a789049b11b29260189",
      "tree": {
        "sha": "b43f51c000411ba89abb8d1327c46acd8b83910d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b43f51c000411ba89abb8d1327c46acd8b83910d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl2SyCAACgkQLuufXMCV\nJsE2kg/+O2dCO6fAwUBF8MbTaob1CB9bAU9vkDwVdZZkasRddlghZBeSoyZpEu9j\n5tJQWj0/PwIxj8yNjrojT++uLJfl5xlQn2jIP/VK+Kq7OHJmCMYeBnfCSndACOSq\n2wqnqnHJwI1zg57ReowSPGn9BPzgRKBL5Gfm1c6LR7fekxeQ54KUhzgRiisoBBGP\nzyQjoSu4tmHMew+mfnSors7YQmSFUAtL50bVFUdCAwfg2PzxAGJNv3aeSAqF+ef+\nVw7GCTR8kcu7Ob2JWOyRjzNI89X2HR7/76+p/YszduOg17IqdKJ5PQcGC6S8DswC\nLCkQQXipXKC2D/O/O9r/germtraMbid9iAHGB4M0yugURPHb/xVKg0gFdWlOkSu3\naqpk5++Hk8XkO9w9RQrk889gZ31/+V52/I59CnS3c2OgrMwioPsCTlfo11qGh1s+\nXlBvvY0Oxaxyv2yWEalopM18H8E6DhYbeSD9QmQkxaMKssI92Qrz2Ixuh1dlQzf6\nR6Hpird02AY5h32fK+1k/94ush9IcFlf/ZfjN6sTdnvUwt4TLLoMvo+vNwnGgLkR\nWaPW4x1xY6q+ZE0xlR54mjHxNMHUJqAx0vLr6oX2Y7rpvSYlSFUOKMtv667n+8iP\nO7UEXvjOgU3UhaHEO/3zsKEufy7ns/+6jXydoHBpKEJ4LJbFhhg=\n=aCUA\n-----END PGP SIGNATURE-----",
        "payload": "tree b43f51c000411ba89abb8d1327c46acd8b83910d\nparent b12defc3bc7ba68a86c053138d29d942b81af805\nauthor fanquake <fanquake@gmail.com> 1568417536 +0800\ncommitter fanquake <fanquake@gmail.com> 1569900570 +0800\n\nbuild: update boost macros to latest upstream\n\nFixes: #16803\n\nI opened an [upstream PR](https://github.com/autoconf-archive/autoconf-archive/pull/197) to improve the Boost error reporting, so pull the latest macros.\n\nGithub-Pull: #16870\nRebased-From: bb99c4e684bbd3053ecf7a789049b11b29260189\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b12defc3bc7ba68a86c053138d29d942b81af805",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b12defc3bc7ba68a86c053138d29d942b81af805",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b12defc3bc7ba68a86c053138d29d942b81af805"
      }
    ],
    "stats": {
      "total": 428,
      "additions": 225,
      "deletions": 203
    },
    "files": [
      {
        "sha": "16fa69b41f5bba2b2f4bcb6f48f621ee85a0f680",
        "filename": "build-aux/m4/ax_boost_base.m4",
        "status": "modified",
        "additions": 132,
        "deletions": 121,
        "changes": 253,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98/build-aux/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98/build-aux/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_base.m4?ref=3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98",
        "patch": "@@ -1,5 +1,5 @@\n # ===========================================================================\n-#       http://www.gnu.org/software/autoconf-archive/ax_boost_base.html\n+#      https://www.gnu.org/software/autoconf-archive/ax_boost_base.html\n # ===========================================================================\n #\n # SYNOPSIS\n@@ -33,7 +33,15 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 27\n+#serial 47\n+\n+# example boost program (need to pass version)\n+m4_define([_AX_BOOST_BASE_PROGRAM],\n+          [AC_LANG_PROGRAM([[\n+#include <boost/version.hpp>\n+]],[[\n+(void) ((void)sizeof(char[1 - 2*!!((BOOST_VERSION) < ($1))]));\n+]])])\n \n AC_DEFUN([AX_BOOST_BASE],\n [\n@@ -44,110 +52,122 @@ AC_ARG_WITH([boost],\n      or disable it (ARG=no)\n      @<:@ARG=yes@:>@ ])],\n     [\n-    if test \"$withval\" = \"no\"; then\n-        want_boost=\"no\"\n-    elif test \"$withval\" = \"yes\"; then\n-        want_boost=\"yes\"\n-        ac_boost_path=\"\"\n-    else\n-        want_boost=\"yes\"\n-        ac_boost_path=\"$withval\"\n-    fi\n+     AS_CASE([$withval],\n+       [no],[want_boost=\"no\";_AX_BOOST_BASE_boost_path=\"\"],\n+       [yes],[want_boost=\"yes\";_AX_BOOST_BASE_boost_path=\"\"],\n+       [want_boost=\"yes\";_AX_BOOST_BASE_boost_path=\"$withval\"])\n     ],\n     [want_boost=\"yes\"])\n \n \n AC_ARG_WITH([boost-libdir],\n-        AS_HELP_STRING([--with-boost-libdir=LIB_DIR],\n-        [Force given directory for boost libraries. Note that this will override library path detection, so use this parameter only if default library detection fails and you know exactly where your boost libraries are located.]),\n-        [\n-        if test -d \"$withval\"\n-        then\n-                ac_boost_lib_path=\"$withval\"\n-        else\n-                AC_MSG_ERROR(--with-boost-libdir expected directory name)\n-        fi\n-        ],\n-        [ac_boost_lib_path=\"\"]\n-)\n+  [AS_HELP_STRING([--with-boost-libdir=LIB_DIR],\n+    [Force given directory for boost libraries.\n+     Note that this will override library path detection,\n+     so use this parameter only if default library detection fails\n+     and you know exactly where your boost libraries are located.])],\n+  [\n+   AS_IF([test -d \"$withval\"],\n+         [_AX_BOOST_BASE_boost_lib_path=\"$withval\"],\n+    [AC_MSG_ERROR([--with-boost-libdir expected directory name])])\n+  ],\n+  [_AX_BOOST_BASE_boost_lib_path=\"\"])\n \n-if test \"x$want_boost\" = \"xyes\"; then\n-    boost_lib_version_req=ifelse([$1], ,1.20.0,$1)\n-    boost_lib_version_req_shorten=`expr $boost_lib_version_req : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n-    boost_lib_version_req_major=`expr $boost_lib_version_req : '\\([[0-9]]*\\)'`\n-    boost_lib_version_req_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.\\([[0-9]]*\\)'`\n-    boost_lib_version_req_sub_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.[[0-9]]*\\.\\([[0-9]]*\\)'`\n-    if test \"x$boost_lib_version_req_sub_minor\" = \"x\" ; then\n-        boost_lib_version_req_sub_minor=\"0\"\n-        fi\n-    WANT_BOOST_VERSION=`expr $boost_lib_version_req_major \\* 100000 \\+  $boost_lib_version_req_minor \\* 100 \\+ $boost_lib_version_req_sub_minor`\n-    AC_MSG_CHECKING(for boostlib >= $boost_lib_version_req)\n+BOOST_LDFLAGS=\"\"\n+BOOST_CPPFLAGS=\"\"\n+AS_IF([test \"x$want_boost\" = \"xyes\"],\n+      [_AX_BOOST_BASE_RUNDETECT([$1],[$2],[$3])])\n+AC_SUBST(BOOST_CPPFLAGS)\n+AC_SUBST(BOOST_LDFLAGS)\n+])\n+\n+\n+# convert a version string in $2 to numeric and affect to polymorphic var $1\n+AC_DEFUN([_AX_BOOST_BASE_TONUMERICVERSION],[\n+  AS_IF([test \"x$2\" = \"x\"],[_AX_BOOST_BASE_TONUMERICVERSION_req=\"1.20.0\"],[_AX_BOOST_BASE_TONUMERICVERSION_req=\"$2\"])\n+  _AX_BOOST_BASE_TONUMERICVERSION_req_shorten=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n+  _AX_BOOST_BASE_TONUMERICVERSION_req_major=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '\\([[0-9]]*\\)'`\n+  AS_IF([test \"x$_AX_BOOST_BASE_TONUMERICVERSION_req_major\" = \"x\"],\n+        [AC_MSG_ERROR([You should at least specify libboost major version])])\n+  _AX_BOOST_BASE_TONUMERICVERSION_req_minor=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '[[0-9]]*\\.\\([[0-9]]*\\)'`\n+  AS_IF([test \"x$_AX_BOOST_BASE_TONUMERICVERSION_req_minor\" = \"x\"],\n+        [_AX_BOOST_BASE_TONUMERICVERSION_req_minor=\"0\"])\n+  _AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '[[0-9]]*\\.[[0-9]]*\\.\\([[0-9]]*\\)'`\n+  AS_IF([test \"X$_AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor\" = \"X\"],\n+        [_AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor=\"0\"])\n+  _AX_BOOST_BASE_TONUMERICVERSION_RET=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req_major \\* 100000 \\+  $_AX_BOOST_BASE_TONUMERICVERSION_req_minor \\* 100 \\+ $_AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor`\n+  AS_VAR_SET($1,$_AX_BOOST_BASE_TONUMERICVERSION_RET)\n+])\n+\n+dnl Run the detection of boost should be run only if $want_boost\n+AC_DEFUN([_AX_BOOST_BASE_RUNDETECT],[\n+    _AX_BOOST_BASE_TONUMERICVERSION(WANT_BOOST_VERSION,[$1])\n     succeeded=no\n \n+\n+    AC_REQUIRE([AC_CANONICAL_HOST])\n     dnl On 64-bit systems check for system libraries in both lib64 and lib.\n     dnl The former is specified by FHS, but e.g. Debian does not adhere to\n     dnl this (as it rises problems for generic multi-arch support).\n     dnl The last entry in the list is chosen by default when no libraries\n     dnl are found, e.g. when only header-only libraries are installed!\n-    libsubdirs=\"lib\"\n-    ax_arch=`uname -m`\n-    case $ax_arch in\n-      x86_64)\n-        libsubdirs=\"lib64 libx32 lib lib64\"\n-        ;;\n-      ppc64|s390x|sparc64|aarch64|ppc64le)\n-        libsubdirs=\"lib64 lib lib64\"\n-        ;;\n-    esac\n+    AS_CASE([${host_cpu}],\n+      [x86_64],[libsubdirs=\"lib64 libx32 lib lib64\"],\n+      [mips*64*],[libsubdirs=\"lib64 lib32 lib lib64\"],\n+      [ppc64|powerpc64|s390x|sparc64|aarch64|ppc64le|powerpc64le|riscv64],[libsubdirs=\"lib64 lib lib64\"],\n+      [libsubdirs=\"lib\"]\n+    )\n \n     dnl allow for real multi-arch paths e.g. /usr/lib/x86_64-linux-gnu. Give\n     dnl them priority over the other paths since, if libs are found there, they\n     dnl are almost assuredly the ones desired.\n-    AC_REQUIRE([AC_CANONICAL_HOST])\n-    libsubdirs=\"lib/${host_cpu}-${host_os} $libsubdirs\"\n-\n-    case ${host_cpu} in\n-      i?86)\n-        libsubdirs=\"lib/i386-${host_os} $libsubdirs\"\n-        ;;\n-    esac\n-\n-    dnl some arches may advertise a cpu type that doesn't line up with their\n-    dnl prefix's cpu type. For example, uname may report armv7l while libs are\n-    dnl installed to /usr/lib/arm-linux-gnueabihf. Try getting the compiler's\n-    dnl value for an extra chance of finding the correct path.\n-    libsubdirs=\"lib/`$CXX -dumpmachine 2>/dev/null` $libsubdirs\"\n+    AS_CASE([${host_cpu}],\n+      [i?86],[multiarch_libsubdir=\"lib/i386-${host_os}\"],\n+      [multiarch_libsubdir=\"lib/${host_cpu}-${host_os}\"]\n+    )\n \n     dnl first we check the system location for boost libraries\n     dnl this location ist chosen if boost libraries are installed with the --layout=system option\n     dnl or if you install boost with RPM\n-    if test \"$ac_boost_path\" != \"\"; then\n-        BOOST_CPPFLAGS=\"-I$ac_boost_path/include\"\n-        for ac_boost_path_tmp in $libsubdirs; do\n-                if test -d \"$ac_boost_path\"/\"$ac_boost_path_tmp\" ; then\n-                        BOOST_LDFLAGS=\"-L$ac_boost_path/$ac_boost_path_tmp\"\n-                        break\n-                fi\n-        done\n-    elif test \"$cross_compiling\" != yes; then\n-        for ac_boost_path_tmp in /usr /usr/local /opt /opt/local ; do\n-            if test -d \"$ac_boost_path_tmp/include/boost\" && test -r \"$ac_boost_path_tmp/include/boost\"; then\n-                for libsubdir in $libsubdirs ; do\n-                    if ls \"$ac_boost_path_tmp/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+    AS_IF([test \"x$_AX_BOOST_BASE_boost_path\" != \"x\"],[\n+        AC_MSG_CHECKING([for boostlib >= $1 ($WANT_BOOST_VERSION) includes in \"$_AX_BOOST_BASE_boost_path/include\"])\n+         AS_IF([test -d \"$_AX_BOOST_BASE_boost_path/include\" && test -r \"$_AX_BOOST_BASE_boost_path/include\"],[\n+           AC_MSG_RESULT([yes])\n+           BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path/include\"\n+           for _AX_BOOST_BASE_boost_path_tmp in $multiarch_libsubdir $libsubdirs; do\n+                AC_MSG_CHECKING([for boostlib >= $1 ($WANT_BOOST_VERSION) lib path in \"$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\"])\n+                AS_IF([test -d \"$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\" && test -r \"$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\" ],[\n+                        AC_MSG_RESULT([yes])\n+                        BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\";\n+                        break;\n+                ],\n+      [AC_MSG_RESULT([no])])\n+           done],[\n+      AC_MSG_RESULT([no])])\n+    ],[\n+        if test X\"$cross_compiling\" = Xyes; then\n+            search_libsubdirs=$multiarch_libsubdir\n+        else\n+            search_libsubdirs=\"$multiarch_libsubdir $libsubdirs\"\n+        fi\n+        for _AX_BOOST_BASE_boost_path_tmp in /usr /usr/local /opt /opt/local ; do\n+            if test -d \"$_AX_BOOST_BASE_boost_path_tmp/include/boost\" && test -r \"$_AX_BOOST_BASE_boost_path_tmp/include/boost\" ; then\n+                for libsubdir in $search_libsubdirs ; do\n+                    if ls \"$_AX_BOOST_BASE_boost_path_tmp/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n                 done\n-                BOOST_LDFLAGS=\"-L$ac_boost_path_tmp/$libsubdir\"\n-                BOOST_CPPFLAGS=\"-I$ac_boost_path_tmp/include\"\n+                BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_path_tmp/$libsubdir\"\n+                BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path_tmp/include\"\n                 break;\n             fi\n         done\n-    fi\n+    ])\n \n     dnl overwrite ld flags if we have required special directory with\n     dnl --with-boost-libdir parameter\n-    if test \"$ac_boost_lib_path\" != \"\"; then\n-       BOOST_LDFLAGS=\"-L$ac_boost_lib_path\"\n-    fi\n+    AS_IF([test \"x$_AX_BOOST_BASE_boost_lib_path\" != \"x\"],\n+          [BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_lib_path\"])\n \n+    AC_MSG_CHECKING([for boostlib >= $1 ($WANT_BOOST_VERSION)])\n     CPPFLAGS_SAVED=\"$CPPFLAGS\"\n     CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n     export CPPFLAGS\n@@ -158,15 +178,7 @@ if test \"x$want_boost\" = \"xyes\"; then\n \n     AC_REQUIRE([AC_PROG_CXX])\n     AC_LANG_PUSH(C++)\n-        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    @%:@include <boost/version.hpp>\n-    ]], [[\n-    #if BOOST_VERSION >= $WANT_BOOST_VERSION\n-    // Everything is okay\n-    #else\n-    #  error Boost version is too old\n-    #endif\n-    ]])],[\n+        AC_COMPILE_IFELSE([_AX_BOOST_BASE_PROGRAM($WANT_BOOST_VERSION)],[\n         AC_MSG_RESULT(yes)\n     succeeded=yes\n     found_system=yes\n@@ -178,56 +190,66 @@ if test \"x$want_boost\" = \"xyes\"; then\n \n     dnl if we found no boost with system layout we search for boost libraries\n     dnl built and installed without the --layout=system option or for a staged(not installed) version\n-    if test \"x$succeeded\" != \"xyes\"; then\n+    if test \"x$succeeded\" != \"xyes\" ; then\n         CPPFLAGS=\"$CPPFLAGS_SAVED\"\n         LDFLAGS=\"$LDFLAGS_SAVED\"\n         BOOST_CPPFLAGS=\n-        BOOST_LDFLAGS=\n+        if test -z \"$_AX_BOOST_BASE_boost_lib_path\" ; then\n+            BOOST_LDFLAGS=\n+        fi\n         _version=0\n-        if test \"$ac_boost_path\" != \"\"; then\n-            if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n-                for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n-                    _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n+        if test -n \"$_AX_BOOST_BASE_boost_path\" ; then\n+            if test -d \"$_AX_BOOST_BASE_boost_path\" && test -r \"$_AX_BOOST_BASE_boost_path\"; then\n+                for i in `ls -d $_AX_BOOST_BASE_boost_path/include/boost-* 2>/dev/null`; do\n+                    _version_tmp=`echo $i | sed \"s#$_AX_BOOST_BASE_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n                     V_CHECK=`expr $_version_tmp \\> $_version`\n-                    if test \"$V_CHECK\" = \"1\" ; then\n+                    if test \"x$V_CHECK\" = \"x1\" ; then\n                         _version=$_version_tmp\n                     fi\n                     VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n-                    BOOST_CPPFLAGS=\"-I$ac_boost_path/include/boost-$VERSION_UNDERSCORE\"\n+                    BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path/include/boost-$VERSION_UNDERSCORE\"\n                 done\n                 dnl if nothing found search for layout used in Windows distributions\n                 if test -z \"$BOOST_CPPFLAGS\"; then\n-                    if test -d \"$ac_boost_path/boost\" && test -r \"$ac_boost_path/boost\"; then\n-                        BOOST_CPPFLAGS=\"-I$ac_boost_path\"\n+                    if test -d \"$_AX_BOOST_BASE_boost_path/boost\" && test -r \"$_AX_BOOST_BASE_boost_path/boost\"; then\n+                        BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path\"\n                     fi\n                 fi\n+                dnl if we found something and BOOST_LDFLAGS was unset before\n+                dnl (because \"$_AX_BOOST_BASE_boost_lib_path\" = \"\"), set it here.\n+                if test -n \"$BOOST_CPPFLAGS\" && test -z \"$BOOST_LDFLAGS\"; then\n+                    for libsubdir in $libsubdirs ; do\n+                        if ls \"$_AX_BOOST_BASE_boost_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                    done\n+                    BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_path/$libsubdir\"\n+                fi\n             fi\n         else\n-            if test \"$cross_compiling\" != yes; then\n-                for ac_boost_path in /usr /usr/local /opt /opt/local ; do\n-                    if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n-                        for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n-                            _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n+            if test \"x$cross_compiling\" != \"xyes\" ; then\n+                for _AX_BOOST_BASE_boost_path in /usr /usr/local /opt /opt/local ; do\n+                    if test -d \"$_AX_BOOST_BASE_boost_path\" && test -r \"$_AX_BOOST_BASE_boost_path\" ; then\n+                        for i in `ls -d $_AX_BOOST_BASE_boost_path/include/boost-* 2>/dev/null`; do\n+                            _version_tmp=`echo $i | sed \"s#$_AX_BOOST_BASE_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n                             V_CHECK=`expr $_version_tmp \\> $_version`\n-                            if test \"$V_CHECK\" = \"1\" ; then\n+                            if test \"x$V_CHECK\" = \"x1\" ; then\n                                 _version=$_version_tmp\n-                                best_path=$ac_boost_path\n+                                best_path=$_AX_BOOST_BASE_boost_path\n                             fi\n                         done\n                     fi\n                 done\n \n                 VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n                 BOOST_CPPFLAGS=\"-I$best_path/include/boost-$VERSION_UNDERSCORE\"\n-                if test \"$ac_boost_lib_path\" = \"\"; then\n+                if test -z \"$_AX_BOOST_BASE_boost_lib_path\" ; then\n                     for libsubdir in $libsubdirs ; do\n                         if ls \"$best_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n                     done\n                     BOOST_LDFLAGS=\"-L$best_path/$libsubdir\"\n                 fi\n             fi\n \n-            if test \"x$BOOST_ROOT\" != \"x\"; then\n+            if test -n \"$BOOST_ROOT\" ; then\n                 for libsubdir in $libsubdirs ; do\n                     if ls \"$BOOST_ROOT/stage/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n                 done\n@@ -236,7 +258,7 @@ if test \"x$want_boost\" = \"xyes\"; then\n                     stage_version=`echo $version_dir | sed 's/boost_//' | sed 's/_/./g'`\n                         stage_version_shorten=`expr $stage_version : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n                     V_CHECK=`expr $stage_version_shorten \\>\\= $_version`\n-                    if test \"$V_CHECK\" = \"1\" -a \"$ac_boost_lib_path\" = \"\" ; then\n+                    if test \"x$V_CHECK\" = \"x1\" && test -z \"$_AX_BOOST_BASE_boost_lib_path\" ; then\n                         AC_MSG_NOTICE(We will use a staged boost library from $BOOST_ROOT)\n                         BOOST_CPPFLAGS=\"-I$BOOST_ROOT\"\n                         BOOST_LDFLAGS=\"-L$BOOST_ROOT/stage/$libsubdir\"\n@@ -251,15 +273,7 @@ if test \"x$want_boost\" = \"xyes\"; then\n         export LDFLAGS\n \n         AC_LANG_PUSH(C++)\n-            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        @%:@include <boost/version.hpp>\n-        ]], [[\n-        #if BOOST_VERSION >= $WANT_BOOST_VERSION\n-        // Everything is okay\n-        #else\n-        #  error Boost version is too old\n-        #endif\n-        ]])],[\n+            AC_COMPILE_IFELSE([_AX_BOOST_BASE_PROGRAM($WANT_BOOST_VERSION)],[\n             AC_MSG_RESULT(yes)\n         succeeded=yes\n         found_system=yes\n@@ -268,24 +282,21 @@ if test \"x$want_boost\" = \"xyes\"; then\n         AC_LANG_POP([C++])\n     fi\n \n-    if test \"$succeeded\" != \"yes\" ; then\n-        if test \"$_version\" = \"0\" ; then\n-            AC_MSG_NOTICE([[We could not detect the boost libraries (version $boost_lib_version_req_shorten or higher). If you have a staged boost library (still not installed) please specify \\$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])\n+    if test \"x$succeeded\" != \"xyes\" ; then\n+        if test \"x$_version\" = \"x0\" ; then\n+            AC_MSG_NOTICE([[We could not detect the boost libraries (version $1 or higher). If you have a staged boost library (still not installed) please specify \\$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])\n         else\n             AC_MSG_NOTICE([Your boost libraries seems to old (version $_version).])\n         fi\n         # execute ACTION-IF-NOT-FOUND (if present):\n         ifelse([$3], , :, [$3])\n     else\n-        AC_SUBST(BOOST_CPPFLAGS)\n-        AC_SUBST(BOOST_LDFLAGS)\n         AC_DEFINE(HAVE_BOOST,,[define if the Boost library is available])\n         # execute ACTION-IF-FOUND (if present):\n         ifelse([$2], , :, [$2])\n     fi\n \n     CPPFLAGS=\"$CPPFLAGS_SAVED\"\n     LDFLAGS=\"$LDFLAGS_SAVED\"\n-fi\n \n ])"
      },
      {
        "sha": "4cd3b860410f83d28d9174c0d16e53e93b098334",
        "filename": "build-aux/m4/ax_boost_chrono.m4",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98/build-aux/m4/ax_boost_chrono.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98/build-aux/m4/ax_boost_chrono.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_chrono.m4?ref=3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98",
        "patch": "@@ -29,7 +29,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 4\n+#serial 5\n \n AC_DEFUN([AX_BOOST_CHRONO],\n [\n@@ -105,7 +105,7 @@ AC_DEFUN([AX_BOOST_CHRONO],\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the library!)\n+                AC_MSG_ERROR(Could not find a version of the Boost::Chrono library!)\n             fi\n \t\t\tif test \"x$link_chrono\" = \"xno\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)"
      },
      {
        "sha": "12f7bc5e2ebc18f70537f3d271802e107bfacdad",
        "filename": "build-aux/m4/ax_boost_filesystem.m4",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98/build-aux/m4/ax_boost_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98/build-aux/m4/ax_boost_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_filesystem.m4?ref=3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98",
        "patch": "@@ -1,5 +1,5 @@\n # ===========================================================================\n-#    http://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n+#   https://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n # ===========================================================================\n #\n # SYNOPSIS\n@@ -31,7 +31,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 26\n+#serial 28\n \n AC_DEFUN([AX_BOOST_FILESYSTEM],\n [\n@@ -80,7 +80,6 @@ AC_DEFUN([AX_BOOST_FILESYSTEM],\n \t\tif test \"x$ax_cv_boost_filesystem\" = \"xyes\"; then\n \t\t\tAC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])\n             BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-            ax_lib=\n             if test \"x$ax_boost_user_filesystem_lib\" = \"x\"; then\n                 for libextension in `ls -r $BOOSTLIBDIR/libboost_filesystem* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n                      ax_lib=${libextension}\n@@ -105,7 +104,7 @@ AC_DEFUN([AX_BOOST_FILESYSTEM],\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_filesystem library!)\n+                AC_MSG_ERROR(Could not find a version of the Boost::Filesystem library!)\n             fi\n \t\t\tif test \"x$link_filesystem\" != \"xyes\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)"
      },
      {
        "sha": "323e2a676a8e0428008dd4563416ce141e278f33",
        "filename": "build-aux/m4/ax_boost_system.m4",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98/build-aux/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98/build-aux/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_system.m4?ref=3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98",
        "patch": "@@ -1,5 +1,5 @@\n # ===========================================================================\n-#      http://www.gnu.org/software/autoconf-archive/ax_boost_system.html\n+#     https://www.gnu.org/software/autoconf-archive/ax_boost_system.html\n # ===========================================================================\n #\n # SYNOPSIS\n@@ -31,7 +31,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 18\n+#serial 20\n \n AC_DEFUN([AX_BOOST_SYSTEM],\n [\n@@ -84,7 +84,6 @@ AC_DEFUN([AX_BOOST_SYSTEM],\n \n \t\t\tLDFLAGS_SAVE=$LDFLAGS\n             if test \"x$ax_boost_user_system_lib\" = \"x\"; then\n-                ax_lib=\n                 for libextension in `ls -r $BOOSTLIBDIR/libboost_system* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n                      ax_lib=${libextension}\n \t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n@@ -109,7 +108,7 @@ AC_DEFUN([AX_BOOST_SYSTEM],\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_system library!)\n+                AC_MSG_ERROR(Could not find a version of the Boost::System library!)\n             fi\n \t\t\tif test \"x$link_system\" = \"xno\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)"
      },
      {
        "sha": "e9dea4353556e1a4135122bac13561ed88a95743",
        "filename": "build-aux/m4/ax_boost_thread.m4",
        "status": "modified",
        "additions": 83,
        "deletions": 70,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98/build-aux/m4/ax_boost_thread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98/build-aux/m4/ax_boost_thread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_thread.m4?ref=3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98",
        "patch": "@@ -1,5 +1,5 @@\n # ===========================================================================\n-#      http://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n+#     https://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n # ===========================================================================\n #\n # SYNOPSIS\n@@ -30,121 +30,134 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 27\n+#serial 32\n \n AC_DEFUN([AX_BOOST_THREAD],\n [\n-\tAC_ARG_WITH([boost-thread],\n-\tAS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n-                   [use the Thread library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n+    AC_ARG_WITH([boost-thread],\n+    AS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n+                   [use the Thread library from boost -\n+                    it is possible to specify a certain library for the linker\n+                    e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n         [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n+        if test \"$withval\" = \"yes\"; then\n             want_boost=\"yes\"\n             ax_boost_user_thread_lib=\"\"\n         else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_thread_lib=\"$withval\"\n-\t\tfi\n+            want_boost=\"yes\"\n+            ax_boost_user_thread_lib=\"$withval\"\n+        fi\n         ],\n         [want_boost=\"yes\"]\n-\t)\n+    )\n \n-\tif test \"x$want_boost\" = \"xyes\"; then\n+    if test \"x$want_boost\" = \"xyes\"; then\n         AC_REQUIRE([AC_PROG_CC])\n         AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n+        CPPFLAGS_SAVED=\"$CPPFLAGS\"\n+        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+        export CPPFLAGS\n \n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n+        LDFLAGS_SAVED=\"$LDFLAGS\"\n+        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+        export LDFLAGS\n \n         AC_CACHE_CHECK(whether the Boost::Thread library is available,\n-\t\t\t\t\t   ax_cv_boost_thread,\n+                       ax_cv_boost_thread,\n         [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+             CXXFLAGS_SAVE=$CXXFLAGS\n \n-\t\t\t if test \"x$host_os\" = \"xsolaris\" ; then\n-\t\t\t\t CXXFLAGS=\"-pthreads $CXXFLAGS\"\n-\t\t\t elif test \"x$host_os\" = \"xmingw32\" ; then\n-\t\t\t\t CXXFLAGS=\"-mthreads $CXXFLAGS\"\n-\t\t\t else\n-\t\t\t\tCXXFLAGS=\"-pthread $CXXFLAGS\"\n-\t\t\t fi\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/thread/thread.hpp>]],\n-                                   [[boost::thread_group thrds;\n-                                   return 0;]])],\n-                   ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             if test \"x$host_os\" = \"xsolaris\" ; then\n+                 CXXFLAGS=\"-pthreads $CXXFLAGS\"\n+             elif test \"x$host_os\" = \"xmingw32\" ; then\n+                 CXXFLAGS=\"-mthreads $CXXFLAGS\"\n+             else\n+                CXXFLAGS=\"-pthread $CXXFLAGS\"\n+             fi\n+             AC_COMPILE_IFELSE([\n+                 AC_LANG_PROGRAM(\n+                     [[@%:@include <boost/thread/thread.hpp>]],\n+                     [[boost::thread_group thrds;\n+                       return 0;]])],\n+                 ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n+             CXXFLAGS=$CXXFLAGS_SAVE\n              AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n+        ])\n+        if test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n            if test \"x$host_os\" = \"xsolaris\" ; then\n-\t\t\t  BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n-\t\t   elif test \"x$host_os\" = \"xmingw32\" ; then\n-\t\t\t  BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n-\t\t   else\n-\t\t\t  BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n-\t\t   fi\n+              BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n+           elif test \"x$host_os\" = \"xmingw32\" ; then\n+              BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n+           else\n+              BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n+           fi\n \n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+            AC_SUBST(BOOST_CPPFLAGS)\n \n-\t\t\tAC_DEFINE(HAVE_BOOST_THREAD,,[define if the Boost::Thread library is available])\n+            AC_DEFINE(HAVE_BOOST_THREAD,,\n+                      [define if the Boost::Thread library is available])\n             BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n \n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            LDFLAGS_SAVE=$LDFLAGS\n                         case \"x$host_os\" in\n                           *bsd* )\n                                LDFLAGS=\"-pthread $LDFLAGS\"\n                           break;\n                           ;;\n                         esac\n             if test \"x$ax_boost_user_thread_lib\" = \"x\"; then\n-                ax_lib=\n                 for libextension in `ls -r $BOOSTLIBDIR/libboost_thread* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'`; do\n                      ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                    AC_CHECK_LIB($ax_lib, exit,\n+                                 [link_thread=\"yes\"; break],\n                                  [link_thread=\"no\"])\n-\t\t\t\tdone\n+                done\n                 if test \"x$link_thread\" != \"xyes\"; then\n                 for libextension in `ls -r $BOOSTLIBDIR/boost_thread* 2>/dev/null | sed 's,.*/,,' | sed 's,\\..*,,'`; do\n                      ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                    AC_CHECK_LIB($ax_lib, exit,\n+                                 [link_thread=\"yes\"; break],\n                                  [link_thread=\"no\"])\n-\t\t\t\tdone\n+                done\n                 fi\n \n             else\n                for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                      AC_CHECK_LIB($ax_lib, exit,\n+                                   [link_thread=\"yes\"; break],\n                                    [link_thread=\"no\"])\n                   done\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_thread library!)\n+                AC_MSG_ERROR(Could not find a version of the Boost::Thread library!)\n             fi\n-\t\t\tif test \"x$link_thread\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-                        else\n-                           case \"x$host_os\" in\n-                              *bsd* )\n-\t\t\t\tBOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n-                              break;\n-                              ;;\n-                           esac\n-\n-\t\t\tfi\n-\t\tfi\n+            if test \"x$link_thread\" = \"xno\"; then\n+                AC_MSG_ERROR(Could not link against $ax_lib !)\n+            else\n+                BOOST_THREAD_LIB=\"-l$ax_lib\"\n+                case \"x$host_os\" in\n+                    *bsd* )\n+                        BOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n+                        break;\n+                        ;;\n+                    xsolaris )\n+                        BOOST_THREAD_LIB=\"$BOOST_THREAD_LIB -lpthread\"\n+                        break;\n+                        ;;\n+                    xmingw32 )\n+                        break;\n+                        ;;\n+                    * )\n+                        BOOST_THREAD_LIB=\"$BOOST_THREAD_LIB -lpthread\"\n+                        break;\n+                        ;;\n+                esac\n+                AC_SUBST(BOOST_THREAD_LIB)\n+            fi\n+        fi\n \n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n+        CPPFLAGS=\"$CPPFLAGS_SAVED\"\n+        LDFLAGS=\"$LDFLAGS_SAVED\"\n+    fi\n ])"
      },
      {
        "sha": "4cca32fcfd6539b53e0a55c02544342d1d03ae75",
        "filename": "build-aux/m4/ax_boost_unit_test_framework.m4",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98/build-aux/m4/ax_boost_unit_test_framework.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98/build-aux/m4/ax_boost_unit_test_framework.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_unit_test_framework.m4?ref=3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98",
        "patch": "@@ -29,7 +29,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 21\n+#serial 22\n \n AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n [\n@@ -124,7 +124,7 @@ AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n                done\n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the library!)\n+                AC_MSG_ERROR(Could not find a version of the Boost::Unit_Test_Framework library!)\n             fi\n \t\t\tif test \"x$link_unit_test_framework\" != \"xyes\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)"
      }
    ]
  },
  {
    "sha": "ac30fc4f599b28fc09a854bf2d2940fe2eb5fcdf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYzMwZmM0ZjU5OWIyOGZjMDlhODU0YmYyZDI5NDBmZTJlYjVmY2Rm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-09-29T12:23:17Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-10-01T03:29:36Z"
      },
      "message": "build: Factor out qt translations from build system\n\nMove qt translations to a separate make include file.\nThis makes it easier to auto-generate this list from tooling\n(see bitcoin-core/bitcoin-maintainer-tools#36).\n\nGithub-Pull: #16982\nRebased-From: 4320bfc0c0d88633c84146f8d640f5b6e4596244",
      "tree": {
        "sha": "3e81929d97da0cdbb51ceee48b6e518a383e28df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e81929d97da0cdbb51ceee48b6e518a383e28df"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac30fc4f599b28fc09a854bf2d2940fe2eb5fcdf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl2SyCAACgkQLuufXMCV\nJsHwXxAAi7gXugkOgA5yJvHhXflAxRMteVrkDWyeVPsIkzTPkiyV0NQ4DZ5BzE5C\nXjb9w2Tt8++hCht4Gcaj1zQxpxjwST2JcBnC0WVcIiBh7Fsx1f0DHb7Gv+TZxO/J\n2dy3ITmh55oJsNOrWpXTt+Lahj1C5ZWFGM4bHHVs0BsVq8q9OqVTiJSefByt19ZC\nkWkCAPb/VpynDnEKrzdCSualmlPKu5/70nNQywcG2+V7jbzTUZfeu6udTXF1BxIr\n7mEAdJuuwcnoGi0fluZSKvnfgzPh4zswPdQaLTjjN0ELVNkWRC1DNZyTbdbOF73f\nrungvZH2nQj8DYbPJOaopXvNjW7Xm54ipm73Zmsjc+sAxypxBEikYDRXOv7pwgfE\nMfCKdAnWSxGst9N0Po0sRZsgDqIG9jN0LHpbl/UhCcufmrINewIRTY65FzDYRbN6\nSvLMwXZH4vuiS6ABGOM519pKcoeyNSFX4dYAmCaV32ylZ0XfB148ucbcQ1qKzTPo\nXuUFqZQPlXNeYrMecqMyIByH419uXkWb3ICYbC19/DNbayUin8+K/LpD8BFPQQoh\nb6s5RxpepZa4soVip96IRD9Ki6Ouklk9cfTDvXwkOZdCTb28MiLI3LDNTSQxlRF+\n2GJHhE5F7mVx0w/CF3R1gWSqFaFib1yqCnrGAukE7HnoH7lWBlE=\n=KFe7\n-----END PGP SIGNATURE-----",
        "payload": "tree 3e81929d97da0cdbb51ceee48b6e518a383e28df\nparent 3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1569759797 +0200\ncommitter fanquake <fanquake@gmail.com> 1569900576 +0800\n\nbuild: Factor out qt translations from build system\n\nMove qt translations to a separate make include file.\nThis makes it easier to auto-generate this list from tooling\n(see bitcoin-core/bitcoin-maintainer-tools#36).\n\nGithub-Pull: #16982\nRebased-From: 4320bfc0c0d88633c84146f8d640f5b6e4596244\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac30fc4f599b28fc09a854bf2d2940fe2eb5fcdf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ac30fc4f599b28fc09a854bf2d2940fe2eb5fcdf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac30fc4f599b28fc09a854bf2d2940fe2eb5fcdf/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3b8af5f3838bb124f5f59dbaa4c553a6ad8e7c98"
      }
    ],
    "stats": {
      "total": 243,
      "additions": 122,
      "deletions": 121
    },
    "files": [
      {
        "sha": "5d2362b8cce514c81879abb1fbf0ed9cdac6b647",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac30fc4f599b28fc09a854bf2d2940fe2eb5fcdf/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac30fc4f599b28fc09a854bf2d2940fe2eb5fcdf/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=ac30fc4f599b28fc09a854bf2d2940fe2eb5fcdf",
        "patch": "@@ -73,7 +73,7 @@ To assist in updating translations, we have created a script to help.\n ```bash\n git ls-files src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(bitcoin_\\(.*\\)\\).ts/<file alias=\"\\2\">locale\\/\\1.qm<\\/file>/'\n ```\n-4. Update `src/Makefile.qt.include` manually or via\n+4. Update `src/Makefile.qt_locale.include` manually or via\n ```bash\n git ls-files src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(bitcoin_\\(.*\\)\\).ts/  qt\\/locale\\/\\1.ts \\\\/'\n ```"
      },
      {
        "sha": "50c2503e3cf34f9519e16ccb56ca96cbbd1e1021",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 120,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac30fc4f599b28fc09a854bf2d2940fe2eb5fcdf/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac30fc4f599b28fc09a854bf2d2940fe2eb5fcdf/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=ac30fc4f599b28fc09a854bf2d2940fe2eb5fcdf",
        "patch": "@@ -6,126 +6,7 @@ bin_PROGRAMS += qt/bitcoin-qt\n EXTRA_LIBRARIES += qt/libbitcoinqt.a\n \n # bitcoin qt core #\n-QT_TS = \\\n-  qt/locale/bitcoin_af.ts \\\n-  qt/locale/bitcoin_af_ZA.ts \\\n-  qt/locale/bitcoin_am.ts \\\n-  qt/locale/bitcoin_ar.ts \\\n-  qt/locale/bitcoin_be_BY.ts \\\n-  qt/locale/bitcoin_bg.ts \\\n-  qt/locale/bitcoin_bg_BG.ts \\\n-  qt/locale/bitcoin_bn.ts \\\n-  qt/locale/bitcoin_bs.ts \\\n-  qt/locale/bitcoin_ca.ts \\\n-  qt/locale/bitcoin_ca@valencia.ts \\\n-  qt/locale/bitcoin_ca_ES.ts \\\n-  qt/locale/bitcoin_cs.ts \\\n-  qt/locale/bitcoin_cs_CZ.ts \\\n-  qt/locale/bitcoin_cy.ts \\\n-  qt/locale/bitcoin_da.ts \\\n-  qt/locale/bitcoin_de.ts \\\n-  qt/locale/bitcoin_de_DE.ts \\\n-  qt/locale/bitcoin_el.ts \\\n-  qt/locale/bitcoin_el_GR.ts \\\n-  qt/locale/bitcoin_en.ts \\\n-  qt/locale/bitcoin_en_AU.ts \\\n-  qt/locale/bitcoin_en_GB.ts \\\n-  qt/locale/bitcoin_eo.ts \\\n-  qt/locale/bitcoin_es.ts \\\n-  qt/locale/bitcoin_es_419.ts \\\n-  qt/locale/bitcoin_es_AR.ts \\\n-  qt/locale/bitcoin_es_CL.ts \\\n-  qt/locale/bitcoin_es_CO.ts \\\n-  qt/locale/bitcoin_es_DO.ts \\\n-  qt/locale/bitcoin_es_ES.ts \\\n-  qt/locale/bitcoin_es_MX.ts \\\n-  qt/locale/bitcoin_es_UY.ts \\\n-  qt/locale/bitcoin_es_VE.ts \\\n-  qt/locale/bitcoin_et.ts \\\n-  qt/locale/bitcoin_et_EE.ts \\\n-  qt/locale/bitcoin_eu_ES.ts \\\n-  qt/locale/bitcoin_fa.ts \\\n-  qt/locale/bitcoin_fa_IR.ts \\\n-  qt/locale/bitcoin_fi.ts \\\n-  qt/locale/bitcoin_fil.ts \\\n-  qt/locale/bitcoin_fr.ts \\\n-  qt/locale/bitcoin_fr_CA.ts \\\n-  qt/locale/bitcoin_fr_FR.ts \\\n-  qt/locale/bitcoin_gl.ts \\\n-  qt/locale/bitcoin_he.ts \\\n-  qt/locale/bitcoin_he_IL.ts \\\n-  qt/locale/bitcoin_hi.ts \\\n-  qt/locale/bitcoin_hi_IN.ts \\\n-  qt/locale/bitcoin_hr.ts \\\n-  qt/locale/bitcoin_hu.ts \\\n-  qt/locale/bitcoin_hu_HU.ts \\\n-  qt/locale/bitcoin_id.ts \\\n-  qt/locale/bitcoin_id_ID.ts \\\n-  qt/locale/bitcoin_is.ts \\\n-  qt/locale/bitcoin_it.ts \\\n-  qt/locale/bitcoin_it_IT.ts \\\n-  qt/locale/bitcoin_ja.ts \\\n-  qt/locale/bitcoin_ka.ts \\\n-  qt/locale/bitcoin_kk_KZ.ts \\\n-  qt/locale/bitcoin_km_KH.ts \\\n-  qt/locale/bitcoin_ko.ts \\\n-  qt/locale/bitcoin_ko_KR.ts \\\n-  qt/locale/bitcoin_ku_IQ.ts \\\n-  qt/locale/bitcoin_ky.ts \\\n-  qt/locale/bitcoin_la.ts \\\n-  qt/locale/bitcoin_lt.ts \\\n-  qt/locale/bitcoin_lv_LV.ts \\\n-  qt/locale/bitcoin_mk_MK.ts \\\n-  qt/locale/bitcoin_ml.ts \\\n-  qt/locale/bitcoin_mn.ts \\\n-  qt/locale/bitcoin_mr_IN.ts \\\n-  qt/locale/bitcoin_ms.ts \\\n-  qt/locale/bitcoin_ms_MY.ts \\\n-  qt/locale/bitcoin_my.ts \\\n-  qt/locale/bitcoin_nb.ts \\\n-  qt/locale/bitcoin_nb_NO.ts \\\n-  qt/locale/bitcoin_ne.ts \\\n-  qt/locale/bitcoin_nl.ts \\\n-  qt/locale/bitcoin_nl_BE.ts \\\n-  qt/locale/bitcoin_nl_NL.ts \\\n-  qt/locale/bitcoin_pam.ts \\\n-  qt/locale/bitcoin_pl.ts \\\n-  qt/locale/bitcoin_pl_PL.ts \\\n-  qt/locale/bitcoin_pt.ts \\\n-  qt/locale/bitcoin_pt_BR.ts \\\n-  qt/locale/bitcoin_pt_PT.ts \\\n-  qt/locale/bitcoin_ro.ts \\\n-  qt/locale/bitcoin_ro_RO.ts \\\n-  qt/locale/bitcoin_ru.ts \\\n-  qt/locale/bitcoin_ru_RU.ts \\\n-  qt/locale/bitcoin_si.ts \\\n-  qt/locale/bitcoin_sk.ts \\\n-  qt/locale/bitcoin_sk_SK.ts \\\n-  qt/locale/bitcoin_sl_SI.ts \\\n-  qt/locale/bitcoin_sn.ts \\\n-  qt/locale/bitcoin_sq.ts \\\n-  qt/locale/bitcoin_sr.ts \\\n-  qt/locale/bitcoin_sr@latin.ts \\\n-  qt/locale/bitcoin_sv.ts \\\n-  qt/locale/bitcoin_szl.ts \\\n-  qt/locale/bitcoin_ta.ts \\\n-  qt/locale/bitcoin_ta_IN.ts \\\n-  qt/locale/bitcoin_te.ts \\\n-  qt/locale/bitcoin_th.ts \\\n-  qt/locale/bitcoin_th_TH.ts \\\n-  qt/locale/bitcoin_tr.ts \\\n-  qt/locale/bitcoin_tr_TR.ts \\\n-  qt/locale/bitcoin_uk.ts \\\n-  qt/locale/bitcoin_uk_UA.ts \\\n-  qt/locale/bitcoin_ur_PK.ts \\\n-  qt/locale/bitcoin_uz@Cyrl.ts \\\n-  qt/locale/bitcoin_vi.ts \\\n-  qt/locale/bitcoin_vi_VN.ts \\\n-  qt/locale/bitcoin_zh-Hans.ts \\\n-  qt/locale/bitcoin_zh.ts \\\n-  qt/locale/bitcoin_zh_CN.ts \\\n-  qt/locale/bitcoin_zh_HK.ts \\\n-  qt/locale/bitcoin_zh_TW.ts\n+include Makefile.qt_locale.include\n \n QT_FORMS_UI = \\\n   qt/forms/addressbookpage.ui \\"
      },
      {
        "sha": "1e589d995cc384f133d6b084d38a27bc6000b92e",
        "filename": "src/Makefile.qt_locale.include",
        "status": "added",
        "additions": 120,
        "deletions": 0,
        "changes": 120,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac30fc4f599b28fc09a854bf2d2940fe2eb5fcdf/src/Makefile.qt_locale.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac30fc4f599b28fc09a854bf2d2940fe2eb5fcdf/src/Makefile.qt_locale.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt_locale.include?ref=ac30fc4f599b28fc09a854bf2d2940fe2eb5fcdf",
        "patch": "@@ -0,0 +1,120 @@\n+QT_TS = \\\n+  qt/locale/bitcoin_af.ts \\\n+  qt/locale/bitcoin_af_ZA.ts \\\n+  qt/locale/bitcoin_am.ts \\\n+  qt/locale/bitcoin_ar.ts \\\n+  qt/locale/bitcoin_be_BY.ts \\\n+  qt/locale/bitcoin_bg.ts \\\n+  qt/locale/bitcoin_bg_BG.ts \\\n+  qt/locale/bitcoin_bn.ts \\\n+  qt/locale/bitcoin_bs.ts \\\n+  qt/locale/bitcoin_ca.ts \\\n+  qt/locale/bitcoin_ca@valencia.ts \\\n+  qt/locale/bitcoin_ca_ES.ts \\\n+  qt/locale/bitcoin_cs.ts \\\n+  qt/locale/bitcoin_cs_CZ.ts \\\n+  qt/locale/bitcoin_cy.ts \\\n+  qt/locale/bitcoin_da.ts \\\n+  qt/locale/bitcoin_de.ts \\\n+  qt/locale/bitcoin_de_DE.ts \\\n+  qt/locale/bitcoin_el.ts \\\n+  qt/locale/bitcoin_el_GR.ts \\\n+  qt/locale/bitcoin_en.ts \\\n+  qt/locale/bitcoin_en_AU.ts \\\n+  qt/locale/bitcoin_en_GB.ts \\\n+  qt/locale/bitcoin_eo.ts \\\n+  qt/locale/bitcoin_es.ts \\\n+  qt/locale/bitcoin_es_419.ts \\\n+  qt/locale/bitcoin_es_AR.ts \\\n+  qt/locale/bitcoin_es_CL.ts \\\n+  qt/locale/bitcoin_es_CO.ts \\\n+  qt/locale/bitcoin_es_DO.ts \\\n+  qt/locale/bitcoin_es_ES.ts \\\n+  qt/locale/bitcoin_es_MX.ts \\\n+  qt/locale/bitcoin_es_UY.ts \\\n+  qt/locale/bitcoin_es_VE.ts \\\n+  qt/locale/bitcoin_et.ts \\\n+  qt/locale/bitcoin_et_EE.ts \\\n+  qt/locale/bitcoin_eu_ES.ts \\\n+  qt/locale/bitcoin_fa.ts \\\n+  qt/locale/bitcoin_fa_IR.ts \\\n+  qt/locale/bitcoin_fi.ts \\\n+  qt/locale/bitcoin_fil.ts \\\n+  qt/locale/bitcoin_fr.ts \\\n+  qt/locale/bitcoin_fr_CA.ts \\\n+  qt/locale/bitcoin_fr_FR.ts \\\n+  qt/locale/bitcoin_gl.ts \\\n+  qt/locale/bitcoin_he.ts \\\n+  qt/locale/bitcoin_he_IL.ts \\\n+  qt/locale/bitcoin_hi.ts \\\n+  qt/locale/bitcoin_hi_IN.ts \\\n+  qt/locale/bitcoin_hr.ts \\\n+  qt/locale/bitcoin_hu.ts \\\n+  qt/locale/bitcoin_hu_HU.ts \\\n+  qt/locale/bitcoin_id.ts \\\n+  qt/locale/bitcoin_id_ID.ts \\\n+  qt/locale/bitcoin_is.ts \\\n+  qt/locale/bitcoin_it.ts \\\n+  qt/locale/bitcoin_it_IT.ts \\\n+  qt/locale/bitcoin_ja.ts \\\n+  qt/locale/bitcoin_ka.ts \\\n+  qt/locale/bitcoin_kk_KZ.ts \\\n+  qt/locale/bitcoin_km_KH.ts \\\n+  qt/locale/bitcoin_ko.ts \\\n+  qt/locale/bitcoin_ko_KR.ts \\\n+  qt/locale/bitcoin_ku_IQ.ts \\\n+  qt/locale/bitcoin_ky.ts \\\n+  qt/locale/bitcoin_la.ts \\\n+  qt/locale/bitcoin_lt.ts \\\n+  qt/locale/bitcoin_lv_LV.ts \\\n+  qt/locale/bitcoin_mk_MK.ts \\\n+  qt/locale/bitcoin_ml.ts \\\n+  qt/locale/bitcoin_mn.ts \\\n+  qt/locale/bitcoin_mr_IN.ts \\\n+  qt/locale/bitcoin_ms.ts \\\n+  qt/locale/bitcoin_ms_MY.ts \\\n+  qt/locale/bitcoin_my.ts \\\n+  qt/locale/bitcoin_nb.ts \\\n+  qt/locale/bitcoin_nb_NO.ts \\\n+  qt/locale/bitcoin_ne.ts \\\n+  qt/locale/bitcoin_nl.ts \\\n+  qt/locale/bitcoin_nl_BE.ts \\\n+  qt/locale/bitcoin_nl_NL.ts \\\n+  qt/locale/bitcoin_pam.ts \\\n+  qt/locale/bitcoin_pl.ts \\\n+  qt/locale/bitcoin_pl_PL.ts \\\n+  qt/locale/bitcoin_pt.ts \\\n+  qt/locale/bitcoin_pt_BR.ts \\\n+  qt/locale/bitcoin_pt_PT.ts \\\n+  qt/locale/bitcoin_ro.ts \\\n+  qt/locale/bitcoin_ro_RO.ts \\\n+  qt/locale/bitcoin_ru.ts \\\n+  qt/locale/bitcoin_ru_RU.ts \\\n+  qt/locale/bitcoin_si.ts \\\n+  qt/locale/bitcoin_sk.ts \\\n+  qt/locale/bitcoin_sk_SK.ts \\\n+  qt/locale/bitcoin_sl_SI.ts \\\n+  qt/locale/bitcoin_sn.ts \\\n+  qt/locale/bitcoin_sq.ts \\\n+  qt/locale/bitcoin_sr.ts \\\n+  qt/locale/bitcoin_sr@latin.ts \\\n+  qt/locale/bitcoin_sv.ts \\\n+  qt/locale/bitcoin_szl.ts \\\n+  qt/locale/bitcoin_ta.ts \\\n+  qt/locale/bitcoin_ta_IN.ts \\\n+  qt/locale/bitcoin_te.ts \\\n+  qt/locale/bitcoin_th.ts \\\n+  qt/locale/bitcoin_th_TH.ts \\\n+  qt/locale/bitcoin_tr.ts \\\n+  qt/locale/bitcoin_tr_TR.ts \\\n+  qt/locale/bitcoin_uk.ts \\\n+  qt/locale/bitcoin_uk_UA.ts \\\n+  qt/locale/bitcoin_ur_PK.ts \\\n+  qt/locale/bitcoin_uz@Cyrl.ts \\\n+  qt/locale/bitcoin_vi.ts \\\n+  qt/locale/bitcoin_vi_VN.ts \\\n+  qt/locale/bitcoin_zh-Hans.ts \\\n+  qt/locale/bitcoin_zh.ts \\\n+  qt/locale/bitcoin_zh_CN.ts \\\n+  qt/locale/bitcoin_zh_HK.ts \\\n+  qt/locale/bitcoin_zh_TW.ts"
      }
    ]
  },
  {
    "sha": "0b18ea6f570e24c9719c10eb6e125da743409c58",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYjE4ZWE2ZjU3MGUyNGM5NzE5YzEwZWI2ZTEyNWRhNzQzNDA5YzU4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-10-10T11:25:08Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-10-19T18:58:27Z"
      },
      "message": "util: Filter control characters out of log messages\n\nBelts and suspenders: make sure outgoing log messages don't contain\npotentially suspicious characters, such as terminal control codes.\n\nThis escapes control characters except newline ('\\n') in C syntax.\nIt escapes instead of removes them to still allow for troubleshooting\nissues where they accidentally end up in strings.\n\nGithub-Pull: #17095\nRebased-From: d7820a1250070f3640246ae497e049bee0b3516f",
      "tree": {
        "sha": "326e9024ec8db22e81d6465cb2e4a756aec3b39e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/326e9024ec8db22e81d6465cb2e4a756aec3b39e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0b18ea6f570e24c9719c10eb6e125da743409c58",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl2rXNMACgkQLuufXMCV\nJsGFuxAAqXqQSUgA7YYzJPLvPsmjb4ng04hOGpnRIn80rmeCXUXqxqjx1HhhMVJD\nVqmJcMjqHZ2ZTHpKwLmte2/YazKstJCPCUD43qpPwam/rJgZ9ANgQuzvZASE4Stv\nRPQOBIvRPem14tsCDImGSc4wLpW7n6bOqdxBTV3FUU3M8K4afvjzH2LFxCrYhs/y\nfT7UPVRG2TW0YafrWRIfPVqgsKLgZeEAg733Jbpzaj8mLVvJJPslGfROC7ocn132\nzJ65Naa5mwrOGlCsE29QQaBSLbPEiu5FLE7xDLCFBJezyXDmKEXv53ijTQwm+5Dc\naTW5wX5ODItYvcSOxgY58nCu7aSoIDRih9ySYfFIzHvrpRPlL6+7ftaKQfVMA01P\n7uUjvDoUHUiiw0xie19pweor9bkFWFF1HhRiQcyU0gueBvT/spDpEMCCViw3f+lD\nAeHd7x/fdzj35+cq38MQHvG7xVr3z7XCVha0WCMYdCkNv+HlfuZXTpj3cnYBveN6\nRWnF9cEXZFY5ZsHv/5zW8kqHRU9mcvFkiwnqSLoW8lsFV1Dwq90836LTyKUmP/R5\nKQ0w/ywT+cwRBtcDWJLO7dv+HA7u/nK9YwNx/lqJi7xMdj9/rmkUOPbrR+07JkwH\nZoH7+jbkB6OjMGoRrxslteUgnUeRfXPdMZdbU840TD0ZqtbHaH4=\n=g2Nf\n-----END PGP SIGNATURE-----",
        "payload": "tree 326e9024ec8db22e81d6465cb2e4a756aec3b39e\nparent ac30fc4f599b28fc09a854bf2d2940fe2eb5fcdf\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1570706708 +0200\ncommitter fanquake <fanquake@gmail.com> 1571511507 -0400\n\nutil: Filter control characters out of log messages\n\nBelts and suspenders: make sure outgoing log messages don't contain\npotentially suspicious characters, such as terminal control codes.\n\nThis escapes control characters except newline ('\\n') in C syntax.\nIt escapes instead of removes them to still allow for troubleshooting\nissues where they accidentally end up in strings.\n\nGithub-Pull: #17095\nRebased-From: d7820a1250070f3640246ae497e049bee0b3516f\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b18ea6f570e24c9719c10eb6e125da743409c58",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0b18ea6f570e24c9719c10eb6e125da743409c58",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b18ea6f570e24c9719c10eb6e125da743409c58/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ac30fc4f599b28fc09a854bf2d2940fe2eb5fcdf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac30fc4f599b28fc09a854bf2d2940fe2eb5fcdf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac30fc4f599b28fc09a854bf2d2940fe2eb5fcdf"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 42,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3d3e2ef1e1dc091b8bbf4907ed4b501d8fd43464",
        "filename": "src/logging.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 1,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b18ea6f570e24c9719c10eb6e125da743409c58/src/logging.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b18ea6f570e24c9719c10eb6e125da743409c58/src/logging.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.cpp?ref=0b18ea6f570e24c9719c10eb6e125da743409c58",
        "patch": "@@ -204,9 +204,32 @@ std::string BCLog::Logger::LogTimestampStr(const std::string &str)\n     return strStamped;\n }\n \n+namespace BCLog {\n+    /** Belts and suspenders: make sure outgoing log messages don't contain\n+     * potentially suspicious characters, such as terminal control codes.\n+     *\n+     * This escapes control characters except newline ('\\n') in C syntax.\n+     * It escapes instead of removes them to still allow for troubleshooting\n+     * issues where they accidentally end up in strings.\n+     */\n+    std::string LogEscapeMessage(const std::string& str) {\n+        std::string ret;\n+        for (char ch_in : str) {\n+            uint8_t ch = (uint8_t)ch_in;\n+            if ((ch >= 32 || ch == '\\n') && ch != '\\x7f') {\n+                ret += ch_in;\n+            } else {\n+                ret += strprintf(\"\\\\x%02x\", ch);\n+            }\n+        }\n+        return ret;\n+    }\n+}\n+\n void BCLog::Logger::LogPrintStr(const std::string &str)\n {\n-    std::string strTimestamped = LogTimestampStr(str);\n+    std::string strEscaped = LogEscapeMessage(str);\n+    std::string strTimestamped = LogTimestampStr(strEscaped);\n \n     if (m_print_to_console) {\n         // print to console"
      },
      {
        "sha": "b32ef4b3ef2fca17944058aa92fc95e1c3d893fe",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b18ea6f570e24c9719c10eb6e125da743409c58/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b18ea6f570e24c9719c10eb6e125da743409c58/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=0b18ea6f570e24c9719c10eb6e125da743409c58",
        "patch": "@@ -21,6 +21,11 @@\n \n #include <boost/test/unit_test.hpp>\n \n+/* defined in logging.cpp */\n+namespace BCLog {\n+    std::string LogEscapeMessage(const std::string& str);\n+}\n+\n BOOST_FIXTURE_TEST_SUITE(util_tests, BasicTestingSetup)\n \n BOOST_AUTO_TEST_CASE(util_criticalsection)\n@@ -1256,4 +1261,17 @@ BOOST_AUTO_TEST_CASE(test_Capitalize)\n     BOOST_CHECK_EQUAL(Capitalize(\"\\x00\\xfe\\xff\"), \"\\x00\\xfe\\xff\");\n }\n \n+BOOST_AUTO_TEST_CASE(test_LogEscapeMessage)\n+{\n+    // ASCII and UTF-8 must pass through unaltered.\n+    BOOST_CHECK_EQUAL(BCLog::LogEscapeMessage(\"Valid log message\u8c93\"), \"Valid log message\u8c93\");\n+    // Newlines must pass through unaltered.\n+    BOOST_CHECK_EQUAL(BCLog::LogEscapeMessage(\"Message\\n with newlines\\n\"), \"Message\\n with newlines\\n\");\n+    // Other control characters are escaped in C syntax.\n+    BOOST_CHECK_EQUAL(BCLog::LogEscapeMessage(\"\\x01\\x7f Corrupted log message\\x0d\"), R\"(\\x01\\x7f Corrupted log message\\x0d)\");\n+    // Embedded NULL characters are escaped too.\n+    const std::string NUL(\"O\\x00O\", 3);\n+    BOOST_CHECK_EQUAL(BCLog::LogEscapeMessage(NUL), R\"(O\\x00O)\");\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]