[
  {
    "sha": "9e097eda92286fc1add07378c59b6df739daf1b6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZTA5N2VkYTkyMjg2ZmMxYWRkMDczNzhjNTliNmRmNzM5ZGFmMWI2",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao@bitreserve.org",
        "date": "2015-05-05T11:06:29Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao@bitreserve.org",
        "date": "2015-05-05T11:13:07Z"
      },
      "message": "Initial version of BlockToUniv adapted from src/rpcblockchain.cpp:blockToJSON",
      "tree": {
        "sha": "a52d5418c8a7fa755a8f33463fad254d4c5ea71f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a52d5418c8a7fa755a8f33463fad254d4c5ea71f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e097eda92286fc1add07378c59b6df739daf1b6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e097eda92286fc1add07378c59b6df739daf1b6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9e097eda92286fc1add07378c59b6df739daf1b6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e097eda92286fc1add07378c59b6df739daf1b6/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7f5d7e9d6d85020c5dbb8f985ecaf8d176d5255d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f5d7e9d6d85020c5dbb8f985ecaf8d176d5255d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7f5d7e9d6d85020c5dbb8f985ecaf8d176d5255d"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 47,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ba06e468b4cc65ea5a9c448d2c139c2305183146",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e097eda92286fc1add07378c59b6df739daf1b6/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e097eda92286fc1add07378c59b6df739daf1b6/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=9e097eda92286fc1add07378c59b6df739daf1b6",
        "patch": "@@ -28,5 +28,6 @@ extern std::string EncodeHexTx(const CTransaction& tx);\n extern void ScriptPubKeyToUniv(const CScript& scriptPubKey,\n                         UniValue& out, bool fIncludeHex);\n extern void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry);\n+extern void BlockToUniv(const CBlock& block, UniValue& entry);\n \n #endif // BITCOIN_CORE_IO_H"
      },
      {
        "sha": "bd0f9d3de4862dd9b5fb7cb4aa4d1503afe78008",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e097eda92286fc1add07378c59b6df739daf1b6/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e097eda92286fc1add07378c59b6df739daf1b6/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=9e097eda92286fc1add07378c59b6df739daf1b6",
        "patch": "@@ -132,3 +132,49 @@ void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry)\n \n     entry.pushKV(\"hex\", EncodeHexTx(tx)); // the hex-encoded transaction. used the name \"hex\" to be consistent with the verbose output of \"getrawtransaction\".\n }\n+\n+void BlockToUniv(const CBlock& block, UniValue &entry)\n+{\n+    bool txDetails = false;\n+\n+    entry.pushKV(\"hash\", block.GetHash().GetHex());\n+\n+    /*\n+    int confirmations = -1;\n+    // Only report confirmations if the block is on the main chain\n+    if (chainActive.Contains(blockindex))\n+        confirmations = chainActive.Height() - blockindex->nHeight + 1;\n+    result.push_back(Pair(\"confirmations\", confirmations));\n+    */\n+\n+    entry.pushKV(\"size\", (int)::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION));\n+    // entry.pushKV(Pair(\"height\", blockindex->nHeight));\n+    entry.pushKV(\"version\", block.nVersion);\n+    entry.pushKV(\"merkleroot\", block.hashMerkleRoot.GetHex());\n+    UniValue txs(UniValue::VARR);\n+    BOOST_FOREACH(const CTransaction& tx, block.vtx)\n+    {\n+        if(txDetails)\n+        {\n+            UniValue objTx(UniValue::VOBJ);\n+            TxToUniv(tx, uint256(), objTx);\n+            txs.push_back(objTx);\n+        }\n+        else\n+            txs.push_back(tx.GetHash().GetHex());\n+    }\n+    entry.pushKV(\"tx\", txs);\n+    entry.pushKV(\"time\", block.GetBlockTime());\n+    entry.pushKV(\"nonce\", (uint64_t)block.nNonce);\n+    entry.pushKV(\"bits\", strprintf(\"%08x\", block.nBits));\n+    // entry.pushKV(\"difficulty\", GetDifficulty(blockindex));\n+    // entry.pushKV(\"chainwork\", blockindex->nChainWork.GetHex());\n+\n+    /*\n+    if (blockindex->pprev)\n+        entry.pushKV(\"previousblockhash\", blockindex->pprev->GetBlockHash().GetHex());\n+    CBlockIndex *pnext = chainActive.Next(blockindex);\n+    if (pnext)\n+        entry.pushKV(\"nextblockhash\", pnext->GetBlockHash().GetHex());\n+    */\n+}"
      }
    ]
  }
]