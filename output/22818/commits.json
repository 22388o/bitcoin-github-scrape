[
  {
    "sha": "fa086ef5398b5ffded86e4f0d6633c523cb774e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTA4NmVmNTM5OGI1ZmZkZWQ4NmU0ZjBkNjYzM2M1MjNjYjc3NGU5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-08-27T10:58:54Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-09-16T16:47:12Z"
      },
      "message": "test: Remove unused ~TestChain100Setup\n\nsegwitheight is already 0 for regtest",
      "tree": {
        "sha": "3cd3dd22e9b06f5501842cd92f4367beeddc0a62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3cd3dd22e9b06f5501842cd92f4367beeddc0a62"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa086ef5398b5ffded86e4f0d6633c523cb774e9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYEACgkQzit1aX5p\npUguywv/VTBeFbMYHeLQgOVY8bhkgCKw6d85YQjw5zZbJzup91vov/h1+Ue1393/\nMlEP8CIfv+ahlDT0AnEehJF7w2LzVB0eRs5g+q4R+CppX0oNTjUFtkcFir4VW4sL\nrq+2CdvLXnT8SJUkZe7ERfYWipEq4Cx8XIcf5D8fz2yKZr5oOjPXKVY+mhgkKkeI\ni1yIGUmMC6xY3DgnScUZTGEI84pdUSQQJCMm+EwYrOdPsrwN0biycCgI4jqnmw7A\n2rov1Vl4Ni3hdbWmigJcfs0htxsJenNhfaSGXCugPPX/nVhNjM7OwWd474Yd2GXe\nHT2XV6ngHFUbDD5/j2kEh+fCyB58bWZFYH366jL2MnSLXj6Z2p1H+181jX9n3aby\nVHPsXDpE+aptedqz8pQ0mnNWmvAi2hJQPcXPntKL/8VmawCzhAbmJmUv/dEi3l5u\neGnbuIeMl0lS1+K2UEfV5EBN3NXAHtVrN0SVHidZgFVNevEWxIDLaJ1ORuDbY3+Q\nrZq288Qv\n=Xw7x\n-----END PGP SIGNATURE-----",
        "payload": "tree 3cd3dd22e9b06f5501842cd92f4367beeddc0a62\nparent 58e02395bad59359cc0210f2ab633d0a82827ba4\nauthor MarcoFalke <falke.marco@gmail.com> 1630061934 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1631810832 +0200\n\ntest: Remove unused ~TestChain100Setup\n\nsegwitheight is already 0 for regtest\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa086ef5398b5ffded86e4f0d6633c523cb774e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa086ef5398b5ffded86e4f0d6633c523cb774e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa086ef5398b5ffded86e4f0d6633c523cb774e9/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "58e02395bad59359cc0210f2ab633d0a82827ba4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58e02395bad59359cc0210f2ab633d0a82827ba4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/58e02395bad59359cc0210f2ab633d0a82827ba4"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 0,
      "deletions": 7
    },
    "files": [
      {
        "sha": "3d8bd471da4f0f7b1ad721fe8aa68738dc243c45",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa086ef5398b5ffded86e4f0d6633c523cb774e9/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa086ef5398b5ffded86e4f0d6633c523cb774e9/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=fa086ef5398b5ffded86e4f0d6633c523cb774e9",
        "patch": "@@ -304,11 +304,6 @@ CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactio\n     return mempool_txn;\n }\n \n-TestChain100Setup::~TestChain100Setup()\n-{\n-    gArgs.ForceSetArg(\"-segwitheight\", \"0\");\n-}\n-\n CTxMemPoolEntry TestMemPoolEntryHelper::FromTx(const CMutableTransaction& tx) const\n {\n     return FromTx(MakeTransactionRef(tx));"
      },
      {
        "sha": "118ac6229095ba5580d726ebb5f7b3bde785fbd9",
        "filename": "src/test/util/setup_common.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa086ef5398b5ffded86e4f0d6633c523cb774e9/src/test/util/setup_common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa086ef5398b5ffded86e4f0d6633c523cb774e9/src/test/util/setup_common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.h?ref=fa086ef5398b5ffded86e4f0d6633c523cb774e9",
        "patch": "@@ -145,8 +145,6 @@ struct TestChain100Setup : public RegTestingSetup {\n                                                       CAmount output_amount = CAmount(1 * COIN),\n                                                       bool submit = true);\n \n-    ~TestChain100Setup();\n-\n     std::vector<CTransactionRef> m_coinbase_txns; // For convenience, coinbase transactions\n     CKey coinbaseKey; // private/public key needed to spend coinbase transactions\n };"
      }
    ]
  },
  {
    "sha": "faa46986aaec69e4cf016101ae517ce8778e2ac5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWE0Njk4NmFhZWM2OWU0Y2YwMTYxMDFhZTUxN2NlODc3OGUyYWM1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-08-27T14:36:17Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-09-16T16:52:19Z"
      },
      "message": "test: Remove version argument from build_next_block in p2p_segwit test\n\nThe block version does not have any effect on the segwit consensus rules\nor block relay logic.\n\nSame for feature_dersig.",
      "tree": {
        "sha": "ac5e11c632980775ca9f0e6b49e04de13dbb1aa2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac5e11c632980775ca9f0e6b49e04de13dbb1aa2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faa46986aaec69e4cf016101ae517ce8778e2ac5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjIfgwAztyQ2ra1CzpVIBCuIBmg+IVdin2cHWJk6t2ViyYpsQJxjL12gPFzyCoW\nf11E/sH/3TWu6e/we7UkqKEE7mevZjNjhkgun6DH2N7aNuNzSkoRx2ANL+y6N3WP\ncl073aYqdwB/gSYfkDYxS78dMGRpYg+hexZapXmN075eb/+hVs7rNShYA8+KfDN7\ncQ7ZdwtM2t3YVjmn/XMNF/eM8NOaSUuSC7htTdtZLJr7rSvn8411c7uUL/tJ6AZy\n3UvZ9tjd6cUqrcpvjD3aBb5xsztyTh2STr0jU2M+DxGUOcvlMncLEjFkhyCZWYUN\nGGCLj5pC078EOZTS73ljqOHtKY8czEPW8dCVgkPNUAtoMudsamxVq2Jr3AH6VQyO\nZHJ3J9MLEWpd7/NhCr2PT9xB0iF6iskkIAWa7B6mwYBfqDxrwOkeSMvcBz7Q1Tyy\nHXxIooQ7mqeOLw9zoC/PV+aB53mT+fitsqB0IKBAg+3Vl0Yd1PoUSDjSiS8QphRn\nC7H1iCA8\n=i0Br\n-----END PGP SIGNATURE-----",
        "payload": "tree ac5e11c632980775ca9f0e6b49e04de13dbb1aa2\nparent fa086ef5398b5ffded86e4f0d6633c523cb774e9\nauthor MarcoFalke <falke.marco@gmail.com> 1630074977 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1631811139 +0200\n\ntest: Remove version argument from build_next_block in p2p_segwit test\n\nThe block version does not have any effect on the segwit consensus rules\nor block relay logic.\n\nSame for feature_dersig.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faa46986aaec69e4cf016101ae517ce8778e2ac5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faa46986aaec69e4cf016101ae517ce8778e2ac5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faa46986aaec69e4cf016101ae517ce8778e2ac5/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa086ef5398b5ffded86e4f0d6633c523cb774e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa086ef5398b5ffded86e4f0d6633c523cb774e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa086ef5398b5ffded86e4f0d6633c523cb774e9"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 10,
      "deletions": 21
    },
    "files": [
      {
        "sha": "abf4cfeba2d18132dbcc5199f951b623cf34aa3d",
        "filename": "test/functional/feature_dersig.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa46986aaec69e4cf016101ae517ce8778e2ac5/test/functional/feature_dersig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa46986aaec69e4cf016101ae517ce8778e2ac5/test/functional/feature_dersig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_dersig.py?ref=faa46986aaec69e4cf016101ae517ce8778e2ac5",
        "patch": "@@ -83,7 +83,6 @@ def run_test(self):\n         tip = self.nodes[0].getbestblockhash()\n         block_time = self.nodes[0].getblockheader(tip)['mediantime'] + 1\n         block = create_block(int(tip, 16), create_coinbase(DERSIG_HEIGHT - 1), block_time)\n-        block.nVersion = 2\n         block.vtx.append(spendtx)\n         block.hashMerkleRoot = block.calc_merkle_root()\n         block.rehash()\n@@ -110,7 +109,7 @@ def run_test(self):\n             peer.sync_with_ping()\n \n         self.log.info(\"Test that transactions with non-DER signatures cannot appear in a block\")\n-        block.nVersion = 3\n+        block.nVersion = 4\n \n         spendtx = self.create_tx(self.coinbase_txids[1])\n         unDERify(spendtx)\n@@ -139,7 +138,7 @@ def run_test(self):\n             assert_equal(int(self.nodes[0].getbestblockhash(), 16), tip)\n             peer.sync_with_ping()\n \n-        self.log.info(\"Test that a version 3 block with a DERSIG-compliant transaction is accepted\")\n+        self.log.info(\"Test that a block with a DERSIG-compliant transaction is accepted\")\n         block.vtx[1] = self.create_tx(self.coinbase_txids[1])\n         block.hashMerkleRoot = block.calc_merkle_root()\n         block.rehash()"
      },
      {
        "sha": "1b316268d70084c0ab78750a873bfce4d15f94b4",
        "filename": "test/functional/p2p_segwit.py",
        "status": "modified",
        "additions": 8,
        "deletions": 18,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa46986aaec69e4cf016101ae517ce8778e2ac5/test/functional/p2p_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa46986aaec69e4cf016101ae517ce8778e2ac5/test/functional/p2p_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_segwit.py?ref=faa46986aaec69e4cf016101ae517ce8778e2ac5",
        "patch": "@@ -83,10 +83,6 @@\n     assert_raises_rpc_error,\n )\n \n-# The versionbit bit used to signal activation of SegWit\n-VB_WITNESS_BIT = 1\n-VB_TOP_BITS = 0x20000000\n-\n MAX_SIGOP_COST = 80000\n \n SEGWIT_HEIGHT = 120\n@@ -206,13 +202,13 @@ def skip_test_if_missing_module(self):\n \n     # Helper functions\n \n-    def build_next_block(self, version=4):\n+    def build_next_block(self):\n         \"\"\"Build a block on top of node0's tip.\"\"\"\n         tip = self.nodes[0].getbestblockhash()\n         height = self.nodes[0].getblockcount() + 1\n         block_time = self.nodes[0].getblockheader(tip)[\"mediantime\"] + 1\n         block = create_block(int(tip, 16), create_coinbase(height), block_time)\n-        block.nVersion = version\n+        block.nVersion = 4\n         block.rehash()\n         return block\n \n@@ -298,7 +294,7 @@ def test_non_witness_transaction(self):\n         # Mine a block with an anyone-can-spend coinbase,\n         # let it mature, then try to spend it.\n \n-        block = self.build_next_block(version=1)\n+        block = self.build_next_block()\n         block.solve()\n         self.test_node.send_and_ping(msg_no_witness_block(block))  # make sure the block was processed\n         txid = block.vtx[0].sha256\n@@ -336,8 +332,8 @@ def test_unnecessary_witness_before_segwit_activation(self):\n         tx.rehash()\n         assert tx.sha256 != tx.calc_sha256(with_witness=True)\n \n-        # Construct a segwit-signaling block that includes the transaction.\n-        block = self.build_next_block(version=(VB_TOP_BITS | (1 << VB_WITNESS_BIT)))\n+        # Construct a block that includes the transaction.\n+        block = self.build_next_block()\n         self.update_witness_block_with_transactions(block, [tx])\n         # Sending witness data before activation is not allowed (anti-spam\n         # rule).\n@@ -364,27 +360,21 @@ def test_block_relay(self):\n         # test_node has set NODE_WITNESS, so all getdata requests should be for\n         # witness blocks.\n         # Test announcing a block via inv results in a getdata, and that\n-        # announcing a version 4 or random VB block with a header results in a getdata\n+        # announcing a block with a header results in a getdata\n         block1 = self.build_next_block()\n         block1.solve()\n \n         self.test_node.announce_block_and_wait_for_getdata(block1, use_header=False)\n         assert self.test_node.last_message[\"getdata\"].inv[0].type == blocktype\n         test_witness_block(self.nodes[0], self.test_node, block1, True)\n \n-        block2 = self.build_next_block(version=4)\n+        block2 = self.build_next_block()\n         block2.solve()\n \n         self.test_node.announce_block_and_wait_for_getdata(block2, use_header=True)\n         assert self.test_node.last_message[\"getdata\"].inv[0].type == blocktype\n         test_witness_block(self.nodes[0], self.test_node, block2, True)\n \n-        block3 = self.build_next_block(version=(VB_TOP_BITS | (1 << 15)))\n-        block3.solve()\n-        self.test_node.announce_block_and_wait_for_getdata(block3, use_header=True)\n-        assert self.test_node.last_message[\"getdata\"].inv[0].type == blocktype\n-        test_witness_block(self.nodes[0], self.test_node, block3, True)\n-\n         # Check that we can getdata for witness blocks or regular blocks,\n         # and the right thing happens.\n         if not self.segwit_active:\n@@ -429,7 +419,7 @@ def test_block_relay(self):\n             assert_equal(rpc_details[\"weight\"], block.get_weight())\n \n             # Upgraded node should not ask for blocks from unupgraded\n-            block4 = self.build_next_block(version=4)\n+            block4 = self.build_next_block()\n             block4.solve()\n             self.old_node.getdataset = set()\n "
      }
    ]
  },
  {
    "sha": "fadb2ef2fa8561882db463f35df9b8a0e9609658",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWRiMmVmMmZhODU2MTg4MmRiNDYzZjM1ZGY5YjhhMGU5NjA5NjU4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-08-27T13:21:07Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-09-16T16:52:49Z"
      },
      "message": "test: Add extra_args argument to TestChain100Setup constructor\n\nThis will be needed in a later commit.",
      "tree": {
        "sha": "92149d50f1303a2b864f87970938521deb4d94b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/92149d50f1303a2b864f87970938521deb4d94b4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fadb2ef2fa8561882db463f35df9b8a0e9609658",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjJqwv/Sbe5IApiMhln12GXKl70f+TWpu90e+XKfM0GGGEdaOQ3LqxrwypOyGQT\nwJGUoXO0brObkW8pjNAVxLFrDEJnEFllKSognM6Qpni/9OgY0ah5V5p1fJEIYPrJ\nwkF7FRr6tVB9nGwrqndn9IR3UaQ3NXSJ1AcepM+aZLUDyyCFFort0YZBY8lOzoHz\n2aJaVKZBYWgLHSaKgQBsjohumUPkNkejl4Y01nghVcEDNGL8PG6VXfZJWwvEMpck\nFkGRCmJlrxGIQZA/3Pe72obFTbPUaxsSGUkcudIDyky16aBT5hEhn8U5itYkuk7y\n7wT5lrOVYwBTE9FCnF8flrOeXY+9Jsg5gJBQ3Ie7NHwWB9vaj1T/KrmUs0dcpC/G\nk99+k3sqELn/jjmaeUnro5P0zmsYExAlPdMxW5xL53oEYRPclk9sPj7x6TPNdASK\nvxlJaL0DZoZHVHNzL8mGjWbgmMTUUsWSdwnCJss3Km/b3YkF4UedkYfAShSbLNuo\nyiexNldt\n=EsCB\n-----END PGP SIGNATURE-----",
        "payload": "tree 92149d50f1303a2b864f87970938521deb4d94b4\nparent faa46986aaec69e4cf016101ae517ce8778e2ac5\nauthor MarcoFalke <falke.marco@gmail.com> 1630070467 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1631811169 +0200\n\ntest: Add extra_args argument to TestChain100Setup constructor\n\nThis will be needed in a later commit.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fadb2ef2fa8561882db463f35df9b8a0e9609658",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fadb2ef2fa8561882db463f35df9b8a0e9609658",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fadb2ef2fa8561882db463f35df9b8a0e9609658/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "faa46986aaec69e4cf016101ae517ce8778e2ac5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faa46986aaec69e4cf016101ae517ce8778e2ac5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faa46986aaec69e4cf016101ae517ce8778e2ac5"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "74dcefe076e1639e88f8fbd420e4f96a111a6961",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fadb2ef2fa8561882db463f35df9b8a0e9609658/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fadb2ef2fa8561882db463f35df9b8a0e9609658/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=fadb2ef2fa8561882db463f35df9b8a0e9609658",
        "patch": "@@ -205,7 +205,8 @@ TestingSetup::TestingSetup(const std::string& chainName, const std::vector<const\n     }\n }\n \n-TestChain100Setup::TestChain100Setup()\n+TestChain100Setup::TestChain100Setup(const std::vector<const char*>& extra_args)\n+    : TestingSetup{CBaseChainParams::REGTEST, extra_args}\n {\n     SetMockTime(1598887952);\n     constexpr std::array<unsigned char, 32> vchKey = {"
      },
      {
        "sha": "abc87bb69c3acb02d189ad180b241ea569cee434",
        "filename": "src/test/util/setup_common.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fadb2ef2fa8561882db463f35df9b8a0e9609658/src/test/util/setup_common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fadb2ef2fa8561882db463f35df9b8a0e9609658/src/test/util/setup_common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.h?ref=fadb2ef2fa8561882db463f35df9b8a0e9609658",
        "patch": "@@ -113,8 +113,8 @@ class CScript;\n /**\n  * Testing fixture that pre-creates a 100-block REGTEST-mode block chain\n  */\n-struct TestChain100Setup : public RegTestingSetup {\n-    TestChain100Setup();\n+struct TestChain100Setup : public TestingSetup {\n+    TestChain100Setup(const std::vector<const char*>& extra_args = {});\n \n     /**\n      * Create a new block with just given transactions, coinbase paying to"
      }
    ]
  },
  {
    "sha": "faad1e5ffda255aecf1b0ea2152cd4f6805e678f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWFkMWU1ZmZkYTI1NWFlY2YxYjBlYTIxNTJjZDRmNjgwNWU2Nzhm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-08-27T10:54:24Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-09-16T16:52:59Z"
      },
      "message": "Introduce -testactivationheight=name@height setting",
      "tree": {
        "sha": "f5f115168b1c19db862c66d23ca82a41a6a99f5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f5f115168b1c19db862c66d23ca82a41a6a99f5e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faad1e5ffda255aecf1b0ea2152cd4f6805e678f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj8WwwAyZDDsG5eu1m2Wz1bD0DGtYfZX/3HWc2aS+WxqlUGGhtWkbjqUCZ9ArkQ\n2xvPMcBP5HeJZyRWe5+P5ok24hqFEVvVBLQ2sg7X3TpPlnADwclvPcWWoo6nvKzk\n+mCu7i5AygdzBRrwGrPGKaNzXuOgfJKADnQXNyaH31MX/yylHepRns8wKSUfKOP2\nrrBilEYVrn8x0DFcsFl7OOalkoFG1kapxKM4nbNZDhrw1cGXPUrDwgcrbQcNtZ3d\n2NFqJDG6OwvtOYRcobhIgIMwEvYr3YcAfRqZRDT0hsmKcTe3TfdKeGyqGuo9wZsp\nAnaTbeNh/e1mjmTQJNHsVKBc2sWb+LXLYuvBlHkZjg6tIGfl0RARQQJ+Vp6y26/Y\nfpx+/DL6oyuQ27mf9xUWaSN1NGTGiWkVe0VRan1BWhqpuAq5AdH6xub8Zn22zso4\nI5Ay7LSWEA9RwysPrIhOX0YP779KF9QWJjV4rsw4M+sBYq76zZwQ52tZGiNOGvQf\nd6dGd+re\n=8v17\n-----END PGP SIGNATURE-----",
        "payload": "tree f5f115168b1c19db862c66d23ca82a41a6a99f5e\nparent fadb2ef2fa8561882db463f35df9b8a0e9609658\nauthor MarcoFalke <falke.marco@gmail.com> 1630061664 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1631811179 +0200\n\nIntroduce -testactivationheight=name@height setting\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faad1e5ffda255aecf1b0ea2152cd4f6805e678f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faad1e5ffda255aecf1b0ea2152cd4f6805e678f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faad1e5ffda255aecf1b0ea2152cd4f6805e678f/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fadb2ef2fa8561882db463f35df9b8a0e9609658",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fadb2ef2fa8561882db463f35df9b8a0e9609658",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fadb2ef2fa8561882db463f35df9b8a0e9609658"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 31,
      "deletions": 16
    },
    "files": [
      {
        "sha": "5c589444998060453eaa0fd2107c1c2a5a862cfa",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 6,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faad1e5ffda255aecf1b0ea2152cd4f6805e678f/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faad1e5ffda255aecf1b0ea2152cd4f6805e678f/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=faad1e5ffda255aecf1b0ea2152cd4f6805e678f",
        "patch": "@@ -487,15 +487,30 @@ class CRegTestParams : public CChainParams {\n     void UpdateActivationParametersFromArgs(const ArgsManager& args);\n };\n \n-void CRegTestParams::UpdateActivationParametersFromArgs(const ArgsManager& args)\n+static void MaybeUpdateHeights(const ArgsManager& args, Consensus::Params& consensus)\n {\n-    if (args.IsArgSet(\"-segwitheight\")) {\n-        int64_t height = args.GetArg(\"-segwitheight\", consensus.SegwitHeight);\n-        if (height < 0 || height >= std::numeric_limits<int>::max()) {\n-            throw std::runtime_error(strprintf(\"Activation height %ld for segwit is out of valid range.\", height));\n+    for (const std::string& arg : args.GetArgs(\"-testactivationheight\")) {\n+        const auto found{arg.find('@')};\n+        if (found == std::string::npos) {\n+            throw std::runtime_error(strprintf(\"Invalid format (%s) for -testactivationheight=name@height.\", arg));\n+        }\n+        const auto name{arg.substr(0, found)};\n+        const auto value{arg.substr(found + 1)};\n+        int32_t height;\n+        if (!ParseInt32(value, &height) || height < 0 || height >= std::numeric_limits<int>::max()) {\n+            throw std::runtime_error(strprintf(\"Invalid height value (%s) for -testactivationheight=name@height.\", arg));\n+        }\n+        if (name == \"segwit\") {\n+            consensus.SegwitHeight = int{height};\n+        } else {\n+            throw std::runtime_error(strprintf(\"Invalid name (%s) for -testactivationheight=name@height.\", arg));\n         }\n-        consensus.SegwitHeight = static_cast<int>(height);\n     }\n+}\n+\n+void CRegTestParams::UpdateActivationParametersFromArgs(const ArgsManager& args)\n+{\n+    MaybeUpdateHeights(args, consensus);\n \n     if (!args.IsArgSet(\"-vbparams\")) return;\n "
      },
      {
        "sha": "eaf7622242f45b48e582a62d6342a235d56f73cb",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faad1e5ffda255aecf1b0ea2152cd4f6805e678f/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faad1e5ffda255aecf1b0ea2152cd4f6805e678f/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=faad1e5ffda255aecf1b0ea2152cd4f6805e678f",
        "patch": "@@ -20,7 +20,7 @@ void SetupChainParamsBaseOptions(ArgsManager& argsman)\n     argsman.AddArg(\"-chain=<chain>\", \"Use the chain <chain> (default: main). Allowed values: main, test, signet, regtest\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-regtest\", \"Enter regression test mode, which uses a special chain in which blocks can be solved instantly. \"\n                  \"This is intended for regression testing tools and app development. Equivalent to -chain=regtest.\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n-    argsman.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-testactivationheight=name@height.\", \"Set the activation height of 'name'. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-vbparams=deployment:start:end[:min_activation_height]\", \"Use given start/end times and min_activation_height for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-signet\", \"Use the signet chain. Equivalent to -chain=signet. Note that the network is defined by the -signetchallenge parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);"
      },
      {
        "sha": "217a38050d0ac50288e1d26335805331cdc030ac",
        "filename": "test/functional/feature_nulldummy.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faad1e5ffda255aecf1b0ea2152cd4f6805e678f/test/functional/feature_nulldummy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faad1e5ffda255aecf1b0ea2152cd4f6805e678f/test/functional/feature_nulldummy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_nulldummy.py?ref=faad1e5ffda255aecf1b0ea2152cd4f6805e678f",
        "patch": "@@ -52,7 +52,7 @@ def set_test_params(self):\n         # This script tests NULLDUMMY activation, which is part of the 'segwit' deployment, so we go through\n         # normal segwit activation here (and don't use the default always-on behaviour).\n         self.extra_args = [[\n-            f'-segwitheight={COINBASE_MATURITY + 5}',\n+            f'-testactivationheight=segwit@{COINBASE_MATURITY + 5}',\n             '-addresstype=legacy',\n             '-par=1',  # Use only one script thread to get the exact reject reason for testing\n         ]]"
      },
      {
        "sha": "aac42d4dbf62daf9e251708194097e360e87d95b",
        "filename": "test/functional/feature_presegwit_node_upgrade.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faad1e5ffda255aecf1b0ea2152cd4f6805e678f/test/functional/feature_presegwit_node_upgrade.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faad1e5ffda255aecf1b0ea2152cd4f6805e678f/test/functional/feature_presegwit_node_upgrade.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_presegwit_node_upgrade.py?ref=faad1e5ffda255aecf1b0ea2152cd4f6805e678f",
        "patch": "@@ -16,7 +16,7 @@ class SegwitUpgradeTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n-        self.extra_args = [[\"-segwitheight=10\"]]\n+        self.extra_args = [[\"-testactivationheight=segwit@10\"]]\n \n     def run_test(self):\n         \"\"\"A pre-segwit node with insufficiently validated blocks needs to redownload blocks\"\"\"\n@@ -37,14 +37,14 @@ def run_test(self):\n         # Restarting the node (with segwit activation height set to 5) should result in a shutdown\n         # because the blockchain consists of 3 insufficiently validated blocks per segwit consensus rules.\n         node.assert_start_raises_init_error(\n-            extra_args=[\"-segwitheight=5\"],\n+            extra_args=[\"-testactivationheight=segwit@5\"],\n             expected_msg=\": Witness data for blocks after height 5 requires \"\n             f\"validation. Please restart with -reindex..{os.linesep}\"\n             \"Please restart with -reindex or -reindex-chainstate to recover.\",\n         )\n \n         # As directed, the user restarts the node with -reindex\n-        self.start_node(0, extra_args=[\"-reindex\", \"-segwitheight=5\"])\n+        self.start_node(0, extra_args=[\"-reindex\", \"-testactivationheight=segwit@5\"])\n \n         # With the segwit consensus rules, the node is able to validate only up to block 4\n         assert_equal(node.getblockcount(), 4)"
      },
      {
        "sha": "79254546f1a3622350ddefff3da09b21e19eec0a",
        "filename": "test/functional/feature_segwit.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faad1e5ffda255aecf1b0ea2152cd4f6805e678f/test/functional/feature_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faad1e5ffda255aecf1b0ea2152cd4f6805e678f/test/functional/feature_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_segwit.py?ref=faad1e5ffda255aecf1b0ea2152cd4f6805e678f",
        "patch": "@@ -78,18 +78,18 @@ def set_test_params(self):\n             [\n                 \"-acceptnonstdtxn=1\",\n                 \"-rpcserialversion=0\",\n-                \"-segwitheight=432\",\n+                \"-testactivationheight=segwit@432\",\n                 \"-addresstype=legacy\",\n             ],\n             [\n                 \"-acceptnonstdtxn=1\",\n                 \"-rpcserialversion=1\",\n-                \"-segwitheight=432\",\n+                \"-testactivationheight=segwit@432\",\n                 \"-addresstype=legacy\",\n             ],\n             [\n                 \"-acceptnonstdtxn=1\",\n-                \"-segwitheight=432\",\n+                \"-testactivationheight=segwit@432\",\n                 \"-addresstype=legacy\",\n             ],\n         ]"
      },
      {
        "sha": "3c33b895359f1369046f25c9f0e181dc8a0eee05",
        "filename": "test/functional/p2p_segwit.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faad1e5ffda255aecf1b0ea2152cd4f6805e678f/test/functional/p2p_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faad1e5ffda255aecf1b0ea2152cd4f6805e678f/test/functional/p2p_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_segwit.py?ref=faad1e5ffda255aecf1b0ea2152cd4f6805e678f",
        "patch": "@@ -192,8 +192,8 @@ def set_test_params(self):\n         self.num_nodes = 2\n         # This test tests SegWit both pre and post-activation, so use the normal BIP9 activation.\n         self.extra_args = [\n-            [\"-acceptnonstdtxn=1\", \"-segwitheight={}\".format(SEGWIT_HEIGHT), \"-whitelist=noban@127.0.0.1\"],\n-            [\"-acceptnonstdtxn=0\", \"-segwitheight={}\".format(SEGWIT_HEIGHT)],\n+            [\"-acceptnonstdtxn=1\", f\"-testactivationheight=segwit@{SEGWIT_HEIGHT}\", \"-whitelist=noban@127.0.0.1\"],\n+            [\"-acceptnonstdtxn=0\", f\"-testactivationheight=segwit@{SEGWIT_HEIGHT}\"],\n         ]\n         self.supports_cli = False\n "
      }
    ]
  },
  {
    "sha": "fa4db8671bb604e11b43a837f91de8866226f166",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTRkYjg2NzFiYjYwNGUxMWI0M2E4MzdmOTFkZTg4NjYyMjZmMTY2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-08-27T14:53:11Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-09-16T16:53:04Z"
      },
      "message": "test: Activate all regtest softforks at height 1, unless overridden",
      "tree": {
        "sha": "b48353484a513bdb439d937aed38946999be8fcd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b48353484a513bdb439d937aed38946999be8fcd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa4db8671bb604e11b43a837f91de8866226f166",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhT6Qv+LhzkRLhA0fMYRa5BCWgr9phNnnOKWZF7oCu2ERujgT9Hnw7fjrv4ksII\nAJPjzvjVrgFgG//grt4eXDrTH1QI+kpaC5TNlaRvcWIFmq6lPsdOCjAujxOz+8V3\nqtscrb+PAnpY9WuisfMtwvxJDwS2FcpGs6BCLSW52LRB4Q/CCfv1i/4dTEqKm5tY\ncJ0yF8UnvsQUCKowUnKpfpzigVHYAl3jMCOlt5+ownBV+O1wWskG82s9V2lQrPLx\ntTg2HjPSNXNK3MfXoXY1pJmp/23RsrUu4clO7dYBi0uhNd8NnpBPA3IxwRZF+zCB\nc6NWx3bIHxWdhzL4Cu/QnkYRLgIB4iGrpZuyKWD5rgK92OZYMuzRK04CUClIedwp\n5c74vPZyT7xijvoGdHKbqrlIARvIOpvnKtjhyXn7bJeL54STGxOjz9c8JnivEuMX\n2xj2K5D7fiQJiWg26b18keNn9JBIROl9EuMzcFU7vBgbHyYKx+LrygyzZTMLVrMV\nteYwY6o1\n=1gsC\n-----END PGP SIGNATURE-----",
        "payload": "tree b48353484a513bdb439d937aed38946999be8fcd\nparent faad1e5ffda255aecf1b0ea2152cd4f6805e678f\nauthor MarcoFalke <falke.marco@gmail.com> 1630075991 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1631811184 +0200\n\ntest: Activate all regtest softforks at height 1, unless overridden\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4db8671bb604e11b43a837f91de8866226f166",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa4db8671bb604e11b43a837f91de8866226f166",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4db8671bb604e11b43a837f91de8866226f166/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "faad1e5ffda255aecf1b0ea2152cd4f6805e678f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faad1e5ffda255aecf1b0ea2152cd4f6805e678f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faad1e5ffda255aecf1b0ea2152cd4f6805e678f"
      }
    ],
    "stats": {
      "total": 96,
      "additions": 52,
      "deletions": 44
    },
    "files": [
      {
        "sha": "3bdc539bbca6315119a52ddaa7b7c2396ba2306a",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4db8671bb604e11b43a837f91de8866226f166/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4db8671bb604e11b43a837f91de8866226f166/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=fa4db8671bb604e11b43a837f91de8866226f166",
        "patch": "@@ -109,10 +109,8 @@ Tests\n -----\n \n - For the `regtest` network the activation heights of several softforks were\n-  changed.\n-  * BIP 34 (blockheight in coinbase) from 500 to 2 (#16333)\n-  * BIP 66 (DERSIG) from 1251 to 102 (#22632)\n-  * BIP 65 (CLTV) from 1351 to 111 (#21862)\n+  set to block height 1. They can be changed by the runtime setting\n+  `-testactivationheight=name@height`. (#22818)\n \n Credits\n ======="
      },
      {
        "sha": "fdee64c529fa9445736545684ec3cf8b154b7586",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 5,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4db8671bb604e11b43a837f91de8866226f166/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4db8671bb604e11b43a837f91de8866226f166/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=fa4db8671bb604e11b43a837f91de8866226f166",
        "patch": "@@ -390,12 +390,12 @@ class CRegTestParams : public CChainParams {\n         consensus.signet_challenge.clear();\n         consensus.nSubsidyHalvingInterval = 150;\n         consensus.BIP16Exception = uint256();\n-        consensus.BIP34Height = 2; // BIP34 activated on regtest (Block at height 1 not enforced for testing purposes)\n+        consensus.BIP34Height = 1; // Always active unless overridden\n         consensus.BIP34Hash = uint256();\n-        consensus.BIP65Height = 111; // BIP65 activated on regtest (Block at height 110 and earlier not enforced for testing purposes)\n-        consensus.BIP66Height = 102; // BIP66 activated on regtest (Block at height 101 and earlier not enforced for testing purposes)\n-        consensus.CSVHeight = 432; // CSV activated on regtest (Used in rpc activation tests)\n-        consensus.SegwitHeight = 0; // SEGWIT is always activated on regtest unless overridden\n+        consensus.BIP65Height = 1;  // Always active unless overridden\n+        consensus.BIP66Height = 1;  // Always active unless overridden\n+        consensus.CSVHeight = 1;    // Always active unless overridden\n+        consensus.SegwitHeight = 1; // Always active unless overridden\n         consensus.MinBIP9WarningHeight = 0;\n         consensus.powLimit = uint256S(\"7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n@@ -502,6 +502,14 @@ static void MaybeUpdateHeights(const ArgsManager& args, Consensus::Params& conse\n         }\n         if (name == \"segwit\") {\n             consensus.SegwitHeight = int{height};\n+        } else if (name == \"bip34\") {\n+            consensus.BIP34Height = int{height};\n+        } else if (name == \"dersig\") {\n+            consensus.BIP66Height = int{height};\n+        } else if (name == \"cltv\") {\n+            consensus.BIP65Height = int{height};\n+        } else if (name == \"csv\") {\n+            consensus.CSVHeight = int{height};\n         } else {\n             throw std::runtime_error(strprintf(\"Invalid name (%s) for -testactivationheight=name@height.\", arg));\n         }"
      },
      {
        "sha": "dc484f5c0356a0b8a65bf4fb5c2ed84778b29a4a",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4db8671bb604e11b43a837f91de8866226f166/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4db8671bb604e11b43a837f91de8866226f166/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=fa4db8671bb604e11b43a837f91de8866226f166",
        "patch": "@@ -20,7 +20,7 @@ void SetupChainParamsBaseOptions(ArgsManager& argsman)\n     argsman.AddArg(\"-chain=<chain>\", \"Use the chain <chain> (default: main). Allowed values: main, test, signet, regtest\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-regtest\", \"Enter regression test mode, which uses a special chain in which blocks can be solved instantly. \"\n                  \"This is intended for regression testing tools and app development. Equivalent to -chain=regtest.\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n-    argsman.AddArg(\"-testactivationheight=name@height.\", \"Set the activation height of 'name'. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-testactivationheight=name@height.\", \"Set the activation height of 'name' (segwit, bip34, dersig, cltv, csv). (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-vbparams=deployment:start:end[:min_activation_height]\", \"Use given start/end times and min_activation_height for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-signet\", \"Use the signet chain. Equivalent to -chain=signet. Note that the network is defined by the -signetchallenge parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);"
      },
      {
        "sha": "afb3ad0cfd06be0e1c8ef074943b9e2bbe0a230f",
        "filename": "src/test/txvalidationcache_tests.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4db8671bb604e11b43a837f91de8866226f166/src/test/txvalidationcache_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4db8671bb604e11b43a837f91de8866226f166/src/test/txvalidationcache_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/txvalidationcache_tests.cpp?ref=fa4db8671bb604e11b43a837f91de8866226f166",
        "patch": "@@ -13,14 +13,19 @@\n \n #include <boost/test/unit_test.hpp>\n \n+struct Dersig100Setup : public TestChain100Setup {\n+    Dersig100Setup()\n+        : TestChain100Setup{{\"-testactivationheight=dersig@102\"}} {}\n+};\n+\n bool CheckInputScripts(const CTransaction& tx, TxValidationState& state,\n                        const CCoinsViewCache& inputs, unsigned int flags, bool cacheSigStore,\n                        bool cacheFullScriptStore, PrecomputedTransactionData& txdata,\n                        std::vector<CScriptCheck>* pvChecks) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n BOOST_AUTO_TEST_SUITE(txvalidationcache_tests)\n \n-BOOST_FIXTURE_TEST_CASE(tx_mempool_block_doublespend, TestChain100Setup)\n+BOOST_FIXTURE_TEST_CASE(tx_mempool_block_doublespend, Dersig100Setup)\n {\n     // Make sure skipping validation of transactions that were\n     // validated going into the memory pool does not allow\n@@ -153,7 +158,7 @@ static void ValidateCheckInputsForAllFlags(const CTransaction &tx, uint32_t fail\n     }\n }\n \n-BOOST_FIXTURE_TEST_CASE(checkinputs_test, TestChain100Setup)\n+BOOST_FIXTURE_TEST_CASE(checkinputs_test, Dersig100Setup)\n {\n     // Test that passing CheckInputScripts with one set of script flags doesn't imply\n     // that we would pass again with a different set of flags."
      },
      {
        "sha": "ee2c71cd42d6de21876a21bf646735b97ae9cd75",
        "filename": "test/functional/feature_bip68_sequence.py",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4db8671bb604e11b43a837f91de8866226f166/test/functional/feature_bip68_sequence.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4db8671bb604e11b43a837f91de8866226f166/test/functional/feature_bip68_sequence.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_bip68_sequence.py?ref=fa4db8671bb604e11b43a837f91de8866226f166",
        "patch": "@@ -41,8 +41,14 @@ class BIP68Test(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n         self.extra_args = [\n-            [\"-acceptnonstdtxn=1\"],\n-            [\"-acceptnonstdtxn=0\"],\n+            [\n+                '-testactivationheight=csv@432',\n+                \"-acceptnonstdtxn=1\",\n+            ],\n+            [\n+                '-testactivationheight=csv@432',\n+                \"-acceptnonstdtxn=0\",\n+            ],\n         ]\n \n     def skip_test_if_missing_module(self):"
      },
      {
        "sha": "b06ea8542bdc44081ba52b663140f23e25672697",
        "filename": "test/functional/feature_block.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4db8671bb604e11b43a837f91de8866226f166/test/functional/feature_block.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4db8671bb604e11b43a837f91de8866226f166/test/functional/feature_block.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_block.py?ref=fa4db8671bb604e11b43a837f91de8866226f166",
        "patch": "@@ -82,7 +82,10 @@ class FullBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n-        self.extra_args = [['-acceptnonstdtxn=1']]  # This is a consensus block test, we don't care about tx policy\n+        self.extra_args = [[\n+            '-acceptnonstdtxn=1',  # This is a consensus block test, we don't care about tx policy\n+            '-testactivationheight=bip34@2',\n+        ]]\n \n     def run_test(self):\n         node = self.nodes[0]  # convenience reference to the node"
      },
      {
        "sha": "3dc858f5d23d30d3c2b8262d772a98bff513246c",
        "filename": "test/functional/feature_cltv.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4db8671bb604e11b43a837f91de8866226f166/test/functional/feature_cltv.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4db8671bb604e11b43a837f91de8866226f166/test/functional/feature_cltv.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_cltv.py?ref=fa4db8671bb604e11b43a837f91de8866226f166",
        "patch": "@@ -8,7 +8,6 @@\n \"\"\"\n \n from test_framework.blocktools import (\n-    CLTV_HEIGHT,\n     create_block,\n     create_coinbase,\n )\n@@ -76,10 +75,14 @@ def cltv_validate(tx, height):\n     cltv_modify_tx(tx, prepend_scriptsig=scheme[0], nsequence=scheme[1], nlocktime=scheme[2])\n \n \n+CLTV_HEIGHT = 111\n+\n+\n class BIP65Test(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.extra_args = [[\n+            f'-testactivationheight=cltv@{CLTV_HEIGHT}',\n             '-whitelist=noban@127.0.0.1',\n             '-par=1',  # Use only one script thread to get the exact reject reason for testing\n             '-acceptnonstdtxn=1',  # cltv_invalidate is nonstandard"
      },
      {
        "sha": "5255b13bd19e1586030eef14757d5238ac38e906",
        "filename": "test/functional/feature_csv_activation.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4db8671bb604e11b43a837f91de8866226f166/test/functional/feature_csv_activation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4db8671bb604e11b43a837f91de8866226f166/test/functional/feature_csv_activation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_csv_activation.py?ref=fa4db8671bb604e11b43a837f91de8866226f166",
        "patch": "@@ -41,7 +41,6 @@\n import time\n \n from test_framework.blocktools import (\n-    CSV_ACTIVATION_HEIGHT,\n     create_block,\n     create_coinbase,\n )\n@@ -89,12 +88,16 @@ def all_rlt_txs(txs):\n     return [tx['tx'] for tx in txs]\n \n \n+CSV_ACTIVATION_HEIGHT = 432\n+\n+\n class BIP68_112_113Test(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n         self.extra_args = [[\n             '-whitelist=noban@127.0.0.1',\n+            f'-testactivationheight=csv@{CSV_ACTIVATION_HEIGHT}',\n             '-par=1',  # Use only one script thread to get the exact reject reason for testing\n         ]]\n         self.supports_cli = False"
      },
      {
        "sha": "28aff1f2f99715dc09610e3037e062f1aa6506ad",
        "filename": "test/functional/feature_dersig.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4db8671bb604e11b43a837f91de8866226f166/test/functional/feature_dersig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4db8671bb604e11b43a837f91de8866226f166/test/functional/feature_dersig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_dersig.py?ref=fa4db8671bb604e11b43a837f91de8866226f166",
        "patch": "@@ -8,7 +8,6 @@\n \"\"\"\n \n from test_framework.blocktools import (\n-    DERSIG_HEIGHT,\n     create_block,\n     create_coinbase,\n )\n@@ -42,10 +41,14 @@ def unDERify(tx):\n     tx.vin[0].scriptSig = CScript(newscript)\n \n \n+DERSIG_HEIGHT = 102\n+\n+\n class BIP66Test(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.extra_args = [[\n+            f'-testactivationheight=dersig@{DERSIG_HEIGHT}',\n             '-whitelist=noban@127.0.0.1',\n             '-par=1',  # Use only one script thread to get the exact log msg for testing\n         ]]"
      },
      {
        "sha": "0eba74e4693558e3c841a52751725d9760127223",
        "filename": "test/functional/rpc_blockchain.py",
        "status": "modified",
        "additions": 5,
        "deletions": 7,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4db8671bb604e11b43a837f91de8866226f166/test/functional/rpc_blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4db8671bb604e11b43a837f91de8866226f166/test/functional/rpc_blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_blockchain.py?ref=fa4db8671bb604e11b43a837f91de8866226f166",
        "patch": "@@ -27,8 +27,6 @@\n \n from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.blocktools import (\n-    CLTV_HEIGHT,\n-    DERSIG_HEIGHT,\n     create_block,\n     create_coinbase,\n     TIME_GENESIS_BLOCK,\n@@ -142,11 +140,11 @@ def _test_getblockchaininfo(self):\n         assert_greater_than(res['size_on_disk'], 0)\n \n         assert_equal(res['softforks'], {\n-            'bip34': {'type': 'buried', 'active': True, 'height': 2},\n-            'bip66': {'type': 'buried', 'active': True, 'height': DERSIG_HEIGHT},\n-            'bip65': {'type': 'buried', 'active': True, 'height': CLTV_HEIGHT},\n-            'csv': {'type': 'buried', 'active': False, 'height': 432},\n-            'segwit': {'type': 'buried', 'active': True, 'height': 0},\n+            'bip34': {'type': 'buried', 'active': True, 'height': 1},\n+            'bip66': {'type': 'buried', 'active': True, 'height': 1},\n+            'bip65': {'type': 'buried', 'active': True, 'height': 1},\n+            'csv': {'type': 'buried', 'active': True, 'height': 1},\n+            'segwit': {'type': 'buried', 'active': True, 'height': 1},\n             'testdummy': {\n                 'type': 'bip9',\n                 'bip9': {"
      },
      {
        "sha": "18abece253897070c1013eabba3b194161733381",
        "filename": "test/functional/rpc_signrawtransaction.py",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4db8671bb604e11b43a837f91de8866226f166/test/functional/rpc_signrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4db8671bb604e11b43a837f91de8866226f166/test/functional/rpc_signrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_signrawtransaction.py?ref=fa4db8671bb604e11b43a837f91de8866226f166",
        "patch": "@@ -6,7 +6,6 @@\n \n from test_framework.blocktools import (\n     COINBASE_MATURITY,\n-    CSV_ACTIVATION_HEIGHT,\n )\n from test_framework.address import (\n     script_to_p2sh,\n@@ -18,7 +17,6 @@\n     assert_equal,\n     assert_raises_rpc_error,\n     find_vout_for_address,\n-    generate_to_height,\n )\n from test_framework.messages import (\n     CTxInWitness,\n@@ -273,7 +271,6 @@ def test_signing_with_csv(self):\n         getcontext().prec = 8\n \n         # Make sure CSV is active\n-        generate_to_height(self, self.nodes[0], CSV_ACTIVATION_HEIGHT)\n         assert self.nodes[0].getblockchaininfo()['softforks']['csv']['active']\n \n         # Create a P2WSH script with CSV"
      },
      {
        "sha": "6de372cd8e040a38777b0a6e99bcb13ac89e77ba",
        "filename": "test/functional/test_framework/blocktools.py",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4db8671bb604e11b43a837f91de8866226f166/test/functional/test_framework/blocktools.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4db8671bb604e11b43a837f91de8866226f166/test/functional/test_framework/blocktools.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/blocktools.py?ref=fa4db8671bb604e11b43a837f91de8866226f166",
        "patch": "@@ -53,11 +53,6 @@\n # Coinbase transaction outputs can only be spent after this number of new blocks (network rule)\n COINBASE_MATURITY = 100\n \n-# Soft-fork activation heights\n-DERSIG_HEIGHT = 102  # BIP 66\n-CLTV_HEIGHT = 111  # BIP 65\n-CSV_ACTIVATION_HEIGHT = 432\n-\n # From BIP141\n WITNESS_COMMITMENT_HEADER = b\"\\xaa\\x21\\xa9\\xed\"\n "
      },
      {
        "sha": "ea5c641b4a2d5f9d45faad78190c3812962d7782",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4db8671bb604e11b43a837f91de8866226f166/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4db8671bb604e11b43a837f91de8866226f166/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=fa4db8671bb604e11b43a837f91de8866226f166",
        "patch": "@@ -560,17 +560,6 @@ def mine_large_block(test_framework, node, utxos=None):\n     test_framework.generate(node, 1)\n \n \n-def generate_to_height(test_framework, node, target_height):\n-    \"\"\"Generates blocks until a given target block height has been reached.\n-       To prevent timeouts, only up to 200 blocks are generated per RPC call.\n-       Can be used to activate certain soft-forks (e.g. CSV, CLTV).\"\"\"\n-    current_height = node.getblockcount()\n-    while current_height < target_height:\n-        nblocks = min(200, target_height - current_height)\n-        current_height += len(test_framework.generate(node, nblocks))\n-    assert_equal(node.getblockcount(), target_height)\n-\n-\n def find_vout_for_address(node, txid, addr):\n     \"\"\"\n     Locate the vout index of the given transaction sending to the"
      }
    ]
  }
]