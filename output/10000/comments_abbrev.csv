laanwj,2017-03-15T10:16:23Z,"To be clear: this happens only happens while syncing a **directory** handle in `SyncDirIfManifest()`, syncing normal fds must still succeed.\n\n> It is unclear how to implement that easily though since we don't have access to any logger here.\n\nI'd say we should warn *once* when this happens, that data syncing can not be guaranteed over network filesystems.\n\nEven if it succeeds all that f",https://github.com/bitcoin/bitcoin/pull/10000#issuecomment-286698857,286698857,
luke-jr,2017-03-15T10:33:17Z,Shouldn't we at least log a warning in this case? Maybe even fail if pruning is enabled? (Presumably it means a crash is likely to corrupt the index?),https://github.com/bitcoin/bitcoin/pull/10000#issuecomment-286702837,286702837,
NicolasDorier,2017-03-15T10:40:28Z,"It should not crash. There is reasons to use shared folder, one is in my posted issue. \nIf there is a corruption, then the user need to reindex. This is strictly better than just preventing to run at all.\n\nI agree for a warning. We can attempt fsync into bitcoin code on a dummy folder to see if it is enabled, and if not, provide a warning.",https://github.com/bitcoin/bitcoin/pull/10000#issuecomment-286704506,286704506,
luke-jr,2017-03-15T10:44:37Z,"Pruning nodes don't have data to reindex from. I know if I downloaded 100 GB, and then had to re-do the download due to this, I'd be pretty annoyed... Better to find out sooner so I can use a different filesystem and avoid the re-download.",https://github.com/bitcoin/bitcoin/pull/10000#issuecomment-286705433,286705433,
laanwj,2017-03-15T10:52:54Z,"No, it should never crash/fail on this. If people run a datadirectory on a network FS they take some extra risk. There's nothing that we can do in that case (apart from warn).",https://github.com/bitcoin/bitcoin/pull/10000#issuecomment-286707287,286707287,
laanwj,2017-03-15T10:55:07Z,"> I agree for a warning. We can attempt fsync into bitcoin code on a dummy folder to see if it is enabled, and if not, provide a warning.\n\nYeah - maybe just try fsync() on the data directory at startup? No need even to make a dummy dir.",https://github.com/bitcoin/bitcoin/pull/10000#issuecomment-286707837,286707837,
NicolasDorier,2017-03-15T13:13:18Z,"for using `fsync` on the data directory I need to use `LEVELDB_PLATFORM_WINDOWS` and `port.h` of level db in `dbwrapper.h` it feels dirty but I do not see another way. Any suggestion ?\n\nAnother way is to test in `DB::Open`, log the warning, and then make special case in the `CBitcoinLevelDBLogger` that if the log message start is ""Warning, fsync directory disabled..."", it should log as error. ",https://github.com/bitcoin/bitcoin/pull/10000#issuecomment-286736892,286736892,
laanwj,2017-03-15T14:42:57Z,"> for using fsync on the data directory I need to use LEVELDB_PLATFORM_WINDOWS and port.h of level db in dbwrapper.h it feels dirty but I do not see another way. Any suggestion ?\n\nTo do that, best is probably to check separately `fsync()` is available in `configure.ac`. LevelDB compilation flags are not available while compiling our files.\n\n>Another way is to test in DB::Open, log the warn",https://github.com/bitcoin/bitcoin/pull/10000#issuecomment-286763118,286763118,
NicolasDorier,2017-03-16T09:25:04Z,"The easiest would be prefixed log.\nI am wondering if logging it really matter actually. As it is failure of fsync happens only if it is a folder. fdatasync works as expected.\n\nThe fsync on a folder is only done if Sync is called on a MANIFEST file. Which seems to be rather rare. Will check my assertion soon.",https://github.com/bitcoin/bitcoin/pull/10000#issuecomment-287001223,287001223,
laanwj,2017-03-16T10:37:26Z,"> The fsync on a folder is only done if Sync is called on a MANIFEST file. Which seems to be rather rare. Will check my assertion soon.\n\nThe Linux manpage says\n\n>   Calling fsync() does not necessarily ensure that the entry in the directory containing the file has also reached disk.  For that an explicit fsync() on a file descriptor for the directory  is also needed.\n\nSo this seems onl",https://github.com/bitcoin/bitcoin/pull/10000#issuecomment-287018567,287018567,
NicolasDorier,2017-03-16T11:26:45Z,"So I think we do not really to show a log as this is rare occurence. (I want to still check that with dbcache to 0 though)\n\nI also want to note also that on windows, running bitcoin core from a shared SMB folder works fine.",https://github.com/bitcoin/bitcoin/pull/10000#issuecomment-287029682,287029682,
NicolasDorier,2017-03-17T08:08:03Z,"I think in any case we should merge it. Windows version works fine on SMB file system, only the linux version crash.",https://github.com/bitcoin/bitcoin/pull/10000#issuecomment-287291986,287291986,
laanwj,2017-03-17T08:39:45Z,@NicolasDorier I agree,https://github.com/bitcoin/bitcoin/pull/10000#issuecomment-287297385,287297385,
marukka,2017-03-17T10:00:41Z,@NicolasDorier What exactly are you doing to get the Windows version to work on a SMB share? In bug #10018 I had the exact opposite experience using a SMB share from a Server 2016 File Server Failover Cluster with a Server 2016 Remote Desktop Services server publishing Bitcoin Core as a RemoteApp. Did you map the share as a drive letter as opposed to using a UNC path?,https://github.com/bitcoin/bitcoin/pull/10000#issuecomment-287313721,287313721,
NicolasDorier,2017-03-17T10:44:35Z,"> Did you map the share as a drive letter as opposed to using a UNC path?\n\nYes I did. Indeed // path did not work, I think this is why I did it.",https://github.com/bitcoin/bitcoin/pull/10000#issuecomment-287322707,287322707,
NicolasDorier,2017-03-18T14:42:24Z,"Where to ACK that, here or in https://github.com/bitcoin-core/leveldb/pull/16 ?",https://github.com/bitcoin/bitcoin/pull/10000#issuecomment-287550478,287550478,
NicolasDorier,2017-03-21T11:12:49Z,merged on https://github.com/bitcoin-core/leveldb/pull/16,https://github.com/bitcoin/bitcoin/pull/10000#issuecomment-288047362,288047362,
