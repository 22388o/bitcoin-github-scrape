[
  {
    "sha": "51e2cd322cfc7271af309e3a2243448a2ec0cad4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MWUyY2QzMjJjZmM3MjcxYWYzMDllM2EyMjQzNDQ4YTJlYzBjYWQ0",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-11-30T21:13:12Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-11-30T21:38:07Z"
      },
      "message": "Have CalculateMaximumSignedTxSize also compute tx weight",
      "tree": {
        "sha": "60b67cc4ca0f3a41604fe4fee8f6af54111f983c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/60b67cc4ca0f3a41604fe4fee8f6af54111f983c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51e2cd322cfc7271af309e3a2243448a2ec0cad4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51e2cd322cfc7271af309e3a2243448a2ec0cad4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/51e2cd322cfc7271af309e3a2243448a2ec0cad4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51e2cd322cfc7271af309e3a2243448a2ec0cad4/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "81d5af42f4dba5b68a597536cad7f61894dc22a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81d5af42f4dba5b68a597536cad7f61894dc22a3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/81d5af42f4dba5b68a597536cad7f61894dc22a3"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 15,
      "deletions": 9
    },
    "files": [
      {
        "sha": "0d4612a2a7fbebcc54bbcc5c4378477779a27a71",
        "filename": "src/wallet/feebumper.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51e2cd322cfc7271af309e3a2243448a2ec0cad4/src/wallet/feebumper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51e2cd322cfc7271af309e3a2243448a2ec0cad4/src/wallet/feebumper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/feebumper.cpp?ref=51e2cd322cfc7271af309e3a2243448a2ec0cad4",
        "patch": "@@ -190,7 +190,7 @@ Result CreateRateBumpTransaction(CWallet& wallet, const uint256& txid, const CCo\n     if (coin_control.m_feerate) {\n         // The user provided a feeRate argument.\n         // We calculate this here to avoid compiler warning on the cs_wallet lock\n-        const int64_t maxTxSize = CalculateMaximumSignedTxSize(*wtx.tx, &wallet);\n+        const int64_t maxTxSize = CalculateMaximumSignedTxSize(*wtx.tx, &wallet).first;\n         Result res = CheckFeeRate(wallet, wtx, *new_coin_control.m_feerate, maxTxSize, errors);\n         if (res != Result::OK) {\n             return res;"
      },
      {
        "sha": "141842d9213ec92479f9f7d4c0f597bf15e12dfb",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 6,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51e2cd322cfc7271af309e3a2243448a2ec0cad4/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51e2cd322cfc7271af309e3a2243448a2ec0cad4/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=51e2cd322cfc7271af309e3a2243448a2ec0cad4",
        "patch": "@@ -1594,14 +1594,15 @@ bool CWallet::ImportScriptPubKeys(const std::string& label, const std::set<CScri\n     return true;\n }\n \n-int64_t CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *wallet, bool use_max_sig)\n+// Returns pair of vsize and weight\n+std::pair<int64_t, int64_t> CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *wallet, bool use_max_sig)\n {\n     std::vector<CTxOut> txouts;\n     for (const CTxIn& input : tx.vin) {\n         const auto mi = wallet->mapWallet.find(input.prevout.hash);\n         // Can not estimate size without knowing the input details\n         if (mi == wallet->mapWallet.end()) {\n-            return -1;\n+            return std::make_pair(-1, -1);\n         }\n         assert(input.prevout.n < mi->second.tx->vout.size());\n         txouts.emplace_back(mi->second.tx->vout[input.prevout.n]);\n@@ -1610,13 +1611,16 @@ int64_t CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *wall\n }\n \n // txouts needs to be in the order of tx.vin\n-int64_t CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *wallet, const std::vector<CTxOut>& txouts, bool use_max_sig)\n+std::pair<int64_t, int64_t> CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *wallet, const std::vector<CTxOut>& txouts, bool use_max_sig)\n {\n     CMutableTransaction txNew(tx);\n     if (!wallet->DummySignTx(txNew, txouts, use_max_sig)) {\n-        return -1;\n+        return std::make_pair(-1, -1);\n     }\n-    return GetVirtualTransactionSize(CTransaction(txNew));\n+    CTransaction ctx(txNew);\n+    int64_t vsize = GetVirtualTransactionSize(ctx);\n+    int64_t weight = GetTransactionWeight(ctx);\n+    return std::make_pair(vsize, weight);\n }\n \n int CalculateMaximumSignedInputSize(const CTxOut& txout, const CWallet* wallet, bool use_max_sig)\n@@ -2770,6 +2774,7 @@ bool CWallet::CreateTransactionInternal(\n     CMutableTransaction txNew;\n     FeeCalculation feeCalc;\n     CAmount nFeeNeeded;\n+    std::pair<int64_t, int64_t> tx_sizes;\n     int nBytes;\n     {\n         std::set<CInputCoin> setCoins;\n@@ -2952,7 +2957,8 @@ bool CWallet::CreateTransactionInternal(\n                     txNew.vin.push_back(CTxIn(coin.outpoint,CScript()));\n                 }\n \n-                nBytes = CalculateMaximumSignedTxSize(CTransaction(txNew), this, coin_control.fAllowWatchOnly);\n+                tx_sizes = CalculateMaximumSignedTxSize(CTransaction(txNew), this, coin_control.fAllowWatchOnly);\n+                nBytes = tx_sizes.first;\n                 if (nBytes < 0) {\n                     error = _(\"Signing transaction failed\");\n                     return false;"
      },
      {
        "sha": "c491cb2084b7c44481dc50f09ba729c5ecd458b9",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51e2cd322cfc7271af309e3a2243448a2ec0cad4/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51e2cd322cfc7271af309e3a2243448a2ec0cad4/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=51e2cd322cfc7271af309e3a2243448a2ec0cad4",
        "patch": "@@ -1321,8 +1321,8 @@ class WalletRescanReserver\n // Use DummySignatureCreator, which inserts 71 byte signatures everywhere.\n // NOTE: this requires that all inputs must be in mapWallet (eg the tx should\n // be IsAllFromMe).\n-int64_t CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *wallet, bool use_max_sig = false) EXCLUSIVE_LOCKS_REQUIRED(wallet->cs_wallet);\n-int64_t CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *wallet, const std::vector<CTxOut>& txouts, bool use_max_sig = false);\n+std::pair<int64_t, int64_t> CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *wallet, bool use_max_sig = false) EXCLUSIVE_LOCKS_REQUIRED(wallet->cs_wallet);\n+std::pair<int64_t, int64_t> CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *wallet, const std::vector<CTxOut>& txouts, bool use_max_sig = false);\n \n //! Add wallet name to persistent configuration so it will be loaded on startup.\n bool AddWalletSetting(interfaces::Chain& chain, const std::string& wallet_name);"
      }
    ]
  },
  {
    "sha": "3e69939b78d0143d514c5d9b6c6a9844c9bb901c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZTY5OTM5Yjc4ZDAxNDNkNTE0YzVkOWI2YzZhOTg0NGM5YmI5MDFj",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-11-30T21:13:36Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-11-30T21:39:20Z"
      },
      "message": "Fail if maximum weight is too large\n\nOur max weight check in CreateTransaction only worked if the transaction\nwas fully signed. However if we are funding a transaction, it is\npossible that the tx weight will be too large for a standard tx. In that\ncase, we should also fail. So we use the tx weight returned by\nCalculateMaximumSignedTxSize and check against the limit for those\ntransactions.",
      "tree": {
        "sha": "6732f0059cd7f2bdbc8e95a23044f4573fe7572e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6732f0059cd7f2bdbc8e95a23044f4573fe7572e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3e69939b78d0143d514c5d9b6c6a9844c9bb901c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e69939b78d0143d514c5d9b6c6a9844c9bb901c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3e69939b78d0143d514c5d9b6c6a9844c9bb901c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e69939b78d0143d514c5d9b6c6a9844c9bb901c/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "51e2cd322cfc7271af309e3a2243448a2ec0cad4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51e2cd322cfc7271af309e3a2243448a2ec0cad4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/51e2cd322cfc7271af309e3a2243448a2ec0cad4"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3faa038df46b1677689f3bc65f6c9f57ec419515",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e69939b78d0143d514c5d9b6c6a9844c9bb901c/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e69939b78d0143d514c5d9b6c6a9844c9bb901c/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=3e69939b78d0143d514c5d9b6c6a9844c9bb901c",
        "patch": "@@ -3068,7 +3068,8 @@ bool CWallet::CreateTransactionInternal(\n         tx = MakeTransactionRef(std::move(txNew));\n \n         // Limit size\n-        if (GetTransactionWeight(*tx) > MAX_STANDARD_TX_WEIGHT)\n+        if ((sign && GetTransactionWeight(*tx) > MAX_STANDARD_TX_WEIGHT) ||\n+            (!sign && tx_sizes.second > MAX_STANDARD_TX_WEIGHT))\n         {\n             error = _(\"Transaction too large\");\n             return false;"
      }
    ]
  },
  {
    "sha": "48a0319babb409cf486a9eb7c776810f70b06cb2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OGEwMzE5YmFiYjQwOWNmNDg2YTllYjdjNzc2ODEwZjcwYjA2Y2Iy",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-11-30T20:32:06Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-12-24T17:39:54Z"
      },
      "message": "Add a test that selects too large if BnB is used\n\nIf BnB is used, the test will fail because the transaction is too large.",
      "tree": {
        "sha": "d9bb4ad31ddc7746b75110c871490c972ce94862",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d9bb4ad31ddc7746b75110c871490c972ce94862"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/48a0319babb409cf486a9eb7c776810f70b06cb2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48a0319babb409cf486a9eb7c776810f70b06cb2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/48a0319babb409cf486a9eb7c776810f70b06cb2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48a0319babb409cf486a9eb7c776810f70b06cb2/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3e69939b78d0143d514c5d9b6c6a9844c9bb901c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e69939b78d0143d514c5d9b6c6a9844c9bb901c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3e69939b78d0143d514c5d9b6c6a9844c9bb901c"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 20,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ac7b2148bd661f8b3e7ba92e210eb8a673c1215b",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48a0319babb409cf486a9eb7c776810f70b06cb2/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48a0319babb409cf486a9eb7c776810f70b06cb2/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=48a0319babb409cf486a9eb7c776810f70b06cb2",
        "patch": "@@ -94,6 +94,7 @@ def run_test(self):\n         self.test_address_reuse()\n         self.test_option_subtract_fee_from_outputs()\n         self.test_subtract_fee_with_presets()\n+        self.test_transaction_too_large()\n \n     def test_change_position(self):\n         \"\"\"Ensure setting changePosition in fundraw with an exact match is handled properly.\"\"\"\n@@ -907,5 +908,24 @@ def test_subtract_fee_with_presets(self):\n         signedtx = self.nodes[0].signrawtransactionwithwallet(fundedtx['hex'])\n         self.nodes[0].sendrawtransaction(signedtx['hex'])\n \n+    def test_transaction_too_large(self):\n+        self.log.info(\"Test fundrawtx where BnB solution would result in a too large transaction, but Knapsack would not\")\n+\n+        self.nodes[0].createwallet(\"large\")\n+        wallet = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        recipient = self.nodes[0].get_wallet_rpc(\"large\")\n+        outputs = {}\n+        rawtx = recipient.createrawtransaction([], {wallet.getnewaddress(): 147.99899260})\n+\n+        # Make 1500 0.1 BTC outputs\n+        # The amount that we target for funding is in the BnB range when these outputs are used.\n+        # However if these outputs are selected, the transaction will end up being too large, so it shouldn't use BnB and instead fallback to Knapsack\n+        # but that behavior is not implemented yet. For now we just check that we get an error.\n+        for i in range(0, 1500):\n+            outputs[recipient.getnewaddress()] = 0.1\n+        wallet.sendmany(\"\", outputs)\n+        self.nodes[0].generate(10)\n+        assert_raises_rpc_error(-4, \"Transaction too large\", recipient.fundrawtransaction, rawtx)\n+\n if __name__ == '__main__':\n     RawTransactionsTest().main()"
      }
    ]
  }
]