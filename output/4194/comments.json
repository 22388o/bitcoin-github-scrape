[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43409456",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4194#issuecomment-43409456",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4194",
    "id": 43409456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDA5NDU2",
    "user": {
      "login": "BitcoinPullTester",
      "id": 2110907,
      "node_id": "MDQ6VXNlcjIxMTA5MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BitcoinPullTester",
      "html_url": "https://github.com/BitcoinPullTester",
      "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
      "following_url": "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
      "gists_url": "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
      "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
      "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
      "events_url": "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-17T15:12:16Z",
    "updated_at": "2014-05-17T15:12:16Z",
    "author_association": "NONE",
    "body": "Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/6a248d515831109fc3044f6901a548cf385a592a for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts (please tweak those patches in qa/pull-tester)\n2. It adds/modifies tests which test network rules (thanks for doing that), which conflicts with a patch applied at test time\n3. It does not build on either Linux i386 or Win32 (via MinGW cross compile)\n4. The test suite fails on either Linux i386 or Win32\n5. The block test-cases failed (lookup the first bNN identifier which failed in https://github.com/TheBlueMatt/test-scripts/blob/master/FullBlockTestGenerator.java)\n\nIf you believe this to be in error, please ping BlueMatt on freenode or TheBlueMatt here.\n\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43409456/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43507513",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4194#issuecomment-43507513",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4194",
    "id": 43507513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTA3NTEz",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-19T14:00:50Z",
    "updated_at": "2014-05-19T14:00:50Z",
    "author_association": "MEMBER",
    "body": "What kind of command-line mistakes is this trying to protect against?\nCan we avoid needing to import boost::regex just for this?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43507513/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43512476",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4194#issuecomment-43512476",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4194",
    "id": 43512476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTEyNDc2",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-19T14:41:08Z",
    "updated_at": "2014-05-19T14:41:08Z",
    "author_association": "MEMBER",
    "body": "I've for a long time been wanting to write a simple utility module that would allow command-line options to be written as global objects (initialized with defaults, range information, description), that can be used as variables (and queried for being set or not), and with extra methods to request a list of all, ... to build --help output. It would make things like this trivial.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43512476/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43725045",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4194#issuecomment-43725045",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4194",
    "id": 43725045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzI1MDQ1",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-21T08:06:22Z",
    "updated_at": "2014-05-21T08:06:22Z",
    "author_association": "MEMBER",
    "body": "@sipa I agree with that approach. Though we also have to take care not to overdesign, the current argument handling is really ad-hoc and error prone (and also not thread-safe I think). A new solution should also make it possible to query the currently effective values of all settings. That would be a useful RPC.\n\n(Though, if you spend time coding on bitcoin pleease work on the headers first stuff :-) Someone else can handle this)\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43725045/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43871822",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4194#issuecomment-43871822",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4194",
    "id": 43871822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODcxODIy",
    "user": {
      "login": "kostaz",
      "id": 451660,
      "node_id": "MDQ6VXNlcjQ1MTY2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/451660?u=8cc358d89e4f380e302c5a28c0922ba0ea4a1d59&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kostaz",
      "html_url": "https://github.com/kostaz",
      "followers_url": "https://api.github.com/users/kostaz/followers",
      "following_url": "https://api.github.com/users/kostaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/kostaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kostaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kostaz/subscriptions",
      "organizations_url": "https://api.github.com/users/kostaz/orgs",
      "repos_url": "https://api.github.com/users/kostaz/repos",
      "events_url": "https://api.github.com/users/kostaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kostaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-22T10:35:13Z",
    "updated_at": "2014-05-22T10:35:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "This regex fix was just ad-hoc to fix a bug when I used (unintentionally) wrong parameters.\nI did saw that the whole parameter handling code is the ad-hoc code, but I just wanted to contribute my penny into the development effort.\nWhat do you mean by \"headers first stuff\"?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43871822/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43901298",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4194#issuecomment-43901298",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4194",
    "id": 43901298,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTAxMjk4",
    "user": {
      "login": "leofidus",
      "id": 4348296,
      "node_id": "MDQ6VXNlcjQzNDgyOTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4348296?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leofidus",
      "html_url": "https://github.com/leofidus",
      "followers_url": "https://api.github.com/users/leofidus/followers",
      "following_url": "https://api.github.com/users/leofidus/following{/other_user}",
      "gists_url": "https://api.github.com/users/leofidus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leofidus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leofidus/subscriptions",
      "organizations_url": "https://api.github.com/users/leofidus/orgs",
      "repos_url": "https://api.github.com/users/leofidus/repos",
      "events_url": "https://api.github.com/users/leofidus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leofidus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-22T15:11:42Z",
    "updated_at": "2014-05-22T15:11:42Z",
    "author_association": "NONE",
    "body": "@kostaz I think the headers first part was still directed at sipa. He coded a more efficient block download algorithm that works by downloading the headers of all blocks before downloading the blocks. That allows to download from multiple peers simultaniously and allows for much smarter block download in general. He's submitting that piece for piece because it is so much code to review.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43901298/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44028726",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4194#issuecomment-44028726",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4194",
    "id": 44028726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDI4NzI2",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-23T15:55:00Z",
    "updated_at": "2014-05-23T15:55:00Z",
    "author_association": "MEMBER",
    "body": "Yeah, ignore that comment.\n\nIs there any reason not to immediately die if an unparseable command-line options appears?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44028726/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44432110",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4194#issuecomment-44432110",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4194",
    "id": 44432110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDMyMTEw",
    "user": {
      "login": "kostaz",
      "id": 451660,
      "node_id": "MDQ6VXNlcjQ1MTY2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/451660?u=8cc358d89e4f380e302c5a28c0922ba0ea4a1d59&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kostaz",
      "html_url": "https://github.com/kostaz",
      "followers_url": "https://api.github.com/users/kostaz/followers",
      "following_url": "https://api.github.com/users/kostaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/kostaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kostaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kostaz/subscriptions",
      "organizations_url": "https://api.github.com/users/kostaz/orgs",
      "repos_url": "https://api.github.com/users/kostaz/repos",
      "events_url": "https://api.github.com/users/kostaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kostaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-28T16:35:27Z",
    "updated_at": "2014-05-28T16:35:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "IMHO, it is better to die immediately.\nIt is much worse to run with wrong parameters and, potentially, corrupt anything.\nDo you think I should update it?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44432110/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44434595",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4194#issuecomment-44434595",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4194",
    "id": 44434595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDM0NTk1",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-28T16:53:49Z",
    "updated_at": "2014-05-28T16:53:49Z",
    "author_association": "MEMBER",
    "body": "@kostaz I agree that more thorough argument checking would be useful, but I don't think your current regex-based check is useful. It doesn't protect against the most common errors which seem to be:\n- Mistyped parameter names\n- Invalid values for parameters\n- Using `-parameter value` instead of `-parameter=value`\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44434595/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44463452",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4194#issuecomment-44463452",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4194",
    "id": 44463452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDYzNDUy",
    "user": {
      "login": "kostaz",
      "id": 451660,
      "node_id": "MDQ6VXNlcjQ1MTY2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/451660?u=8cc358d89e4f380e302c5a28c0922ba0ea4a1d59&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kostaz",
      "html_url": "https://github.com/kostaz",
      "followers_url": "https://api.github.com/users/kostaz/followers",
      "following_url": "https://api.github.com/users/kostaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/kostaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kostaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kostaz/subscriptions",
      "organizations_url": "https://api.github.com/users/kostaz/orgs",
      "repos_url": "https://api.github.com/users/kostaz/repos",
      "events_url": "https://api.github.com/users/kostaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kostaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-28T20:57:32Z",
    "updated_at": "2014-05-28T20:57:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fully agree. It was just a quick fix.\nI'd like to redo it in a proper/fuller way.\nIs there anybody working on this stuff already?\nJust trying to avoid effort duplication...\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44463452/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44498315",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4194#issuecomment-44498315",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4194",
    "id": 44498315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDk4MzE1",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-29T06:22:31Z",
    "updated_at": "2014-05-29T06:22:31Z",
    "author_association": "MEMBER",
    "body": "I don't think anyone is working on it. See also #1044 for previous discussion. It would be a larger change that would need a refactoring of the option system.\n\nCurrently the complete list of options, let alone how their values are to be parsed, is not specified in advance. A possible design would be to use some table-based structure like CRPCCommand in `rpcserver.cpp`, with 'actors' that parse/verify the values. The GUI, CLI and daemon then register their own lists of options before the parsing starts.\n\nThere are quite some challenges though;\n- Handling option defaults is non-trivial. Some option settings affect other options defaults (in AppInit2).\n- For the GUI there is a third options source: the QSettings. Both command line options and bitcoind.conf options take precedence over this.\n- `-conf`, `-datadir`, `-testnet`/`-regtest` are difficult to handle properly (as it is possible to specify datadir= in the config file, as well as testnet, which changes the datadir which is respectively cached...), there have been many commits in the past reverting unwanted behavior after changes to argument handling: c61fe44, c52c4e5 (pull #3935, #3844)\n\nIt would be best to make a test framework first, so we can be more sure that there are no regressions.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44498315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44521490",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4194#issuecomment-44521490",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4194",
    "id": 44521490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTIxNDkw",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-29T11:09:29Z",
    "updated_at": "2014-05-29T11:09:29Z",
    "author_association": "MEMBER",
    "body": "Based on some experience with another config framework, I would suggest something like this:\n- Have data types CIntOption, CStringOption, ... that on construction take a name, a description, a default value.\n- Constructing them automatically registers them in a table of known options.\n- Internally they retain their value, and whether or not they were explicitly set.\n- They can be implicitly cast to their \"value\" (so a variable of type CIntOption can be used as an int).\n- They have a Set and SetDefault method, which take a string and convert it to their native data type (which can fail). SetDefault does nothing in case the option is already explicitly set (perhaps by a previous SetDefault).\n- There's a lookup function that finds options with arbitrary names at runtime, by looking them up in the table.\n\nThis means you can replace existing definitions like\n\n```\nint nTransactionFee = DEFAULT_TRANSACTION_FEE;\n```\n\nto\n\n```\nCIntOption nTransactionFee(\"paytxfee\", DEFAULT_TRANSACTION_FEE, \"The relay fee used, blah blah\")\n```\n\nThe startup sequence can just be:\n- Iterate over command-line options, look the options up, and apply SetDefault to them.\n- Open the config file (whose location may have been influenced by the command-line options), look them up, and apply SetDefault to them.\n- Run custom logic for defaults, looking values of some options, and use it to set defaults for others (assuming they haven't been set yet).\n\nI believe this should be safe, as the explicit set/default flag in each option instance corresponds to the current logic associated with an option being present in mapArgs/mapMultiArgs, and the overriding of defaults would work similarly.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44521490/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44965479",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4194#issuecomment-44965479",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4194",
    "id": 44965479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTY1NDc5",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-03T13:41:58Z",
    "updated_at": "2014-06-03T13:41:58Z",
    "author_association": "MEMBER",
    "body": "Closing this pull as a larger redesign is needed to improve argument error reporting than this specific implementation. I've referred to the discussion in this pull from #1044 because of the useful information in case anyone is going to redesign the argument handling.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44965479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]