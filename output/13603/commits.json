[
  {
    "sha": "57889e688dd0987a1e087cd48d216a413127601e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1Nzg4OWU2ODhkZDA5ODdhMWUwODdjZDQ4ZDIxNmE0MTMxMjc2MDFl",
    "commit": {
      "author": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2018-07-06T13:54:03Z"
      },
      "committer": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2018-07-07T12:25:09Z"
      },
      "message": "bitcoin-tx: Stricter check for valid integers\n\nJust calling atoi to convert strings to integers does not check for\nvalid integers very thoroughly; in particular, it just ignores\neverything starting from the first non-numeral character.  Even a string\nlike \"foo\" is fine and silently returns 0.\n\nThis meant that bitcoin-tx would not fail if such a string was passed in\nvarious places where an integer is expected (like the locktime or an\ninput/output index); this means that it would, for instance, silently\naccept a typo and interpret it in an unexpected way.\n\nIn this change, we use ParseInt64 for parsing strings to integers,\nwhich actually verifies that the full string is valid as number.\nNew tests in the bitcoin-util-test cover the new error paths.",
      "tree": {
        "sha": "fcdc718f8cb7f89da4ae4f58895f8b8bd0f6ad7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fcdc718f8cb7f89da4ae4f58895f8b8bd0f6ad7d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57889e688dd0987a1e087cd48d216a413127601e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57889e688dd0987a1e087cd48d216a413127601e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/57889e688dd0987a1e087cd48d216a413127601e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57889e688dd0987a1e087cd48d216a413127601e/comments",
    "author": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0212187fc624ea4a02fc99bc57ebd413499a9ee1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0212187fc624ea4a02fc99bc57ebd413499a9ee1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0212187fc624ea4a02fc99bc57ebd413499a9ee1"
      }
    ],
    "stats": {
      "total": 97,
      "additions": 75,
      "deletions": 22
    },
    "files": [
      {
        "sha": "181e2bb1bc6f575eb43d699acdb9994922eda6b8",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 22,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57889e688dd0987a1e087cd48d216a413127601e/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57889e688dd0987a1e087cd48d216a413127601e/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=57889e688dd0987a1e087cd48d216a413127601e",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -193,27 +193,27 @@ static CAmount ExtractAndValidateValue(const std::string& strValue)\n \n static void MutateTxVersion(CMutableTransaction& tx, const std::string& cmdVal)\n {\n-    int64_t newVersion = atoi64(cmdVal);\n-    if (newVersion < 1 || newVersion > CTransaction::MAX_STANDARD_VERSION)\n-        throw std::runtime_error(\"Invalid TX version requested\");\n+    int64_t newVersion;\n+    if (!ParseInt64(cmdVal, &newVersion) || newVersion < 1 || newVersion > CTransaction::MAX_STANDARD_VERSION)\n+        throw std::runtime_error(\"Invalid TX version requested: '\" + cmdVal + \"'\");\n \n     tx.nVersion = (int) newVersion;\n }\n \n static void MutateTxLocktime(CMutableTransaction& tx, const std::string& cmdVal)\n {\n-    int64_t newLocktime = atoi64(cmdVal);\n-    if (newLocktime < 0LL || newLocktime > 0xffffffffLL)\n-        throw std::runtime_error(\"Invalid TX locktime requested\");\n+    int64_t newLocktime;\n+    if (!ParseInt64(cmdVal, &newLocktime) || newLocktime < 0LL || newLocktime > 0xffffffffLL)\n+        throw std::runtime_error(\"Invalid TX locktime requested: '\" + cmdVal + \"'\");\n \n     tx.nLockTime = (unsigned int) newLocktime;\n }\n \n static void MutateTxRBFOptIn(CMutableTransaction& tx, const std::string& strInIdx)\n {\n     // parse requested index\n-    int inIdx = atoi(strInIdx);\n-    if (inIdx < 0 || inIdx >= (int)tx.vin.size()) {\n+    int64_t inIdx;\n+    if (!ParseInt64(strInIdx, &inIdx) || inIdx < 0 || inIdx >= static_cast<int64_t>(tx.vin.size())) {\n         throw std::runtime_error(\"Invalid TX input index '\" + strInIdx + \"'\");\n     }\n \n@@ -248,10 +248,10 @@ static void MutateTxAddInput(CMutableTransaction& tx, const std::string& strInpu\n     static const unsigned int maxVout = MAX_BLOCK_WEIGHT / (WITNESS_SCALE_FACTOR * minTxOutSz);\n \n     // extract and validate vout\n-    std::string strVout = vStrInputParts[1];\n-    int vout = atoi(strVout);\n-    if ((vout < 0) || (vout > (int)maxVout))\n-        throw std::runtime_error(\"invalid TX input vout\");\n+    const std::string& strVout = vStrInputParts[1];\n+    int64_t vout;\n+    if (!ParseInt64(strVout, &vout) || vout < 0 || vout > static_cast<int64_t>(maxVout))\n+        throw std::runtime_error(\"invalid TX input vout '\" + strVout + \"'\");\n \n     // extract the optional sequence number\n     uint32_t nSequenceIn=std::numeric_limits<unsigned int>::max();\n@@ -481,10 +481,9 @@ static void MutateTxAddOutScript(CMutableTransaction& tx, const std::string& str\n static void MutateTxDelInput(CMutableTransaction& tx, const std::string& strInIdx)\n {\n     // parse requested deletion index\n-    int inIdx = atoi(strInIdx);\n-    if (inIdx < 0 || inIdx >= (int)tx.vin.size()) {\n-        std::string strErr = \"Invalid TX input index '\" + strInIdx + \"'\";\n-        throw std::runtime_error(strErr.c_str());\n+    int64_t inIdx;\n+    if (!ParseInt64(strInIdx, &inIdx) || inIdx < 0 || inIdx >= static_cast<int64_t>(tx.vin.size())) {\n+        throw std::runtime_error(\"Invalid TX input index '\" + strInIdx + \"'\");\n     }\n \n     // delete input from transaction\n@@ -494,10 +493,9 @@ static void MutateTxDelInput(CMutableTransaction& tx, const std::string& strInId\n static void MutateTxDelOutput(CMutableTransaction& tx, const std::string& strOutIdx)\n {\n     // parse requested deletion index\n-    int outIdx = atoi(strOutIdx);\n-    if (outIdx < 0 || outIdx >= (int)tx.vout.size()) {\n-        std::string strErr = \"Invalid TX output index '\" + strOutIdx + \"'\";\n-        throw std::runtime_error(strErr.c_str());\n+    int64_t outIdx;\n+    if (!ParseInt64(strOutIdx, &outIdx) || outIdx < 0 || outIdx >= static_cast<int64_t>(tx.vout.size())) {\n+        throw std::runtime_error(\"Invalid TX output index '\" + strOutIdx + \"'\");\n     }\n \n     // delete output from transaction\n@@ -593,7 +591,7 @@ static void MutateTxSign(CMutableTransaction& tx, const std::string& flagStr)\n \n             uint256 txid = ParseHashStr(prevOut[\"txid\"].get_str(), \"txid\");\n \n-            int nOut = atoi(prevOut[\"vout\"].getValStr());\n+            const int nOut = prevOut[\"vout\"].get_int();\n             if (nOut < 0)\n                 throw std::runtime_error(\"vout must be positive\");\n "
      },
      {
        "sha": "f2213f4f2e32f0b9f43fa2307723392627fd6121",
        "filename": "test/util/data/bitcoin-util-test.json",
        "status": "modified",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57889e688dd0987a1e087cd48d216a413127601e/test/util/data/bitcoin-util-test.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57889e688dd0987a1e087cd48d216a413127601e/test/util/data/bitcoin-util-test.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/bitcoin-util-test.json?ref=57889e688dd0987a1e087cd48d216a413127601e",
        "patch": "@@ -26,6 +26,12 @@\n     \"output_cmp\": \"blanktxv2.json\",\n     \"description\": \"Creates a blank transaction when nothing is piped into bitcoin-tx (output in json)\"\n   },\n+  { \"exec\": \"./bitcoin-tx\",\n+    \"args\": [\"-create\", \"nversion=1foo\"],\n+    \"return_code\": 1,\n+    \"error_txt\": \"error: Invalid TX version requested\",\n+    \"description\": \"Tests the check for invalid nversion value\"\n+  },\n   { \"exec\": \"./bitcoin-tx\",\n     \"args\": [\"-\", \"delin=1\"],\n     \"input\": \"tx394b54bb.hex\",\n@@ -45,6 +51,13 @@\n     \"error_txt\": \"error: Invalid TX input index '31'\",\n     \"description\": \"Attempts to delete an input with a bad index from a transaction. Expected to fail.\"\n   },\n+  { \"exec\": \"./bitcoin-tx\",\n+    \"args\": [\"-\", \"delin=1foo\"],\n+    \"input\": \"tx394b54bb.hex\",\n+    \"return_code\": 1,\n+    \"error_txt\": \"error: Invalid TX input index\",\n+    \"description\": \"Tests the check for an invalid input index with delin\"\n+  },\n   { \"exec\": \"./bitcoin-tx\",\n     \"args\": [\"-\", \"delout=1\"],\n     \"input\": \"tx394b54bb.hex\",\n@@ -64,6 +77,13 @@\n     \"error_txt\": \"error: Invalid TX output index '2'\",\n     \"description\": \"Attempts to delete an output with a bad index from a transaction. Expected to fail.\"\n   },\n+  { \"exec\": \"./bitcoin-tx\",\n+    \"args\": [\"-\", \"delout=1foo\"],\n+    \"input\": \"tx394b54bb.hex\",\n+    \"return_code\": 1,\n+    \"error_txt\": \"error: Invalid TX output index\",\n+    \"description\": \"Tests the check for an invalid output index with delout\"\n+  },\n   { \"exec\": \"./bitcoin-tx\",\n     \"args\": [\"-\", \"locktime=317000\"],\n     \"input\": \"tx394b54bb.hex\",\n@@ -76,6 +96,29 @@\n     \"output_cmp\": \"tt-locktime317000-out.json\",\n     \"description\": \"Adds an nlocktime to a transaction (output in json)\"\n   },\n+  { \"exec\": \"./bitcoin-tx\",\n+    \"args\": [\"-create\", \"locktime=317000foo\"],\n+    \"return_code\": 1,\n+    \"error_txt\": \"error: Invalid TX locktime requested\",\n+    \"description\": \"Tests the check for invalid locktime value\"\n+  },\n+  { \"exec\": \"./bitcoin-tx\",\n+    \"args\":\n+    [\"-create\",\n+     \"in=5897de6bd6027a475eadd57019d4e6872c396d0716c4875a5f1a6fcfdf385c1f:0\",\n+     \"replaceable=0foo\"],\n+    \"return_code\": 1,\n+    \"error_txt\": \"error: Invalid TX input index\",\n+    \"description\": \"Tests the check for an invalid input index with replaceable\"\n+  },\n+  { \"exec\": \"./bitcoin-tx\",\n+    \"args\":\n+    [\"-create\",\n+     \"in=5897de6bd6027a475eadd57019d4e6872c396d0716c4875a5f1a6fcfdf385c1f:0x\"],\n+    \"return_code\": 1,\n+    \"error_txt\": \"error: invalid TX input vout\",\n+    \"description\": \"Tests the check for an invalid vout value when adding an input\"\n+  },\n   { \"exec\": \"./bitcoin-tx\",\n     \"args\":\n     [\"-create\",\n@@ -225,6 +268,18 @@\n     \"output_cmp\": \"txcreatesignv2.hex\",\n     \"description\": \"Creates a new transaction with a single input and a single output, and then signs the transaction\"\n   },\n+  { \"exec\": \"./bitcoin-tx\",\n+    \"args\":\n+    [\"-create\",\n+      \"in=4d49a71ec9da436f71ec4ee231d04f292a29cd316f598bb7068feccabdc59485:0\",\n+      \"set=privatekeys:[\\\"5HpHagT65TZzG1PH3CSu63k8DbpvD8s5ip4nEB3kEsreAnchuDf\\\"]\",\n+      \"set=prevtxs:[{\\\"txid\\\":\\\"4d49a71ec9da436f71ec4ee231d04f292a29cd316f598bb7068feccabdc59485\\\",\\\"vout\\\":\\\"0foo\\\",\\\"scriptPubKey\\\":\\\"76a91491b24bf9f5288532960ac687abb035127b1d28a588ac\\\"}]\",\n+      \"sign=ALL\",\n+      \"outaddr=0.001:193P6LtvS4nCnkDvM9uXn1gsSRqh4aDAz7\"],\n+    \"return_code\": 1,\n+    \"error_txt\": \"error: prevtxs internal object typecheck fail\",\n+    \"description\": \"Tests the check for invalid vout index in prevtxs for sign\"\n+  },\n   { \"exec\": \"./bitcoin-tx\",\n     \"args\":\n     [\"-create\", \"outpubkey=0:02a5613bd857b7048924264d1e70e08fb2a7e6527d32b7ab1bb993ac59964ff397\", \"nversion=1\"],"
      }
    ]
  }
]