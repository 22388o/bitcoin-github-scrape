jgarzik,2018-07-06T14:58:28Z,"Just use `ParseInt64` ?\n",https://github.com/bitcoin/bitcoin/pull/13603#issuecomment-403059123,403059123,
domob1812,2018-07-06T16:02:38Z,"Makes sense, wasn't aware that `ParseInt64` exists.  I still keep that `ParseInteger` function, though, because it handles the error check.  Otherwise all places where it is used would be more verbose and the code would be less readable (IMHO) - but if you prefer to not have this function at all, I can also do that.",https://github.com/bitcoin/bitcoin/pull/13603#issuecomment-403076337,403076337,
jgarzik,2018-07-06T16:31:38Z,"In most cases here, the error check tends to duplicate another error check at the callsite.\n\nIt is also a bit disappointing that the error message returned to the user regresses from the specific (""invalid TX version"") to less specific (""invalid integer"").",https://github.com/bitcoin/bitcoin/pull/13603#issuecomment-403083936,403083936,
Empact,2018-07-06T22:05:36Z,"Agree using `ParseInt64` directly to retain the current error message would be nicer, particularly if all errors included the invalid string, rather than just half of them.",https://github.com/bitcoin/bitcoin/pull/13603#issuecomment-403158368,403158368,
domob1812,2018-07-07T12:28:53Z,"It is a good point that the callers have already existing (although different) error checks - with this in mind, I agree that using `ParseInt64` directly is good.  I've updated the patch accordingly.  Now all error messages are specific as to which value it is and what is the exact invalid string - this improves also some existing error messages that previously did not show the invalid value.",https://github.com/bitcoin/bitcoin/pull/13603#issuecomment-403212261,403212261,
jgarzik,2018-07-07T12:39:10Z,"LGTM - original-author ACK, though more active devs may have other comments\n\nI'll note that the temporary variables are now only conditionally initialized, not unconditionally initialized.  Should be OK as we unconditionally throw in the uninitialized-var case, but it's something to double-check.",https://github.com/bitcoin/bitcoin/pull/13603#issuecomment-403212855,403212855,
MarcoFalke,2018-07-08T07:48:54Z,utACK 57889e688dd0987a1e087cd48d216a413127601e,https://github.com/bitcoin/bitcoin/pull/13603#issuecomment-403269663,403269663,
laanwj,2018-07-09T18:03:49Z,"utACK 57889e688dd0987a1e087cd48d216a413127601e\nThe conditional initialization looks OK to me, it will never pass the point of initialization in the control flow in case of leaving the value uninitialized.",https://github.com/bitcoin/bitcoin/pull/13603#issuecomment-403568364,403568364,
Empact,2018-07-06T21:00:02Z,This cast and others should be updated.,https://github.com/bitcoin/bitcoin/pull/13603#discussion_r200768261,200768261,src/bitcoin-tx.cpp
