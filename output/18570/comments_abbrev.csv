brakmic,2020-04-09 09:32:42,"> Concept ACK. Could:\n> \n> * Add tests\n> * Add documentation about this guideline to `doc/developer-notes.md` where `BlockUntilSyncedToCurrentChain` is also documented\n\nMany thanks. \n\nHave added a new functional test `rpc_getbalances.py` and a new entry on `getbalances` and that it uses `m_last_block_processed` to populate `lastblock`field.\n\nHowever, not sure if the docs I added ",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-611431358,611431358,
brakmic,2020-04-09 09:37:01,"And again, GitHub closed my pull request. This makes no sense, I just force pushed it.\nOk, will have to open a new PR with the same content. Sorry!",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-611433136,611433136,
brakmic,2020-04-09 09:37:32,"@fanquake \nMaybe you can reopen it?\nWe had this problem in the past already. Not sure why GitHub is doing it.",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-611433373,611433373,
fanquake,2020-04-09 09:38:12,I cannot. You'll likely have to open a new PR.,https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-611433645,611433645,
brakmic,2020-04-09 09:39:14,"> I cannot. You'll likely have to open a new PR.\n\nOk, no problem. ",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-611434096,611434096,
promag,2020-04-09 09:44:29,"@brakmic see this:\n\n<img width=""995"" alt=""Screenshot 2020-04-09 at 10 43 55"" src=""https://user-images.githubusercontent.com/3534524/78881699-13b73400-7a4f-11ea-8626-25d49dc38b7d.png"">\n",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-611436261,611436261,
brakmic,2020-04-09 09:45:56,"@promag \nThanks. \nI'll try it. ",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-611436928,611436928,
brakmic,2020-04-09 09:51:48,"> @brakmic see this:\n> \n> <img alt=""Screenshot 2020-04-09 at 10 43 55"" width=""995"" src=""https://user-images.githubusercontent.com/3534524/78881699-13b73400-7a4f-11ea-8626-25d49dc38b7d.png"">\n\nReopened. Thanks, @promag ",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-611439382,611439382,
vasild,2020-04-09 10:10:38,"Concept ACK.\n\nVery good idea, to add ""valid as of ..."" stamp to the returned data. What about also adding the height to make it easy/obvious which one is newer, assuming a few requests:\n\n```\n""lastblock"": {\n    ""hash"": ""5ba7e8b9a9e6aed88b4641257ef13ecaace1211688f5b5fec99cad36e1650e5d"",\n    ""height"": 12345\n}\n```\n\nBut it's good even without that.\n\nThanks!",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-611447394,611447394,
brakmic,2020-04-09 10:14:46,"> Concept ACK.\n> \n> Very good idea, to add ""valid as of ..."" stamp to the returned data. What about also adding the height to make it easy/obvious which one is newer, assuming a few requests:\n> \n> ```\n> ""lastblock"": {\n>     ""hash"": ""5ba7e8b9a9e6aed88b4641257ef13ecaace1211688f5b5fec99cad36e1650e5d"",\n>     ""height"": 12345\n> }\n> ```\n> \n> But it's good even without that.\n> \n>",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-611449030,611449030,
brakmic,2020-04-09 10:49:43,"> Concept ACK.\n> \n> Very good idea, to add ""valid as of ..."" stamp to the returned data. What about also adding the height to make it easy/obvious which one is newer, assuming a few requests:\n> \n> ```\n> ""lastblock"": {\n>     ""hash"": ""5ba7e8b9a9e6aed88b4641257ef13ecaace1211688f5b5fec99cad36e1650e5d"",\n>     ""height"": 12345\n> }\n> ```\n> \n> But it's good even without that.\n> \n>",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-611463296,611463296,
jonasschnelli,2020-04-09 12:22:40,"Code review ACK. Needs git cleanup (squashing). Verified that there are no concurrency issues between getting the balance and the fetching the wallets bestblock.\n\nnit: i'm not 100% sure about the term `lastblock`. Maybe we should use `lastprocessedblock`.",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-611498517,611498517,
brakmic,2020-04-09 12:25:06,"> Code review ACK. Needs git cleanup (squashing). Verified that there are no concurrency issues between getting the balance and the fetching the wallets bestblock.\n> \n> nit: i'm not 100% sure about the term `lastblock`. Maybe we should use `lastprocessedblock`.\n\nThanks.\nRegarding `lastblock`: yes, it makes more sense. Will update the variable name throughout the code & docs.",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-611499444,611499444,
theStack,2020-04-10 17:52:58,"@brakmic: Don't know how strict the rules are with those kinds of nits, but the local diff shows some trailing whitespace:\n![grafik](https://user-images.githubusercontent.com/91535/79011371-30915b80-7b64-11ea-8dc8-26a8cf97194d.png)\n",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-612143718,612143718,
brakmic,2020-04-10 17:54:43,"> @brakmic: Don't know how strict the rules are with those kinds of nits, but the local diff shows some trailing whitespace:\n> ![grafik](https://user-images.githubusercontent.com/91535/79011371-30915b80-7b64-11ea-8dc8-26a8cf97194d.png)\n\nOk, will wait for travis.",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-612144447,612144447,
MarcoFalke,2020-04-10 18:00:59,Travis fails as expected,https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-612147183,612147183,
MarcoFalke,2020-04-10 19:16:14,"`gettransaction` and `getwalletinfo` should also be trivial to amend, since they return an object already",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-612178446,612178446,
brakmic,2020-04-10 19:19:06,"> `gettransaction` and `getwalletinfo` should also be trivial to amend, since they return an object already\n\nOk. Should I try to include them in this PR as well?",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-612179566,612179566,
MarcoFalke,2020-04-10 19:20:51,"> Ok. Should I try to include them in this PR as well?\n\nYes, from what I could tell, adding it there seemed to be uncontroversial.",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-612180150,612180150,
brakmic,2020-04-10 20:18:54,"> > Ok. Should I try to include them in this PR as well?\n> \n> Yes, from what I could tell, adding it there seemed to be uncontroversial.\n\nUpdated PR info, expanded code, tests & release notes.",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-612199644,612199644,
brakmic,2020-04-10 22:04:01,"> ACK looks good, just nits\n\nThanks.\n\nHave added:\n\n* static _RPCResult_ variable **RESULT_LAST_PROCESSED_BLOCK**\n* lock-aware **AppendLastProcessedBlock** function \n* fixed styling + removed redundant function call in wallet_balance.py",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-612238327,612238327,
DrahtBot,2020-04-11 04:19:21,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18788 (wallet: tests: Update more tests to work with descriptor wallets by achow101)\n* #18354 (Protect wallet by using s",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-612321664,612321664,
theStack,2020-04-11 12:42:15,"c99444c4f127d9d33c26410206b5ed536e613c14 fails with the functional test `wallet_basic.py` on my machine:\n```\n...\n2020-04-11T12:38:15.577000Z TestFramework (INFO): Testing gettransaction response with different arguments...\n2020-04-11T12:38:15.584000Z TestFramework (ERROR): Assertion failed\nTraceback (most recent call last):\n  File ""/home/honeybadger/buidl/bitcoin_thestack/test/function",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-612412568,612412568,
brakmic,2020-04-11 12:46:59,"> [c99444c](https://github.com/bitcoin/bitcoin/commit/c99444c4f127d9d33c26410206b5ed536e613c14) fails with the functional test `wallet_basic.py` on my machine:\n\nOn my machine it looks OK:\n\n```shell\n./test/functional/test_runner.py wallet_basic                                           (4s 289ms)  \nTemporary test directory at /var/folders/7q/4ffytzk562dd2ky4bfg9_w7h0000gn/T/test_runner_",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-612413476,612413476,
MarcoFalke,2020-04-11 12:53:50,It fails on travis and appveyor as well,https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-612414879,612414879,
brakmic,2020-04-11 13:11:02,"> It fails on travis and appveyor as well\n\nWill check it again.",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-612418131,612418131,
brakmic,2020-04-11 13:22:50,"Interesting, on my machine (a macOS Catalina 10.15.4) I am still not getting any errors when executing `./test/functional/test_runner.py wallet_basic`.\n\nWill have to dig deeper, it seems.",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-612420327,612420327,
brakmic,2020-04-11 13:25:29,"@MarcoFalke travis isn't showing any error logs? Only that it wasn't able to fetch them.\n\n\n",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-612420790,612420790,
MarcoFalke,2020-04-11 13:32:58,"Error is the same on appveyor: https://ci.appveyor.com/project/DrahtBot/bitcoin/builds/32103450#L4902\n\nMake sure to run `git log -1 && git status && make clean && make && ./test/functional/wallet_basic.py` to reproduce the issue.",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-612422296,612422296,
brakmic,2020-04-11 13:58:54,"> Error is the same on appveyor: https://ci.appveyor.com/project/DrahtBot/bitcoin/builds/32103450#L4902\n> \n> Make sure to run `git log -1 && git status && make clean && make && ./test/functional/wallet_basic.py` to reproduce the issue.\n\nThe frozenset `expected_fields` on line 513 needed `lastprocessedblock` to pass the test.",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-612427516,612427516,
brakmic,2020-04-11 17:41:50,"@MarcoFalke \n\nThe `interface_rest` test fails on appveyor with `OSError: [WinError 10048] Only one usage of each socket address (protocol/network address/port) is normally permitted`\n",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-612474458,612474458,
MarcoFalke,2020-04-11 18:44:44,ACK 0ac3e82d210635b9e5cb72be481ea699902920d8,https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-612487659,612487659,
luke-jr,2020-04-23 04:37:54,"I'm not sure this is the right approach, interface-wise, especially for calls like `gettransaction`, where the info gets embedded in the JSON transaction itself.\n\nMaybe it'd be better to just guarantee atomicity for batch requests?",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-618172710,618172710,
vasild,2020-04-23 07:21:29,"> Maybe it'd be better to just guarantee atomicity for batch requests?\n\nAtomicity of batch requests would be good from user point of view, no doubt about it. But it would not fully cover what this PR is trying to do - provide a kind of ""stamp"" for the returned data - ""this is valid as of block XYZ (height 123)"". I think this is important given the volatility of the data - it may no longer be a",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-618227615,618227615,
luke-jr,2020-04-23 12:37:53,You would batch any call with `getstamp`,https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-618377950,618377950,
MarcoFalke,2020-04-23 14:14:43,"> You would batch any call with getstamp\n\nSo wallets are unusable by clients that don't have batch support implemented?",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-618419227,618419227,
luke-jr,2020-04-23 16:55:50,"""Unusable"" seems a bit strong here.\n\nBut yes, ""I don't want to implement it"" isn't an excuse to pick a bad interface...",https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-618515706,618515706,
DrahtBot,2020-04-27 00:34:57,<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).,https://github.com/bitcoin/bitcoin/pull/18570#issuecomment-619650667,619650667,
MarcoFalke,2020-04-09 00:05:52,"this is incorrect, I believe. The chain can proceed to the next block after the call to BlockUntilSyncedToCurrentChain, but the wallet may not catch up until the lock is taken in the next line.\n\nThis should be wallet.m_last_block_processed",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r405883771,405883771,src/wallet/rpcwallet.cpp
MarcoFalke,2020-04-09 00:18:48,"Could move this last, since it is the least-important information?",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r405887478,405887478,src/wallet/rpcwallet.cpp
brakmic,2020-04-09 09:30:31,"Thanks!\n\nHave changed the code by introducing a new wallet function **GetLastBlockHash()** that returns `m_last_block_processed `.",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406077208,406077208,src/wallet/rpcwallet.cpp
brakmic,2020-04-09 09:30:46,Done.,https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406077343,406077343,src/wallet/rpcwallet.cpp
promag,2020-04-09 10:12:36,s/m_last_block_processed/lastblock/,https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406101315,406101315,doc/developer-notes.md
promag,2020-04-09 10:15:11,"Maybe worth mentioning the result shouldn't be cached because importing new keys could invalidate it. Instead of ""were valid on"" maybe say ""were calculated/computed/evaluated on""?",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406102753,406102753,doc/developer-notes.md
brakmic,2020-04-09 10:22:09,"I don't understand, sorry. We are returning `m_last_block_processed` in the field `lastblock`.",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406106374,406106374,doc/developer-notes.md
brakmic,2020-04-09 10:27:06,Thanks. Have updated the wording and added a warning regarding caching of results.,https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406108967,406108967,doc/developer-notes.md
promag,2020-04-09 10:33:12,calculated?,https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406112111,406112111,src/wallet/rpcwallet.cpp
promag,2020-04-09 10:38:39,"Sorry, I mean that we could avoid C++ variable names here. I was thinking something like\n```\n- The `getbalances` RPC now returns `lastblock` which is the wallet's last processed block\n  hash at the time the balances were calculated.\n```",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406114879,406114879,doc/developer-notes.md
promag,2020-04-09 10:40:35,Compare with `self.nodes[0].getbestblockhash()` instead?,https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406115859,406115859,test/functional/rpc_getbalances.py
brakmic,2020-04-09 10:46:02,"Yes, this too was changed when I converted `lastblock` into an object that contains both hash and height.",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406118589,406118589,src/wallet/rpcwallet.cpp
brakmic,2020-04-09 10:47:04,"Ok, will update the tests. ",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406119051,406119051,test/functional/rpc_getbalances.py
brakmic,2020-04-09 11:00:38,Thanks. Have update the docs.,https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406125463,406125463,doc/developer-notes.md
promag,2020-04-09 11:05:40,IMO these comments are unnecessary.,https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406127831,406127831,test/functional/rpc_getbalances.py
jonatack,2020-04-09 11:11:47,"Note that test/functional/wallet_balance.py already exists and these tests could be placed there, particularly as any of the tests in that file that don't call getbalances yet should be converted to it (see #18451 which does that).",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406130665,406130665,test/functional/test_runner.py
promag,2020-04-09 11:12:32,"IMO this 2nd round is unnecessary. I think you could factor out a `test_getbalances` function that would call `getbalances` and assert the result (and maybe just use `getblockchaininfo` to get chain tip). Then here you would do\n```\ntest_getbalances(self.nodes[0], ...)\ngeneratetoaddress(...)\ntest_getbalances(self.nodes[0], ...)\n```",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406131045,406131045,test/functional/rpc_getbalances.py
jonatack,2020-04-09 11:13:10,"""we can also inform about the balances"" -> I don't quite understand what this means.",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406131302,406131302,doc/developer-notes.md
jonatack,2020-04-09 11:13:47,This seems to be information for the release note?,https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406131621,406131621,doc/developer-notes.md
promag,2020-04-09 11:17:36,🤣 indeed! my brain read release-notes.md..,https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406133429,406133429,doc/developer-notes.md
brakmic,2020-04-09 11:25:07,"I was pointing to this sentence from the original issue:\n\n`\nThose calls could benefit if the block hash they were valid on was included in the response. For example, immature balance can only change when the chainstate changes. \n`\n\nMaybe I should reformulate the sentence.",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406137067,406137067,doc/developer-notes.md
brakmic,2020-04-09 11:41:05,Should I change anything? Add further info?,https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406144581,406144581,doc/developer-notes.md
promag,2020-04-09 11:57:39,"Move this hunk to release notes, not developer notes.",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406152685,406152685,doc/developer-notes.md
brakmic,2020-04-09 11:59:52,"Ok, but what about the rest of the paragraph in developer-notes? Maybe I should rather keep it there as well?",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406153777,406153777,doc/developer-notes.md
brakmic,2020-04-09 12:13:27,"Thanks!\nHave updated the test and removed the now redundant rpc_getbalance.",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406160551,406160551,test/functional/test_runner.py
brakmic,2020-04-09 12:14:22,"Ok, will update (already updated) tests :)",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406161082,406161082,test/functional/rpc_getbalances.py
brakmic,2020-04-09 12:16:28,"Meanwhile, I've moved the tests into `wallet_balance`. There I'm just calling a single function to run all those tests: `test_lastblock_json_field`\n\nPlease, check.",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406162129,406162129,test/functional/rpc_getbalances.py
brakmic,2020-04-09 12:23:10,"@promag It seems, I can only change the 0.20.0 release (draft) notes here: https://github.com/bitcoin-core/bitcoin-devwiki/wiki/0.20.0-Release-Notes-Draft\n\nThe release-notes.md I have is pointing at it. \n\nI'm not sure if I should put an entry in 0.20.0 release notes when this PR is still unmerged. ",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406165532,406165532,doc/developer-notes.md
brakmic,2020-04-09 12:40:04,Have now removed the problematic sentence.,https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406174671,406174671,doc/developer-notes.md
jonatack,2020-04-09 12:50:27,"@brakmic I don't know if this is for 0.20, as the feature freeze was 3 weeks ago, but see the release notes section in developer-notes.md. Normally you don't edit release-notes.md, rather instead you create a file in doc/release-notes/ called release-note-18570.md.",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406180321,406180321,doc/developer-notes.md
jonatack,2020-04-09 12:52:17,returns a `lastprocessedblock` JSON object,https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406181316,406181316,doc/developer-notes.md
jonatack,2020-04-09 12:53:15,nit: sort order,https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406181851,406181851,test/functional/wallet_balance.py
jonatack,2020-04-09 12:54:34,"Please add test logging if you retouch this, e.g. `self.log.info(""Test getbalances returns expected lastprocessedblock json object"")`",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406182589,406182589,test/functional/wallet_balance.py
brakmic,2020-04-09 12:56:04,self.log.info is enough?,https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406183398,406183398,test/functional/wallet_balance.py
jonatack,2020-04-09 13:00:32,(I edited my comment just above with a suggestion),https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406186030,406186030,test/functional/wallet_balance.py
brakmic,2020-04-09 13:14:50,Added respective doc.,https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406194394,406194394,doc/developer-notes.md
theStack,2020-04-10 16:44:49,"nit: would add an empty line in-between here, to mark the end of the function visually (same as for `test_balances()` above).",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406841383,406841383,test/functional/wallet_balance.py
theStack,2020-04-10 16:48:04,"nit: would add the undefined article ""a"" in front of `lastprocessedblock` here\n```suggestion\n- The `getbalances` RPC now returns a `lastprocessedblock` JSON object which contains the wallet's last processed block\n```",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406842739,406842739,doc/release-notes-18570.md
brakmic,2020-04-10 17:34:30,Thanks!,https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406862243,406862243,doc/release-notes-18570.md
MarcoFalke,2020-04-10 21:09:48,"Could this be made a `static const RPCResult RESULT_LAST_PROCESSED_BLOCK{RPCResult::Type::OBJ, ""lastprocessedbl...` to avoid boilerplate?\n```suggestion\n                        RESULT_LAST_PROCESSED_BLOCK,\n```",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406945763,406945763,src/wallet/rpcwallet.cpp
MarcoFalke,2020-04-10 21:10:48,"Could this be made a helper to avoid boilerplate?\n\n```suggestion\n    AppendLastProccedBlock(entry);\n```",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406946039,406946039,src/wallet/rpcwallet.cpp
MarcoFalke,2020-04-10 21:12:57,nit: Could add newlines before every log statement to aid readability?,https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406946747,406946747,test/functional/wallet_balance.py
MarcoFalke,2020-04-10 21:14:17,"```suggestion\n            Tests the lastprocessedblock JSON object in getbalances, getwalletinfo\n```",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406947242,406947242,test/functional/wallet_balance.py
MarcoFalke,2020-04-10 21:15:30,"nit: no need to make this a function, because it is only called once. Could inline?",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406947600,406947600,test/functional/wallet_balance.py
MarcoFalke,2020-04-10 22:13:28,"nit, to make sure this is not nullptr\n\n```suggestion\nvoid AppendLastProcessedBlock(UniValue& entry, const CWallet& wallet) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet)\n```",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406964945,406964945,src/wallet/rpcwallet.cpp
brakmic,2020-04-10 22:17:59,"Yeah, in *getbalances* they use a reference, but the other two functions use **pwallet**. My first thought was: let's change this to a reference, but this would be an unrelated task. \n\nWho knows, maybe later, in a new PR: ""transition from pwallet to wallet&""...if possible.",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r406966094,406966094,src/wallet/rpcwallet.cpp
jonatack,2020-04-11 14:22:27,nit: sort,https://github.com/bitcoin/bitcoin/pull/18570#discussion_r407069697,407069697,test/functional/wallet_basic.py
brakmic,2020-04-11 14:35:05,Thanks. Corrected.,https://github.com/bitcoin/bitcoin/pull/18570#discussion_r407071045,407071045,test/functional/wallet_basic.py
theStack,2020-04-11 20:03:15,"I think you want to access the just one line above returned `tx_info` here, not `walletinfo`?",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r407105045,407105045,test/functional/wallet_balance.py
brakmic,2020-04-11 20:06:36,"Thanks!\nYes, `walletinfo` in this part is redundant as it got already checked in the previous code block.",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r407105332,407105332,test/functional/wallet_balance.py
vasild,2020-04-13 13:50:29,"`GetLastBlockHeight()` returns `m_last_block_processed_height` and there is this [strange scary comment](https://github.com/bitcoin/bitcoin/blob/d9fd7b5a675d94b99a5ee5b636bbc21088ed02fb/src/wallet/wallet.h#L712-L713) for it:\n\n> Height is a pointer on node's tip and doesn't imply that the wallet has scanned sequentially all blocks up to this one.\n\nIntroduced in https://github.com/bitcoin/bi",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r407487763,407487763,src/wallet/rpcwallet.cpp
MarcoFalke,2020-04-13 14:22:25,"> Does this contradict with what we are trying to do here?\n\nYes it does. Not sure how we should deal with old wallets that are catching up with the chain after being just loaded.",https://github.com/bitcoin/bitcoin/pull/18570#discussion_r407503478,407503478,src/wallet/rpcwallet.cpp
