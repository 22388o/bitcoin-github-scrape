[
  {
    "sha": "fa46f68211ae6616a42c0fd1467fdd5710cd3b72",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTQ2ZjY4MjExYWU2NjE2YTQyYzBmZDE0NjdmZGQ1NzEwY2QzYjcy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-07-29T21:07:50Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-09-05T01:24:48Z"
      },
      "message": "policy: Avoid duplicate mempool lookup\n\nAlso, avoid direct access to mapTx",
      "tree": {
        "sha": "f6acf4413b136952a6cf5e2d8ae7a95a2c9f586c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6acf4413b136952a6cf5e2d8ae7a95a2c9f586c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa46f68211ae6616a42c0fd1467fdd5710cd3b72",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjVygwAm1/cbIgOaNPydhDVJmc6q0p0BzVR/0+xgge7kxRWM4l9J+AN4/w1fnPn\nU3MoBPfAc3hhVOFcQhwMIJDCcEW3PXlVpUa/9Pt8DLbyfxH0KmpcxTIENO8gb7LV\nYGo9D+9tHE9En4eKrZwFjaI1jdORHWpiBw2smje3c+XYEwshKqE02z8KiGued7wI\ncguB+ovu3CtSHNEXE/BxxvPlNFrYc/PNOUkM6L2sUQTFYle4yvggQpuFVhs05R1n\nf3QOBPC1F3sAZwhZB+I8dXH6L+cTw37vDxsLc79wR+pLP/GTdR/cRRETflOnGP0s\nMThwuglSagf4LhtOaqaJN96NES8nmyYYHiKTe3QlsxUc1eMJ+ref1tslbMbuUHrg\noVTpGoNMkLYU9oRlhgWGmcDrJcfktWuuZiplT/C+Ug2fWxqLjX488OtkOzZgpskh\nHc+admjm1Y/hqza+Wv5tODyaUxrQ4ro7LmtIdblR48MaG2tckrLb+eDRpIexgaHX\n5gNTbx8U\n=ssPv\n-----END PGP SIGNATURE-----",
        "payload": "tree f6acf4413b136952a6cf5e2d8ae7a95a2c9f586c\nparent 761fe07ba9b56bae3e6757fef6e41e79f147a767\nauthor MarcoFalke <falke.marco@gmail.com> 1564434470 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1567646688 +0200\n\npolicy: Avoid duplicate mempool lookup\n\nAlso, avoid direct access to mapTx\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa46f68211ae6616a42c0fd1467fdd5710cd3b72",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa46f68211ae6616a42c0fd1467fdd5710cd3b72",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa46f68211ae6616a42c0fd1467fdd5710cd3b72/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "761fe07ba9b56bae3e6757fef6e41e79f147a767",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/761fe07ba9b56bae3e6757fef6e41e79f147a767",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/761fe07ba9b56bae3e6757fef6e41e79f147a767"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 8,
      "deletions": 6
    },
    "files": [
      {
        "sha": "fb8dbefb87ce99823d53cdbc35d851ae1d8901ef",
        "filename": "src/bench/duplicate_inputs.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa46f68211ae6616a42c0fd1467fdd5710cd3b72/src/bench/duplicate_inputs.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa46f68211ae6616a42c0fd1467fdd5710cd3b72/src/bench/duplicate_inputs.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/duplicate_inputs.cpp?ref=fa46f68211ae6616a42c0fd1467fdd5710cd3b72",
        "patch": "@@ -8,6 +8,7 @@\n #include <consensus/merkle.h>\n #include <consensus/validation.h>\n #include <pow.h>\n+#include <random.h>\n #include <txmempool.h>\n #include <validation.h>\n "
      },
      {
        "sha": "9b7cc3c8bb49f4728fdb13d38ace2730717bc58f",
        "filename": "src/policy/rbf.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa46f68211ae6616a42c0fd1467fdd5710cd3b72/src/policy/rbf.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa46f68211ae6616a42c0fd1467fdd5710cd3b72/src/policy/rbf.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/rbf.cpp?ref=fa46f68211ae6616a42c0fd1467fdd5710cd3b72",
        "patch": "@@ -18,15 +18,16 @@ RBFTransactionState IsRBFOptIn(const CTransaction& tx, const CTxMemPool& pool)\n \n     // If this transaction is not in our mempool, then we can't be sure\n     // we will know about all its inputs.\n-    if (!pool.exists(tx.GetHash())) {\n+    const Optional<CTxMemPool::txiter> it = pool.GetIter(tx.GetHash());\n+    if (!it) {\n         return RBFTransactionState::UNKNOWN;\n     }\n \n     // If all the inputs have nSequence >= maxint-1, it still might be\n     // signaled for RBF if any unconfirmed parents have signaled.\n     uint64_t noLimit = std::numeric_limits<uint64_t>::max();\n     std::string dummy;\n-    CTxMemPoolEntry entry = *pool.mapTx.find(tx.GetHash());\n+    const CTxMemPoolEntry& entry = **it;\n     pool.CalculateMemPoolAncestors(entry, setAncestors, noLimit, noLimit, noLimit, noLimit, dummy, false);\n \n     for (CTxMemPool::txiter it : setAncestors) {"
      },
      {
        "sha": "011b2da07ecb7daf102be603eef0a53bcb5f7f3e",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa46f68211ae6616a42c0fd1467fdd5710cd3b72/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa46f68211ae6616a42c0fd1467fdd5710cd3b72/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=fa46f68211ae6616a42c0fd1467fdd5710cd3b72",
        "patch": "@@ -155,7 +155,7 @@ bool CTxMemPool::CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntr\n         // GetMemPoolParents() is only valid for entries in the mempool, so we\n         // iterate mapTx to find parents.\n         for (unsigned int i = 0; i < tx.vin.size(); i++) {\n-            boost::optional<txiter> piter = GetIter(tx.vin[i].prevout.hash);\n+            Optional<txiter> piter = GetIter(tx.vin[i].prevout.hash);\n             if (piter) {\n                 parentHashes.insert(*piter);\n                 if (parentHashes.size() + 1 > limitAncestorCount) {\n@@ -860,7 +860,7 @@ const CTransaction* CTxMemPool::GetConflictTx(const COutPoint& prevout) const\n     return it == mapNextTx.end() ? nullptr : it->second;\n }\n \n-boost::optional<CTxMemPool::txiter> CTxMemPool::GetIter(const uint256& txid) const\n+Optional<CTxMemPool::txiter> CTxMemPool::GetIter(const uint256& txid) const\n {\n     auto it = mapTx.find(txid);\n     if (it != mapTx.end()) return it;"
      },
      {
        "sha": "b8e53e6c77b3e7b8ca2f8be6b5cf2f23fa3f9c13",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa46f68211ae6616a42c0fd1467fdd5710cd3b72/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa46f68211ae6616a42c0fd1467fdd5710cd3b72/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=fa46f68211ae6616a42c0fd1467fdd5710cd3b72",
        "patch": "@@ -18,10 +18,10 @@\n #include <coins.h>\n #include <crypto/siphash.h>\n #include <indirectmap.h>\n+#include <optional.h>\n #include <policy/feerate.h>\n #include <primitives/transaction.h>\n #include <sync.h>\n-#include <random.h>\n \n #include <boost/multi_index_container.hpp>\n #include <boost/multi_index/hashed_index.hpp>\n@@ -600,7 +600,7 @@ class CTxMemPool\n     const CTransaction* GetConflictTx(const COutPoint& prevout) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     /** Returns an iterator to the given hash, if found */\n-    boost::optional<txiter> GetIter(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n+    Optional<txiter> GetIter(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     /** Translate a set of hashes into a set of pool iterators to avoid repeated lookups */\n     setEntries GetIterSet(const std::set<uint256>& hashes) const EXCLUSIVE_LOCKS_REQUIRED(cs);"
      }
    ]
  },
  {
    "sha": "fa5d55d4eda6f88e7424e58c33b7522a33cad30e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTVkNTVkNGVkYTZmODhlNzQyNGU1OGMzM2I3NTIyYTMzY2FkMzBl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-07-29T21:42:45Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-10-11T18:56:57Z"
      },
      "message": "rpc: Report reason for replaceable txpool transactions",
      "tree": {
        "sha": "273bbfeee7bd13f6e426e15d5d35ac7eb7a6a1ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/273bbfeee7bd13f6e426e15d5d35ac7eb7a6a1ca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa5d55d4eda6f88e7424e58c33b7522a33cad30e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjI3AwAyhlN/MutIizifgeBtScrfkU1b2oMBSM0SxOsq4g+HVheRqYMEjZV8GU8\nTlCkvVjXdCUqs8IAczVyYFVl4FjTUjGBpirnZIAJ8wj3PuBTBNmOmfokGRPZdBcv\nqSQDpeyRIaSraezxMpL+A6wJ3shUf5D3Z+uRWdWPp7iI7uRtNdJho/MMlF7cyNUu\nqmAkG7wkxzZtcInNOGh+mBBnXuu0YeHai/73JpDolCz6J17Fyk/Bwl14rnXKw7/W\nojqFKj4eceVeyJNZ3efFyP9dhPAuO8tWaFI5/+TEmXNKfpSOADscV+hdV/WJ0J0J\nQYnw2h/eyS1N3coLpSwxNDREBtyHcoIPNUs+Q96Rybo3+Lwib2rlLYa3pjz/O2Y2\ngx0em/gGbgIReEnnMFYDWDlHvLZYLDQf8UdiUYIgoeP6eoVivgaCT89rQXY+E6oI\ngFNGOPjt9M8MS2r7QEetH1JTRZsBiT3XmKZyHs4xidJuGOpgNxELs9QECOpi9+vp\naC3+1urk\n=mVlt\n-----END PGP SIGNATURE-----",
        "payload": "tree 273bbfeee7bd13f6e426e15d5d35ac7eb7a6a1ca\nparent fa46f68211ae6616a42c0fd1467fdd5710cd3b72\nauthor MarcoFalke <falke.marco@gmail.com> 1564436565 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1570820217 -0400\n\nrpc: Report reason for replaceable txpool transactions\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5d55d4eda6f88e7424e58c33b7522a33cad30e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa5d55d4eda6f88e7424e58c33b7522a33cad30e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5d55d4eda6f88e7424e58c33b7522a33cad30e/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa46f68211ae6616a42c0fd1467fdd5710cd3b72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa46f68211ae6616a42c0fd1467fdd5710cd3b72",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa46f68211ae6616a42c0fd1467fdd5710cd3b72"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 28,
      "deletions": 2
    },
    "files": [
      {
        "sha": "1eeab0b53eb0c7ef2b7239ad402bf458f0e90093",
        "filename": "src/policy/rbf.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5d55d4eda6f88e7424e58c33b7522a33cad30e/src/policy/rbf.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5d55d4eda6f88e7424e58c33b7522a33cad30e/src/policy/rbf.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/rbf.h?ref=fa5d55d4eda6f88e7424e58c33b7522a33cad30e",
        "patch": "@@ -10,7 +10,7 @@\n enum class RBFTransactionState {\n     UNKNOWN,\n     REPLACEABLE_BIP125,\n-    FINAL\n+    FINAL,\n };\n \n // Determine whether an in-mempool transaction is signaling opt-in to RBF"
      },
      {
        "sha": "c284bdf279f7d90294542d06d3b71b9495312f9b",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 1,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5d55d4eda6f88e7424e58c33b7522a33cad30e/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5d55d4eda6f88e7424e58c33b7522a33cad30e/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=fa5d55d4eda6f88e7424e58c33b7522a33cad30e",
        "patch": "@@ -370,6 +370,20 @@ static UniValue getdifficulty(const JSONRPCRequest& request)\n     return GetDifficulty(::ChainActive().Tip());\n }\n \n+static UniValue RBFTransactionStateToString(RBFTransactionState state)\n+{\n+    switch (state) {\n+    case RBFTransactionState::UNKNOWN:\n+        throw std::logic_error(\"unreachable code\");\n+    case RBFTransactionState::REPLACEABLE_BIP125:\n+        return \"bip125\";\n+    case RBFTransactionState::FINAL:\n+        return NullUniValue; // not replaceable\n+        // no default case, so the compiler can warn about missing cases\n+    }\n+    assert(false);\n+}\n+\n static std::string EntryDescriptionString()\n {\n     return \"    \\\"vsize\\\" : n,            (numeric) virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted.\\n\"\n@@ -399,7 +413,13 @@ static std::string EntryDescriptionString()\n            \"    \\\"spentby\\\" : [           (array) unconfirmed transactions spending outputs from this transaction\\n\"\n            \"        \\\"transactionid\\\",    (string) child transaction id\\n\"\n            \"       ... ]\\n\"\n-           \"    \\\"bip125-replaceable\\\" : true|false,  (boolean) Whether this transaction could be replaced due to BIP125 (replace-by-fee)\\n\";\n+           \"    \\\"bip125-replaceable\\\" : true|false,  (boolean) Whether this transaction could be replaced due to BIP125 (replace-by-fee)\\n\"\n+           \"    \\\"replaceable\\\" :         (bool) Whether this transaction is replaceable.\\n\"\n+           \"    \\\"replaceable-reason\\\" :  (string) Why this transaction is replaceable.\\n\"\n+           \"                              If the transaction is not replaceable, this is Null.\\n\"\n+           \"                              If the transaction is replaceable, the field is a string. Possible reasons are:\\n\"\n+           \"                              '\"+RBFTransactionStateToString(RBFTransactionState::REPLACEABLE_BIP125).get_str()+\"'\\n\"\n+           ;\n }\n \n static void entryToJSON(const CTxMemPool& pool, UniValue& info, const CTxMemPoolEntry& e) EXCLUSIVE_LOCKS_REQUIRED(pool.cs)\n@@ -461,6 +481,8 @@ static void entryToJSON(const CTxMemPool& pool, UniValue& info, const CTxMemPool\n         rbfStatus = true;\n     }\n \n+    info.pushKV(\"replaceable\", rbfStatus);\n+    info.pushKV(\"replaceable-reason\", RBFTransactionStateToString(rbfState));\n     info.pushKV(\"bip125-replaceable\", rbfStatus);\n }\n "
      },
      {
        "sha": "2fb867793670f2494911d92731354a760321a2c2",
        "filename": "test/functional/feature_rbf.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5d55d4eda6f88e7424e58c33b7522a33cad30e/test/functional/feature_rbf.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5d55d4eda6f88e7424e58c33b7522a33cad30e/test/functional/feature_rbf.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_rbf.py?ref=fa5d55d4eda6f88e7424e58c33b7522a33cad30e",
        "patch": "@@ -428,6 +428,8 @@ def test_opt_in(self):\n \n         # This transaction isn't shown as replaceable\n         assert_equal(self.nodes[0].getmempoolentry(tx1a_txid)['bip125-replaceable'], False)\n+        assert_equal(self.nodes[0].getmempoolentry(tx1a_txid)['replaceable'], False)\n+        assert_equal(self.nodes[0].getmempoolentry(tx1a_txid)['replaceable-reason'], None)\n \n         # Shouldn't be able to double-spend\n         tx1b = CTransaction()\n@@ -473,6 +475,8 @@ def test_opt_in(self):\n \n         # This transaction is shown as replaceable\n         assert_equal(self.nodes[0].getmempoolentry(tx3a_txid)['bip125-replaceable'], True)\n+        assert_equal(self.nodes[0].getmempoolentry(tx3a_txid)['replaceable'], True)\n+        assert_equal(self.nodes[0].getmempoolentry(tx3a_txid)['replaceable-reason'], 'bip125')\n \n         tx3b = CTransaction()\n         tx3b.vin = [CTxIn(COutPoint(tx1a_txid, 0), nSequence=0)]"
      }
    ]
  }
]