jonasschnelli,2015-07-06T18:54:23Z,Concept ACK.\n,https://github.com/bitcoin/bitcoin/pull/6384#issuecomment-118957707,118957707,
Diapolo,2015-07-07T05:53:05Z,"Compiles fine, concept ACK and tested ACK.\nFeels saver than to rely on default values!\n\nI also verified via Wireshark by connecting with https://bitcoincore.org/~gavin/createpaymentrequest.php and these are the results:\n\nForcing SSL3:\n![ssl3](https://cloud.githubusercontent.com/assets/1419649/8539517/f20b61aa-247c-11e5-8442-874de880f5b9.png)\n\nUsing your patch (but also default on Win81 x64",https://github.com/bitcoin/bitcoin/pull/6384#issuecomment-119080969,119080969,
Diapolo,2015-07-07T05:53:58Z,"While you are on this, IMHO we still have SSL support for RPC and the cipher string lists SSL3 AFAIK.\n",https://github.com/bitcoin/bitcoin/pull/6384#issuecomment-119081288,119081288,
laanwj,2015-07-07T07:40:34Z,"Thanks for the extensive testing, @Diapolo!\n\nWith regard to SSL in RPC, this was already solved in #5434:\n\n``` c++\nrpc_ssl_context->set_options(ssl::context::no_sslv2 | ssl::context::no_sslv3);\n```\n",https://github.com/bitcoin/bitcoin/pull/6384#issuecomment-119105489,119105489,
Diapolo,2015-07-07T07:48:33Z,"No problem :), was fun trying it.\n\nI was talking about that line `string strCiphers = GetArg(""-rpcsslciphers"", ""TLSv1.2+HIGH:TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!3DES:@STRENGTH"");` is this missing a `!SSLv3`?\n",https://github.com/bitcoin/bitcoin/pull/6384#issuecomment-119108105,119108105,
laanwj,2015-07-07T07:51:02Z,"@Diapolo As far as I know it's not necessary to change anything to the cipher list, and may be even harmful. The vulnerability is in the protocol itself, not in any of the ciphers introduced with SSLv3.\n",https://github.com/bitcoin/bitcoin/pull/6384#issuecomment-119108442,119108442,
jwilkins,2015-07-08T11:32:19Z,"@laanwj any reason not to use just TLSv1.2?\nTo quote AGL: ""This seems like a good moment to reiterate that everything less than TLS 1.2 with an AEAD cipher suite is cryptographically broken. "" - https://www.imperialviolet.org/2014/12/08/poodleagain.html\n\nSomething like TLSv1.2 with 'AES256+EECDH:AES256+EDH:AES128+EECDH:AES128+EDH:!SHA:!RC4:!DSS:@STRENGTH'\n(which expands to ECDHE-RSA-AES256-GCM",https://github.com/bitcoin/bitcoin/pull/6384#issuecomment-119546282,119546282,
laanwj,2015-07-08T11:44:38Z,"@jwilkins Sounds sensible. Although we also need to be careful not to put the bar too high, otherwise payments requests don't work anymore with some servers. At least ""drop SSLv3"" has been embraced by everyone.\n",https://github.com/bitcoin/bitcoin/pull/6384#issuecomment-119547899,119547899,
Diapolo,2015-07-08T13:57:27Z,"I'd also prefer TLS1.2 and would argue, that all BTC sites using payment requests should use strong or best encryption. But as @laanwj sais this breaks some ""legacy"" clients or perhaps some badly configured payment request service providers. Another problem could be a bad or too technical warning that Bitcoin Core is showing to a user, if the TLS1.2 connection fails.\n\nPerhaps let's bump the requ",https://github.com/bitcoin/bitcoin/pull/6384#issuecomment-119587925,119587925,
sipa,2015-07-09T16:24:51Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6384#issuecomment-120057710,120057710,
laanwj,2015-07-24T06:21:09Z,Backported to 0.11 branch as  8e5a96908a91131c35fcb119fce8831ec80c61c1\n,https://github.com/bitcoin/bitcoin/pull/6384#issuecomment-124343849,124343849,
