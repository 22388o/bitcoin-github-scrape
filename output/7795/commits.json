[
  {
    "sha": "f20d42ed2b1b8de9c41525f96c40b172ab82ec99",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMjBkNDJlZDJiMWI4ZGU5YzQxNTI1Zjk2YzQwYjE3MmFiODJlYzk5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-04-03T10:08:14Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-04-05T14:38:01Z"
      },
      "message": "UpdateTip: log only one line at most per block\n\nAvoid logging two or more lines per block in UpdateTip by\nadding the warning into the UpdateTip log message.",
      "tree": {
        "sha": "22bc6652641d3c57820e9c493008644e3711cd88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/22bc6652641d3c57820e9c493008644e3711cd88"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f20d42ed2b1b8de9c41525f96c40b172ab82ec99",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f20d42ed2b1b8de9c41525f96c40b172ab82ec99",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f20d42ed2b1b8de9c41525f96c40b172ab82ec99",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f20d42ed2b1b8de9c41525f96c40b172ab82ec99/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "30c2dd8d0598afac9319d3a813a89a682b9c0d34",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30c2dd8d0598afac9319d3a813a89a682b9c0d34",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/30c2dd8d0598afac9319d3a813a89a682b9c0d34"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 14,
      "deletions": 9
    },
    "files": [
      {
        "sha": "1044c3556b8a38b83fdf98c0541430b85085d1da",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 9,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f20d42ed2b1b8de9c41525f96c40b172ab82ec99/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f20d42ed2b1b8de9c41525f96c40b172ab82ec99/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=f20d42ed2b1b8de9c41525f96c40b172ab82ec99",
        "patch": "@@ -40,6 +40,7 @@\n #include <sstream>\n \n #include <boost/algorithm/string/replace.hpp>\n+#include <boost/algorithm/string/join.hpp>\n #include <boost/filesystem.hpp>\n #include <boost/filesystem/fstream.hpp>\n #include <boost/math/distributions/poisson.hpp>\n@@ -2555,16 +2556,10 @@ void static UpdateTip(CBlockIndex *pindexNew) {\n     nTimeBestReceived = GetTime();\n     mempool.AddTransactionsUpdated(1);\n \n-    LogPrintf(\"%s: new best=%s height=%d version=0x%08x log2_work=%.8g tx=%lu date='%s' progress=%f cache=%.1fMiB(%utx)\\n\", __func__,\n-      chainActive.Tip()->GetBlockHash().ToString(), chainActive.Height(), chainActive.Tip()->nVersion,\n-      log(chainActive.Tip()->nChainWork.getdouble())/log(2.0), (unsigned long)chainActive.Tip()->nChainTx,\n-      DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", chainActive.Tip()->GetBlockTime()),\n-      Checkpoints::GuessVerificationProgress(chainParams.Checkpoints(), chainActive.Tip()), pcoinsTip->DynamicMemoryUsage() * (1.0 / (1<<20)), pcoinsTip->GetCacheSize());\n-\n     cvBlockChange.notify_all();\n \n-    // Check the version of the last 100 blocks to see if we need to upgrade:\n     static bool fWarned = false;\n+    std::vector<std::string> warningMessages;\n     if (!IsInitialBlockDownload())\n     {\n         int nUpgraded = 0;\n@@ -2580,10 +2575,11 @@ void static UpdateTip(CBlockIndex *pindexNew) {\n                         fWarned = true;\n                     }\n                 } else {\n-                    LogPrintf(\"%s: unknown new rules are about to activate (versionbit %i)\\n\", __func__, bit);\n+                    warningMessages.push_back(strprintf(\"unknown new rules are about to activate (versionbit %i)\", bit));\n                 }\n             }\n         }\n+        // Check the version of the last 100 blocks to see if we need to upgrade:\n         for (int i = 0; i < 100 && pindex != NULL; i++)\n         {\n             int32_t nExpectedVersion = ComputeBlockVersion(pindex->pprev, chainParams.GetConsensus());\n@@ -2592,7 +2588,7 @@ void static UpdateTip(CBlockIndex *pindexNew) {\n             pindex = pindex->pprev;\n         }\n         if (nUpgraded > 0)\n-            LogPrintf(\"%s: %d of last 100 blocks have unexpected version\\n\", __func__, nUpgraded);\n+            warningMessages.push_back(strprintf(\"%d of last 100 blocks have unexpected version\", nUpgraded));\n         if (nUpgraded > 100/2)\n         {\n             // strMiscWarning is read by GetWarnings(), called by Qt and the JSON-RPC code to warn the user:\n@@ -2603,6 +2599,15 @@ void static UpdateTip(CBlockIndex *pindexNew) {\n             }\n         }\n     }\n+    LogPrintf(\"%s: new best=%s height=%d version=0x%08x log2_work=%.8g tx=%lu date='%s' progress=%f cache=%.1fMiB(%utx)\", __func__,\n+      chainActive.Tip()->GetBlockHash().ToString(), chainActive.Height(), chainActive.Tip()->nVersion,\n+      log(chainActive.Tip()->nChainWork.getdouble())/log(2.0), (unsigned long)chainActive.Tip()->nChainTx,\n+      DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", chainActive.Tip()->GetBlockTime()),\n+      Checkpoints::GuessVerificationProgress(chainParams.Checkpoints(), chainActive.Tip()), pcoinsTip->DynamicMemoryUsage() * (1.0 / (1<<20)), pcoinsTip->GetCacheSize());\n+    if (!warningMessages.empty())\n+        LogPrintf(\" warning='%s'\", boost::algorithm::join(warningMessages, \", \"));\n+    LogPrintf(\"\\n\");\n+\n }\n \n /** Disconnect chainActive's tip. You probably want to call mempool.removeForReorg and manually re-limit mempool size after this, with cs_main held. */"
      }
    ]
  }
]