luke-jr,2014-02-18T23:22:27Z,This doesn't seem to actually test anything...\n,https://github.com/bitcoin/bitcoin/pull/3706#issuecomment-35448011,35448011,
BitcoinPullTester,2014-02-18T23:42:37Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a86402eb9c505098cc06e7f80390b06635e6450b for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3706#issuecomment-35449659,35449659,
sipa,2014-02-18T23:46:11Z,"Won't hurt, but indeed: it doesn't actually test the scarcity.\n\nA test that generated a chain of a few million blocks, and then iterated the UTXO set would be nice :p\n",https://github.com/bitcoin/bitcoin/pull/3706#issuecomment-35449905,35449905,
sdaves,2014-02-19T00:20:07Z,"You are correct. It doesn't generate the blocks. However, it does verify that the number of Satoshis in a Bitcoin is correct, as well as the limit of Bitcoins allowed.\n",https://github.com/bitcoin/bitcoin/pull/3706#issuecomment-35452242,35452242,
gmaxwell,2014-02-19T00:28:31Z,"MAX_MONEY  has really nothing to do with limiting the scarcity of the coin. The finite supply arises out of the limit of the geometric series of subsidies. MAX_MONEY just gets used as a sanity check in single transaction values and such.\n\nWhat you want is a block with a subsidy above program, but IIRC the pull tester does this.\n",https://github.com/bitcoin/bitcoin/pull/3706#issuecomment-35452830,35452830,
sdaves,2014-02-19T00:39:16Z,The MoneyRange function in core.h directly checks MAX_MONEY.\n,https://github.com/bitcoin/bitcoin/pull/3706#issuecomment-35453552,35453552,
gmaxwell,2014-02-19T00:40:41Z,"sdaves: Yes, and go look where that function is called. It does not limit the total supply of coins.\n",https://github.com/bitcoin/bitcoin/pull/3706#issuecomment-35453642,35453642,
sdaves,2014-02-19T00:44:31Z,In rpcserver main core and wallet.\n,https://github.com/bitcoin/bitcoin/pull/3706#issuecomment-35453908,35453908,
gmaxwell,2014-02-19T00:47:45Z,"Right, where it does _NOTHING_ to limit the number of coins in existence.\n",https://github.com/bitcoin/bitcoin/pull/3706#issuecomment-35454095,35454095,
sdaves,2014-02-19T00:50:28Z,Are you saying there is already a test that verifies that more than 21 million bitcoins cannot be created?\n,https://github.com/bitcoin/bitcoin/pull/3706#issuecomment-35454287,35454287,
sdaves,2014-02-19T00:51:42Z,"I compiled the bitcoin master branch with the MAX_MONEY set to double the value, and everything ran fine, as well as no tests throwing an error. However, with this patch, there is a test error thrown.\n",https://github.com/bitcoin/bitcoin/pull/3706#issuecomment-35454361,35454361,
sipa,2014-02-19T00:56:06Z,"Well duh...\n\nHow about you try setting MAX_MONEY to let's say 1 million and see if you can still validate the blockchain? You'll see it succeeds, even though there is a lot more than 1000000 BTC in circulation.\n",https://github.com/bitcoin/bitcoin/pull/3706#issuecomment-35454632,35454632,
sipa,2014-02-19T00:57:15Z,See #3707 for a simple test that does verify something.\n,https://github.com/bitcoin/bitcoin/pull/3706#issuecomment-35454716,35454716,
sdaves,2014-02-19T01:10:36Z,Shouldn't you also verify that MAX_MONEY hasn't been compromised? MoneyRange is dependent on MAX_MONEY.\n\nPieter Wuille notifications@github.com wrote:\n\n> See #3707 for a simple test that does verify something.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/bitcoin/bitcoin/pull/3706#issuecomment-35454716\n,https://github.com/bitcoin/bitcoin/pull/3706#issuecomment-35455569,35455569,
sipa,2014-02-19T01:15:47Z,"How about we go checking that the constant NULL hasn't been compromised?\n\nTests aren't about detecting compromisation. They're there to detect bugs. If someone changes the MAX_MONEY constant, we'll notice. Just defining it a second time in tests doesn't make it any more obvious.\n",https://github.com/bitcoin/bitcoin/pull/3706#issuecomment-35455890,35455890,
int03h,2014-02-19T01:22:28Z,compare null to random . when equal execute.. code that will never be executed ever.. lol.\n,https://github.com/bitcoin/bitcoin/pull/3706#issuecomment-35456286,35456286,
sdaves,2014-02-19T01:29:14Z,"Validating business requirements with tests is not superfluous. It's good testing. Not sure why you are making agreements from absurdity.\n\nPieter Wuille notifications@github.com wrote:\n\n> How about we go checking that the constant NULL hasn't been compromised?\n> \n> Tests aren't about detecting compromisation. They're there to detect bugs. If someone changes the MAX_MONEY constant, we'll noti",https://github.com/bitcoin/bitcoin/pull/3706#issuecomment-35456645,35456645,
gavinandresen,2014-02-19T02:03:14Z,"NACK. Useless unit test, closing.\n",https://github.com/bitcoin/bitcoin/pull/3706#issuecomment-35458554,35458554,
