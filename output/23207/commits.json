[
  {
    "sha": "faac1cda6e2ca1d86b1551fc90453132f249d511",
    "node_id": "C_kwDOABII59oAKGZhYWMxY2RhNmUyY2ExZDg2YjE1NTFmYzkwNDUzMTMyZjI0OWQ1MTE",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-06T11:41:31Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-06T11:39:39Z"
      },
      "message": "test: Use generate* from TestFramework, not TestNode",
      "tree": {
        "sha": "ba025f03b8cf8f74f0900ac7f5411ba4b38041d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba025f03b8cf8f74f0900ac7f5411ba4b38041d5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faac1cda6e2ca1d86b1551fc90453132f249d511",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj/1gv/dO01M7U9ZDGfdT7nJkkqWVObhm+4yYIZvg38rgHn7P9ClGKrCwuGtzPn\n7bA+ZDxOvslnLabNSvvUtkJjn3xAjyOwpWv4VKpHbF1yMkhC7028TrUwfLAq/QZP\nEIGD5awDS8ddN/00bebYjmpJKEhlbz9yOUWp1b4ed7DMdZeZOobItGhnUaWpuU1R\nTxYD2BAg9MuVfkJpq51XtVv2SlzaQOFw1Iim2HpF3JHTT2RWqRN+sblKi0gwswSl\nDIZD0+pudu3wIEHoW7HAUFK8D7ktj6xAu2IpSAE1dZ4qXll9eTOer2bQZuzsGv6Y\nzRN9mWCfEQaXEPzWhpfZtZ837iNl9CMairZ8Uql6UreO+mZq6PjnA389N/k9ZP3K\n7fmVQvsLY3/G9WCFxu4epK3dpxQT4s5FoLKpGJefrvfYbPfdn+zznjIwHY52a+ll\nodGUwsFlFWECbA4jvxCfjBUM7F+mVameWunpRMZ+WjPU2l2YUH+Fo1ZQ6fu5TMrH\nKUKFvwuA\n=emiz\n-----END PGP SIGNATURE-----",
        "payload": "tree ba025f03b8cf8f74f0900ac7f5411ba4b38041d5\nparent 66d11b14357c474416181227e197406ca8fb5dee\nauthor MarcoFalke <falke.marco@gmail.com> 1633520491 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1633520379 +0200\n\ntest: Use generate* from TestFramework, not TestNode\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faac1cda6e2ca1d86b1551fc90453132f249d511",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faac1cda6e2ca1d86b1551fc90453132f249d511",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faac1cda6e2ca1d86b1551fc90453132f249d511/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "66d11b14357c474416181227e197406ca8fb5dee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66d11b14357c474416181227e197406ca8fb5dee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/66d11b14357c474416181227e197406ca8fb5dee"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "89a5c8382600aef077064141a029c2252eb8ff79",
        "filename": "test/functional/mempool_package_limits.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faac1cda6e2ca1d86b1551fc90453132f249d511/test/functional/mempool_package_limits.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faac1cda6e2ca1d86b1551fc90453132f249d511/test/functional/mempool_package_limits.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_package_limits.py?ref=faac1cda6e2ca1d86b1551fc90453132f249d511",
        "patch": "@@ -244,7 +244,7 @@ def test_desc_count_limits_2(self):\n             assert_equal(txres[\"package-error\"], \"package-mempool-limits\")\n \n         # Clear mempool and check that the package passes now\n-        node.generate(1)\n+        self.generate(node, 1)\n         assert all([res[\"allowed\"] for res in node.testmempoolaccept(rawtxs=package_hex)])\n \n     def test_anc_count_limits(self):"
      },
      {
        "sha": "afa5139da74a002e6e56cd382b75080a81033e19",
        "filename": "test/functional/wallet_transactiontime_rescan.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faac1cda6e2ca1d86b1551fc90453132f249d511/test/functional/wallet_transactiontime_rescan.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faac1cda6e2ca1d86b1551fc90453132f249d511/test/functional/wallet_transactiontime_rescan.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_transactiontime_rescan.py?ref=faac1cda6e2ca1d86b1551fc90453132f249d511",
        "patch": "@@ -63,7 +63,7 @@ def run_test(self):\n \n         # generate some btc to create transactions and check blockcount\n         initial_mine = COINBASE_MATURITY + 1\n-        minernode.generatetoaddress(initial_mine, m1)\n+        self.generatetoaddress(minernode, initial_mine, m1)\n         assert_equal(minernode.getblockcount(), initial_mine + 200)\n \n         # synchronize nodes and time\n@@ -76,7 +76,7 @@ def run_test(self):\n         miner_wallet.sendtoaddress(wo1, 10)\n \n         # generate blocks and check blockcount\n-        minernode.generatetoaddress(COINBASE_MATURITY, m1)\n+        self.generatetoaddress(minernode, COINBASE_MATURITY, m1)\n         assert_equal(minernode.getblockcount(), initial_mine + 300)\n \n         # synchronize nodes and time\n@@ -89,7 +89,7 @@ def run_test(self):\n         miner_wallet.sendtoaddress(wo2, 5)\n \n         # generate blocks and check blockcount\n-        minernode.generatetoaddress(COINBASE_MATURITY, m1)\n+        self.generatetoaddress(minernode, COINBASE_MATURITY, m1)\n         assert_equal(minernode.getblockcount(), initial_mine + 400)\n \n         # synchronize nodes and time\n@@ -102,7 +102,7 @@ def run_test(self):\n         miner_wallet.sendtoaddress(wo3, 1)\n \n         # generate more blocks and check blockcount\n-        minernode.generatetoaddress(COINBASE_MATURITY, m1)\n+        self.generatetoaddress(minernode, COINBASE_MATURITY, m1)\n         assert_equal(minernode.getblockcount(), initial_mine + 500)\n \n         self.log.info('Check user\\'s final balance and transaction count')"
      }
    ]
  },
  {
    "sha": "fac7f6102feb1eb1c47ea8cb1c75c4f4dbf2f6b0",
    "node_id": "C_kwDOABII59oAKGZhYzdmNjEwMmZlYjFlYjFjNDdlYThjYjFjNzVjNGY0ZGJmMmY2YjA",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-06T11:40:24Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-06T11:39:44Z"
      },
      "message": "test: Use generate* node RPC, not wallet RPC",
      "tree": {
        "sha": "1806cdf9cc8249d023ca8319d612276399195435",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1806cdf9cc8249d023ca8319d612276399195435"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fac7f6102feb1eb1c47ea8cb1c75c4f4dbf2f6b0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgs1wwAt9i8MOw1YRUSDw2WWBSTbiZrnoZtO/HlKWbVcPbyatLvU2Vk+m2LZWg6\no/T0nGqGX+nfv3yf6Jf7nVNRjkwXlQKGkB+N9Z/KTePPpF4IpZKFg8TQecC2ESF1\n5zIoHWECn7NNdIV8v6FrfOuRlQVkCXpN3LlcnLNPZs7vbQJIbEBCA5jW+RfjlKD9\nfSzoC+zgYMgY4KsPo/U4OPyx2qvrRoNxMMuycNMS224JgCgN3N2KTNjI6Y9PWSkU\nvbQ72mMi6z977DB3qt44zYRFrSdr6/LhTC5ka/rdtMMu/R8j8UUpUSQ8IAjYo1Ij\n/OeMj/ZAkI1m17rf/M7RoC5ypGvbd/V4aR0E+mj3fjMDbodrrLGSf3yWsdceiaJb\nRnYJu0RrzCIfiiJGRFvmfwCtQC8ny0msT5pCn65svPhcoFq8JI0N/zxwrA2TLonp\nOp0Sd0ju9166ctFWpCnqIwscqebNp1zmFnjCnib2ZIWHKOdR2H1v7Ya2mdQU76rq\njplOS07H\n=foOq\n-----END PGP SIGNATURE-----",
        "payload": "tree 1806cdf9cc8249d023ca8319d612276399195435\nparent faac1cda6e2ca1d86b1551fc90453132f249d511\nauthor MarcoFalke <falke.marco@gmail.com> 1633520424 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1633520384 +0200\n\ntest: Use generate* node RPC, not wallet RPC\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac7f6102feb1eb1c47ea8cb1c75c4f4dbf2f6b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fac7f6102feb1eb1c47ea8cb1c75c4f4dbf2f6b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac7f6102feb1eb1c47ea8cb1c75c4f4dbf2f6b0/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "faac1cda6e2ca1d86b1551fc90453132f249d511",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faac1cda6e2ca1d86b1551fc90453132f249d511",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faac1cda6e2ca1d86b1551fc90453132f249d511"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "4ec44a8a6cb590a92c10486eca1506e388ffc8e8",
        "filename": "test/functional/wallet_descriptor.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac7f6102feb1eb1c47ea8cb1c75c4f4dbf2f6b0/test/functional/wallet_descriptor.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac7f6102feb1eb1c47ea8cb1c75c4f4dbf2f6b0/test/functional/wallet_descriptor.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_descriptor.py?ref=fac7f6102feb1eb1c47ea8cb1c75c4f4dbf2f6b0",
        "patch": "@@ -84,7 +84,7 @@ def run_test(self):\n         send_wrpc = self.nodes[0].get_wallet_rpc(\"desc1\")\n \n         # Generate some coins\n-        self.generatetoaddress(send_wrpc, COINBASE_MATURITY + 1, send_wrpc.getnewaddress())\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 1, send_wrpc.getnewaddress())\n \n         # Make transactions\n         self.log.info(\"Test sending and receiving\")"
      },
      {
        "sha": "c8f9664885d49a6bba209bb310bd6e2194496838",
        "filename": "test/functional/wallet_importdescriptors.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac7f6102feb1eb1c47ea8cb1c75c4f4dbf2f6b0/test/functional/wallet_importdescriptors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac7f6102feb1eb1c47ea8cb1c75c4f4dbf2f6b0/test/functional/wallet_importdescriptors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importdescriptors.py?ref=fac7f6102feb1eb1c47ea8cb1c75c4f4dbf2f6b0",
        "patch": "@@ -74,7 +74,7 @@ def run_test(self):\n         assert_equal(wpriv.getwalletinfo()['keypoolsize'], 0)\n \n         self.log.info('Mining coins')\n-        self.generatetoaddress(w0, COINBASE_MATURITY + 1, w0.getnewaddress())\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 1, w0.getnewaddress())\n \n         # RPC importdescriptors -----------------------------------------------\n \n@@ -405,7 +405,7 @@ def run_test(self):\n                      solvable=True,\n                      ismine=True)\n         txid = w0.sendtoaddress(address, 49.99995540)\n-        self.generatetoaddress(w0, 6, w0.getnewaddress())\n+        self.generatetoaddress(self.nodes[0], 6, w0.getnewaddress())\n         self.sync_blocks()\n         tx = wpriv.createrawtransaction([{\"txid\": txid, \"vout\": 0}], {w0.getnewaddress(): 49.999})\n         signed_tx = wpriv.signrawtransactionwithwallet(tx)"
      }
    ]
  },
  {
    "sha": "fac62e6ff594f03832f5c0057f9b67c9118c21f4",
    "node_id": "C_kwDOABII59oAKGZhYzYyZTZmZjU5NGYwMzgzMmY1YzAwNTdmOWI2N2M5MTE4YzIxZjQ",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-07-27T11:59:55Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-06T11:41:08Z"
      },
      "message": "test: Delete generate* calls from TestNode",
      "tree": {
        "sha": "247cd64f7ab4628b8422f733161b98bc573157e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/247cd64f7ab4628b8422f733161b98bc573157e4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fac62e6ff594f03832f5c0057f9b67c9118c21f4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUh5Ywv/ZKBOLj14Ytc0LvemOjm85Od1wCL06RjZJ8JEXBnJZvY7n0GR5nTpyWc+\naMPyDUbQiyrxV2tS31Un4ojNqVMyH/VNUHeMJCxHqwwEPkhTG35bm83irA4Vkcwh\n5sYBQ5cU7vjOZ4NhWH7WgeE3E+prbHOpS+EM9x3yC8hti0ct1uO30TkKni2+APa7\n4BFi2QkCnYEuEDHi83ya+mKJk5FeOTuqvO0VWJnXuagbhoISe9gOmgWt+pmOEW6A\nG699im115ZgEbvQxRUdiLs+qIeKuo18ldP+DfYFg6MVGupv+t8Gb0TWk6bJ1qXhH\nY8g14eZ1+M5v1ninI4WpBlCo5pVJD+NcXq8Uh21C18dyb3q/k45zIT/6W5hinOSq\nqLW3OYXevB+BQY3vOCmna+HjqRFPPVSrj55ShNSPt1UH7x5geCNgg8QSet35EIyu\n1/RDhxe7mZdTRYuSUGl2HvbJsn3l7APKOKu6+iWu/Gz6dwdyEIsORyowdH2a7M6P\nHUXfjyOt\n=IWVj\n-----END PGP SIGNATURE-----",
        "payload": "tree 247cd64f7ab4628b8422f733161b98bc573157e4\nparent fac7f6102feb1eb1c47ea8cb1c75c4f4dbf2f6b0\nauthor MarcoFalke <falke.marco@gmail.com> 1627387195 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1633520468 +0200\n\ntest: Delete generate* calls from TestNode\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac62e6ff594f03832f5c0057f9b67c9118c21f4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fac62e6ff594f03832f5c0057f9b67c9118c21f4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac62e6ff594f03832f5c0057f9b67c9118c21f4/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fac7f6102feb1eb1c47ea8cb1c75c4f4dbf2f6b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac7f6102feb1eb1c47ea8cb1c75c4f4dbf2f6b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fac7f6102feb1eb1c47ea8cb1c75c4f4dbf2f6b0"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 20,
      "deletions": 8
    },
    "files": [
      {
        "sha": "727ac6aed92070a63fedd87e8b3aacbed48e8c03",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac62e6ff594f03832f5c0057f9b67c9118c21f4/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac62e6ff594f03832f5c0057f9b67c9118c21f4/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=fac62e6ff594f03832f5c0057f9b67c9118c21f4",
        "patch": "@@ -628,19 +628,19 @@ def join_network(self):\n         self.sync_all()\n \n     def generate(self, generator, *args, **kwargs):\n-        blocks = generator.generate(*args, **kwargs)\n+        blocks = generator.generate(*args, invalid_call=False, **kwargs)\n         return blocks\n \n     def generateblock(self, generator, *args, **kwargs):\n-        blocks = generator.generateblock(*args, **kwargs)\n+        blocks = generator.generateblock(*args, invalid_call=False, **kwargs)\n         return blocks\n \n     def generatetoaddress(self, generator, *args, **kwargs):\n-        blocks = generator.generatetoaddress(*args, **kwargs)\n+        blocks = generator.generatetoaddress(*args, invalid_call=False, **kwargs)\n         return blocks\n \n     def generatetodescriptor(self, generator, *args, **kwargs):\n-        blocks = generator.generatetodescriptor(*args, **kwargs)\n+        blocks = generator.generatetodescriptor(*args, invalid_call=False, **kwargs)\n         return blocks\n \n     def sync_blocks(self, nodes=None, wait=1, timeout=60):"
      },
      {
        "sha": "e8ff41a46d0c9623bb7b4cfaf0a1758277064d1e",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 14,
        "deletions": 2,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac62e6ff594f03832f5c0057f9b67c9118c21f4/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac62e6ff594f03832f5c0057f9b67c9118c21f4/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=fac62e6ff594f03832f5c0057f9b67c9118c21f4",
        "patch": "@@ -297,9 +297,21 @@ def wait_for_cookie_credentials(self):\n             time.sleep(1.0 / poll_per_s)\n         self._raise_assertion_error(\"Unable to retrieve cookie credentials after {}s\".format(self.rpc_timeout))\n \n-    def generate(self, nblocks, maxtries=1000000):\n+    def generate(self, nblocks, maxtries=1000000, **kwargs):\n         self.log.debug(\"TestNode.generate() dispatches `generate` call to `generatetoaddress`\")\n-        return self.generatetoaddress(nblocks=nblocks, address=self.get_deterministic_priv_key().address, maxtries=maxtries)\n+        return self.generatetoaddress(nblocks=nblocks, address=self.get_deterministic_priv_key().address, maxtries=maxtries, **kwargs)\n+\n+    def generateblock(self, *args, invalid_call, **kwargs):\n+        assert not invalid_call\n+        return self.__getattr__('generateblock')(*args, **kwargs)\n+\n+    def generatetoaddress(self, *args, invalid_call, **kwargs):\n+        assert not invalid_call\n+        return self.__getattr__('generatetoaddress')(*args, **kwargs)\n+\n+    def generatetodescriptor(self, *args, invalid_call, **kwargs):\n+        assert not invalid_call\n+        return self.__getattr__('generatetodescriptor')(*args, **kwargs)\n \n     def get_wallet_rpc(self, wallet_name):\n         if self.use_cli:"
      },
      {
        "sha": "a420ea1cf819a6b3c95a0061b19e369f7458087d",
        "filename": "test/functional/test_framework/wallet.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac62e6ff594f03832f5c0057f9b67c9118c21f4/test/functional/test_framework/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac62e6ff594f03832f5c0057f9b67c9118c21f4/test/functional/test_framework/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/wallet.py?ref=fac62e6ff594f03832f5c0057f9b67c9118c21f4",
        "patch": "@@ -109,9 +109,9 @@ def sign_tx(self, tx, fixed_length=True):\n                 break\n         tx.vin[0].scriptSig = CScript([der_sig + bytes(bytearray([SIGHASH_ALL]))])\n \n-    def generate(self, num_blocks):\n+    def generate(self, num_blocks, **kwargs):\n         \"\"\"Generate blocks with coinbase outputs to the internal address, and append the outputs to the internal list\"\"\"\n-        blocks = self._test_node.generatetodescriptor(num_blocks, self.get_descriptor())\n+        blocks = self._test_node.generatetodescriptor(num_blocks, self.get_descriptor(), **kwargs)\n         for b in blocks:\n             cb_tx = self._test_node.getblock(blockhash=b, verbosity=2)['tx'][0]\n             self._utxos.append({'txid': cb_tx['txid'], 'vout': 0, 'value': cb_tx['vout'][0]['value']})"
      }
    ]
  }
]