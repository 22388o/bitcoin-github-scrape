vasild,2021-08-20 11:11:42,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22754#issuecomment-902619034,902619034,
jnewbery,2021-08-20 13:46:56,"I'm ~0 on this change. I don't think there's any real benefit in moving this initialization code from init.cpp to a free function in addrdb.cpp that gets called by init. That doesn't seem to me to be reducing the complexity of what `AppInitMain()` is doing, rather than just hiding it behind a function call.",https://github.com/bitcoin/bitcoin/pull/22754#issuecomment-902704651,902704651,
MarcoFalke,2021-08-20 14:04:17,"init.cpp is almost 2000 lines of code. I don't see why init.cpp needs to include all existing headers to learn about the implementation details of each module to initialize them. Just like wallet initialization and block importing was moved out, I think the address database details can be moved out as well.",https://github.com/bitcoin/bitcoin/pull/22754#issuecomment-902716083,902716083,
DrahtBot,2021-08-20 16:08:40,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#20487](https://github.com/bitcoin/bitcoin/pull/20487) (Add syscall sandboxing using seccomp-bpf (Linux secure computing ",https://github.com/bitcoin/bitcoin/pull/22754#issuecomment-902800395,902800395,
jnewbery,2021-08-20 16:41:09,"> I don't see why init.cpp needs to include all existing headers to learn about the implementation details of each module to initialize them.\n\nThis PR doesn't reduce the number of headers that init.cpp includes (and I also don't think it's a problem for init to include lots of headers - after all, it's init's job to start everything up so it needs to include the headers for all the submodules)",https://github.com/bitcoin/bitcoin/pull/22754#issuecomment-902819393,902819393,
MarcoFalke,2021-08-21 12:33:27,"As this is required for some other changes, I am just going to bundle with them.",https://github.com/bitcoin/bitcoin/pull/22754#issuecomment-903110122,903110122,
laanwj,2021-08-20 11:05:31,"Maybe return `std::unique_ptr<CAddrMan>`? (or an optional, if it can fail, but doesn't seem so). Passing it in then asserting seems unnecessary.",https://github.com/bitcoin/bitcoin/pull/22754#discussion_r692861814,692861814,src/addrman.cpp
jonatack,2021-08-20 11:28:26,"nit, if you retouch\n```suggestion\n    const int64_t nStart{GetTimeMillis()};\n```",https://github.com/bitcoin/bitcoin/pull/22754#discussion_r692873196,692873196,src/addrman.cpp
MarcoFalke,2021-08-20 11:37:20,Done,https://github.com/bitcoin/bitcoin/pull/22754#discussion_r692877801,692877801,src/addrman.cpp
MarcoFalke,2021-08-20 11:38:06,Done,https://github.com/bitcoin/bitcoin/pull/22754#discussion_r692878177,692878177,src/addrman.cpp
