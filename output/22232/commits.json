[
  {
    "sha": "fa621ededdfe31a200b77a8787de7e3d2e667aec",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTYyMWVkZWRkZmUzMWEyMDBiNzdhODc4N2RlN2UzZDJlNjY3YWVj",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-06-13T15:11:09Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-06-14T06:02:45Z"
      },
      "message": "refactor: Pass script verify flags as uint32_t\n\nThey are cast to unsigned anyway when calling VerifyScript,\nbitcoinconsensus_verify_script*, or CountWitnessSigOps.",
      "tree": {
        "sha": "a2ed1f8f92630acb201c1fc3d57e2eab550a8ad2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2ed1f8f92630acb201c1fc3d57e2eab550a8ad2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa621ededdfe31a200b77a8787de7e3d2e667aec",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhzAgwAsF/0yMOlQ7fp3bTJS3upYi/tX1shdTKFsJqUFpLRYp4D7TTNZXMcukls\ng0+L+22rIJfrtfdyjhvWlqskenhK6eGLVxl2qadgthCegMKHbZCImx9h843Q5JcD\nJrzmYA3PSFhhdGei7LKbcyx5hMRVrFZgIrl5KaSG8Kv5U/UaEUhfcku1qEG28bfI\nB15KxEnLoNe6EjGR+gNSZlZA7X1Giur7mW7UVObgfcYiOeedQIyXY6m0rjJcDbOF\nBHUhHXGktdxPENLQ7eABtb4GYtKMe8VXWM4TJBqV932imlCYI9y6aPdT+78hdagv\n59lPsgMHBXzVywMwVb6tFp52EM4NeaNpiTOzlgU10+6hj1PP2Pla18EV32v18P7e\nt9PF4aqiGuAgKpE+fAPZA/oQfJNAb7N6iiAgMXn/HZs7w+OtIBfrEyB9ahRxHHNg\ns1aM4hVqUaSlPlIfCVth/3pTlZUO/ftsBPFhhmhhmSuu9Z5lY1ZU4ykjPcb2pqSf\npLQHv2n0\n=GtoF\n-----END PGP SIGNATURE-----",
        "payload": "tree a2ed1f8f92630acb201c1fc3d57e2eab550a8ad2\nparent 9c1ec689f353d3d7c34695a074f82bb2ea449538\nauthor MarcoFalke <falke.marco@gmail.com> 1623597069 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1623650565 +0200\n\nrefactor: Pass script verify flags as uint32_t\n\nThey are cast to unsigned anyway when calling VerifyScript,\nbitcoinconsensus_verify_script*, or CountWitnessSigOps.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa621ededdfe31a200b77a8787de7e3d2e667aec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa621ededdfe31a200b77a8787de7e3d2e667aec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa621ededdfe31a200b77a8787de7e3d2e667aec/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9c1ec689f353d3d7c34695a074f82bb2ea449538",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c1ec689f353d3d7c34695a074f82bb2ea449538",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9c1ec689f353d3d7c34695a074f82bb2ea449538"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 16,
      "deletions": 17
    },
    "files": [
      {
        "sha": "928aa7573c7403d09c9cb9fe4e832dfaefc1d587",
        "filename": "src/bench/verify_script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa621ededdfe31a200b77a8787de7e3d2e667aec/src/bench/verify_script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa621ededdfe31a200b77a8787de7e3d2e667aec/src/bench/verify_script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/verify_script.cpp?ref=fa621ededdfe31a200b77a8787de7e3d2e667aec",
        "patch": "@@ -21,7 +21,7 @@ static void VerifyScriptBench(benchmark::Bench& bench)\n     const ECCVerifyHandle verify_handle;\n     ECC_Start();\n \n-    const int flags = SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_P2SH;\n+    const uint32_t flags{SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_P2SH};\n     const int witnessversion = 0;\n \n     // Key pair."
      },
      {
        "sha": "4403e465a4487743b6540ec4b25122dc67a0ba04",
        "filename": "src/consensus/tx_verify.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa621ededdfe31a200b77a8787de7e3d2e667aec/src/consensus/tx_verify.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa621ededdfe31a200b77a8787de7e3d2e667aec/src/consensus/tx_verify.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.cpp?ref=fa621ededdfe31a200b77a8787de7e3d2e667aec",
        "patch": "@@ -135,7 +135,7 @@ unsigned int GetP2SHSigOpCount(const CTransaction& tx, const CCoinsViewCache& in\n     return nSigOps;\n }\n \n-int64_t GetTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& inputs, int flags)\n+int64_t GetTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& inputs, uint32_t flags)\n {\n     int64_t nSigOps = GetLegacySigOpCount(tx) * WITNESS_SCALE_FACTOR;\n "
      },
      {
        "sha": "264433c33d3c235c59e878cd15f63f28e6585a38",
        "filename": "src/consensus/tx_verify.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa621ededdfe31a200b77a8787de7e3d2e667aec/src/consensus/tx_verify.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa621ededdfe31a200b77a8787de7e3d2e667aec/src/consensus/tx_verify.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.h?ref=fa621ededdfe31a200b77a8787de7e3d2e667aec",
        "patch": "@@ -49,10 +49,10 @@ unsigned int GetP2SHSigOpCount(const CTransaction& tx, const CCoinsViewCache& ma\n  * Compute total signature operation cost of a transaction.\n  * @param[in] tx     Transaction for which we are computing the cost\n  * @param[in] inputs Map of previous transactions that have outputs we're spending\n- * @param[out] flags Script verification flags\n+ * @param[in] flags Script verification flags\n  * @return Total signature operation cost of tx\n  */\n-int64_t GetTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& inputs, int flags);\n+int64_t GetTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& inputs, uint32_t flags);\n \n /**\n  * Check if transaction is final and can be included in a block with the"
      },
      {
        "sha": "9b8f6df3895b06509bc4ac6820a7d85fe0c756e0",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa621ededdfe31a200b77a8787de7e3d2e667aec/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa621ededdfe31a200b77a8787de7e3d2e667aec/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=fa621ededdfe31a200b77a8787de7e3d2e667aec",
        "patch": "@@ -39,8 +39,7 @@ enum\n  *  All flags are intended to be soft forks: the set of acceptable scripts under\n  *  flags (A | B) is a subset of the acceptable scripts under flag (A).\n  */\n-enum\n-{\n+enum : uint32_t {\n     SCRIPT_VERIFY_NONE      = 0,\n \n     // Evaluate P2SH subscripts (BIP16)."
      },
      {
        "sha": "46e5dd4825706bb10b8d7412de5feefebf4ec8b3",
        "filename": "src/test/fuzz/coins_view.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa621ededdfe31a200b77a8787de7e3d2e667aec/src/test/fuzz/coins_view.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa621ededdfe31a200b77a8787de7e3d2e667aec/src/test/fuzz/coins_view.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/coins_view.cpp?ref=fa621ededdfe31a200b77a8787de7e3d2e667aec",
        "patch": "@@ -258,7 +258,7 @@ FUZZ_TARGET_INIT(coins_view, initialize_coins_view)\n                     // consensus/tx_verify.cpp:130: unsigned int GetP2SHSigOpCount(const CTransaction &, const CCoinsViewCache &): Assertion `!coin.IsSpent()' failed.\n                     return;\n                 }\n-                const int flags = fuzzed_data_provider.ConsumeIntegral<int>();\n+                const auto flags{fuzzed_data_provider.ConsumeIntegral<uint32_t>()};\n                 if (!transaction.vin.empty() && (flags & SCRIPT_VERIFY_WITNESS) != 0 && (flags & SCRIPT_VERIFY_P2SH) == 0) {\n                     // Avoid:\n                     // script/interpreter.cpp:1705: size_t CountWitnessSigOps(const CScript &, const CScript &, const CScriptWitness *, unsigned int): Assertion `(flags & SCRIPT_VERIFY_P2SH) != 0' failed."
      },
      {
        "sha": "56e2aa63b9ef37674095507c7bd93c1cddc9ff1c",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa621ededdfe31a200b77a8787de7e3d2e667aec/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa621ededdfe31a200b77a8787de7e3d2e667aec/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=fa621ededdfe31a200b77a8787de7e3d2e667aec",
        "patch": "@@ -123,7 +123,7 @@ static ScriptError_t ParseScriptError(const std::string& name)\n \n BOOST_FIXTURE_TEST_SUITE(script_tests, BasicTestingSetup)\n \n-void DoTest(const CScript& scriptPubKey, const CScript& scriptSig, const CScriptWitness& scriptWitness, int flags, const std::string& message, int scriptError, CAmount nValue = 0)\n+void DoTest(const CScript& scriptPubKey, const CScript& scriptSig, const CScriptWitness& scriptWitness, uint32_t flags, const std::string& message, int scriptError, CAmount nValue = 0)\n {\n     bool expect = (scriptError == SCRIPT_ERR_OK);\n     if (flags & SCRIPT_VERIFY_CLEANSTACK) {\n@@ -139,8 +139,8 @@ void DoTest(const CScript& scriptPubKey, const CScript& scriptSig, const CScript\n \n     // Verify that removing flags from a passing test or adding flags to a failing test does not change the result.\n     for (int i = 0; i < 16; ++i) {\n-        int extra_flags = InsecureRandBits(16);\n-        int combined_flags = expect ? (flags & ~extra_flags) : (flags | extra_flags);\n+        uint32_t extra_flags(InsecureRandBits(16));\n+        uint32_t combined_flags{expect ? (flags & ~extra_flags) : (flags | extra_flags)};\n         // Weed out some invalid flag combinations.\n         if (combined_flags & SCRIPT_VERIFY_CLEANSTACK && ~combined_flags & (SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS)) continue;\n         if (combined_flags & SCRIPT_VERIFY_WITNESS && ~combined_flags & SCRIPT_VERIFY_P2SH) continue;\n@@ -150,7 +150,7 @@ void DoTest(const CScript& scriptPubKey, const CScript& scriptSig, const CScript\n #if defined(HAVE_CONSENSUS_LIB)\n     CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n     stream << tx2;\n-    int libconsensus_flags = flags & bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL;\n+    uint32_t libconsensus_flags{flags & bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL};\n     if (libconsensus_flags == flags) {\n         int expectedSuccessCode = expect ? 1 : 0;\n         if (flags & bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS) {\n@@ -258,7 +258,7 @@ class TestBuilder\n     bool havePush;\n     std::vector<unsigned char> push;\n     std::string comment;\n-    int flags;\n+    uint32_t flags;\n     int scriptError;\n     CAmount nValue;\n \n@@ -278,7 +278,7 @@ class TestBuilder\n     }\n \n public:\n-    TestBuilder(const CScript& script_, const std::string& comment_, int flags_, bool P2SH = false, WitnessMode wm = WitnessMode::NONE, int witnessversion = 0, CAmount nValue_ = 0) : script(script_), havePush(false), comment(comment_), flags(flags_), scriptError(SCRIPT_ERR_OK), nValue(nValue_)\n+    TestBuilder(const CScript& script_, const std::string& comment_, uint32_t flags_, bool P2SH = false, WitnessMode wm = WitnessMode::NONE, int witnessversion = 0, CAmount nValue_ = 0) : script(script_), havePush(false), comment(comment_), flags(flags_), scriptError(SCRIPT_ERR_OK), nValue(nValue_)\n     {\n         CScript scriptPubKey = script;\n         if (wm == WitnessMode::PKH) {\n@@ -1677,7 +1677,7 @@ static void AssetTest(const UniValue& test)\n     const std::vector<CTxOut> prevouts = TxOutsFromJSON(test[\"prevouts\"]);\n     BOOST_CHECK(prevouts.size() == mtx.vin.size());\n     size_t idx = test[\"index\"].get_int64();\n-    unsigned int test_flags = ParseScriptFlags(test[\"flags\"].get_str());\n+    uint32_t test_flags{ParseScriptFlags(test[\"flags\"].get_str())};\n     bool fin = test.exists(\"final\") && test[\"final\"].get_bool();\n \n     if (test.exists(\"success\")) {"
      },
      {
        "sha": "db96fd49401617ef713106cd86442005c50ce99a",
        "filename": "src/test/sigopcount_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa621ededdfe31a200b77a8787de7e3d2e667aec/src/test/sigopcount_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa621ededdfe31a200b77a8787de7e3d2e667aec/src/test/sigopcount_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/sigopcount_tests.cpp?ref=fa621ededdfe31a200b77a8787de7e3d2e667aec",
        "patch": "@@ -67,7 +67,7 @@ BOOST_AUTO_TEST_CASE(GetSigOpCount)\n  * Verifies script execution of the zeroth scriptPubKey of tx output and\n  * zeroth scriptSig and witness of tx input.\n  */\n-static ScriptError VerifyWithFlag(const CTransaction& output, const CMutableTransaction& input, int flags)\n+static ScriptError VerifyWithFlag(const CTransaction& output, const CMutableTransaction& input, uint32_t flags)\n {\n     ScriptError error;\n     CTransaction inputi(input);\n@@ -121,7 +121,7 @@ BOOST_AUTO_TEST_CASE(GetTxSigOpCost)\n     key.MakeNewKey(true);\n     CPubKey pubkey = key.GetPubKey();\n     // Default flags\n-    int flags = SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_P2SH;\n+    const uint32_t flags{SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_P2SH};\n \n     // Multisig script (legacy counting)\n     {"
      },
      {
        "sha": "571f792a5358f845889a0c1969db35944a0c47d1",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa621ededdfe31a200b77a8787de7e3d2e667aec/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa621ededdfe31a200b77a8787de7e3d2e667aec/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=fa621ededdfe31a200b77a8787de7e3d2e667aec",
        "patch": "@@ -446,7 +446,7 @@ static void CreateCreditAndSpend(const FillableSigningProvider& keystore, const\n     assert(input.vin[0].scriptWitness.stack == inputm.vin[0].scriptWitness.stack);\n }\n \n-static void CheckWithFlag(const CTransactionRef& output, const CMutableTransaction& input, int flags, bool success)\n+static void CheckWithFlag(const CTransactionRef& output, const CMutableTransaction& input, uint32_t flags, bool success)\n {\n     ScriptError error;\n     CTransaction inputi(input);"
      }
    ]
  }
]