[
  {
    "sha": "99993f066405863c66ccaec0a8427129f4515768",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OTk5M2YwNjY0MDU4NjNjNjZjY2FlYzBhODQyNzEyOWY0NTE1NzY4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-09T08:59:16Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-09T08:53:24Z"
      },
      "message": "fuzz: Avoid excessively large min fee rate in tx_pool",
      "tree": {
        "sha": "844c20b28b9cade6c5438217a3ba93c0ecb427c9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/844c20b28b9cade6c5438217a3ba93c0ecb427c9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/99993f066405863c66ccaec0a8427129f4515768",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgN6gwAiLP/KrpchHjgGuXctHxuEcwq14K0l0YKS8RCDFthLCP6hcDcN3j99nxR\ntouwOgXiHPiBImvqYWr2rmgHkLtGgIQs97mGVLsQeqJE6qaKZe99yFb9Yh6fpSkL\nDL12ODtEBF5DeqY67iN7j57ZEkAiINS/y7IvIm4wPSM9t9FMTfqlHpEexfXpu0Np\nNBW1hkpcvFqqk0aBtMbM+YKbdjpX26eMEOjXagLFk9LARgGID3aWY7JPjjifzFC4\nFmP5pdSaXRbLeF30RMefNi56berJ2mEkJuuwPWvZl39hULjgu/oGsaywrT/n18M1\nhVY51nNyTXtB5nEJQYKlOKDeZWSzdO9FtGtk7W1tZDiRWz4tso+1a3k1V6GtiLOZ\nRCy1nLUDpThU3KlrSBGptBBobRGp7SmUimfcGvao01kLuq0AHbnmkNMEGWlwWOv6\nyI52v9BHlnl6L5Tt/Z6qcSDyDlFvDsph+/rLyHb+pBywUPogUmY628+JmthwCtfZ\nIv6PnKRB\n=aBoH\n-----END PGP SIGNATURE-----",
        "payload": "tree 844c20b28b9cade6c5438217a3ba93c0ecb427c9\nparent 5925f1e652768a9502831b9ccf78d16cf3c37d29\nauthor MarcoFalke <falke.marco@gmail.com> 1620550756 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1620550404 +0200\n\nfuzz: Avoid excessively large min fee rate in tx_pool\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99993f066405863c66ccaec0a8427129f4515768",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/99993f066405863c66ccaec0a8427129f4515768",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99993f066405863c66ccaec0a8427129f4515768/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5925f1e652768a9502831b9ccf78d16cf3c37d29",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5925f1e652768a9502831b9ccf78d16cf3c37d29",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5925f1e652768a9502831b9ccf78d16cf3c37d29"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 7,
      "deletions": 5
    },
    "files": [
      {
        "sha": "068e207118ed6e229c00180b913ec4679e3cff88",
        "filename": "src/test/fuzz/tx_pool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99993f066405863c66ccaec0a8427129f4515768/src/test/fuzz/tx_pool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99993f066405863c66ccaec0a8427129f4515768/src/test/fuzz/tx_pool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/tx_pool.cpp?ref=99993f066405863c66ccaec0a8427129f4515768",
        "patch": "@@ -84,7 +84,7 @@ void Finish(FuzzedDataProvider& fuzzed_data_provider, MockedTxPool& tx_pool, CCh\n     {\n         BlockAssembler::Options options;\n         options.nBlockMaxWeight = fuzzed_data_provider.ConsumeIntegralInRange(0U, MAX_BLOCK_WEIGHT);\n-        options.blockMinFeeRate = CFeeRate{ConsumeMoney(fuzzed_data_provider)};\n+        options.blockMinFeeRate = CFeeRate{ConsumeMoney(fuzzed_data_provider, /* max */ COIN)};\n         auto assembler = BlockAssembler{chainstate, *static_cast<CTxMemPool*>(&tx_pool), ::Params(), options};\n         auto block_template = assembler.CreateNewBlock(CScript{} << OP_TRUE);\n         Assert(block_template->block.vtx.size() >= 1);"
      },
      {
        "sha": "bcf0b0ce7287b95dd649cb898ee3390fc2d8a8a0",
        "filename": "src/test/fuzz/util.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99993f066405863c66ccaec0a8427129f4515768/src/test/fuzz/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99993f066405863c66ccaec0a8427129f4515768/src/test/fuzz/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.cpp?ref=99993f066405863c66ccaec0a8427129f4515768",
        "patch": "@@ -217,6 +217,11 @@ void FillNode(FuzzedDataProvider& fuzzed_data_provider, CNode& node, bool init_v\n     }\n }\n \n+CAmount ConsumeMoney(FuzzedDataProvider& fuzzed_data_provider, const std::optional<CAmount>& max) noexcept\n+{\n+    return fuzzed_data_provider.ConsumeIntegralInRange<CAmount>(0, max.value_or(MAX_MONEY));\n+}\n+\n int64_t ConsumeTime(FuzzedDataProvider& fuzzed_data_provider, const std::optional<int64_t>& min, const std::optional<int64_t>& max) noexcept\n {\n     // Avoid t=0 (1970-01-01T00:00:00Z) since SetMockTime(0) disables mocktime."
      },
      {
        "sha": "48b78778963b560b284fd9e61fff27878b00cfab",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99993f066405863c66ccaec0a8427129f4515768/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99993f066405863c66ccaec0a8427129f4515768/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=99993f066405863c66ccaec0a8427129f4515768",
        "patch": "@@ -123,10 +123,7 @@ template <typename WeakEnumType, size_t size>\n     return static_cast<opcodetype>(fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0, MAX_OPCODE));\n }\n \n-[[nodiscard]] inline CAmount ConsumeMoney(FuzzedDataProvider& fuzzed_data_provider) noexcept\n-{\n-    return fuzzed_data_provider.ConsumeIntegralInRange<CAmount>(0, MAX_MONEY);\n-}\n+[[nodiscard]] CAmount ConsumeMoney(FuzzedDataProvider& fuzzed_data_provider, const std::optional<CAmount>& max = std::nullopt) noexcept;\n \n [[nodiscard]] int64_t ConsumeTime(FuzzedDataProvider& fuzzed_data_provider, const std::optional<int64_t>& min = std::nullopt, const std::optional<int64_t>& max = std::nullopt) noexcept;\n "
      }
    ]
  }
]