gmaxwell,2016-12-23T17:45:33Z,"&& is shortcutting so this doesn't change it to skip AcceptToMemoryPool.  It does however change it so that it does not run the else clause which is needed for the forced relaying for whitelisted peers (which needs to run already for transactions we already have).\n\nSo I think the only real behavior change this makes is to break the functionality.",https://github.com/bitcoin/bitcoin/pull/9414#issuecomment-269023650,269023650,
rebroad,2016-12-24T05:11:40Z,"@gmaxwell Ah, yes, my apologies I has missed the whitelist intention there. It was primarily noticing that `(!tx.HasWitness() && !state.CorruptionPossible())` is bring run against txs we already have in the mempool that made me wonder if there was a logic oversight here, but perhaps the overhead from running this checks again is not significant.\n\nI am not aware yet of why we would want to rela",https://github.com/bitcoin/bitcoin/pull/9414#issuecomment-269069639,269069639,
rebroad,2016-12-23T16:55:36Z,for fMissingInputs to be true AlreadyHave() had to be false,https://github.com/bitcoin/bitcoin/pull/9414#discussion_r93784567,93784567,src/net_processing.cpp
rebroad,2016-12-23T16:56:01Z,"whereas here AlreadyHave() could have been true still, so for whitelisted nodes, the same tx could be relayed multiple times",https://github.com/bitcoin/bitcoin/pull/9414#discussion_r93784609,93784609,src/net_processing.cpp
gmaxwell,2016-12-23T19:48:41Z,"That is the intended and advertised purpose of the whitelisting, read the comment in the else block!",https://github.com/bitcoin/bitcoin/pull/9414#discussion_r93797591,93797591,src/net_processing.cpp
