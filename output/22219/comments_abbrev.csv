MarcoFalke,2021-06-11 07:23:43,ci fails. Maybe this needs rebase on bitcoin/bitcoin#22216 ?,https://github.com/bitcoin/bitcoin/pull/22219#issuecomment-859345790,859345790,
ryanofsky,2021-06-11 09:13:41,"Rebased 12ca4486bc6237e92e2dcf1bad8dc6fc61cd3e8d -> 40dad10a19802149be588b23968d73cc28c58ad3 ([`pr/ipc-make.1`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-make.1) -> [`pr/ipc-make.2`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-make.2), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-make.1-rebase..pr/ipc-make.2)) after #22216 to fix implicit dependency on #22216 cau",https://github.com/bitcoin/bitcoin/pull/22219#issuecomment-859417811,859417811,
ryanofsky,2021-06-11 09:15:20,"> ci fails. Maybe this needs rebase on #22216 ?\n\nThanks! Rebased now. Nice catch of this dependency",https://github.com/bitcoin/bitcoin/pull/22219#issuecomment-859420655,859420655,
MarcoFalke,2021-06-11 10:12:39,windows build is red :grimacing: ,https://github.com/bitcoin/bitcoin/pull/22219#issuecomment-859471689,859471689,
ryanofsky,2021-06-11 17:10:15,"> windows build is red :grimacing: \n\nHopefully fixed!\n\n---\n\nUpdated 40dad10a19802149be588b23968d73cc28c58ad3 -> 7a879afa11d1bc1cf8c2327b377d7b3d1485a9fe ([`pr/ipc-make.2`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-make.2) -> [`pr/ipc-make.3`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-make.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-make.2..pr/i",https://github.com/bitcoin/bitcoin/pull/22219#issuecomment-859723310,859723310,
DrahtBot,2021-06-17 00:09:26,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15936](https://github.com/bitcoin/bitcoin/pull/15936) (Unify bitcoin-qt and bitcoind persistent settings by ryanofsky)\n",https://github.com/bitcoin/bitcoin/pull/22219#issuecomment-862814734,862814734,
ryanofsky,2021-08-17 23:24:13,"Rebased c50facd030ec5bd2c7fc2b55486a3cb77b59b1d8 -> e4709c7b56612553fb7cbf16ef2d5099c5b732d0 ([`pr/ipc-make.5`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-make.5) -> [`pr/ipc-make.6`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-make.6), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-make.5-rebase..pr/ipc-make.6)) due to conflict with bitcoin-core/gui#381",https://github.com/bitcoin/bitcoin/pull/22219#issuecomment-900696171,900696171,
ryanofsky,2021-08-23 19:02:42,"@jamesob @ariard could reack this since it has been rebased? The only change was to fix a conflict in Qt includes https://github.com/ryanofsky/bitcoin/compare/pr/ipc-make.5-rebase..pr/ipc-make.6\n\nThis PR is just replacing `interfaces::MakeNode()` function calls with `interfaces::Init::makeNode()` virtual method calls, `interfaces::MakeChain()` function calls with `interfaces::Init::makeChain()",https://github.com/bitcoin/bitcoin/pull/22219#issuecomment-904031429,904031429,
jamesob,2021-09-08 15:23:31,"reACK https://github.com/bitcoin/bitcoin/commit/e4709c7b56612553fb7cbf16ef2d5099c5b732d0\n\nCloned changes and verified interdiff. Only changes are fixing qt imports.",https://github.com/bitcoin/bitcoin/pull/22219#issuecomment-915336762,915336762,
achow101,2021-09-13 20:34:24,ACK e4709c7b56612553fb7cbf16ef2d5099c5b732d0,https://github.com/bitcoin/bitcoin/pull/22219#issuecomment-918554607,918554607,
ryanofsky,2021-09-15 17:15:57,Is this ready for merge? Trivial change with multiple acks,https://github.com/bitcoin/bitcoin/pull/22219#issuecomment-920212947,920212947,
fanquake,2021-09-16 01:06:35,"Looks like this has broken the CI. https://github.com/bitcoin/bitcoin/runs/3616387813:\n\n```bash\nPASS   : WalletTests::cleanupTestCase()\nTotals: 3 passed, 0 failed, 0 skipped, 0 blacklisted, 2431ms\n********* Finished testing of WalletTests *********\n********* Start testing of AddressBookTests *********\nConfig: Using QtTest library 5.12.11, Qt 5.12.11 (arm-little_endian-ilp32-eabi-hard",https://github.com/bitcoin/bitcoin/pull/22219#issuecomment-920496509,920496509,
ryanofsky,2021-09-16 02:17:02,"> Looks like this has broken the CI. [bitcoin/bitcoin/runs/3616387813](https://github.com/bitcoin/bitcoin/runs/3616387813):\n\nSorry about this. I reproduced this locally and posted a fix in #22992. I think there was a silent conflict, maybe with #19101 that prevented this getting caught by CI\n\n",https://github.com/bitcoin/bitcoin/pull/22219#issuecomment-920521717,920521717,
ariard,2021-07-08 17:13:00,"What's the rational of having an interfaces maker such as `makeEcho` supported on `BitcoindInit`, `bitcoind` program should never be executed as a spawned process/`IpcServer` ?\n\nOne option is to tread this as a throw returned to the client, as `MakeWalletClient` is providing, though it means anytime we add a new derived Init interface, we need to add throw stub in all other programs non-suppor",https://github.com/bitcoin/bitcoin/pull/22219#discussion_r666378196,666378196,src/init/bitcoind.cpp
ryanofsky,2021-07-08 21:13:22,"re: https://github.com/bitcoin/bitcoin/pull/22219#discussion_r666378196\n\nThanks for experimenting with this!\n\n> What's the rational of having an interfaces maker such as `makeEcho` supported on `BitcoindInit`, `bitcoind` program should never be executed as a spawned process/`IpcServer` ?\n\nJust like all interfaces in the `src/interfaces/` directory, the `interfaces::Init` interface can ",https://github.com/bitcoin/bitcoin/pull/22219#discussion_r666522301,666522301,src/init/bitcoind.cpp
ariard,2021-07-12 15:18:27,"Thanks to recall the design of `interfaces::Init`, this is matching the rough mental model I've in mind!\n\n> If the current process like bitcoin-gui has none of these things linked in then all of these methods will return null.\n\nThis is where I think the interfaces error handling could be improved. Instead of returning null if the current process doesn't have linked code, what do you think ",https://github.com/bitcoin/bitcoin/pull/22219#discussion_r668024917,668024917,src/init/bitcoind.cpp
ryanofsky,2021-07-12 16:29:29,"re: https://github.com/bitcoin/bitcoin/pull/22219#discussion_r668024917\n\n> But AFAICT, you think it's more ergonomic to return null rather than throwing an exception where I would prefer more explicit, verbose failure handling ? That said, I'm good with returning null, just a small ergonomic preference here.\n\nI think it's just a misunderstanding. I like exceptions and think it's often good",https://github.com/bitcoin/bitcoin/pull/22219#discussion_r668081664,668081664,src/init/bitcoind.cpp
