jarolrod,2021-04-15 05:29:43,This would needs tests written. Also consistent failures on [CI](https://cirrus-ci.com/task/5790448116563968?logs=ci#L2751) and [linter](https://cirrus-ci.com/task/6159884023496704?logs=lint#L889),https://github.com/bitcoin/bitcoin/pull/21687#issuecomment-820125027,820125027,
sipa,2021-04-16 05:01:35,"So there could be a number of explanations why someone would want to do this.\n\nOne is that perhaps they simply don't know that multiple connections doesn't really add accuracy to transaction announcements. This synchronization of inbound poisson timers was only added a few releases ago, specifically in response to observing deanonymizers making multiple connections (from the same IP, or from mul",https://github.com/bitcoin/bitcoin/pull/21687#issuecomment-820907002,820907002,
beingmsaad,2021-04-16 05:28:54,"@sipa I completely agree with the policy being aggressive. My bigger concern however was that no two unreachable nodes behind NAT will be able to connect to the same reachable node. Now there are two approaches to find an optimal solution.\n\n(1) The current connection eviction policy. I am currently reviewing it to see if there is a chance of it being a double-edged sword. If we evict adversary",https://github.com/bitcoin/bitcoin/pull/21687#issuecomment-820916278,820916278,
beingmsaad,2021-04-16 05:34:39,"@sipa Also, ""A slightly less aggressive solution would be added to the inbound prioritization logic a feature that prefers disconnecting multiple connections from the same IP (even more than multiple connections from the same IP range)"" looks like a great approach indeed. ",https://github.com/bitcoin/bitcoin/pull/21687#issuecomment-820918792,820918792,
naumenkogs,2021-04-16 09:41:07,"I pretty much agree with @MarcoFalke and @sipa above, but won't add extra noise by rephrasing their arguments.\nI would love to see improvements to bandwidth DoS and transactional privacy, but this PR in the current shape I think is not a good solution to either problem.\n",https://github.com/bitcoin/bitcoin/pull/21687#issuecomment-821054881,821054881,
gmaxwell,2021-04-18 00:24:20,The decision to not do this was very much intentional.  There are some cases where whole countries (e.g. Qatar) access the internet from behind one or just a few IPs-- likewise for many institutions.   Hard prohibiting would allow attackers that can make connections behind these to easily totally deny everyone else behind their firewall from connecting-- just mass connect with a single connection ,https://github.com/bitcoin/bitcoin/pull/21687#issuecomment-821907601,821907601,
beingmsaad,2021-04-18 21:11:52,"I did some experiments today and found that incoming connections indeed share the same delay pool (modulo the minor variations incorporated by network delays). Here is what I did. Correct me if there are lapses in the approach. \n\n(1) I set up a reachable node (A) with 7 outbound connections (B1...B7).\n(2) Using a script on another machine, I established 25 outbound connections (C1...C25 --> ",https://github.com/bitcoin/bitcoin/pull/21687#issuecomment-822062420,822062420,
am33r,2021-04-18 21:25:53,"Thanks, everyone for pitching in. \nThe current PR was aimed at highlighting a few caveats in 1IP and 65K connections. \nBased on the feedback, there are a few things that clearly standout. (1) The policy can be made less aggressive by allowing a few connections from the same IP address or the same netgroup as @sipa pointed out. (2) @beingmsaad also highlighted the gap between reachable and unre",https://github.com/bitcoin/bitcoin/pull/21687#issuecomment-822064460,822064460,
sipa,2021-04-18 21:33:45,"> If an attacker makes 15 connections from the same address and requests the blockchain and discards whatever it receives. Assume the attacker has received the entire chain and then repeats all the requests. Is there a mechanism in place to prevent that?\n\nNo, there isn't; our protections against DoS attacks of this nature (ones where the attacker and victim have similar resource costs, against a",https://github.com/bitcoin/bitcoin/pull/21687#issuecomment-822065487,822065487,
beingmsaad,2021-04-18 22:04:27,"> Specializing multiple connections from a single IP is just going to result in attackers using ranges of IP addresses instead as @gmaxwell mentions (especially with increasing IPv6 availability, this is trivial).\n\nI agree with @gmaxwell's observation. However, wouldn't it be more desirable to force the adversary to acquire a range of IP addresses in the given threat model rather than achievin",https://github.com/bitcoin/bitcoin/pull/21687#issuecomment-822069375,822069375,
sipa,2021-04-18 23:50:25,"> However, wouldn't it be more desirable to force the adversary to acquire a range of IP addresses in the given threat model rather than achieving the same goal with just 1 IP address?\n\nIf there are concrete attacks right now that make use of multiple connections per IP (in a way where the attacker actually gains an advantage by using multiple connections), yes.\n\nBut I do expect that in th",https://github.com/bitcoin/bitcoin/pull/21687#issuecomment-822088133,822088133,
gmaxwell,2021-04-21 01:25:14,"> If there are concrete attacks right now that make use of multiple connections per IP (in a way where the attacker actually gains an advantage by using multiple connections), yes.\n\nEven if there are it has to be weighed against the cost of amplifying other attacks by making it easier for an attacker to deny connectivity to the network for other parties sharing his NAT.  My thought is that eve",https://github.com/bitcoin/bitcoin/pull/21687#issuecomment-823707688,823707688,
MarcoFalke,2021-04-21 05:15:46,"I am going to close this for now, because this connection policy wouldn't make sense for us. Though, feel free to continue discussion here.\n\nImprovements to the eviction logic or improving the scheduler to prioritize ""good"" peers (and thus de-prioritize ""bad"" peers) are welcome.",https://github.com/bitcoin/bitcoin/pull/21687#issuecomment-823782467,823782467,
MarcoFalke,2021-04-15 10:22:48,"This is untrue. All inbound connections have the same relay time assigned. See https://github.com/bitcoin/bitcoin/blob/c6b30ccb2eee5f80f844f79766591f0a1326ce43/src/net.cpp#L3014\n\nHaving multiple connections should be no different than a single one.",https://github.com/bitcoin/bitcoin/pull/21687#discussion_r613948313,613948313,src/net.cpp
MarcoFalke,2021-04-15 10:25:26,"I didn't visit the website and I won't open this mp4, but a single inbound connection should be able to ask for the same data that multiple connections ask for.",https://github.com/bitcoin/bitcoin/pull/21687#discussion_r613950030,613950030,src/net.cpp
beingmsaad,2021-04-15 20:03:33,"Feasibly occupying multiple incoming connections using the same IP address will undermine the transaction anonymity property provisioned by the ""diffusion"" process. In the current deployment, a node announces a transaction to each connection after a certain delay. The assumption is that the adversary will not be able to infer the source of the transaction as it might receive the INV from another c",https://github.com/bitcoin/bitcoin/pull/21687#discussion_r614356780,614356780,src/net.cpp
sipa,2021-04-15 20:05:50,"That's not correct. All incoming connections share the same Poisson timer for diffusion, so an attacker that creates multiple incoming connections should not be able to observe (significantly) more than with a single connection.",https://github.com/bitcoin/bitcoin/pull/21687#discussion_r614358042,614358042,src/net.cpp
beingmsaad,2021-04-15 20:15:59,"You are right. Any inbound connection should be able to request the same data that any other connection asks for. In that case, any effect on the bandwidth is perfectly fine. However, having multiple inbound connections from the same IP address makes it a lot easier for the adversary to overwhelm the bandwidth of the victim node. And this can be done easily through simple scripts without actually ",https://github.com/bitcoin/bitcoin/pull/21687#discussion_r614363637,614363637,src/net.cpp
beingmsaad,2021-04-15 21:05:01,"Thanks Pieter. A test case would be to (1) set up a reachable node (say A), (2) find its outgoing connections (getpeerinfo), (3) establish one connection to each of A's outgoing connections, (4) establish multiple connections to A (say 30), and (5) generate a transaction from A and see how much can be inferred. I can do this experiment on my nodes and get back to you with the results. \n\nYou ha",https://github.com/bitcoin/bitcoin/pull/21687#discussion_r614390824,614390824,src/net.cpp
sipa,2021-04-15 21:09:05,"@beingmsaad That would be interesting to get data on!\n\nThe only gain you should get from having multiple incoming connections vs. just a single one is avoiding more internal latency/processing delay in the message processing loop. I.e., if CPU speed was infinite, there should be no gain at all. \n\nI mention ""significantly"" because it's not necessarily true in reality that it's literally no ",https://github.com/bitcoin/bitcoin/pull/21687#discussion_r614393006,614393006,src/net.cpp
beingmsaad,2021-04-15 21:17:25,@sipa I will get some data on it and share it with you (possibly over the weekend). Will generate a few transactions in the testnet and see how much can be inferred by making 2-30 incoming connections. ,https://github.com/bitcoin/bitcoin/pull/21687#discussion_r614397316,614397316,src/net.cpp
practicalswift,2021-04-16 03:53:09,"If these videos contain any relevant rationale for this PR, consider sharing that information as text instead (and then remove the links).\n\nFor security reasons I don't think many regular contributors to this project (which tend to be highly security/OPSEC conscious) would be willing to download and open an MP4 file which is bit-by-bit controlled by an untrusted uploader. FWIW, these lists are",https://github.com/bitcoin/bitcoin/pull/21687#discussion_r614542575,614542575,src/net.cpp
beingmsaad,2021-04-16 04:39:01,"@practicalswift Sure. Actually, we have a research paper in submission. The submission is double-blind and usually, reviewers do not have time to go through data. Hence, I just did a screen recording and uploaded it. \n\nHere is what happens in the two videos. (1) A lightweight scrip occupies all the incoming connections of our reachable node using the same IP address and multiple ports (there a",https://github.com/bitcoin/bitcoin/pull/21687#discussion_r614554801,614554801,src/net.cpp
beingmsaad,2021-04-16 04:46:48,"@practicalswift Additional caveat (alongside bandwidth exhaustion) is the risk of transaction deanonymization. I am currently conducting experiments on that. \n\n33 incoming connections from one IP address for 21 hours looked fishy. So I reached out to @am33r who deployed 1 connection per IP policy to stop that. ",https://github.com/bitcoin/bitcoin/pull/21687#discussion_r614556824,614556824,src/net.cpp
