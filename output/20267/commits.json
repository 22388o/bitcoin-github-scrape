[
  {
    "sha": "6f36242389bd3e7eacf594ce90491e8ccca70f3a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZjM2MjQyMzg5YmQzZTdlYWNmNTk0Y2U5MDQ5MWU4Y2NjYTcwZjNh",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-29T21:17:10Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-01-27T17:52:46Z"
      },
      "message": "tests: Set descriptors default based on compilation\n\nDetermines whether descriptors should be used based on whether the\n--descriptor or --legacy-wallet option is set,\nand the compiled support. If no option is set and both BDB and SQLite\nare available, it defaults to legacy.\n\nThis is used to switch descriptor agnostic tests between descriptors and\nlegacy wallet.",
      "tree": {
        "sha": "acb01f8f8bf313861aa0f37d0b75b8cc2db84aa5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/acb01f8f8bf313861aa0f37d0b75b8cc2db84aa5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6f36242389bd3e7eacf594ce90491e8ccca70f3a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f36242389bd3e7eacf594ce90491e8ccca70f3a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6f36242389bd3e7eacf594ce90491e8ccca70f3a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f36242389bd3e7eacf594ce90491e8ccca70f3a/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d0852f39a7a3bfbb36437ef20bf94c263cad632a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0852f39a7a3bfbb36437ef20bf94c263cad632a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d0852f39a7a3bfbb36437ef20bf94c263cad632a"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 19,
      "deletions": 5
    },
    "files": [
      {
        "sha": "9bbe2e649fb639e9327ca15a0c26d6e22a5a68c8",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 19,
        "deletions": 5,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f36242389bd3e7eacf594ce90491e8ccca70f3a/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f36242389bd3e7eacf594ce90491e8ccca70f3a/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=6f36242389bd3e7eacf594ce90491e8ccca70f3a",
        "patch": "@@ -186,15 +186,30 @@ def parse_args(self):\n         parser.add_argument('--timeout-factor', dest=\"timeout_factor\", type=float, default=1.0, help='adjust test timeouts by a factor. Setting it to 0 disables all timeouts')\n \n         group = parser.add_mutually_exclusive_group()\n-        group.add_argument(\"--descriptors\", default=False, action=\"store_true\",\n+        group.add_argument(\"--descriptors\", action='store_const', const=True,\n                             help=\"Run test using a descriptor wallet\", dest='descriptors')\n-        group.add_argument(\"--legacy-wallet\", default=False, action=\"store_false\",\n+        group.add_argument(\"--legacy-wallet\", action='store_const', const=False,\n                             help=\"Run test using legacy wallets\", dest='descriptors')\n \n         self.add_options(parser)\n         self.options = parser.parse_args()\n         self.options.previous_releases_path = previous_releases_path\n \n+        config = configparser.ConfigParser()\n+        config.read_file(open(self.options.configfile))\n+        self.config = config\n+\n+        if self.options.descriptors is None:\n+            # Prefer BDB unless it isn't available\n+            if self.is_bdb_compiled():\n+                self.options.descriptors = False\n+            elif self.is_sqlite_compiled():\n+                self.options.descriptors = True\n+            else:\n+                # If neither are compiled, tests requiring a wallet will be skipped and the value of self.options.descriptors won't matter\n+                # It still needs to exist and be None in order for tests to work however.\n+                self.options.descriptors = None\n+\n     def setup(self):\n         \"\"\"Call this method to start up the test framework object with options set.\"\"\"\n \n@@ -204,9 +219,8 @@ def setup(self):\n \n         self.options.cachedir = os.path.abspath(self.options.cachedir)\n \n-        config = configparser.ConfigParser()\n-        config.read_file(open(self.options.configfile))\n-        self.config = config\n+        config = self.config\n+\n         fname_bitcoind = os.path.join(\n             config[\"environment\"][\"BUILDDIR\"],\n             \"src\","
      }
    ]
  },
  {
    "sha": "b9b88f57a9b9a28e0f0614c12ae3012cf5050b10",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiOWI4OGY1N2E5YjlhMjhlMGYwNjE0YzEyYWUzMDEyY2Y1MDUwYjEw",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-29T23:41:05Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-01-27T17:52:46Z"
      },
      "message": "Skip legacy wallet reliant tests if BDB is not compiled",
      "tree": {
        "sha": "6d17877cfcf75a849471c9f4b9e16a0937d45cf1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6d17877cfcf75a849471c9f4b9e16a0937d45cf1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b9b88f57a9b9a28e0f0614c12ae3012cf5050b10",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b9b88f57a9b9a28e0f0614c12ae3012cf5050b10",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b9b88f57a9b9a28e0f0614c12ae3012cf5050b10",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b9b88f57a9b9a28e0f0614c12ae3012cf5050b10/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6f36242389bd3e7eacf594ce90491e8ccca70f3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f36242389bd3e7eacf594ce90491e8ccca70f3a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6f36242389bd3e7eacf594ce90491e8ccca70f3a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "99bf8d499a5b01c7bd0519b91ecf807b1646f358",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b9b88f57a9b9a28e0f0614c12ae3012cf5050b10/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b9b88f57a9b9a28e0f0614c12ae3012cf5050b10/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=b9b88f57a9b9a28e0f0614c12ae3012cf5050b10",
        "patch": "@@ -789,6 +789,8 @@ def skip_if_no_wallet(self):\n             raise SkipTest(\"wallet has not been compiled.\")\n         if self.options.descriptors:\n             self.skip_if_no_sqlite()\n+        else:\n+            self.skip_if_no_bdb()\n \n     def skip_if_no_sqlite(self):\n         \"\"\"Skip the running test if sqlite has not been compiled.\"\"\""
      }
    ]
  },
  {
    "sha": "3641597d7ef6f5097a9e93cab3ef7e0f9c820296",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNjQxNTk3ZDdlZjZmNTA5N2E5ZTkzY2FiM2VmN2UwZjljODIwMjk2",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-29T17:51:41Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-01-27T17:52:46Z"
      },
      "message": "tests: Don't make any wallets unless wallet is required",
      "tree": {
        "sha": "7fd21582372b3f2eb1df8495361dcaba3acbc31d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7fd21582372b3f2eb1df8495361dcaba3acbc31d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3641597d7ef6f5097a9e93cab3ef7e0f9c820296",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3641597d7ef6f5097a9e93cab3ef7e0f9c820296",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3641597d7ef6f5097a9e93cab3ef7e0f9c820296",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3641597d7ef6f5097a9e93cab3ef7e0f9c820296/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b9b88f57a9b9a28e0f0614c12ae3012cf5050b10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b9b88f57a9b9a28e0f0614c12ae3012cf5050b10",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b9b88f57a9b9a28e0f0614c12ae3012cf5050b10"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1f5dc0a6bff804b6b51ed60ab4ec276f243dc783",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3641597d7ef6f5097a9e93cab3ef7e0f9c820296/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3641597d7ef6f5097a9e93cab3ef7e0f9c820296/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=3641597d7ef6f5097a9e93cab3ef7e0f9c820296",
        "patch": "@@ -110,6 +110,9 @@ def __init__(self):\n         # skipped. If list is truncated, wallet creation is skipped and keys\n         # are not imported.\n         self.wallet_names = None\n+        # By default the wallet is not required. Set to true by skip_if_no_wallet().\n+        # When False, we ignore wallet_names regardless of what it is.\n+        self.requires_wallet = False\n         self.set_test_params()\n         assert self.wallet_names is None or len(self.wallet_names) <= self.num_nodes\n         if self.options.timeout_factor == 0 :\n@@ -393,7 +396,7 @@ def setup_nodes(self):\n             extra_args = self.extra_args\n         self.add_nodes(self.num_nodes, extra_args)\n         self.start_nodes()\n-        if self.is_wallet_compiled():\n+        if self.requires_wallet:\n             self.import_deterministic_coinbase_privkeys()\n         if not self.setup_clean_chain:\n             for n in self.nodes:\n@@ -785,6 +788,7 @@ def skip_if_no_bitcoind_zmq(self):\n \n     def skip_if_no_wallet(self):\n         \"\"\"Skip the running test if wallet has not been compiled.\"\"\"\n+        self.requires_wallet = True\n         if not self.is_wallet_compiled():\n             raise SkipTest(\"wallet has not been compiled.\")\n         if self.options.descriptors:"
      }
    ]
  },
  {
    "sha": "1f20cac9d41e507901a2811d6db7147d7ab0321b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZjIwY2FjOWQ0MWU1MDc5MDFhMjgxMWQ2ZGI3MTQ3ZDdhYjAzMjFi",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-29T19:19:45Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-01-27T17:52:46Z"
      },
      "message": "Disable wallet_descriptor.py bdb format check if BDB is not compiled",
      "tree": {
        "sha": "fc88aa91a293fe94099c15a78daa726a09ffe279",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fc88aa91a293fe94099c15a78daa726a09ffe279"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f20cac9d41e507901a2811d6db7147d7ab0321b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f20cac9d41e507901a2811d6db7147d7ab0321b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1f20cac9d41e507901a2811d6db7147d7ab0321b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f20cac9d41e507901a2811d6db7147d7ab0321b/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3641597d7ef6f5097a9e93cab3ef7e0f9c820296",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3641597d7ef6f5097a9e93cab3ef7e0f9c820296",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3641597d7ef6f5097a9e93cab3ef7e0f9c820296"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 8,
      "deletions": 5
    },
    "files": [
      {
        "sha": "c04a15a67ced3a50480ee091715e2afc98d32252",
        "filename": "test/functional/wallet_descriptor.py",
        "status": "modified",
        "additions": 8,
        "deletions": 5,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1f20cac9d41e507901a2811d6db7147d7ab0321b/test/functional/wallet_descriptor.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1f20cac9d41e507901a2811d6db7147d7ab0321b/test/functional/wallet_descriptor.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_descriptor.py?ref=1f20cac9d41e507901a2811d6db7147d7ab0321b",
        "patch": "@@ -23,11 +23,14 @@ def skip_test_if_missing_module(self):\n         self.skip_if_no_sqlite()\n \n     def run_test(self):\n-        # Make a legacy wallet and check it is BDB\n-        self.nodes[0].createwallet(wallet_name=\"legacy1\", descriptors=False)\n-        wallet_info = self.nodes[0].getwalletinfo()\n-        assert_equal(wallet_info['format'], 'bdb')\n-        self.nodes[0].unloadwallet(\"legacy1\")\n+        if self.is_bdb_compiled():\n+            # Make a legacy wallet and check it is BDB\n+            self.nodes[0].createwallet(wallet_name=\"legacy1\", descriptors=False)\n+            wallet_info = self.nodes[0].getwalletinfo()\n+            assert_equal(wallet_info['format'], 'bdb')\n+            self.nodes[0].unloadwallet(\"legacy1\")\n+        else:\n+            self.log.warning(\"Skipping BDB test\")\n \n         # Make a descriptor wallet\n         self.log.info(\"Making a descriptor wallet\")"
      }
    ]
  },
  {
    "sha": "c77975abc0123b29b0eb3481b8916e7c025b7c4c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNzc5NzVhYmMwMTIzYjI5YjBlYjM0ODFiODkxNmU3YzAyNWI3YzRj",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-29T19:50:40Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-01-27T17:52:46Z"
      },
      "message": "Disable upgrades tests that require BDB if BDB is not compiled",
      "tree": {
        "sha": "ee37d7e2f2dd0af6eb41accecbef176a5a933dbe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee37d7e2f2dd0af6eb41accecbef176a5a933dbe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c77975abc0123b29b0eb3481b8916e7c025b7c4c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c77975abc0123b29b0eb3481b8916e7c025b7c4c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c77975abc0123b29b0eb3481b8916e7c025b7c4c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c77975abc0123b29b0eb3481b8916e7c025b7c4c/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1f20cac9d41e507901a2811d6db7147d7ab0321b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f20cac9d41e507901a2811d6db7147d7ab0321b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1f20cac9d41e507901a2811d6db7147d7ab0321b"
      }
    ],
    "stats": {
      "total": 134,
      "additions": 68,
      "deletions": 66
    },
    "files": [
      {
        "sha": "e6a53b52dbc7a6ad8788a276ef31329887bc5a6e",
        "filename": "test/functional/feature_backwards_compatibility.py",
        "status": "modified",
        "additions": 68,
        "deletions": 66,
        "changes": 134,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c77975abc0123b29b0eb3481b8916e7c025b7c4c/test/functional/feature_backwards_compatibility.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c77975abc0123b29b0eb3481b8916e7c025b7c4c/test/functional/feature_backwards_compatibility.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_backwards_compatibility.py?ref=c77975abc0123b29b0eb3481b8916e7c025b7c4c",
        "patch": "@@ -354,73 +354,75 @@ def run_test(self):\n         hdkeypath = v17_info[\"hdkeypath\"]\n         pubkey = v17_info[\"pubkey\"]\n \n-        # Copy the 0.16 wallet to the last Bitcoin Core version and open it:\n-        shutil.copyfile(\n-            os.path.join(node_v16_wallets_dir, \"wallets/u1_v16\"),\n-            os.path.join(node_master_wallets_dir, \"u1_v16\")\n-        )\n-        load_res = node_master.loadwallet(\"u1_v16\")\n-        # Make sure this wallet opens without warnings. See https://github.com/bitcoin/bitcoin/pull/19054\n-        assert_equal(load_res['warning'], '')\n-        wallet = node_master.get_wallet_rpc(\"u1_v16\")\n-        info = wallet.getaddressinfo(v16_addr)\n-        descriptor = \"wpkh([\" + info[\"hdmasterfingerprint\"] + hdkeypath[1:] + \"]\" + v16_pubkey + \")\"\n-        assert_equal(info[\"desc\"], descsum_create(descriptor))\n-\n-        # Now copy that same wallet back to 0.16 to make sure no automatic upgrade breaks it\n-        os.remove(os.path.join(node_v16_wallets_dir, \"wallets/u1_v16\"))\n-        shutil.copyfile(\n-            os.path.join(node_master_wallets_dir, \"u1_v16\"),\n-            os.path.join(node_v16_wallets_dir, \"wallets/u1_v16\")\n-        )\n-        self.start_node(-1, extra_args=[\"-wallet=u1_v16\"])\n-        wallet = node_v16.get_wallet_rpc(\"u1_v16\")\n-        info = wallet.validateaddress(v16_addr)\n-        assert_equal(info, v16_info)\n-\n-        # Copy the 0.17 wallet to the last Bitcoin Core version and open it:\n-        node_v17.unloadwallet(\"u1_v17\")\n-        shutil.copytree(\n-            os.path.join(node_v17_wallets_dir, \"u1_v17\"),\n-            os.path.join(node_master_wallets_dir, \"u1_v17\")\n-        )\n-        node_master.loadwallet(\"u1_v17\")\n-        wallet = node_master.get_wallet_rpc(\"u1_v17\")\n-        info = wallet.getaddressinfo(address)\n-        descriptor = \"wpkh([\" + info[\"hdmasterfingerprint\"] + hdkeypath[1:] + \"]\" + pubkey + \")\"\n-        assert_equal(info[\"desc\"], descsum_create(descriptor))\n-\n-        # Now copy that same wallet back to 0.17 to make sure no automatic upgrade breaks it\n-        node_master.unloadwallet(\"u1_v17\")\n-        shutil.rmtree(os.path.join(node_v17_wallets_dir, \"u1_v17\"))\n-        shutil.copytree(\n-            os.path.join(node_master_wallets_dir, \"u1_v17\"),\n-            os.path.join(node_v17_wallets_dir, \"u1_v17\")\n-        )\n-        node_v17.loadwallet(\"u1_v17\")\n-        wallet = node_v17.get_wallet_rpc(\"u1_v17\")\n-        info = wallet.getaddressinfo(address)\n-        assert_equal(info, v17_info)\n-\n-        # Copy the 0.19 wallet to the last Bitcoin Core version and open it:\n-        shutil.copytree(\n-            os.path.join(node_v19_wallets_dir, \"w1_v19\"),\n-            os.path.join(node_master_wallets_dir, \"w1_v19\")\n-        )\n-        node_master.loadwallet(\"w1_v19\")\n-        wallet = node_master.get_wallet_rpc(\"w1_v19\")\n-        assert wallet.getaddressinfo(address_18075)[\"solvable\"]\n+        if self.is_bdb_compiled():\n+            # Old wallets are BDB and will only work if BDB is compiled\n+            # Copy the 0.16 wallet to the last Bitcoin Core version and open it:\n+            shutil.copyfile(\n+                os.path.join(node_v16_wallets_dir, \"wallets/u1_v16\"),\n+                os.path.join(node_master_wallets_dir, \"u1_v16\")\n+            )\n+            load_res = node_master.loadwallet(\"u1_v16\")\n+            # Make sure this wallet opens without warnings. See https://github.com/bitcoin/bitcoin/pull/19054\n+            assert_equal(load_res['warning'], '')\n+            wallet = node_master.get_wallet_rpc(\"u1_v16\")\n+            info = wallet.getaddressinfo(v16_addr)\n+            descriptor = \"wpkh([\" + info[\"hdmasterfingerprint\"] + hdkeypath[1:] + \"]\" + v16_pubkey + \")\"\n+            assert_equal(info[\"desc\"], descsum_create(descriptor))\n+\n+            # Now copy that same wallet back to 0.16 to make sure no automatic upgrade breaks it\n+            os.remove(os.path.join(node_v16_wallets_dir, \"wallets/u1_v16\"))\n+            shutil.copyfile(\n+                os.path.join(node_master_wallets_dir, \"u1_v16\"),\n+                os.path.join(node_v16_wallets_dir, \"wallets/u1_v16\")\n+            )\n+            self.start_node(-1, extra_args=[\"-wallet=u1_v16\"])\n+            wallet = node_v16.get_wallet_rpc(\"u1_v16\")\n+            info = wallet.validateaddress(v16_addr)\n+            assert_equal(info, v16_info)\n \n-        # Now copy that same wallet back to 0.19 to make sure no automatic upgrade breaks it\n-        node_master.unloadwallet(\"w1_v19\")\n-        shutil.rmtree(os.path.join(node_v19_wallets_dir, \"w1_v19\"))\n-        shutil.copytree(\n-            os.path.join(node_master_wallets_dir, \"w1_v19\"),\n-            os.path.join(node_v19_wallets_dir, \"w1_v19\")\n-        )\n-        node_v19.loadwallet(\"w1_v19\")\n-        wallet = node_v19.get_wallet_rpc(\"w1_v19\")\n-        assert wallet.getaddressinfo(address_18075)[\"solvable\"]\n+            # Copy the 0.17 wallet to the last Bitcoin Core version and open it:\n+            node_v17.unloadwallet(\"u1_v17\")\n+            shutil.copytree(\n+                os.path.join(node_v17_wallets_dir, \"u1_v17\"),\n+                os.path.join(node_master_wallets_dir, \"u1_v17\")\n+            )\n+            node_master.loadwallet(\"u1_v17\")\n+            wallet = node_master.get_wallet_rpc(\"u1_v17\")\n+            info = wallet.getaddressinfo(address)\n+            descriptor = \"wpkh([\" + info[\"hdmasterfingerprint\"] + hdkeypath[1:] + \"]\" + pubkey + \")\"\n+            assert_equal(info[\"desc\"], descsum_create(descriptor))\n+\n+            # Now copy that same wallet back to 0.17 to make sure no automatic upgrade breaks it\n+            node_master.unloadwallet(\"u1_v17\")\n+            shutil.rmtree(os.path.join(node_v17_wallets_dir, \"u1_v17\"))\n+            shutil.copytree(\n+                os.path.join(node_master_wallets_dir, \"u1_v17\"),\n+                os.path.join(node_v17_wallets_dir, \"u1_v17\")\n+            )\n+            node_v17.loadwallet(\"u1_v17\")\n+            wallet = node_v17.get_wallet_rpc(\"u1_v17\")\n+            info = wallet.getaddressinfo(address)\n+            assert_equal(info, v17_info)\n+\n+            # Copy the 0.19 wallet to the last Bitcoin Core version and open it:\n+            shutil.copytree(\n+                os.path.join(node_v19_wallets_dir, \"w1_v19\"),\n+                os.path.join(node_master_wallets_dir, \"w1_v19\")\n+            )\n+            node_master.loadwallet(\"w1_v19\")\n+            wallet = node_master.get_wallet_rpc(\"w1_v19\")\n+            assert wallet.getaddressinfo(address_18075)[\"solvable\"]\n+\n+            # Now copy that same wallet back to 0.19 to make sure no automatic upgrade breaks it\n+            node_master.unloadwallet(\"w1_v19\")\n+            shutil.rmtree(os.path.join(node_v19_wallets_dir, \"w1_v19\"))\n+            shutil.copytree(\n+                os.path.join(node_master_wallets_dir, \"w1_v19\"),\n+                os.path.join(node_v19_wallets_dir, \"w1_v19\")\n+            )\n+            node_v19.loadwallet(\"w1_v19\")\n+            wallet = node_v19.get_wallet_rpc(\"w1_v19\")\n+            assert wallet.getaddressinfo(address_18075)[\"solvable\"]\n \n if __name__ == '__main__':\n     BackwardsCompatibilityTest().main()"
      }
    ]
  },
  {
    "sha": "1f1bef8dbab7225884d769a45477ee11d0ebf654",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZjFiZWY4ZGJhYjcyMjU4ODRkNzY5YTQ1NDc3ZWUxMWQwZWJmNjU0",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-29T19:55:37Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-01-27T17:52:46Z"
      },
      "message": "Have feature_filelock.py test both bdb and sqlite, depending on compiled",
      "tree": {
        "sha": "43979419aab174c0885080b5acc6d459f9cbdd1c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/43979419aab174c0885080b5acc6d459f9cbdd1c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f1bef8dbab7225884d769a45477ee11d0ebf654",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f1bef8dbab7225884d769a45477ee11d0ebf654",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1f1bef8dbab7225884d769a45477ee11d0ebf654",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f1bef8dbab7225884d769a45477ee11d0ebf654/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c77975abc0123b29b0eb3481b8916e7c025b7c4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c77975abc0123b29b0eb3481b8916e7c025b7c4c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c77975abc0123b29b0eb3481b8916e7c025b7c4c"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 17,
      "deletions": 5
    },
    "files": [
      {
        "sha": "2798d11b0ab1362f91506314d9dab0695b08b7cb",
        "filename": "test/functional/feature_filelock.py",
        "status": "modified",
        "additions": 17,
        "deletions": 5,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1f1bef8dbab7225884d769a45477ee11d0ebf654/test/functional/feature_filelock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1f1bef8dbab7225884d769a45477ee11d0ebf654/test/functional/feature_filelock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_filelock.py?ref=1f1bef8dbab7225884d769a45477ee11d0ebf654",
        "patch": "@@ -4,6 +4,8 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Check that it's not possible to start a second bitcoind instance using the same datadir or wallet.\"\"\"\n import os\n+import random\n+import string\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.test_node import ErrorMatch\n@@ -27,11 +29,21 @@ def run_test(self):\n         self.nodes[1].assert_start_raises_init_error(extra_args=['-datadir={}'.format(self.nodes[0].datadir), '-noserver'], expected_msg=expected_msg)\n \n         if self.is_wallet_compiled():\n-            self.nodes[0].createwallet(self.default_wallet_name)\n-            wallet_dir = os.path.join(datadir, 'wallets')\n-            self.log.info(\"Check that we can't start a second bitcoind instance using the same wallet\")\n-            expected_msg = \"Error: Error initializing wallet database environment\"\n-            self.nodes[1].assert_start_raises_init_error(extra_args=['-walletdir={}'.format(wallet_dir), '-wallet=' + self.default_wallet_name, '-noserver'], expected_msg=expected_msg, match=ErrorMatch.PARTIAL_REGEX)\n+            def check_wallet_filelock(descriptors):\n+                wallet_name = ''.join([random.choice(string.ascii_lowercase) for _ in range(6)])\n+                self.nodes[0].createwallet(wallet_name=wallet_name, descriptors=descriptors)\n+                wallet_dir = os.path.join(datadir, 'wallets')\n+                self.log.info(\"Check that we can't start a second bitcoind instance using the same wallet\")\n+                if descriptors:\n+                    expected_msg = \"Error: SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another bitcoind?\"\n+                else:\n+                    expected_msg = \"Error: Error initializing wallet database environment\"\n+                self.nodes[1].assert_start_raises_init_error(extra_args=['-walletdir={}'.format(wallet_dir), '-wallet=' + wallet_name, '-noserver'], expected_msg=expected_msg, match=ErrorMatch.PARTIAL_REGEX)\n+\n+            if self.is_bdb_compiled():\n+                check_wallet_filelock(False)\n+            if self.is_sqlite_compiled():\n+                check_wallet_filelock(True)\n \n if __name__ == '__main__':\n     FilelockTest().main()"
      }
    ]
  },
  {
    "sha": "7c71c627d28f0cddaf2349a55336278a681c27c2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YzcxYzYyN2QyOGYwY2RkYWYyMzQ5YTU1MzM2Mjc4YTY4MWMyN2My",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-29T20:37:05Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-01-27T17:52:46Z"
      },
      "message": "Setup wallets with descriptors for feature_notifications",
      "tree": {
        "sha": "dadf9a7023a85d253279b1652c027dedd017b96d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dadf9a7023a85d253279b1652c027dedd017b96d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7c71c627d28f0cddaf2349a55336278a681c27c2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c71c627d28f0cddaf2349a55336278a681c27c2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7c71c627d28f0cddaf2349a55336278a681c27c2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c71c627d28f0cddaf2349a55336278a681c27c2/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1f1bef8dbab7225884d769a45477ee11d0ebf654",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f1bef8dbab7225884d769a45477ee11d0ebf654",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1f1bef8dbab7225884d769a45477ee11d0ebf654"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 29,
      "deletions": 5
    },
    "files": [
      {
        "sha": "b068ce612cb996b8d9e2ff7aa594ddf63b236dbf",
        "filename": "test/functional/feature_notifications.py",
        "status": "modified",
        "additions": 29,
        "deletions": 5,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7c71c627d28f0cddaf2349a55336278a681c27c2/test/functional/feature_notifications.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7c71c627d28f0cddaf2349a55336278a681c27c2/test/functional/feature_notifications.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_notifications.py?ref=7c71c627d28f0cddaf2349a55336278a681c27c2",
        "patch": "@@ -5,11 +5,11 @@\n \"\"\"Test the -alertnotify, -blocknotify and -walletnotify options.\"\"\"\n import os\n \n-from test_framework.address import ADDRESS_BCRT1_UNSPENDABLE, keyhash_to_p2pkh\n+from test_framework.address import ADDRESS_BCRT1_UNSPENDABLE\n+from test_framework.descriptors import descsum_create\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n-    hex_str_to_bytes,\n )\n \n # Linux allow all characters other than \\x00\n@@ -49,6 +49,31 @@ def setup_network(self):\n         super().setup_network()\n \n     def run_test(self):\n+        if self.is_wallet_compiled():\n+            # Setup the descriptors to be imported to the wallet\n+            seed = \"cTdGmKFWpbvpKQ7ejrdzqYT2hhjyb3GPHnLAK7wdi5Em67YLwSm9\"\n+            xpriv = \"tprv8ZgxMBicQKsPfHCsTwkiM1KT56RXbGGTqvc2hgqzycpwbHqqpcajQeMRZoBD35kW4RtyCemu6j34Ku5DEspmgjKdt2qe4SvRch5Kk8B8A2v\"\n+            desc_imports = [{\n+                \"desc\": descsum_create(\"wpkh(\" + xpriv + \"/0/*)\"),\n+                \"timestamp\": 0,\n+                \"active\": True,\n+                \"keypool\": True,\n+            },{\n+                \"desc\": descsum_create(\"wpkh(\" + xpriv + \"/1/*)\"),\n+                \"timestamp\": 0,\n+                \"active\": True,\n+                \"keypool\": True,\n+                \"internal\": True,\n+            }]\n+            # Make the wallets and import the descriptors\n+            # Ensures that node 0 and node 1 share the same wallet for the conflicting transaction tests below.\n+            for i, name in enumerate(self.wallet_names):\n+                self.nodes[i].createwallet(wallet_name=name, descriptors=self.options.descriptors, blank=True, load_on_startup=True)\n+                if self.options.descriptors:\n+                    self.nodes[i].importdescriptors(desc_imports)\n+                else:\n+                    self.nodes[i].sethdseed(True, seed)\n+\n         self.log.info(\"test -blocknotify\")\n         block_count = 10\n         blocks = self.nodes[1].generatetoaddress(block_count, self.nodes[1].getnewaddress() if self.is_wallet_compiled() else ADDRESS_BCRT1_UNSPENDABLE)\n@@ -84,11 +109,10 @@ def run_test(self):\n             for tx_file in os.listdir(self.walletnotify_dir):\n                 os.remove(os.path.join(self.walletnotify_dir, tx_file))\n \n-            # Conflicting transactions tests. Give node 0 same wallet seed as\n-            # node 1, generate spends from node 0, and check notifications\n+            # Conflicting transactions tests.\n+            # Generate spends from node 0, and check notifications\n             # triggered by node 1\n             self.log.info(\"test -walletnotify with conflicting transactions\")\n-            self.nodes[0].sethdseed(seed=self.nodes[1].dumpprivkey(keyhash_to_p2pkh(hex_str_to_bytes(self.nodes[1].getwalletinfo()['hdseedid'])[::-1])))\n             self.nodes[0].rescanblockchain()\n             self.nodes[0].generatetoaddress(100, ADDRESS_BCRT1_UNSPENDABLE)\n             self.sync_blocks()"
      }
    ]
  },
  {
    "sha": "4de23824b0c711ece68f9fc007ffac12126710aa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZGUyMzgyNGIwYzcxMWVjZTY4ZjlmYzAwN2ZmYWMxMjEyNjcxMGFh",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-29T20:42:14Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-01-27T17:52:46Z"
      },
      "message": "Setup wallets for interface_bitcoin_cli.py",
      "tree": {
        "sha": "88263a3fa6ab290b2a032e46160c56b78598437f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/88263a3fa6ab290b2a032e46160c56b78598437f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4de23824b0c711ece68f9fc007ffac12126710aa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4de23824b0c711ece68f9fc007ffac12126710aa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4de23824b0c711ece68f9fc007ffac12126710aa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4de23824b0c711ece68f9fc007ffac12126710aa/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7c71c627d28f0cddaf2349a55336278a681c27c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c71c627d28f0cddaf2349a55336278a681c27c2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7c71c627d28f0cddaf2349a55336278a681c27c2"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2cf0ef2251064179334d8a5fe9c87bca417d8e80",
        "filename": "test/functional/interface_bitcoin_cli.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4de23824b0c711ece68f9fc007ffac12126710aa/test/functional/interface_bitcoin_cli.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4de23824b0c711ece68f9fc007ffac12126710aa/test/functional/interface_bitcoin_cli.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_bitcoin_cli.py?ref=4de23824b0c711ece68f9fc007ffac12126710aa",
        "patch": "@@ -29,6 +29,8 @@ class TestBitcoinCli(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n+        if self.is_wallet_compiled():\n+            self.requires_wallet = True\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_cli()"
      }
    ]
  },
  {
    "sha": "4d03ef9a73ceb5ef4e9d184a135bca6bdeb8c311",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZDAzZWY5YTczY2ViNWVmNGU5ZDE4NGExMzViY2E2YmRlYjhjMzEx",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-29T22:00:44Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-01-27T17:52:46Z"
      },
      "message": "Use MiniWallet in rpc_net.py",
      "tree": {
        "sha": "acef9a1a93d806fe21dd2fee7a0ba26947275467",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/acef9a1a93d806fe21dd2fee7a0ba26947275467"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d03ef9a73ceb5ef4e9d184a135bca6bdeb8c311",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d03ef9a73ceb5ef4e9d184a135bca6bdeb8c311",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4d03ef9a73ceb5ef4e9d184a135bca6bdeb8c311",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d03ef9a73ceb5ef4e9d184a135bca6bdeb8c311/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4de23824b0c711ece68f9fc007ffac12126710aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4de23824b0c711ece68f9fc007ffac12126710aa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4de23824b0c711ece68f9fc007ffac12126710aa"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 5,
      "deletions": 2
    },
    "files": [
      {
        "sha": "cf46616681ac99a0fdc75b89fb0ff0fdabcc5afa",
        "filename": "test/functional/rpc_net.py",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d03ef9a73ceb5ef4e9d184a135bca6bdeb8c311/test/functional/rpc_net.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d03ef9a73ceb5ef4e9d184a135bca6bdeb8c311/test/functional/rpc_net.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_net.py?ref=4d03ef9a73ceb5ef4e9d184a135bca6bdeb8c311",
        "patch": "@@ -25,6 +25,7 @@\n     assert_raises_rpc_error,\n     p2p_port,\n )\n+from test_framework.wallet import MiniWallet\n \n \n def assert_net_servicesnames(servicesflag, servicenames):\n@@ -48,6 +49,9 @@ def set_test_params(self):\n         self.supports_cli = False\n \n     def run_test(self):\n+        # We need miniwallet to make a transaction\n+        self.wallet = MiniWallet(self.nodes[0])\n+        self.wallet.generate(1)\n         # Get out of IBD for the minfeefilter and getpeerinfo tests.\n         self.nodes[0].generate(101)\n \n@@ -74,8 +78,7 @@ def test_connection_count(self):\n     def test_getpeerinfo(self):\n         self.log.info(\"Test getpeerinfo\")\n         # Create a few getpeerinfo last_block/last_transaction values.\n-        if self.is_wallet_compiled():\n-            self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        self.wallet.send_self_transfer(from_node=self.nodes[0]) # Make a transaction so we can see it in the getpeerinfo results\n         self.nodes[1].generate(1)\n         self.sync_all()\n         time_now = int(time.time())"
      }
    ]
  },
  {
    "sha": "09514e1bef46444a67cde9ff13e76bd4b9f8c7ac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOTUxNGUxYmVmNDY0NDRhNjdjZGU5ZmYxM2U3NmJkNGI5ZjhjN2Fj",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-29T22:07:09Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-01-27T17:52:46Z"
      },
      "message": "Setup wallets for interface_zmq.py",
      "tree": {
        "sha": "8b6874db7dfe8b7e1a7c81e47eed9b8e2f52e3e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b6874db7dfe8b7e1a7c81e47eed9b8e2f52e3e7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09514e1bef46444a67cde9ff13e76bd4b9f8c7ac",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09514e1bef46444a67cde9ff13e76bd4b9f8c7ac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/09514e1bef46444a67cde9ff13e76bd4b9f8c7ac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09514e1bef46444a67cde9ff13e76bd4b9f8c7ac/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4d03ef9a73ceb5ef4e9d184a135bca6bdeb8c311",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d03ef9a73ceb5ef4e9d184a135bca6bdeb8c311",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4d03ef9a73ceb5ef4e9d184a135bca6bdeb8c311"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e9f61be4d42c953815315234106bdaaa6113440c",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09514e1bef46444a67cde9ff13e76bd4b9f8c7ac/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09514e1bef46444a67cde9ff13e76bd4b9f8c7ac/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=09514e1bef46444a67cde9ff13e76bd4b9f8c7ac",
        "patch": "@@ -62,6 +62,8 @@ def receive_sequence(self):\n class ZMQTest (BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n+        if self.is_wallet_compiled():\n+            self.requires_wallet = True\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_py3_zmq()"
      }
    ]
  },
  {
    "sha": "b1b679e0ab7a9981e3e78424fe8836edd59abf6f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMWI2NzllMGFiN2E5OTgxZTNlNzg0MjRmZTg4MzZlZGQ1OWFiZjZm",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-11-06T19:22:05Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-01-27T17:52:46Z"
      },
      "message": "Explicitly mark legacy wallet tests as such\n\nSome tests are intended to test only legacy wallet behavior. With\nautomatic switching of wallet type, we need to make them explicit",
      "tree": {
        "sha": "aad9ad557f99b27a8392f42141652b99cd6e584f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aad9ad557f99b27a8392f42141652b99cd6e584f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1b679e0ab7a9981e3e78424fe8836edd59abf6f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1b679e0ab7a9981e3e78424fe8836edd59abf6f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b1b679e0ab7a9981e3e78424fe8836edd59abf6f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1b679e0ab7a9981e3e78424fe8836edd59abf6f/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "09514e1bef46444a67cde9ff13e76bd4b9f8c7ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09514e1bef46444a67cde9ff13e76bd4b9f8c7ac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/09514e1bef46444a67cde9ff13e76bd4b9f8c7ac"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 33,
      "deletions": 33
    },
    "files": [
      {
        "sha": "c26466dd286cb7ce0ddc9cd26bcd4f8edd11c709",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 33,
        "deletions": 33,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1b679e0ab7a9981e3e78424fe8836edd59abf6f/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1b679e0ab7a9981e3e78424fe8836edd59abf6f/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=b1b679e0ab7a9981e3e78424fe8836edd59abf6f",
        "patch": "@@ -86,101 +86,101 @@\n BASE_SCRIPTS = [\n     # Scripts that are run by default.\n     # Longest test should go first, to favor running tests in parallel\n-    'wallet_hd.py',\n+    'wallet_hd.py --legacy-wallet',\n     'wallet_hd.py --descriptors',\n-    'wallet_backup.py',\n+    'wallet_backup.py --legacy-wallet',\n     'wallet_backup.py --descriptors',\n     # vv Tests less than 5m vv\n     'mining_getblocktemplate_longpoll.py',\n     'feature_maxuploadtarget.py',\n     'feature_block.py',\n-    'rpc_fundrawtransaction.py',\n+    'rpc_fundrawtransaction.py --legacy-wallet',\n     'rpc_fundrawtransaction.py --descriptors',\n     'p2p_compactblocks.py',\n     'feature_segwit.py --legacy-wallet',\n     # vv Tests less than 2m vv\n-    'wallet_basic.py',\n+    'wallet_basic.py --legacy-wallet',\n     'wallet_basic.py --descriptors',\n-    'wallet_labels.py',\n+    'wallet_labels.py --legacy-wallet',\n     'wallet_labels.py --descriptors',\n     'p2p_segwit.py',\n     'p2p_timeouts.py',\n     'p2p_tx_download.py',\n     'mempool_updatefromblock.py',\n     'wallet_dump.py --legacy-wallet',\n-    'wallet_listtransactions.py',\n+    'wallet_listtransactions.py --legacy-wallet',\n     'wallet_listtransactions.py --descriptors',\n     'feature_taproot.py',\n     # vv Tests less than 60s vv\n     'p2p_sendheaders.py',\n     'wallet_importmulti.py --legacy-wallet',\n     'mempool_limit.py',\n     'rpc_txoutproof.py',\n-    'wallet_listreceivedby.py',\n+    'wallet_listreceivedby.py --legacy-wallet',\n     'wallet_listreceivedby.py --descriptors',\n-    'wallet_abandonconflict.py',\n+    'wallet_abandonconflict.py --legacy-wallet',\n     'wallet_abandonconflict.py --descriptors',\n     'feature_csv_activation.py',\n-    'rpc_rawtransaction.py',\n+    'rpc_rawtransaction.py --legacy-wallet',\n     'rpc_rawtransaction.py --descriptors',\n-    'wallet_address_types.py',\n+    'wallet_address_types.py --legacy-wallet',\n     'wallet_address_types.py --descriptors',\n     'feature_bip68_sequence.py',\n     'p2p_feefilter.py',\n     'feature_reindex.py',\n     'feature_abortnode.py',\n     # vv Tests less than 30s vv\n-    'wallet_keypool_topup.py',\n+    'wallet_keypool_topup.py --legacy-wallet',\n     'wallet_keypool_topup.py --descriptors',\n     'feature_fee_estimation.py',\n     'interface_zmq.py',\n     'interface_bitcoin_cli.py',\n     'mempool_resurrect.py',\n     'wallet_txn_doublespend.py --mineblock',\n-    'tool_wallet.py',\n+    'tool_wallet.py --legacy-wallet',\n     'tool_wallet.py --descriptors',\n     'wallet_txn_clone.py',\n     'wallet_txn_clone.py --segwit',\n     'rpc_getchaintips.py',\n     'rpc_misc.py',\n     'interface_rest.py',\n     'mempool_spend_coinbase.py',\n-    'wallet_avoidreuse.py',\n+    'wallet_avoidreuse.py --legacy-wallet',\n     'wallet_avoidreuse.py --descriptors',\n     'mempool_reorg.py',\n     'mempool_persist.py',\n-    'wallet_multiwallet.py',\n+    'wallet_multiwallet.py --legacy-wallet',\n     'wallet_multiwallet.py --descriptors',\n     'wallet_multiwallet.py --usecli',\n-    'wallet_createwallet.py',\n+    'wallet_createwallet.py --legacy-wallet',\n     'wallet_createwallet.py --usecli',\n     'wallet_createwallet.py --descriptors',\n     'wallet_watchonly.py --legacy-wallet',\n     'wallet_watchonly.py --usecli --legacy-wallet',\n     'wallet_reorgsrestore.py',\n     'interface_http.py',\n     'interface_rpc.py',\n-    'rpc_psbt.py',\n+    'rpc_psbt.py --legacy-wallet',\n     'rpc_psbt.py --descriptors',\n     'rpc_users.py',\n     'rpc_whitelist.py',\n     'feature_proxy.py',\n-    'rpc_signrawtransaction.py',\n+    'rpc_signrawtransaction.py --legacy-wallet',\n     'rpc_signrawtransaction.py --descriptors',\n-    'wallet_groups.py',\n+    'wallet_groups.py --legacy-wallet',\n     'p2p_addrv2_relay.py',\n     'wallet_groups.py --descriptors',\n     'p2p_disconnect_ban.py',\n     'rpc_decodescript.py',\n     'rpc_blockchain.py',\n     'rpc_deprecated.py',\n-    'wallet_disable.py',\n+    'wallet_disable.py --legacy-wallet',\n     'wallet_disable.py --descriptors',\n     'p2p_addr_relay.py',\n     'p2p_getaddr_caching.py',\n     'p2p_getdata.py',\n     'rpc_net.py',\n-    'wallet_keypool.py',\n+    'wallet_keypool.py --legacy-wallet',\n     'wallet_keypool.py --descriptors',\n     'wallet_descriptor.py --descriptors',\n     'p2p_nobloomfilter_messages.py',\n@@ -194,9 +194,9 @@\n     'p2p_invalid_tx.py',\n     'feature_assumevalid.py',\n     'example_test.py',\n-    'wallet_txn_doublespend.py',\n+    'wallet_txn_doublespend.py --legacy-wallet',\n     'wallet_txn_doublespend.py --descriptors',\n-    'feature_backwards_compatibility.py',\n+    'feature_backwards_compatibility.py --legacy-wallet',\n     'feature_backwards_compatibility.py --descriptors',\n     'wallet_txn_clone.py --mineblock',\n     'feature_notifications.py',\n@@ -205,20 +205,20 @@\n     'feature_rbf.py',\n     'mempool_packages.py',\n     'mempool_package_onemore.py',\n-    'rpc_createmultisig.py',\n+    'rpc_createmultisig.py --legacy-wallet',\n     'rpc_createmultisig.py --descriptors',\n     'feature_versionbits_warning.py',\n     'rpc_preciousblock.py',\n-    'wallet_importprunedfunds.py',\n+    'wallet_importprunedfunds.py --legacy-wallet',\n     'wallet_importprunedfunds.py --descriptors',\n     'p2p_leak_tx.py',\n     'p2p_eviction.py',\n     'rpc_signmessage.py',\n     'rpc_generateblock.py',\n     'rpc_generate.py',\n-    'wallet_balance.py',\n+    'wallet_balance.py --legacy-wallet',\n     'wallet_balance.py --descriptors',\n-    'feature_nulldummy.py',\n+    'feature_nulldummy.py --legacy-wallet',\n     'feature_nulldummy.py --descriptors',\n     'mempool_accept.py',\n     'mempool_expiry.py',\n@@ -231,32 +231,32 @@\n     'rpc_bind.py --nonloopback',\n     'mining_basic.py',\n     'feature_signet.py',\n-    'wallet_bumpfee.py',\n+    'wallet_bumpfee.py --legacy-wallet',\n     'wallet_bumpfee.py --descriptors',\n     'wallet_implicitsegwit.py --legacy-wallet',\n     'rpc_named_arguments.py',\n-    'wallet_listsinceblock.py',\n+    'wallet_listsinceblock.py --legacy-wallet',\n     'wallet_listsinceblock.py --descriptors',\n     'p2p_leak.py',\n-    'wallet_encryption.py',\n+    'wallet_encryption.py --legacy-wallet',\n     'wallet_encryption.py --descriptors',\n     'feature_dersig.py',\n     'feature_cltv.py',\n     'rpc_uptime.py',\n-    'wallet_resendwallettransactions.py',\n+    'wallet_resendwallettransactions.py --legacy-wallet',\n     'wallet_resendwallettransactions.py --descriptors',\n-    'wallet_fallbackfee.py',\n+    'wallet_fallbackfee.py --legacy-wallet',\n     'wallet_fallbackfee.py --descriptors',\n     'rpc_dumptxoutset.py',\n     'feature_minchainwork.py',\n     'rpc_estimatefee.py',\n     'rpc_getblockstats.py',\n-    'wallet_create_tx.py',\n+    'wallet_create_tx.py --legacy-wallet',\n     'wallet_send.py',\n     'wallet_create_tx.py --descriptors',\n     'p2p_fingerprint.py',\n     'feature_uacomment.py',\n-    'wallet_coinbase_category.py',\n+    'wallet_coinbase_category.py --legacy-wallet',\n     'wallet_coinbase_category.py --descriptors',\n     'feature_filelock.py',\n     'feature_loadblock.py',"
      }
    ]
  },
  {
    "sha": "fbaea7bfe44822710a36601c6b0febbd5e33dfbd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYmFlYTdiZmU0NDgyMjcxMGEzNjYwMWM2YjBmZWJiZDVlMzNkZmJk",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-11-06T20:34:06Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-01-27T17:52:46Z"
      },
      "message": "Require legacy wallet for wallet_upgradewallet.py",
      "tree": {
        "sha": "3f73564a1ed79c98d4b2a3f78d0916082381a9ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f73564a1ed79c98d4b2a3f78d0916082381a9ce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fbaea7bfe44822710a36601c6b0febbd5e33dfbd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbaea7bfe44822710a36601c6b0febbd5e33dfbd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fbaea7bfe44822710a36601c6b0febbd5e33dfbd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbaea7bfe44822710a36601c6b0febbd5e33dfbd/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b1b679e0ab7a9981e3e78424fe8836edd59abf6f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1b679e0ab7a9981e3e78424fe8836edd59abf6f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b1b679e0ab7a9981e3e78424fe8836edd59abf6f"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "dcc2e36916f93711093c9407df7c00b09e739bf7",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbaea7bfe44822710a36601c6b0febbd5e33dfbd/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbaea7bfe44822710a36601c6b0febbd5e33dfbd/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=fbaea7bfe44822710a36601c6b0febbd5e33dfbd",
        "patch": "@@ -225,7 +225,7 @@\n     'wallet_import_rescan.py --legacy-wallet',\n     'wallet_import_with_label.py --legacy-wallet',\n     'wallet_importdescriptors.py --descriptors',\n-    'wallet_upgradewallet.py',\n+    'wallet_upgradewallet.py --legacy-wallet',\n     'rpc_bind.py --ipv4',\n     'rpc_bind.py --ipv6',\n     'rpc_bind.py --nonloopback',"
      },
      {
        "sha": "fbc0f995d2d20d07adc3a5f05378b831e471452d",
        "filename": "test/functional/wallet_upgradewallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbaea7bfe44822710a36601c6b0febbd5e33dfbd/test/functional/wallet_upgradewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbaea7bfe44822710a36601c6b0febbd5e33dfbd/test/functional/wallet_upgradewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_upgradewallet.py?ref=fbaea7bfe44822710a36601c6b0febbd5e33dfbd",
        "patch": "@@ -57,6 +57,7 @@ def set_test_params(self):\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n         self.skip_if_no_previous_releases()\n \n     def setup_network(self):"
      }
    ]
  },
  {
    "sha": "1194cf9269e6c4bf67b09c4766f42bf173d12c0a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMTk0Y2Y5MjY5ZTZjNGJmNjdiMDljNDc2NmY0MmJmMTczZDEyYzBh",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-11-06T20:34:41Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-01-27T17:52:46Z"
      },
      "message": "Fix wallet_send.py wallet setup to work with descriptors\n\nFixes the wallet setup so this test works with descriptor wallets. Also\nenabled explicit descriptor and legacy wallet testing in the test\nrunner.",
      "tree": {
        "sha": "eb6978c5404df129b746ef94d696790e46f4124c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eb6978c5404df129b746ef94d696790e46f4124c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1194cf9269e6c4bf67b09c4766f42bf173d12c0a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1194cf9269e6c4bf67b09c4766f42bf173d12c0a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1194cf9269e6c4bf67b09c4766f42bf173d12c0a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1194cf9269e6c4bf67b09c4766f42bf173d12c0a/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fbaea7bfe44822710a36601c6b0febbd5e33dfbd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbaea7bfe44822710a36601c6b0febbd5e33dfbd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fbaea7bfe44822710a36601c6b0febbd5e33dfbd"
      }
    ],
    "stats": {
      "total": 104,
      "additions": 76,
      "deletions": 28
    },
    "files": [
      {
        "sha": "a9726cee8ab45b55fc586e35371a6dd5cd274138",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1194cf9269e6c4bf67b09c4766f42bf173d12c0a/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1194cf9269e6c4bf67b09c4766f42bf173d12c0a/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=1194cf9269e6c4bf67b09c4766f42bf173d12c0a",
        "patch": "@@ -252,7 +252,8 @@\n     'rpc_estimatefee.py',\n     'rpc_getblockstats.py',\n     'wallet_create_tx.py --legacy-wallet',\n-    'wallet_send.py',\n+    'wallet_send.py --legacy-wallet',\n+    'wallet_send.py --descriptors',\n     'wallet_create_tx.py --descriptors',\n     'p2p_fingerprint.py',\n     'feature_uacomment.py',"
      },
      {
        "sha": "880341fdd9037a70e187934e17bee7aa8b2bc601",
        "filename": "test/functional/wallet_send.py",
        "status": "modified",
        "additions": 74,
        "deletions": 27,
        "changes": 101,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1194cf9269e6c4bf67b09c4766f42bf173d12c0a/test/functional/wallet_send.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1194cf9269e6c4bf67b09c4766f42bf173d12c0a/test/functional/wallet_send.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_send.py?ref=1194cf9269e6c4bf67b09c4766f42bf173d12c0a",
        "patch": "@@ -8,6 +8,7 @@\n from itertools import product\n \n from test_framework.authproxy import JSONRPCException\n+from test_framework.descriptors import descsum_create\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n@@ -168,49 +169,91 @@ def run_test(self):\n         self.nodes[1].createwallet(wallet_name=\"w1\")\n         w1 = self.nodes[1].get_wallet_rpc(\"w1\")\n         # w2 contains the private keys for w3\n-        self.nodes[1].createwallet(wallet_name=\"w2\")\n+        self.nodes[1].createwallet(wallet_name=\"w2\", blank=True)\n         w2 = self.nodes[1].get_wallet_rpc(\"w2\")\n+        xpriv = \"tprv8ZgxMBicQKsPfHCsTwkiM1KT56RXbGGTqvc2hgqzycpwbHqqpcajQeMRZoBD35kW4RtyCemu6j34Ku5DEspmgjKdt2qe4SvRch5Kk8B8A2v\"\n+        xpub = \"tpubD6NzVbkrYhZ4YkEfMbRJkQyZe7wTkbTNRECozCtJPtdLRn6cT1QKb8yHjwAPcAr26eHBFYs5iLiFFnCbwPRsncCKUKCfubHDMGKzMVcN1Jg\"\n+        if self.options.descriptors:\n+            w2.importdescriptors([{\n+                \"desc\": descsum_create(\"wpkh(\" + xpriv + \"/0/0/*)\"),\n+                \"timestamp\": \"now\",\n+                \"range\": [0, 100],\n+                \"active\": True\n+            },{\n+                \"desc\": descsum_create(\"wpkh(\" + xpriv + \"/0/1/*)\"),\n+                \"timestamp\": \"now\",\n+                \"range\": [0, 100],\n+                \"active\": True,\n+                \"internal\": True\n+            }])\n+        else:\n+            w2.sethdseed(True)\n+\n         # w3 is a watch-only wallet, based on w2\n         self.nodes[1].createwallet(wallet_name=\"w3\", disable_private_keys=True)\n         w3 = self.nodes[1].get_wallet_rpc(\"w3\")\n-        for _ in range(3):\n-            a2_receive = w2.getnewaddress()\n-            a2_change = w2.getrawchangeaddress() # doesn't actually use change derivation\n-            res = w3.importmulti([{\n-                \"desc\": w2.getaddressinfo(a2_receive)[\"desc\"],\n+        if self.options.descriptors:\n+            # Match the privkeys in w2 for descriptors\n+            res = w3.importdescriptors([{\n+                \"desc\": descsum_create(\"wpkh(\" + xpub + \"/0/0/*)\"),\n                 \"timestamp\": \"now\",\n+                \"range\": [0, 100],\n                 \"keypool\": True,\n+                \"active\": True,\n                 \"watchonly\": True\n             },{\n-                \"desc\": w2.getaddressinfo(a2_change)[\"desc\"],\n+                \"desc\": descsum_create(\"wpkh(\" + xpub + \"/0/1/*)\"),\n                 \"timestamp\": \"now\",\n+                \"range\": [0, 100],\n                 \"keypool\": True,\n+                \"active\": True,\n                 \"internal\": True,\n                 \"watchonly\": True\n             }])\n             assert_equal(res, [{\"success\": True}, {\"success\": True}])\n \n-        w0.sendtoaddress(a2_receive, 10) # fund w3\n-        self.nodes[0].generate(1)\n-        self.sync_blocks()\n-\n-        # w4 has private keys enabled, but only contains watch-only keys (from w2)\n-        self.nodes[1].createwallet(wallet_name=\"w4\", disable_private_keys=False)\n-        w4 = self.nodes[1].get_wallet_rpc(\"w4\")\n         for _ in range(3):\n             a2_receive = w2.getnewaddress()\n-            res = w4.importmulti([{\n-                \"desc\": w2.getaddressinfo(a2_receive)[\"desc\"],\n-                \"timestamp\": \"now\",\n-                \"keypool\": False,\n-                \"watchonly\": True\n-            }])\n-            assert_equal(res, [{\"success\": True}])\n+            if not self.options.descriptors:\n+                # Because legacy wallets use exclusively hardened derivation, we can't do a ranged import like we do for descriptors\n+                a2_change = w2.getrawchangeaddress() # doesn't actually use change derivation\n+                res = w3.importmulti([{\n+                    \"desc\": w2.getaddressinfo(a2_receive)[\"desc\"],\n+                    \"timestamp\": \"now\",\n+                    \"keypool\": True,\n+                    \"watchonly\": True\n+                },{\n+                    \"desc\": w2.getaddressinfo(a2_change)[\"desc\"],\n+                    \"timestamp\": \"now\",\n+                    \"keypool\": True,\n+                    \"internal\": True,\n+                    \"watchonly\": True\n+                }])\n+                assert_equal(res, [{\"success\": True}, {\"success\": True}])\n \n-        w0.sendtoaddress(a2_receive, 10) # fund w4\n+        w0.sendtoaddress(a2_receive, 10) # fund w3\n         self.nodes[0].generate(1)\n         self.sync_blocks()\n \n+        if not self.options.descriptors:\n+            # w4 has private keys enabled, but only contains watch-only keys (from w2)\n+            # This is legacy wallet behavior only as descriptor wallets don't allow watchonly and non-watchonly things in the same wallet.\n+            self.nodes[1].createwallet(wallet_name=\"w4\", disable_private_keys=False)\n+            w4 = self.nodes[1].get_wallet_rpc(\"w4\")\n+            for _ in range(3):\n+                a2_receive = w2.getnewaddress()\n+                res = w4.importmulti([{\n+                    \"desc\": w2.getaddressinfo(a2_receive)[\"desc\"],\n+                    \"timestamp\": \"now\",\n+                    \"keypool\": False,\n+                    \"watchonly\": True\n+                }])\n+                assert_equal(res, [{\"success\": True}])\n+\n+            w0.sendtoaddress(a2_receive, 10) # fund w4\n+            self.nodes[0].generate(1)\n+            self.sync_blocks()\n+\n         self.log.info(\"Send to address...\")\n         self.test_send(from_wallet=w0, to_wallet=w1, amount=1)\n         self.test_send(from_wallet=w0, to_wallet=w1, amount=1, add_to_wallet=True)\n@@ -241,11 +284,15 @@ def run_test(self):\n         res = w2.walletprocesspsbt(res[\"psbt\"])\n         assert res[\"complete\"]\n \n-        self.log.info(\"Create PSBT from wallet w4 with watch-only keys, sign with w2...\")\n-        self.test_send(from_wallet=w4, to_wallet=w1, amount=1, expect_error=(-4, \"Insufficient funds\"))\n-        res = self.test_send(from_wallet=w4, to_wallet=w1, amount=1, include_watching=True, add_to_wallet=False)\n-        res = w2.walletprocesspsbt(res[\"psbt\"])\n-        assert res[\"complete\"]\n+        if not self.options.descriptors:\n+            # Descriptor wallets do not allow mixed watch-only and non-watch-only things in the same wallet.\n+            # This is specifically testing that w4 ignores its own private keys and creates a psbt with send\n+            # which is not something that needs to be tested in descriptor wallets.\n+            self.log.info(\"Create PSBT from wallet w4 with watch-only keys, sign with w2...\")\n+            self.test_send(from_wallet=w4, to_wallet=w1, amount=1, expect_error=(-4, \"Insufficient funds\"))\n+            res = self.test_send(from_wallet=w4, to_wallet=w1, amount=1, include_watching=True, add_to_wallet=False)\n+            res = w2.walletprocesspsbt(res[\"psbt\"])\n+            assert res[\"complete\"]\n \n         self.log.info(\"Create OP_RETURN...\")\n         self.test_send(from_wallet=w0, to_wallet=w1, amount=1)"
      }
    ]
  },
  {
    "sha": "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OTc5N2MzY2NmYmI5ZjdhYzljMWZiYjU3NGQzNWIzMTVjMTAzODA1",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-01-09T00:31:18Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-01-27T17:52:46Z"
      },
      "message": "tests: Disable bdb dump test when no bdb",
      "tree": {
        "sha": "297808e112ee03f31ed1af462dcf87f81266ce4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/297808e112ee03f31ed1af462dcf87f81266ce4f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49797c3ccfbb9f7ac9c1fbb574d35b315c103805/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1194cf9269e6c4bf67b09c4766f42bf173d12c0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1194cf9269e6c4bf67b09c4766f42bf173d12c0a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1194cf9269e6c4bf67b09c4766f42bf173d12c0a"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "232848c7cf48849938539807ee0060695c39b478",
        "filename": "test/functional/tool_wallet.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49797c3ccfbb9f7ac9c1fbb574d35b315c103805/test/functional/tool_wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49797c3ccfbb9f7ac9c1fbb574d35b315c103805/test/functional/tool_wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/tool_wallet.py?ref=49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
        "patch": "@@ -348,7 +348,8 @@ def test_dump_createfromdump(self):\n \n         self.log.info('Checking createfromdump')\n         self.do_tool_createfromdump(\"load\", \"wallet.dump\")\n-        self.do_tool_createfromdump(\"load-bdb\", \"wallet.dump\", \"bdb\")\n+        if self.is_bdb_compiled():\n+            self.do_tool_createfromdump(\"load-bdb\", \"wallet.dump\", \"bdb\")\n         if self.is_sqlite_compiled():\n             self.do_tool_createfromdump(\"load-sqlite\", \"wallet.dump\", \"sqlite\")\n "
      }
    ]
  }
]