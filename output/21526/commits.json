[
  {
    "sha": "9f6bb539359b98d5b39482ab8a28a68608f0c645",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZjZiYjUzOTM1OWI5OGQ1YjM5NDgyYWI4YTI4YTY4NjA4ZjBjNjQ1",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-06-12T14:52:40Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-07-16T16:45:20Z"
      },
      "message": "validation: add chainman ref to CChainState\n\nAdd an upwards reference to chainstate instances to the owning\nChainstateManager. This is necessary because there are a number\nof `this_chainstate == chainman.ActiveChainstate()` checks that\nwill happen (as a result of assumeutxo) in functions that otherwise\ndon't have an easily-accessible reference to the chainstate's\nChainManager.",
      "tree": {
        "sha": "4397f65cb333ecc102ed1d36057d4a5ba8983af4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4397f65cb333ecc102ed1d36057d4a5ba8983af4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9f6bb539359b98d5b39482ab8a28a68608f0c645",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmDxt6AACgkQepNdrbLE\nTwVWKQ/9HOOquH2ufs2qEldvgPwZ5CGGnnHf5QCEmzyRwTpRUb9zR/2/ekKHYE/r\n90wbY5Cm6bThGRY7lcJLfE+KIgPucoT+brL9DA5r4BaB82OUMJOmZLdQCD5EQjZi\njPENt4r9PcPh8aBo557lj1nqQf8Ata3XkWDyxRV8OnstnFeXNlIEpdBI4d4e4pln\nKbCNkg8KlgPI3QmW14JWyH7vk95B/np1luUiziuNFF1RaUm3jr6CvUfFVosdb7hN\nq/jbRrZVbP8Qn7jqN4x0hs0bJmzV24xkARU277udcZRmIJQ/IO3gO6QgkFVPnYdb\njkogRpZFlvfSxjqcYEXWtDUQLhWhXENHTLiVVDlNHbLS1OWBls5gJkt8FrmGY82F\nEeu7QEfx1LJeFnZTVoIG0oZP4k8h33zxZ3U9zLdIb1VKqCvArtKYUq6Cjmvpnlab\nGd/T6HTSrHeuUNuPLJwEZjsZJbXowtsjYjnZx6SNO/ZZFl4kQQLFAWJ2QjkX/pMv\nDQIRz+cy/QAfm1ZsrN3JwVZYhke0ZygksihSuZ8yZOd4DxV/XPnCqdATOXHqOugH\nWeZtDYpi1Z8NJvVzkSFRGvDs4+Pp8ZhzzlUs+o+l6yftMIU46F1QcRPrR8ANJ9yf\nfHubCnVP8aIEZqPefb3Yo/rE1YIM7VQRu6mZgrmH7wmR0Jd22DU=\n=CAp/\n-----END PGP SIGNATURE-----",
        "payload": "tree 4397f65cb333ecc102ed1d36057d4a5ba8983af4\nparent d86e6625e8571ecff7a13bf2826436859c7ae698\nauthor James O'Beirne <james.obeirne@pm.me> 1623509560 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1626453920 -0400\n\nvalidation: add chainman ref to CChainState\n\nAdd an upwards reference to chainstate instances to the owning\nChainstateManager. This is necessary because there are a number\nof `this_chainstate == chainman.ActiveChainstate()` checks that\nwill happen (as a result of assumeutxo) in functions that otherwise\ndon't have an easily-accessible reference to the chainstate's\nChainManager.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f6bb539359b98d5b39482ab8a28a68608f0c645",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9f6bb539359b98d5b39482ab8a28a68608f0c645",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f6bb539359b98d5b39482ab8a28a68608f0c645/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d86e6625e8571ecff7a13bf2826436859c7ae698",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d86e6625e8571ecff7a13bf2826436859c7ae698",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d86e6625e8571ecff7a13bf2826436859c7ae698"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 18,
      "deletions": 6
    },
    "files": [
      {
        "sha": "9136c497ea004a797c6b28a8ce9413f00c97a0b0",
        "filename": "src/test/validation_flush_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f6bb539359b98d5b39482ab8a28a68608f0c645/src/test/validation_flush_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f6bb539359b98d5b39482ab8a28a68608f0c645/src/test/validation_flush_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_flush_tests.cpp?ref=9f6bb539359b98d5b39482ab8a28a68608f0c645",
        "patch": "@@ -9,7 +9,7 @@\n \n #include <boost/test/unit_test.hpp>\n \n-BOOST_FIXTURE_TEST_SUITE(validation_flush_tests, BasicTestingSetup)\n+BOOST_FIXTURE_TEST_SUITE(validation_flush_tests, ChainTestingSetup)\n \n //! Test utilities for detecting when we need to flush the coins cache based\n //! on estimated memory usage.\n@@ -20,7 +20,7 @@ BOOST_AUTO_TEST_CASE(getcoinscachesizestate)\n {\n     CTxMemPool mempool;\n     BlockManager blockman{};\n-    CChainState chainstate{&mempool, blockman};\n+    CChainState chainstate{&mempool, blockman, *Assert(m_node.chainman)};\n     chainstate.InitCoinsDB(/*cache_size_bytes*/ 1 << 10, /*in_memory*/ true, /*should_wipe*/ false);\n     WITH_LOCK(::cs_main, chainstate.InitCoinsCache(1 << 10));\n "
      },
      {
        "sha": "756e2ba90510d2b212bfddbb5c7930a99d16d406",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f6bb539359b98d5b39482ab8a28a68608f0c645/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f6bb539359b98d5b39482ab8a28a68608f0c645/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=9f6bb539359b98d5b39482ab8a28a68608f0c645",
        "patch": "@@ -1209,10 +1209,15 @@ void CoinsViews::InitCache()\n     m_cacheview = std::make_unique<CCoinsViewCache>(&m_catcherview);\n }\n \n-CChainState::CChainState(CTxMemPool* mempool, BlockManager& blockman, std::optional<uint256> from_snapshot_blockhash)\n+CChainState::CChainState(\n+    CTxMemPool* mempool,\n+    BlockManager& blockman,\n+    ChainstateManager& chainman,\n+    std::optional<uint256> from_snapshot_blockhash)\n     : m_mempool(mempool),\n       m_params(::Params()),\n       m_blockman(blockman),\n+      m_chainman(chainman),\n       m_from_snapshot_blockhash(from_snapshot_blockhash) {}\n \n void CChainState::InitCoinsDB(\n@@ -4699,7 +4704,7 @@ CChainState& ChainstateManager::InitializeChainstate(\n     if (to_modify) {\n         throw std::logic_error(\"should not be overwriting a chainstate\");\n     }\n-    to_modify.reset(new CChainState(mempool, m_blockman, snapshot_blockhash));\n+    to_modify.reset(new CChainState(mempool, m_blockman, *this, snapshot_blockhash));\n \n     // Snapshot chainstates and initial IBD chaintates always become active.\n     if (is_snapshot || (!is_snapshot && !m_active_chainstate)) {\n@@ -4768,8 +4773,9 @@ bool ChainstateManager::ActivateSnapshot(\n             static_cast<size_t>(current_coinsdb_cache_size * IBD_CACHE_PERC));\n     }\n \n-    auto snapshot_chainstate = WITH_LOCK(::cs_main, return std::make_unique<CChainState>(\n-        /* mempool */ nullptr, m_blockman, base_blockhash));\n+    auto snapshot_chainstate = WITH_LOCK(::cs_main,\n+        return std::make_unique<CChainState>(\n+            /* mempool */ nullptr, m_blockman, *this, base_blockhash));\n \n     {\n         LOCK(::cs_main);"
      },
      {
        "sha": "b024699fe833d7ce3e9c75df05baae51e6630d54",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f6bb539359b98d5b39482ab8a28a68608f0c645/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f6bb539359b98d5b39482ab8a28a68608f0c645/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=9f6bb539359b98d5b39482ab8a28a68608f0c645",
        "patch": "@@ -601,9 +601,15 @@ class CChainState\n     //! CChainState instances.\n     BlockManager& m_blockman;\n \n+    //! The chainstate manager that owns this chainstate. The reference is\n+    //! necessary so that this instance can check whether it is the active\n+    //! chainstate within deeply nested method calls.\n+    ChainstateManager& m_chainman;\n+\n     explicit CChainState(\n         CTxMemPool* mempool,\n         BlockManager& blockman,\n+        ChainstateManager& chainman,\n         std::optional<uint256> from_snapshot_blockhash = std::nullopt);\n \n     /**"
      }
    ]
  },
  {
    "sha": "ac4051d891e2d5c8ac130da16b85b9d880b44720",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYzQwNTFkODkxZTJkNWM4YWMxMzBkYTE2Yjg1YjlkODgwYjQ0NzIw",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-07-15T14:40:28Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-07-16T16:45:23Z"
      },
      "message": "refactor: remove unused assumeutxo methods\n\nAfter feedback from Russ, I realized that there are some extraneous assumeutxo methods\nthat are not necessary and probably just overly confusing. These include\n\n- `Validated*()`\n- `IsBackgroundIBD()`\n\nand they can be removed.",
      "tree": {
        "sha": "20649daf56f45ea2388adae94691b322a8beb4b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/20649daf56f45ea2388adae94691b322a8beb4b1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac4051d891e2d5c8ac130da16b85b9d880b44720",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmDxt6MACgkQepNdrbLE\nTwXd2BAAj/xD6FAE982LtxWeQ6sIlwHbwZjS7KuBpqtZqQfzRN2/skilXCmL3X1r\nqX0crAUVQ7n3DKPlFZD3f0ls2rSy+3yNvaAcQ7S0QHEUAQT8lMWpZIpBH7YxSbDy\nFbN73C3n6Z6iBVj8niMM8C31+FhspBdnOYSPt+Pt5uR2+ELMHvc3HGF024odUiTL\nkAUO7NyGl0LHgcawaETSPmqLK36LbM2YvHWa4x7yv/O2IbbauNYVcv0uVAZc1TGO\nLfyv/H8KDJdo+/qBAJ675fW0YVDj09Tz/TrEbgdzbuyzFPsomC8IW+xvghToNEoR\nx+ZzqNYCyCSgEMhm+VE9X38OFNEuuhqQpM4C1cHau8hw02l6w7XztNR7NxOb40a2\nsUG8Qun7COlHkZqZDFGcY25DwCQzVesPmGv8Rl9JBpfsQhIBpFSPnW8DWi8QVTeA\nDqUqXkTK2wJJTP1aUpROXoe4Z7tg2NyQaVbuX8cergEA1t10Uji8lzFCgc11vRe4\n0SviD7EEUJI0hVfuQslCc4HSfhwX9YxC/tl+zqukOlsnLNQPE0DOw1A+iSbO+MXN\nvZ3qi8tSgBN3vlZ1ZgQFgRgXa4pHE3v65WlKAsziEZWYGWFK9PMdGOomeFXDz0D4\nwrbldlVaqAR6E2JxErOKTjuaFPM7MrbaKNokdphMgVrU2Dk2QXU=\n=xivf\n-----END PGP SIGNATURE-----",
        "payload": "tree 20649daf56f45ea2388adae94691b322a8beb4b1\nparent 9f6bb539359b98d5b39482ab8a28a68608f0c645\nauthor James O'Beirne <james.obeirne@pm.me> 1626360028 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1626453923 -0400\n\nrefactor: remove unused assumeutxo methods\n\nAfter feedback from Russ, I realized that there are some extraneous assumeutxo methods\nthat are not necessary and probably just overly confusing. These include\n\n- `Validated*()`\n- `IsBackgroundIBD()`\n\nand they can be removed.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac4051d891e2d5c8ac130da16b85b9d880b44720",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ac4051d891e2d5c8ac130da16b85b9d880b44720",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac4051d891e2d5c8ac130da16b85b9d880b44720/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9f6bb539359b98d5b39482ab8a28a68608f0c645",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f6bb539359b98d5b39482ab8a28a68608f0c645",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9f6bb539359b98d5b39482ab8a28a68608f0c645"
      }
    ],
    "stats": {
      "total": 69,
      "additions": 10,
      "deletions": 59
    },
    "files": [
      {
        "sha": "ecd3513fc74e42ab07dd133e893c0279587b2868",
        "filename": "src/test/validation_chainstatemanager_tests.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 24,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac4051d891e2d5c8ac130da16b85b9d880b44720/src/test/validation_chainstatemanager_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac4051d891e2d5c8ac130da16b85b9d880b44720/src/test/validation_chainstatemanager_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_chainstatemanager_tests.cpp?ref=ac4051d891e2d5c8ac130da16b85b9d880b44720",
        "patch": "@@ -44,7 +44,6 @@ BOOST_AUTO_TEST_CASE(chainstatemanager)\n \n     BOOST_CHECK(!manager.IsSnapshotActive());\n     BOOST_CHECK(!manager.IsSnapshotValidated());\n-    BOOST_CHECK(!manager.IsBackgroundIBD(&c1));\n     auto all = manager.GetAll();\n     BOOST_CHECK_EQUAL_COLLECTIONS(all.begin(), all.end(), chainstates.begin(), chainstates.end());\n \n@@ -57,9 +56,6 @@ BOOST_AUTO_TEST_CASE(chainstatemanager)\n     auto exp_tip = c1.m_chain.Tip();\n     BOOST_CHECK_EQUAL(active_tip, exp_tip);\n \n-    auto& validated_cs = manager.ValidatedChainstate();\n-    BOOST_CHECK_EQUAL(&validated_cs, &c1);\n-\n     BOOST_CHECK(!manager.SnapshotBlockhash().has_value());\n \n     // Create a snapshot-based chainstate.\n@@ -81,8 +77,8 @@ BOOST_AUTO_TEST_CASE(chainstatemanager)\n \n     BOOST_CHECK(manager.IsSnapshotActive());\n     BOOST_CHECK(!manager.IsSnapshotValidated());\n-    BOOST_CHECK(manager.IsBackgroundIBD(&c1));\n-    BOOST_CHECK(!manager.IsBackgroundIBD(&c2));\n+    BOOST_CHECK_EQUAL(&c2, &manager.ActiveChainstate());\n+    BOOST_CHECK(&c1 != &manager.ActiveChainstate());\n     auto all2 = manager.GetAll();\n     BOOST_CHECK_EQUAL_COLLECTIONS(all2.begin(), all2.end(), chainstates.begin(), chainstates.end());\n \n@@ -99,16 +95,6 @@ BOOST_AUTO_TEST_CASE(chainstatemanager)\n     // CCoinsViewCache instances.\n     BOOST_CHECK(exp_tip != exp_tip2);\n \n-    auto& validated_cs2 = manager.ValidatedChainstate();\n-    BOOST_CHECK_EQUAL(&validated_cs2, &c1);\n-\n-    auto& validated_chain = manager.ValidatedChain();\n-    BOOST_CHECK_EQUAL(&validated_chain, &c1.m_chain);\n-\n-    auto validated_tip = manager.ValidatedTip();\n-    exp_tip = c1.m_chain.Tip();\n-    BOOST_CHECK_EQUAL(validated_tip, exp_tip);\n-\n     // Let scheduler events finish running to avoid accessing memory that is going to be unloaded\n     SyncWithValidationInterfaceQueue();\n \n@@ -321,27 +307,27 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_activate_snapshot, TestChain100Setup)\n     {\n         LOCK(::cs_main);\n         size_t coins_in_active{0};\n-        size_t coins_in_ibd{0};\n-        size_t coins_missing_ibd{0};\n+        size_t coins_in_background{0};\n+        size_t coins_missing_from_background{0};\n \n         for (CChainState* chainstate : chainman.GetAll()) {\n             BOOST_TEST_MESSAGE(\"Checking coins in \" << chainstate->ToString());\n             CCoinsViewCache& coinscache = chainstate->CoinsTip();\n-            bool is_ibd = chainman.IsBackgroundIBD(chainstate);\n+            bool is_background = chainstate != &chainman.ActiveChainstate();\n \n             for (CTransactionRef& txn : m_coinbase_txns) {\n                 COutPoint op{txn->GetHash(), 0};\n                 if (coinscache.HaveCoin(op)) {\n-                    (is_ibd ? coins_in_ibd : coins_in_active)++;\n-                } else if (is_ibd) {\n-                    coins_missing_ibd++;\n+                    (is_background ? coins_in_background : coins_in_active)++;\n+                } else if (is_background) {\n+                    coins_missing_from_background++;\n                 }\n             }\n         }\n \n         BOOST_CHECK_EQUAL(coins_in_active, initial_total_coins + new_coins);\n-        BOOST_CHECK_EQUAL(coins_in_ibd, initial_total_coins);\n-        BOOST_CHECK_EQUAL(coins_missing_ibd, new_coins);\n+        BOOST_CHECK_EQUAL(coins_in_background, initial_total_coins);\n+        BOOST_CHECK_EQUAL(coins_missing_from_background, new_coins);\n     }\n \n     // Snapshot should refuse to load after one has already loaded."
      },
      {
        "sha": "bed97d05c56a56cbc4595fa55a87cbe26d528bdd",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac4051d891e2d5c8ac130da16b85b9d880b44720/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac4051d891e2d5c8ac130da16b85b9d880b44720/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=ac4051d891e2d5c8ac130da16b85b9d880b44720",
        "patch": "@@ -5007,22 +5007,6 @@ bool ChainstateManager::IsSnapshotActive() const\n     return m_snapshot_chainstate && m_active_chainstate == m_snapshot_chainstate.get();\n }\n \n-CChainState& ChainstateManager::ValidatedChainstate() const\n-{\n-    LOCK(::cs_main);\n-    if (m_snapshot_chainstate && IsSnapshotValidated()) {\n-        return *m_snapshot_chainstate.get();\n-    }\n-    assert(m_ibd_chainstate);\n-    return *m_ibd_chainstate.get();\n-}\n-\n-bool ChainstateManager::IsBackgroundIBD(CChainState* chainstate) const\n-{\n-    LOCK(::cs_main);\n-    return (m_snapshot_chainstate && chainstate == m_ibd_chainstate.get());\n-}\n-\n void ChainstateManager::Unload()\n {\n     for (CChainState* chainstate : this->GetAll()) {"
      },
      {
        "sha": "4fc46439cc49830e1e49437b23748d347c0a9ac4",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac4051d891e2d5c8ac130da16b85b9d880b44720/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac4051d891e2d5c8ac130da16b85b9d880b44720/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=ac4051d891e2d5c8ac130da16b85b9d880b44720",
        "patch": "@@ -862,12 +862,6 @@ class CChainState\n  * *Background IBD chainstate*: an IBD chainstate for which the\n  *    IBD process is happening in the background while use of the\n  *    active (snapshot) chainstate allows the rest of the system to function.\n- *\n- * *Validated chainstate*: the most-work chainstate which has been validated\n- *   locally via initial block download. This will be the snapshot chainstate\n- *   if a snapshot was loaded and all blocks up to the snapshot starting point\n- *   have been downloaded and validated (via background validation), otherwise\n- *   it will be the IBD chainstate.\n  */\n class ChainstateManager\n {\n@@ -986,19 +980,6 @@ class ChainstateManager\n     //! Is there a snapshot in use and has it been fully validated?\n     bool IsSnapshotValidated() const { return m_snapshot_validated; }\n \n-    //! @returns true if this chainstate is being used to validate an active\n-    //!          snapshot in the background.\n-    bool IsBackgroundIBD(CChainState* chainstate) const;\n-\n-    //! Return the most-work chainstate that has been fully validated.\n-    //!\n-    //! During background validation of a snapshot, this is the IBD chain. After\n-    //! background validation has completed, this is the snapshot chain.\n-    CChainState& ValidatedChainstate() const;\n-\n-    CChain& ValidatedChain() const { return ValidatedChainstate().m_chain; }\n-    CBlockIndex* ValidatedTip() const { return ValidatedChain().Tip(); }\n-\n     /**\n      * Process an incoming block. This only returns after the best known valid\n      * block is made active. Note that it does not, however, guarantee that the"
      }
    ]
  },
  {
    "sha": "665072a36df2e4c88705fedd4ac7c955d7f6a488",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NjUwNzJhMzZkZjJlNGM4ODcwNWZlZGQ0YWM3Yzk1NWQ3ZjZhNDg4",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-09-15T19:46:29Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-09-15T19:46:29Z"
      },
      "message": "doc: add comment for g_best_block",
      "tree": {
        "sha": "6135d1763e4ef79a70fba056e1175fa48a9c6349",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6135d1763e4ef79a70fba056e1175fa48a9c6349"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/665072a36df2e4c88705fedd4ac7c955d7f6a488",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmFCTaAACgkQepNdrbLE\nTwXU7g/+MZbCTgFDeQ2zUburP9uIy41tVXzgY/cxHx1EKi1jqJBjVb3QSA+loAPC\nOoolwR6+i8Z1rioSCR91Jx+OLEuDJbLZll/27GBcDMgWUPdjp1eedzE6OiygQdIc\nceSHj1/cIlbuHg+8PQ39RHSNvBf1qFt03NBMKm/S8b0OhYzkRr7bA4RiCT0CGquo\nNAZQF7kiUWi6DydemtgdgAfd8LyZQhLgd7whSrYRtkqgw8ZHR7LSzv/hOLpwE+wC\nyguNs5g987QxJd6Tq0EgG2REfYKm2cQopnyNW9+5xJ6OdahKVuSmckgYXlOAjDpb\n1jWofh+xuVT9jtpXDtdqt9IBjtBPIR+K9wRlWz8njQ0bEwD8YP+FLNuhMsW/J7QD\noHLrlxkPhvsFK/qN8sKoFlokCSZxZhA/p9Oqgu8Y8VIEbXPQfNrU3BZJNO2a83i3\nIr9lAsF5QdJuKbPPwWsp2yDD2mM4LWnMfLQbh1XqSfFEVdJ5o7sEVUE3Ahmqh8rR\nDjU99x8C74soujTmTpLtua6R93aESXbsS8ztWs4w+s2wyuZCs3pmSFxhDtylEw10\nP3UxlI4F/sKT6Pnxe7Uu1flIn6rbOgkMRiVrGHSg7wxdtG9XeaVGXoYkwRHY6NG8\nUehRizhH1m0pSKRAh3ixziyhMvO7dSPSmSKuDPbviW5QfP/wEQI=\n=azlK\n-----END PGP SIGNATURE-----",
        "payload": "tree 6135d1763e4ef79a70fba056e1175fa48a9c6349\nparent ac4051d891e2d5c8ac130da16b85b9d880b44720\nauthor James O'Beirne <james.obeirne@pm.me> 1631735189 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1631735189 -0400\n\ndoc: add comment for g_best_block\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/665072a36df2e4c88705fedd4ac7c955d7f6a488",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/665072a36df2e4c88705fedd4ac7c955d7f6a488",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/665072a36df2e4c88705fedd4ac7c955d7f6a488/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ac4051d891e2d5c8ac130da16b85b9d880b44720",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac4051d891e2d5c8ac130da16b85b9d880b44720",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac4051d891e2d5c8ac130da16b85b9d880b44720"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d457f1ac65d2566107d1c3f08eded3506a46cddc",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/665072a36df2e4c88705fedd4ac7c955d7f6a488/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/665072a36df2e4c88705fedd4ac7c955d7f6a488/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=665072a36df2e4c88705fedd4ac7c955d7f6a488",
        "patch": "@@ -109,6 +109,7 @@ extern RecursiveMutex cs_main;\n typedef std::unordered_map<uint256, CBlockIndex*, BlockHasher> BlockMap;\n extern Mutex g_best_block_mutex;\n extern std::condition_variable g_best_block_cv;\n+/** Used to notify getblocktemplate RPC of new tips. */\n extern uint256 g_best_block;\n /** Whether there are dedicated script-checking threads running.\n  * False indicates all script checking is done on the main threadMessageHandler thread."
      }
    ]
  },
  {
    "sha": "b217020df78bc981d221fe04497c831120ef969f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMjE3MDIwZGY3OGJjOTgxZDIyMWZlMDQ0OTdjODMxMTIwZWY5Njlm",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-09-16T20:32:18Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-09-15T19:46:43Z"
      },
      "message": "validation: change UpdateTip for multiple chainstates\n\nOnly perform certain behavior (namely that related to servicing\nthe getblocktemplate RPC call) for the active chainstate when\ncalling UpdateTip.\n\nCo-authored-by: Jon Atack <jon@atack.com>",
      "tree": {
        "sha": "bb258201f8187279c7093cc63d1ef22ecc2f6067",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb258201f8187279c7093cc63d1ef22ecc2f6067"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b217020df78bc981d221fe04497c831120ef969f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmFCTaMACgkQepNdrbLE\nTwWFxBAAofl1y1FJgRAoZmKUmTdvCOd59kcE36c4kercKFXA9feDvYR5PWqn3QGO\n+o35uoLC7aru1CtMJ3HZ3cinsiAolXsEnLuDBxtwBWWZHW5Z3q6+ZQB9D6FXHSt2\nqsLhrb8K+YzLdgeAX0ftcbRGu/L34JKv8q0M0fH+1OyQC5xDJIIFNUmE6fllFUyb\nl8FXSDjJlhsf6I6ekO/S9E0ZiGwo7OuMtRlKfVJUrl6UUSZy376C76d9AWFIrtDE\nSHJ3FFCn2ojuRlSnxsoiRUmbbcbH0FxhVkswJriJUvWfIDd3NqwiOJvedSHzlZri\noBZwJ28dbvndnXfafWq9D/nhmLr2DE+r5hZTfM68dbJ7XKvXMBgJCRFASEtphPM8\n01INIWeqHwSo60bKhgnaqKIG9uZCXzPtVBM/5FT44aijdR6ft8dog1F0nE3x9gO7\nyVlfQegk5w4CT5/Zpc0Oqvl9wq6oqPN8T19FdtcgXRQxAHl9xvHj4ZXa8dCNNU9P\n6dgCmgNc9z0UkZ8TAVwgJZN+NxSKpcx+JX/IR6ssr0o8/sEKnxlgxOiGZpE4oUkI\nmJcm21HtSXBkdfyZIMFNXnpN6c1ae2B3DmNAd422L77CoTAhwM3N+cjN4bNzT9Sc\n+f8crRCrBPYsx4UMFLl1PYb1CHVEww48GhbIe+iizxiyH2+ZATE=\n=jRTy\n-----END PGP SIGNATURE-----",
        "payload": "tree bb258201f8187279c7093cc63d1ef22ecc2f6067\nparent 665072a36df2e4c88705fedd4ac7c955d7f6a488\nauthor James O'Beirne <james.obeirne@gmail.com> 1568665938 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1631735203 -0400\n\nvalidation: change UpdateTip for multiple chainstates\n\nOnly perform certain behavior (namely that related to servicing\nthe getblocktemplate RPC call) for the active chainstate when\ncalling UpdateTip.\n\nCo-authored-by: Jon Atack <jon@atack.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b217020df78bc981d221fe04497c831120ef969f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b217020df78bc981d221fe04497c831120ef969f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b217020df78bc981d221fe04497c831120ef969f/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "665072a36df2e4c88705fedd4ac7c955d7f6a488",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/665072a36df2e4c88705fedd4ac7c955d7f6a488",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/665072a36df2e4c88705fedd4ac7c955d7f6a488"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 35,
      "deletions": 6
    },
    "files": [
      {
        "sha": "69f461202b2256889396ec377d532ac4ff8e5619",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 6,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b217020df78bc981d221fe04497c831120ef969f/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b217020df78bc981d221fe04497c831120ef969f/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=b217020df78bc981d221fe04497c831120ef969f",
        "patch": "@@ -2208,8 +2208,42 @@ static void AppendWarning(bilingual_str& res, const bilingual_str& warn)\n     res += warn;\n }\n \n+static void UpdateTipLog(\n+    const CCoinsViewCache& coins_tip,\n+    const CBlockIndex* tip,\n+    const CChainParams& params,\n+    const std::string& func_name,\n+    const std::string& prefix,\n+    const std::string& warning_messages) EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n+{\n+\n+    AssertLockHeld(::cs_main);\n+    LogPrintf(\"%s%s: new best=%s height=%d version=0x%08x log2_work=%f tx=%lu date='%s' progress=%f cache=%.1fMiB(%utxo)%s\\n\",\n+        prefix, func_name,\n+        tip->GetBlockHash().ToString(), tip->nHeight, tip->nVersion,\n+        log(tip->nChainWork.getdouble()) / log(2.0), (unsigned long)tip->nChainTx,\n+        FormatISO8601DateTime(tip->GetBlockTime()),\n+        GuessVerificationProgress(params.TxData(), tip),\n+        coins_tip.DynamicMemoryUsage() * (1.0 / (1 << 20)),\n+        coins_tip.GetCacheSize(),\n+        !warning_messages.empty() ? strprintf(\" warning='%s'\", warning_messages) : \"\");\n+}\n+\n void CChainState::UpdateTip(const CBlockIndex* pindexNew)\n {\n+    const auto& coins_tip = this->CoinsTip();\n+\n+    // The remainder of the function isn't relevant if we are not acting on\n+    // the active chainstate, so return if need be.\n+    if (this != &m_chainman.ActiveChainstate()) {\n+        // Only log every so often so that we don't bury log messages at the tip.\n+        constexpr int BACKGROUND_LOG_INTERVAL = 2000;\n+        if (pindexNew->nHeight % BACKGROUND_LOG_INTERVAL == 0) {\n+            UpdateTipLog(coins_tip, pindexNew, m_params, __func__, \"[background validation] \", \"\");\n+        }\n+        return;\n+    }\n+\n     // New best block\n     if (m_mempool) {\n         m_mempool->AddTransactionsUpdated(1);\n@@ -2237,12 +2271,7 @@ void CChainState::UpdateTip(const CBlockIndex* pindexNew)\n             }\n         }\n     }\n-    LogPrintf(\"%s: new best=%s height=%d version=0x%08x log2_work=%f tx=%lu date='%s' progress=%f cache=%.1fMiB(%utxo)%s\\n\", __func__,\n-      pindexNew->GetBlockHash().ToString(), pindexNew->nHeight, pindexNew->nVersion,\n-      log(pindexNew->nChainWork.getdouble())/log(2.0), (unsigned long)pindexNew->nChainTx,\n-      FormatISO8601DateTime(pindexNew->GetBlockTime()),\n-      GuessVerificationProgress(m_params.TxData(), pindexNew), this->CoinsTip().DynamicMemoryUsage() * (1.0 / (1<<20)), this->CoinsTip().GetCacheSize(),\n-      !warning_messages.empty() ? strprintf(\" warning='%s'\", warning_messages.original) : \"\");\n+    UpdateTipLog(coins_tip, pindexNew, m_params, __func__, \"\", warning_messages.original);\n }\n \n /** Disconnect m_chain's tip."
      }
    ]
  },
  {
    "sha": "42b2520db93fd9feb3df4101654391fa7d3e2140",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MmIyNTIwZGI5M2ZkOWZlYjNkZjQxMDE2NTQzOTFmYTdkM2UyMTQw",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-07-21T17:31:14Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-09-15T19:46:44Z"
      },
      "message": "chain: add BLOCK_ASSUMED_VALID for use with assumeutxo\n\nInstead of (ab)using the existing BLOCK_VALID_* flags to mark CBlockIndex entries which\nwe haven't yet fully validated (but assume validity for use with UTXO snapshot\nloading), introduce a status flag that specifically marks an assumed-valid state.\n\nThis state is then removed in RaiseValidity() when the block has actually been\nvalidated.\n\nThis distinction will allow us to make the necessary changes to various parts of the\nsystem to facilitate assumeutxo/background chainstate validation but without leaking\ndetails like snapshot height, as we had done previously.\n\nChanges that actually make use of this flag follow in future commits.",
      "tree": {
        "sha": "4d5be14ead20a661b656b098b91393edd609522a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d5be14ead20a661b656b098b91393edd609522a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42b2520db93fd9feb3df4101654391fa7d3e2140",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmFCTaQACgkQepNdrbLE\nTwWyPg//QGOXbPuStTblcHPyep1rRaa1SfXL885l64+zE/LYVLupyPim0lJUPs1/\nyxmiP7K55hnHudWuEYLTWIoeEboMSTfOT6mN9A1WbP4t5tDmDQWoFCFXpsROZDfD\ncfMFD43GkXHr2MvxMDdWI+nQXeeHYp35JS8rW+OxEfiZdpbbRGvAP5rLZcWtl1ws\nLN8fWT13j5OZsq/ZyJ0wlH17EkSX4zVsVs/P1WH+r4MpKdBv7LSM5U+hdQS/3Kia\nejctH0rVPkJ7yko4gS3WiKnWJNPcf9rKoMd5wq7TbJroMFH9ptG5AY3LgF/9Hv9D\nJ50NrL9GTzYuT7kLX/wUT9YRs97WzdTRTIuCoIXGsonwZbepyplo9xbllV1Gq5bx\n/1NIvFkQCG9ClrkBh3zZ/iOsAn+he2fJs3g+oZU0mCIFtP1Q8wjESFP5rim+kPIv\nycYcXIQwKhiSx8eYGinP5IiUTnleuH2RAjhRfsqqdYBueqiT0MWu4F9inv6SB+5E\ngJ2sJIEUPI83U8XlJ2PxejOIjQeTfo0rxxjAw6iQdR83aSe/SnyZxddzoj77UY+4\n6ok5Wj4tfvvIgS47HoDQRr/UkVefmSZIrTqCbSlzpmjlEavGQP7wrO/Fr4X/5FSL\n9B5uDEZf18zrfOdJwInwxOdtCe5CCdZ0vY11HKgG9iqxSMH89A0=\n=9amo\n-----END PGP SIGNATURE-----",
        "payload": "tree 4d5be14ead20a661b656b098b91393edd609522a\nparent b217020df78bc981d221fe04497c831120ef969f\nauthor James O'Beirne <james.obeirne@pm.me> 1626888674 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1631735204 -0400\n\nchain: add BLOCK_ASSUMED_VALID for use with assumeutxo\n\nInstead of (ab)using the existing BLOCK_VALID_* flags to mark CBlockIndex entries which\nwe haven't yet fully validated (but assume validity for use with UTXO snapshot\nloading), introduce a status flag that specifically marks an assumed-valid state.\n\nThis state is then removed in RaiseValidity() when the block has actually been\nvalidated.\n\nThis distinction will allow us to make the necessary changes to various parts of the\nsystem to facilitate assumeutxo/background chainstate validation but without leaking\ndetails like snapshot height, as we had done previously.\n\nChanges that actually make use of this flag follow in future commits.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42b2520db93fd9feb3df4101654391fa7d3e2140",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/42b2520db93fd9feb3df4101654391fa7d3e2140",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42b2520db93fd9feb3df4101654391fa7d3e2140/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b217020df78bc981d221fe04497c831120ef969f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b217020df78bc981d221fe04497c831120ef969f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b217020df78bc981d221fe04497c831120ef969f"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 21,
      "deletions": 3
    },
    "files": [
      {
        "sha": "365a7f79b6998c34cad6b4d7299260013f5a9fd1",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 21,
        "deletions": 3,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/42b2520db93fd9feb3df4101654391fa7d3e2140/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/42b2520db93fd9feb3df4101654391fa7d3e2140/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=42b2520db93fd9feb3df4101654391fa7d3e2140",
        "patch": "@@ -126,7 +126,15 @@ enum BlockStatus: uint32_t {\n     BLOCK_FAILED_CHILD       =   64, //!< descends from failed block\n     BLOCK_FAILED_MASK        =   BLOCK_FAILED_VALID | BLOCK_FAILED_CHILD,\n \n-    BLOCK_OPT_WITNESS       =   128, //!< block data in blk*.data was received with a witness-enforcing client\n+    BLOCK_OPT_WITNESS        =   128, //!< block data in blk*.dat was received with a witness-enforcing client\n+\n+    /**\n+     * If set, this indicates that the block index entry is assumed-valid.\n+     * Certain diagnostics will be skipped in e.g. CheckBlockIndex().\n+     * It almost certainly means that the block's full validation is pending\n+     * on a background chainstate. See `doc/assumeutxo.md`.\n+     */\n+    BLOCK_ASSUMED_VALID      =   256,\n };\n \n /** The block chain is a tree shaped structure starting with the\n@@ -300,14 +308,24 @@ class CBlockIndex\n         return ((nStatus & BLOCK_VALID_MASK) >= nUpTo);\n     }\n \n+    //! @returns true if the block is assumed-valid; this means it is queued to be\n+    //!   validated by a background chainstate.\n+    bool IsAssumedValid() const { return nStatus & BLOCK_ASSUMED_VALID; }\n+\n     //! Raise the validity level of this block index entry.\n     //! Returns true if the validity was changed.\n     bool RaiseValidity(enum BlockStatus nUpTo)\n     {\n         assert(!(nUpTo & ~BLOCK_VALID_MASK)); // Only validity flags allowed.\n-        if (nStatus & BLOCK_FAILED_MASK)\n-            return false;\n+        if (nStatus & BLOCK_FAILED_MASK) return false;\n+\n         if ((nStatus & BLOCK_VALID_MASK) < nUpTo) {\n+            // If this block had been marked assumed-valid and we're raising\n+            // its validity to a certain point, there is no longer an assumption.\n+            if (nStatus & BLOCK_ASSUMED_VALID && nUpTo >= BLOCK_VALID_SCRIPTS) {\n+                nStatus &= ~BLOCK_ASSUMED_VALID;\n+            }\n+\n             nStatus = (nStatus & ~BLOCK_VALID_MASK) | nUpTo;\n             return true;\n         }"
      }
    ]
  },
  {
    "sha": "01a9b8fe719efab2c268dc738bc93cfbdf92edb7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMWE5YjhmZTcxOWVmYWIyYzI2OGRjNzM4YmM5M2NmYmRmOTJlZGI3",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-07-21T18:08:14Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-09-15T19:46:45Z"
      },
      "message": "validation: set BLOCK_ASSUMED_VALID during snapshot load\n\nMark the block index entries that are beneath the snapshot base block as\nassumed-valid.  Subsequent commits will make use of this flag in other\nparts of the system.",
      "tree": {
        "sha": "6e742087c1e217472c3c78142829434a1b03a719",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6e742087c1e217472c3c78142829434a1b03a719"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01a9b8fe719efab2c268dc738bc93cfbdf92edb7",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmFCTaUACgkQepNdrbLE\nTwUP2A/9GY04qNfjCMcurd4sPECpGFaMkpAKc2I0AAt+ht7syTQ+2iYj+aJFdsch\naAKpeSyWFhIO42CQlHXUCBLpyyEfjNKs2y+EwDHsJJoP/OHcP7pOeuqWeE19OV49\ny6LYEM1vrLBD1yliRZD2lghMtFYw5Eo3vYYrdEqumwp2IfJ1jOGFycD37BL2sVr/\n07/aNG2GB13+6ylO7cwIpzVwICmOOuuU7S8moocjC4T930/QL5/hBpI4Omn0agPG\niT+xoH1nJAlnDhcBjHUbaw+uHWCHSsa0e8pRHWoX4jYMUXcOGPblSW2lAw/M8DrE\nF8GxjuTrxS6DCrZehJqxq7K8S5aSy29ociiRfWmAouvxmISrXAYMXiQCRlL2o5T1\nqWUPNHhqNGhfzi1ElTJZ5dfEpscepDQ3hmDfYlzbwwYaMAwDzqHd/jUbnTLq+8IU\nsBorhbUdeNUYbMiwJamWm2xorQYYwH+9/FutepzuPc0dWQEOpehtnT5crDJhU8XM\nO5d8Q7SvdZMsnnLqd6YTVEEEALKd36CZ4wW6mt7ZgbOOWt5s2UW6DDjoC+dWi5Uo\nWxlljgL5dNon1yjlmW0NZP1WuW/hSkFXcvk5jR/m3y80+IY+lMOL3shYTK5YGZ5c\ngujOIJyLhcS13RqWiXbMcV/Ji66J6x8e88ztZM1fZsAAtZ3CP0E=\n=vYyO\n-----END PGP SIGNATURE-----",
        "payload": "tree 6e742087c1e217472c3c78142829434a1b03a719\nparent 42b2520db93fd9feb3df4101654391fa7d3e2140\nauthor James O'Beirne <james.obeirne@pm.me> 1626890894 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1631735205 -0400\n\nvalidation: set BLOCK_ASSUMED_VALID during snapshot load\n\nMark the block index entries that are beneath the snapshot base block as\nassumed-valid.  Subsequent commits will make use of this flag in other\nparts of the system.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01a9b8fe719efab2c268dc738bc93cfbdf92edb7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/01a9b8fe719efab2c268dc738bc93cfbdf92edb7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01a9b8fe719efab2c268dc738bc93cfbdf92edb7/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "42b2520db93fd9feb3df4101654391fa7d3e2140",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42b2520db93fd9feb3df4101654391fa7d3e2140",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/42b2520db93fd9feb3df4101654391fa7d3e2140"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 14,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d34f4d636caafb328fb2ee2e72c292785a826ae2",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01a9b8fe719efab2c268dc738bc93cfbdf92edb7/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01a9b8fe719efab2c268dc738bc93cfbdf92edb7/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=01a9b8fe719efab2c268dc738bc93cfbdf92edb7",
        "patch": "@@ -5007,11 +5007,25 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n         // Fake nChainTx so that GuessVerificationProgress reports accurately\n         index->nChainTx = index->pprev ? index->pprev->nChainTx + index->nTx : 1;\n \n+        // Mark unvalidated block index entries beneath the snapshot base block as assumed-valid.\n+        if (!index->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            // This flag will be removed once the block is fully validated by a\n+            // background chainstate.\n+            index->nStatus |= BLOCK_ASSUMED_VALID;\n+        }\n+\n         // Fake BLOCK_OPT_WITNESS so that CChainState::NeedsRedownload()\n         // won't ask to rewind the entire assumed-valid chain on startup.\n         if (index->pprev && DeploymentActiveAt(*index, ::Params().GetConsensus(), Consensus::DEPLOYMENT_SEGWIT)) {\n             index->nStatus |= BLOCK_OPT_WITNESS;\n         }\n+\n+        setDirtyBlockIndex.insert(index);\n+        // Changes to the block index will be flushed to disk after this call\n+        // returns in `ActivateSnapshot()`, when `MaybeRebalanceCaches()` is\n+        // called, since we've added a snapshot chainstate and therefore will\n+        // have to downsize the IBD chainstate, which will result in a call to\n+        // `FlushStateToDisk(ALWAYS)`.\n     }\n \n     assert(index);"
      }
    ]
  },
  {
    "sha": "5a807736dacfc3e6fa57231219336acf08be38fb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YTgwNzczNmRhY2ZjM2U2ZmE1NzIzMTIxOTMzNmFjZjA4YmUzOGZi",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-07-21T18:13:33Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-09-15T19:46:46Z"
      },
      "message": "validation: insert assumed-valid block index entries into candidates",
      "tree": {
        "sha": "75033e48de3138a4b97a0214d5491cd7104541fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/75033e48de3138a4b97a0214d5491cd7104541fb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a807736dacfc3e6fa57231219336acf08be38fb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmFCTaYACgkQepNdrbLE\nTwVHJQ//WoSREUKKaqy8izNszP2amh8dA/ZTinr7jEn/YeGSxsloQ1tgBvNk2XUL\ne3IUOKchSjK8F0M6CxiA9VWg1DmXiBYetFmORR81KKpjSWREFaP8EKrJ/l/747r3\n4Bop4kQxflJvVAIbke12pXAvIH4rtwmXjmqKOWf1zLqzpcjf0shutaK7kUAH1O8p\nCa7ffU44UO1GhcemK7hmmPBsrbmp+Ej1XL+qRWiFIFIpQXu7D30dP+owPSe/EIcb\nvutDrlDYh7r7osqUH1Fex7b1hHe3TxA5F/YEt2cBmqyL0fbWHqUF9nEgZ8fWDxCE\n4vmBjHkRWWurGVb2/1NGJ6HP2xFIOp5MA9I5KrZwfTzvm4mnS3goiQlfV+S9wcX+\np9pSz2+GauuMJ3YCH3Ofj05v8yFLk6GezW1QOJxo5FfiVNubwIB8t9DMs4FVmNAf\nCTV4jXn9SyPEfrjkPDktZ4ISDQJ73TYOfPxq3Au/Qwv/+yRCiKwSR17k3PDE/fVu\nSsscK5OaeB0dmP45wQAMB2O1wymSRxxLAgml40zzfPUgI9xfwSIbWNIMdxRDIFXc\nT1x6RNwhvNJ9efFGACiy9H7OGLlCkIS3eMFZV3CUDn1DS4rBGF4KU4QrecqCU3Os\nkNlzoziap9dhS7uBJF5Dpl14QgEaGSH10JF0Bp7h9SLHWaCNnhk=\n=UPOw\n-----END PGP SIGNATURE-----",
        "payload": "tree 75033e48de3138a4b97a0214d5491cd7104541fb\nparent 01a9b8fe719efab2c268dc738bc93cfbdf92edb7\nauthor James O'Beirne <james.obeirne@pm.me> 1626891213 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1631735206 -0400\n\nvalidation: insert assumed-valid block index entries into candidates\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a807736dacfc3e6fa57231219336acf08be38fb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5a807736dacfc3e6fa57231219336acf08be38fb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a807736dacfc3e6fa57231219336acf08be38fb/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "01a9b8fe719efab2c268dc738bc93cfbdf92edb7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01a9b8fe719efab2c268dc738bc93cfbdf92edb7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/01a9b8fe719efab2c268dc738bc93cfbdf92edb7"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 7,
      "deletions": 4
    },
    "files": [
      {
        "sha": "fc498f6e9bf802b130eb5ba65a8800b7cd47d214",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a807736dacfc3e6fa57231219336acf08be38fb/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a807736dacfc3e6fa57231219336acf08be38fb/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=5a807736dacfc3e6fa57231219336acf08be38fb",
        "patch": "@@ -3773,7 +3773,9 @@ bool BlockManager::LoadBlockIndex(\n             pindex->nStatus |= BLOCK_FAILED_CHILD;\n             setDirtyBlockIndex.insert(pindex);\n         }\n-        if (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) && (pindex->HaveTxsDownloaded() || pindex->pprev == nullptr)) {\n+        if (pindex->IsAssumedValid() ||\n+                (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n+                 (pindex->HaveTxsDownloaded() || pindex->pprev == nullptr))) {\n             block_index_candidates.insert(pindex);\n         }\n         if (pindex->nStatus & BLOCK_FAILED_MASK && (!pindexBestInvalid || pindex->nChainWork > pindexBestInvalid->nChainWork))"
      },
      {
        "sha": "fb12f65144b4a0bcd97af889b09b8d12fc212f2d",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a807736dacfc3e6fa57231219336acf08be38fb/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a807736dacfc3e6fa57231219336acf08be38fb/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=5a807736dacfc3e6fa57231219336acf08be38fb",
        "patch": "@@ -647,9 +647,10 @@ class CChainState\n     const std::optional<uint256> m_from_snapshot_blockhash;\n \n     /**\n-     * The set of all CBlockIndex entries with BLOCK_VALID_TRANSACTIONS (for itself and all ancestors) and\n-     * as good as our current tip or better. Entries may be failed, though, and pruning nodes may be\n-     * missing the data for the block.\n+     * The set of all CBlockIndex entries with either BLOCK_VALID_TRANSACTIONS (for\n+     * itself and all ancestors) *or* BLOCK_ASSUMED_VALID (if using background\n+     * chainstates) and as good as our current tip or better. Entries may be failed,\n+     * though, and pruning nodes may be missing the data for the block.\n      */\n     std::set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexCandidates;\n "
      }
    ]
  },
  {
    "sha": "8f5710fd0ac5173b577e5d00708485170b321bcc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZjU3MTBmZDBhYzUxNzNiNTc3ZTVkMDA3MDg0ODUxNzBiMzIxYmNj",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-08T14:04:08Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-09-15T19:46:47Z"
      },
      "message": "validation: fix CheckBlockIndex for multiple chainstates\n\nAdjust CheckBlockIndex to account for\n- assumed-valid block indexes lacking transaction data, and\n- setBlockIndexCandidates for the background chainstate not containing certain entries\n  which rely on assumed-valid ancestors.",
      "tree": {
        "sha": "866a7f19473d499354bfc375c08d0b9c150f0461",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/866a7f19473d499354bfc375c08d0b9c150f0461"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8f5710fd0ac5173b577e5d00708485170b321bcc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmFCTacACgkQepNdrbLE\nTwWOGhAAjBLUDAKe36M3P2xQz4HIpFMci25Q425+Izy5eHGvxlKi9unlFvZipdtk\nzAW/o0iTWsVN/gjm7IZUsp76iEnIbCCGcuVi1nWo49GntaPyAgmgmp+oKdRm2Q7M\ntuvWdjgdY3ZH0YmCqqRphOnFwQ/UZuvXJFk0J8V7fFYuKQx5W+160NUO6ERuq8aD\nSL9R52cLWxicV5Awvls/kP33h8sFoET3Ffyl6Rd+9Tio5NH5tpQEmOWxtd0O/ShB\nA4xRgShx2iuQLrmHWwsv6MpJ6xN+ckMQ6USnSv6hoc20TjpGLMQkX79bcVUksLU9\n3oNJf/uiSIymp/Y2uLl8V2z5IQSOUQnnsCMUTXhM9d4PzdcRGOTzf6ScJOfGpb7v\nOut/gHIgQBcj20ulk+iOARhmMMiyXwe3oCv2wFxlVGPx0BOquc8r6Y2G+KVLUG/e\nT/dZeA4tHQ07CJO58jxl9rIQAoTp0r5Mwl9A6ZocV4dk1C+qu1TQM/QfJt1+rJ/6\ntrSMIc40rqKvMLYcDQbKI2woJ8GBoSCjxS0rSki98N4G38bXyWnfSwdULahldNXj\njFQYtFw30FF07Oukuqo6PJUMWDf6oZg7iW0Gb3kbI02f3cbKRm/Vhz99zpMQ2NjA\n5vBBj/io1h1twwoyXQg0K/DXkjAFPG5R/a4AKv2lcpk/760ze9Q=\n=PcIV\n-----END PGP SIGNATURE-----",
        "payload": "tree 866a7f19473d499354bfc375c08d0b9c150f0461\nparent 5a807736dacfc3e6fa57231219336acf08be38fb\nauthor James O'Beirne <james.obeirne@pm.me> 1617890648 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1631735207 -0400\n\nvalidation: fix CheckBlockIndex for multiple chainstates\n\nAdjust CheckBlockIndex to account for\n- assumed-valid block indexes lacking transaction data, and\n- setBlockIndexCandidates for the background chainstate not containing certain entries\n  which rely on assumed-valid ancestors.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f5710fd0ac5173b577e5d00708485170b321bcc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8f5710fd0ac5173b577e5d00708485170b321bcc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f5710fd0ac5173b577e5d00708485170b321bcc/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5a807736dacfc3e6fa57231219336acf08be38fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a807736dacfc3e6fa57231219336acf08be38fb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5a807736dacfc3e6fa57231219336acf08be38fb"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 45,
      "deletions": 7
    },
    "files": [
      {
        "sha": "a11dec00a4967ea87cdf5f5585199d6dcbc6b2a3",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 45,
        "deletions": 7,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f5710fd0ac5173b577e5d00708485170b321bcc/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f5710fd0ac5173b577e5d00708485170b321bcc/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=8f5710fd0ac5173b577e5d00708485170b321bcc",
        "patch": "@@ -4354,12 +4354,33 @@ void CChainState::CheckBlockIndex()\n     while (pindex != nullptr) {\n         nNodes++;\n         if (pindexFirstInvalid == nullptr && pindex->nStatus & BLOCK_FAILED_VALID) pindexFirstInvalid = pindex;\n-        if (pindexFirstMissing == nullptr && !(pindex->nStatus & BLOCK_HAVE_DATA)) pindexFirstMissing = pindex;\n+        // Assumed-valid index entries will not have data since we haven't downloaded the\n+        // full block yet.\n+        if (pindexFirstMissing == nullptr && !(pindex->nStatus & BLOCK_HAVE_DATA) && !pindex->IsAssumedValid()) {\n+            pindexFirstMissing = pindex;\n+        }\n         if (pindexFirstNeverProcessed == nullptr && pindex->nTx == 0) pindexFirstNeverProcessed = pindex;\n         if (pindex->pprev != nullptr && pindexFirstNotTreeValid == nullptr && (pindex->nStatus & BLOCK_VALID_MASK) < BLOCK_VALID_TREE) pindexFirstNotTreeValid = pindex;\n-        if (pindex->pprev != nullptr && pindexFirstNotTransactionsValid == nullptr && (pindex->nStatus & BLOCK_VALID_MASK) < BLOCK_VALID_TRANSACTIONS) pindexFirstNotTransactionsValid = pindex;\n-        if (pindex->pprev != nullptr && pindexFirstNotChainValid == nullptr && (pindex->nStatus & BLOCK_VALID_MASK) < BLOCK_VALID_CHAIN) pindexFirstNotChainValid = pindex;\n-        if (pindex->pprev != nullptr && pindexFirstNotScriptsValid == nullptr && (pindex->nStatus & BLOCK_VALID_MASK) < BLOCK_VALID_SCRIPTS) pindexFirstNotScriptsValid = pindex;\n+\n+        if (pindex->pprev != nullptr && !pindex->IsAssumedValid()) {\n+            // Skip validity flag checks for BLOCK_ASSUMED_VALID index entries, since these\n+            // *_VALID_MASK flags will not be present for index entries we are temporarily assuming\n+            // valid.\n+            if (pindexFirstNotTransactionsValid == nullptr &&\n+                    (pindex->nStatus & BLOCK_VALID_MASK) < BLOCK_VALID_TRANSACTIONS) {\n+                pindexFirstNotTransactionsValid = pindex;\n+            }\n+\n+            if (pindexFirstNotChainValid == nullptr &&\n+                    (pindex->nStatus & BLOCK_VALID_MASK) < BLOCK_VALID_CHAIN) {\n+                pindexFirstNotChainValid = pindex;\n+            }\n+\n+            if (pindexFirstNotScriptsValid == nullptr &&\n+                    (pindex->nStatus & BLOCK_VALID_MASK) < BLOCK_VALID_SCRIPTS) {\n+                pindexFirstNotScriptsValid = pindex;\n+            }\n+        }\n \n         // Begin: actual consistency checks.\n         if (pindex->pprev == nullptr) {\n@@ -4370,7 +4391,9 @@ void CChainState::CheckBlockIndex()\n         if (!pindex->HaveTxsDownloaded()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        if (!fHavePruned) {\n+        // Unless these indexes are assumed valid and pending block download on a\n+        // background chainstate.\n+        if (!fHavePruned && !pindex->IsAssumedValid()) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n             assert(pindexFirstMissing == pindexFirstNeverProcessed);\n@@ -4379,7 +4402,16 @@ void CChainState::CheckBlockIndex()\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n-        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n+        if (pindex->IsAssumedValid()) {\n+            // Assumed-valid blocks should have some nTx value.\n+            assert(pindex->nTx > 0);\n+            // Assumed-valid blocks should connect to the main chain.\n+            assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n+        } else {\n+            // Otherwise there should only be an nTx value if we have\n+            // actually seen a block's transactions.\n+            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n+        }\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveTxsDownloaded().\n         assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveTxsDownloaded());\n         assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveTxsDownloaded());\n@@ -4396,11 +4428,17 @@ void CChainState::CheckBlockIndex()\n         }\n         if (!CBlockIndexWorkComparator()(pindex, m_chain.Tip()) && pindexFirstNeverProcessed == nullptr) {\n             if (pindexFirstInvalid == nullptr) {\n+                const bool is_active = this == &m_chainman.ActiveChainstate();\n+\n                 // If this block sorts at least as good as the current tip and\n                 // is valid and we have all data for its parents, it must be in\n                 // setBlockIndexCandidates.  m_chain.Tip() must also be there\n                 // even if some data has been pruned.\n-                if (pindexFirstMissing == nullptr || pindex == m_chain.Tip()) {\n+                //\n+                // Don't perform this check for the background chainstate since\n+                // its setBlockIndexCandidates shouldn't have some entries (i.e. those past the\n+                // snapshot block) which do exist in the block index for the active chainstate.\n+                if (is_active && (pindexFirstMissing == nullptr || pindex == m_chain.Tip())) {\n                     assert(setBlockIndexCandidates.count(pindex));\n                 }\n                 // If some parent is missing, then it could be that this block was in"
      }
    ]
  },
  {
    "sha": "071200993f3a9412821ce5387851d659baf85327",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNzEyMDA5OTNmM2E5NDEyODIxY2U1Mzg3ODUxZDY1OWJhZjg1MzI3",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-07T15:48:02Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-09-15T19:46:48Z"
      },
      "message": "move-only: unittest: add test/util/chainstate.h\n\nand move `CreateAndActivateUTXOSnapshot()` into it for reuse\nin future test modules.",
      "tree": {
        "sha": "64b05b8cbcc6f366a1d258516e7b3e89732baba8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/64b05b8cbcc6f366a1d258516e7b3e89732baba8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/071200993f3a9412821ce5387851d659baf85327",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmFCTagACgkQepNdrbLE\nTwXsKQ/7BbSdtCDmFwWG9jHBgINvNENPfIIbD7w16prEc7rpwLilNd98th4MMgmt\nOSqYoC6nzOVflsBGbiASRneWGl3132L40Sry3R1/beUfpkdseTEeu+2Q7TH7gXZS\nY+HK6jRsyc8TaFYHg+rnBcLavGNgQ7REzhWNmoxJg+GzRvintGhD2l8hFPriSdYk\nML8lo5nJME6tEMtcGUZnevbBMTLa93W1BscuGM0gXIDxri04ATsBktXvgsThDdU7\n+AskvJP0UfTUStqPbPqF9MSOuVH1m6l2lz3xGWi00iNT2tg+TpWkixzA00haDuCJ\nMBN9yf6KD9xcppJBkpvB8l16uesYhYgZBnG5839chb8A/kqtsJYuBJhAbWIovKqr\nxtkpxPwsLKIbVJ7fidpysmNOxdkxZupbPAYHO65s0D5/6k9qqLe6hc+wAKirUHoO\n8pYhGz7EQkog0l3B175ZT/5bkEVnC3ITzkHp25SmFENlSioAQU6o6gq1YF7M0Qg3\n+k2zcci9Hii0rZfGxRrphV4kl4TGHgWQs1of73Kap4jMEVmvMVFWFU633gdXkQxs\nWgK59MPp+KKpKQbXAKBVMU12Ml8YCWDD/dd4aeQOb/zePCD9Mgj6wfCSdXro5Xpq\nYkrOkTjxNvm9nmorHpS3ZwM5GtpzYsaGf+Y/SZd3qAwBwab6wNA=\n=KiEK\n-----END PGP SIGNATURE-----",
        "payload": "tree 64b05b8cbcc6f366a1d258516e7b3e89732baba8\nparent 8f5710fd0ac5173b577e5d00708485170b321bcc\nauthor James O'Beirne <james.obeirne@pm.me> 1617810482 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1631735208 -0400\n\nmove-only: unittest: add test/util/chainstate.h\n\nand move `CreateAndActivateUTXOSnapshot()` into it for reuse\nin future test modules.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/071200993f3a9412821ce5387851d659baf85327",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/071200993f3a9412821ce5387851d659baf85327",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/071200993f3a9412821ce5387851d659baf85327/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8f5710fd0ac5173b577e5d00708485170b321bcc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f5710fd0ac5173b577e5d00708485170b321bcc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f5710fd0ac5173b577e5d00708485170b321bcc"
      }
    ],
    "stats": {
      "total": 87,
      "additions": 56,
      "deletions": 31
    },
    "files": [
      {
        "sha": "0a3b99e7d23b0a20eef632afaf5778c84d533faf",
        "filename": "src/Makefile.test_util.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/071200993f3a9412821ce5387851d659baf85327/src/Makefile.test_util.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/071200993f3a9412821ce5387851d659baf85327/src/Makefile.test_util.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test_util.include?ref=071200993f3a9412821ce5387851d659baf85327",
        "patch": "@@ -9,6 +9,7 @@ EXTRA_LIBRARIES += \\\n \n TEST_UTIL_H = \\\n     test/util/blockfilter.h \\\n+    test/util/chainstate.h \\\n     test/util/logging.h \\\n     test/util/mining.h \\\n     test/util/net.h \\"
      },
      {
        "sha": "38a6be7e9a0421d9254bd69bd757d5dc795841fb",
        "filename": "src/test/util/chainstate.h",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/071200993f3a9412821ce5387851d659baf85327/src/test/util/chainstate.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/071200993f3a9412821ce5387851d659baf85327/src/test/util/chainstate.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/chainstate.h?ref=071200993f3a9412821ce5387851d659baf85327",
        "patch": "@@ -0,0 +1,54 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#ifndef BITCOIN_TEST_UTIL_CHAINSTATE_H\n+#define BITCOIN_TEST_UTIL_CHAINSTATE_H\n+\n+#include <clientversion.h>\n+#include <fs.h>\n+#include <node/context.h>\n+#include <node/utxo_snapshot.h>\n+#include <rpc/blockchain.h>\n+#include <validation.h>\n+\n+#include <univalue.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+auto NoMalleation = [](CAutoFile& file, SnapshotMetadata& meta){};\n+\n+/**\n+ * Create and activate a UTXO snapshot, optionally providing a function to\n+ * malleate the snapshot.\n+ */\n+template<typename F = decltype(NoMalleation)>\n+static bool\n+CreateAndActivateUTXOSnapshot(NodeContext& node, const fs::path root, F malleation = NoMalleation)\n+{\n+    // Write out a snapshot to the test's tempdir.\n+    //\n+    int height;\n+    WITH_LOCK(::cs_main, height = node.chainman->ActiveHeight());\n+    fs::path snapshot_path = root / tfm::format(\"test_snapshot.%d.dat\", height);\n+    FILE* outfile{fsbridge::fopen(snapshot_path, \"wb\")};\n+    CAutoFile auto_outfile{outfile, SER_DISK, CLIENT_VERSION};\n+\n+    UniValue result = CreateUTXOSnapshot(node, node.chainman->ActiveChainstate(), auto_outfile);\n+    BOOST_TEST_MESSAGE(\n+        \"Wrote UTXO snapshot to \" << snapshot_path.make_preferred().string() << \": \" << result.write());\n+\n+    // Read the written snapshot in and then activate it.\n+    //\n+    FILE* infile{fsbridge::fopen(snapshot_path, \"rb\")};\n+    CAutoFile auto_infile{infile, SER_DISK, CLIENT_VERSION};\n+    SnapshotMetadata metadata;\n+    auto_infile >> metadata;\n+\n+    malleation(auto_infile, metadata);\n+\n+    return node.chainman->ActivateSnapshot(auto_infile, metadata, /*in_memory*/ true);\n+}\n+\n+\n+#endif // BITCOIN_TEST_UTIL_CHAINSTATE_H"
      },
      {
        "sha": "2b53c10fe9d89d1a79df414c7415c71561c76468",
        "filename": "src/test/validation_chainstatemanager_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 31,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/071200993f3a9412821ce5387851d659baf85327/src/test/validation_chainstatemanager_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/071200993f3a9412821ce5387851d659baf85327/src/test/validation_chainstatemanager_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_chainstatemanager_tests.cpp?ref=071200993f3a9412821ce5387851d659baf85327",
        "patch": "@@ -9,12 +9,12 @@\n #include <rpc/blockchain.h>\n #include <sync.h>\n #include <test/util/setup_common.h>\n+#include <test/util/chainstate.h>\n #include <uint256.h>\n #include <validation.h>\n #include <validationinterface.h>\n \n #include <tinyformat.h>\n-#include <univalue.h>\n \n #include <vector>\n \n@@ -154,36 +154,6 @@ BOOST_AUTO_TEST_CASE(chainstatemanager_rebalance_caches)\n     BOOST_CHECK_CLOSE(c2.m_coinsdb_cache_size_bytes, max_cache * 0.95, 1);\n }\n \n-auto NoMalleation = [](CAutoFile& file, SnapshotMetadata& meta){};\n-\n-template<typename F = decltype(NoMalleation)>\n-static bool\n-CreateAndActivateUTXOSnapshot(NodeContext& node, const fs::path root, F malleation = NoMalleation)\n-{\n-    // Write out a snapshot to the test's tempdir.\n-    //\n-    int height;\n-    WITH_LOCK(::cs_main, height = node.chainman->ActiveHeight());\n-    fs::path snapshot_path = root / tfm::format(\"test_snapshot.%d.dat\", height);\n-    FILE* outfile{fsbridge::fopen(snapshot_path, \"wb\")};\n-    CAutoFile auto_outfile{outfile, SER_DISK, CLIENT_VERSION};\n-\n-    UniValue result = CreateUTXOSnapshot(node, node.chainman->ActiveChainstate(), auto_outfile);\n-    BOOST_TEST_MESSAGE(\n-        \"Wrote UTXO snapshot to \" << snapshot_path.make_preferred().string() << \": \" << result.write());\n-\n-    // Read the written snapshot in and then activate it.\n-    //\n-    FILE* infile{fsbridge::fopen(snapshot_path, \"rb\")};\n-    CAutoFile auto_infile{infile, SER_DISK, CLIENT_VERSION};\n-    SnapshotMetadata metadata;\n-    auto_infile >> metadata;\n-\n-    malleation(auto_infile, metadata);\n-\n-    return node.chainman->ActivateSnapshot(auto_infile, metadata, /*in_memory*/ true);\n-}\n-\n //! Test basic snapshot activation.\n BOOST_FIXTURE_TEST_CASE(chainstatemanager_activate_snapshot, TestChain100Setup)\n {"
      }
    ]
  },
  {
    "sha": "298bf5d563cc740c6ae71750d86942e0278b22d6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOThiZjVkNTYzY2M3NDBjNmFlNzE3NTBkODY5NDJlMDI3OGIyMmQ2",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-09-15T19:39:40Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-09-15T19:46:49Z"
      },
      "message": "test: refactor: declare NoMalleation const auto\n\nTo avoid linker error on some platforms:\n    https://github.com/bitcoin/bitcoin/pull/21526#discussion_r709404714\n\nCo-authored-by: Russ Yanofsky <russ@yanofsky.org>",
      "tree": {
        "sha": "062b64fd44f90e9980412c1a9d3dca88703d2e6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/062b64fd44f90e9980412c1a9d3dca88703d2e6e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/298bf5d563cc740c6ae71750d86942e0278b22d6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmFCTakACgkQepNdrbLE\nTwVaQhAAmicVcXMUydjYNRsj7WHkCKI+gsal3oQVcUoIFkpO5XwugkAV6uOC+YEE\nk5BGG2/WEGZWHu1GvYFQyPvg1YWbrMCj3BJNOxCSLhrBoi7qj8uuaha7Hik6egUc\n2Tq+vNp1zzH1kg/ZCmAb0IrtR5pBZJPRDQkt6kiZoxVbMvjTO59cf/B9wf3oBjRx\nCjoA9MTrTdAifPklkkVHh4wdJGOZh1PIQlCMpSFtKU7gdcQ2DI0O2ncNapUREn+i\n0o+dzW3d7aOTbpgsVQwwsWojVaNoYd2RucEmeGUXHoB8/p02vegen8nCvD3nzLH1\nlGwjTtx0H0YnzG85s3sRv3kNTMcqQRoaaDaAMIxE+fkyZ6QMkpADMkpCiMqtPg8b\noW+V/c5KObjY+OB0usGgN/SQpivfA86FlvKQi90rcTf6DzPGsPRiErKZFSdhMdW8\nJ+C1Psmjh9P1ihYXOT6UVYvg2KLwgB6gUSVxfkCe+ZDmvNR2lsSU35V6U7bKFZT4\nBUYgPSU79U+iGJxFTkZcmmgGGkoAfqnnKhe60px7HeiQ/De9QvAKaWz+S81YPJfT\nRtQOGTb6BEDxFxPb74/jl+X3MyAoIbPts2e14+sveLxxppdvwcAq+kLbY7DPtRmy\nVMx0+NgSbeSHz9Bh9Gdwmx1Gc5r8xG1S9KqRXGqv9CYZ816lwUw=\n=kMP7\n-----END PGP SIGNATURE-----",
        "payload": "tree 062b64fd44f90e9980412c1a9d3dca88703d2e6e\nparent 071200993f3a9412821ce5387851d659baf85327\nauthor James O'Beirne <james.obeirne@pm.me> 1631734780 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1631735209 -0400\n\ntest: refactor: declare NoMalleation const auto\n\nTo avoid linker error on some platforms:\n    https://github.com/bitcoin/bitcoin/pull/21526#discussion_r709404714\n\nCo-authored-by: Russ Yanofsky <russ@yanofsky.org>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/298bf5d563cc740c6ae71750d86942e0278b22d6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/298bf5d563cc740c6ae71750d86942e0278b22d6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/298bf5d563cc740c6ae71750d86942e0278b22d6/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "071200993f3a9412821ce5387851d659baf85327",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/071200993f3a9412821ce5387851d659baf85327",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/071200993f3a9412821ce5387851d659baf85327"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "81ea4c38f57448057fbcf01c5a6ddc225669dcb0",
        "filename": "src/test/util/chainstate.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/298bf5d563cc740c6ae71750d86942e0278b22d6/src/test/util/chainstate.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/298bf5d563cc740c6ae71750d86942e0278b22d6/src/test/util/chainstate.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/chainstate.h?ref=298bf5d563cc740c6ae71750d86942e0278b22d6",
        "patch": "@@ -16,7 +16,7 @@\n \n #include <boost/test/unit_test.hpp>\n \n-auto NoMalleation = [](CAutoFile& file, SnapshotMetadata& meta){};\n+const auto NoMalleation = [](CAutoFile& file, SnapshotMetadata& meta){};\n \n /**\n  * Create and activate a UTXO snapshot, optionally providing a function to"
      }
    ]
  },
  {
    "sha": "2705570109a2a90ecfd3f4180944498626fc2707",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNzA1NTcwMTA5YTJhOTBlY2ZkM2Y0MTgwOTQ0NDk4NjI2ZmMyNzA3",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-08T14:06:10Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-09-15T19:46:50Z"
      },
      "message": "test: refactor: separate CreateBlock in TestChain100Setup\n\nThis is so we can create blocks within unittests and have them\nbe processed by specific chainstates (instead of the just the\nactive one).",
      "tree": {
        "sha": "71c89732897c6ba16873d5401d4c6afac6518bcb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/71c89732897c6ba16873d5401d4c6afac6518bcb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2705570109a2a90ecfd3f4180944498626fc2707",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmFCTaoACgkQepNdrbLE\nTwVUNA/+Nt5hQiio2hpdaMcOc67Y9csPjvEiPLDh1ZfCsLXrlN21VRNFyk3CQY+b\nFfCrHqrJvBlXu6oJuD5YVnWqlkFNTv0izxI7FCcVyqXOB/MQZfq8C1g6eSfG2Bkn\nZttoZwqjcIhDrJEBQfutGASIMW7NdNncvIaqKtPtRKk/LbxjBcZgfGLLgTHkV/iI\nZUYFwRlnyRc0TRP+BnceVKAG73Ot7OT1NqqiFjhq8HVigKw4vpJz3HXlc0r6RJKW\ng/e+naU7RBMsPbQCNAyjMuzXsqTvpdP4ghBkFk55tzPoU1NoJnVZUalVyzBpmsxs\nm6NNNw2ESqep+L9OULodQSXMzZrMq5mYVp/HsPI8MLo3Fdljye6uaX5MvWfdI86o\n+Xo58+fbaXWm17Iu8GdlYqjojLhETLYr4TtqnckfkAms/n2OSaN1MAqvzR9K2zuJ\n2bdIWAl8lqqo93w69YAx/qA+lh/GSnEXB5XN/+iyCeX/bIf+W4m4k/e59GB9uMb9\nI1ezScqcMbDflFyhqA6RMe/ucGPhBT7EJoz99q/3MRX5Yr87SwJBl+IM2iJGeSDv\n+rCFuQxPvaShxiGPWddtg+KSbYjZs7/Ei/JXLmyOobWJqTHwjON3O6dY+dv+HPMb\n1uORmzjdqXKCZq0jRNqseFO3/AK1bElWe9HM1qVY90efZ3yz4V4=\n=G2ez\n-----END PGP SIGNATURE-----",
        "payload": "tree 71c89732897c6ba16873d5401d4c6afac6518bcb\nparent 298bf5d563cc740c6ae71750d86942e0278b22d6\nauthor James O'Beirne <james.obeirne@pm.me> 1617890770 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1631735210 -0400\n\ntest: refactor: separate CreateBlock in TestChain100Setup\n\nThis is so we can create blocks within unittests and have them\nbe processed by specific chainstates (instead of the just the\nactive one).\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2705570109a2a90ecfd3f4180944498626fc2707",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2705570109a2a90ecfd3f4180944498626fc2707",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2705570109a2a90ecfd3f4180944498626fc2707/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "298bf5d563cc740c6ae71750d86942e0278b22d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/298bf5d563cc740c6ae71750d86942e0278b22d6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/298bf5d563cc740c6ae71750d86942e0278b22d6"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 32,
      "deletions": 4
    },
    "files": [
      {
        "sha": "b3342aa4242989c2890ed111db0555dc51472865",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 2,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2705570109a2a90ecfd3f4180944498626fc2707/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2705570109a2a90ecfd3f4180944498626fc2707/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=2705570109a2a90ecfd3f4180944498626fc2707",
        "patch": "@@ -237,11 +237,14 @@ void TestChain100Setup::mineBlocks(int num_blocks)\n     }\n }\n \n-CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransaction>& txns, const CScript& scriptPubKey)\n+CBlock TestChain100Setup::CreateBlock(\n+    const std::vector<CMutableTransaction>& txns,\n+    const CScript& scriptPubKey,\n+    CChainState& chainstate)\n {\n     const CChainParams& chainparams = Params();\n     CTxMemPool empty_pool;\n-    CBlock block = BlockAssembler(m_node.chainman->ActiveChainstate(), empty_pool, chainparams).CreateNewBlock(scriptPubKey)->block;\n+    CBlock block = BlockAssembler(chainstate, empty_pool, chainparams).CreateNewBlock(scriptPubKey)->block;\n \n     Assert(block.vtx.size() == 1);\n     for (const CMutableTransaction& tx : txns) {\n@@ -251,6 +254,20 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n \n     while (!CheckProofOfWork(block.GetHash(), block.nBits, chainparams.GetConsensus())) ++block.nNonce;\n \n+    return block;\n+}\n+\n+CBlock TestChain100Setup::CreateAndProcessBlock(\n+    const std::vector<CMutableTransaction>& txns,\n+    const CScript& scriptPubKey,\n+    CChainState* chainstate)\n+{\n+    if (!chainstate) {\n+        chainstate = &Assert(m_node.chainman)->ActiveChainstate();\n+    }\n+\n+    const CChainParams& chainparams = Params();\n+    const CBlock block = this->CreateBlock(txns, scriptPubKey, *chainstate);\n     std::shared_ptr<const CBlock> shared_pblock = std::make_shared<const CBlock>(block);\n     Assert(m_node.chainman)->ProcessNewBlock(chainparams, shared_pblock, true, nullptr);\n "
      },
      {
        "sha": "acb96e54dfd8c9ef7c0a4911aea53d03fb696169",
        "filename": "src/test/util/setup_common.h",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2705570109a2a90ecfd3f4180944498626fc2707/src/test/util/setup_common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2705570109a2a90ecfd3f4180944498626fc2707/src/test/util/setup_common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.h?ref=2705570109a2a90ecfd3f4180944498626fc2707",
        "patch": "@@ -119,9 +119,20 @@ struct TestChain100Setup : public RegTestingSetup {\n     /**\n      * Create a new block with just given transactions, coinbase paying to\n      * scriptPubKey, and try to add it to the current chain.\n+     * If no chainstate is specified, default to the active.\n      */\n     CBlock CreateAndProcessBlock(const std::vector<CMutableTransaction>& txns,\n-                                 const CScript& scriptPubKey);\n+                                 const CScript& scriptPubKey,\n+                                 CChainState* chainstate = nullptr);\n+\n+    /**\n+     * Create a new block with just given transactions, coinbase paying to\n+     * scriptPubKey.\n+     */\n+    CBlock CreateBlock(\n+        const std::vector<CMutableTransaction>& txns,\n+        const CScript& scriptPubKey,\n+        CChainState& chainstate);\n \n     //! Mine a series of new blocks on the active chain.\n     void mineBlocks(int num_blocks);"
      },
      {
        "sha": "be9e05a65e6d77fe0977791f2daaff7106a564d0",
        "filename": "src/test/validation_chainstatemanager_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2705570109a2a90ecfd3f4180944498626fc2707/src/test/validation_chainstatemanager_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2705570109a2a90ecfd3f4180944498626fc2707/src/test/validation_chainstatemanager_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_chainstatemanager_tests.cpp?ref=2705570109a2a90ecfd3f4180944498626fc2707",
        "patch": "@@ -8,8 +8,8 @@\n #include <random.h>\n #include <rpc/blockchain.h>\n #include <sync.h>\n-#include <test/util/setup_common.h>\n #include <test/util/chainstate.h>\n+#include <test/util/setup_common.h>\n #include <uint256.h>\n #include <validation.h>\n #include <validationinterface.h>"
      }
    ]
  },
  {
    "sha": "673a5bd3377929a0a6a62eda8b560e47bc2cca0c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NzNhNWJkMzM3NzkyOWEwYTZhNjJlZGE4YjU2MGU0N2JjMmNjYTBj",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-08T14:07:58Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-09-15T19:46:51Z"
      },
      "message": "test: validation: add unittest for UpdateTip behavior",
      "tree": {
        "sha": "fc6d0769f3a370c62c83c4faca3a7659d4d4ec1b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fc6d0769f3a370c62c83c4faca3a7659d4d4ec1b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/673a5bd3377929a0a6a62eda8b560e47bc2cca0c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmFCTasACgkQepNdrbLE\nTwWeDg/9F4+4k6pJgyI+XDViSqyZ6N/BRZTL3gOhrSMMUXHJ42aLXf35o3lpDqxn\n4nLKakuFdO/MzvKkCQL8QAdeVogb87LrK2rwnAZsY0MYSMChh25jaHNioV1xGnBH\nGh8R1Q7HL0EzqmVc4irlW6cqCKT5qGTu91zAHd+xhZGWjAovqysgyWbhyTOsmCee\nzjN0+Z1hx1edQHv60GqnIC76ad9vjFAwiWkSv4ooXDzL0u/r3/K2bqvBeXPkflgQ\nxfNnGFnLe5F7WysszBUvbbpwDG2jUGFKDXf9jW5CayKmacHxyv+gWhHxIFKVehc+\nLcwHkdPNk/mN0EaSu+mEcOp1V6W6lsc+7F+4iwGRvGdfl4pPq7hQieVnIM30Cy6i\nFJKjltOIQBOo6fLMgPrpDA/A9t3aDANlu/lN77Tv/dxU0YbCDq7ZLvG1dAipXD8p\n1PQJh+WPBjKRn2btLHFAE8KLKPLXO/ZuDW+91rSF9VZ3UqVNruj3HZ+3MduleQIb\nQFb0vSDD4+jGijgm6BRni5ST2uWEBjcmTMGUph3jTjX3TuxTsSzGjRDg9Ff/VcCB\n6u2hR9sY36KlJK5IRKuI70HzZeGBIjFQYrgiAAoMo+igis6Uh1my4hD7ryQjXttR\nmopcJgECt7qCelHKf1pBvqjX7ueOWvPjk2IT+rMCxQnP5wa0a7o=\n=3jCq\n-----END PGP SIGNATURE-----",
        "payload": "tree fc6d0769f3a370c62c83c4faca3a7659d4d4ec1b\nparent 2705570109a2a90ecfd3f4180944498626fc2707\nauthor James O'Beirne <james.obeirne@pm.me> 1617890878 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1631735211 -0400\n\ntest: validation: add unittest for UpdateTip behavior\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/673a5bd3377929a0a6a62eda8b560e47bc2cca0c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/673a5bd3377929a0a6a62eda8b560e47bc2cca0c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/673a5bd3377929a0a6a62eda8b560e47bc2cca0c/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2705570109a2a90ecfd3f4180944498626fc2707",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2705570109a2a90ecfd3f4180944498626fc2707",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2705570109a2a90ecfd3f4180944498626fc2707"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 76,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2514e65194871678171275783a27196f2c1d078d",
        "filename": "src/test/validation_chainstate_tests.cpp",
        "status": "modified",
        "additions": 76,
        "deletions": 0,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/673a5bd3377929a0a6a62eda8b560e47bc2cca0c/src/test/validation_chainstate_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/673a5bd3377929a0a6a62eda8b560e47bc2cca0c/src/test/validation_chainstate_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_chainstate_tests.cpp?ref=673a5bd3377929a0a6a62eda8b560e47bc2cca0c",
        "patch": "@@ -2,10 +2,13 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n //\n+#include <chainparams.h>\n #include <random.h>\n #include <uint256.h>\n #include <consensus/validation.h>\n #include <sync.h>\n+#include <rpc/blockchain.h>\n+#include <test/util/chainstate.h>\n #include <test/util/setup_common.h>\n #include <validation.h>\n \n@@ -72,4 +75,77 @@ BOOST_AUTO_TEST_CASE(validation_chainstate_resize_caches)\n     WITH_LOCK(::cs_main, manager.Unload());\n }\n \n+//! Test UpdateTip behavior for both active and background chainstates.\n+//!\n+//! When run on the background chainstate, UpdateTip should do a subset\n+//! of what it does for the active chainstate.\n+BOOST_FIXTURE_TEST_CASE(chainstate_update_tip, TestChain100Setup)\n+{\n+    ChainstateManager& chainman = *Assert(m_node.chainman);\n+    uint256 curr_tip = ::g_best_block;\n+\n+    // Mine 10 more blocks, putting at us height 110 where a valid assumeutxo value can\n+    // be found.\n+    mineBlocks(10);\n+\n+    // After adding some blocks to the tip, best block should have changed.\n+    BOOST_CHECK(::g_best_block != curr_tip);\n+\n+    BOOST_REQUIRE(CreateAndActivateUTXOSnapshot(m_node, m_path_root));\n+\n+    // Ensure our active chain is the snapshot chainstate.\n+    BOOST_CHECK(chainman.IsSnapshotActive());\n+\n+    curr_tip = ::g_best_block;\n+\n+    // Mine a new block on top of the activated snapshot chainstate.\n+    mineBlocks(1);  // Defined in TestChain100Setup.\n+\n+    // After adding some blocks to the snapshot tip, best block should have changed.\n+    BOOST_CHECK(::g_best_block != curr_tip);\n+\n+    curr_tip = ::g_best_block;\n+\n+    CChainState* background_cs;\n+\n+    BOOST_CHECK_EQUAL(chainman.GetAll().size(), 2);\n+    for (CChainState* cs : chainman.GetAll()) {\n+        if (cs != &chainman.ActiveChainstate()) {\n+            background_cs = cs;\n+        }\n+    }\n+    BOOST_CHECK(background_cs);\n+\n+    // Create a block to append to the validation chain.\n+    std::vector<CMutableTransaction> noTxns;\n+    CScript scriptPubKey = CScript() << ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n+    CBlock validation_block = this->CreateBlock(noTxns, scriptPubKey, *background_cs);\n+    auto pblock = std::make_shared<const CBlock>(validation_block);\n+    BlockValidationState state;\n+    CBlockIndex* pindex = nullptr;\n+    const CChainParams& chainparams = Params();\n+    bool newblock = false;\n+\n+    // TODO: much of this is inlined from ProcessNewBlock(); just reuse PNB()\n+    // once it is changed to support multiple chainstates.\n+    {\n+        LOCK(::cs_main);\n+        bool checked = CheckBlock(*pblock, state, chainparams.GetConsensus());\n+        BOOST_CHECK(checked);\n+        bool accepted = background_cs->AcceptBlock(\n+            pblock, state, &pindex, true, nullptr, &newblock);\n+        BOOST_CHECK(accepted);\n+    }\n+    // UpdateTip is called here\n+    bool block_added = background_cs->ActivateBestChain(state, pblock);\n+\n+    // Ensure tip is as expected\n+    BOOST_CHECK_EQUAL(background_cs->m_chain.Tip()->GetBlockHash(), validation_block.GetHash());\n+\n+    // g_best_block should be unchanged after adding a block to the background\n+    // validation chain.\n+    BOOST_CHECK(block_added);\n+    BOOST_CHECK_EQUAL(curr_tip, ::g_best_block);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]