jonasschnelli,2016-08-26T07:36:35Z,Would you mind adding some unit tests for this? There are already some `ScriptToAsmStr()` in `script_tests.cpp`?\n,https://github.com/bitcoin/bitcoin/pull/8598#issuecomment-242652858,242652858,
fivepiece,2016-08-26T07:37:48Z,"Sure, I'll give it a go.\n",https://github.com/bitcoin/bitcoin/pull/8598#issuecomment-242653176,242653176,
luke-jr,2016-08-27T03:17:16Z,"```\nhex script: 0181                   hex script: 0181\n  ""asm"": ""[error]"",                     ""asm"": ""-1"",\nhex script: 0101                   hex script: 0101\n  ""asm"": ""[error]"",                     ""asm"": ""1"",\n```\n\nAm I missing something? Why are these errors? Shouldn't they be valid non-minimally-encoded numbers to display as hex?\n\nAlso, it seems this creates ambiguity between number ",https://github.com/bitcoin/bitcoin/pull/8598#issuecomment-242892399,242892399,
fivepiece,2016-08-27T05:47:28Z,"Thanks for the feedback!\n\nAs I understand it, ""wasteful"" data pushes are themselves invalid.  It's fine to push a non-minimally encoded number and then not do math operations on it, but pushing a value with an a ""larger"" opcode would fail.  So in the case of `0x81` and `[0x01,0x10]`, not using `1NEGATE` or `OP_1`-`OP_16` would cause the script to fail :\n\n```\n$ bitcoin-cli decodescript 51A8204",https://github.com/bitcoin/bitcoin/pull/8598#issuecomment-242898263,242898263,
fivepiece,2016-08-28T11:23:20Z,"I've added a check that happens if the push opcode is `PUSHDATA1` - `PUSHDATA4`.\nA temporary script is created that only pushes the data, then we compare our own push op with the one the script has.\nI'm guessing this does cost some to execute, but I think it's better to eventually return an ""[error]"" instead of some wasteful push that will produce errors on actual script evaluation.\n\nThoughts?",https://github.com/bitcoin/bitcoin/pull/8598#issuecomment-242969499,242969499,
sipa,2016-09-04T20:37:50Z,"MINIMALDATA is not a consensus rule, and transactions that use non-minimal pushes or non-minimally encoded numbers are perfectly valid in blocks. I don't think we should fail to decode them. I don't really have good advice here, as I'm fine with somehow marking these as different, but they shouldn't fail to decode.\n",https://github.com/bitcoin/bitcoin/pull/8598#issuecomment-244627257,244627257,
fivepiece,2016-09-04T21:00:17Z,Seems like I was fixing a problem that did not exist in the first place.  I will be closing this PR for the sake of resubmitting another one which should reflect non-standard use of Script in a warning fasion rather than error and terminate.\n\nBoth non-minimally encoded numbers /and/ wasteful pushes are valid in blocks.  Thanks @sipa for clarifying.\n,https://github.com/bitcoin/bitcoin/pull/8598#issuecomment-244628423,244628423,
