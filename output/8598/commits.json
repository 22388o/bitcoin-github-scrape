[
  {
    "sha": "9e8e9f8d4c853a130d6532f4a8b7a2cd54f1391d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZThlOWY4ZDRjODUzYTEzMGQ2NTMyZjRhOGI3YTJjZDU0ZjEzOTFk",
    "commit": {
      "author": {
        "name": "fivepiece",
        "email": "fivepiece@users.noreply.github.com",
        "date": "2016-08-26T07:08:01Z"
      },
      "committer": {
        "name": "fivepiece",
        "email": "fivepiece@users.noreply.github.com",
        "date": "2016-08-26T07:08:01Z"
      },
      "message": "Fix displaying of invalid and non-minimal small pushes as numbers\n\nCurrently, commands like decodescript that return an assembly representation\nof the script will show seemingly valid integers for a number of incorrectly\npushed int values of sizes 0 to 4. The purpose of this change is to allow\nScriptToAsmStr to return a more accurate representation of the assembly.\n\nIn addition, ScriptToAsmStr will not fail on what are considered invalid\npushes altogether. This change will make ScriptToAsmStr return an '[error]'\nstring, much like other invalid pushes.",
      "tree": {
        "sha": "305ddd89f6453383a607c25412a3232d15a06638",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/305ddd89f6453383a607c25412a3232d15a06638"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e8e9f8d4c853a130d6532f4a8b7a2cd54f1391d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e8e9f8d4c853a130d6532f4a8b7a2cd54f1391d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9e8e9f8d4c853a130d6532f4a8b7a2cd54f1391d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e8e9f8d4c853a130d6532f4a8b7a2cd54f1391d/comments",
    "author": {
      "login": "fivepiece",
      "id": 5624963,
      "node_id": "MDQ6VXNlcjU2MjQ5NjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5624963?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fivepiece",
      "html_url": "https://github.com/fivepiece",
      "followers_url": "https://api.github.com/users/fivepiece/followers",
      "following_url": "https://api.github.com/users/fivepiece/following{/other_user}",
      "gists_url": "https://api.github.com/users/fivepiece/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fivepiece/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fivepiece/subscriptions",
      "organizations_url": "https://api.github.com/users/fivepiece/orgs",
      "repos_url": "https://api.github.com/users/fivepiece/repos",
      "events_url": "https://api.github.com/users/fivepiece/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fivepiece/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fivepiece",
      "id": 5624963,
      "node_id": "MDQ6VXNlcjU2MjQ5NjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5624963?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fivepiece",
      "html_url": "https://github.com/fivepiece",
      "followers_url": "https://api.github.com/users/fivepiece/followers",
      "following_url": "https://api.github.com/users/fivepiece/following{/other_user}",
      "gists_url": "https://api.github.com/users/fivepiece/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fivepiece/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fivepiece/subscriptions",
      "organizations_url": "https://api.github.com/users/fivepiece/orgs",
      "repos_url": "https://api.github.com/users/fivepiece/repos",
      "events_url": "https://api.github.com/users/fivepiece/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fivepiece/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "53f8f226bd1d627c4a6dec5862a1d4ea5a933e45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53f8f226bd1d627c4a6dec5862a1d4ea5a933e45",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/53f8f226bd1d627c4a6dec5862a1d4ea5a933e45"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 21,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e70fc4841245b2cbf93f61cd66d2d23e1e0edd4d",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 1,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e8e9f8d4c853a130d6532f4a8b7a2cd54f1391d/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e8e9f8d4c853a130d6532f4a8b7a2cd54f1391d/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=9e8e9f8d4c853a130d6532f4a8b7a2cd54f1391d",
        "patch": "@@ -87,8 +87,28 @@ string ScriptToAsmStr(const CScript& script, const bool fAttemptSighashDecode)\n             return str;\n         }\n         if (0 <= opcode && opcode <= OP_PUSHDATA4) {\n+            //! if vch can't be encoded correctly as a number, treat it as hex data.\n             if (vch.size() <= static_cast<vector<unsigned char>::size_type>(4)) {\n-                str += strprintf(\"%d\", CScriptNum(vch, false).getint());\n+                try {\n+                    ///\n+                    /// an invalid script like \"0x01 {0x81,0x01,0x02,..0x10}\"\n+                    /// will pass the assignment below so we have to check for\n+                    /// the validity of the push. (see CheckMinimalPush)\n+                    ///\n+                    int num = CScriptNum(vch, true).getint();\n+                    if (!(opcode == 1 && (-1 <= num && num <= 16))) {\n+                        str += strprintf(\"%d\", num);\n+                    } else {\n+                        str += \"[error]\";\n+                        return str;\n+                    }\n+                ///\n+                /// any push of 0 to 4 bytes that is not a correctly encoded\n+                /// number will be displayed as a push of the hex data itself\n+                ///\n+                } catch (const std::runtime_error& e) {\n+                    str += HexStr(vch);\n+                }\n             } else {\n                 // the IsUnspendable check makes sure not to try to decode OP_RETURN data that may match the format of a signature\n                 if (fAttemptSighashDecode && !script.IsUnspendable()) {"
      }
    ]
  },
  {
    "sha": "72208adc7263babb889ef230dcaa79b8beb5291d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjIwOGFkYzcyNjNiYWJiODg5ZWYyMzBkY2FhNzliOGJlYjUyOTFk",
    "commit": {
      "author": {
        "name": "fivepiece",
        "email": "fivepiece@users.noreply.github.com",
        "date": "2016-08-26T10:03:34Z"
      },
      "committer": {
        "name": "fivepiece",
        "email": "fivepiece@users.noreply.github.com",
        "date": "2016-08-26T10:03:34Z"
      },
      "message": "Add unit tests for number and hex pushes for ScriptToAsmStr",
      "tree": {
        "sha": "a3ed6ee6986cecd9ed9d03dceadf3b0e16887583",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a3ed6ee6986cecd9ed9d03dceadf3b0e16887583"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72208adc7263babb889ef230dcaa79b8beb5291d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72208adc7263babb889ef230dcaa79b8beb5291d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/72208adc7263babb889ef230dcaa79b8beb5291d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72208adc7263babb889ef230dcaa79b8beb5291d/comments",
    "author": {
      "login": "fivepiece",
      "id": 5624963,
      "node_id": "MDQ6VXNlcjU2MjQ5NjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5624963?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fivepiece",
      "html_url": "https://github.com/fivepiece",
      "followers_url": "https://api.github.com/users/fivepiece/followers",
      "following_url": "https://api.github.com/users/fivepiece/following{/other_user}",
      "gists_url": "https://api.github.com/users/fivepiece/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fivepiece/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fivepiece/subscriptions",
      "organizations_url": "https://api.github.com/users/fivepiece/orgs",
      "repos_url": "https://api.github.com/users/fivepiece/repos",
      "events_url": "https://api.github.com/users/fivepiece/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fivepiece/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fivepiece",
      "id": 5624963,
      "node_id": "MDQ6VXNlcjU2MjQ5NjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5624963?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fivepiece",
      "html_url": "https://github.com/fivepiece",
      "followers_url": "https://api.github.com/users/fivepiece/followers",
      "following_url": "https://api.github.com/users/fivepiece/following{/other_user}",
      "gists_url": "https://api.github.com/users/fivepiece/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fivepiece/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fivepiece/subscriptions",
      "organizations_url": "https://api.github.com/users/fivepiece/orgs",
      "repos_url": "https://api.github.com/users/fivepiece/repos",
      "events_url": "https://api.github.com/users/fivepiece/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fivepiece/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e8e9f8d4c853a130d6532f4a8b7a2cd54f1391d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e8e9f8d4c853a130d6532f4a8b7a2cd54f1391d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e8e9f8d4c853a130d6532f4a8b7a2cd54f1391d"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 48,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7b2adfa177bb4bd63b5fc3fc651729e932e4a365",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72208adc7263babb889ef230dcaa79b8beb5291d/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72208adc7263babb889ef230dcaa79b8beb5291d/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=72208adc7263babb889ef230dcaa79b8beb5291d",
        "patch": "@@ -1228,6 +1228,54 @@ BOOST_AUTO_TEST_CASE(script_GetScriptAsm)\n     BOOST_CHECK_EQUAL(derSig + \"81 \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"81\")) << vchPubKey));\n     BOOST_CHECK_EQUAL(derSig + \"82 \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"82\")) << vchPubKey));\n     BOOST_CHECK_EQUAL(derSig + \"83 \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"83\")) << vchPubKey));\n+\n+    BOOST_CHECK_EQUAL(\"2\", ScriptToAsmStr(CScript() << OP_2));\n+    BOOST_CHECK_EQUAL(\"82\",  ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"52\"))));\n+    BOOST_CHECK_EQUAL(\"5200\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"5200\"))));\n+    BOOST_CHECK_EQUAL(\"520000\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"520000\"))));\n+    BOOST_CHECK_EQUAL(\"52000000\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"52000000\"))));\n+    BOOST_CHECK_EQUAL(\"5200000000\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"5200000000\"))));\n+\n+    BOOST_CHECK_EQUAL(\"[error]\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"81\")) << OP_0));\n+    BOOST_CHECK_EQUAL(\"-1 0\", ScriptToAsmStr(CScript() << OP_1NEGATE << OP_0));\n+    BOOST_CHECK_EQUAL(\"[error]\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"01\")) << OP_0));\n+    BOOST_CHECK_EQUAL(\"1 0\", ScriptToAsmStr(CScript() << OP_1 << OP_0));\n+    BOOST_CHECK_EQUAL(\"[error]\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"02\")) << OP_0));\n+    BOOST_CHECK_EQUAL(\"2 0\", ScriptToAsmStr(CScript() << OP_2 << OP_0));\n+    BOOST_CHECK_EQUAL(\"[error]\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"03\")) << OP_0));\n+    BOOST_CHECK_EQUAL(\"3 0\", ScriptToAsmStr(CScript() << OP_3 << OP_0));\n+    BOOST_CHECK_EQUAL(\"[error]\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"04\")) << OP_0));\n+    BOOST_CHECK_EQUAL(\"4 0\", ScriptToAsmStr(CScript() << OP_4 << OP_0));\n+    BOOST_CHECK_EQUAL(\"[error]\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"05\")) << OP_0));\n+    BOOST_CHECK_EQUAL(\"5 0\", ScriptToAsmStr(CScript() << OP_5 << OP_0));\n+    BOOST_CHECK_EQUAL(\"[error]\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"06\")) << OP_0));\n+    BOOST_CHECK_EQUAL(\"6 0\", ScriptToAsmStr(CScript() << OP_6 << OP_0));\n+    BOOST_CHECK_EQUAL(\"[error]\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"07\")) << OP_0));\n+    BOOST_CHECK_EQUAL(\"7 0\", ScriptToAsmStr(CScript() << OP_7 << OP_0));\n+    BOOST_CHECK_EQUAL(\"[error]\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"08\")) << OP_0));\n+    BOOST_CHECK_EQUAL(\"8 0\", ScriptToAsmStr(CScript() << OP_8 << OP_0));\n+    BOOST_CHECK_EQUAL(\"[error]\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"09\")) << OP_0));\n+    BOOST_CHECK_EQUAL(\"9 0\", ScriptToAsmStr(CScript() << OP_9 << OP_0));\n+    BOOST_CHECK_EQUAL(\"[error]\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"0A\")) << OP_0));\n+    BOOST_CHECK_EQUAL(\"10 0\", ScriptToAsmStr(CScript() << OP_10 << OP_0));\n+    BOOST_CHECK_EQUAL(\"[error]\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"0B\")) << OP_0));\n+    BOOST_CHECK_EQUAL(\"11 0\", ScriptToAsmStr(CScript() << OP_11 << OP_0));\n+    BOOST_CHECK_EQUAL(\"[error]\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"0C\")) << OP_0));\n+    BOOST_CHECK_EQUAL(\"12 0\", ScriptToAsmStr(CScript() << OP_12 << OP_0));\n+    BOOST_CHECK_EQUAL(\"[error]\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"0D\")) << OP_0));\n+    BOOST_CHECK_EQUAL(\"13 0\", ScriptToAsmStr(CScript() << OP_13 << OP_0));\n+    BOOST_CHECK_EQUAL(\"[error]\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"0E\")) << OP_0));\n+    BOOST_CHECK_EQUAL(\"14 0\", ScriptToAsmStr(CScript() << OP_14 << OP_0));\n+    BOOST_CHECK_EQUAL(\"[error]\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"0F\")) << OP_0));\n+    BOOST_CHECK_EQUAL(\"15 0\", ScriptToAsmStr(CScript() << OP_15 << OP_0));\n+    BOOST_CHECK_EQUAL(\"[error]\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"10\")) << OP_0));\n+    BOOST_CHECK_EQUAL(\"16 0\", ScriptToAsmStr(CScript() << OP_16 << OP_0));\n+\n+    string hashEmpty(\"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\");\n+    string hashZero(\"6e340b9cffb37a989ca544e6bb780a2c78901d3fb33738768511a30617afa01d\");\n+\n+    BOOST_CHECK_EQUAL(\"0 OP_SHA256 \" + hashEmpty + \" OP_EQUAL\", ScriptToAsmStr(CScript() << OP_0 << OP_SHA256 << ToByteVector(ParseHex(hashEmpty)) << OP_EQUAL));\n+    BOOST_CHECK_EQUAL(\"00 OP_SHA256 \" + hashZero + \" OP_EQUAL\", ScriptToAsmStr(CScript() << ToByteVector(ParseHex(\"00\")) << OP_SHA256 << ToByteVector(ParseHex(hashZero)) << OP_EQUAL));\n }\n \n static CScript"
      }
    ]
  },
  {
    "sha": "277eb796cde49e199b3be80f7c404dd371f36adb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNzdlYjc5NmNkZTQ5ZTE5OWIzYmU4MGY3YzQwNGRkMzcxZjM2YWRi",
    "commit": {
      "author": {
        "name": "fivepiece",
        "email": "fivepiece@users.noreply.github.com",
        "date": "2016-08-28T10:27:09Z"
      },
      "committer": {
        "name": "fivepiece",
        "email": "fivepiece@users.noreply.github.com",
        "date": "2016-08-28T10:27:09Z"
      },
      "message": "Test handling of big pushops in fixasm",
      "tree": {
        "sha": "34745e4616f0c74173a807e4103fd99b13d3696f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/34745e4616f0c74173a807e4103fd99b13d3696f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/277eb796cde49e199b3be80f7c404dd371f36adb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/277eb796cde49e199b3be80f7c404dd371f36adb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/277eb796cde49e199b3be80f7c404dd371f36adb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/277eb796cde49e199b3be80f7c404dd371f36adb/comments",
    "author": {
      "login": "fivepiece",
      "id": 5624963,
      "node_id": "MDQ6VXNlcjU2MjQ5NjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5624963?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fivepiece",
      "html_url": "https://github.com/fivepiece",
      "followers_url": "https://api.github.com/users/fivepiece/followers",
      "following_url": "https://api.github.com/users/fivepiece/following{/other_user}",
      "gists_url": "https://api.github.com/users/fivepiece/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fivepiece/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fivepiece/subscriptions",
      "organizations_url": "https://api.github.com/users/fivepiece/orgs",
      "repos_url": "https://api.github.com/users/fivepiece/repos",
      "events_url": "https://api.github.com/users/fivepiece/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fivepiece/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fivepiece",
      "id": 5624963,
      "node_id": "MDQ6VXNlcjU2MjQ5NjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5624963?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fivepiece",
      "html_url": "https://github.com/fivepiece",
      "followers_url": "https://api.github.com/users/fivepiece/followers",
      "following_url": "https://api.github.com/users/fivepiece/following{/other_user}",
      "gists_url": "https://api.github.com/users/fivepiece/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fivepiece/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fivepiece/subscriptions",
      "organizations_url": "https://api.github.com/users/fivepiece/orgs",
      "repos_url": "https://api.github.com/users/fivepiece/repos",
      "events_url": "https://api.github.com/users/fivepiece/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fivepiece/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "72208adc7263babb889ef230dcaa79b8beb5291d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72208adc7263babb889ef230dcaa79b8beb5291d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/72208adc7263babb889ef230dcaa79b8beb5291d"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 14,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c1d7067a6f7bf530f9213281c461340798714c1d",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/277eb796cde49e199b3be80f7c404dd371f36adb/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/277eb796cde49e199b3be80f7c404dd371f36adb/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=277eb796cde49e199b3be80f7c404dd371f36adb",
        "patch": "@@ -87,6 +87,20 @@ string ScriptToAsmStr(const CScript& script, const bool fAttemptSighashDecode)\n             return str;\n         }\n         if (0 <= opcode && opcode <= OP_PUSHDATA4) {\n+            ///\n+            /// we find big push opcodes that are incorrectly applied to small data \n+            /// by creating a temporary script that pushes the data correctly, then\n+            /// checking if our own push opcode matches the one in the temporary script\n+            ///\n+            if (OP_PUSHDATA1 <= opcode && opcode <= OP_PUSHDATA4) {\n+                CScript pushvch = CScript() << vch;\n+                if (!pushvch.Find(opcode)) {\n+                    str += \"[error]\";\n+                    pushvch.clear();\n+                    return str;\n+                    }\n+                pushvch.clear();\n+            }\n             //! if vch can't be encoded correctly as a number, treat it as hex data.\n             if (vch.size() <= static_cast<vector<unsigned char>::size_type>(4)) {\n                 try {"
      }
    ]
  },
  {
    "sha": "d5a47e3811399de92cef906ccccb71df8648c688",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNWE0N2UzODExMzk5ZGU5MmNlZjkwNmNjY2NiNzFkZjg2NDhjNjg4",
    "commit": {
      "author": {
        "name": "fivepiece",
        "email": "fivepiece@users.noreply.github.com",
        "date": "2016-08-28T11:07:09Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2016-08-28T11:07:09Z"
      },
      "message": "Merge pull request #1 from fivepiece/fixasm2\n\nAdd handling of big pushops in fixasm",
      "tree": {
        "sha": "34745e4616f0c74173a807e4103fd99b13d3696f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/34745e4616f0c74173a807e4103fd99b13d3696f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d5a47e3811399de92cef906ccccb71df8648c688",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5a47e3811399de92cef906ccccb71df8648c688",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d5a47e3811399de92cef906ccccb71df8648c688",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5a47e3811399de92cef906ccccb71df8648c688/comments",
    "author": {
      "login": "fivepiece",
      "id": 5624963,
      "node_id": "MDQ6VXNlcjU2MjQ5NjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5624963?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fivepiece",
      "html_url": "https://github.com/fivepiece",
      "followers_url": "https://api.github.com/users/fivepiece/followers",
      "following_url": "https://api.github.com/users/fivepiece/following{/other_user}",
      "gists_url": "https://api.github.com/users/fivepiece/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fivepiece/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fivepiece/subscriptions",
      "organizations_url": "https://api.github.com/users/fivepiece/orgs",
      "repos_url": "https://api.github.com/users/fivepiece/repos",
      "events_url": "https://api.github.com/users/fivepiece/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fivepiece/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "72208adc7263babb889ef230dcaa79b8beb5291d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72208adc7263babb889ef230dcaa79b8beb5291d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/72208adc7263babb889ef230dcaa79b8beb5291d"
      },
      {
        "sha": "277eb796cde49e199b3be80f7c404dd371f36adb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/277eb796cde49e199b3be80f7c404dd371f36adb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/277eb796cde49e199b3be80f7c404dd371f36adb"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 14,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c1d7067a6f7bf530f9213281c461340798714c1d",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5a47e3811399de92cef906ccccb71df8648c688/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5a47e3811399de92cef906ccccb71df8648c688/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=d5a47e3811399de92cef906ccccb71df8648c688",
        "patch": "@@ -87,6 +87,20 @@ string ScriptToAsmStr(const CScript& script, const bool fAttemptSighashDecode)\n             return str;\n         }\n         if (0 <= opcode && opcode <= OP_PUSHDATA4) {\n+            ///\n+            /// we find big push opcodes that are incorrectly applied to small data \n+            /// by creating a temporary script that pushes the data correctly, then\n+            /// checking if our own push opcode matches the one in the temporary script\n+            ///\n+            if (OP_PUSHDATA1 <= opcode && opcode <= OP_PUSHDATA4) {\n+                CScript pushvch = CScript() << vch;\n+                if (!pushvch.Find(opcode)) {\n+                    str += \"[error]\";\n+                    pushvch.clear();\n+                    return str;\n+                    }\n+                pushvch.clear();\n+            }\n             //! if vch can't be encoded correctly as a number, treat it as hex data.\n             if (vch.size() <= static_cast<vector<unsigned char>::size_type>(4)) {\n                 try {"
      }
    ]
  }
]