[
  {
    "sha": "07c493f2d1053d6a1c7d0ca1650da7b6f94c8948",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowN2M0OTNmMmQxMDUzZDZhMWM3ZDBjYTE2NTBkYTdiNmY5NGM4OTQ4",
    "commit": {
      "author": {
        "name": "wodry",
        "email": "wodry@users.noreply.github.com",
        "date": "2018-07-02T09:37:59Z"
      },
      "committer": {
        "name": "wodry",
        "email": "wodry@users.noreply.github.com",
        "date": "2018-07-02T14:41:13Z"
      },
      "message": "scripted-diff: Replace NET_TOR with NET_ONION\n\n-BEGIN VERIFY SCRIPT-\n\nsed --in-place'' --expression='s/NET_TOR/NET_ONION/g' $(git grep -I --files-with-matches 'NET_TOR')\n\n-END VERIFY SCRIPT-\n\nThe --in-place'' hack is required for sed on macOS to edit files in-place without passing a backup extension.",
      "tree": {
        "sha": "b5665cf7a662eff21e3052d861da285fe9fea43a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b5665cf7a662eff21e3052d861da285fe9fea43a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07c493f2d1053d6a1c7d0ca1650da7b6f94c8948",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07c493f2d1053d6a1c7d0ca1650da7b6f94c8948",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/07c493f2d1053d6a1c7d0ca1650da7b6f94c8948",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07c493f2d1053d6a1c7d0ca1650da7b6f94c8948/comments",
    "author": {
      "login": "wodry",
      "id": 8447873,
      "node_id": "MDQ6VXNlcjg0NDc4NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8447873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wodry",
      "html_url": "https://github.com/wodry",
      "followers_url": "https://api.github.com/users/wodry/followers",
      "following_url": "https://api.github.com/users/wodry/following{/other_user}",
      "gists_url": "https://api.github.com/users/wodry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wodry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wodry/subscriptions",
      "organizations_url": "https://api.github.com/users/wodry/orgs",
      "repos_url": "https://api.github.com/users/wodry/repos",
      "events_url": "https://api.github.com/users/wodry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wodry/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "wodry",
      "id": 8447873,
      "node_id": "MDQ6VXNlcjg0NDc4NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8447873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wodry",
      "html_url": "https://github.com/wodry",
      "followers_url": "https://api.github.com/users/wodry/followers",
      "following_url": "https://api.github.com/users/wodry/following{/other_user}",
      "gists_url": "https://api.github.com/users/wodry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wodry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wodry/subscriptions",
      "organizations_url": "https://api.github.com/users/wodry/orgs",
      "repos_url": "https://api.github.com/users/wodry/repos",
      "events_url": "https://api.github.com/users/wodry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wodry/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "686e97a0c7358291d628213447cf33e99cde7ce8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/686e97a0c7358291d628213447cf33e99cde7ce8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/686e97a0c7358291d628213447cf33e99cde7ce8"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 20,
      "deletions": 20
    },
    "files": [
      {
        "sha": "15f77678739cc4adc088318a61c17e5984e3bbd9",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07c493f2d1053d6a1c7d0ca1650da7b6f94c8948/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07c493f2d1053d6a1c7d0ca1650da7b6f94c8948/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=07c493f2d1053d6a1c7d0ca1650da7b6f94c8948",
        "patch": "@@ -1358,7 +1358,7 @@ bool AppInitMain()\n     // -proxy sets a proxy for all outgoing network traffic\n     // -noproxy (or -proxy=0) as well as the empty string can be used to not set a proxy, this is the default\n     std::string proxyArg = gArgs.GetArg(\"-proxy\", \"\");\n-    SetLimited(NET_TOR);\n+    SetLimited(NET_ONION);\n     if (proxyArg != \"\" && proxyArg != \"0\") {\n         CService proxyAddr;\n         if (!Lookup(proxyArg.c_str(), proxyAddr, 9050, fNameLookup)) {\n@@ -1371,9 +1371,9 @@ bool AppInitMain()\n \n         SetProxy(NET_IPV4, addrProxy);\n         SetProxy(NET_IPV6, addrProxy);\n-        SetProxy(NET_TOR, addrProxy);\n+        SetProxy(NET_ONION, addrProxy);\n         SetNameProxy(addrProxy);\n-        SetLimited(NET_TOR, false); // by default, -proxy sets onion as reachable, unless -noonion later\n+        SetLimited(NET_ONION, false); // by default, -proxy sets onion as reachable, unless -noonion later\n     }\n \n     // -onion can be used to set only a proxy for .onion, or override normal proxy for .onion addresses\n@@ -1382,7 +1382,7 @@ bool AppInitMain()\n     std::string onionArg = gArgs.GetArg(\"-onion\", \"\");\n     if (onionArg != \"\") {\n         if (onionArg == \"0\") { // Handle -noonion/-onion=0\n-            SetLimited(NET_TOR); // set onions as unreachable\n+            SetLimited(NET_ONION); // set onions as unreachable\n         } else {\n             CService onionProxy;\n             if (!Lookup(onionArg.c_str(), onionProxy, 9050, fNameLookup)) {\n@@ -1391,8 +1391,8 @@ bool AppInitMain()\n             proxyType addrOnion = proxyType(onionProxy, proxyRandomize);\n             if (!addrOnion.IsValid())\n                 return InitError(strprintf(_(\"Invalid -onion address or hostname: '%s'\"), onionArg));\n-            SetProxy(NET_TOR, addrOnion);\n-            SetLimited(NET_TOR, false);\n+            SetProxy(NET_ONION, addrOnion);\n+            SetLimited(NET_ONION, false);\n         }\n     }\n "
      },
      {
        "sha": "5ccbabd03de438df3ca76d347977fc2b6a87337e",
        "filename": "src/netaddress.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07c493f2d1053d6a1c7d0ca1650da7b6f94c8948/src/netaddress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07c493f2d1053d6a1c7d0ca1650da7b6f94c8948/src/netaddress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.cpp?ref=07c493f2d1053d6a1c7d0ca1650da7b6f94c8948",
        "patch": "@@ -246,7 +246,7 @@ enum Network CNetAddr::GetNetwork() const\n         return NET_IPV4;\n \n     if (IsTor())\n-        return NET_TOR;\n+        return NET_ONION;\n \n     return NET_IPV6;\n }\n@@ -355,7 +355,7 @@ std::vector<unsigned char> CNetAddr::GetGroup() const\n     }\n     else if (IsTor())\n     {\n-        nClass = NET_TOR;\n+        nClass = NET_ONION;\n         nStartByte = 6;\n         nBits = 4;\n     }\n@@ -433,11 +433,11 @@ int CNetAddr::GetReachabilityFrom(const CNetAddr *paddrPartner) const\n         case NET_IPV4:   return REACH_IPV4;\n         case NET_IPV6:   return fTunnel ? REACH_IPV6_WEAK : REACH_IPV6_STRONG; // only prefer giving our IPv6 address if it's not tunnelled\n         }\n-    case NET_TOR:\n+    case NET_ONION:\n         switch(ourNet) {\n         default:         return REACH_DEFAULT;\n         case NET_IPV4:   return REACH_IPV4; // Tor users can connect to IPv4 as well\n-        case NET_TOR:    return REACH_PRIVATE;\n+        case NET_ONION:    return REACH_PRIVATE;\n         }\n     case NET_TEREDO:\n         switch(ourNet) {\n@@ -454,7 +454,7 @@ int CNetAddr::GetReachabilityFrom(const CNetAddr *paddrPartner) const\n         case NET_TEREDO:  return REACH_TEREDO;\n         case NET_IPV6:    return REACH_IPV6_WEAK;\n         case NET_IPV4:    return REACH_IPV4;\n-        case NET_TOR:     return REACH_PRIVATE; // either from Tor, or don't care about our address\n+        case NET_ONION:     return REACH_PRIVATE; // either from Tor, or don't care about our address\n         }\n     }\n }"
      },
      {
        "sha": "966bef8cdfda561155004969ea486257ff3f8f3b",
        "filename": "src/netaddress.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07c493f2d1053d6a1c7d0ca1650da7b6f94c8948/src/netaddress.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07c493f2d1053d6a1c7d0ca1650da7b6f94c8948/src/netaddress.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.h?ref=07c493f2d1053d6a1c7d0ca1650da7b6f94c8948",
        "patch": "@@ -22,7 +22,7 @@ enum Network\n     NET_UNROUTABLE = 0,\n     NET_IPV4,\n     NET_IPV6,\n-    NET_TOR,\n+    NET_ONION,\n     NET_INTERNAL,\n \n     NET_MAX,"
      },
      {
        "sha": "4ce63cb0ec776a138894c9d2c72ece1633978d67",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07c493f2d1053d6a1c7d0ca1650da7b6f94c8948/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07c493f2d1053d6a1c7d0ca1650da7b6f94c8948/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=07c493f2d1053d6a1c7d0ca1650da7b6f94c8948",
        "patch": "@@ -41,10 +41,10 @@ enum Network ParseNetwork(std::string net) {\n     boost::to_lower(net);\n     if (net == \"ipv4\") return NET_IPV4;\n     if (net == \"ipv6\") return NET_IPV6;\n-    if (net == \"onion\") return NET_TOR;\n+    if (net == \"onion\") return NET_ONION;\n     if (net == \"tor\") {\n         LogPrintf(\"Warning: net name 'tor' is deprecated and will be removed in the future. You should use 'onion' instead.\\n\");\n-        return NET_TOR;\n+        return NET_ONION;\n     }\n     return NET_UNROUTABLE;\n }\n@@ -54,7 +54,7 @@ std::string GetNetworkName(enum Network net) {\n     {\n     case NET_IPV4: return \"ipv4\";\n     case NET_IPV6: return \"ipv6\";\n-    case NET_TOR: return \"onion\";\n+    case NET_ONION: return \"onion\";\n     default: return \"\";\n     }\n }"
      },
      {
        "sha": "a57343f036287b1babbe777d73cf101d864a8ee0",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07c493f2d1053d6a1c7d0ca1650da7b6f94c8948/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07c493f2d1053d6a1c7d0ca1650da7b6f94c8948/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=07c493f2d1053d6a1c7d0ca1650da7b6f94c8948",
        "patch": "@@ -331,7 +331,7 @@ void OptionsDialog::updateDefaultProxyNets()\n     strDefaultProxyGUI = ui->proxyIp->text() + \":\" + ui->proxyPort->text();\n     (strProxy == strDefaultProxyGUI.toStdString()) ? ui->proxyReachIPv6->setChecked(true) : ui->proxyReachIPv6->setChecked(false);\n \n-    model->node().getProxy(NET_TOR, proxy);\n+    model->node().getProxy(NET_ONION, proxy);\n     strProxy = proxy.proxy.ToStringIP() + \":\" + proxy.proxy.ToStringPort();\n     strDefaultProxyGUI = ui->proxyIp->text() + \":\" + ui->proxyPort->text();\n     (strProxy == strDefaultProxyGUI.toStdString()) ? ui->proxyReachTor->setChecked(true) : ui->proxyReachTor->setChecked(false);"
      },
      {
        "sha": "bc90e5ae098213fdfd96a2b50a81b46208ea8888",
        "filename": "src/test/netbase_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07c493f2d1053d6a1c7d0ca1650da7b6f94c8948/src/test/netbase_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07c493f2d1053d6a1c7d0ca1650da7b6f94c8948/src/test/netbase_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/netbase_tests.cpp?ref=07c493f2d1053d6a1c7d0ca1650da7b6f94c8948",
        "patch": "@@ -39,7 +39,7 @@ BOOST_AUTO_TEST_CASE(netbase_networks)\n     BOOST_CHECK(ResolveIP(\"::1\").GetNetwork()                                    == NET_UNROUTABLE);\n     BOOST_CHECK(ResolveIP(\"8.8.8.8\").GetNetwork()                                == NET_IPV4);\n     BOOST_CHECK(ResolveIP(\"2001::8888\").GetNetwork()                             == NET_IPV6);\n-    BOOST_CHECK(ResolveIP(\"FD87:D87E:EB43:edb1:8e4:3588:e546:35ca\").GetNetwork() == NET_TOR);\n+    BOOST_CHECK(ResolveIP(\"FD87:D87E:EB43:edb1:8e4:3588:e546:35ca\").GetNetwork() == NET_ONION);\n     BOOST_CHECK(CreateInternal(\"foo.com\").GetNetwork()                           == NET_INTERNAL);\n \n }\n@@ -293,7 +293,7 @@ BOOST_AUTO_TEST_CASE(netbase_getgroup)\n     BOOST_CHECK(ResolveIP(\"64:FF9B::102:304\").GetGroup() == std::vector<unsigned char>({(unsigned char)NET_IPV4, 1, 2})); // RFC6052\n     BOOST_CHECK(ResolveIP(\"2002:102:304:9999:9999:9999:9999:9999\").GetGroup() == std::vector<unsigned char>({(unsigned char)NET_IPV4, 1, 2})); // RFC3964\n     BOOST_CHECK(ResolveIP(\"2001:0:9999:9999:9999:9999:FEFD:FCFB\").GetGroup() == std::vector<unsigned char>({(unsigned char)NET_IPV4, 1, 2})); // RFC4380\n-    BOOST_CHECK(ResolveIP(\"FD87:D87E:EB43:edb1:8e4:3588:e546:35ca\").GetGroup() == std::vector<unsigned char>({(unsigned char)NET_TOR, 239})); // Tor\n+    BOOST_CHECK(ResolveIP(\"FD87:D87E:EB43:edb1:8e4:3588:e546:35ca\").GetGroup() == std::vector<unsigned char>({(unsigned char)NET_ONION, 239})); // Tor\n     BOOST_CHECK(ResolveIP(\"2001:470:abcd:9999:9999:9999:9999:9999\").GetGroup() == std::vector<unsigned char>({(unsigned char)NET_IPV6, 32, 1, 4, 112, 175})); //he.net\n     BOOST_CHECK(ResolveIP(\"2001:2001:9999:9999:9999:9999:9999:9999\").GetGroup() == std::vector<unsigned char>({(unsigned char)NET_IPV6, 32, 1, 32, 1})); //IPv6\n "
      },
      {
        "sha": "1f42ab8fa86e823a3553e83441c5179540fea434",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07c493f2d1053d6a1c7d0ca1650da7b6f94c8948/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07c493f2d1053d6a1c7d0ca1650da7b6f94c8948/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=07c493f2d1053d6a1c7d0ca1650da7b6f94c8948",
        "patch": "@@ -528,8 +528,8 @@ void TorController::auth_cb(TorControlConnection& _conn, const TorControlReply&\n         if (gArgs.GetArg(\"-onion\", \"\") == \"\") {\n             CService resolved(LookupNumeric(\"127.0.0.1\", 9050));\n             proxyType addrOnion = proxyType(resolved, true);\n-            SetProxy(NET_TOR, addrOnion);\n-            SetLimited(NET_TOR, false);\n+            SetProxy(NET_ONION, addrOnion);\n+            SetLimited(NET_ONION, false);\n         }\n \n         // Finally - now create the service"
      }
    ]
  }
]