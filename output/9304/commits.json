[
  {
    "sha": "7cd990b68aba9aa9e3f9e272038ed08e8ecd8cd0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3Y2Q5OTBiNjhhYmE5YWE5ZTNmOWUyNzIwMzhlZDA4ZThlY2Q4Y2Qw",
    "commit": {
      "author": {
        "name": "Doug",
        "email": "joroark@vt.edu",
        "date": "2016-12-09T03:37:42Z"
      },
      "committer": {
        "name": "Doug",
        "email": "joroark@vt.edu",
        "date": "2016-12-17T21:24:50Z"
      },
      "message": "Allow linearization scripts to support little endian hashes\n\nCurrently, the linearization scripts require input hashes to be in big endian form. Add support for little endian hashes.",
      "tree": {
        "sha": "23267612ba110b0ebe6123b9c210f8979141fb30",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23267612ba110b0ebe6123b9c210f8979141fb30"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7cd990b68aba9aa9e3f9e272038ed08e8ecd8cd0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7cd990b68aba9aa9e3f9e272038ed08e8ecd8cd0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7cd990b68aba9aa9e3f9e272038ed08e8ecd8cd0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7cd990b68aba9aa9e3f9e272038ed08e8ecd8cd0/comments",
    "author": {
      "login": "droark",
      "id": 5931802,
      "node_id": "MDQ6VXNlcjU5MzE4MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5931802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/droark",
      "html_url": "https://github.com/droark",
      "followers_url": "https://api.github.com/users/droark/followers",
      "following_url": "https://api.github.com/users/droark/following{/other_user}",
      "gists_url": "https://api.github.com/users/droark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/droark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/droark/subscriptions",
      "organizations_url": "https://api.github.com/users/droark/orgs",
      "repos_url": "https://api.github.com/users/droark/repos",
      "events_url": "https://api.github.com/users/droark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/droark/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "droark",
      "id": 5931802,
      "node_id": "MDQ6VXNlcjU5MzE4MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5931802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/droark",
      "html_url": "https://github.com/droark",
      "followers_url": "https://api.github.com/users/droark/followers",
      "following_url": "https://api.github.com/users/droark/following{/other_user}",
      "gists_url": "https://api.github.com/users/droark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/droark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/droark/subscriptions",
      "organizations_url": "https://api.github.com/users/droark/orgs",
      "repos_url": "https://api.github.com/users/droark/repos",
      "events_url": "https://api.github.com/users/droark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/droark/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b99a093afed880f23fb279c443cc6ae5e379cc43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b99a093afed880f23fb279c443cc6ae5e379cc43",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b99a093afed880f23fb279c443cc6ae5e379cc43"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 34,
      "deletions": 3
    },
    "files": [
      {
        "sha": "62602dbe4842b59f11a1f5d0b9c19a6db8355016",
        "filename": "contrib/linearize/README.md",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cd990b68aba9aa9e3f9e272038ed08e8ecd8cd0/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cd990b68aba9aa9e3f9e272038ed08e8ecd8cd0/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=7cd990b68aba9aa9e3f9e272038ed08e8ecd8cd0",
        "patch": "@@ -31,3 +31,8 @@ Optional config file setting for linearize-data:\n reaching a maximum file size.\n * \"file_timestamp\": Set each file's last-modified time to that of the\n most recent block in that file.\n+* \"rev\\_hash\\_bytes\": If true, the block hash list written by linearize-hashes.py\n+will be byte-reversed. (In other words, the hash returned by getblockhash will\n+have its bytes reversed.) False by default. Intended for generation of\n+standalone hash lists but safe to use with linearize-data.py, which will output\n+the same data no matter which byte format is chosen."
      },
      {
        "sha": "ab001731077c8e5ffe394aaae8402da47ddf2e09",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cd990b68aba9aa9e3f9e272038ed08e8ecd8cd0/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cd990b68aba9aa9e3f9e272038ed08e8ecd8cd0/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=7cd990b68aba9aa9e3f9e272038ed08e8ecd8cd0",
        "patch": "@@ -27,3 +27,6 @@ split_year=1\n \n # Maxmimum size in bytes of out-of-order blocks cache in memory\n out_of_order_cache_sz = 100000000\n+\n+# Do we want the reverse the hash bytes coming from getblockhash?\n+rev_hash_bytes = False"
      },
      {
        "sha": "f5feee138e6d9849e78c6016653699540ce571cb",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cd990b68aba9aa9e3f9e272038ed08e8ecd8cd0/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cd990b68aba9aa9e3f9e272038ed08e8ecd8cd0/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=7cd990b68aba9aa9e3f9e272038ed08e8ecd8cd0",
        "patch": "@@ -23,6 +23,12 @@\n \n settings = {}\n \n+##### Switch endian-ness #####\n+def hex_switchEndian(s):\n+\t\"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n+\tpairList = [s[i]+s[i+1] for i in range(0,len(s),2)]\n+\treturn ''.join(pairList[::-1])\n+\n def uint32(x):\n \treturn x & 0xffffffffL\n \n@@ -74,6 +80,8 @@ def get_block_hashes(settings):\n \tf = open(settings['hashlist'], \"r\")\n \tfor line in f:\n \t\tline = line.rstrip()\n+\t\tif settings['rev_hash_bytes'] == 'true':\n+\t\t\tline = hex_switchEndian(line)\n \t\tblkindex.append(line)\n \n \tprint(\"Read \" + str(len(blkindex)) + \" hashes\")\n@@ -281,6 +289,11 @@ def run(self):\n \t\tsettings['max_out_sz'] = 1000L * 1000 * 1000\n \tif 'out_of_order_cache_sz' not in settings:\n \t\tsettings['out_of_order_cache_sz'] = 100 * 1000 * 1000\n+\tif 'rev_hash_bytes' not in settings:\n+\t\tsettings['rev_hash_bytes'] = 'false'\n+\n+\t# Force hash byte format setting to be lowercase to make comparisons easier.\n+\tsettings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n \n \tsettings['max_out_sz'] = long(settings['max_out_sz'])\n \tsettings['split_timestamp'] = int(settings['split_timestamp'])\n@@ -299,5 +312,3 @@ def run(self):\n \t\tprint(\"Genesis block not found in hashlist\")\n \telse:\n \t\tBlockDataCopier(settings, blkindex, blkmap).run()\n-\n-"
      },
      {
        "sha": "ba1850bac94178fa20c0e0c04d58354c2d169452",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cd990b68aba9aa9e3f9e272038ed08e8ecd8cd0/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cd990b68aba9aa9e3f9e272038ed08e8ecd8cd0/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=7cd990b68aba9aa9e3f9e272038ed08e8ecd8cd0",
        "patch": "@@ -17,6 +17,12 @@\n \n settings = {}\n \n+##### Switch endian-ness #####\n+def hex_switchEndian(s):\n+\t\"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n+\tpairList = [s[i]+s[i+1] for i in range(0,len(s),2)]\n+\treturn ''.join(pairList[::-1])\n+\n class BitcoinRPC:\n \tdef __init__(self, host, port, username, password):\n \t\tauthpair = \"%s:%s\" % (username, password)\n@@ -70,6 +76,8 @@ def get_block_hashes(settings, max_blocks_per_call=10000):\n \t\t\t\tprint('JSON-RPC: error at height', height+x, ': ', resp_obj['error'], file=sys.stderr)\n \t\t\t\texit(1)\n \t\t\tassert(resp_obj['id'] == x) # assume replies are in-sequence\n+\t\t\tif settings['rev_hash_bytes'] == 'true':\n+\t\t\t\tresp_obj['result'] = hex_switchEndian(resp_obj['result'])\n \t\t\tprint(resp_obj['result'])\n \n \t\theight += num_blocks\n@@ -101,6 +109,8 @@ def get_block_hashes(settings, max_blocks_per_call=10000):\n \t\tsettings['min_height'] = 0\n \tif 'max_height' not in settings:\n \t\tsettings['max_height'] = 313000\n+\tif 'rev_hash_bytes' not in settings:\n+\t\tsettings['rev_hash_bytes'] = 'false'\n \tif 'rpcuser' not in settings or 'rpcpassword' not in settings:\n \t\tprint(\"Missing username and/or password in cfg file\", file=stderr)\n \t\tsys.exit(1)\n@@ -109,5 +119,7 @@ def get_block_hashes(settings, max_blocks_per_call=10000):\n \tsettings['min_height'] = int(settings['min_height'])\n \tsettings['max_height'] = int(settings['max_height'])\n \n-\tget_block_hashes(settings)\n+\t# Force hash byte format setting to be lowercase to make comparisons easier.\n+\tsettings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n \n+\tget_block_hashes(settings)"
      }
    ]
  }
]