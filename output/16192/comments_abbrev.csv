MarcoFalke,2019-06-12 10:04:11,ACK. Don't forget to update the help text for the option and add some release notes. A test would be nice.,https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-501206655,501206655,
gertjaap,2019-06-12 12:38:41,"@MarcoFalke the help text already contains `...setting this too low may abort large transactions.`. It feels redundant to add something like `If this maximum makes the fee per kB for a transaction lower than -mintxfee, it will be aborted.`?\n\nHow do I add release notes?",https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-501254294,501254294,
MarcoFalke,2019-06-12 12:44:19,"To add release notes run `vim doc/release-notes-16192.md` and type\n\n```\nWallet\n------\n\n- blabla",https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-501256189,501256189,
kristapsk,2019-06-12 13:04:03,"Would like to have a test for this too, otherwise ACK.",https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-501263370,501263370,
promag,2019-06-12 13:10:58,I think a test must be added.,https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-501266076,501266076,
Empact,2019-06-12 13:45:41,Concept ACK - please add test,https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-501280227,501280227,
gertjaap,2019-06-12 13:52:03,"While writing the test I realized that it makes sense to check both the `-paytxfee` and `-mintxfee` settings. When capping the fee on `-maxtxfee`, it should still be above both, imo?",https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-501282880,501282880,
Empact,2019-06-12 14:20:28,"https://github.com/bitcoin/bitcoin/pull/16192/commits/58ac729278b71a0fc3d4795777593ffd266dfc2a is unnecessary as the condition will short-circuit. I.e. `GetFee` already won't be called if the reason is different.\n\n> For the built-in logical AND operator, the result is true if both operands are true. Otherwise, the result is false. This operator is short-circuiting: if the first operand is fals",https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-501295651,501295651,
gertjaap,2019-06-12 14:24:54,@Empact you're right. Wouldn't it still run the comparison twice in situations where `feeCalc.reason != FeeReason::MAXTXFEE` ,https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-501297640,501297640,
Empact,2019-06-12 14:49:23,"> Wouldn't it still run the comparison twice in situations where feeCalc.reason != FeeReason::MAXTXFEE\n\nWould expect it to be optimized out by essentially any compiler.",https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-501308439,501308439,
gertjaap,2019-06-12 16:05:33,"OK, I can revert it if that's desirable. Any pointers as to why `example_test.py` is failing? \n\nEDIT: Never mind, it succeeded on the next check-in - must have been some transient issue",https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-501342492,501342492,
fanquake,2019-06-13 07:51:32,Please squash your commits when you've finished addressing review comments.,https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-501591881,501591881,
gertjaap,2019-06-13 08:35:08,@fanquake Done!,https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-501606663,501606663,
Empact,2019-06-14 14:12:52,"```\nwallet/test/wallet_tests.cpp:49:25: warning: unused variable 'result' [-Wunused-variable]\n    CWallet::ScanResult result = wallet->ScanForWalletTransactions(::ChainActive().Genesis()->GetBlockHash(), {} /* stop_block */, reserver, false /* update */);\n```\n\nCould use:\n\n```\nBOOST_CHECK_EQUAL(result.status, CWallet::ScanResult::SUCCESS);\n```\n\n(line numbers are off because I ",https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-502124927,502124927,
gertjaap,2019-06-14 16:03:05,Fixed that in the test. Did however not get that warning myself while compiling (using `gcc` version 7.4),https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-502166347,502166347,
Empact,2019-06-14 16:08:18,"FTR I'm running with:\n\n```\n$ gcc --version\nApple LLVM version 10.0.1 (clang-1001.0.46.4)\nTarget: x86_64-apple-darwin18.6.0\n```",https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-502168200,502168200,
gertjaap,2019-06-20 14:29:13,Added a functional test as well.,https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-504048175,504048175,
gertjaap,2019-06-20 16:06:53,I think this is ready for a final review,https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-504086438,504086438,
MarcoFalke,2019-06-20 17:04:30,"There is some trailing white-space in some files, which is why travis failed.",https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-504105722,504105722,
Sjors,2019-06-21 01:48:01,See also #16257 which removes the fee cap entirely and instead throws if `-maxtxfee` is exceeded.,https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-504258257,504258257,
meshcollider,2019-06-27 22:21:37,@gertjaap appreciate your work! But I think we will close this in favour of #16257 because it seems like it is much safer in general and solves this issue in the process. Thanks for contributing :),https://github.com/bitcoin/bitcoin/pull/16192#issuecomment-506532468,506532468,
promag,2019-06-12 14:10:35,remove `else`.,https://github.com/bitcoin/bitcoin/pull/16192#discussion_r292935259,292935259,src/wallet/wallet.cpp
promag,2019-06-12 14:12:08,"nit, remove unnecessary lines.",https://github.com/bitcoin/bitcoin/pull/16192#discussion_r292936245,292936245,src/wallet/test/wallet_tests.cpp
promag,2019-06-12 15:23:27,Remove `else`?,https://github.com/bitcoin/bitcoin/pull/16192#discussion_r292975848,292975848,src/wallet/wallet.cpp
promag,2019-06-12 15:24:25,Is it me or this message is kind of confusing? Is it worth mentioning `fit in the maximum fee`?,https://github.com/bitcoin/bitcoin/pull/16192#discussion_r292976393,292976393,src/wallet/wallet.cpp
promag,2019-06-12 15:29:18,How about `Currently the wallet caps fees at ...`? ,https://github.com/bitcoin/bitcoin/pull/16192#discussion_r292979257,292979257,doc/release-notes-16192.md
gertjaap,2019-06-12 16:23:57,Adjusted,https://github.com/bitcoin/bitcoin/pull/16192#discussion_r293005375,293005375,doc/release-notes-16192.md
gertjaap,2019-06-12 16:24:10,Adjusted,https://github.com/bitcoin/bitcoin/pull/16192#discussion_r293005465,293005465,src/wallet/wallet.cpp
gertjaap,2019-06-12 16:24:18,Adjusted,https://github.com/bitcoin/bitcoin/pull/16192#discussion_r293005537,293005537,src/wallet/test/wallet_tests.cpp
gertjaap,2019-06-12 16:24:25,Adjusted,https://github.com/bitcoin/bitcoin/pull/16192#discussion_r293005592,293005592,src/wallet/wallet.cpp
gertjaap,2019-06-12 16:28:32,"It is a tad confusing, but by removing the `...to fit in the maximum fee...` etc would make it collide with [this](https://github.com/bitcoin/bitcoin/blob/5f508cd31431010811954785c1a8708dd13e0402/src/wallet/wallet.cpp#L3085). It's the combination of size and fee parameters that makes it fail - not _just_ the size. ",https://github.com/bitcoin/bitcoin/pull/16192#discussion_r293007394,293007394,src/wallet/wallet.cpp
promag,2019-06-12 19:22:08,"nit, use `BOOST_CHECK_EQUAL(error, ...)`.",https://github.com/bitcoin/bitcoin/pull/16192#discussion_r293077528,293077528,src/wallet/test/wallet_tests.cpp
promag,2019-06-12 19:26:03,I think I didn't explain well. I mean something as simple as `fee rate too low`?,https://github.com/bitcoin/bitcoin/pull/16192#discussion_r293079031,293079031,src/wallet/wallet.cpp
gertjaap,2019-06-13 06:21:16,Adjusted,https://github.com/bitcoin/bitcoin/pull/16192#discussion_r293220942,293220942,src/wallet/test/wallet_tests.cpp
gertjaap,2019-06-13 06:22:41,"Changed to `Fee rate too low after limiting to -maxtxfee`. Just specifying `fee rate too low` could get people thinking _they_ configured it too low, which is not necessarily the case. Increasing the configured fee would make the problem worse.",https://github.com/bitcoin/bitcoin/pull/16192#discussion_r293221221,293221221,src/wallet/wallet.cpp
promag,2019-06-13 22:09:18,"nit, missing space after `,` in a couple of places.",https://github.com/bitcoin/bitcoin/pull/16192#discussion_r293596066,293596066,src/wallet/test/wallet_tests.cpp
MarcoFalke,2019-06-14 09:54:23,Don't forget to install `clang-format` and run the https://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy script to preempt whitespace nitpicking.,https://github.com/bitcoin/bitcoin/pull/16192#discussion_r293740251,293740251,src/wallet/test/wallet_tests.cpp
gertjaap,2019-06-14 11:31:25,"Thanks! Ran it, squashed & pushed.",https://github.com/bitcoin/bitcoin/pull/16192#discussion_r293769143,293769143,src/wallet/test/wallet_tests.cpp
MarcoFalke,2019-06-20 17:04:06,"```suggestion\n\n```",https://github.com/bitcoin/bitcoin/pull/16192#discussion_r295905217,295905217,test/functional/wallet_maxtxfee.py
gertjaap,2019-06-20 18:51:46,"Fixed the linting errors, sorry about that. I managed to figure out how to run these locally before I commit now. So this shouldn't happen to me again.",https://github.com/bitcoin/bitcoin/pull/16192#discussion_r295948562,295948562,test/functional/wallet_maxtxfee.py
