[
  {
    "sha": "5a1726517b5c088b4089e3335a05e5da79af8294",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YTE3MjY1MTdiNWMwODhiNDA4OWUzMzM1YTA1ZTVkYTc5YWY4Mjk0",
    "commit": {
      "author": {
        "name": "Gert-Jaap Glasbergen",
        "email": "gertjaap@gertjaap.org",
        "date": "2019-06-14T16:01:29Z"
      },
      "committer": {
        "name": "Gert-Jaap Glasbergen",
        "email": "gertjaap@gertjaap.nl",
        "date": "2019-06-20T18:50:10Z"
      },
      "message": "Catches a cap on maxtxfee making the fee too low",
      "tree": {
        "sha": "8d1a6a9cee0829e29e60e85ccffe898d76341ff0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d1a6a9cee0829e29e60e85ccffe898d76341ff0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a1726517b5c088b4089e3335a05e5da79af8294",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a1726517b5c088b4089e3335a05e5da79af8294",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5a1726517b5c088b4089e3335a05e5da79af8294",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a1726517b5c088b4089e3335a05e5da79af8294/comments",
    "author": {
      "login": "gertjaap",
      "id": 4141625,
      "node_id": "MDQ6VXNlcjQxNDE2MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4141625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gertjaap",
      "html_url": "https://github.com/gertjaap",
      "followers_url": "https://api.github.com/users/gertjaap/followers",
      "following_url": "https://api.github.com/users/gertjaap/following{/other_user}",
      "gists_url": "https://api.github.com/users/gertjaap/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gertjaap/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gertjaap/subscriptions",
      "organizations_url": "https://api.github.com/users/gertjaap/orgs",
      "repos_url": "https://api.github.com/users/gertjaap/repos",
      "events_url": "https://api.github.com/users/gertjaap/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gertjaap/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gertjaap",
      "id": 4141625,
      "node_id": "MDQ6VXNlcjQxNDE2MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4141625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gertjaap",
      "html_url": "https://github.com/gertjaap",
      "followers_url": "https://api.github.com/users/gertjaap/followers",
      "following_url": "https://api.github.com/users/gertjaap/following{/other_user}",
      "gists_url": "https://api.github.com/users/gertjaap/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gertjaap/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gertjaap/subscriptions",
      "organizations_url": "https://api.github.com/users/gertjaap/orgs",
      "repos_url": "https://api.github.com/users/gertjaap/repos",
      "events_url": "https://api.github.com/users/gertjaap/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gertjaap/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7524376a81a1955f4da4adb23005f2122b18a270",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7524376a81a1955f4da4adb23005f2122b18a270",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7524376a81a1955f4da4adb23005f2122b18a270"
      }
    ],
    "stats": {
      "total": 121,
      "additions": 121,
      "deletions": 0
    },
    "files": [
      {
        "sha": "34ea54a6eb7e6cc09fe76c7de14444f56c10948b",
        "filename": "doc/release-notes-16192.md",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a1726517b5c088b4089e3335a05e5da79af8294/doc/release-notes-16192.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a1726517b5c088b4089e3335a05e5da79af8294/doc/release-notes-16192.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-16192.md?ref=5a1726517b5c088b4089e3335a05e5da79af8294",
        "patch": "@@ -0,0 +1,12 @@\n+Wallet: Transaction fees\n+------------------------\n+\n+Currently the wallet caps fees at `-maxtxfee=<x>` (default: \n+0.10) BTC. A user can set the minimum fee rate for all \n+transactions with `-mintxfee=<i>`, which defaults to \n+1000 satoshis per kB. Users can also decide to pay a \n+predefined fee rate by setting `-paytxfee=<n>` (or \n+`settxfee <n>` rpc during runtime). These settings could \n+conflict with one another. If capping at `-maxtxfee` would \n+render the fee lower than `-mintxfee` per kB or `-paytxfee`\n+per kB, the wallet will now return an error.\n\\ No newline at end of file"
      },
      {
        "sha": "ddd6fc41d000153fb4313a0e29f7b29064ee2629",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a1726517b5c088b4089e3335a05e5da79af8294/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a1726517b5c088b4089e3335a05e5da79af8294/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=5a1726517b5c088b4089e3335a05e5da79af8294",
        "patch": "@@ -470,6 +470,60 @@ BOOST_FIXTURE_TEST_CASE(wallet_disableprivkeys, TestChain100Setup)\n     BOOST_CHECK(!wallet->GetKeyFromPool(pubkey, false));\n }\n \n+// This tests the possible conflict between maxtxfee and mintxfee/paytxfee\n+BOOST_FIXTURE_TEST_CASE(wallet_maxfee, TestChain100Setup)\n+{\n+    // Mine a block, setup the wallet and scan to get some balance\n+    CreateAndProcessBlock({}, GetScriptForRawPubKey(coinbaseKey.GetPubKey()));\n+    auto chain = interfaces::MakeChain();\n+    std::shared_ptr<CWallet> wallet = std::make_shared<CWallet>(chain.get(), WalletLocation(), WalletDatabase::CreateMock());\n+    bool firstRun;\n+    wallet->LoadWallet(firstRun);\n+    AddKey(*wallet, coinbaseKey);\n+    WalletRescanReserver reserver(wallet.get());\n+    reserver.reserve();\n+    CWallet::ScanResult result = wallet->ScanForWalletTransactions(::ChainActive().Genesis()->GetBlockHash(), {} /* stop_block */, reserver, false /* update */);\n+    BOOST_CHECK_EQUAL(result.status, CWallet::ScanResult::SUCCESS);\n+\n+    // Create a transaction with a lot of outputs so it's big enough to trigger the error at\n+    // the configured paytxfee and mintxfee levels.\n+    std::vector<CRecipient> recips = {};\n+    recips.resize(8000, CRecipient{GetScriptForRawPubKey({}), 5000, false /* subtract fee */});\n+\n+    // First try a normal transaction. This should succeed.\n+    CTransactionRef tx;\n+    CReserveKey reservekey(wallet.get());\n+    CAmount fee;\n+    int changePos = -1;\n+    std::string error;\n+    CCoinControl dummy;\n+    {\n+        auto locked_chain = chain->lock();\n+        bool result = wallet->CreateTransaction(*locked_chain, recips, tx, reservekey, fee, changePos, error, dummy);\n+        BOOST_CHECK(result);\n+    }\n+\n+    // Then increase m_pay_tx_fee to a height that ensures the transaction's fee, when capped at maxtxfee, is lower than\n+    // m_pay_tx_fee per kB\n+    wallet->m_pay_tx_fee = CFeeRate(CAmount(5000000));\n+    {\n+        auto locked_chain = chain->lock();\n+        bool result = wallet->CreateTransaction(*locked_chain, recips, tx, reservekey, fee, changePos, error, dummy);\n+        BOOST_CHECK(!result);\n+        BOOST_CHECK_EQUAL(error, \"Fee rate too low after limiting to -maxtxfee\");\n+    }\n+\n+    // Reset m_pay_tx_fee to the default and then increase m_min_fee. Should trigger the same error\n+    wallet->m_pay_tx_fee = CFeeRate(CAmount(0));\n+    wallet->m_min_fee = CFeeRate(CAmount(5000000));\n+    {\n+        auto locked_chain = chain->lock();\n+        bool result = wallet->CreateTransaction(*locked_chain, recips, tx, reservekey, fee, changePos, error, dummy);\n+        BOOST_CHECK(!result);\n+        BOOST_CHECK_EQUAL(error, \"Fee rate too low after limiting to -maxtxfee\");\n+    }\n+}\n+\n // Explicit calculation which is used to test the wallet constant\n // We get the same virtual size due to rounding(weight/4) for both use_max_sig values\n static size_t CalculateNestedKeyhashInputSize(bool use_max_sig)"
      },
      {
        "sha": "d56c565d6c2a02a386a801b932b860a7c62d4740",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a1726517b5c088b4089e3335a05e5da79af8294/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a1726517b5c088b4089e3335a05e5da79af8294/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=5a1726517b5c088b4089e3335a05e5da79af8294",
        "patch": "@@ -2959,6 +2959,19 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n                     return false;\n                 }\n \n+                // If the fee was capped to MAXTXFEE and this results in a too low fee rate given our current\n+                // configuration, abort.\n+                if (feeCalc.reason == FeeReason::MAXTXFEE) {\n+                    if (nFeeNeeded < m_pay_tx_fee.GetFee(nBytes)) {\n+                        strFailReason = _(\"Fee rate too low after limiting to -maxtxfee\");\n+                        return false;\n+                    }\n+                    if (nFeeNeeded < m_min_fee.GetFee(nBytes)) {\n+                        strFailReason = _(\"Fee rate too low after limiting to -maxtxfee\");\n+                        return false;\n+                    }\n+                }\n+\n                 if (nFeeRet >= nFeeNeeded) {\n                     // Reduce fee to only the needed amount if possible. This\n                     // prevents potential overpayment in fees if the coins"
      },
      {
        "sha": "af3ea374820733f4205d7e14963aeb1a49af2804",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a1726517b5c088b4089e3335a05e5da79af8294/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a1726517b5c088b4089e3335a05e5da79af8294/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=5a1726517b5c088b4089e3335a05e5da79af8294",
        "patch": "@@ -139,6 +139,7 @@\n     'rpc_deprecated.py',\n     'wallet_disable.py',\n     'rpc_net.py',\n+    'wallet_maxtxfee.py',\n     'wallet_keypool.py',\n     'p2p_mempool.py',\n     'p2p_blocksonly.py',"
      },
      {
        "sha": "4da0fb0405626cb747b4fb73ceebad39e52c3000",
        "filename": "test/functional/wallet_maxtxfee.py",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a1726517b5c088b4089e3335a05e5da79af8294/test/functional/wallet_maxtxfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a1726517b5c088b4089e3335a05e5da79af8294/test/functional/wallet_maxtxfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_maxtxfee.py?ref=5a1726517b5c088b4089e3335a05e5da79af8294",
        "patch": "@@ -0,0 +1,41 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test wallet maxtxfee limiting in conjunction with settxfee or mintxfee.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_raises_rpc_error\n+\n+class WalletMaxFeeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.nodes[0].generate(105)\n+\n+        outputs = {}\n+\n+        for i in range(10):\n+            outputs[self.nodes[0].getnewaddress()] = 0.001\n+\n+        # test sending a tx with normal fee parameters (must work)\n+        self.nodes[0].sendmany(\"\",outputs)\n+\n+        # test sending a tx with very low max fee (must still work)\n+        self.restart_node(0, extra_args=[\"-maxtxfee=0.0001\"])\n+        self.nodes[0].sendmany(\"\",outputs)\n+\n+        # test sending a tx with very low max fee and a high paytxfee (must fail)\n+        self.restart_node(0, extra_args=[\"-maxtxfee=0.0001\",\"-paytxfee=0.0005\"])\n+        assert_raises_rpc_error(-6, \"Fee rate too low after limiting to -maxtxfee\", lambda: self.nodes[0].sendmany(\"\",outputs))\n+\n+        # test sending a tx with very low max fee and a high mintxfee (must fail)\n+        self.restart_node(0, extra_args=[\"-maxtxfee=0.0001\",\"-mintxfee=0.0005\"])\n+        assert_raises_rpc_error(-6, \"Fee rate too low after limiting to -maxtxfee\", lambda: self.nodes[0].sendmany(\"\",outputs))\n+\n+if __name__ == '__main__':\n+    WalletMaxFeeTest().main()"
      }
    ]
  }
]