[
  {
    "sha": "f0bf5fb2453a8c6a089cf0e4e000558efe97620a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMGJmNWZiMjQ1M2E4YzZhMDg5Y2YwZTRlMDAwNTU4ZWZlOTc2MjBh",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2012-12-17T10:09:53Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2012-12-17T10:09:53Z"
      },
      "message": "Fix two typos in main.h\n\nBreak one long comment down into 3 lines so it's readable.",
      "tree": {
        "sha": "7dbaebd2ac7768d918e6a358d3be04ef682c4989",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7dbaebd2ac7768d918e6a358d3be04ef682c4989"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f0bf5fb2453a8c6a089cf0e4e000558efe97620a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0bf5fb2453a8c6a089cf0e4e000558efe97620a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f0bf5fb2453a8c6a089cf0e4e000558efe97620a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0bf5fb2453a8c6a089cf0e4e000558efe97620a/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da8c5c9f4ebedfd50e6c31cee3ec0b1a25f930b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da8c5c9f4ebedfd50e6c31cee3ec0b1a25f930b7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da8c5c9f4ebedfd50e6c31cee3ec0b1a25f930b7"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "1ee7a999344c92ea1da320dae572cc87fd9b41ab",
        "filename": "src/bignum.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f0bf5fb2453a8c6a089cf0e4e000558efe97620a/src/bignum.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f0bf5fb2453a8c6a089cf0e4e000558efe97620a/src/bignum.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bignum.h?ref=f0bf5fb2453a8c6a089cf0e4e000558efe97620a",
        "patch": "@@ -131,7 +131,9 @@ class CBigNum : public BIGNUM\n \n         if (sn < (int64)0)\n         {\n-            // Since the minimum signed integer cannot be represented as positive so long as its type is signed, and it's not well-defined what happens if you make it unsigned before negating it, we instead increment the negative integer by 1, convert it, then increment the (now positive) unsigned integer by 1 to compensate\n+            // Since the minimum signed integer cannot be represented as positive so long as its type is signed, \n+            // and it's not well-defined what happens if you make it unsigned before negating it,\n+            // we instead increment the negative integer by 1, convert it, then increment the (now positive) unsigned integer by 1 to compensate\n             n = -(sn + 1);\n             ++n;\n             fNegative = true;"
      },
      {
        "sha": "8bceffbaf92a642e12edb387d4315eebc53356d2",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f0bf5fb2453a8c6a089cf0e4e000558efe97620a/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f0bf5fb2453a8c6a089cf0e4e000558efe97620a/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=f0bf5fb2453a8c6a089cf0e4e000558efe97620a",
        "patch": "@@ -152,7 +152,7 @@ bool CheckProofOfWork(uint256 hash, unsigned int nBits);\n unsigned int ComputeMinWork(unsigned int nBase, int64 nTime);\n /** Get the number of active peers */\n int GetNumBlocksOfPeers();\n-/** Check whether we are doin an inital block download (synchronizing from disk or network) */\n+/** Check whether we are doing an initial block download (synchronizing from disk or network) */\n bool IsInitialBlockDownload();\n /** Format a string that describes several potential problems detected by the core */\n std::string GetWarnings(std::string strFor);"
      }
    ]
  }
]